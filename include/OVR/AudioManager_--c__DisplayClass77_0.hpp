// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OVR.AudioManager
#include "OVR/AudioManager.hpp"
// Including type: OVR.SoundPriority
#include "OVR/SoundPriority.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: OVR
namespace OVR {
  // Forward declaring type: SoundEmitter
  class SoundEmitter;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::OVR::AudioManager::$$c__DisplayClass77_0);
DEFINE_IL2CPP_ARG_TYPE(::OVR::AudioManager::$$c__DisplayClass77_0*, "OVR", "AudioManager/<>c__DisplayClass77_0");
// Type namespace: OVR
namespace OVR {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: OVR.AudioManager/OVR.<>c__DisplayClass77_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class AudioManager::$$c__DisplayClass77_0 : public ::Il2CppObject {
    public:
    public:
    // public OVR.SoundPriority priority
    // Size: 0x4
    // Offset: 0x10
    ::OVR::SoundPriority priority;
    // Field size check
    static_assert(sizeof(::OVR::SoundPriority) == 0x4);
    public:
    // Creating conversion operator: operator ::OVR::SoundPriority
    constexpr operator ::OVR::SoundPriority() const noexcept {
      return priority;
    }
    // Get instance field reference: public OVR.SoundPriority priority
    [[deprecated("Use field access instead!")]] ::OVR::SoundPriority& dyn_priority();
    // public System.Void .ctor()
    // Offset: 0xCAED84
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AudioManager::$$c__DisplayClass77_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c__DisplayClass77_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AudioManager::$$c__DisplayClass77_0*, creationType>()));
    }
    // System.Boolean <FindFreeEmitter>b__0(OVR.SoundEmitter item)
    // Offset: 0xCAED8C
    bool $FindFreeEmitter$b__0(::OVR::SoundEmitter* item);
  }; // OVR.AudioManager/OVR.<>c__DisplayClass77_0
  #pragma pack(pop)
  static check_size<sizeof(AudioManager::$$c__DisplayClass77_0), 16 + sizeof(::OVR::SoundPriority)> __OVR_AudioManager_$$c__DisplayClass77_0SizeCheck;
  static_assert(sizeof(AudioManager::$$c__DisplayClass77_0) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: OVR::AudioManager::$$c__DisplayClass77_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: OVR::AudioManager::$$c__DisplayClass77_0::$FindFreeEmitter$b__0
// Il2CppName: <FindFreeEmitter>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (OVR::AudioManager::$$c__DisplayClass77_0::*)(::OVR::SoundEmitter*)>(&OVR::AudioManager::$$c__DisplayClass77_0::$FindFreeEmitter$b__0)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("OVR", "SoundEmitter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OVR::AudioManager::$$c__DisplayClass77_0*), "<FindFreeEmitter>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
