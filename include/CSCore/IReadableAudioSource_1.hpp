// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: CSCore.IAudioSource
#include "CSCore/IAudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: CSCore
namespace CSCore {
  // Forward declaring type: IReadableAudioSource`1<T>
  template<typename T>
  class IReadableAudioSource_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::CSCore::IReadableAudioSource_1, "CSCore", "IReadableAudioSource`1");
// Type namespace: CSCore
namespace CSCore {
  // WARNING Size may be invalid!
  // Autogenerated type: CSCore.IReadableAudioSource`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class IReadableAudioSource_1/*, public ::CSCore::IAudioSource*/ {
    public:
    // Creating interface conversion operator: operator ::CSCore::IAudioSource
    operator ::CSCore::IAudioSource() noexcept {
      return *reinterpret_cast<::CSCore::IAudioSource*>(this);
    }
    // public System.Int32 Read(T[] buffer, System.Int32 offset, System.Int32 count)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int Read(::ArrayW<T> buffer, int offset, int count) {
      static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::IReadableAudioSource_1::Read");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::IReadableAudioSource_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
    }
  }; // CSCore.IReadableAudioSource`1
  // Could not write size check! Type: CSCore.IReadableAudioSource`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
