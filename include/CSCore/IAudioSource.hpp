// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: CSCore
namespace CSCore {
  // Forward declaring type: WaveFormat
  class WaveFormat;
}
// Completed forward declares
// Type namespace: CSCore
namespace CSCore {
  // Forward declaring type: IAudioSource
  class IAudioSource;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::CSCore::IAudioSource);
DEFINE_IL2CPP_ARG_TYPE(::CSCore::IAudioSource*, "CSCore", "IAudioSource");
// Type namespace: CSCore
namespace CSCore {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: CSCore.IAudioSource
  // [TokenAttribute] Offset: FFFFFFFF
  class IAudioSource/*, public ::System::IDisposable*/ {
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // public System.Boolean get_CanSeek()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_CanSeek();
    // public CSCore.WaveFormat get_WaveFormat()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::CSCore::WaveFormat* get_WaveFormat();
    // public System.Int64 get_Position()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int64_t get_Position();
    // public System.Void set_Position(System.Int64 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Position(int64_t value);
    // public System.Int64 get_Length()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int64_t get_Length();
  }; // CSCore.IAudioSource
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: CSCore::IAudioSource::get_CanSeek
// Il2CppName: get_CanSeek
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CSCore::IAudioSource::*)()>(&CSCore::IAudioSource::get_CanSeek)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CSCore::IAudioSource*), "get_CanSeek", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CSCore::IAudioSource::get_WaveFormat
// Il2CppName: get_WaveFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::CSCore::WaveFormat* (CSCore::IAudioSource::*)()>(&CSCore::IAudioSource::get_WaveFormat)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CSCore::IAudioSource*), "get_WaveFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CSCore::IAudioSource::get_Position
// Il2CppName: get_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (CSCore::IAudioSource::*)()>(&CSCore::IAudioSource::get_Position)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CSCore::IAudioSource*), "get_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CSCore::IAudioSource::set_Position
// Il2CppName: set_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CSCore::IAudioSource::*)(int64_t)>(&CSCore::IAudioSource::set_Position)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CSCore::IAudioSource*), "set_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CSCore::IAudioSource::get_Length
// Il2CppName: get_Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (CSCore::IAudioSource::*)()>(&CSCore::IAudioSource::get_Length)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CSCore::IAudioSource*), "get_Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
