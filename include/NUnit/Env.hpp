// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: NUnit
namespace NUnit {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: NUnit.Env
  // [TokenAttribute] Offset: FFFFFFFF
  class Env : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: Env
    Env() noexcept {}
    // Get static field: static public readonly System.String NewLine
    static ::Il2CppString* _get_NewLine();
    // Set static field: static public readonly System.String NewLine
    static void _set_NewLine(::Il2CppString* value);
    // Get static field: static public System.String DocumentFolder
    static ::Il2CppString* _get_DocumentFolder();
    // Set static field: static public System.String DocumentFolder
    static void _set_DocumentFolder(::Il2CppString* value);
    // Get static field: static public readonly System.String DefaultWorkDirectory
    static ::Il2CppString* _get_DefaultWorkDirectory();
    // Set static field: static public readonly System.String DefaultWorkDirectory
    static void _set_DefaultWorkDirectory(::Il2CppString* value);
    // static private System.Void .cctor()
    // Offset: 0x19266B0
    static void _cctor();
  }; // NUnit.Env
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(NUnit::Env*, "NUnit", "Env");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: NUnit::Env::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&NUnit::Env::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnit::Env*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
