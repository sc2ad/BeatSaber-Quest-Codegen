// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
// Completed forward declares
// Type namespace: NUnit.Framework.Internal.Execution
namespace NUnit::Framework::Internal::Execution {
  // Forward declaring type: EventListenerTextWriter
  class EventListenerTextWriter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::NUnit::Framework::Internal::Execution::EventListenerTextWriter);
DEFINE_IL2CPP_ARG_TYPE(::NUnit::Framework::Internal::Execution::EventListenerTextWriter*, "NUnit.Framework.Internal.Execution", "EventListenerTextWriter");
// Type namespace: NUnit.Framework.Internal.Execution
namespace NUnit::Framework::Internal::Execution {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: NUnit.Framework.Internal.Execution.EventListenerTextWriter
  // [TokenAttribute] Offset: FFFFFFFF
  class EventListenerTextWriter : public ::System::IO::TextWriter {
    public:
    public:
    // private System.IO.TextWriter _defaultWriter
    // Size: 0x8
    // Offset: 0x28
    ::System::IO::TextWriter* defaultWriter;
    // Field size check
    static_assert(sizeof(::System::IO::TextWriter*) == 0x8);
    // private System.String _streamName
    // Size: 0x8
    // Offset: 0x30
    ::StringW streamName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private System.IO.TextWriter _defaultWriter
    [[deprecated("Use field access instead!")]] ::System::IO::TextWriter*& dyn__defaultWriter();
    // Get instance field reference: private System.String _streamName
    [[deprecated("Use field access instead!")]] ::StringW& dyn__streamName();
    // public System.Void .ctor(System.String streamName, System.IO.TextWriter defaultWriter)
    // Offset: 0x1CAA170
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EventListenerTextWriter* New_ctor(::StringW streamName, ::System::IO::TextWriter* defaultWriter) {
      static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Execution::EventListenerTextWriter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EventListenerTextWriter*, creationType>(streamName, defaultWriter)));
    }
    // private System.Boolean TrySendToListener(System.String text)
    // Offset: 0x1CAA248
    bool TrySendToListener(::StringW text);
    // public override System.Text.Encoding get_Encoding()
    // Offset: 0x1CAA464
    // Implemented from: System.IO.TextWriter
    // Base method: System.Text.Encoding TextWriter::get_Encoding()
    ::System::Text::Encoding* get_Encoding();
    // public override System.Void Write(System.Char aChar)
    // Offset: 0x1CAA1F0
    // Implemented from: System.IO.TextWriter
    // Base method: System.Void TextWriter::Write(System.Char aChar)
    void Write(::Il2CppChar aChar);
    // public override System.Void Write(System.String aString)
    // Offset: 0x1CAA3A4
    // Implemented from: System.IO.TextWriter
    // Base method: System.Void TextWriter::Write(System.String aString)
    void Write(::StringW aString);
    // public override System.Void WriteLine(System.String aString)
    // Offset: 0x1CAA3F4
    // Implemented from: System.IO.TextWriter
    // Base method: System.Void TextWriter::WriteLine(System.String aString)
    void WriteLine(::StringW aString);
  }; // NUnit.Framework.Internal.Execution.EventListenerTextWriter
  #pragma pack(pop)
  static check_size<sizeof(EventListenerTextWriter), 48 + sizeof(::StringW)> __NUnit_Framework_Internal_Execution_EventListenerTextWriterSizeCheck;
  static_assert(sizeof(EventListenerTextWriter) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: NUnit::Framework::Internal::Execution::EventListenerTextWriter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: NUnit::Framework::Internal::Execution::EventListenerTextWriter::TrySendToListener
// Il2CppName: TrySendToListener
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NUnit::Framework::Internal::Execution::EventListenerTextWriter::*)(::StringW)>(&NUnit::Framework::Internal::Execution::EventListenerTextWriter::TrySendToListener)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NUnit::Framework::Internal::Execution::EventListenerTextWriter*), "TrySendToListener", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text});
  }
};
// Writing MetadataGetter for method: NUnit::Framework::Internal::Execution::EventListenerTextWriter::get_Encoding
// Il2CppName: get_Encoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (NUnit::Framework::Internal::Execution::EventListenerTextWriter::*)()>(&NUnit::Framework::Internal::Execution::EventListenerTextWriter::get_Encoding)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnit::Framework::Internal::Execution::EventListenerTextWriter*), "get_Encoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NUnit::Framework::Internal::Execution::EventListenerTextWriter::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NUnit::Framework::Internal::Execution::EventListenerTextWriter::*)(::Il2CppChar)>(&NUnit::Framework::Internal::Execution::EventListenerTextWriter::Write)> {
  static const MethodInfo* get() {
    static auto* aChar = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NUnit::Framework::Internal::Execution::EventListenerTextWriter*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aChar});
  }
};
// Writing MetadataGetter for method: NUnit::Framework::Internal::Execution::EventListenerTextWriter::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NUnit::Framework::Internal::Execution::EventListenerTextWriter::*)(::StringW)>(&NUnit::Framework::Internal::Execution::EventListenerTextWriter::Write)> {
  static const MethodInfo* get() {
    static auto* aString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NUnit::Framework::Internal::Execution::EventListenerTextWriter*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aString});
  }
};
// Writing MetadataGetter for method: NUnit::Framework::Internal::Execution::EventListenerTextWriter::WriteLine
// Il2CppName: WriteLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NUnit::Framework::Internal::Execution::EventListenerTextWriter::*)(::StringW)>(&NUnit::Framework::Internal::Execution::EventListenerTextWriter::WriteLine)> {
  static const MethodInfo* get() {
    static auto* aString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NUnit::Framework::Internal::Execution::EventListenerTextWriter*), "WriteLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aString});
  }
};
