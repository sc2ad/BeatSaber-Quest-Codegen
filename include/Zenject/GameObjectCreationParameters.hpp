// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: InjectContext
  class InjectContext;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Forward declaring type: GameObjectCreationParameters
  class GameObjectCreationParameters;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Zenject::GameObjectCreationParameters);
DEFINE_IL2CPP_ARG_TYPE(::Zenject::GameObjectCreationParameters*, "Zenject", "GameObjectCreationParameters");
// Type namespace: Zenject
namespace Zenject {
  // WARNING Size may be invalid!
  // Autogenerated type: Zenject.GameObjectCreationParameters
  // [TokenAttribute] Offset: FFFFFFFF
  // [NoReflectionBakingAttribute] Offset: FFFFFFFF
  class GameObjectCreationParameters : public ::Il2CppObject {
    public:
    public:
    // private System.String <Name>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::StringW Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String <GroupName>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::StringW GroupName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.Transform <ParentTransform>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Transform* ParentTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private System.Func`2<Zenject.InjectContext,UnityEngine.Transform> <ParentTransformGetter>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::Transform*>* ParentTransformGetter;
    // Field size check
    static_assert(sizeof(::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::Transform*>*) == 0x8);
    // private System.Nullable`1<UnityEngine.Vector3> <Position>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x30
    ::System::Nullable_1<::UnityEngine::Vector3> Position;
    // private System.Nullable`1<UnityEngine.Quaternion> <Rotation>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x40
    ::System::Nullable_1<::UnityEngine::Quaternion> Rotation;
    public:
    // Get static field: static public readonly Zenject.GameObjectCreationParameters Default
    static ::Zenject::GameObjectCreationParameters* _get_Default();
    // Set static field: static public readonly Zenject.GameObjectCreationParameters Default
    static void _set_Default(::Zenject::GameObjectCreationParameters* value);
    // Get instance field reference: private System.String <Name>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Name$k__BackingField();
    // Get instance field reference: private System.String <GroupName>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$GroupName$k__BackingField();
    // Get instance field reference: private UnityEngine.Transform <ParentTransform>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_$ParentTransform$k__BackingField();
    // Get instance field reference: private System.Func`2<Zenject.InjectContext,UnityEngine.Transform> <ParentTransformGetter>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::Transform*>*& dyn_$ParentTransformGetter$k__BackingField();
    // Get instance field reference: private System.Nullable`1<UnityEngine.Vector3> <Position>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Vector3>& dyn_$Position$k__BackingField();
    // Get instance field reference: private System.Nullable`1<UnityEngine.Quaternion> <Rotation>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Quaternion>& dyn_$Rotation$k__BackingField();
    // public System.String get_Name()
    // Offset: 0x1E2A0DC
    ::StringW get_Name();
    // public System.Void set_Name(System.String value)
    // Offset: 0x1E2A0E4
    void set_Name(::StringW value);
    // public System.String get_GroupName()
    // Offset: 0x1E2A0EC
    ::StringW get_GroupName();
    // public System.Void set_GroupName(System.String value)
    // Offset: 0x1E2A0F4
    void set_GroupName(::StringW value);
    // public UnityEngine.Transform get_ParentTransform()
    // Offset: 0x1E2A0FC
    ::UnityEngine::Transform* get_ParentTransform();
    // public System.Void set_ParentTransform(UnityEngine.Transform value)
    // Offset: 0x1E2A104
    void set_ParentTransform(::UnityEngine::Transform* value);
    // public System.Func`2<Zenject.InjectContext,UnityEngine.Transform> get_ParentTransformGetter()
    // Offset: 0x1E2A10C
    ::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::Transform*>* get_ParentTransformGetter();
    // public System.Void set_ParentTransformGetter(System.Func`2<Zenject.InjectContext,UnityEngine.Transform> value)
    // Offset: 0x1E2A114
    void set_ParentTransformGetter(::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::Transform*>* value);
    // public System.Nullable`1<UnityEngine.Vector3> get_Position()
    // Offset: 0x1E2A11C
    ::System::Nullable_1<::UnityEngine::Vector3> get_Position();
    // public System.Void set_Position(System.Nullable`1<UnityEngine.Vector3> value)
    // Offset: 0x1E2A128
    void set_Position(::System::Nullable_1<::UnityEngine::Vector3> value);
    // public System.Nullable`1<UnityEngine.Quaternion> get_Rotation()
    // Offset: 0x1E2A130
    ::System::Nullable_1<::UnityEngine::Quaternion> get_Rotation();
    // public System.Void set_Rotation(System.Nullable`1<UnityEngine.Quaternion> value)
    // Offset: 0x1E2A144
    void set_Rotation(::System::Nullable_1<::UnityEngine::Quaternion> value);
    // public System.Void .ctor()
    // Offset: 0x1E1C954
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GameObjectCreationParameters* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GameObjectCreationParameters*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x1E2A524
    static void _cctor();
    // public System.Boolean Equals(Zenject.GameObjectCreationParameters that)
    // Offset: 0x1E2A48C
    bool Equals(::Zenject::GameObjectCreationParameters* that);
    // public override System.Int32 GetHashCode()
    // Offset: 0x1E2A158
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public override System.Boolean Equals(System.Object other)
    // Offset: 0x1E2A344
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object other)
    bool Equals(::Il2CppObject* other);
  }; // Zenject.GameObjectCreationParameters
  // WARNING Not writing size check since size may be invalid!
  // static public System.Boolean op_Equality(Zenject.GameObjectCreationParameters left, Zenject.GameObjectCreationParameters right)
  // Offset: 0x1E2A430
  bool operator ==(::Zenject::GameObjectCreationParameters* left, ::Zenject::GameObjectCreationParameters& right);
  // static public System.Boolean op_Inequality(Zenject.GameObjectCreationParameters left, Zenject.GameObjectCreationParameters right)
  // Offset: 0x1E2A500
  bool operator !=(::Zenject::GameObjectCreationParameters* left, ::Zenject::GameObjectCreationParameters& right);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Zenject::GameObjectCreationParameters::*)()>(&Zenject::GameObjectCreationParameters::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Zenject::GameObjectCreationParameters*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::set_Name
// Il2CppName: set_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Zenject::GameObjectCreationParameters::*)(::StringW)>(&Zenject::GameObjectCreationParameters::set_Name)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Zenject::GameObjectCreationParameters*), "set_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::get_GroupName
// Il2CppName: get_GroupName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Zenject::GameObjectCreationParameters::*)()>(&Zenject::GameObjectCreationParameters::get_GroupName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Zenject::GameObjectCreationParameters*), "get_GroupName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::set_GroupName
// Il2CppName: set_GroupName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Zenject::GameObjectCreationParameters::*)(::StringW)>(&Zenject::GameObjectCreationParameters::set_GroupName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Zenject::GameObjectCreationParameters*), "set_GroupName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::get_ParentTransform
// Il2CppName: get_ParentTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Zenject::GameObjectCreationParameters::*)()>(&Zenject::GameObjectCreationParameters::get_ParentTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Zenject::GameObjectCreationParameters*), "get_ParentTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::set_ParentTransform
// Il2CppName: set_ParentTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Zenject::GameObjectCreationParameters::*)(::UnityEngine::Transform*)>(&Zenject::GameObjectCreationParameters::set_ParentTransform)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Zenject::GameObjectCreationParameters*), "set_ParentTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::get_ParentTransformGetter
// Il2CppName: get_ParentTransformGetter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::Transform*>* (Zenject::GameObjectCreationParameters::*)()>(&Zenject::GameObjectCreationParameters::get_ParentTransformGetter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Zenject::GameObjectCreationParameters*), "get_ParentTransformGetter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::set_ParentTransformGetter
// Il2CppName: set_ParentTransformGetter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Zenject::GameObjectCreationParameters::*)(::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::Transform*>*)>(&Zenject::GameObjectCreationParameters::set_ParentTransformGetter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Zenject", "InjectContext"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Zenject::GameObjectCreationParameters*), "set_ParentTransformGetter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::get_Position
// Il2CppName: get_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::Vector3> (Zenject::GameObjectCreationParameters::*)()>(&Zenject::GameObjectCreationParameters::get_Position)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Zenject::GameObjectCreationParameters*), "get_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::set_Position
// Il2CppName: set_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Zenject::GameObjectCreationParameters::*)(::System::Nullable_1<::UnityEngine::Vector3>)>(&Zenject::GameObjectCreationParameters::set_Position)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Zenject::GameObjectCreationParameters*), "set_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::get_Rotation
// Il2CppName: get_Rotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::Quaternion> (Zenject::GameObjectCreationParameters::*)()>(&Zenject::GameObjectCreationParameters::get_Rotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Zenject::GameObjectCreationParameters*), "get_Rotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::set_Rotation
// Il2CppName: set_Rotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Zenject::GameObjectCreationParameters::*)(::System::Nullable_1<::UnityEngine::Quaternion>)>(&Zenject::GameObjectCreationParameters::set_Rotation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Zenject::GameObjectCreationParameters*), "set_Rotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Zenject::GameObjectCreationParameters::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Zenject::GameObjectCreationParameters*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Zenject::GameObjectCreationParameters::*)(::Zenject::GameObjectCreationParameters*)>(&Zenject::GameObjectCreationParameters::Equals)> {
  static const MethodInfo* get() {
    static auto* that = &::il2cpp_utils::GetClassFromName("Zenject", "GameObjectCreationParameters")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Zenject::GameObjectCreationParameters*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{that});
  }
};
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Zenject::GameObjectCreationParameters::*)()>(&Zenject::GameObjectCreationParameters::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Zenject::GameObjectCreationParameters*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Zenject::GameObjectCreationParameters::*)(::Il2CppObject*)>(&Zenject::GameObjectCreationParameters::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Zenject::GameObjectCreationParameters*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::operator ==
// Il2CppName: op_Equality
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: Zenject::GameObjectCreationParameters::operator !=
// Il2CppName: op_Inequality
// Cannot perform method pointer template specialization from operators!
