// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: ZenMemberSetterMethod
  class ZenMemberSetterMethod;
  // Forward declaring type: InjectableInfo
  class InjectableInfo;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Zenject::InjectTypeInfo::InjectMemberInfo);
DEFINE_IL2CPP_ARG_TYPE(::Zenject::InjectTypeInfo::InjectMemberInfo*, "Zenject", "InjectTypeInfo/InjectMemberInfo");
// Type namespace: Zenject
namespace Zenject {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Zenject.InjectTypeInfo/Zenject.InjectMemberInfo
  // [TokenAttribute] Offset: FFFFFFFF
  // [NoReflectionBakingAttribute] Offset: 109121C
  class InjectTypeInfo::InjectMemberInfo : public ::Il2CppObject {
    public:
    public:
    // public readonly Zenject.ZenMemberSetterMethod Setter
    // Size: 0x8
    // Offset: 0x10
    ::Zenject::ZenMemberSetterMethod* Setter;
    // Field size check
    static_assert(sizeof(::Zenject::ZenMemberSetterMethod*) == 0x8);
    // public readonly Zenject.InjectableInfo Info
    // Size: 0x8
    // Offset: 0x18
    ::Zenject::InjectableInfo* Info;
    // Field size check
    static_assert(sizeof(::Zenject::InjectableInfo*) == 0x8);
    public:
    // Get instance field reference: public readonly Zenject.ZenMemberSetterMethod Setter
    [[deprecated("Use field access instead!")]] ::Zenject::ZenMemberSetterMethod*& dyn_Setter();
    // Get instance field reference: public readonly Zenject.InjectableInfo Info
    [[deprecated("Use field access instead!")]] ::Zenject::InjectableInfo*& dyn_Info();
    // public System.Void .ctor(Zenject.ZenMemberSetterMethod setter, Zenject.InjectableInfo info)
    // Offset: 0x2AE71AC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InjectTypeInfo::InjectMemberInfo* New_ctor(::Zenject::ZenMemberSetterMethod* setter, ::Zenject::InjectableInfo* info) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectTypeInfo::InjectMemberInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InjectTypeInfo::InjectMemberInfo*, creationType>(setter, info)));
    }
  }; // Zenject.InjectTypeInfo/Zenject.InjectMemberInfo
  #pragma pack(pop)
  static check_size<sizeof(InjectTypeInfo::InjectMemberInfo), 24 + sizeof(::Zenject::InjectableInfo*)> __Zenject_InjectTypeInfo_InjectMemberInfoSizeCheck;
  static_assert(sizeof(InjectTypeInfo::InjectMemberInfo) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Zenject::InjectTypeInfo::InjectMemberInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
