// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: BGNet.Core
namespace BGNet::Core {
  // Forward declaring type: DeliveryMethod
  struct DeliveryMethod;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::BGNet::Core::DeliveryMethod, "BGNet.Core", "DeliveryMethod");
// Type namespace: BGNet.Core
namespace BGNet::Core {
  // Size: 0x1
  #pragma pack(push, 1)
  // Autogenerated type: BGNet.Core.DeliveryMethod
  // [TokenAttribute] Offset: FFFFFFFF
  struct DeliveryMethod/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Byte value__
    // Size: 0x1
    // Offset: 0x0
    uint8_t value;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Creating value type constructor for type: DeliveryMethod
    constexpr DeliveryMethod(uint8_t value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating interface conversion operator: i_Enum
    inline ::System::Enum* i_Enum() noexcept {
      return reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint8_t
    constexpr operator uint8_t() const noexcept {
      return value;
    }
    // static field const value: static public BGNet.Core.DeliveryMethod Unreliable
    static constexpr const uint8_t Unreliable = 0u;
    // Get static field: static public BGNet.Core.DeliveryMethod Unreliable
    static ::BGNet::Core::DeliveryMethod _get_Unreliable();
    // Set static field: static public BGNet.Core.DeliveryMethod Unreliable
    static void _set_Unreliable(::BGNet::Core::DeliveryMethod value);
    // static field const value: static public BGNet.Core.DeliveryMethod ReliableOrdered
    static constexpr const uint8_t ReliableOrdered = 1u;
    // Get static field: static public BGNet.Core.DeliveryMethod ReliableOrdered
    static ::BGNet::Core::DeliveryMethod _get_ReliableOrdered();
    // Set static field: static public BGNet.Core.DeliveryMethod ReliableOrdered
    static void _set_ReliableOrdered(::BGNet::Core::DeliveryMethod value);
    // Get instance field reference: public System.Byte value__
    [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
  }; // BGNet.Core.DeliveryMethod
  #pragma pack(pop)
  static check_size<sizeof(DeliveryMethod), 0 + sizeof(uint8_t)> __BGNet_Core_DeliveryMethodSizeCheck;
  static_assert(sizeof(DeliveryMethod) == 0x1);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
