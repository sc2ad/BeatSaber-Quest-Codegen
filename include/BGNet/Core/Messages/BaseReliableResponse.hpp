// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedReliableResponse
#include "BGNet/Core/Messages/IUnconnectedReliableResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LiteNetLib::Utils
namespace LiteNetLib::Utils {
  // Forward declaring type: NetDataWriter
  class NetDataWriter;
  // Forward declaring type: NetDataReader
  class NetDataReader;
}
// Forward declaring namespace: BGNet::Core::Messages
namespace BGNet::Core::Messages {
  // Skipping declaration: IUnconnectedReliableRequest because it is already included!
  // Skipping declaration: IUnconnectedResponse because it is already included!
}
// Completed forward declares
// Type namespace: BGNet.Core.Messages
namespace BGNet::Core::Messages {
  // Forward declaring type: BaseReliableResponse
  class BaseReliableResponse;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::BGNet::Core::Messages::BaseReliableResponse);
DEFINE_IL2CPP_ARG_TYPE(::BGNet::Core::Messages::BaseReliableResponse*, "BGNet.Core.Messages", "BaseReliableResponse");
// Type namespace: BGNet.Core.Messages
namespace BGNet::Core::Messages {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: BGNet.Core.Messages.BaseReliableResponse
  // [TokenAttribute] Offset: FFFFFFFF
  class BaseReliableResponse : public ::Il2CppObject/*, public ::BGNet::Core::Messages::IUnconnectedReliableResponse*/ {
    public:
    public:
    // private System.UInt32 <requestId>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    uint requestId;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 <responseId>k__BackingField
    // Size: 0x4
    // Offset: 0x14
    uint responseId;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Creating interface conversion operator: operator ::BGNet::Core::Messages::IUnconnectedReliableResponse
    operator ::BGNet::Core::Messages::IUnconnectedReliableResponse() noexcept {
      return *reinterpret_cast<::BGNet::Core::Messages::IUnconnectedReliableResponse*>(this);
    }
    // Creating interface conversion operator: i_IUnconnectedReliableResponse
    inline ::BGNet::Core::Messages::IUnconnectedReliableResponse* i_IUnconnectedReliableResponse() noexcept {
      return reinterpret_cast<::BGNet::Core::Messages::IUnconnectedReliableResponse*>(this);
    }
    // Get instance field reference: private System.UInt32 <requestId>k__BackingField
    [[deprecated("Use field access instead!")]] uint& dyn_$requestId$k__BackingField();
    // Get instance field reference: private System.UInt32 <responseId>k__BackingField
    [[deprecated("Use field access instead!")]] uint& dyn_$responseId$k__BackingField();
    // public System.UInt32 get_requestId()
    // Offset: 0x155222C
    uint get_requestId();
    // private System.Void set_requestId(System.UInt32 value)
    // Offset: 0x1552234
    void set_requestId(uint value);
    // public System.UInt32 get_responseId()
    // Offset: 0x155223C
    uint get_responseId();
    // private System.Void set_responseId(System.UInt32 value)
    // Offset: 0x1552244
    void set_responseId(uint value);
    // public System.Byte get_resultCode()
    // Offset: 0x155224C
    uint8_t get_resultCode();
    // public System.String get_resultCodeString()
    // Offset: 0x1552254
    ::StringW get_resultCodeString();
    // protected System.Void .ctor()
    // Offset: 0x1552340
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BaseReliableResponse* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BaseReliableResponse*, creationType>()));
    }
    // public System.Void Serialize(LiteNetLib.Utils.NetDataWriter writer)
    // Offset: 0x155229C
    void Serialize(::LiteNetLib::Utils::NetDataWriter* writer);
    // public System.Void Deserialize(LiteNetLib.Utils.NetDataReader reader)
    // Offset: 0x15522E0
    void Deserialize(::LiteNetLib::Utils::NetDataReader* reader);
    // public System.Void Release()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Release();
    // private BGNet.Core.Messages.IUnconnectedReliableRequest BGNet.Core.Messages.IUnconnectedReliableRequest.WithRequestId(System.UInt32 requestId)
    // Offset: 0x1552328
    ::BGNet::Core::Messages::IUnconnectedReliableRequest* BGNet_Core_Messages_IUnconnectedReliableRequest_WithRequestId(uint requestId);
    // private BGNet.Core.Messages.IUnconnectedResponse BGNet.Core.Messages.IUnconnectedResponse.WithResponseId(System.UInt32 responseId)
    // Offset: 0x1552330
    ::BGNet::Core::Messages::IUnconnectedResponse* BGNet_Core_Messages_IUnconnectedResponse_WithResponseId(uint responseId);
    // private BGNet.Core.Messages.IUnconnectedReliableResponse BGNet.Core.Messages.IUnconnectedReliableResponse.WithRequestAndResponseId(System.UInt32 requestId, System.UInt32 responseId)
    // Offset: 0x1552338
    ::BGNet::Core::Messages::IUnconnectedReliableResponse* BGNet_Core_Messages_IUnconnectedReliableResponse_WithRequestAndResponseId(uint requestId, uint responseId);
  }; // BGNet.Core.Messages.BaseReliableResponse
  #pragma pack(pop)
  static check_size<sizeof(BaseReliableResponse), 20 + sizeof(uint)> __BGNet_Core_Messages_BaseReliableResponseSizeCheck;
  static_assert(sizeof(BaseReliableResponse) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: BGNet::Core::Messages::BaseReliableResponse::get_requestId
// Il2CppName: get_requestId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (BGNet::Core::Messages::BaseReliableResponse::*)()>(&BGNet::Core::Messages::BaseReliableResponse::get_requestId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::BaseReliableResponse*), "get_requestId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::BaseReliableResponse::set_requestId
// Il2CppName: set_requestId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BGNet::Core::Messages::BaseReliableResponse::*)(uint)>(&BGNet::Core::Messages::BaseReliableResponse::set_requestId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::BaseReliableResponse*), "set_requestId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::BaseReliableResponse::get_responseId
// Il2CppName: get_responseId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (BGNet::Core::Messages::BaseReliableResponse::*)()>(&BGNet::Core::Messages::BaseReliableResponse::get_responseId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::BaseReliableResponse*), "get_responseId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::BaseReliableResponse::set_responseId
// Il2CppName: set_responseId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BGNet::Core::Messages::BaseReliableResponse::*)(uint)>(&BGNet::Core::Messages::BaseReliableResponse::set_responseId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::BaseReliableResponse*), "set_responseId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::BaseReliableResponse::get_resultCode
// Il2CppName: get_resultCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (BGNet::Core::Messages::BaseReliableResponse::*)()>(&BGNet::Core::Messages::BaseReliableResponse::get_resultCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::BaseReliableResponse*), "get_resultCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::BaseReliableResponse::get_resultCodeString
// Il2CppName: get_resultCodeString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (BGNet::Core::Messages::BaseReliableResponse::*)()>(&BGNet::Core::Messages::BaseReliableResponse::get_resultCodeString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::BaseReliableResponse*), "get_resultCodeString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::BaseReliableResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: BGNet::Core::Messages::BaseReliableResponse::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BGNet::Core::Messages::BaseReliableResponse::*)(::LiteNetLib::Utils::NetDataWriter*)>(&BGNet::Core::Messages::BaseReliableResponse::Serialize)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("LiteNetLib.Utils", "NetDataWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::BaseReliableResponse*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::BaseReliableResponse::Deserialize
// Il2CppName: Deserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BGNet::Core::Messages::BaseReliableResponse::*)(::LiteNetLib::Utils::NetDataReader*)>(&BGNet::Core::Messages::BaseReliableResponse::Deserialize)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("LiteNetLib.Utils", "NetDataReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::BaseReliableResponse*), "Deserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::BaseReliableResponse::Release
// Il2CppName: Release
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BGNet::Core::Messages::BaseReliableResponse::*)()>(&BGNet::Core::Messages::BaseReliableResponse::Release)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::BaseReliableResponse*), "Release", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::BaseReliableResponse::BGNet_Core_Messages_IUnconnectedReliableRequest_WithRequestId
// Il2CppName: BGNet.Core.Messages.IUnconnectedReliableRequest.WithRequestId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::BGNet::Core::Messages::IUnconnectedReliableRequest* (BGNet::Core::Messages::BaseReliableResponse::*)(uint)>(&BGNet::Core::Messages::BaseReliableResponse::BGNet_Core_Messages_IUnconnectedReliableRequest_WithRequestId)> {
  static const MethodInfo* get() {
    static auto* requestId = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::BaseReliableResponse*), "BGNet.Core.Messages.IUnconnectedReliableRequest.WithRequestId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requestId});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::BaseReliableResponse::BGNet_Core_Messages_IUnconnectedResponse_WithResponseId
// Il2CppName: BGNet.Core.Messages.IUnconnectedResponse.WithResponseId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::BGNet::Core::Messages::IUnconnectedResponse* (BGNet::Core::Messages::BaseReliableResponse::*)(uint)>(&BGNet::Core::Messages::BaseReliableResponse::BGNet_Core_Messages_IUnconnectedResponse_WithResponseId)> {
  static const MethodInfo* get() {
    static auto* responseId = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::BaseReliableResponse*), "BGNet.Core.Messages.IUnconnectedResponse.WithResponseId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{responseId});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::BaseReliableResponse::BGNet_Core_Messages_IUnconnectedReliableResponse_WithRequestAndResponseId
// Il2CppName: BGNet.Core.Messages.IUnconnectedReliableResponse.WithRequestAndResponseId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::BGNet::Core::Messages::IUnconnectedReliableResponse* (BGNet::Core::Messages::BaseReliableResponse::*)(uint, uint)>(&BGNet::Core::Messages::BaseReliableResponse::BGNet_Core_Messages_IUnconnectedReliableResponse_WithRequestAndResponseId)> {
  static const MethodInfo* get() {
    static auto* requestId = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* responseId = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::BaseReliableResponse*), "BGNet.Core.Messages.IUnconnectedReliableResponse.WithRequestAndResponseId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requestId, responseId});
  }
};
