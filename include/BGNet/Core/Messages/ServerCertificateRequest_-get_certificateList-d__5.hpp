// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BGNet.Core.Messages.ServerCertificateRequest
#include "BGNet/Core/Messages/ServerCertificateRequest.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: IEnumerator because it is already included!
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5);
DEFINE_IL2CPP_ARG_TYPE(::BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5*, "BGNet.Core.Messages", "ServerCertificateRequest/<get_certificateList>d__5");
// Type namespace: BGNet.Core.Messages
namespace BGNet::Core::Messages {
  // Size: 0x34
  #pragma pack(push, 1)
  // Autogenerated type: BGNet.Core.Messages.ServerCertificateRequest/BGNet.Core.Messages.<get_certificateList>d__5
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class ServerCertificateRequest::$get_certificateList$d__5 : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerable_1<::ArrayW<uint8_t>>, public ::System::Collections::Generic::IEnumerator_1<::ArrayW<uint8_t>>*/ {
    public:
    public:
    // private System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x10
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: $$1__state and: $$2__current
    char __padding0[0x4] = {};
    // private System.Byte[] <>2__current
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<uint8_t> $$2__current;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private System.Int32 <>l__initialThreadId
    // Size: 0x4
    // Offset: 0x20
    int $$l__initialThreadId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: $$l__initialThreadId and: $$4__this
    char __padding2[0x4] = {};
    // public BGNet.Core.Messages.ServerCertificateRequest <>4__this
    // Size: 0x8
    // Offset: 0x28
    ::BGNet::Core::Messages::ServerCertificateRequest* $$4__this;
    // Field size check
    static_assert(sizeof(::BGNet::Core::Messages::ServerCertificateRequest*) == 0x8);
    // private System.Int32 <i>5__2
    // Size: 0x4
    // Offset: 0x30
    int $i$5__2;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerable_1<::ArrayW<uint8_t>>
    operator ::System::Collections::Generic::IEnumerable_1<::ArrayW<uint8_t>>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::ArrayW<uint8_t>>*>(this);
    }
    // Creating interface conversion operator: i_ArrayW_uint8_t
    inline ::System::Collections::Generic::IEnumerable_1<::ArrayW<uint8_t>>* i_ArrayW_uint8_t() noexcept {
      return reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::ArrayW<uint8_t>>*>(this);
    }
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<::ArrayW<uint8_t>>
    operator ::System::Collections::Generic::IEnumerator_1<::ArrayW<uint8_t>>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::ArrayW<uint8_t>>*>(this);
    }
    // Get instance field reference: private System.Int32 <>1__state
    [[deprecated("Use field access instead!")]] int& dyn_$$1__state();
    // Get instance field reference: private System.Byte[] <>2__current
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_$$2__current();
    // Get instance field reference: private System.Int32 <>l__initialThreadId
    [[deprecated("Use field access instead!")]] int& dyn_$$l__initialThreadId();
    // Get instance field reference: public BGNet.Core.Messages.ServerCertificateRequest <>4__this
    [[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::ServerCertificateRequest*& dyn_$$4__this();
    // Get instance field reference: private System.Int32 <i>5__2
    [[deprecated("Use field access instead!")]] int& dyn_$i$5__2();
    // private System.Byte[] System.Collections.Generic.IEnumerator<System.Byte[]>.get_Current()
    // Offset: 0x1557194
    ::ArrayW<uint8_t> System_Collections_Generic_IEnumerator$System_Byte$$$_get_Current();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0x15571FC
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
    // public System.Void .ctor(System.Int32 <>1__state)
    // Offset: 0x1556A10
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ServerCertificateRequest::$get_certificateList$d__5* New_ctor(int $$1__state) {
      static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ServerCertificateRequest::$get_certificateList$d__5*, creationType>($$1__state)));
    }
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0x15570E8
    void System_IDisposable_Dispose();
    // private System.Boolean MoveNext()
    // Offset: 0x15570EC
    bool MoveNext();
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0x155719C
    void System_Collections_IEnumerator_Reset();
    // private System.Collections.Generic.IEnumerator`1<System.Byte[]> System.Collections.Generic.IEnumerable<System.Byte[]>.GetEnumerator()
    // Offset: 0x1557204
    ::System::Collections::Generic::IEnumerator_1<::ArrayW<uint8_t>>* System_Collections_Generic_IEnumerable$System_Byte$$$_GetEnumerator();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x15572B0
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
  }; // BGNet.Core.Messages.ServerCertificateRequest/BGNet.Core.Messages.<get_certificateList>d__5
  #pragma pack(pop)
  static check_size<sizeof(ServerCertificateRequest::$get_certificateList$d__5), 48 + sizeof(int)> __BGNet_Core_Messages_ServerCertificateRequest_$get_certificateList$d__5SizeCheck;
  static_assert(sizeof(ServerCertificateRequest::$get_certificateList$d__5) == 0x34);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_Generic_IEnumerator$System_Byte$$$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Byte[]>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::*)()>(&BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_Generic_IEnumerator$System_Byte$$$_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5*), "System.Collections.Generic.IEnumerator<System.Byte[]>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::*)()>(&BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_IEnumerator_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::*)()>(&BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::System_IDisposable_Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::*)()>(&BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::*)()>(&BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_IEnumerator_Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_Generic_IEnumerable$System_Byte$$$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<System.Byte[]>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<::ArrayW<uint8_t>>* (BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::*)()>(&BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_Generic_IEnumerable$System_Byte$$$_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5*), "System.Collections.Generic.IEnumerable<System.Byte[]>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::*)()>(&BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::Messages::ServerCertificateRequest::$get_certificateList$d__5*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
