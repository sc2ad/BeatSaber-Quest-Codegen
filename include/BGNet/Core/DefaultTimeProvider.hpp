// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: BGNet::Core
namespace BGNet::Core {
  // Forward declaring type: ITimeProvider
  class ITimeProvider;
}
// Completed forward declares
// Type namespace: BGNet.Core
namespace BGNet::Core {
  // Forward declaring type: DefaultTimeProvider
  class DefaultTimeProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::BGNet::Core::DefaultTimeProvider);
DEFINE_IL2CPP_ARG_TYPE(::BGNet::Core::DefaultTimeProvider*, "BGNet.Core", "DefaultTimeProvider");
// Type namespace: BGNet.Core
namespace BGNet::Core {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: BGNet.Core.DefaultTimeProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class DefaultTimeProvider : public ::Il2CppObject {
    public:
    // static public BGNet.Core.ITimeProvider get_instance()
    // Offset: 0x16008F4
    static ::BGNet::Core::ITimeProvider* get_instance();
  }; // BGNet.Core.DefaultTimeProvider
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: BGNet::Core::DefaultTimeProvider::get_instance
// Il2CppName: get_instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::BGNet::Core::ITimeProvider* (*)()>(&BGNet::Core::DefaultTimeProvider::get_instance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BGNet::Core::DefaultTimeProvider*), "get_instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
