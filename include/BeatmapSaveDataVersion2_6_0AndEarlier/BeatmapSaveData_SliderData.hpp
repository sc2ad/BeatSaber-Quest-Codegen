// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveDataItem
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveDataItem.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ColorType
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_ColorType.hpp"
// Including type: NoteLineLayer
#include "GlobalNamespace/NoteLineLayer.hpp"
// Including type: NoteCutDirection
#include "GlobalNamespace/NoteCutDirection.hpp"
// Including type: SliderMidAnchorMode
#include "GlobalNamespace/SliderMidAnchorMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData);
DEFINE_IL2CPP_ARG_TYPE(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*, "BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/SliderData");
// Type namespace: BeatmapSaveDataVersion2_6_0AndEarlier
namespace BeatmapSaveDataVersion2_6_0AndEarlier {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData
  // [TokenAttribute] Offset: FFFFFFFF
  class BeatmapSaveData::SliderData : public ::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveDataItem {
    public:
    public:
    // private BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ColorType _colorType
    // Size: 0x4
    // Offset: 0x10
    ::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType colorType;
    // Field size check
    static_assert(sizeof(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType) == 0x4);
    // private System.Single _headTime
    // Size: 0x4
    // Offset: 0x14
    float headTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 _headLineIndex
    // Size: 0x4
    // Offset: 0x18
    int headLineIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private NoteLineLayer _headLineLayer
    // Size: 0x4
    // Offset: 0x1C
    ::GlobalNamespace::NoteLineLayer headLineLayer;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NoteLineLayer) == 0x4);
    // private System.Single _headControlPointLengthMultiplier
    // Size: 0x4
    // Offset: 0x20
    float headControlPointLengthMultiplier;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private NoteCutDirection _headCutDirection
    // Size: 0x4
    // Offset: 0x24
    ::GlobalNamespace::NoteCutDirection headCutDirection;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NoteCutDirection) == 0x4);
    // private System.Single _tailTime
    // Size: 0x4
    // Offset: 0x28
    float tailTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 _tailLineIndex
    // Size: 0x4
    // Offset: 0x2C
    int tailLineIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private NoteLineLayer _tailLineLayer
    // Size: 0x4
    // Offset: 0x30
    ::GlobalNamespace::NoteLineLayer tailLineLayer;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NoteLineLayer) == 0x4);
    // private System.Single _tailControlPointLengthMultiplier
    // Size: 0x4
    // Offset: 0x34
    float tailControlPointLengthMultiplier;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private NoteCutDirection _tailCutDirection
    // Size: 0x4
    // Offset: 0x38
    ::GlobalNamespace::NoteCutDirection tailCutDirection;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NoteCutDirection) == 0x4);
    // private SliderMidAnchorMode _sliderMidAnchorMode
    // Size: 0x4
    // Offset: 0x3C
    ::GlobalNamespace::SliderMidAnchorMode sliderMidAnchorMode;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SliderMidAnchorMode) == 0x4);
    public:
    // Get instance field reference: private BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ColorType _colorType
    [[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType& dyn__colorType();
    // Get instance field reference: private System.Single _headTime
    [[deprecated("Use field access instead!")]] float& dyn__headTime();
    // Get instance field reference: private System.Int32 _headLineIndex
    [[deprecated("Use field access instead!")]] int& dyn__headLineIndex();
    // Get instance field reference: private NoteLineLayer _headLineLayer
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& dyn__headLineLayer();
    // Get instance field reference: private System.Single _headControlPointLengthMultiplier
    [[deprecated("Use field access instead!")]] float& dyn__headControlPointLengthMultiplier();
    // Get instance field reference: private NoteCutDirection _headCutDirection
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutDirection& dyn__headCutDirection();
    // Get instance field reference: private System.Single _tailTime
    [[deprecated("Use field access instead!")]] float& dyn__tailTime();
    // Get instance field reference: private System.Int32 _tailLineIndex
    [[deprecated("Use field access instead!")]] int& dyn__tailLineIndex();
    // Get instance field reference: private NoteLineLayer _tailLineLayer
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& dyn__tailLineLayer();
    // Get instance field reference: private System.Single _tailControlPointLengthMultiplier
    [[deprecated("Use field access instead!")]] float& dyn__tailControlPointLengthMultiplier();
    // Get instance field reference: private NoteCutDirection _tailCutDirection
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutDirection& dyn__tailCutDirection();
    // Get instance field reference: private SliderMidAnchorMode _sliderMidAnchorMode
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SliderMidAnchorMode& dyn__sliderMidAnchorMode();
    // public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ColorType get_colorType()
    // Offset: 0x283B25C
    ::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType get_colorType();
    // public System.Int32 get_headLineIndex()
    // Offset: 0x283B264
    int get_headLineIndex();
    // public NoteLineLayer get_headLineLayer()
    // Offset: 0x283B26C
    ::GlobalNamespace::NoteLineLayer get_headLineLayer();
    // public System.Single get_headControlPointLengthMultiplier()
    // Offset: 0x283B274
    float get_headControlPointLengthMultiplier();
    // public NoteCutDirection get_headCutDirection()
    // Offset: 0x283B27C
    ::GlobalNamespace::NoteCutDirection get_headCutDirection();
    // public System.Single get_tailTime()
    // Offset: 0x283B284
    float get_tailTime();
    // public System.Int32 get_tailLineIndex()
    // Offset: 0x283B28C
    int get_tailLineIndex();
    // public NoteLineLayer get_tailLineLayer()
    // Offset: 0x283B294
    ::GlobalNamespace::NoteLineLayer get_tailLineLayer();
    // public System.Single get_tailControlPointLengthMultiplier()
    // Offset: 0x283B29C
    float get_tailControlPointLengthMultiplier();
    // public NoteCutDirection get_tailCutDirection()
    // Offset: 0x283B2A4
    ::GlobalNamespace::NoteCutDirection get_tailCutDirection();
    // public SliderMidAnchorMode get_sliderMidAnchorMode()
    // Offset: 0x283B2AC
    ::GlobalNamespace::SliderMidAnchorMode get_sliderMidAnchorMode();
    // public System.Void .ctor(BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ColorType colorType, System.Single headTime, System.Int32 headLineIndex, NoteLineLayer headLineLayer, System.Single headControlPointLengthMultiplier, NoteCutDirection headCutDirection, System.Single tailTime, System.Int32 tailLineIndex, NoteLineLayer tailLineLayer, System.Single tailControlPointLengthMultiplier, NoteCutDirection tailCutDirection, SliderMidAnchorMode sliderMidAnchorMode)
    // Offset: 0x283B2B4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BeatmapSaveData::SliderData* New_ctor(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType colorType, float headTime, int headLineIndex, ::GlobalNamespace::NoteLineLayer headLineLayer, float headControlPointLengthMultiplier, ::GlobalNamespace::NoteCutDirection headCutDirection, float tailTime, int tailLineIndex, ::GlobalNamespace::NoteLineLayer tailLineLayer, float tailControlPointLengthMultiplier, ::GlobalNamespace::NoteCutDirection tailCutDirection, ::GlobalNamespace::SliderMidAnchorMode sliderMidAnchorMode) {
      static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BeatmapSaveData::SliderData*, creationType>(colorType, headTime, headLineIndex, headLineLayer, headControlPointLengthMultiplier, headCutDirection, tailTime, tailLineIndex, tailLineLayer, tailControlPointLengthMultiplier, tailCutDirection, sliderMidAnchorMode)));
    }
    // public override System.Single get_time()
    // Offset: 0x283B254
    // Implemented from: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveDataItem
    // Base method: System.Single BeatmapSaveDataItem::get_time()
    float get_time();
  }; // BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData
  #pragma pack(pop)
  static check_size<sizeof(BeatmapSaveData::SliderData), 60 + sizeof(::GlobalNamespace::SliderMidAnchorMode)> __BeatmapSaveDataVersion2_6_0AndEarlier_BeatmapSaveData_SliderDataSizeCheck;
  static_assert(sizeof(BeatmapSaveData::SliderData) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_colorType
// Il2CppName: get_colorType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType (BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::*)()>(&BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_colorType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*), "get_colorType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_headLineIndex
// Il2CppName: get_headLineIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::*)()>(&BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_headLineIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*), "get_headLineIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_headLineLayer
// Il2CppName: get_headLineLayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::NoteLineLayer (BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::*)()>(&BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_headLineLayer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*), "get_headLineLayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_headControlPointLengthMultiplier
// Il2CppName: get_headControlPointLengthMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::*)()>(&BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_headControlPointLengthMultiplier)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*), "get_headControlPointLengthMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_headCutDirection
// Il2CppName: get_headCutDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::NoteCutDirection (BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::*)()>(&BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_headCutDirection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*), "get_headCutDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailTime
// Il2CppName: get_tailTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::*)()>(&BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*), "get_tailTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailLineIndex
// Il2CppName: get_tailLineIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::*)()>(&BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailLineIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*), "get_tailLineIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailLineLayer
// Il2CppName: get_tailLineLayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::NoteLineLayer (BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::*)()>(&BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailLineLayer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*), "get_tailLineLayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailControlPointLengthMultiplier
// Il2CppName: get_tailControlPointLengthMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::*)()>(&BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailControlPointLengthMultiplier)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*), "get_tailControlPointLengthMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailCutDirection
// Il2CppName: get_tailCutDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::NoteCutDirection (BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::*)()>(&BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailCutDirection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*), "get_tailCutDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_sliderMidAnchorMode
// Il2CppName: get_sliderMidAnchorMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SliderMidAnchorMode (BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::*)()>(&BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_sliderMidAnchorMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*), "get_sliderMidAnchorMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_time
// Il2CppName: get_time
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::*)()>(&BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_time)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*), "get_time", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
