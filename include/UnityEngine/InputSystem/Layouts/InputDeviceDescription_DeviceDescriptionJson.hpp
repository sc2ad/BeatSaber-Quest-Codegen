// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.Layouts.InputDeviceDescription
#include "UnityEngine/InputSystem/Layouts/InputDeviceDescription.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Layouts::InputDeviceDescription::DeviceDescriptionJson, "UnityEngine.InputSystem.Layouts", "InputDeviceDescription/DeviceDescriptionJson");
// Type namespace: UnityEngine.InputSystem.Layouts
namespace UnityEngine::InputSystem::Layouts {
  // Size: 0x38
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.Layouts.InputDeviceDescription/UnityEngine.InputSystem.Layouts.DeviceDescriptionJson
  // [TokenAttribute] Offset: FFFFFFFF
  struct InputDeviceDescription::DeviceDescriptionJson/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.String interface
    // Size: 0x8
    // Offset: 0x0
    ::StringW interface;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String type
    // Size: 0x8
    // Offset: 0x8
    ::StringW type;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String product
    // Size: 0x8
    // Offset: 0x10
    ::StringW product;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String serial
    // Size: 0x8
    // Offset: 0x18
    ::StringW serial;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String version
    // Size: 0x8
    // Offset: 0x20
    ::StringW version;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String manufacturer
    // Size: 0x8
    // Offset: 0x28
    ::StringW manufacturer;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String capabilities
    // Size: 0x8
    // Offset: 0x30
    ::StringW capabilities;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating value type constructor for type: DeviceDescriptionJson
    constexpr DeviceDescriptionJson(::StringW interface_ = {}, ::StringW type_ = {}, ::StringW product_ = {}, ::StringW serial_ = {}, ::StringW version_ = {}, ::StringW manufacturer_ = {}, ::StringW capabilities_ = {}) noexcept : interface{interface_}, type{type_}, product{product_}, serial{serial_}, version{version_}, manufacturer{manufacturer_}, capabilities{capabilities_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.String interface
    [[deprecated("Use field access instead!")]] ::StringW& dyn_interface();
    // Get instance field reference: public System.String type
    [[deprecated("Use field access instead!")]] ::StringW& dyn_type();
    // Get instance field reference: public System.String product
    [[deprecated("Use field access instead!")]] ::StringW& dyn_product();
    // Get instance field reference: public System.String serial
    [[deprecated("Use field access instead!")]] ::StringW& dyn_serial();
    // Get instance field reference: public System.String version
    [[deprecated("Use field access instead!")]] ::StringW& dyn_version();
    // Get instance field reference: public System.String manufacturer
    [[deprecated("Use field access instead!")]] ::StringW& dyn_manufacturer();
    // Get instance field reference: public System.String capabilities
    [[deprecated("Use field access instead!")]] ::StringW& dyn_capabilities();
  }; // UnityEngine.InputSystem.Layouts.InputDeviceDescription/UnityEngine.InputSystem.Layouts.DeviceDescriptionJson
  #pragma pack(pop)
  static check_size<sizeof(InputDeviceDescription::DeviceDescriptionJson), 48 + sizeof(::StringW)> __UnityEngine_InputSystem_Layouts_InputDeviceDescription_DeviceDescriptionJsonSizeCheck;
  static_assert(sizeof(InputDeviceDescription::DeviceDescriptionJson) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
