// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.PropertyAttribute
#include "UnityEngine/PropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine.InputSystem.Layouts
namespace UnityEngine::InputSystem::Layouts {
  // Forward declaring type: InputControlAttribute
  class InputControlAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::Layouts::InputControlAttribute);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Layouts::InputControlAttribute*, "UnityEngine.InputSystem.Layouts", "InputControlAttribute");
// Type namespace: UnityEngine.InputSystem.Layouts
namespace UnityEngine::InputSystem::Layouts {
  // Size: 0xA8
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.Layouts.InputControlAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 958E8C
  class InputControlAttribute : public ::UnityEngine::PropertyAttribute {
    public:
    public:
    // private System.String <layout>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::StringW layout;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String <variants>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::StringW variants;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String <name>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String <format>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::StringW format;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String <usage>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::StringW usage;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String[] <usages>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<::StringW> usages;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // private System.String <parameters>k__BackingField
    // Size: 0x8
    // Offset: 0x40
    ::StringW parameters;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String <processors>k__BackingField
    // Size: 0x8
    // Offset: 0x48
    ::StringW processors;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String <alias>k__BackingField
    // Size: 0x8
    // Offset: 0x50
    ::StringW alias;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String[] <aliases>k__BackingField
    // Size: 0x8
    // Offset: 0x58
    ::ArrayW<::StringW> aliases;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // private System.String <useStateFrom>k__BackingField
    // Size: 0x8
    // Offset: 0x60
    ::StringW useStateFrom;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.UInt32 <bit>k__BackingField
    // Size: 0x4
    // Offset: 0x68
    uint bit;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 <offset>k__BackingField
    // Size: 0x4
    // Offset: 0x6C
    uint offset;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 <sizeInBits>k__BackingField
    // Size: 0x4
    // Offset: 0x70
    uint sizeInBits;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.Int32 <arraySize>k__BackingField
    // Size: 0x4
    // Offset: 0x74
    int arraySize;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.String <displayName>k__BackingField
    // Size: 0x8
    // Offset: 0x78
    ::StringW displayName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String <shortDisplayName>k__BackingField
    // Size: 0x8
    // Offset: 0x80
    ::StringW shortDisplayName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean <noisy>k__BackingField
    // Size: 0x1
    // Offset: 0x88
    bool noisy;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <synthetic>k__BackingField
    // Size: 0x1
    // Offset: 0x89
    bool synthetic;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: synthetic and: defaultState
    char __padding18[0x6] = {};
    // private System.Object <defaultState>k__BackingField
    // Size: 0x8
    // Offset: 0x90
    ::Il2CppObject* defaultState;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Object <minValue>k__BackingField
    // Size: 0x8
    // Offset: 0x98
    ::Il2CppObject* minValue;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Object <maxValue>k__BackingField
    // Size: 0x8
    // Offset: 0xA0
    ::Il2CppObject* maxValue;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    public:
    // Get instance field reference: private System.String <layout>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$layout$k__BackingField();
    // Get instance field reference: private System.String <variants>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$variants$k__BackingField();
    // Get instance field reference: private System.String <name>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$name$k__BackingField();
    // Get instance field reference: private System.String <format>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$format$k__BackingField();
    // Get instance field reference: private System.String <usage>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$usage$k__BackingField();
    // Get instance field reference: private System.String[] <usages>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_$usages$k__BackingField();
    // Get instance field reference: private System.String <parameters>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$parameters$k__BackingField();
    // Get instance field reference: private System.String <processors>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$processors$k__BackingField();
    // Get instance field reference: private System.String <alias>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$alias$k__BackingField();
    // Get instance field reference: private System.String[] <aliases>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_$aliases$k__BackingField();
    // Get instance field reference: private System.String <useStateFrom>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$useStateFrom$k__BackingField();
    // Get instance field reference: private System.UInt32 <bit>k__BackingField
    [[deprecated("Use field access instead!")]] uint& dyn_$bit$k__BackingField();
    // Get instance field reference: private System.UInt32 <offset>k__BackingField
    [[deprecated("Use field access instead!")]] uint& dyn_$offset$k__BackingField();
    // Get instance field reference: private System.UInt32 <sizeInBits>k__BackingField
    [[deprecated("Use field access instead!")]] uint& dyn_$sizeInBits$k__BackingField();
    // Get instance field reference: private System.Int32 <arraySize>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$arraySize$k__BackingField();
    // Get instance field reference: private System.String <displayName>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$displayName$k__BackingField();
    // Get instance field reference: private System.String <shortDisplayName>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$shortDisplayName$k__BackingField();
    // Get instance field reference: private System.Boolean <noisy>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$noisy$k__BackingField();
    // Get instance field reference: private System.Boolean <synthetic>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$synthetic$k__BackingField();
    // Get instance field reference: private System.Object <defaultState>k__BackingField
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_$defaultState$k__BackingField();
    // Get instance field reference: private System.Object <minValue>k__BackingField
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_$minValue$k__BackingField();
    // Get instance field reference: private System.Object <maxValue>k__BackingField
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_$maxValue$k__BackingField();
    // public System.String get_layout()
    // Offset: 0x111C400
    ::StringW get_layout();
    // public System.Void set_layout(System.String value)
    // Offset: 0x111C408
    void set_layout(::StringW value);
    // public System.String get_variants()
    // Offset: 0x111C410
    ::StringW get_variants();
    // public System.Void set_variants(System.String value)
    // Offset: 0x111C418
    void set_variants(::StringW value);
    // public System.String get_name()
    // Offset: 0x111C420
    ::StringW get_name();
    // public System.Void set_name(System.String value)
    // Offset: 0x111C428
    void set_name(::StringW value);
    // public System.String get_format()
    // Offset: 0x111C430
    ::StringW get_format();
    // public System.Void set_format(System.String value)
    // Offset: 0x111C438
    void set_format(::StringW value);
    // public System.String get_usage()
    // Offset: 0x111C440
    ::StringW get_usage();
    // public System.Void set_usage(System.String value)
    // Offset: 0x111C448
    void set_usage(::StringW value);
    // public System.String[] get_usages()
    // Offset: 0x111C450
    ::ArrayW<::StringW> get_usages();
    // public System.Void set_usages(System.String[] value)
    // Offset: 0x111C458
    void set_usages(::ArrayW<::StringW> value);
    // public System.String get_parameters()
    // Offset: 0x111C460
    ::StringW get_parameters();
    // public System.Void set_parameters(System.String value)
    // Offset: 0x111C468
    void set_parameters(::StringW value);
    // public System.String get_processors()
    // Offset: 0x111C470
    ::StringW get_processors();
    // public System.Void set_processors(System.String value)
    // Offset: 0x111C478
    void set_processors(::StringW value);
    // public System.String get_alias()
    // Offset: 0x111C480
    ::StringW get_alias();
    // public System.Void set_alias(System.String value)
    // Offset: 0x111C488
    void set_alias(::StringW value);
    // public System.String[] get_aliases()
    // Offset: 0x111C490
    ::ArrayW<::StringW> get_aliases();
    // public System.Void set_aliases(System.String[] value)
    // Offset: 0x111C498
    void set_aliases(::ArrayW<::StringW> value);
    // public System.String get_useStateFrom()
    // Offset: 0x111C4A0
    ::StringW get_useStateFrom();
    // public System.Void set_useStateFrom(System.String value)
    // Offset: 0x111C4A8
    void set_useStateFrom(::StringW value);
    // public System.UInt32 get_bit()
    // Offset: 0x111C4B0
    uint get_bit();
    // public System.Void set_bit(System.UInt32 value)
    // Offset: 0x111C4B8
    void set_bit(uint value);
    // public System.UInt32 get_offset()
    // Offset: 0x111C4C0
    uint get_offset();
    // public System.Void set_offset(System.UInt32 value)
    // Offset: 0x111C4C8
    void set_offset(uint value);
    // public System.UInt32 get_sizeInBits()
    // Offset: 0x111C4D0
    uint get_sizeInBits();
    // public System.Void set_sizeInBits(System.UInt32 value)
    // Offset: 0x111C4D8
    void set_sizeInBits(uint value);
    // public System.Int32 get_arraySize()
    // Offset: 0x111C4E0
    int get_arraySize();
    // public System.Void set_arraySize(System.Int32 value)
    // Offset: 0x111C4E8
    void set_arraySize(int value);
    // public System.String get_displayName()
    // Offset: 0x111C4F0
    ::StringW get_displayName();
    // public System.Void set_displayName(System.String value)
    // Offset: 0x111C4F8
    void set_displayName(::StringW value);
    // public System.String get_shortDisplayName()
    // Offset: 0x111C500
    ::StringW get_shortDisplayName();
    // public System.Void set_shortDisplayName(System.String value)
    // Offset: 0x111C508
    void set_shortDisplayName(::StringW value);
    // public System.Boolean get_noisy()
    // Offset: 0x111C510
    bool get_noisy();
    // public System.Void set_noisy(System.Boolean value)
    // Offset: 0x111C518
    void set_noisy(bool value);
    // public System.Boolean get_synthetic()
    // Offset: 0x111C524
    bool get_synthetic();
    // public System.Void set_synthetic(System.Boolean value)
    // Offset: 0x111C52C
    void set_synthetic(bool value);
    // public System.Object get_defaultState()
    // Offset: 0x111C538
    ::Il2CppObject* get_defaultState();
    // public System.Void set_defaultState(System.Object value)
    // Offset: 0x111C540
    void set_defaultState(::Il2CppObject* value);
    // public System.Object get_minValue()
    // Offset: 0x111C548
    ::Il2CppObject* get_minValue();
    // public System.Void set_minValue(System.Object value)
    // Offset: 0x111C550
    void set_minValue(::Il2CppObject* value);
    // public System.Object get_maxValue()
    // Offset: 0x111C558
    ::Il2CppObject* get_maxValue();
    // public System.Void set_maxValue(System.Object value)
    // Offset: 0x111C560
    void set_maxValue(::Il2CppObject* value);
    // public System.Void .ctor()
    // Offset: 0x111C568
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputControlAttribute* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Layouts::InputControlAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputControlAttribute*, creationType>()));
    }
  }; // UnityEngine.InputSystem.Layouts.InputControlAttribute
  #pragma pack(pop)
  static check_size<sizeof(InputControlAttribute), 160 + sizeof(::Il2CppObject*)> __UnityEngine_InputSystem_Layouts_InputControlAttributeSizeCheck;
  static_assert(sizeof(InputControlAttribute) == 0xA8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_layout
// Il2CppName: get_layout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_layout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_layout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_layout
// Il2CppName: set_layout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_layout)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_layout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_variants
// Il2CppName: get_variants
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_variants)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_variants", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_variants
// Il2CppName: set_variants
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_variants)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_variants", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_name
// Il2CppName: get_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_name
// Il2CppName: set_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_name)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_format
// Il2CppName: get_format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_format)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_format
// Il2CppName: set_format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_format)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_usage
// Il2CppName: get_usage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_usage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_usage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_usage
// Il2CppName: set_usage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_usage)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_usage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_usages
// Il2CppName: get_usages
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_usages)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_usages", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_usages
// Il2CppName: set_usages
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(::ArrayW<::StringW>)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_usages)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_usages", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_parameters
// Il2CppName: get_parameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_parameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_parameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_parameters
// Il2CppName: set_parameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_parameters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_parameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_processors
// Il2CppName: get_processors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_processors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_processors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_processors
// Il2CppName: set_processors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_processors)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_processors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_alias
// Il2CppName: get_alias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_alias)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_alias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_alias
// Il2CppName: set_alias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_alias)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_alias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_aliases
// Il2CppName: get_aliases
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_aliases)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_aliases", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_aliases
// Il2CppName: set_aliases
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(::ArrayW<::StringW>)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_aliases)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_aliases", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_useStateFrom
// Il2CppName: get_useStateFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_useStateFrom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_useStateFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_useStateFrom
// Il2CppName: set_useStateFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_useStateFrom)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_useStateFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_bit
// Il2CppName: get_bit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_bit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_bit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_bit
// Il2CppName: set_bit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(uint)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_bit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_bit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_offset
// Il2CppName: get_offset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_offset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_offset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_offset
// Il2CppName: set_offset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(uint)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_offset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_offset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_sizeInBits
// Il2CppName: get_sizeInBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_sizeInBits)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_sizeInBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_sizeInBits
// Il2CppName: set_sizeInBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(uint)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_sizeInBits)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_sizeInBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_arraySize
// Il2CppName: get_arraySize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_arraySize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_arraySize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_arraySize
// Il2CppName: set_arraySize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(int)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_arraySize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_arraySize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_displayName
// Il2CppName: get_displayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_displayName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_displayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_displayName
// Il2CppName: set_displayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_displayName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_displayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_shortDisplayName
// Il2CppName: get_shortDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_shortDisplayName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_shortDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_shortDisplayName
// Il2CppName: set_shortDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(::StringW)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_shortDisplayName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_shortDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_noisy
// Il2CppName: get_noisy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_noisy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_noisy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_noisy
// Il2CppName: set_noisy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(bool)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_noisy)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_noisy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_synthetic
// Il2CppName: get_synthetic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_synthetic)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_synthetic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_synthetic
// Il2CppName: set_synthetic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(bool)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_synthetic)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_synthetic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_defaultState
// Il2CppName: get_defaultState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_defaultState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_defaultState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_defaultState
// Il2CppName: set_defaultState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(::Il2CppObject*)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_defaultState)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_defaultState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_minValue
// Il2CppName: get_minValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_minValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_minValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_minValue
// Il2CppName: set_minValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(::Il2CppObject*)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_minValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_minValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::get_maxValue
// Il2CppName: get_maxValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)()>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::get_maxValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "get_maxValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::set_maxValue
// Il2CppName: set_maxValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Layouts::InputControlAttribute::*)(::Il2CppObject*)>(&UnityEngine::InputSystem::Layouts::InputControlAttribute::set_maxValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Layouts::InputControlAttribute*), "set_maxValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Layouts::InputControlAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
