// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.Layouts.InputControlLayout
#include "UnityEngine/InputSystem/Layouts/InputControlLayout.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.InputSystem.Layouts.InputDeviceMatcher/UnityEngine.InputSystem.Layouts.MatcherJson
#include "UnityEngine/InputSystem/Layouts/InputDeviceMatcher_MatcherJson.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Layouts::InputControlLayout::LayoutJsonNameAndDescriptorOnly, "UnityEngine.InputSystem.Layouts", "InputControlLayout/LayoutJsonNameAndDescriptorOnly");
// Type namespace: UnityEngine.InputSystem.Layouts
namespace UnityEngine::InputSystem::Layouts {
  // Size: 0x70
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.Layouts.InputControlLayout/UnityEngine.InputSystem.Layouts.LayoutJsonNameAndDescriptorOnly
  // [TokenAttribute] Offset: FFFFFFFF
  struct InputControlLayout::LayoutJsonNameAndDescriptorOnly/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.String name
    // Size: 0x8
    // Offset: 0x0
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String extend
    // Size: 0x8
    // Offset: 0x8
    ::StringW extend;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String[] extendMultiple
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::StringW> extendMultiple;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // public UnityEngine.InputSystem.Layouts.InputDeviceMatcher/UnityEngine.InputSystem.Layouts.MatcherJson device
    // Size: 0x58
    // Offset: 0x18
    ::UnityEngine::InputSystem::Layouts::InputDeviceMatcher::MatcherJson device;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Layouts::InputDeviceMatcher::MatcherJson) == 0x58);
    public:
    // Creating value type constructor for type: LayoutJsonNameAndDescriptorOnly
    constexpr LayoutJsonNameAndDescriptorOnly(::StringW name_ = {}, ::StringW extend_ = {}, ::ArrayW<::StringW> extendMultiple_ = ::ArrayW<::StringW>(static_cast<void*>(nullptr)), ::UnityEngine::InputSystem::Layouts::InputDeviceMatcher::MatcherJson device_ = {}) noexcept : name{name_}, extend{extend_}, extendMultiple{extendMultiple_}, device{device_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.String name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_name();
    // Get instance field reference: public System.String extend
    [[deprecated("Use field access instead!")]] ::StringW& dyn_extend();
    // Get instance field reference: public System.String[] extendMultiple
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_extendMultiple();
    // Get instance field reference: public UnityEngine.InputSystem.Layouts.InputDeviceMatcher/UnityEngine.InputSystem.Layouts.MatcherJson device
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Layouts::InputDeviceMatcher::MatcherJson& dyn_device();
  }; // UnityEngine.InputSystem.Layouts.InputControlLayout/UnityEngine.InputSystem.Layouts.LayoutJsonNameAndDescriptorOnly
  #pragma pack(pop)
  static check_size<sizeof(InputControlLayout::LayoutJsonNameAndDescriptorOnly), 24 + sizeof(::UnityEngine::InputSystem::Layouts::InputDeviceMatcher::MatcherJson)> __UnityEngine_InputSystem_Layouts_InputControlLayout_LayoutJsonNameAndDescriptorOnlySizeCheck;
  static_assert(sizeof(InputControlLayout::LayoutJsonNameAndDescriptorOnly) == 0x70);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
