// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.InputSystem.XR
namespace UnityEngine::InputSystem::XR {
  // Forward declaring type: FeatureType
  struct FeatureType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::XR::FeatureType, "UnityEngine.InputSystem.XR", "FeatureType");
// Type namespace: UnityEngine.InputSystem.XR
namespace UnityEngine::InputSystem::XR {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.XR.FeatureType
  // [TokenAttribute] Offset: FFFFFFFF
  struct FeatureType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: FeatureType
    constexpr FeatureType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.InputSystem.XR.FeatureType Custom
    static constexpr const int Custom = 0;
    // Get static field: static public UnityEngine.InputSystem.XR.FeatureType Custom
    static ::UnityEngine::InputSystem::XR::FeatureType _get_Custom();
    // Set static field: static public UnityEngine.InputSystem.XR.FeatureType Custom
    static void _set_Custom(::UnityEngine::InputSystem::XR::FeatureType value);
    // static field const value: static public UnityEngine.InputSystem.XR.FeatureType Binary
    static constexpr const int Binary = 1;
    // Get static field: static public UnityEngine.InputSystem.XR.FeatureType Binary
    static ::UnityEngine::InputSystem::XR::FeatureType _get_Binary();
    // Set static field: static public UnityEngine.InputSystem.XR.FeatureType Binary
    static void _set_Binary(::UnityEngine::InputSystem::XR::FeatureType value);
    // static field const value: static public UnityEngine.InputSystem.XR.FeatureType DiscreteStates
    static constexpr const int DiscreteStates = 2;
    // Get static field: static public UnityEngine.InputSystem.XR.FeatureType DiscreteStates
    static ::UnityEngine::InputSystem::XR::FeatureType _get_DiscreteStates();
    // Set static field: static public UnityEngine.InputSystem.XR.FeatureType DiscreteStates
    static void _set_DiscreteStates(::UnityEngine::InputSystem::XR::FeatureType value);
    // static field const value: static public UnityEngine.InputSystem.XR.FeatureType Axis1D
    static constexpr const int Axis1D = 3;
    // Get static field: static public UnityEngine.InputSystem.XR.FeatureType Axis1D
    static ::UnityEngine::InputSystem::XR::FeatureType _get_Axis1D();
    // Set static field: static public UnityEngine.InputSystem.XR.FeatureType Axis1D
    static void _set_Axis1D(::UnityEngine::InputSystem::XR::FeatureType value);
    // static field const value: static public UnityEngine.InputSystem.XR.FeatureType Axis2D
    static constexpr const int Axis2D = 4;
    // Get static field: static public UnityEngine.InputSystem.XR.FeatureType Axis2D
    static ::UnityEngine::InputSystem::XR::FeatureType _get_Axis2D();
    // Set static field: static public UnityEngine.InputSystem.XR.FeatureType Axis2D
    static void _set_Axis2D(::UnityEngine::InputSystem::XR::FeatureType value);
    // static field const value: static public UnityEngine.InputSystem.XR.FeatureType Axis3D
    static constexpr const int Axis3D = 5;
    // Get static field: static public UnityEngine.InputSystem.XR.FeatureType Axis3D
    static ::UnityEngine::InputSystem::XR::FeatureType _get_Axis3D();
    // Set static field: static public UnityEngine.InputSystem.XR.FeatureType Axis3D
    static void _set_Axis3D(::UnityEngine::InputSystem::XR::FeatureType value);
    // static field const value: static public UnityEngine.InputSystem.XR.FeatureType Rotation
    static constexpr const int Rotation = 6;
    // Get static field: static public UnityEngine.InputSystem.XR.FeatureType Rotation
    static ::UnityEngine::InputSystem::XR::FeatureType _get_Rotation();
    // Set static field: static public UnityEngine.InputSystem.XR.FeatureType Rotation
    static void _set_Rotation(::UnityEngine::InputSystem::XR::FeatureType value);
    // static field const value: static public UnityEngine.InputSystem.XR.FeatureType Hand
    static constexpr const int Hand = 7;
    // Get static field: static public UnityEngine.InputSystem.XR.FeatureType Hand
    static ::UnityEngine::InputSystem::XR::FeatureType _get_Hand();
    // Set static field: static public UnityEngine.InputSystem.XR.FeatureType Hand
    static void _set_Hand(::UnityEngine::InputSystem::XR::FeatureType value);
    // static field const value: static public UnityEngine.InputSystem.XR.FeatureType Bone
    static constexpr const int Bone = 8;
    // Get static field: static public UnityEngine.InputSystem.XR.FeatureType Bone
    static ::UnityEngine::InputSystem::XR::FeatureType _get_Bone();
    // Set static field: static public UnityEngine.InputSystem.XR.FeatureType Bone
    static void _set_Bone(::UnityEngine::InputSystem::XR::FeatureType value);
    // static field const value: static public UnityEngine.InputSystem.XR.FeatureType Eyes
    static constexpr const int Eyes = 9;
    // Get static field: static public UnityEngine.InputSystem.XR.FeatureType Eyes
    static ::UnityEngine::InputSystem::XR::FeatureType _get_Eyes();
    // Set static field: static public UnityEngine.InputSystem.XR.FeatureType Eyes
    static void _set_Eyes(::UnityEngine::InputSystem::XR::FeatureType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // UnityEngine.InputSystem.XR.FeatureType
  #pragma pack(pop)
  static check_size<sizeof(FeatureType), 0 + sizeof(int)> __UnityEngine_InputSystem_XR_FeatureTypeSizeCheck;
  static_assert(sizeof(FeatureType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
