// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.EventSystems.BaseInputModule
#include "UnityEngine/EventSystems/BaseInputModule.hpp"
// Including type: UnityEngine.InputSystem.UI.UIPointerBehavior
#include "UnityEngine/InputSystem/UI/UIPointerBehavior.hpp"
// Including type: UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext
#include "UnityEngine/InputSystem/InputAction_CallbackContext.hpp"
// Including type: UnityEngine.InputSystem.UI.UIPointerType
#include "UnityEngine/InputSystem/UI/UIPointerType.hpp"
// Including type: UnityEngine.InputSystem.Utilities.InlinedArray`1
#include "UnityEngine/InputSystem/Utilities/InlinedArray_1.hpp"
// Including type: UnityEngine.InputSystem.UI.PointerModel
#include "UnityEngine/InputSystem/UI/PointerModel.hpp"
// Including type: UnityEngine.InputSystem.UI.NavigationModel
#include "UnityEngine/InputSystem/UI/NavigationModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputActionAsset
  class InputActionAsset;
  // Forward declaring type: InputActionReference
  class InputActionReference;
  // Forward declaring type: InputControl
  class InputControl;
  // Forward declaring type: InputDevice
  class InputDevice;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Skipping declaration: RaycastResult because it is already included!
  // Skipping declaration: PointerEventData because it is already included!
}
// Forward declaring namespace: UnityEngine::InputSystem::UI
namespace UnityEngine::InputSystem::UI {
  // Forward declaring type: ExtendedPointerEventData
  class ExtendedPointerEventData;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.UI
namespace UnityEngine::InputSystem::UI {
  // Forward declaring type: InputSystemUIInputModule
  class InputSystemUIInputModule;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::UI::InputSystemUIInputModule);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::UI::InputSystemUIInputModule*, "UnityEngine.InputSystem.UI", "InputSystemUIInputModule");
// Type namespace: UnityEngine.InputSystem.UI
namespace UnityEngine::InputSystem::UI {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.UI.InputSystemUIInputModule
  // [TokenAttribute] Offset: FFFFFFFF
  class InputSystemUIInputModule : public ::UnityEngine::EventSystems::BaseInputModule {
    public:
    public:
    // [FormerlySerializedAsAttribute] Offset: 0x95B538
    // [TooltipAttribute] Offset: 0x95B538
    // private System.Single m_MoveRepeatDelay
    // Size: 0x4
    // Offset: 0x48
    float m_MoveRepeatDelay;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [FormerlySerializedAsAttribute] Offset: 0x95B5A8
    // [TooltipAttribute] Offset: 0x95B5A8
    // private System.Single m_MoveRepeatRate
    // Size: 0x4
    // Offset: 0x4C
    float m_MoveRepeatRate;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [TooltipAttribute] Offset: 0x95B618
    // private System.Single m_TrackedDeviceDragThresholdMultiplier
    // Size: 0x4
    // Offset: 0x50
    float m_TrackedDeviceDragThresholdMultiplier;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.InputSystem.InputActionAsset m_ActionsAsset
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::InputSystem::InputActionAsset* m_ActionsAsset;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionAsset*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_PointAction
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::InputSystem::InputActionReference* m_PointAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_MoveAction
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::InputSystem::InputActionReference* m_MoveAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_SubmitAction
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::InputSystem::InputActionReference* m_SubmitAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_CancelAction
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::InputSystem::InputActionReference* m_CancelAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_LeftClickAction
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::InputSystem::InputActionReference* m_LeftClickAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_MiddleClickAction
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::InputSystem::InputActionReference* m_MiddleClickAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_RightClickAction
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::InputSystem::InputActionReference* m_RightClickAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_ScrollWheelAction
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::InputSystem::InputActionReference* m_ScrollWheelAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_TrackedDevicePositionAction
    // Size: 0x8
    // Offset: 0xA0
    ::UnityEngine::InputSystem::InputActionReference* m_TrackedDevicePositionAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private UnityEngine.InputSystem.InputActionReference m_TrackedDeviceOrientationAction
    // Size: 0x8
    // Offset: 0xA8
    ::UnityEngine::InputSystem::InputActionReference* m_TrackedDeviceOrientationAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // private System.Boolean m_DeselectOnBackgroundClick
    // Size: 0x1
    // Offset: 0xB0
    bool m_DeselectOnBackgroundClick;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.InputSystem.UI.UIPointerBehavior m_PointerBehavior
    // Size: 0x4
    // Offset: 0xB4
    ::UnityEngine::InputSystem::UI::UIPointerBehavior m_PointerBehavior;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::UI::UIPointerBehavior) == 0x4);
    // private System.Boolean m_OwnsEnabledState
    // Size: 0x1
    // Offset: 0xB8
    bool m_OwnsEnabledState;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_ActionsHooked
    // Size: 0x1
    // Offset: 0xB9
    bool m_ActionsHooked;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnPointDelegate
    // Size: 0x8
    // Offset: 0xC0
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnPointDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnMoveDelegate
    // Size: 0x8
    // Offset: 0xC8
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnMoveDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnSubmitDelegate
    // Size: 0x8
    // Offset: 0xD0
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnSubmitDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnCancelDelegate
    // Size: 0x8
    // Offset: 0xD8
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnCancelDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnLeftClickDelegate
    // Size: 0x8
    // Offset: 0xE0
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnLeftClickDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnRightClickDelegate
    // Size: 0x8
    // Offset: 0xE8
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnRightClickDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnMiddleClickDelegate
    // Size: 0x8
    // Offset: 0xF0
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnMiddleClickDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnScrollWheelDelegate
    // Size: 0x8
    // Offset: 0xF8
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnScrollWheelDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnTrackedDevicePositionDelegate
    // Size: 0x8
    // Offset: 0x100
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnTrackedDevicePositionDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnTrackedDeviceOrientationDelegate
    // Size: 0x8
    // Offset: 0x108
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_OnTrackedDeviceOrientationDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private System.Action`1<System.Object> m_OnControlsChangedDelegate
    // Size: 0x8
    // Offset: 0x110
    ::System::Action_1<::Il2CppObject*>* m_OnControlsChangedDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Il2CppObject*>*) == 0x8);
    // private System.Int32 m_CurrentPointerId
    // Size: 0x4
    // Offset: 0x118
    int m_CurrentPointerId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_CurrentPointerIndex
    // Size: 0x4
    // Offset: 0x11C
    int m_CurrentPointerIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.InputSystem.UI.UIPointerType m_CurrentPointerType
    // Size: 0x4
    // Offset: 0x120
    ::UnityEngine::InputSystem::UI::UIPointerType m_CurrentPointerType;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::UI::UIPointerType) == 0x4);
    // private UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Int32> m_PointerIds
    // Size: 0xFFFFFFFF
    // Offset: 0x128
    ::UnityEngine::InputSystem::Utilities::InlinedArray_1<int> m_PointerIds;
    // private UnityEngine.InputSystem.Utilities.InlinedArray`1<UnityEngine.InputSystem.UI.PointerModel> m_PointerStates
    // Size: 0xFFFFFFFF
    // Offset: 0x138
    ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::UI::PointerModel> m_PointerStates;
    // private UnityEngine.InputSystem.UI.NavigationModel m_NavigationState
    // Size: 0x30
    // Offset: 0x320
    ::UnityEngine::InputSystem::UI::NavigationModel m_NavigationState;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::UI::NavigationModel) == 0x30);
    public:
    // static field const value: static System.Single kPixelPerLine
    static constexpr const float kPixelPerLine = 20;
    // Get static field: static System.Single kPixelPerLine
    static float _get_kPixelPerLine();
    // Set static field: static System.Single kPixelPerLine
    static void _set_kPixelPerLine(float value);
    // Get instance field reference: private System.Single m_MoveRepeatDelay
    [[deprecated("Use field access instead!")]] float& dyn_m_MoveRepeatDelay();
    // Get instance field reference: private System.Single m_MoveRepeatRate
    [[deprecated("Use field access instead!")]] float& dyn_m_MoveRepeatRate();
    // Get instance field reference: private System.Single m_TrackedDeviceDragThresholdMultiplier
    [[deprecated("Use field access instead!")]] float& dyn_m_TrackedDeviceDragThresholdMultiplier();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionAsset m_ActionsAsset
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionAsset*& dyn_m_ActionsAsset();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_PointAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_PointAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_MoveAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_MoveAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_SubmitAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_SubmitAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_CancelAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_CancelAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_LeftClickAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_LeftClickAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_MiddleClickAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_MiddleClickAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_RightClickAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_RightClickAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_ScrollWheelAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_ScrollWheelAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_TrackedDevicePositionAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_TrackedDevicePositionAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_TrackedDeviceOrientationAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_TrackedDeviceOrientationAction();
    // Get instance field reference: private System.Boolean m_DeselectOnBackgroundClick
    [[deprecated("Use field access instead!")]] bool& dyn_m_DeselectOnBackgroundClick();
    // Get instance field reference: private UnityEngine.InputSystem.UI.UIPointerBehavior m_PointerBehavior
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::UI::UIPointerBehavior& dyn_m_PointerBehavior();
    // Get instance field reference: private System.Boolean m_OwnsEnabledState
    [[deprecated("Use field access instead!")]] bool& dyn_m_OwnsEnabledState();
    // Get instance field reference: private System.Boolean m_ActionsHooked
    [[deprecated("Use field access instead!")]] bool& dyn_m_ActionsHooked();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnPointDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnPointDelegate();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnMoveDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnMoveDelegate();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnSubmitDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnSubmitDelegate();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnCancelDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnCancelDelegate();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnLeftClickDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnLeftClickDelegate();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnRightClickDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnRightClickDelegate();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnMiddleClickDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnMiddleClickDelegate();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnScrollWheelDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnScrollWheelDelegate();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnTrackedDevicePositionDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnTrackedDevicePositionDelegate();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_OnTrackedDeviceOrientationDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_OnTrackedDeviceOrientationDelegate();
    // Get instance field reference: private System.Action`1<System.Object> m_OnControlsChangedDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Il2CppObject*>*& dyn_m_OnControlsChangedDelegate();
    // Get instance field reference: private System.Int32 m_CurrentPointerId
    [[deprecated("Use field access instead!")]] int& dyn_m_CurrentPointerId();
    // Get instance field reference: private System.Int32 m_CurrentPointerIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_CurrentPointerIndex();
    // Get instance field reference: private UnityEngine.InputSystem.UI.UIPointerType m_CurrentPointerType
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::UI::UIPointerType& dyn_m_CurrentPointerType();
    // Get instance field reference: private UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Int32> m_PointerIds
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<int>& dyn_m_PointerIds();
    // Get instance field reference: private UnityEngine.InputSystem.Utilities.InlinedArray`1<UnityEngine.InputSystem.UI.PointerModel> m_PointerStates
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::UnityEngine::InputSystem::UI::PointerModel>& dyn_m_PointerStates();
    // Get instance field reference: private UnityEngine.InputSystem.UI.NavigationModel m_NavigationState
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::UI::NavigationModel& dyn_m_NavigationState();
    // public System.Boolean get_deselectOnBackgroundClick()
    // Offset: 0xCD5BE0
    bool get_deselectOnBackgroundClick();
    // public System.Void set_deselectOnBackgroundClick(System.Boolean value)
    // Offset: 0xCD5BE8
    void set_deselectOnBackgroundClick(bool value);
    // public UnityEngine.InputSystem.UI.UIPointerBehavior get_pointerBehavior()
    // Offset: 0xCD5BF4
    ::UnityEngine::InputSystem::UI::UIPointerBehavior get_pointerBehavior();
    // public System.Void set_pointerBehavior(UnityEngine.InputSystem.UI.UIPointerBehavior value)
    // Offset: 0xCD5BFC
    void set_pointerBehavior(::UnityEngine::InputSystem::UI::UIPointerBehavior value);
    // public System.Single get_moveRepeatDelay()
    // Offset: 0xCD7D2C
    float get_moveRepeatDelay();
    // public System.Void set_moveRepeatDelay(System.Single value)
    // Offset: 0xCD7D34
    void set_moveRepeatDelay(float value);
    // public System.Single get_moveRepeatRate()
    // Offset: 0xCD7D3C
    float get_moveRepeatRate();
    // public System.Void set_moveRepeatRate(System.Single value)
    // Offset: 0xCD7D44
    void set_moveRepeatRate(float value);
    // public System.Single get_repeatRate()
    // Offset: 0xCD7D4C
    float get_repeatRate();
    // public System.Void set_repeatRate(System.Single value)
    // Offset: 0xCD7D54
    void set_repeatRate(float value);
    // public System.Single get_repeatDelay()
    // Offset: 0xCD7D5C
    float get_repeatDelay();
    // public System.Void set_repeatDelay(System.Single value)
    // Offset: 0xCD7D64
    void set_repeatDelay(float value);
    // public System.Single get_trackedDeviceDragThresholdMultiplier()
    // Offset: 0xCD7D6C
    float get_trackedDeviceDragThresholdMultiplier();
    // public System.Void set_trackedDeviceDragThresholdMultiplier(System.Single value)
    // Offset: 0xCD7D74
    void set_trackedDeviceDragThresholdMultiplier(float value);
    // public UnityEngine.InputSystem.InputActionReference get_point()
    // Offset: 0xCD7F94
    ::UnityEngine::InputSystem::InputActionReference* get_point();
    // public System.Void set_point(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xCD7F9C
    void set_point(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_scrollWheel()
    // Offset: 0xCD7FB4
    ::UnityEngine::InputSystem::InputActionReference* get_scrollWheel();
    // public System.Void set_scrollWheel(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xCD7FBC
    void set_scrollWheel(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_leftClick()
    // Offset: 0xCD7FD4
    ::UnityEngine::InputSystem::InputActionReference* get_leftClick();
    // public System.Void set_leftClick(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xCD7FDC
    void set_leftClick(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_middleClick()
    // Offset: 0xCD7FF4
    ::UnityEngine::InputSystem::InputActionReference* get_middleClick();
    // public System.Void set_middleClick(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xCD7FFC
    void set_middleClick(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_rightClick()
    // Offset: 0xCD8014
    ::UnityEngine::InputSystem::InputActionReference* get_rightClick();
    // public System.Void set_rightClick(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xCD801C
    void set_rightClick(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_move()
    // Offset: 0xCD8034
    ::UnityEngine::InputSystem::InputActionReference* get_move();
    // public System.Void set_move(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xCD803C
    void set_move(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_submit()
    // Offset: 0xCD8054
    ::UnityEngine::InputSystem::InputActionReference* get_submit();
    // public System.Void set_submit(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xCD805C
    void set_submit(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_cancel()
    // Offset: 0xCD8074
    ::UnityEngine::InputSystem::InputActionReference* get_cancel();
    // public System.Void set_cancel(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xCD807C
    void set_cancel(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_trackedDeviceOrientation()
    // Offset: 0xCD8094
    ::UnityEngine::InputSystem::InputActionReference* get_trackedDeviceOrientation();
    // public System.Void set_trackedDeviceOrientation(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xCD809C
    void set_trackedDeviceOrientation(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_trackedDevicePosition()
    // Offset: 0xCD80B4
    ::UnityEngine::InputSystem::InputActionReference* get_trackedDevicePosition();
    // public System.Void set_trackedDevicePosition(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xCD80BC
    void set_trackedDevicePosition(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_trackedDeviceSelect()
    // Offset: 0xCD80D4
    ::UnityEngine::InputSystem::InputActionReference* get_trackedDeviceSelect();
    // public System.Void set_trackedDeviceSelect(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xCD8134
    void set_trackedDeviceSelect(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionAsset get_actionsAsset()
    // Offset: 0xCDA054
    ::UnityEngine::InputSystem::InputActionAsset* get_actionsAsset();
    // public System.Void set_actionsAsset(UnityEngine.InputSystem.InputActionAsset value)
    // Offset: 0xCCBC48
    void set_actionsAsset(::UnityEngine::InputSystem::InputActionAsset* value);
    // public System.Void .ctor()
    // Offset: 0xCDA05C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputSystemUIInputModule* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::UI::InputSystemUIInputModule::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputSystemUIInputModule*, creationType>()));
    }
    // private UnityEngine.EventSystems.RaycastResult PerformRaycast(UnityEngine.InputSystem.UI.ExtendedPointerEventData eventData)
    // Offset: 0xCD5EF0
    ::UnityEngine::EventSystems::RaycastResult PerformRaycast(::UnityEngine::InputSystem::UI::ExtendedPointerEventData* eventData);
    // private System.Void ProcessPointer(ref UnityEngine.InputSystem.UI.PointerModel state)
    // Offset: 0xCD6114
    void ProcessPointer(ByRef<::UnityEngine::InputSystem::UI::PointerModel> state);
    // private System.Boolean PointerShouldIgnoreTransform(UnityEngine.Transform t)
    // Offset: 0xCD70C4
    bool PointerShouldIgnoreTransform(::UnityEngine::Transform* t);
    // private System.Void ProcessPointerMovement(ref UnityEngine.InputSystem.UI.PointerModel pointer, UnityEngine.InputSystem.UI.ExtendedPointerEventData eventData)
    // Offset: 0xCD63E0
    void ProcessPointerMovement(ByRef<::UnityEngine::InputSystem::UI::PointerModel> pointer, ::UnityEngine::InputSystem::UI::ExtendedPointerEventData* eventData);
    // private System.Void ProcessPointerMovement(UnityEngine.InputSystem.UI.ExtendedPointerEventData eventData, UnityEngine.GameObject currentPointerTarget)
    // Offset: 0xCD71BC
    void ProcessPointerMovement(::UnityEngine::InputSystem::UI::ExtendedPointerEventData* eventData, ::UnityEngine::GameObject* currentPointerTarget);
    // private System.Void ProcessPointerButton(ref UnityEngine.InputSystem.UI.PointerModel/UnityEngine.InputSystem.UI.ButtonState button, UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0xCD6454
    void ProcessPointerButton(ByRef<::UnityEngine::InputSystem::UI::PointerModel::ButtonState> button, ::UnityEngine::EventSystems::PointerEventData* eventData);
    // private System.Void ProcessPointerButtonDrag(ref UnityEngine.InputSystem.UI.PointerModel/UnityEngine.InputSystem.UI.ButtonState button, UnityEngine.InputSystem.UI.ExtendedPointerEventData eventData)
    // Offset: 0xCD6BFC
    void ProcessPointerButtonDrag(ByRef<::UnityEngine::InputSystem::UI::PointerModel::ButtonState> button, ::UnityEngine::InputSystem::UI::ExtendedPointerEventData* eventData);
    // static private System.Void ProcessPointerScroll(ref UnityEngine.InputSystem.UI.PointerModel pointer, UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0xCD6F78
    static void ProcessPointerScroll(ByRef<::UnityEngine::InputSystem::UI::PointerModel> pointer, ::UnityEngine::EventSystems::PointerEventData* eventData);
    // System.Void ProcessNavigation(ref UnityEngine.InputSystem.UI.NavigationModel navigationState)
    // Offset: 0xCD7738
    void ProcessNavigation(ByRef<::UnityEngine::InputSystem::UI::NavigationModel> navigationState);
    // private System.Void SwapAction(ref UnityEngine.InputSystem.InputActionReference property, UnityEngine.InputSystem.InputActionReference newValue, System.Boolean actionsHooked, System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> actionCallback)
    // Offset: 0xCD7D7C
    void SwapAction(ByRef<::UnityEngine::InputSystem::InputActionReference*> property, ::UnityEngine::InputSystem::InputActionReference* newValue, bool actionsHooked, ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* actionCallback);
    // private System.Boolean IsAnyActionEnabled()
    // Offset: 0xCD8920
    bool IsAnyActionEnabled();
    // private System.Void EnableAllActions()
    // Offset: 0xCD85B4
    void EnableAllActions();
    // private System.Void DisableAllActions()
    // Offset: 0xCD87D8
    void DisableAllActions();
    // private System.Int32 GetPointerStateIndexFor(System.Int32 pointerId)
    // Offset: 0xCD5E44
    int GetPointerStateIndexFor(int pointerId);
    // private UnityEngine.InputSystem.UI.PointerModel GetPointerStateForIndex(System.Int32 index)
    // Offset: 0xCD8C8C
    ::UnityEngine::InputSystem::UI::PointerModel GetPointerStateForIndex(int index);
    // private UnityEngine.InputSystem.UI.PointerModel GetPointerStateFor(ref UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xCD8CDC
    ::UnityEngine::InputSystem::UI::PointerModel GetPointerStateFor(ByRef<::UnityEngine::InputSystem::InputAction_CallbackContext> context);
    // private System.Int32 GetPointerStateIndexFor(UnityEngine.InputSystem.InputControl control)
    // Offset: 0xCD8D18
    int GetPointerStateIndexFor(::UnityEngine::InputSystem::InputControl* control);
    // private System.Int32 AllocatePointer(System.Int32 pointerId, System.Int32 touchId, UnityEngine.InputSystem.UI.UIPointerType pointerType, UnityEngine.InputSystem.InputDevice device)
    // Offset: 0xCD94F0
    int AllocatePointer(int pointerId, int touchId, ::UnityEngine::InputSystem::UI::UIPointerType pointerType, ::UnityEngine::InputSystem::InputDevice* device);
    // private System.Void SendPointerExitEventsAndRemovePointer(System.Int32 index)
    // Offset: 0xCD9418
    void SendPointerExitEventsAndRemovePointer(int index);
    // private System.Void RemovePointerAtIndex(System.Int32 index)
    // Offset: 0xCD9674
    void RemovePointerAtIndex(int index);
    // private System.Void PurgeStalePointers()
    // Offset: 0xCD97E8
    void PurgeStalePointers();
    // static private System.Boolean HaveControlForDevice(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.InputActionReference actionReference)
    // Offset: 0xCD9348
    static bool HaveControlForDevice(::UnityEngine::InputSystem::InputDevice* device, ::UnityEngine::InputSystem::InputActionReference* actionReference);
    // private System.Void OnPoint(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xCD9888
    void OnPoint(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnLeftClick(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xCD9904
    void OnLeftClick(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnRightClick(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xCD995C
    void OnRightClick(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnMiddleClick(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xCD99B4
    void OnMiddleClick(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnScroll(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xCD9A0C
    void OnScroll(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnMove(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xCD9AD0
    void OnMove(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnSubmit(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xCD9B38
    void OnSubmit(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnCancel(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xCD9B7C
    void OnCancel(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnTrackedDeviceOrientation(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xCD9BC0
    void OnTrackedDeviceOrientation(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnTrackedDevicePosition(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xCD9C3C
    void OnTrackedDevicePosition(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnControlsChanged(System.Object obj)
    // Offset: 0xCD9CB8
    void OnControlsChanged(::Il2CppObject* obj);
    // private System.Void HookActions()
    // Offset: 0xCD82D8
    void HookActions();
    // private System.Void UnhookActions()
    // Offset: 0xCD8200
    void UnhookActions();
    // private System.Void SetActionCallbacks(System.Boolean install)
    // Offset: 0xCD9E10
    void SetActionCallbacks(bool install);
    // static private System.Void SetActionCallback(UnityEngine.InputSystem.InputActionReference actionReference, System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> callback, System.Boolean install)
    // Offset: 0xCD9ED4
    static void SetActionCallback(::UnityEngine::InputSystem::InputActionReference* actionReference, ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* callback, bool install);
    // private UnityEngine.InputSystem.InputActionReference UpdateReferenceForNewAsset(UnityEngine.InputSystem.InputActionReference actionReference)
    // Offset: 0xCD9FC8
    ::UnityEngine::InputSystem::InputActionReference* UpdateReferenceForNewAsset(::UnityEngine::InputSystem::InputActionReference* actionReference);
    // public override System.Void ActivateModule()
    // Offset: 0xCD5C04
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Void BaseInputModule::ActivateModule()
    void ActivateModule();
    // public override System.Boolean IsPointerOverGameObject(System.Int32 pointerOrTouchId)
    // Offset: 0xCD5CD0
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Boolean BaseInputModule::IsPointerOverGameObject(System.Int32 pointerOrTouchId)
    bool IsPointerOverGameObject(int pointerOrTouchId);
    // protected override System.Void Awake()
    // Offset: 0xCD8194
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::Awake()
    void Awake();
    // protected override System.Void OnDestroy()
    // Offset: 0xCD81C0
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnDestroy()
    void OnDestroy();
    // protected override System.Void OnEnable()
    // Offset: 0xCD8214
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Void BaseInputModule::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0xCD86F8
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Void BaseInputModule::OnDisable()
    void OnDisable();
    // public override System.Void Process()
    // Offset: 0xCD9CBC
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Void BaseInputModule::Process()
    void Process();
  }; // UnityEngine.InputSystem.UI.InputSystemUIInputModule
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_deselectOnBackgroundClick
// Il2CppName: get_deselectOnBackgroundClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_deselectOnBackgroundClick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_deselectOnBackgroundClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_deselectOnBackgroundClick
// Il2CppName: set_deselectOnBackgroundClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(bool)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_deselectOnBackgroundClick)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_deselectOnBackgroundClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_pointerBehavior
// Il2CppName: get_pointerBehavior
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::UI::UIPointerBehavior (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_pointerBehavior)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_pointerBehavior", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_pointerBehavior
// Il2CppName: set_pointerBehavior
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::UI::UIPointerBehavior)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_pointerBehavior)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "UIPointerBehavior")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_pointerBehavior", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_moveRepeatDelay
// Il2CppName: get_moveRepeatDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_moveRepeatDelay)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_moveRepeatDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_moveRepeatDelay
// Il2CppName: set_moveRepeatDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(float)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_moveRepeatDelay)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_moveRepeatDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_moveRepeatRate
// Il2CppName: get_moveRepeatRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_moveRepeatRate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_moveRepeatRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_moveRepeatRate
// Il2CppName: set_moveRepeatRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(float)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_moveRepeatRate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_moveRepeatRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_repeatRate
// Il2CppName: get_repeatRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_repeatRate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_repeatRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_repeatRate
// Il2CppName: set_repeatRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(float)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_repeatRate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_repeatRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_repeatDelay
// Il2CppName: get_repeatDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_repeatDelay)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_repeatDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_repeatDelay
// Il2CppName: set_repeatDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(float)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_repeatDelay)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_repeatDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_trackedDeviceDragThresholdMultiplier
// Il2CppName: get_trackedDeviceDragThresholdMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_trackedDeviceDragThresholdMultiplier)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_trackedDeviceDragThresholdMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_trackedDeviceDragThresholdMultiplier
// Il2CppName: set_trackedDeviceDragThresholdMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(float)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_trackedDeviceDragThresholdMultiplier)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_trackedDeviceDragThresholdMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_point
// Il2CppName: get_point
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_point)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_point", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_point
// Il2CppName: set_point
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_point)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_point", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_scrollWheel
// Il2CppName: get_scrollWheel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_scrollWheel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_scrollWheel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_scrollWheel
// Il2CppName: set_scrollWheel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_scrollWheel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_scrollWheel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_leftClick
// Il2CppName: get_leftClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_leftClick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_leftClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_leftClick
// Il2CppName: set_leftClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_leftClick)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_leftClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_middleClick
// Il2CppName: get_middleClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_middleClick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_middleClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_middleClick
// Il2CppName: set_middleClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_middleClick)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_middleClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_rightClick
// Il2CppName: get_rightClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_rightClick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_rightClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_rightClick
// Il2CppName: set_rightClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_rightClick)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_rightClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_move
// Il2CppName: get_move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_move)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_move
// Il2CppName: set_move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_move)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_submit
// Il2CppName: get_submit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_submit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_submit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_submit
// Il2CppName: set_submit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_submit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_submit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_cancel
// Il2CppName: get_cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_cancel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_cancel
// Il2CppName: set_cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_cancel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_trackedDeviceOrientation
// Il2CppName: get_trackedDeviceOrientation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_trackedDeviceOrientation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_trackedDeviceOrientation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_trackedDeviceOrientation
// Il2CppName: set_trackedDeviceOrientation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_trackedDeviceOrientation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_trackedDeviceOrientation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_trackedDevicePosition
// Il2CppName: get_trackedDevicePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_trackedDevicePosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_trackedDevicePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_trackedDevicePosition
// Il2CppName: set_trackedDevicePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_trackedDevicePosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_trackedDevicePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_trackedDeviceSelect
// Il2CppName: get_trackedDeviceSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_trackedDeviceSelect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_trackedDeviceSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_trackedDeviceSelect
// Il2CppName: set_trackedDeviceSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_trackedDeviceSelect)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_trackedDeviceSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_actionsAsset
// Il2CppName: get_actionsAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionAsset* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::get_actionsAsset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "get_actionsAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_actionsAsset
// Il2CppName: set_actionsAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionAsset*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::set_actionsAsset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "set_actionsAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::PerformRaycast
// Il2CppName: PerformRaycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::EventSystems::RaycastResult (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::UI::ExtendedPointerEventData*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::PerformRaycast)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "ExtendedPointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "PerformRaycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointer
// Il2CppName: ProcessPointer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(ByRef<::UnityEngine::InputSystem::UI::PointerModel>)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointer)> {
  static const MethodInfo* get() {
    static auto* state = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "PointerModel")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ProcessPointer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{state});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::PointerShouldIgnoreTransform
// Il2CppName: PointerShouldIgnoreTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::Transform*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::PointerShouldIgnoreTransform)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "PointerShouldIgnoreTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerMovement
// Il2CppName: ProcessPointerMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(ByRef<::UnityEngine::InputSystem::UI::PointerModel>, ::UnityEngine::InputSystem::UI::ExtendedPointerEventData*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerMovement)> {
  static const MethodInfo* get() {
    static auto* pointer = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "PointerModel")->this_arg;
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "ExtendedPointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ProcessPointerMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointer, eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerMovement
// Il2CppName: ProcessPointerMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::UI::ExtendedPointerEventData*, ::UnityEngine::GameObject*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerMovement)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "ExtendedPointerEventData")->byval_arg;
    static auto* currentPointerTarget = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ProcessPointerMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData, currentPointerTarget});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerButton
// Il2CppName: ProcessPointerButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(ByRef<::UnityEngine::InputSystem::UI::PointerModel::ButtonState>, ::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerButton)> {
  static const MethodInfo* get() {
    static auto* button = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "PointerModel/ButtonState")->this_arg;
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ProcessPointerButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{button, eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerButtonDrag
// Il2CppName: ProcessPointerButtonDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(ByRef<::UnityEngine::InputSystem::UI::PointerModel::ButtonState>, ::UnityEngine::InputSystem::UI::ExtendedPointerEventData*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerButtonDrag)> {
  static const MethodInfo* get() {
    static auto* button = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "PointerModel/ButtonState")->this_arg;
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "ExtendedPointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ProcessPointerButtonDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{button, eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerScroll
// Il2CppName: ProcessPointerScroll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::InputSystem::UI::PointerModel>, ::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessPointerScroll)> {
  static const MethodInfo* get() {
    static auto* pointer = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "PointerModel")->this_arg;
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ProcessPointerScroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointer, eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessNavigation
// Il2CppName: ProcessNavigation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(ByRef<::UnityEngine::InputSystem::UI::NavigationModel>)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ProcessNavigation)> {
  static const MethodInfo* get() {
    static auto* navigationState = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "NavigationModel")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ProcessNavigation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{navigationState});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::SwapAction
// Il2CppName: SwapAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(ByRef<::UnityEngine::InputSystem::InputActionReference*>, ::UnityEngine::InputSystem::InputActionReference*, bool, ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::SwapAction)> {
  static const MethodInfo* get() {
    static auto* property = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->this_arg;
    static auto* newValue = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    static auto* actionsHooked = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* actionCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "SwapAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{property, newValue, actionsHooked, actionCallback});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::IsAnyActionEnabled
// Il2CppName: IsAnyActionEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::IsAnyActionEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "IsAnyActionEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::EnableAllActions
// Il2CppName: EnableAllActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::EnableAllActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "EnableAllActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::DisableAllActions
// Il2CppName: DisableAllActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::DisableAllActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "DisableAllActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetPointerStateIndexFor
// Il2CppName: GetPointerStateIndexFor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(int)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetPointerStateIndexFor)> {
  static const MethodInfo* get() {
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "GetPointerStateIndexFor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerId});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetPointerStateForIndex
// Il2CppName: GetPointerStateForIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::UI::PointerModel (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(int)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetPointerStateForIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "GetPointerStateForIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetPointerStateFor
// Il2CppName: GetPointerStateFor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::UI::PointerModel (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(ByRef<::UnityEngine::InputSystem::InputAction_CallbackContext>)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetPointerStateFor)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "GetPointerStateFor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetPointerStateIndexFor
// Il2CppName: GetPointerStateIndexFor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputControl*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::GetPointerStateIndexFor)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "GetPointerStateIndexFor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::AllocatePointer
// Il2CppName: AllocatePointer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(int, int, ::UnityEngine::InputSystem::UI::UIPointerType, ::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::AllocatePointer)> {
  static const MethodInfo* get() {
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* touchId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* pointerType = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "UIPointerType")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "AllocatePointer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerId, touchId, pointerType, device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::SendPointerExitEventsAndRemovePointer
// Il2CppName: SendPointerExitEventsAndRemovePointer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(int)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::SendPointerExitEventsAndRemovePointer)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "SendPointerExitEventsAndRemovePointer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::RemovePointerAtIndex
// Il2CppName: RemovePointerAtIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(int)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::RemovePointerAtIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "RemovePointerAtIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::PurgeStalePointers
// Il2CppName: PurgeStalePointers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::PurgeStalePointers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "PurgeStalePointers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::HaveControlForDevice
// Il2CppName: HaveControlForDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::HaveControlForDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* actionReference = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "HaveControlForDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, actionReference});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnPoint
// Il2CppName: OnPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnPoint)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnLeftClick
// Il2CppName: OnLeftClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnLeftClick)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnLeftClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnRightClick
// Il2CppName: OnRightClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnRightClick)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnRightClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnMiddleClick
// Il2CppName: OnMiddleClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnMiddleClick)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnMiddleClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnScroll
// Il2CppName: OnScroll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnScroll)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnScroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnMove
// Il2CppName: OnMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnMove)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnSubmit
// Il2CppName: OnSubmit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnSubmit)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnSubmit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnCancel
// Il2CppName: OnCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnCancel)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnTrackedDeviceOrientation
// Il2CppName: OnTrackedDeviceOrientation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnTrackedDeviceOrientation)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnTrackedDeviceOrientation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnTrackedDevicePosition
// Il2CppName: OnTrackedDevicePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnTrackedDevicePosition)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnTrackedDevicePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnControlsChanged
// Il2CppName: OnControlsChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::Il2CppObject*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnControlsChanged)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnControlsChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::HookActions
// Il2CppName: HookActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::HookActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "HookActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::UnhookActions
// Il2CppName: UnhookActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::UnhookActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "UnhookActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::SetActionCallbacks
// Il2CppName: SetActionCallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(bool)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::SetActionCallbacks)> {
  static const MethodInfo* get() {
    static auto* install = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "SetActionCallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{install});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::SetActionCallback
// Il2CppName: SetActionCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputActionReference*, ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*, bool)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::SetActionCallback)> {
  static const MethodInfo* get() {
    static auto* actionReference = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    static auto* install = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "SetActionCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actionReference, callback, install});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::UpdateReferenceForNewAsset
// Il2CppName: UpdateReferenceForNewAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::UpdateReferenceForNewAsset)> {
  static const MethodInfo* get() {
    static auto* actionReference = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "UpdateReferenceForNewAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actionReference});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::ActivateModule
// Il2CppName: ActivateModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::ActivateModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "ActivateModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::IsPointerOverGameObject
// Il2CppName: IsPointerOverGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)(int)>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::IsPointerOverGameObject)> {
  static const MethodInfo* get() {
    static auto* pointerOrTouchId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "IsPointerOverGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerOrTouchId});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::UI::InputSystemUIInputModule::Process
// Il2CppName: Process
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::UI::InputSystemUIInputModule::*)()>(&UnityEngine::InputSystem::UI::InputSystemUIInputModule::Process)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::UI::InputSystemUIInputModule*), "Process", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
