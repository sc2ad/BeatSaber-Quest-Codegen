// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.Processors.CompensateRotationProcessor
#include "UnityEngine/InputSystem/Processors/CompensateRotationProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Quaternion because it is already included!
}
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputControl
  class InputControl;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.Android.LowLevel
namespace UnityEngine::InputSystem::Android::LowLevel {
  // Forward declaring type: AndroidCompensateRotationProcessor
  class AndroidCompensateRotationProcessor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::Android::LowLevel::AndroidCompensateRotationProcessor);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Android::LowLevel::AndroidCompensateRotationProcessor*, "UnityEngine.InputSystem.Android.LowLevel", "AndroidCompensateRotationProcessor");
// Type namespace: UnityEngine.InputSystem.Android.LowLevel
namespace UnityEngine::InputSystem::Android::LowLevel {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.Android.LowLevel.AndroidCompensateRotationProcessor
  // [TokenAttribute] Offset: FFFFFFFF
  // [DesignTimeVisibleAttribute] Offset: 958C30
  // [PreserveAttribute] Offset: FFFFFFFF
  class AndroidCompensateRotationProcessor : public ::UnityEngine::InputSystem::Processors::CompensateRotationProcessor {
    public:
    // public System.Void .ctor()
    // Offset: 0xE11AA0
    // Implemented from: UnityEngine.InputSystem.Processors.CompensateRotationProcessor
    // Base method: System.Void CompensateRotationProcessor::.ctor()
    // Base method: System.Void InputProcessor_1::.ctor()
    // Base method: System.Void InputProcessor::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AndroidCompensateRotationProcessor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Android::LowLevel::AndroidCompensateRotationProcessor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AndroidCompensateRotationProcessor*, creationType>()));
    }
    // public override UnityEngine.Quaternion Process(UnityEngine.Quaternion value, UnityEngine.InputSystem.InputControl control)
    // Offset: 0xE119BC
    // Implemented from: UnityEngine.InputSystem.Processors.CompensateRotationProcessor
    // Base method: UnityEngine.Quaternion CompensateRotationProcessor::Process(UnityEngine.Quaternion value, UnityEngine.InputSystem.InputControl control)
    ::UnityEngine::Quaternion Process(::UnityEngine::Quaternion value, ::UnityEngine::InputSystem::InputControl* control);
  }; // UnityEngine.InputSystem.Android.LowLevel.AndroidCompensateRotationProcessor
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Android::LowLevel::AndroidCompensateRotationProcessor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Android::LowLevel::AndroidCompensateRotationProcessor::Process
// Il2CppName: Process
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (UnityEngine::InputSystem::Android::LowLevel::AndroidCompensateRotationProcessor::*)(::UnityEngine::Quaternion, ::UnityEngine::InputSystem::InputControl*)>(&UnityEngine::InputSystem::Android::LowLevel::AndroidCompensateRotationProcessor::Process)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Android::LowLevel::AndroidCompensateRotationProcessor*), "Process", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, control});
  }
};
