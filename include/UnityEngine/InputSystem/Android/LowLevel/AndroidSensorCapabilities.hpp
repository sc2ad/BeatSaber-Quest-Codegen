// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.InputSystem.Android.LowLevel.AndroidSensorType
#include "UnityEngine/InputSystem/Android/LowLevel/AndroidSensorType.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine.InputSystem.Android.LowLevel
namespace UnityEngine::InputSystem::Android::LowLevel {
  // Forward declaring type: AndroidSensorCapabilities
  struct AndroidSensorCapabilities;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Android::LowLevel::AndroidSensorCapabilities, "UnityEngine.InputSystem.Android.LowLevel", "AndroidSensorCapabilities");
// Type namespace: UnityEngine.InputSystem.Android.LowLevel
namespace UnityEngine::InputSystem::Android::LowLevel {
  // Size: 0x4
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.Android.LowLevel.AndroidSensorCapabilities
  // [TokenAttribute] Offset: FFFFFFFF
  struct AndroidSensorCapabilities/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.InputSystem.Android.LowLevel.AndroidSensorType sensorType
    // Size: 0x4
    // Offset: 0x0
    ::UnityEngine::InputSystem::Android::LowLevel::AndroidSensorType sensorType;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Android::LowLevel::AndroidSensorType) == 0x4);
    public:
    // Creating value type constructor for type: AndroidSensorCapabilities
    constexpr AndroidSensorCapabilities(::UnityEngine::InputSystem::Android::LowLevel::AndroidSensorType sensorType_ = {}) noexcept : sensorType{sensorType_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::UnityEngine::InputSystem::Android::LowLevel::AndroidSensorType
    constexpr operator ::UnityEngine::InputSystem::Android::LowLevel::AndroidSensorType() const noexcept {
      return sensorType;
    }
    // Get instance field reference: public UnityEngine.InputSystem.Android.LowLevel.AndroidSensorType sensorType
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Android::LowLevel::AndroidSensorType& dyn_sensorType();
    // public System.String ToJson()
    // Offset: 0xA44748
    ::StringW ToJson();
    // static public UnityEngine.InputSystem.Android.LowLevel.AndroidSensorCapabilities FromJson(System.String json)
    // Offset: 0xE120C4
    static ::UnityEngine::InputSystem::Android::LowLevel::AndroidSensorCapabilities FromJson(::StringW json);
    // public override System.String ToString()
    // Offset: 0xA44750
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // UnityEngine.InputSystem.Android.LowLevel.AndroidSensorCapabilities
  #pragma pack(pop)
  static check_size<sizeof(AndroidSensorCapabilities), 0 + sizeof(::UnityEngine::InputSystem::Android::LowLevel::AndroidSensorType)> __UnityEngine_InputSystem_Android_LowLevel_AndroidSensorCapabilitiesSizeCheck;
  static_assert(sizeof(AndroidSensorCapabilities) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Android::LowLevel::AndroidSensorCapabilities::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Android::LowLevel::AndroidSensorCapabilities::*)()>(&UnityEngine::InputSystem::Android::LowLevel::AndroidSensorCapabilities::ToJson)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Android::LowLevel::AndroidSensorCapabilities), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Android::LowLevel::AndroidSensorCapabilities::FromJson
// Il2CppName: FromJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Android::LowLevel::AndroidSensorCapabilities (*)(::StringW)>(&UnityEngine::InputSystem::Android::LowLevel::AndroidSensorCapabilities::FromJson)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Android::LowLevel::AndroidSensorCapabilities), "FromJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Android::LowLevel::AndroidSensorCapabilities::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Android::LowLevel::AndroidSensorCapabilities::*)()>(&UnityEngine::InputSystem::Android::LowLevel::AndroidSensorCapabilities::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Android::LowLevel::AndroidSensorCapabilities), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
