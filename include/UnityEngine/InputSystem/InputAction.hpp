// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ICloneable
#include "System/ICloneable.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: UnityEngine.InputSystem.InputActionType
#include "UnityEngine/InputSystem/InputActionType.hpp"
// Including type: UnityEngine.InputSystem.InputBinding
#include "UnityEngine/InputSystem/InputBinding.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.InputSystem.Utilities.InlinedArray`1
#include "UnityEngine/InputSystem/Utilities/InlinedArray_1.hpp"
// Including type: UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext
#include "UnityEngine/InputSystem/InputAction_CallbackContext.hpp"
// Including type: UnityEngine.InputSystem.InputActionState
#include "UnityEngine/InputSystem/InputActionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputActionMap
  class InputActionMap;
  // Forward declaring type: InputControl
  class InputControl;
  // Forward declaring type: InputActionPhase
  struct InputActionPhase;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Guid
  struct Guid;
  // Skipping declaration: ValueType because it is already included!
}
// Forward declaring namespace: UnityEngine::InputSystem::Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: ReadOnlyArray`1<TValue>
  template<typename TValue>
  struct ReadOnlyArray_1;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputAction
  class InputAction;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::InputAction);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputAction*, "UnityEngine.InputSystem", "InputAction");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.InputAction
  // [TokenAttribute] Offset: FFFFFFFF
  class InputAction : public ::Il2CppObject/*, public ::System::ICloneable, public ::System::IDisposable*/ {
    public:
    public:
    // [TooltipAttribute] Offset: 0x95A544
    // System.String m_Name
    // Size: 0x8
    // Offset: 0x10
    ::StringW m_Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // UnityEngine.InputSystem.InputActionType m_Type
    // Size: 0x4
    // Offset: 0x18
    ::UnityEngine::InputSystem::InputActionType m_Type;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionType) == 0x4);
    // [FormerlySerializedAsAttribute] Offset: 0x95A5A0
    // [TooltipAttribute] Offset: 0x95A5A0
    // System.String m_ExpectedControlType
    // Size: 0x8
    // Offset: 0x20
    ::StringW m_ExpectedControlType;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [TooltipAttribute] Offset: 0x95A610
    // System.String m_Id
    // Size: 0x8
    // Offset: 0x28
    ::StringW m_Id;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.String m_Processors
    // Size: 0x8
    // Offset: 0x30
    ::StringW m_Processors;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.String m_Interactions
    // Size: 0x8
    // Offset: 0x38
    ::StringW m_Interactions;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // UnityEngine.InputSystem.InputBinding[] m_SingletonActionBindings
    // Size: 0x8
    // Offset: 0x40
    ::ArrayW<::UnityEngine::InputSystem::InputBinding> m_SingletonActionBindings;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::InputBinding>) == 0x8);
    // System.Nullable`1<UnityEngine.InputSystem.InputBinding> m_BindingMask
    // Size: 0xFFFFFFFF
    // Offset: 0x48
    ::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> m_BindingMask;
    // System.Int32 m_BindingsStartIndex
    // Size: 0x4
    // Offset: 0xA8
    int m_BindingsStartIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 m_BindingsCount
    // Size: 0x4
    // Offset: 0xAC
    int m_BindingsCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 m_ControlStartIndex
    // Size: 0x4
    // Offset: 0xB0
    int m_ControlStartIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 m_ControlCount
    // Size: 0x4
    // Offset: 0xB4
    int m_ControlCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 m_ActionIndexInState
    // Size: 0x4
    // Offset: 0xB8
    int m_ActionIndexInState;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // UnityEngine.InputSystem.InputActionMap m_ActionMap
    // Size: 0x8
    // Offset: 0xC0
    ::UnityEngine::InputSystem::InputActionMap* m_ActionMap;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionMap*) == 0x8);
    // UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext>> m_OnStarted
    // Size: 0xFFFFFFFF
    // Offset: 0xC8
    ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*> m_OnStarted;
    // UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext>> m_OnCanceled
    // Size: 0xFFFFFFFF
    // Offset: 0xE0
    ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*> m_OnCanceled;
    // UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext>> m_OnPerformed
    // Size: 0xFFFFFFFF
    // Offset: 0xF8
    ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*> m_OnPerformed;
    public:
    // Creating interface conversion operator: operator ::System::ICloneable
    operator ::System::ICloneable() noexcept {
      return *reinterpret_cast<::System::ICloneable*>(this);
    }
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: System.String m_Name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Name();
    // Get instance field reference: UnityEngine.InputSystem.InputActionType m_Type
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionType& dyn_m_Type();
    // Get instance field reference: System.String m_ExpectedControlType
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_ExpectedControlType();
    // Get instance field reference: System.String m_Id
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Id();
    // Get instance field reference: System.String m_Processors
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Processors();
    // Get instance field reference: System.String m_Interactions
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Interactions();
    // Get instance field reference: UnityEngine.InputSystem.InputBinding[] m_SingletonActionBindings
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputBinding>& dyn_m_SingletonActionBindings();
    // Get instance field reference: System.Nullable`1<UnityEngine.InputSystem.InputBinding> m_BindingMask
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::InputSystem::InputBinding>& dyn_m_BindingMask();
    // Get instance field reference: System.Int32 m_BindingsStartIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_BindingsStartIndex();
    // Get instance field reference: System.Int32 m_BindingsCount
    [[deprecated("Use field access instead!")]] int& dyn_m_BindingsCount();
    // Get instance field reference: System.Int32 m_ControlStartIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_ControlStartIndex();
    // Get instance field reference: System.Int32 m_ControlCount
    [[deprecated("Use field access instead!")]] int& dyn_m_ControlCount();
    // Get instance field reference: System.Int32 m_ActionIndexInState
    [[deprecated("Use field access instead!")]] int& dyn_m_ActionIndexInState();
    // Get instance field reference: UnityEngine.InputSystem.InputActionMap m_ActionMap
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionMap*& dyn_m_ActionMap();
    // Get instance field reference: UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext>> m_OnStarted
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*>& dyn_m_OnStarted();
    // Get instance field reference: UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext>> m_OnCanceled
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*>& dyn_m_OnCanceled();
    // Get instance field reference: UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext>> m_OnPerformed
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*>& dyn_m_OnPerformed();
    // public System.String get_name()
    // Offset: 0xF3D2A0
    ::StringW get_name();
    // public UnityEngine.InputSystem.InputActionType get_type()
    // Offset: 0xF3D2A8
    ::UnityEngine::InputSystem::InputActionType get_type();
    // public System.Guid get_id()
    // Offset: 0xF3D2B0
    ::System::Guid get_id();
    // System.Guid get_idDontGenerate()
    // Offset: 0xF3D328
    ::System::Guid get_idDontGenerate();
    // public System.String get_expectedControlType()
    // Offset: 0xF3D37C
    ::StringW get_expectedControlType();
    // public System.Void set_expectedControlType(System.String value)
    // Offset: 0xF3D384
    void set_expectedControlType(::StringW value);
    // public System.String get_processors()
    // Offset: 0xF3D38C
    ::StringW get_processors();
    // public System.String get_interactions()
    // Offset: 0xF3D394
    ::StringW get_interactions();
    // public UnityEngine.InputSystem.InputActionMap get_actionMap()
    // Offset: 0xF3D39C
    ::UnityEngine::InputSystem::InputActionMap* get_actionMap();
    // public System.Nullable`1<UnityEngine.InputSystem.InputBinding> get_bindingMask()
    // Offset: 0xF3D3DC
    ::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> get_bindingMask();
    // public System.Void set_bindingMask(System.Nullable`1<UnityEngine.InputSystem.InputBinding> value)
    // Offset: 0xF3D3EC
    void set_bindingMask(::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> value);
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputBinding> get_bindings()
    // Offset: 0xF3D62C
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputBinding> get_bindings();
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputControl> get_controls()
    // Offset: 0xF3D6F8
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputControl*> get_controls();
    // public UnityEngine.InputSystem.InputActionPhase get_phase()
    // Offset: 0xF3D7F8
    ::UnityEngine::InputSystem::InputActionPhase get_phase();
    // public System.Boolean get_enabled()
    // Offset: 0xF3D884
    bool get_enabled();
    // public System.Boolean get_triggered()
    // Offset: 0xF3DAF0
    bool get_triggered();
    // public UnityEngine.InputSystem.InputControl get_activeControl()
    // Offset: 0xF3DB94
    ::UnityEngine::InputSystem::InputControl* get_activeControl();
    // System.Boolean get_wantsInitialStateCheck()
    // Offset: 0xF3DC2C
    bool get_wantsInitialStateCheck();
    // System.Boolean get_isSingletonAction()
    // Offset: 0xF3D3BC
    bool get_isSingletonAction();
    // private UnityEngine.InputSystem.InputActionState/UnityEngine.InputSystem.TriggerState get_currentState()
    // Offset: 0xF3D81C
    ::UnityEngine::InputSystem::InputActionState::TriggerState get_currentState();
    // public System.Void add_started(System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> value)
    // Offset: 0xF3D8B0
    void add_started(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* value);
    // public System.Void remove_started(System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> value)
    // Offset: 0xF3D910
    void remove_started(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* value);
    // public System.Void add_canceled(System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> value)
    // Offset: 0xF3D970
    void add_canceled(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* value);
    // public System.Void remove_canceled(System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> value)
    // Offset: 0xF3D9D0
    void remove_canceled(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* value);
    // public System.Void add_performed(System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> value)
    // Offset: 0xF3DA30
    void add_performed(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* value);
    // public System.Void remove_performed(System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> value)
    // Offset: 0xF3DA90
    void remove_performed(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* value);
    // public System.Void .ctor()
    // Offset: 0xF3DC3C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputAction* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputAction*, creationType>()));
    }
    // public System.Void .ctor(System.String name, UnityEngine.InputSystem.InputActionType type, System.String binding, System.String interactions, System.String processors, System.String expectedControlType)
    // Offset: 0xF3DC4C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputAction* New_ctor(::StringW name, ::UnityEngine::InputSystem::InputActionType type, ::StringW binding, ::StringW interactions, ::StringW processors, ::StringW expectedControlType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputAction*, creationType>(name, type, binding, interactions, processors, expectedControlType)));
    }
    // public System.Void Dispose()
    // Offset: 0xF3DD7C
    void Dispose();
    // public System.Void Enable()
    // Offset: 0xF3E0F4
    void Enable();
    // public System.Void Disable()
    // Offset: 0xF3E17C
    void Disable();
    // public UnityEngine.InputSystem.InputAction Clone()
    // Offset: 0xF3E1DC
    ::UnityEngine::InputSystem::InputAction* Clone();
    // private System.Object System.ICloneable.Clone()
    // Offset: 0xF3E2B8
    ::Il2CppObject* System_ICloneable_Clone();
    // public TValue ReadValue()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TValue>
    TValue ReadValue() {
      static_assert(std::is_convertible_v<TValue, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::ReadValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadValue", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___generic__method);
    }
    // public System.Object ReadValueAsObject()
    // Offset: 0xF3E2BC
    ::Il2CppObject* ReadValueAsObject();
    // System.String MakeSureIdIsInPlace()
    // Offset: 0xF3D2F0
    ::StringW MakeSureIdIsInPlace();
    // System.Void GenerateId()
    // Offset: 0xF3E348
    void GenerateId();
    // UnityEngine.InputSystem.InputActionMap GetOrCreateActionMap()
    // Offset: 0xF3D570
    ::UnityEngine::InputSystem::InputActionMap* GetOrCreateActionMap();
    // private System.Void CreateInternalActionMapForSingletonAction()
    // Offset: 0xF3E3D0
    void CreateInternalActionMapForSingletonAction();
    // System.Nullable`1<UnityEngine.InputSystem.InputBinding> FindEffectiveBindingMask()
    // Offset: 0xF3E4EC
    ::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> FindEffectiveBindingMask();
    // System.Int32 BindingIndexOnActionToBindingIndexOnMap(System.Int32 indexOfBindingOnAction)
    // Offset: 0xF3E594
    int BindingIndexOnActionToBindingIndexOnMap(int indexOfBindingOnAction);
    // System.Int32 BindingIndexOnMapToBindingIndexOnAction(System.Int32 indexOfBindingOnMap)
    // Offset: 0xF3E754
    int BindingIndexOnMapToBindingIndexOnAction(int indexOfBindingOnMap);
    // public override System.String ToString()
    // Offset: 0xF3DD98
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // UnityEngine.InputSystem.InputAction
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_name
// Il2CppName: get_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_type
// Il2CppName: get_type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionType (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_type)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_id
// Il2CppName: get_id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Guid (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_id)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_idDontGenerate
// Il2CppName: get_idDontGenerate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Guid (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_idDontGenerate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_idDontGenerate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_expectedControlType
// Il2CppName: get_expectedControlType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_expectedControlType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_expectedControlType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::set_expectedControlType
// Il2CppName: set_expectedControlType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputAction::*)(::StringW)>(&UnityEngine::InputSystem::InputAction::set_expectedControlType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "set_expectedControlType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_processors
// Il2CppName: get_processors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_processors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_processors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_interactions
// Il2CppName: get_interactions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_interactions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_interactions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_actionMap
// Il2CppName: get_actionMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionMap* (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_actionMap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_actionMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_bindingMask
// Il2CppName: get_bindingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_bindingMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_bindingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::set_bindingMask
// Il2CppName: set_bindingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputAction::*)(::System::Nullable_1<::UnityEngine::InputSystem::InputBinding>)>(&UnityEngine::InputSystem::InputAction::set_bindingMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputBinding")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "set_bindingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_bindings
// Il2CppName: get_bindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputBinding> (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_bindings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_bindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_controls
// Il2CppName: get_controls
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputControl*> (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_controls)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_controls", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_phase
// Il2CppName: get_phase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionPhase (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_phase)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_phase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_enabled
// Il2CppName: get_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_enabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_triggered
// Il2CppName: get_triggered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_triggered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_triggered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_activeControl
// Il2CppName: get_activeControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControl* (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_activeControl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_activeControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_wantsInitialStateCheck
// Il2CppName: get_wantsInitialStateCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_wantsInitialStateCheck)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_wantsInitialStateCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_isSingletonAction
// Il2CppName: get_isSingletonAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_isSingletonAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_isSingletonAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::get_currentState
// Il2CppName: get_currentState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionState::TriggerState (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::get_currentState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "get_currentState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::add_started
// Il2CppName: add_started
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputAction::*)(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*)>(&UnityEngine::InputSystem::InputAction::add_started)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "add_started", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::remove_started
// Il2CppName: remove_started
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputAction::*)(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*)>(&UnityEngine::InputSystem::InputAction::remove_started)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "remove_started", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::add_canceled
// Il2CppName: add_canceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputAction::*)(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*)>(&UnityEngine::InputSystem::InputAction::add_canceled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "add_canceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::remove_canceled
// Il2CppName: remove_canceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputAction::*)(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*)>(&UnityEngine::InputSystem::InputAction::remove_canceled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "remove_canceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::add_performed
// Il2CppName: add_performed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputAction::*)(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*)>(&UnityEngine::InputSystem::InputAction::add_performed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "add_performed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::remove_performed
// Il2CppName: remove_performed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputAction::*)(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*)>(&UnityEngine::InputSystem::InputAction::remove_performed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "remove_performed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::Enable
// Il2CppName: Enable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::Enable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "Enable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::Disable
// Il2CppName: Disable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::Disable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "Disable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputAction* (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::Clone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::System_ICloneable_Clone
// Il2CppName: System.ICloneable.Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::System_ICloneable_Clone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "System.ICloneable.Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::ReadValue
// Il2CppName: ReadValue
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::ReadValueAsObject
// Il2CppName: ReadValueAsObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::ReadValueAsObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "ReadValueAsObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::MakeSureIdIsInPlace
// Il2CppName: MakeSureIdIsInPlace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::MakeSureIdIsInPlace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "MakeSureIdIsInPlace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::GenerateId
// Il2CppName: GenerateId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::GenerateId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "GenerateId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::GetOrCreateActionMap
// Il2CppName: GetOrCreateActionMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionMap* (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::GetOrCreateActionMap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "GetOrCreateActionMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::CreateInternalActionMapForSingletonAction
// Il2CppName: CreateInternalActionMapForSingletonAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::CreateInternalActionMapForSingletonAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "CreateInternalActionMapForSingletonAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::FindEffectiveBindingMask
// Il2CppName: FindEffectiveBindingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::FindEffectiveBindingMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "FindEffectiveBindingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::BindingIndexOnActionToBindingIndexOnMap
// Il2CppName: BindingIndexOnActionToBindingIndexOnMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputAction::*)(int)>(&UnityEngine::InputSystem::InputAction::BindingIndexOnActionToBindingIndexOnMap)> {
  static const MethodInfo* get() {
    static auto* indexOfBindingOnAction = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "BindingIndexOnActionToBindingIndexOnMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indexOfBindingOnAction});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::BindingIndexOnMapToBindingIndexOnAction
// Il2CppName: BindingIndexOnMapToBindingIndexOnAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputAction::*)(int)>(&UnityEngine::InputSystem::InputAction::BindingIndexOnMapToBindingIndexOnAction)> {
  static const MethodInfo* get() {
    static auto* indexOfBindingOnMap = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "BindingIndexOnMapToBindingIndexOnAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indexOfBindingOnMap});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputAction::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputAction::*)()>(&UnityEngine::InputSystem::InputAction::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputAction*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
