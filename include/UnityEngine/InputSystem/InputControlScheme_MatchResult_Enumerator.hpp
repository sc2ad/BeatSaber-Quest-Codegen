// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.InputControlScheme/UnityEngine.InputSystem.MatchResult
#include "UnityEngine/InputSystem/InputControlScheme.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: UnityEngine.InputSystem.InputControlScheme/UnityEngine.InputSystem.MatchResult/UnityEngine.InputSystem.Match
// Already included the same include: UnityEngine/InputSystem/InputControlScheme.hpp
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputControl
  class InputControl;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator, "UnityEngine.InputSystem", "InputControlScheme/MatchResult/Enumerator");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.InputControlScheme/UnityEngine.InputSystem.MatchResult/UnityEngine.InputSystem.Enumerator
  // [TokenAttribute] Offset: FFFFFFFF
  struct InputControlScheme::MatchResult::Enumerator/*, public ::System::ValueType, public ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputControlScheme::MatchResult::Match>*/ {
    public:
    public:
    // System.Int32 m_Index
    // Size: 0x4
    // Offset: 0x0
    int m_Index;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // UnityEngine.InputSystem.InputControlScheme/UnityEngine.InputSystem.DeviceRequirement[] m_Requirements
    // Size: 0x8
    // Offset: 0x8
    ::ArrayW<::UnityEngine::InputSystem::InputControlScheme::DeviceRequirement> m_Requirements;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::InputControlScheme::DeviceRequirement>) == 0x8);
    // UnityEngine.InputSystem.InputControlList`1<UnityEngine.InputSystem.InputControl> m_Controls
    // Size: 0xFFFFFFFF
    // Offset: 0x10
    ::UnityEngine::InputSystem::InputControlList_1<::UnityEngine::InputSystem::InputControl*> m_Controls;
    public:
    // Creating value type constructor for type: Enumerator
    constexpr Enumerator(int m_Index_ = {}, ::ArrayW<::UnityEngine::InputSystem::InputControlScheme::DeviceRequirement> m_Requirements_ = ::ArrayW<::UnityEngine::InputSystem::InputControlScheme::DeviceRequirement>(static_cast<void*>(nullptr)), ::UnityEngine::InputSystem::InputControlList_1<::UnityEngine::InputSystem::InputControl*> m_Controls_ = {}) noexcept : m_Index{m_Index_}, m_Requirements{m_Requirements_}, m_Controls{m_Controls_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputControlScheme::MatchResult::Match>
    operator ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputControlScheme::MatchResult::Match>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputControlScheme::MatchResult::Match>*>(this);
    }
    // Get instance field reference: System.Int32 m_Index
    [[deprecated("Use field access instead!")]] int& dyn_m_Index();
    // Get instance field reference: UnityEngine.InputSystem.InputControlScheme/UnityEngine.InputSystem.DeviceRequirement[] m_Requirements
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputControlScheme::DeviceRequirement>& dyn_m_Requirements();
    // Get instance field reference: UnityEngine.InputSystem.InputControlList`1<UnityEngine.InputSystem.InputControl> m_Controls
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputControlList_1<::UnityEngine::InputSystem::InputControl*>& dyn_m_Controls();
    // public UnityEngine.InputSystem.InputControlScheme/UnityEngine.InputSystem.MatchResult/UnityEngine.InputSystem.Match get_Current()
    // Offset: 0xA41A64
    ::UnityEngine::InputSystem::InputControlScheme::MatchResult::Match get_Current();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0xA41A6C
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
    // public System.Boolean MoveNext()
    // Offset: 0xA41A2C
    bool MoveNext();
    // public System.Void Reset()
    // Offset: 0xA41A58
    void Reset();
    // public System.Void Dispose()
    // Offset: 0xA41A74
    void Dispose();
  }; // UnityEngine.InputSystem.InputControlScheme/UnityEngine.InputSystem.MatchResult/UnityEngine.InputSystem.Enumerator
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator::get_Current
// Il2CppName: get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlScheme::MatchResult::Match (UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator::*)()>(&UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator::get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator), "get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator::*)()>(&UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator::System_Collections_IEnumerator_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator::*)()>(&UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator::*)()>(&UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator::*)()>(&UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControlScheme::MatchResult::Enumerator), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
