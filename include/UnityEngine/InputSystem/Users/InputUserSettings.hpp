// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: IInputActionCollection
  class IInputActionCollection;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.Users
namespace UnityEngine::InputSystem::Users {
  // Forward declaring type: InputUserSettings
  class InputUserSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::Users::InputUserSettings);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Users::InputUserSettings*, "UnityEngine.InputSystem.Users", "InputUserSettings");
// Type namespace: UnityEngine.InputSystem.Users
namespace UnityEngine::InputSystem::Users {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.Users.InputUserSettings
  // [TokenAttribute] Offset: FFFFFFFF
  class InputUserSettings : public ::Il2CppObject {
    public:
    public:
    // private System.String <customBindings>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::StringW customBindings;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean <invertMouseX>k__BackingField
    // Size: 0x1
    // Offset: 0x18
    bool invertMouseX;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <invertMouseY>k__BackingField
    // Size: 0x1
    // Offset: 0x19
    bool invertMouseY;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Nullable`1<System.Single> <mouseSmoothing>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x1C
    ::System::Nullable_1<float> mouseSmoothing;
    // private System.Nullable`1<System.Single> <mouseSensitivity>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x24
    ::System::Nullable_1<float> mouseSensitivity;
    // private System.Boolean <invertStickX>k__BackingField
    // Size: 0x1
    // Offset: 0x2C
    bool invertStickX;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <invertStickY>k__BackingField
    // Size: 0x1
    // Offset: 0x2D
    bool invertStickY;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <swapSticks>k__BackingField
    // Size: 0x1
    // Offset: 0x2E
    bool swapSticks;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <swapBumpers>k__BackingField
    // Size: 0x1
    // Offset: 0x2F
    bool swapBumpers;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <swapTriggers>k__BackingField
    // Size: 0x1
    // Offset: 0x30
    bool swapTriggers;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <swapDpadAndLeftStick>k__BackingField
    // Size: 0x1
    // Offset: 0x31
    bool swapDpadAndLeftStick;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Single <vibrationStrength>k__BackingField
    // Size: 0x4
    // Offset: 0x34
    float vibrationStrength;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.String m_CustomBindings
    // Size: 0x8
    // Offset: 0x38
    ::StringW m_CustomBindings;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private System.String <customBindings>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$customBindings$k__BackingField();
    // Get instance field reference: private System.Boolean <invertMouseX>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$invertMouseX$k__BackingField();
    // Get instance field reference: private System.Boolean <invertMouseY>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$invertMouseY$k__BackingField();
    // Get instance field reference: private System.Nullable`1<System.Single> <mouseSmoothing>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<float>& dyn_$mouseSmoothing$k__BackingField();
    // Get instance field reference: private System.Nullable`1<System.Single> <mouseSensitivity>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<float>& dyn_$mouseSensitivity$k__BackingField();
    // Get instance field reference: private System.Boolean <invertStickX>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$invertStickX$k__BackingField();
    // Get instance field reference: private System.Boolean <invertStickY>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$invertStickY$k__BackingField();
    // Get instance field reference: private System.Boolean <swapSticks>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$swapSticks$k__BackingField();
    // Get instance field reference: private System.Boolean <swapBumpers>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$swapBumpers$k__BackingField();
    // Get instance field reference: private System.Boolean <swapTriggers>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$swapTriggers$k__BackingField();
    // Get instance field reference: private System.Boolean <swapDpadAndLeftStick>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$swapDpadAndLeftStick$k__BackingField();
    // Get instance field reference: private System.Single <vibrationStrength>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$vibrationStrength$k__BackingField();
    // Get instance field reference: private System.String m_CustomBindings
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_CustomBindings();
    // public System.String get_customBindings()
    // Offset: 0x100EF9C
    ::StringW get_customBindings();
    // public System.Void set_customBindings(System.String value)
    // Offset: 0x100EFA4
    void set_customBindings(::StringW value);
    // public System.Boolean get_invertMouseX()
    // Offset: 0x100EFAC
    bool get_invertMouseX();
    // public System.Void set_invertMouseX(System.Boolean value)
    // Offset: 0x100EFB4
    void set_invertMouseX(bool value);
    // public System.Boolean get_invertMouseY()
    // Offset: 0x100EFC0
    bool get_invertMouseY();
    // public System.Void set_invertMouseY(System.Boolean value)
    // Offset: 0x100EFC8
    void set_invertMouseY(bool value);
    // public System.Nullable`1<System.Single> get_mouseSmoothing()
    // Offset: 0x100EFD4
    ::System::Nullable_1<float> get_mouseSmoothing();
    // public System.Void set_mouseSmoothing(System.Nullable`1<System.Single> value)
    // Offset: 0x100EFDC
    void set_mouseSmoothing(::System::Nullable_1<float> value);
    // public System.Nullable`1<System.Single> get_mouseSensitivity()
    // Offset: 0x100EFE4
    ::System::Nullable_1<float> get_mouseSensitivity();
    // public System.Void set_mouseSensitivity(System.Nullable`1<System.Single> value)
    // Offset: 0x100EFEC
    void set_mouseSensitivity(::System::Nullable_1<float> value);
    // public System.Boolean get_invertStickX()
    // Offset: 0x100EFF4
    bool get_invertStickX();
    // public System.Void set_invertStickX(System.Boolean value)
    // Offset: 0x100EFFC
    void set_invertStickX(bool value);
    // public System.Boolean get_invertStickY()
    // Offset: 0x100F008
    bool get_invertStickY();
    // public System.Void set_invertStickY(System.Boolean value)
    // Offset: 0x100F010
    void set_invertStickY(bool value);
    // public System.Boolean get_swapSticks()
    // Offset: 0x100F01C
    bool get_swapSticks();
    // public System.Void set_swapSticks(System.Boolean value)
    // Offset: 0x100F024
    void set_swapSticks(bool value);
    // public System.Boolean get_swapBumpers()
    // Offset: 0x100F030
    bool get_swapBumpers();
    // public System.Void set_swapBumpers(System.Boolean value)
    // Offset: 0x100F038
    void set_swapBumpers(bool value);
    // public System.Boolean get_swapTriggers()
    // Offset: 0x100F044
    bool get_swapTriggers();
    // public System.Void set_swapTriggers(System.Boolean value)
    // Offset: 0x100F04C
    void set_swapTriggers(bool value);
    // public System.Boolean get_swapDpadAndLeftStick()
    // Offset: 0x100F058
    bool get_swapDpadAndLeftStick();
    // public System.Void set_swapDpadAndLeftStick(System.Boolean value)
    // Offset: 0x100F060
    void set_swapDpadAndLeftStick(bool value);
    // public System.Single get_vibrationStrength()
    // Offset: 0x100F06C
    float get_vibrationStrength();
    // public System.Void set_vibrationStrength(System.Single value)
    // Offset: 0x100F074
    void set_vibrationStrength(float value);
    // public System.Void .ctor()
    // Offset: 0x100F080
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputUserSettings* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Users::InputUserSettings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputUserSettings*, creationType>()));
    }
    // public System.Void Apply(UnityEngine.InputSystem.IInputActionCollection actions)
    // Offset: 0x100F07C
    void Apply(::UnityEngine::InputSystem::IInputActionCollection* actions);
  }; // UnityEngine.InputSystem.Users.InputUserSettings
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::get_customBindings
// Il2CppName: get_customBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Users::InputUserSettings::*)()>(&UnityEngine::InputSystem::Users::InputUserSettings::get_customBindings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "get_customBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::set_customBindings
// Il2CppName: set_customBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUserSettings::*)(::StringW)>(&UnityEngine::InputSystem::Users::InputUserSettings::set_customBindings)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "set_customBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::get_invertMouseX
// Il2CppName: get_invertMouseX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Users::InputUserSettings::*)()>(&UnityEngine::InputSystem::Users::InputUserSettings::get_invertMouseX)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "get_invertMouseX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::set_invertMouseX
// Il2CppName: set_invertMouseX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUserSettings::*)(bool)>(&UnityEngine::InputSystem::Users::InputUserSettings::set_invertMouseX)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "set_invertMouseX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::get_invertMouseY
// Il2CppName: get_invertMouseY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Users::InputUserSettings::*)()>(&UnityEngine::InputSystem::Users::InputUserSettings::get_invertMouseY)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "get_invertMouseY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::set_invertMouseY
// Il2CppName: set_invertMouseY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUserSettings::*)(bool)>(&UnityEngine::InputSystem::Users::InputUserSettings::set_invertMouseY)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "set_invertMouseY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::get_mouseSmoothing
// Il2CppName: get_mouseSmoothing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<float> (UnityEngine::InputSystem::Users::InputUserSettings::*)()>(&UnityEngine::InputSystem::Users::InputUserSettings::get_mouseSmoothing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "get_mouseSmoothing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::set_mouseSmoothing
// Il2CppName: set_mouseSmoothing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUserSettings::*)(::System::Nullable_1<float>)>(&UnityEngine::InputSystem::Users::InputUserSettings::set_mouseSmoothing)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "set_mouseSmoothing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::get_mouseSensitivity
// Il2CppName: get_mouseSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<float> (UnityEngine::InputSystem::Users::InputUserSettings::*)()>(&UnityEngine::InputSystem::Users::InputUserSettings::get_mouseSensitivity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "get_mouseSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::set_mouseSensitivity
// Il2CppName: set_mouseSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUserSettings::*)(::System::Nullable_1<float>)>(&UnityEngine::InputSystem::Users::InputUserSettings::set_mouseSensitivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "set_mouseSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::get_invertStickX
// Il2CppName: get_invertStickX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Users::InputUserSettings::*)()>(&UnityEngine::InputSystem::Users::InputUserSettings::get_invertStickX)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "get_invertStickX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::set_invertStickX
// Il2CppName: set_invertStickX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUserSettings::*)(bool)>(&UnityEngine::InputSystem::Users::InputUserSettings::set_invertStickX)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "set_invertStickX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::get_invertStickY
// Il2CppName: get_invertStickY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Users::InputUserSettings::*)()>(&UnityEngine::InputSystem::Users::InputUserSettings::get_invertStickY)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "get_invertStickY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::set_invertStickY
// Il2CppName: set_invertStickY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUserSettings::*)(bool)>(&UnityEngine::InputSystem::Users::InputUserSettings::set_invertStickY)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "set_invertStickY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::get_swapSticks
// Il2CppName: get_swapSticks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Users::InputUserSettings::*)()>(&UnityEngine::InputSystem::Users::InputUserSettings::get_swapSticks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "get_swapSticks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::set_swapSticks
// Il2CppName: set_swapSticks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUserSettings::*)(bool)>(&UnityEngine::InputSystem::Users::InputUserSettings::set_swapSticks)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "set_swapSticks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::get_swapBumpers
// Il2CppName: get_swapBumpers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Users::InputUserSettings::*)()>(&UnityEngine::InputSystem::Users::InputUserSettings::get_swapBumpers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "get_swapBumpers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::set_swapBumpers
// Il2CppName: set_swapBumpers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUserSettings::*)(bool)>(&UnityEngine::InputSystem::Users::InputUserSettings::set_swapBumpers)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "set_swapBumpers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::get_swapTriggers
// Il2CppName: get_swapTriggers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Users::InputUserSettings::*)()>(&UnityEngine::InputSystem::Users::InputUserSettings::get_swapTriggers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "get_swapTriggers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::set_swapTriggers
// Il2CppName: set_swapTriggers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUserSettings::*)(bool)>(&UnityEngine::InputSystem::Users::InputUserSettings::set_swapTriggers)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "set_swapTriggers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::get_swapDpadAndLeftStick
// Il2CppName: get_swapDpadAndLeftStick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Users::InputUserSettings::*)()>(&UnityEngine::InputSystem::Users::InputUserSettings::get_swapDpadAndLeftStick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "get_swapDpadAndLeftStick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::set_swapDpadAndLeftStick
// Il2CppName: set_swapDpadAndLeftStick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUserSettings::*)(bool)>(&UnityEngine::InputSystem::Users::InputUserSettings::set_swapDpadAndLeftStick)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "set_swapDpadAndLeftStick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::get_vibrationStrength
// Il2CppName: get_vibrationStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::Users::InputUserSettings::*)()>(&UnityEngine::InputSystem::Users::InputUserSettings::get_vibrationStrength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "get_vibrationStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::set_vibrationStrength
// Il2CppName: set_vibrationStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUserSettings::*)(float)>(&UnityEngine::InputSystem::Users::InputUserSettings::set_vibrationStrength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "set_vibrationStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Users::InputUserSettings::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Users::InputUserSettings::*)(::UnityEngine::InputSystem::IInputActionCollection*)>(&UnityEngine::InputSystem::Users::InputUserSettings::Apply)> {
  static const MethodInfo* get() {
    static auto* actions = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "IInputActionCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Users::InputUserSettings*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actions});
  }
};
