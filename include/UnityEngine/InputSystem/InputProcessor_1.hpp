// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.InputProcessor
#include "UnityEngine/InputSystem/InputProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: ValueType because it is already included!
}
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputControl
  class InputControl;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputProcessor`1<TValue>
  template<typename TValue>
  class InputProcessor_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::InputSystem::InputProcessor_1, "UnityEngine.InputSystem", "InputProcessor`1");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.InputProcessor`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: FFFFFFFF
  template<typename TValue>
  class InputProcessor_1 : public ::UnityEngine::InputSystem::InputProcessor {
    public:
    // public TValue Process(TValue value, UnityEngine.InputSystem.InputControl control)
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue Process(TValue value, ::UnityEngine::InputSystem::InputControl* control) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputProcessor_1::Process");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputProcessor_1<TValue>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method, value, control);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.InputSystem.InputProcessor
    // Base method: System.Void InputProcessor::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputProcessor_1<TValue>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputProcessor_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputProcessor_1<TValue>*, creationType>()));
    }
    // public override System.Object ProcessAsObject(System.Object value, UnityEngine.InputSystem.InputControl control)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.InputSystem.InputProcessor
    // Base method: System.Object InputProcessor::ProcessAsObject(System.Object value, UnityEngine.InputSystem.InputControl control)
    ::Il2CppObject* ProcessAsObject(::Il2CppObject* value, ::UnityEngine::InputSystem::InputControl* control) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputProcessor_1::ProcessAsObject");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputProcessor*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, control);
    }
    // public override System.Void Process(System.Void* buffer, System.Int32 bufferSize, UnityEngine.InputSystem.InputControl control)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.InputSystem.InputProcessor
    // Base method: System.Void InputProcessor::Process(System.Void* buffer, System.Int32 bufferSize, UnityEngine.InputSystem.InputControl control)
    void Process(void* buffer, int bufferSize, ::UnityEngine::InputSystem::InputControl* control) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputProcessor_1::Process");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputProcessor*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, bufferSize, control);
    }
  }; // UnityEngine.InputSystem.InputProcessor`1
  // Could not write size check! Type: UnityEngine.InputSystem.InputProcessor`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
