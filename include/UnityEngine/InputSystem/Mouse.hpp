// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.Pointer
#include "UnityEngine/InputSystem/Pointer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Controls
namespace UnityEngine::InputSystem::Controls {
  // Forward declaring type: Vector2Control
  class Vector2Control;
  // Forward declaring type: ButtonControl
  class ButtonControl;
  // Forward declaring type: IntegerControl
  class IntegerControl;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector2
  struct Vector2;
}
// Forward declaring namespace: UnityEngine::InputSystem::LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Forward declaring type: InputEventPtr
  struct InputEventPtr;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: Mouse
  class Mouse;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::Mouse);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Mouse*, "UnityEngine.InputSystem", "Mouse");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0x1B0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.Mouse
  // [TokenAttribute] Offset: FFFFFFFF
  // [InputControlLayoutAttribute] Offset: 9578B0
  // [PreserveAttribute] Offset: FFFFFFFF
  class Mouse : public ::UnityEngine::InputSystem::Pointer {
    public:
    public:
    // private UnityEngine.InputSystem.Controls.Vector2Control <scroll>k__BackingField
    // Size: 0x8
    // Offset: 0x178
    ::UnityEngine::InputSystem::Controls::Vector2Control* scroll;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::Vector2Control*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <leftButton>k__BackingField
    // Size: 0x8
    // Offset: 0x180
    ::UnityEngine::InputSystem::Controls::ButtonControl* leftButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <middleButton>k__BackingField
    // Size: 0x8
    // Offset: 0x188
    ::UnityEngine::InputSystem::Controls::ButtonControl* middleButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <rightButton>k__BackingField
    // Size: 0x8
    // Offset: 0x190
    ::UnityEngine::InputSystem::Controls::ButtonControl* rightButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <backButton>k__BackingField
    // Size: 0x8
    // Offset: 0x198
    ::UnityEngine::InputSystem::Controls::ButtonControl* backButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <forwardButton>k__BackingField
    // Size: 0x8
    // Offset: 0x1A0
    ::UnityEngine::InputSystem::Controls::ButtonControl* forwardButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.IntegerControl <clickCount>k__BackingField
    // Size: 0x8
    // Offset: 0x1A8
    ::UnityEngine::InputSystem::Controls::IntegerControl* clickCount;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::IntegerControl*) == 0x8);
    public:
    // Get static field: static private UnityEngine.InputSystem.Mouse <current>k__BackingField
    static ::UnityEngine::InputSystem::Mouse* _get_$current$k__BackingField();
    // Set static field: static private UnityEngine.InputSystem.Mouse <current>k__BackingField
    static void _set_$current$k__BackingField(::UnityEngine::InputSystem::Mouse* value);
    // Get static field: static UnityEngine.InputSystem.Mouse s_PlatformMouseDevice
    static ::UnityEngine::InputSystem::Mouse* _get_s_PlatformMouseDevice();
    // Set static field: static UnityEngine.InputSystem.Mouse s_PlatformMouseDevice
    static void _set_s_PlatformMouseDevice(::UnityEngine::InputSystem::Mouse* value);
    // Get instance field reference: private UnityEngine.InputSystem.Controls.Vector2Control <scroll>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector2Control*& dyn_$scroll$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <leftButton>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$leftButton$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <middleButton>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$middleButton$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <rightButton>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$rightButton$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <backButton>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$backButton$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <forwardButton>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$forwardButton$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.IntegerControl <clickCount>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::IntegerControl*& dyn_$clickCount$k__BackingField();
    // public UnityEngine.InputSystem.Controls.Vector2Control get_scroll()
    // Offset: 0xCC7F00
    ::UnityEngine::InputSystem::Controls::Vector2Control* get_scroll();
    // private System.Void set_scroll(UnityEngine.InputSystem.Controls.Vector2Control value)
    // Offset: 0xCC7F08
    void set_scroll(::UnityEngine::InputSystem::Controls::Vector2Control* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_leftButton()
    // Offset: 0xCC7F10
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_leftButton();
    // private System.Void set_leftButton(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xCC7F18
    void set_leftButton(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_middleButton()
    // Offset: 0xCC7F20
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_middleButton();
    // private System.Void set_middleButton(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xCC7F28
    void set_middleButton(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_rightButton()
    // Offset: 0xCC7F30
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_rightButton();
    // private System.Void set_rightButton(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xCC7F38
    void set_rightButton(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_backButton()
    // Offset: 0xCC7F40
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_backButton();
    // private System.Void set_backButton(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xCC7F48
    void set_backButton(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_forwardButton()
    // Offset: 0xCC7F50
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_forwardButton();
    // private System.Void set_forwardButton(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xCC7F58
    void set_forwardButton(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.IntegerControl get_clickCount()
    // Offset: 0xCC7F60
    ::UnityEngine::InputSystem::Controls::IntegerControl* get_clickCount();
    // private System.Void set_clickCount(UnityEngine.InputSystem.Controls.IntegerControl value)
    // Offset: 0xCC7F68
    void set_clickCount(::UnityEngine::InputSystem::Controls::IntegerControl* value);
    // static public UnityEngine.InputSystem.Mouse get_current()
    // Offset: 0xCC7F70
    static ::UnityEngine::InputSystem::Mouse* get_current();
    // static private System.Void set_current(UnityEngine.InputSystem.Mouse value)
    // Offset: 0xCC7FC0
    static void set_current(::UnityEngine::InputSystem::Mouse* value);
    // public System.Void WarpCursorPosition(UnityEngine.Vector2 position)
    // Offset: 0xCC8264
    void WarpCursorPosition(::UnityEngine::Vector2 position);
    // private System.Void UnityEngine.InputSystem.LowLevel.IInputStateCallbackReceiver.OnNextUpdate()
    // Offset: 0xCC86F8
    void UnityEngine_InputSystem_LowLevel_IInputStateCallbackReceiver_OnNextUpdate();
    // private System.Void UnityEngine.InputSystem.LowLevel.IInputStateCallbackReceiver.OnStateEvent(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)
    // Offset: 0xCC86FC
    void UnityEngine_InputSystem_LowLevel_IInputStateCallbackReceiver_OnStateEvent(::UnityEngine::InputSystem::LowLevel::InputEventPtr eventPtr);
    // public System.Void .ctor()
    // Offset: 0xCC8700
    // Implemented from: UnityEngine.InputSystem.Pointer
    // Base method: System.Void Pointer::.ctor()
    // Base method: System.Void InputDevice::.ctor()
    // Base method: System.Void InputControl::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Mouse* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Mouse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Mouse*, creationType>()));
    }
    // public override System.Void MakeCurrent()
    // Offset: 0xCC8014
    // Implemented from: UnityEngine.InputSystem.Pointer
    // Base method: System.Void Pointer::MakeCurrent()
    void MakeCurrent();
    // protected override System.Void OnAdded()
    // Offset: 0xCC80C8
    // Implemented from: UnityEngine.InputSystem.InputDevice
    // Base method: System.Void InputDevice::OnAdded()
    void OnAdded();
    // protected override System.Void OnRemoved()
    // Offset: 0xCC8140
    // Implemented from: UnityEngine.InputSystem.Pointer
    // Base method: System.Void Pointer::OnRemoved()
    void OnRemoved();
    // protected override System.Void FinishSetup()
    // Offset: 0xCC82E4
    // Implemented from: UnityEngine.InputSystem.Pointer
    // Base method: System.Void Pointer::FinishSetup()
    void FinishSetup();
    // protected System.Void OnNextUpdate()
    // Offset: 0xCC84F0
    // Implemented from: UnityEngine.InputSystem.Pointer
    // Base method: System.Void Pointer::OnNextUpdate()
    // Base method: System.Void Pointer::UnityEngine.InputSystem.LowLevel.IInputStateCallbackReceiver.OnNextUpdate()
    void OnNextUpdate();
    // protected System.Void OnStateEvent(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)
    // Offset: 0xCC8600
    // Implemented from: UnityEngine.InputSystem.Pointer
    // Base method: System.Void Pointer::OnStateEvent(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)
    // Base method: System.Void Pointer::UnityEngine.InputSystem.LowLevel.IInputStateCallbackReceiver.OnStateEvent(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)
    void OnStateEvent(::UnityEngine::InputSystem::LowLevel::InputEventPtr eventPtr);
  }; // UnityEngine.InputSystem.Mouse
  #pragma pack(pop)
  static check_size<sizeof(Mouse), 424 + sizeof(::UnityEngine::InputSystem::Controls::IntegerControl*)> __UnityEngine_InputSystem_MouseSizeCheck;
  static_assert(sizeof(Mouse) == 0x1B0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::get_scroll
// Il2CppName: get_scroll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::Vector2Control* (UnityEngine::InputSystem::Mouse::*)()>(&UnityEngine::InputSystem::Mouse::get_scroll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "get_scroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::set_scroll
// Il2CppName: set_scroll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Mouse::*)(::UnityEngine::InputSystem::Controls::Vector2Control*)>(&UnityEngine::InputSystem::Mouse::set_scroll)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "Vector2Control")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "set_scroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::get_leftButton
// Il2CppName: get_leftButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (UnityEngine::InputSystem::Mouse::*)()>(&UnityEngine::InputSystem::Mouse::get_leftButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "get_leftButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::set_leftButton
// Il2CppName: set_leftButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Mouse::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&UnityEngine::InputSystem::Mouse::set_leftButton)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "set_leftButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::get_middleButton
// Il2CppName: get_middleButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (UnityEngine::InputSystem::Mouse::*)()>(&UnityEngine::InputSystem::Mouse::get_middleButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "get_middleButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::set_middleButton
// Il2CppName: set_middleButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Mouse::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&UnityEngine::InputSystem::Mouse::set_middleButton)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "set_middleButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::get_rightButton
// Il2CppName: get_rightButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (UnityEngine::InputSystem::Mouse::*)()>(&UnityEngine::InputSystem::Mouse::get_rightButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "get_rightButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::set_rightButton
// Il2CppName: set_rightButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Mouse::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&UnityEngine::InputSystem::Mouse::set_rightButton)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "set_rightButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::get_backButton
// Il2CppName: get_backButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (UnityEngine::InputSystem::Mouse::*)()>(&UnityEngine::InputSystem::Mouse::get_backButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "get_backButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::set_backButton
// Il2CppName: set_backButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Mouse::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&UnityEngine::InputSystem::Mouse::set_backButton)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "set_backButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::get_forwardButton
// Il2CppName: get_forwardButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (UnityEngine::InputSystem::Mouse::*)()>(&UnityEngine::InputSystem::Mouse::get_forwardButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "get_forwardButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::set_forwardButton
// Il2CppName: set_forwardButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Mouse::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&UnityEngine::InputSystem::Mouse::set_forwardButton)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "set_forwardButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::get_clickCount
// Il2CppName: get_clickCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::IntegerControl* (UnityEngine::InputSystem::Mouse::*)()>(&UnityEngine::InputSystem::Mouse::get_clickCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "get_clickCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::set_clickCount
// Il2CppName: set_clickCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Mouse::*)(::UnityEngine::InputSystem::Controls::IntegerControl*)>(&UnityEngine::InputSystem::Mouse::set_clickCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "IntegerControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "set_clickCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::get_current
// Il2CppName: get_current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Mouse* (*)()>(&UnityEngine::InputSystem::Mouse::get_current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "get_current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::set_current
// Il2CppName: set_current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::Mouse*)>(&UnityEngine::InputSystem::Mouse::set_current)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "Mouse")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "set_current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::WarpCursorPosition
// Il2CppName: WarpCursorPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Mouse::*)(::UnityEngine::Vector2)>(&UnityEngine::InputSystem::Mouse::WarpCursorPosition)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "WarpCursorPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::UnityEngine_InputSystem_LowLevel_IInputStateCallbackReceiver_OnNextUpdate
// Il2CppName: UnityEngine.InputSystem.LowLevel.IInputStateCallbackReceiver.OnNextUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Mouse::*)()>(&UnityEngine::InputSystem::Mouse::UnityEngine_InputSystem_LowLevel_IInputStateCallbackReceiver_OnNextUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "UnityEngine.InputSystem.LowLevel.IInputStateCallbackReceiver.OnNextUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::UnityEngine_InputSystem_LowLevel_IInputStateCallbackReceiver_OnStateEvent
// Il2CppName: UnityEngine.InputSystem.LowLevel.IInputStateCallbackReceiver.OnStateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Mouse::*)(::UnityEngine::InputSystem::LowLevel::InputEventPtr)>(&UnityEngine::InputSystem::Mouse::UnityEngine_InputSystem_LowLevel_IInputStateCallbackReceiver_OnStateEvent)> {
  static const MethodInfo* get() {
    static auto* eventPtr = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "UnityEngine.InputSystem.LowLevel.IInputStateCallbackReceiver.OnStateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventPtr});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::MakeCurrent
// Il2CppName: MakeCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Mouse::*)()>(&UnityEngine::InputSystem::Mouse::MakeCurrent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "MakeCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::OnAdded
// Il2CppName: OnAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Mouse::*)()>(&UnityEngine::InputSystem::Mouse::OnAdded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "OnAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::OnRemoved
// Il2CppName: OnRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Mouse::*)()>(&UnityEngine::InputSystem::Mouse::OnRemoved)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "OnRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::FinishSetup
// Il2CppName: FinishSetup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Mouse::*)()>(&UnityEngine::InputSystem::Mouse::FinishSetup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "FinishSetup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::OnNextUpdate
// Il2CppName: OnNextUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Mouse::*)()>(&UnityEngine::InputSystem::Mouse::OnNextUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "OnNextUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Mouse::OnStateEvent
// Il2CppName: OnStateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Mouse::*)(::UnityEngine::InputSystem::LowLevel::InputEventPtr)>(&UnityEngine::InputSystem::Mouse::OnStateEvent)> {
  static const MethodInfo* get() {
    static auto* eventPtr = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Mouse*), "OnStateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventPtr});
  }
};
