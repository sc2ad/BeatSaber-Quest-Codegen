// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.InputBindingComposite`1
#include "UnityEngine/InputSystem/InputBindingComposite_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Skipping declaration: InputBindingCompositeContext because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.Composites
namespace UnityEngine::InputSystem::Composites {
  // Forward declaring type: ButtonWithTwoModifiers
  class ButtonWithTwoModifiers;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::Composites::ButtonWithTwoModifiers);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Composites::ButtonWithTwoModifiers*, "UnityEngine.InputSystem.Composites", "ButtonWithTwoModifiers");
// Type namespace: UnityEngine.InputSystem.Composites
namespace UnityEngine::InputSystem::Composites {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.Composites.ButtonWithTwoModifiers
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: FFFFFFFF
  // [DisplayStringFormatAttribute] Offset: 959480
  class ButtonWithTwoModifiers : public ::UnityEngine::InputSystem::InputBindingComposite_1<float> {
    public:
    public:
    // [InputControlAttribute] Offset: 0x96142C
    // public System.Int32 modifier1
    // Size: 0x4
    // Offset: 0x10
    int modifier1;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [InputControlAttribute] Offset: 0x961468
    // public System.Int32 modifier2
    // Size: 0x4
    // Offset: 0x14
    int modifier2;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [InputControlAttribute] Offset: 0x9614A4
    // public System.Int32 button
    // Size: 0x4
    // Offset: 0x18
    int button;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public System.Int32 modifier1
    [[deprecated("Use field access instead!")]] int& dyn_modifier1();
    // Get instance field reference: public System.Int32 modifier2
    [[deprecated("Use field access instead!")]] int& dyn_modifier2();
    // Get instance field reference: public System.Int32 button
    [[deprecated("Use field access instead!")]] int& dyn_button();
    // public System.Single ReadValue(ref UnityEngine.InputSystem.InputBindingCompositeContext context)
    // Offset: 0xE12DF4
    float ReadValue(ByRef<::UnityEngine::InputSystem::InputBindingCompositeContext> context);
    // public System.Void .ctor()
    // Offset: 0xE12E9C
    // Implemented from: UnityEngine.InputSystem.InputBindingComposite`1
    // Base method: System.Void InputBindingComposite_1::.ctor()
    // Base method: System.Void InputBindingComposite::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ButtonWithTwoModifiers* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Composites::ButtonWithTwoModifiers::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ButtonWithTwoModifiers*, creationType>()));
    }
    // public override System.Single EvaluateMagnitude(ref UnityEngine.InputSystem.InputBindingCompositeContext context)
    // Offset: 0xE12E90
    // Implemented from: UnityEngine.InputSystem.InputBindingComposite
    // Base method: System.Single InputBindingComposite::EvaluateMagnitude(ref UnityEngine.InputSystem.InputBindingCompositeContext context)
    float EvaluateMagnitude(ByRef<::UnityEngine::InputSystem::InputBindingCompositeContext> context);
  }; // UnityEngine.InputSystem.Composites.ButtonWithTwoModifiers
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Composites::ButtonWithTwoModifiers::ReadValue
// Il2CppName: ReadValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::Composites::ButtonWithTwoModifiers::*)(ByRef<::UnityEngine::InputSystem::InputBindingCompositeContext>)>(&UnityEngine::InputSystem::Composites::ButtonWithTwoModifiers::ReadValue)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputBindingCompositeContext")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Composites::ButtonWithTwoModifiers*), "ReadValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Composites::ButtonWithTwoModifiers::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Composites::ButtonWithTwoModifiers::EvaluateMagnitude
// Il2CppName: EvaluateMagnitude
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::Composites::ButtonWithTwoModifiers::*)(ByRef<::UnityEngine::InputSystem::InputBindingCompositeContext>)>(&UnityEngine::InputSystem::Composites::ButtonWithTwoModifiers::EvaluateMagnitude)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputBindingCompositeContext")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Composites::ButtonWithTwoModifiers*), "EvaluateMagnitude", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
