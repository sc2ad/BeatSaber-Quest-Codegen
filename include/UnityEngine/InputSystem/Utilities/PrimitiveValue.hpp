// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: System.IConvertible
#include "System/IConvertible.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IFormatProvider
  class IFormatProvider;
  // Forward declaring type: DateTime
  struct DateTime;
  // Forward declaring type: Decimal
  struct Decimal;
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: PrimitiveValue
  struct PrimitiveValue;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Utilities::PrimitiveValue, "UnityEngine.InputSystem.Utilities", "PrimitiveValue");
// Type namespace: UnityEngine.InputSystem.Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Size: 0xC
  #pragma pack(push, 1)
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.Utilities.PrimitiveValue
  // [TokenAttribute] Offset: FFFFFFFF
  struct PrimitiveValue/*, public ::System::ValueType, public ::System::IEquatable_1<::UnityEngine::InputSystem::Utilities::PrimitiveValue>, public ::System::IConvertible*/ {
    public:
    public:
    // private System.TypeCode m_Type
    // Size: 0x4
    // Offset: 0x0
    ::System::TypeCode m_Type;
    // Field size check
    static_assert(sizeof(::System::TypeCode) == 0x4);
    // Creating union for fields at offset: 0x4
    union {
      // private System.Boolean m_BoolValue
      // Size: 0x1
      // Offset: 0x4
      bool m_BoolValue;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      // private System.Char m_CharValue
      // Size: 0x2
      // Offset: 0x4
      ::Il2CppChar m_CharValue;
      // Field size check
      static_assert(sizeof(::Il2CppChar) == 0x2);
      // private System.Byte m_ByteValue
      // Size: 0x1
      // Offset: 0x4
      uint8_t m_ByteValue;
      // Field size check
      static_assert(sizeof(uint8_t) == 0x1);
      // private System.SByte m_SByteValue
      // Size: 0x1
      // Offset: 0x4
      int8_t m_SByteValue;
      // Field size check
      static_assert(sizeof(int8_t) == 0x1);
      // private System.Int16 m_ShortValue
      // Size: 0x2
      // Offset: 0x4
      int16_t m_ShortValue;
      // Field size check
      static_assert(sizeof(int16_t) == 0x2);
      // private System.UInt16 m_UShortValue
      // Size: 0x2
      // Offset: 0x4
      uint16_t m_UShortValue;
      // Field size check
      static_assert(sizeof(uint16_t) == 0x2);
      // private System.Int32 m_IntValue
      // Size: 0x4
      // Offset: 0x4
      int m_IntValue;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // private System.UInt32 m_UIntValue
      // Size: 0x4
      // Offset: 0x4
      uint m_UIntValue;
      // Field size check
      static_assert(sizeof(uint) == 0x4);
      // private System.Int64 m_LongValue
      // Size: 0x8
      // Offset: 0x4
      int64_t m_LongValue;
      // Field size check
      static_assert(sizeof(int64_t) == 0x8);
      // private System.UInt64 m_ULongValue
      // Size: 0x8
      // Offset: 0x4
      uint64_t m_ULongValue;
      // Field size check
      static_assert(sizeof(uint64_t) == 0x8);
      // private System.Single m_FloatValue
      // Size: 0x4
      // Offset: 0x4
      float m_FloatValue;
      // Field size check
      static_assert(sizeof(float) == 0x4);
      // private System.Double m_DoubleValue
      // Size: 0x8
      // Offset: 0x4
      double m_DoubleValue;
      // Field size check
      static_assert(sizeof(double) == 0x8);
    };
    public:
    // Creating value type constructor for type: PrimitiveValue
    constexpr PrimitiveValue(::System::TypeCode m_Type_ = {}, bool m_BoolValue_ = {}) noexcept : m_Type{m_Type_}, m_BoolValue{m_BoolValue_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::InputSystem::Utilities::PrimitiveValue>
    operator ::System::IEquatable_1<::UnityEngine::InputSystem::Utilities::PrimitiveValue>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::InputSystem::Utilities::PrimitiveValue>*>(this);
    }
    // Creating interface conversion operator: operator ::System::IConvertible
    operator ::System::IConvertible() noexcept {
      return *reinterpret_cast<::System::IConvertible*>(this);
    }
    // Get instance field reference: private System.TypeCode m_Type
    [[deprecated("Use field access instead!")]] ::System::TypeCode& dyn_m_Type();
    // Get instance field reference: private System.Boolean m_BoolValue
    [[deprecated("Use field access instead!")]] bool& dyn_m_BoolValue();
    // Get instance field reference: private System.Char m_CharValue
    [[deprecated("Use field access instead!")]] ::Il2CppChar& dyn_m_CharValue();
    // Get instance field reference: private System.Byte m_ByteValue
    [[deprecated("Use field access instead!")]] uint8_t& dyn_m_ByteValue();
    // Get instance field reference: private System.SByte m_SByteValue
    [[deprecated("Use field access instead!")]] int8_t& dyn_m_SByteValue();
    // Get instance field reference: private System.Int16 m_ShortValue
    [[deprecated("Use field access instead!")]] int16_t& dyn_m_ShortValue();
    // Get instance field reference: private System.UInt16 m_UShortValue
    [[deprecated("Use field access instead!")]] uint16_t& dyn_m_UShortValue();
    // Get instance field reference: private System.Int32 m_IntValue
    [[deprecated("Use field access instead!")]] int& dyn_m_IntValue();
    // Get instance field reference: private System.UInt32 m_UIntValue
    [[deprecated("Use field access instead!")]] uint& dyn_m_UIntValue();
    // Get instance field reference: private System.Int64 m_LongValue
    [[deprecated("Use field access instead!")]] int64_t& dyn_m_LongValue();
    // Get instance field reference: private System.UInt64 m_ULongValue
    [[deprecated("Use field access instead!")]] uint64_t& dyn_m_ULongValue();
    // Get instance field reference: private System.Single m_FloatValue
    [[deprecated("Use field access instead!")]] float& dyn_m_FloatValue();
    // Get instance field reference: private System.Double m_DoubleValue
    [[deprecated("Use field access instead!")]] double& dyn_m_DoubleValue();
    // public System.TypeCode get_type()
    // Offset: 0xA4FD1C
    ::System::TypeCode get_type();
    // public System.Boolean get_isEmpty()
    // Offset: 0xA4FD24
    bool get_isEmpty();
    // public System.Void .ctor(System.Boolean value)
    // Offset: 0xA4FD34
    PrimitiveValue(bool value);
    // public System.Void .ctor(System.Char value)
    // Offset: 0xA4FD54
    PrimitiveValue(::Il2CppChar value);
    // public System.Void .ctor(System.Byte value)
    // Offset: 0xA4FD6C
    PrimitiveValue(uint8_t value);
    // public System.Void .ctor(System.SByte value)
    // Offset: 0xA4FD88
    PrimitiveValue(int8_t value);
    // public System.Void .ctor(System.Int16 value)
    // Offset: 0xA4FDA4
    PrimitiveValue(int16_t value);
    // public System.Void .ctor(System.UInt16 value)
    // Offset: 0xA4FDBC
    PrimitiveValue(uint16_t value);
    // public System.Void .ctor(System.Int32 value)
    // Offset: 0xA4FDD4
    PrimitiveValue(int value);
    // public System.Void .ctor(System.UInt32 value)
    // Offset: 0xA4FDE4
    PrimitiveValue(uint value);
    // public System.Void .ctor(System.Int64 value)
    // Offset: 0xA4FDF4
    PrimitiveValue(int64_t value);
    // public System.Void .ctor(System.UInt64 value)
    // Offset: 0xA4FE08
    PrimitiveValue(uint64_t value);
    // public System.Void .ctor(System.Single value)
    // Offset: 0xA4FE1C
    PrimitiveValue(float value);
    // public System.Void .ctor(System.Double value)
    // Offset: 0xA4FE30
    PrimitiveValue(double value);
    // public UnityEngine.InputSystem.Utilities.PrimitiveValue ConvertTo(System.TypeCode type)
    // Offset: 0xA4FE44
    ::UnityEngine::InputSystem::Utilities::PrimitiveValue ConvertTo(::System::TypeCode type);
    // public System.Boolean Equals(UnityEngine.InputSystem.Utilities.PrimitiveValue other)
    // Offset: 0xA4FE4C
    bool Equals(::UnityEngine::InputSystem::Utilities::PrimitiveValue other);
    // static public UnityEngine.InputSystem.Utilities.PrimitiveValue FromString(System.String value)
    // Offset: 0x1016878
    static ::UnityEngine::InputSystem::Utilities::PrimitiveValue FromString(::StringW value);
    // public System.TypeCode GetTypeCode()
    // Offset: 0xA4FEAC
    ::System::TypeCode GetTypeCode();
    // public System.Boolean ToBoolean(System.IFormatProvider provider)
    // Offset: 0xA4FEB4
    bool ToBoolean(::System::IFormatProvider* provider);
    // public System.Byte ToByte(System.IFormatProvider provider)
    // Offset: 0xA4FEBC
    uint8_t ToByte(::System::IFormatProvider* provider);
    // public System.Char ToChar(System.IFormatProvider provider)
    // Offset: 0xA4FED4
    ::Il2CppChar ToChar(::System::IFormatProvider* provider);
    // public System.DateTime ToDateTime(System.IFormatProvider provider)
    // Offset: 0xA4FF10
    ::System::DateTime ToDateTime(::System::IFormatProvider* provider);
    // public System.Decimal ToDecimal(System.IFormatProvider provider)
    // Offset: 0xA4FF1C
    ::System::Decimal ToDecimal(::System::IFormatProvider* provider);
    // public System.Double ToDouble(System.IFormatProvider provider)
    // Offset: 0xA4FF24
    double ToDouble(::System::IFormatProvider* provider);
    // public System.Int16 ToInt16(System.IFormatProvider provider)
    // Offset: 0xA4FF2C
    int16_t ToInt16(::System::IFormatProvider* provider);
    // public System.Int32 ToInt32(System.IFormatProvider provider)
    // Offset: 0xA4FF44
    int ToInt32(::System::IFormatProvider* provider);
    // public System.Int64 ToInt64(System.IFormatProvider provider)
    // Offset: 0xA4FF5C
    int64_t ToInt64(::System::IFormatProvider* provider);
    // public System.SByte ToSByte(System.IFormatProvider provider)
    // Offset: 0xA4FF64
    int8_t ToSByte(::System::IFormatProvider* provider);
    // public System.Single ToSingle(System.IFormatProvider provider)
    // Offset: 0xA4FF7C
    float ToSingle(::System::IFormatProvider* provider);
    // public System.String ToString(System.IFormatProvider provider)
    // Offset: 0xA4FF98
    ::StringW ToString(::System::IFormatProvider* provider);
    // public System.Object ToType(System.Type conversionType, System.IFormatProvider provider)
    // Offset: 0xA4FFA0
    ::Il2CppObject* ToType(::System::Type* conversionType, ::System::IFormatProvider* provider);
    // public System.UInt16 ToUInt16(System.IFormatProvider provider)
    // Offset: 0xA4FFAC
    uint16_t ToUInt16(::System::IFormatProvider* provider);
    // public System.UInt32 ToUInt32(System.IFormatProvider provider)
    // Offset: 0xA4FFC4
    uint ToUInt32(::System::IFormatProvider* provider);
    // public System.UInt64 ToUInt64(System.IFormatProvider provider)
    // Offset: 0xA4FFDC
    uint64_t ToUInt64(::System::IFormatProvider* provider);
    // public System.Object ToObject()
    // Offset: 0xA4FFE4
    ::Il2CppObject* ToObject();
    // static public UnityEngine.InputSystem.Utilities.PrimitiveValue From(TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TValue>
    static ::UnityEngine::InputSystem::Utilities::PrimitiveValue From(TValue value) {
      static_assert(std::is_convertible_v<TValue, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Utilities::PrimitiveValue::From");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem.Utilities", "PrimitiveValue", "From", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Utilities::PrimitiveValue, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, value);
    }
    // static public UnityEngine.InputSystem.Utilities.PrimitiveValue FromObject(System.Object value)
    // Offset: 0x1017734
    static ::UnityEngine::InputSystem::Utilities::PrimitiveValue FromObject(::Il2CppObject* value);
    // static public UnityEngine.InputSystem.Utilities.PrimitiveValue FromBoolean(System.Boolean value)
    // Offset: 0x10182F4
    static ::UnityEngine::InputSystem::Utilities::PrimitiveValue FromBoolean(bool value);
    // static public UnityEngine.InputSystem.Utilities.PrimitiveValue FromChar(System.Char value)
    // Offset: 0x1018308
    static ::UnityEngine::InputSystem::Utilities::PrimitiveValue FromChar(::Il2CppChar value);
    // static public UnityEngine.InputSystem.Utilities.PrimitiveValue FromByte(System.Byte value)
    // Offset: 0x101831C
    static ::UnityEngine::InputSystem::Utilities::PrimitiveValue FromByte(uint8_t value);
    // static public UnityEngine.InputSystem.Utilities.PrimitiveValue FromSByte(System.SByte value)
    // Offset: 0x1018330
    static ::UnityEngine::InputSystem::Utilities::PrimitiveValue FromSByte(int8_t value);
    // static public UnityEngine.InputSystem.Utilities.PrimitiveValue FromInt16(System.Int16 value)
    // Offset: 0x1018344
    static ::UnityEngine::InputSystem::Utilities::PrimitiveValue FromInt16(int16_t value);
    // static public UnityEngine.InputSystem.Utilities.PrimitiveValue FromUInt16(System.UInt16 value)
    // Offset: 0x1018358
    static ::UnityEngine::InputSystem::Utilities::PrimitiveValue FromUInt16(uint16_t value);
    // static public UnityEngine.InputSystem.Utilities.PrimitiveValue FromInt32(System.Int32 value)
    // Offset: 0x101836C
    static ::UnityEngine::InputSystem::Utilities::PrimitiveValue FromInt32(int value);
    // static public UnityEngine.InputSystem.Utilities.PrimitiveValue FromUInt32(System.UInt32 value)
    // Offset: 0x1018380
    static ::UnityEngine::InputSystem::Utilities::PrimitiveValue FromUInt32(uint value);
    // static public UnityEngine.InputSystem.Utilities.PrimitiveValue FromInt64(System.Int64 value)
    // Offset: 0x1018394
    static ::UnityEngine::InputSystem::Utilities::PrimitiveValue FromInt64(int64_t value);
    // static public UnityEngine.InputSystem.Utilities.PrimitiveValue FromUInt64(System.UInt64 value)
    // Offset: 0x10183AC
    static ::UnityEngine::InputSystem::Utilities::PrimitiveValue FromUInt64(uint64_t value);
    // static public UnityEngine.InputSystem.Utilities.PrimitiveValue FromSingle(System.Single value)
    // Offset: 0x10183C4
    static ::UnityEngine::InputSystem::Utilities::PrimitiveValue FromSingle(float value);
    // static public UnityEngine.InputSystem.Utilities.PrimitiveValue FromDouble(System.Double value)
    // Offset: 0x10183D8
    static ::UnityEngine::InputSystem::Utilities::PrimitiveValue FromDouble(double value);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xA4FE54
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0xA4FE5C
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
    // public override System.String ToString()
    // Offset: 0xA4FEA4
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // UnityEngine.InputSystem.Utilities.PrimitiveValue
  #pragma pack(pop)
  static check_size<sizeof(PrimitiveValue), 4 + sizeof(double)> __UnityEngine_InputSystem_Utilities_PrimitiveValueSizeCheck;
  static_assert(sizeof(PrimitiveValue) == 0xC);
  // static public System.Boolean op_Equality(UnityEngine.InputSystem.Utilities.PrimitiveValue left, UnityEngine.InputSystem.Utilities.PrimitiveValue right)
  // Offset: 0x101628C
  bool operator ==(const ::UnityEngine::InputSystem::Utilities::PrimitiveValue& left, const ::UnityEngine::InputSystem::Utilities::PrimitiveValue& right);
  // static public System.Boolean op_Inequality(UnityEngine.InputSystem.Utilities.PrimitiveValue left, UnityEngine.InputSystem.Utilities.PrimitiveValue right)
  // Offset: 0x1017C7C
  bool operator !=(const ::UnityEngine::InputSystem::Utilities::PrimitiveValue& left, const ::UnityEngine::InputSystem::Utilities::PrimitiveValue& right);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::get_type
// Il2CppName: get_type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::TypeCode (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)()>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::get_type)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "get_type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::get_isEmpty
// Il2CppName: get_isEmpty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)()>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::get_isEmpty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "get_isEmpty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::PrimitiveValue
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::PrimitiveValue
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::PrimitiveValue
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::PrimitiveValue
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::PrimitiveValue
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::PrimitiveValue
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::PrimitiveValue
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::PrimitiveValue
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::PrimitiveValue
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::PrimitiveValue
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::PrimitiveValue
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::PrimitiveValue
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ConvertTo
// Il2CppName: ConvertTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::PrimitiveValue (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::TypeCode)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ConvertTo)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "TypeCode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ConvertTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::UnityEngine::InputSystem::Utilities::PrimitiveValue)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "PrimitiveValue")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::FromString
// Il2CppName: FromString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::PrimitiveValue (*)(::StringW)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::FromString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "FromString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::GetTypeCode
// Il2CppName: GetTypeCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::TypeCode (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)()>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::GetTypeCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "GetTypeCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToBoolean
// Il2CppName: ToBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::IFormatProvider*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToBoolean)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToByte
// Il2CppName: ToByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::IFormatProvider*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToByte)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToChar
// Il2CppName: ToChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::IFormatProvider*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToChar)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToDateTime
// Il2CppName: ToDateTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::IFormatProvider*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToDateTime)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToDateTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToDecimal
// Il2CppName: ToDecimal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Decimal (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::IFormatProvider*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToDecimal)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToDecimal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToDouble
// Il2CppName: ToDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::IFormatProvider*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToDouble)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToInt16
// Il2CppName: ToInt16
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int16_t (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::IFormatProvider*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToInt16)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToInt16", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToInt32
// Il2CppName: ToInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::IFormatProvider*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToInt32)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToInt64
// Il2CppName: ToInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::IFormatProvider*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToInt64)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToSByte
// Il2CppName: ToSByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int8_t (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::IFormatProvider*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToSByte)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToSByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToSingle
// Il2CppName: ToSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::IFormatProvider*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToSingle)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::IFormatProvider*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToString)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToType
// Il2CppName: ToType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::Type*, ::System::IFormatProvider*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToType)> {
  static const MethodInfo* get() {
    static auto* conversionType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{conversionType, provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToUInt16
// Il2CppName: ToUInt16
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::IFormatProvider*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToUInt16)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToUInt16", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToUInt32
// Il2CppName: ToUInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::IFormatProvider*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToUInt32)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToUInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToUInt64
// Il2CppName: ToUInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::System::IFormatProvider*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToUInt64)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToUInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToObject
// Il2CppName: ToObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)()>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::From
// Il2CppName: From
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::FromObject
// Il2CppName: FromObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::PrimitiveValue (*)(::Il2CppObject*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::FromObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "FromObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::FromBoolean
// Il2CppName: FromBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::PrimitiveValue (*)(bool)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::FromBoolean)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "FromBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::FromChar
// Il2CppName: FromChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::PrimitiveValue (*)(::Il2CppChar)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::FromChar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "FromChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::FromByte
// Il2CppName: FromByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::PrimitiveValue (*)(uint8_t)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::FromByte)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "FromByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::FromSByte
// Il2CppName: FromSByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::PrimitiveValue (*)(int8_t)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::FromSByte)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "SByte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "FromSByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::FromInt16
// Il2CppName: FromInt16
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::PrimitiveValue (*)(int16_t)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::FromInt16)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "FromInt16", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::FromUInt16
// Il2CppName: FromUInt16
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::PrimitiveValue (*)(uint16_t)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::FromUInt16)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "FromUInt16", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::FromInt32
// Il2CppName: FromInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::PrimitiveValue (*)(int)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::FromInt32)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "FromInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::FromUInt32
// Il2CppName: FromUInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::PrimitiveValue (*)(uint)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::FromUInt32)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "FromUInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::FromInt64
// Il2CppName: FromInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::PrimitiveValue (*)(int64_t)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::FromInt64)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "FromInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::FromUInt64
// Il2CppName: FromUInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::PrimitiveValue (*)(uint64_t)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::FromUInt64)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "FromUInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::FromSingle
// Il2CppName: FromSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::PrimitiveValue (*)(float)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::FromSingle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "FromSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::FromDouble
// Il2CppName: FromDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::PrimitiveValue (*)(double)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::FromDouble)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "FromDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)(::Il2CppObject*)>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)()>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Utilities::PrimitiveValue::*)()>(&UnityEngine::InputSystem::Utilities::PrimitiveValue::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::PrimitiveValue), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::operator ==
// Il2CppName: op_Equality
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::PrimitiveValue::operator !=
// Il2CppName: op_Inequality
// Cannot perform method pointer template specialization from operators!
