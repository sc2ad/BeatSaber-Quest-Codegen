// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: System.IComparable`1
#include "System/IComparable_1.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine.InputSystem.Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: InternedString
  struct InternedString;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Utilities::InternedString, "UnityEngine.InputSystem.Utilities", "InternedString");
// Type namespace: UnityEngine.InputSystem.Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.Utilities.InternedString
  // [TokenAttribute] Offset: FFFFFFFF
  struct InternedString/*, public ::System::ValueType, public ::System::IEquatable_1<::UnityEngine::InputSystem::Utilities::InternedString>, public ::System::IComparable_1<::UnityEngine::InputSystem::Utilities::InternedString>*/ {
    public:
    public:
    // private readonly System.String m_StringOriginalCase
    // Size: 0x8
    // Offset: 0x0
    ::StringW m_StringOriginalCase;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private readonly System.String m_StringLowerCase
    // Size: 0x8
    // Offset: 0x8
    ::StringW m_StringLowerCase;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating value type constructor for type: InternedString
    constexpr InternedString(::StringW m_StringOriginalCase_ = {}, ::StringW m_StringLowerCase_ = {}) noexcept : m_StringOriginalCase{m_StringOriginalCase_}, m_StringLowerCase{m_StringLowerCase_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::InputSystem::Utilities::InternedString>
    operator ::System::IEquatable_1<::UnityEngine::InputSystem::Utilities::InternedString>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::InputSystem::Utilities::InternedString>*>(this);
    }
    // Creating interface conversion operator: operator ::System::IComparable_1<::UnityEngine::InputSystem::Utilities::InternedString>
    operator ::System::IComparable_1<::UnityEngine::InputSystem::Utilities::InternedString>() noexcept {
      return *reinterpret_cast<::System::IComparable_1<::UnityEngine::InputSystem::Utilities::InternedString>*>(this);
    }
    // Get instance field reference: private readonly System.String m_StringOriginalCase
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_StringOriginalCase();
    // Get instance field reference: private readonly System.String m_StringLowerCase
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_StringLowerCase();
    // public System.Int32 get_length()
    // Offset: 0xA4F59C
    int get_length();
    // public System.Void .ctor(System.String text)
    // Offset: 0xA4F5B4
    InternedString(::StringW text);
    // public System.Boolean IsEmpty()
    // Offset: 0xA4F5BC
    bool IsEmpty();
    // public System.String ToLower()
    // Offset: 0xA4F5CC
    ::StringW ToLower();
    // public System.Boolean Equals(UnityEngine.InputSystem.Utilities.InternedString other)
    // Offset: 0xA4F5DC
    bool Equals(::UnityEngine::InputSystem::Utilities::InternedString other);
    // public System.Int32 CompareTo(UnityEngine.InputSystem.Utilities.InternedString other)
    // Offset: 0xA4F5EC
    int CompareTo(::UnityEngine::InputSystem::Utilities::InternedString other);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xA4F5D4
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0xA4F600
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
    // public override System.String ToString()
    // Offset: 0xA4F618
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // UnityEngine.InputSystem.Utilities.InternedString
  #pragma pack(pop)
  static check_size<sizeof(InternedString), 8 + sizeof(::StringW)> __UnityEngine_InputSystem_Utilities_InternedStringSizeCheck;
  static_assert(sizeof(InternedString) == 0x10);
  // static public System.Boolean op_Equality(UnityEngine.InputSystem.Utilities.InternedString a, UnityEngine.InputSystem.Utilities.InternedString b)
  // Offset: 0x1011854
  bool operator ==(const ::UnityEngine::InputSystem::Utilities::InternedString& a, const ::UnityEngine::InputSystem::Utilities::InternedString& b);
  // static public System.Boolean op_Inequality(UnityEngine.InputSystem.Utilities.InternedString a, UnityEngine.InputSystem.Utilities.InternedString b)
  // Offset: 0x1011860
  bool operator !=(const ::UnityEngine::InputSystem::Utilities::InternedString& a, const ::UnityEngine::InputSystem::Utilities::InternedString& b);
  // static public System.Boolean op_Equality(UnityEngine.InputSystem.Utilities.InternedString a, System.String b)
  // Offset: 0x101186C
  bool operator ==(const ::UnityEngine::InputSystem::Utilities::InternedString& a, const ::StringW& b);
  // static public System.Boolean op_Inequality(UnityEngine.InputSystem.Utilities.InternedString a, System.String b)
  // Offset: 0x1011914
  bool operator !=(const ::UnityEngine::InputSystem::Utilities::InternedString& a, const ::StringW& b);
  // static public System.Boolean op_Equality(System.String a, UnityEngine.InputSystem.Utilities.InternedString b)
  // Offset: 0x10119BC
  bool operator ==(const ::StringW& a, const ::UnityEngine::InputSystem::Utilities::InternedString& b);
  // static public System.Boolean op_Inequality(System.String a, UnityEngine.InputSystem.Utilities.InternedString b)
  // Offset: 0x1011A60
  bool operator !=(const ::StringW& a, const ::UnityEngine::InputSystem::Utilities::InternedString& b);
  // static public System.Boolean op_LessThan(UnityEngine.InputSystem.Utilities.InternedString left, UnityEngine.InputSystem.Utilities.InternedString right)
  // Offset: 0x1011B04
  bool operator <(const ::UnityEngine::InputSystem::Utilities::InternedString& left, const ::UnityEngine::InputSystem::Utilities::InternedString& right);
  // static public System.Boolean op_GreaterThan(UnityEngine.InputSystem.Utilities.InternedString left, UnityEngine.InputSystem.Utilities.InternedString right)
  // Offset: 0x1011B2C
  bool operator >(const ::UnityEngine::InputSystem::Utilities::InternedString& left, const ::UnityEngine::InputSystem::Utilities::InternedString& right);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::get_length
// Il2CppName: get_length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::Utilities::InternedString::*)()>(&UnityEngine::InputSystem::Utilities::InternedString::get_length)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::InternedString), "get_length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::InternedString
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::IsEmpty
// Il2CppName: IsEmpty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::InternedString::*)()>(&UnityEngine::InputSystem::Utilities::InternedString::IsEmpty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::InternedString), "IsEmpty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::ToLower
// Il2CppName: ToLower
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Utilities::InternedString::*)()>(&UnityEngine::InputSystem::Utilities::InternedString::ToLower)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::InternedString), "ToLower", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::InternedString::*)(::UnityEngine::InputSystem::Utilities::InternedString)>(&UnityEngine::InputSystem::Utilities::InternedString::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::InternedString), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::CompareTo
// Il2CppName: CompareTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::Utilities::InternedString::*)(::UnityEngine::InputSystem::Utilities::InternedString)>(&UnityEngine::InputSystem::Utilities::InternedString::CompareTo)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::InternedString), "CompareTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::InternedString::*)(::Il2CppObject*)>(&UnityEngine::InputSystem::Utilities::InternedString::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::InternedString), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::Utilities::InternedString::*)()>(&UnityEngine::InputSystem::Utilities::InternedString::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::InternedString), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Utilities::InternedString::*)()>(&UnityEngine::InputSystem::Utilities::InternedString::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::InternedString), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::operator ==
// Il2CppName: op_Equality
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::operator !=
// Il2CppName: op_Inequality
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::operator ==
// Il2CppName: op_Equality
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::operator !=
// Il2CppName: op_Inequality
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::operator ==
// Il2CppName: op_Equality
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::operator !=
// Il2CppName: op_Inequality
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::operator <
// Il2CppName: op_LessThan
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::InternedString::operator >
// Il2CppName: op_GreaterThan
// Cannot perform method pointer template specialization from operators!
