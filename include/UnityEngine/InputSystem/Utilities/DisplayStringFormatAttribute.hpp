// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine.InputSystem.Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: DisplayStringFormatAttribute
  class DisplayStringFormatAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::Utilities::DisplayStringFormatAttribute);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Utilities::DisplayStringFormatAttribute*, "UnityEngine.InputSystem.Utilities", "DisplayStringFormatAttribute");
// Type namespace: UnityEngine.InputSystem.Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.Utilities.DisplayStringFormatAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 959270
  class DisplayStringFormatAttribute : public ::System::Attribute {
    public:
    public:
    // private System.String <formatString>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::StringW formatString;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return formatString;
    }
    // Get instance field reference: private System.String <formatString>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$formatString$k__BackingField();
    // public System.String get_formatString()
    // Offset: 0x100F864
    ::StringW get_formatString();
    // public System.Void set_formatString(System.String value)
    // Offset: 0x100F86C
    void set_formatString(::StringW value);
    // public System.Void .ctor(System.String formatString)
    // Offset: 0x100F874
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DisplayStringFormatAttribute* New_ctor(::StringW formatString) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Utilities::DisplayStringFormatAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DisplayStringFormatAttribute*, creationType>(formatString)));
    }
  }; // UnityEngine.InputSystem.Utilities.DisplayStringFormatAttribute
  #pragma pack(pop)
  static check_size<sizeof(DisplayStringFormatAttribute), 16 + sizeof(::StringW)> __UnityEngine_InputSystem_Utilities_DisplayStringFormatAttributeSizeCheck;
  static_assert(sizeof(DisplayStringFormatAttribute) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::DisplayStringFormatAttribute::get_formatString
// Il2CppName: get_formatString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Utilities::DisplayStringFormatAttribute::*)()>(&UnityEngine::InputSystem::Utilities::DisplayStringFormatAttribute::get_formatString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::DisplayStringFormatAttribute*), "get_formatString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::DisplayStringFormatAttribute::set_formatString
// Il2CppName: set_formatString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Utilities::DisplayStringFormatAttribute::*)(::StringW)>(&UnityEngine::InputSystem::Utilities::DisplayStringFormatAttribute::set_formatString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::DisplayStringFormatAttribute*), "set_formatString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::DisplayStringFormatAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
