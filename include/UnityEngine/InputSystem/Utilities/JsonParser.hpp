// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Utilities
namespace UnityEngine::InputSystem::Utilities {
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: JsonParser
  struct JsonParser;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Utilities::JsonParser, "UnityEngine.InputSystem.Utilities", "JsonParser");
// Type namespace: UnityEngine.InputSystem.Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Size: 0x12
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.Utilities.JsonParser
  // [TokenAttribute] Offset: FFFFFFFF
  struct JsonParser/*, public ::System::ValueType*/ {
    public:
    // Nested type: ::UnityEngine::InputSystem::Utilities::JsonParser::JsonValueType
    struct JsonValueType;
    // Nested type: ::UnityEngine::InputSystem::Utilities::JsonParser::JsonString
    struct JsonString;
    // Nested type: ::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue
    struct JsonValue;
    public:
    // private readonly System.String m_Text
    // Size: 0x8
    // Offset: 0x0
    ::StringW m_Text;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private readonly System.Int32 m_Length
    // Size: 0x4
    // Offset: 0x8
    int m_Length;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_Position
    // Size: 0x4
    // Offset: 0xC
    int m_Position;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean m_MatchAnyElementInArray
    // Size: 0x1
    // Offset: 0x10
    bool m_MatchAnyElementInArray;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_DryRun
    // Size: 0x1
    // Offset: 0x11
    bool m_DryRun;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: JsonParser
    constexpr JsonParser(::StringW m_Text_ = {}, int m_Length_ = {}, int m_Position_ = {}, bool m_MatchAnyElementInArray_ = {}, bool m_DryRun_ = {}) noexcept : m_Text{m_Text_}, m_Length{m_Length_}, m_Position{m_Position_}, m_MatchAnyElementInArray{m_MatchAnyElementInArray_}, m_DryRun{m_DryRun_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private readonly System.String m_Text
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Text();
    // Get instance field reference: private readonly System.Int32 m_Length
    [[deprecated("Use field access instead!")]] int& dyn_m_Length();
    // Get instance field reference: private System.Int32 m_Position
    [[deprecated("Use field access instead!")]] int& dyn_m_Position();
    // Get instance field reference: private System.Boolean m_MatchAnyElementInArray
    [[deprecated("Use field access instead!")]] bool& dyn_m_MatchAnyElementInArray();
    // Get instance field reference: private System.Boolean m_DryRun
    [[deprecated("Use field access instead!")]] bool& dyn_m_DryRun();
    // public System.Boolean get_isAtEnd()
    // Offset: 0xA4F844
    bool get_isAtEnd();
    // public System.Void .ctor(System.String json)
    // Offset: 0xA4F744
    JsonParser(::StringW json);
    // public System.Void Reset()
    // Offset: 0xA4F74C
    void Reset();
    // public System.Boolean NavigateToProperty(System.String path)
    // Offset: 0xA4F760
    bool NavigateToProperty(::StringW path);
    // public System.Boolean CurrentPropertyHasValueEqualTo(UnityEngine.InputSystem.Utilities.JsonParser/UnityEngine.InputSystem.Utilities.JsonValue expectedValue)
    // Offset: 0xA4F768
    bool CurrentPropertyHasValueEqualTo(::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue expectedValue);
    // public System.Boolean ParseToken(System.Char token)
    // Offset: 0xA4F7A8
    bool ParseToken(::Il2CppChar token);
    // public System.Boolean ParseValue()
    // Offset: 0xA4F7B0
    bool ParseValue();
    // public System.Boolean ParseValue(out UnityEngine.InputSystem.Utilities.JsonParser/UnityEngine.InputSystem.Utilities.JsonValue result)
    // Offset: 0xA4F7F4
    bool ParseValue(ByRef<::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue> result);
    // public System.Boolean ParseStringValue(out UnityEngine.InputSystem.Utilities.JsonParser/UnityEngine.InputSystem.Utilities.JsonValue result)
    // Offset: 0xA4F7FC
    bool ParseStringValue(ByRef<::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue> result);
    // public System.Boolean ParseArrayValue(out UnityEngine.InputSystem.Utilities.JsonParser/UnityEngine.InputSystem.Utilities.JsonValue result)
    // Offset: 0xA4F804
    bool ParseArrayValue(ByRef<::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue> result);
    // public System.Boolean ParseObjectValue(out UnityEngine.InputSystem.Utilities.JsonParser/UnityEngine.InputSystem.Utilities.JsonValue result)
    // Offset: 0xA4F80C
    bool ParseObjectValue(ByRef<::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue> result);
    // public System.Boolean ParseNumber(out UnityEngine.InputSystem.Utilities.JsonParser/UnityEngine.InputSystem.Utilities.JsonValue result)
    // Offset: 0xA4F814
    bool ParseNumber(ByRef<::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue> result);
    // public System.Boolean ParseBooleanValue(out UnityEngine.InputSystem.Utilities.JsonParser/UnityEngine.InputSystem.Utilities.JsonValue result)
    // Offset: 0xA4F81C
    bool ParseBooleanValue(ByRef<::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue> result);
    // public System.Boolean ParseNullValue(out UnityEngine.InputSystem.Utilities.JsonParser/UnityEngine.InputSystem.Utilities.JsonValue result)
    // Offset: 0xA4F824
    bool ParseNullValue(ByRef<::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue> result);
    // public System.Boolean SkipToValue()
    // Offset: 0xA4F82C
    bool SkipToValue();
    // private System.Boolean SkipString(System.String text)
    // Offset: 0xA4F834
    bool SkipString(::StringW text);
    // private System.Void SkipWhitespace()
    // Offset: 0xA4F83C
    void SkipWhitespace();
    // public override System.String ToString()
    // Offset: 0xA4F758
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // UnityEngine.InputSystem.Utilities.JsonParser
  #pragma pack(pop)
  static check_size<sizeof(JsonParser), 17 + sizeof(bool)> __UnityEngine_InputSystem_Utilities_JsonParserSizeCheck;
  static_assert(sizeof(JsonParser) == 0x12);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::get_isAtEnd
// Il2CppName: get_isAtEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::JsonParser::*)()>(&UnityEngine::InputSystem::Utilities::JsonParser::get_isAtEnd)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "get_isAtEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::JsonParser
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Utilities::JsonParser::*)()>(&UnityEngine::InputSystem::Utilities::JsonParser::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::NavigateToProperty
// Il2CppName: NavigateToProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::JsonParser::*)(::StringW)>(&UnityEngine::InputSystem::Utilities::JsonParser::NavigateToProperty)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "NavigateToProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::CurrentPropertyHasValueEqualTo
// Il2CppName: CurrentPropertyHasValueEqualTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::JsonParser::*)(::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue)>(&UnityEngine::InputSystem::Utilities::JsonParser::CurrentPropertyHasValueEqualTo)> {
  static const MethodInfo* get() {
    static auto* expectedValue = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "JsonParser/JsonValue")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "CurrentPropertyHasValueEqualTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{expectedValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::ParseToken
// Il2CppName: ParseToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::JsonParser::*)(::Il2CppChar)>(&UnityEngine::InputSystem::Utilities::JsonParser::ParseToken)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "ParseToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::ParseValue
// Il2CppName: ParseValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::JsonParser::*)()>(&UnityEngine::InputSystem::Utilities::JsonParser::ParseValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "ParseValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::ParseValue
// Il2CppName: ParseValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::JsonParser::*)(ByRef<::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue>)>(&UnityEngine::InputSystem::Utilities::JsonParser::ParseValue)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "JsonParser/JsonValue")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "ParseValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::ParseStringValue
// Il2CppName: ParseStringValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::JsonParser::*)(ByRef<::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue>)>(&UnityEngine::InputSystem::Utilities::JsonParser::ParseStringValue)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "JsonParser/JsonValue")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "ParseStringValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::ParseArrayValue
// Il2CppName: ParseArrayValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::JsonParser::*)(ByRef<::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue>)>(&UnityEngine::InputSystem::Utilities::JsonParser::ParseArrayValue)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "JsonParser/JsonValue")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "ParseArrayValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::ParseObjectValue
// Il2CppName: ParseObjectValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::JsonParser::*)(ByRef<::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue>)>(&UnityEngine::InputSystem::Utilities::JsonParser::ParseObjectValue)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "JsonParser/JsonValue")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "ParseObjectValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::ParseNumber
// Il2CppName: ParseNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::JsonParser::*)(ByRef<::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue>)>(&UnityEngine::InputSystem::Utilities::JsonParser::ParseNumber)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "JsonParser/JsonValue")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "ParseNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::ParseBooleanValue
// Il2CppName: ParseBooleanValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::JsonParser::*)(ByRef<::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue>)>(&UnityEngine::InputSystem::Utilities::JsonParser::ParseBooleanValue)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "JsonParser/JsonValue")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "ParseBooleanValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::ParseNullValue
// Il2CppName: ParseNullValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::JsonParser::*)(ByRef<::UnityEngine::InputSystem::Utilities::JsonParser::JsonValue>)>(&UnityEngine::InputSystem::Utilities::JsonParser::ParseNullValue)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "JsonParser/JsonValue")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "ParseNullValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::SkipToValue
// Il2CppName: SkipToValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::JsonParser::*)()>(&UnityEngine::InputSystem::Utilities::JsonParser::SkipToValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "SkipToValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::SkipString
// Il2CppName: SkipString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Utilities::JsonParser::*)(::StringW)>(&UnityEngine::InputSystem::Utilities::JsonParser::SkipString)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "SkipString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::SkipWhitespace
// Il2CppName: SkipWhitespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Utilities::JsonParser::*)()>(&UnityEngine::InputSystem::Utilities::JsonParser::SkipWhitespace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "SkipWhitespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::JsonParser::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::Utilities::JsonParser::*)()>(&UnityEngine::InputSystem::Utilities::JsonParser::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::JsonParser), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
