// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.Utilities.Substring
#include "UnityEngine/InputSystem/Utilities/Substring.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Utilities
namespace UnityEngine::InputSystem::Utilities {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: StringComparison
  struct StringComparison;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: StringHelpers
  class StringHelpers;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::Utilities::StringHelpers);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Utilities::StringHelpers*, "UnityEngine.InputSystem.Utilities", "StringHelpers");
// Type namespace: UnityEngine.InputSystem.Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.Utilities.StringHelpers
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class StringHelpers : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::InputSystem::Utilities::StringHelpers::$Tokenize$d__8
    class $Tokenize$d__8;
    // Nested type: ::UnityEngine::InputSystem::Utilities::StringHelpers::$Split$d__9
    class $Split$d__9;
    // static public System.String Escape(System.String str, System.String chars, System.String replacements)
    // Offset: 0x1B54D1C
    static ::StringW Escape(::StringW str, ::StringW chars, ::StringW replacements);
    // static public System.String Unescape(System.String str, System.String chars, System.String replacements)
    // Offset: 0x1B54ED4
    static ::StringW Unescape(::StringW str, ::StringW chars, ::StringW replacements);
    // static public System.Boolean Contains(System.String str, System.Char ch)
    // Offset: 0x1B54EB0
    static bool Contains(::StringW str, ::Il2CppChar ch);
    // static public System.Boolean Contains(System.String str, System.String text, System.StringComparison comparison)
    // Offset: 0x1B5505C
    static bool Contains(::StringW str, ::StringW text, ::System::StringComparison comparison);
    // static public System.String GetPlural(System.String str)
    // Offset: 0x1B55080
    static ::StringW GetPlural(::StringW str);
    // static public System.String NicifyMemorySize(System.Int64 numBytes)
    // Offset: 0x1B551C0
    static ::StringW NicifyMemorySize(int64_t numBytes);
    // static public System.Boolean FromNicifiedMemorySize(System.String text, out System.Int64 result, System.Int64 defaultMultiplier)
    // Offset: 0x1B55304
    static bool FromNicifiedMemorySize(::StringW text, ByRef<int64_t> result, int64_t defaultMultiplier);
    // static public System.Int32 CountOccurrences(System.String str, System.Char ch)
    // Offset: 0x1B55474
    static int CountOccurrences(::StringW str, ::Il2CppChar ch);
    // static public System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.Utilities.Substring> Tokenize(System.String str)
    // Offset: 0x1B554E8
    static ::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::Substring>* Tokenize(::StringW str);
    // static public System.Collections.Generic.IEnumerable`1<System.String> Split(System.String str, System.Func`2<System.Char,System.Boolean> predicate)
    // Offset: 0x1B555A0
    static ::System::Collections::Generic::IEnumerable_1<::StringW>* Split(::StringW str, ::System::Func_2<::Il2CppChar, bool>* predicate);
    // static public System.String Join(System.String separator, params TValue[] values)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TValue>
    static ::StringW Join(::StringW separator, ::ArrayW<TValue> values) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Utilities::StringHelpers::Join");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem.Utilities", "StringHelpers", "Join", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(values)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, separator, values);
    }
    // static public System.String Join(System.Collections.Generic.IEnumerable`1<TValue> values, System.String separator)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TValue>
    static ::StringW Join(::System::Collections::Generic::IEnumerable_1<TValue>* values, ::StringW separator) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Utilities::StringHelpers::Join");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem.Utilities", "StringHelpers", "Join", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(separator)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, values, separator);
    }
    // static public System.String MakeUniqueName(System.String baseName, System.Collections.Generic.IEnumerable`1<TExisting> existingSet, System.Func`2<TExisting,System.String> getNameFunc)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TExisting>
    static ::StringW MakeUniqueName(::StringW baseName, ::System::Collections::Generic::IEnumerable_1<TExisting>* existingSet, ::System::Func_2<TExisting, ::StringW>* getNameFunc) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Utilities::StringHelpers::MakeUniqueName");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem.Utilities", "StringHelpers", "MakeUniqueName", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TExisting>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseName), ::il2cpp_utils::ExtractType(existingSet), ::il2cpp_utils::ExtractType(getNameFunc)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TExisting>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, baseName, existingSet, getNameFunc);
    }
    // static public System.Boolean CharacterSeparatedListsHaveAtLeastOneCommonElement(System.String firstList, System.String secondList, System.Char separator)
    // Offset: 0x1B55668
    static bool CharacterSeparatedListsHaveAtLeastOneCommonElement(::StringW firstList, ::StringW secondList, ::Il2CppChar separator);
    // static public System.Int32 ParseInt(System.String str, System.Int32 pos)
    // Offset: 0x1B558E0
    static int ParseInt(::StringW str, int pos);
    // static public System.Boolean WriteStringToBuffer(System.String text, System.IntPtr buffer, System.Int32 bufferSizeInCharacters)
    // Offset: 0x1B55978
    static bool WriteStringToBuffer(::StringW text, ::System::IntPtr buffer, int bufferSizeInCharacters);
    // static public System.Boolean WriteStringToBuffer(System.String text, System.IntPtr buffer, System.Int32 bufferSizeInCharacters, ref System.UInt32 offset)
    // Offset: 0x1B559A0
    static bool WriteStringToBuffer(::StringW text, ::System::IntPtr buffer, int bufferSizeInCharacters, ByRef<uint> offset);
    // static public System.String ReadStringFromBuffer(System.IntPtr buffer, System.Int32 bufferSize)
    // Offset: 0x1B55B74
    static ::StringW ReadStringFromBuffer(::System::IntPtr buffer, int bufferSize);
    // static public System.String ReadStringFromBuffer(System.IntPtr buffer, System.Int32 bufferSize, ref System.UInt32 offset)
    // Offset: 0x1B55B98
    static ::StringW ReadStringFromBuffer(::System::IntPtr buffer, int bufferSize, ByRef<uint> offset);
    // static public System.Boolean IsPrintable(System.Char ch)
    // Offset: 0x1B55CB8
    static bool IsPrintable(::Il2CppChar ch);
    // static public System.String WithAllWhitespaceStripped(System.String str)
    // Offset: 0x1B55D5C
    static ::StringW WithAllWhitespaceStripped(::StringW str);
    // static public System.Boolean InvariantEqualsIgnoreCase(System.String left, System.String right)
    // Offset: 0x1B55E5C
    static bool InvariantEqualsIgnoreCase(::StringW left, ::StringW right);
    // static public System.String ExpandTemplateString(System.String template, System.Func`2<System.String,System.String> mapFunc)
    // Offset: 0x1B55EAC
    static ::StringW ExpandTemplateString(::StringW _template, ::System::Func_2<::StringW, ::StringW>* mapFunc);
  }; // UnityEngine.InputSystem.Utilities.StringHelpers
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::Escape
// Il2CppName: Escape
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::StringW, ::StringW)>(&UnityEngine::InputSystem::Utilities::StringHelpers::Escape)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* chars = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* replacements = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "Escape", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, chars, replacements});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::Unescape
// Il2CppName: Unescape
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::StringW, ::StringW)>(&UnityEngine::InputSystem::Utilities::StringHelpers::Unescape)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* chars = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* replacements = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "Unescape", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, chars, replacements});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::Il2CppChar)>(&UnityEngine::InputSystem::Utilities::StringHelpers::Contains)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ch = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, ch});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW, ::System::StringComparison)>(&UnityEngine::InputSystem::Utilities::StringHelpers::Contains)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* comparison = &::il2cpp_utils::GetClassFromName("System", "StringComparison")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, text, comparison});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::GetPlural
// Il2CppName: GetPlural
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&UnityEngine::InputSystem::Utilities::StringHelpers::GetPlural)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "GetPlural", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::NicifyMemorySize
// Il2CppName: NicifyMemorySize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int64_t)>(&UnityEngine::InputSystem::Utilities::StringHelpers::NicifyMemorySize)> {
  static const MethodInfo* get() {
    static auto* numBytes = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "NicifyMemorySize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{numBytes});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::FromNicifiedMemorySize
// Il2CppName: FromNicifiedMemorySize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ByRef<int64_t>, int64_t)>(&UnityEngine::InputSystem::Utilities::StringHelpers::FromNicifiedMemorySize)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Int64")->this_arg;
    static auto* defaultMultiplier = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "FromNicifiedMemorySize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text, result, defaultMultiplier});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::CountOccurrences
// Il2CppName: CountOccurrences
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, ::Il2CppChar)>(&UnityEngine::InputSystem::Utilities::StringHelpers::CountOccurrences)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* ch = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "CountOccurrences", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, ch});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::Tokenize
// Il2CppName: Tokenize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::Utilities::Substring>* (*)(::StringW)>(&UnityEngine::InputSystem::Utilities::StringHelpers::Tokenize)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "Tokenize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::Split
// Il2CppName: Split
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::StringW>* (*)(::StringW, ::System::Func_2<::Il2CppChar, bool>*)>(&UnityEngine::InputSystem::Utilities::StringHelpers::Split)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* predicate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Char"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "Split", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, predicate});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::Join
// Il2CppName: Join
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::Join
// Il2CppName: Join
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::MakeUniqueName
// Il2CppName: MakeUniqueName
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::CharacterSeparatedListsHaveAtLeastOneCommonElement
// Il2CppName: CharacterSeparatedListsHaveAtLeastOneCommonElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW, ::Il2CppChar)>(&UnityEngine::InputSystem::Utilities::StringHelpers::CharacterSeparatedListsHaveAtLeastOneCommonElement)> {
  static const MethodInfo* get() {
    static auto* firstList = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* secondList = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* separator = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "CharacterSeparatedListsHaveAtLeastOneCommonElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{firstList, secondList, separator});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::ParseInt
// Il2CppName: ParseInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int)>(&UnityEngine::InputSystem::Utilities::StringHelpers::ParseInt)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* pos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "ParseInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, pos});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::WriteStringToBuffer
// Il2CppName: WriteStringToBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::IntPtr, int)>(&UnityEngine::InputSystem::Utilities::StringHelpers::WriteStringToBuffer)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* bufferSizeInCharacters = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "WriteStringToBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text, buffer, bufferSizeInCharacters});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::WriteStringToBuffer
// Il2CppName: WriteStringToBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::IntPtr, int, ByRef<uint>)>(&UnityEngine::InputSystem::Utilities::StringHelpers::WriteStringToBuffer)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* bufferSizeInCharacters = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "WriteStringToBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text, buffer, bufferSizeInCharacters, offset});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::ReadStringFromBuffer
// Il2CppName: ReadStringFromBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr, int)>(&UnityEngine::InputSystem::Utilities::StringHelpers::ReadStringFromBuffer)> {
  static const MethodInfo* get() {
    static auto* buffer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* bufferSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "ReadStringFromBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bufferSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::ReadStringFromBuffer
// Il2CppName: ReadStringFromBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr, int, ByRef<uint>)>(&UnityEngine::InputSystem::Utilities::StringHelpers::ReadStringFromBuffer)> {
  static const MethodInfo* get() {
    static auto* buffer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* bufferSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "ReadStringFromBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bufferSize, offset});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::IsPrintable
// Il2CppName: IsPrintable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppChar)>(&UnityEngine::InputSystem::Utilities::StringHelpers::IsPrintable)> {
  static const MethodInfo* get() {
    static auto* ch = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "IsPrintable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ch});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::WithAllWhitespaceStripped
// Il2CppName: WithAllWhitespaceStripped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&UnityEngine::InputSystem::Utilities::StringHelpers::WithAllWhitespaceStripped)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "WithAllWhitespaceStripped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::InvariantEqualsIgnoreCase
// Il2CppName: InvariantEqualsIgnoreCase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW)>(&UnityEngine::InputSystem::Utilities::StringHelpers::InvariantEqualsIgnoreCase)> {
  static const MethodInfo* get() {
    static auto* left = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* right = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "InvariantEqualsIgnoreCase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{left, right});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Utilities::StringHelpers::ExpandTemplateString
// Il2CppName: ExpandTemplateString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::System::Func_2<::StringW, ::StringW>*)>(&UnityEngine::InputSystem::Utilities::StringHelpers::ExpandTemplateString)> {
  static const MethodInfo* get() {
    static auto* _template = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* mapFunc = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Utilities::StringHelpers*), "ExpandTemplateString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_template, mapFunc});
  }
};
