// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.InputControlLayoutChange
#include "UnityEngine/InputSystem/InputControlLayoutChange.hpp"
// Including type: UnityEngine.InputSystem.InputDeviceChange
#include "UnityEngine/InputSystem/InputDeviceChange.hpp"
// Including type: UnityEngine.InputSystem.LowLevel.InputEventPtr
#include "UnityEngine/InputSystem/LowLevel/InputEventPtr.hpp"
// Including type: UnityEngine.InputSystem.InputActionChange
#include "UnityEngine/InputSystem/InputActionChange.hpp"
// Including type: UnityEngine.InputSystem.Layouts.InputDeviceMatcher
#include "UnityEngine/InputSystem/Layouts/InputDeviceMatcher.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.InputSystem.Layouts.InputDeviceDescription
#include "UnityEngine/InputSystem/Layouts/InputDeviceDescription.hpp"
// Including type: UnityEngine.InputSystem.InputControlList`1
#include "UnityEngine/InputSystem/InputControlList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputManager
  class InputManager;
  // Forward declaring type: InputRemoting
  class InputRemoting;
  // Forward declaring type: InputDevice
  class InputDevice;
  // Forward declaring type: InputSettings
  class InputSettings;
  // Forward declaring type: InputControl
  class InputControl;
  // Forward declaring type: InputAction
  class InputAction;
}
// Forward declaring namespace: UnityEngine::InputSystem::Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: ReadOnlyArray`1<TValue>
  template<typename TValue>
  struct ReadOnlyArray_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Version
  class Version;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
  // Skipping declaration: ValueType because it is already included!
}
// Forward declaring namespace: UnityEngine::InputSystem::LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Forward declaring type: InputMetrics
  struct InputMetrics;
  // Forward declaring type: InputDeviceCommandDelegate
  class InputDeviceCommandDelegate;
  // Forward declaring type: IInputEventTypeInfo
  class IInputEventTypeInfo;
  // Forward declaring type: IInputStateTypeInfo
  class IInputStateTypeInfo;
  // Forward declaring type: InputUpdateType
  struct InputUpdateType;
  // Forward declaring type: IInputRuntime
  class IInputRuntime;
}
// Forward declaring namespace: UnityEngine::InputSystem::Layouts
namespace UnityEngine::InputSystem::Layouts {
  // Forward declaring type: InputDeviceFindControlLayoutDelegate
  class InputDeviceFindControlLayoutDelegate;
  // Forward declaring type: InputControlLayout
  class InputControlLayout;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Skipping declaration: IEnumerable`1 because it is already included!
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputSystem
  class InputSystem;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::InputSystem);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputSystem*, "UnityEngine.InputSystem", "InputSystem");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.InputSystem
  // [TokenAttribute] Offset: FFFFFFFF
  class InputSystem : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::InputSystem::InputSystem::StateEventBuffer
    struct StateEventBuffer;
    // Nested type: ::UnityEngine::InputSystem::InputSystem::DeltaStateEventBuffer
    struct DeltaStateEventBuffer;
    // Get static field: static UnityEngine.InputSystem.InputManager s_Manager
    static ::UnityEngine::InputSystem::InputManager* _get_s_Manager();
    // Set static field: static UnityEngine.InputSystem.InputManager s_Manager
    static void _set_s_Manager(::UnityEngine::InputSystem::InputManager* value);
    // Get static field: static UnityEngine.InputSystem.InputRemoting s_Remote
    static ::UnityEngine::InputSystem::InputRemoting* _get_s_Remote();
    // Set static field: static UnityEngine.InputSystem.InputRemoting s_Remote
    static void _set_s_Remote(::UnityEngine::InputSystem::InputRemoting* value);
    // static public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice> get_devices()
    // Offset: 0xD89E68
    static ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*> get_devices();
    // static public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice> get_disconnectedDevices()
    // Offset: 0xD98ACC
    static ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*> get_disconnectedDevices();
    // static public System.Single get_pollingFrequency()
    // Offset: 0xD992FC
    static float get_pollingFrequency();
    // static public System.Void set_pollingFrequency(System.Single value)
    // Offset: 0xD99370
    static void set_pollingFrequency(float value);
    // static public UnityEngine.InputSystem.InputSettings get_settings()
    // Offset: 0xD9432C
    static ::UnityEngine::InputSystem::InputSettings* get_settings();
    // static public System.Void set_settings(UnityEngine.InputSystem.InputSettings value)
    // Offset: 0xD9B23C
    static void set_settings(::UnityEngine::InputSystem::InputSettings* value);
    // static public UnityEngine.InputSystem.InputRemoting get_remoting()
    // Offset: 0xD9BDC0
    static ::UnityEngine::InputSystem::InputRemoting* get_remoting();
    // static public System.Version get_version()
    // Offset: 0xD9BE28
    static ::System::Version* get_version();
    // static public UnityEngine.InputSystem.LowLevel.InputMetrics get_metrics()
    // Offset: 0xD9BE94
    static ::UnityEngine::InputSystem::LowLevel::InputMetrics get_metrics();
    // static public System.Void add_onLayoutChange(System.Action`2<System.String,UnityEngine.InputSystem.InputControlLayoutChange> value)
    // Offset: 0xD97B30
    static void add_onLayoutChange(::System::Action_2<::StringW, ::UnityEngine::InputSystem::InputControlLayoutChange>* value);
    // static public System.Void remove_onLayoutChange(System.Action`2<System.String,UnityEngine.InputSystem.InputControlLayoutChange> value)
    // Offset: 0xD97C48
    static void remove_onLayoutChange(::System::Action_2<::StringW, ::UnityEngine::InputSystem::InputControlLayoutChange>* value);
    // static public System.Void add_onDeviceChange(System.Action`2<UnityEngine.InputSystem.InputDevice,UnityEngine.InputSystem.InputDeviceChange> value)
    // Offset: 0xD98B6C
    static void add_onDeviceChange(::System::Action_2<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::InputDeviceChange>* value);
    // static public System.Void remove_onDeviceChange(System.Action`2<UnityEngine.InputSystem.InputDevice,UnityEngine.InputSystem.InputDeviceChange> value)
    // Offset: 0xD98CC4
    static void remove_onDeviceChange(::System::Action_2<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::InputDeviceChange>* value);
    // static public System.Void add_onDeviceCommand(UnityEngine.InputSystem.LowLevel.InputDeviceCommandDelegate value)
    // Offset: 0xD98E1C
    static void add_onDeviceCommand(::UnityEngine::InputSystem::LowLevel::InputDeviceCommandDelegate* value);
    // static public System.Void remove_onDeviceCommand(UnityEngine.InputSystem.LowLevel.InputDeviceCommandDelegate value)
    // Offset: 0xD98F74
    static void remove_onDeviceCommand(::UnityEngine::InputSystem::LowLevel::InputDeviceCommandDelegate* value);
    // static public System.Void add_onFindLayoutForDevice(UnityEngine.InputSystem.Layouts.InputDeviceFindControlLayoutDelegate value)
    // Offset: 0xD990CC
    static void add_onFindLayoutForDevice(::UnityEngine::InputSystem::Layouts::InputDeviceFindControlLayoutDelegate* value);
    // static public System.Void remove_onFindLayoutForDevice(UnityEngine.InputSystem.Layouts.InputDeviceFindControlLayoutDelegate value)
    // Offset: 0xD991E4
    static void remove_onFindLayoutForDevice(::UnityEngine::InputSystem::Layouts::InputDeviceFindControlLayoutDelegate* value);
    // static public System.Void add_onEvent(System.Action`2<UnityEngine.InputSystem.LowLevel.InputEventPtr,UnityEngine.InputSystem.InputDevice> value)
    // Offset: 0xD9A4AC
    static void add_onEvent(::System::Action_2<::UnityEngine::InputSystem::LowLevel::InputEventPtr, ::UnityEngine::InputSystem::InputDevice*>* value);
    // static public System.Void remove_onEvent(System.Action`2<UnityEngine.InputSystem.LowLevel.InputEventPtr,UnityEngine.InputSystem.InputDevice> value)
    // Offset: 0xD9A604
    static void remove_onEvent(::System::Action_2<::UnityEngine::InputSystem::LowLevel::InputEventPtr, ::UnityEngine::InputSystem::InputDevice*>* value);
    // static public System.Void add_onBeforeUpdate(System.Action value)
    // Offset: 0xD9ADDC
    static void add_onBeforeUpdate(::System::Action* value);
    // static public System.Void remove_onBeforeUpdate(System.Action value)
    // Offset: 0xD9AEF4
    static void remove_onBeforeUpdate(::System::Action* value);
    // static public System.Void add_onAfterUpdate(System.Action value)
    // Offset: 0xD9B00C
    static void add_onAfterUpdate(::System::Action* value);
    // static public System.Void remove_onAfterUpdate(System.Action value)
    // Offset: 0xD9B124
    static void remove_onAfterUpdate(::System::Action* value);
    // static public System.Void add_onSettingsChange(System.Action value)
    // Offset: 0xD9B394
    static void add_onSettingsChange(::System::Action* value);
    // static public System.Void remove_onSettingsChange(System.Action value)
    // Offset: 0xD9B40C
    static void remove_onSettingsChange(::System::Action* value);
    // static public System.Void add_onActionChange(System.Action`2<System.Object,UnityEngine.InputSystem.InputActionChange> value)
    // Offset: 0xD9B484
    static void add_onActionChange(::System::Action_2<::Il2CppObject*, ::UnityEngine::InputSystem::InputActionChange>* value);
    // static public System.Void remove_onActionChange(System.Action`2<System.Object,UnityEngine.InputSystem.InputActionChange> value)
    // Offset: 0xD9B610
    static void remove_onActionChange(::System::Action_2<::Il2CppObject*, ::UnityEngine::InputSystem::InputActionChange>* value);
    // static private System.Void .cctor()
    // Offset: 0xD9BF0C
    static void _cctor();
    // static public System.Void RegisterLayout(System.Type type, System.String name, System.Nullable`1<UnityEngine.InputSystem.Layouts.InputDeviceMatcher> matches)
    // Offset: 0xD97D60
    static void RegisterLayout(::System::Type* type, ::StringW name, ::System::Nullable_1<::UnityEngine::InputSystem::Layouts::InputDeviceMatcher> matches);
    // static public System.Void RegisterLayout(System.String name, System.Nullable`1<UnityEngine.InputSystem.Layouts.InputDeviceMatcher> matches)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void RegisterLayout(::StringW name, ::System::Nullable_1<::UnityEngine::InputSystem::Layouts::InputDeviceMatcher> matches) {
      static_assert(std::is_convertible_v<T, ::UnityEngine::InputSystem::InputControl*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputSystem::RegisterLayout");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputSystem", "RegisterLayout", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(matches)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, name, matches);
    }
    // static public System.Void RegisterLayout(System.String json, System.String name, System.Nullable`1<UnityEngine.InputSystem.Layouts.InputDeviceMatcher> matches)
    // Offset: 0xD97EE8
    static void RegisterLayout(::StringW json, ::StringW name, ::System::Nullable_1<::UnityEngine::InputSystem::Layouts::InputDeviceMatcher> matches);
    // static public System.Void RegisterLayoutOverride(System.String json, System.String name)
    // Offset: 0xD97FDC
    static void RegisterLayoutOverride(::StringW json, ::StringW name);
    // static public System.Void RegisterLayoutMatcher(System.String layoutName, UnityEngine.InputSystem.Layouts.InputDeviceMatcher matcher)
    // Offset: 0xD98068
    static void RegisterLayoutMatcher(::StringW layoutName, ::UnityEngine::InputSystem::Layouts::InputDeviceMatcher matcher);
    // static public System.Void RegisterLayoutMatcher(UnityEngine.InputSystem.Layouts.InputDeviceMatcher matcher)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TDevice>
    static void RegisterLayoutMatcher(::UnityEngine::InputSystem::Layouts::InputDeviceMatcher matcher) {
      static_assert(std::is_convertible_v<TDevice, ::UnityEngine::InputSystem::InputDevice*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputSystem::RegisterLayoutMatcher");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputSystem", "RegisterLayoutMatcher", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDevice>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matcher)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDevice>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, matcher);
    }
    // static public System.Void RegisterLayoutBuilder(System.Func`1<UnityEngine.InputSystem.Layouts.InputControlLayout> buildMethod, System.String name, System.String baseLayout, System.Nullable`1<UnityEngine.InputSystem.Layouts.InputDeviceMatcher> matches)
    // Offset: 0xD980F0
    static void RegisterLayoutBuilder(::System::Func_1<::UnityEngine::InputSystem::Layouts::InputControlLayout*>* buildMethod, ::StringW name, ::StringW baseLayout, ::System::Nullable_1<::UnityEngine::InputSystem::Layouts::InputDeviceMatcher> matches);
    // static public System.Void RemoveLayout(System.String name)
    // Offset: 0xD9825C
    static void RemoveLayout(::StringW name);
    // static public System.String TryFindMatchingLayout(UnityEngine.InputSystem.Layouts.InputDeviceDescription deviceDescription)
    // Offset: 0xD982D8
    static ::StringW TryFindMatchingLayout(::UnityEngine::InputSystem::Layouts::InputDeviceDescription deviceDescription);
    // static public System.Collections.Generic.IEnumerable`1<System.String> ListLayouts()
    // Offset: 0xD9835C
    static ::System::Collections::Generic::IEnumerable_1<::StringW>* ListLayouts();
    // static public System.Collections.Generic.IEnumerable`1<System.String> ListLayoutsBasedOn(System.String baseLayout)
    // Offset: 0xD983D0
    static ::System::Collections::Generic::IEnumerable_1<::StringW>* ListLayoutsBasedOn(::StringW baseLayout);
    // static public UnityEngine.InputSystem.Layouts.InputControlLayout LoadLayout(System.String name)
    // Offset: 0xD98494
    static ::UnityEngine::InputSystem::Layouts::InputControlLayout* LoadLayout(::StringW name);
    // static public UnityEngine.InputSystem.Layouts.InputControlLayout LoadLayout()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TControl>
    static ::UnityEngine::InputSystem::Layouts::InputControlLayout* LoadLayout() {
      static_assert(std::is_convertible_v<TControl, ::UnityEngine::InputSystem::InputControl*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputSystem::LoadLayout");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputSystem", "LoadLayout", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TControl>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TControl>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Layouts::InputControlLayout*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static public System.String GetNameOfBaseLayout(System.String layoutName)
    // Offset: 0xD98584
    static ::StringW GetNameOfBaseLayout(::StringW layoutName);
    // static public System.Boolean IsFirstLayoutBasedOnSecond(System.String firstLayoutName, System.String secondLayoutName)
    // Offset: 0xD98694
    static bool IsFirstLayoutBasedOnSecond(::StringW firstLayoutName, ::StringW secondLayoutName);
    // static public System.Void RegisterProcessor(System.Type type, System.String name)
    // Offset: 0xD987E4
    static void RegisterProcessor(::System::Type* type, ::StringW name);
    // static public System.Void RegisterProcessor(System.String name)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void RegisterProcessor(::StringW name) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputSystem::RegisterProcessor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputSystem", "RegisterProcessor", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, name);
    }
    // static public System.Type TryGetProcessor(System.String name)
    // Offset: 0xD98960
    static ::System::Type* TryGetProcessor(::StringW name);
    // static public System.Collections.Generic.IEnumerable`1<System.String> ListProcessors()
    // Offset: 0xD98A44
    static ::System::Collections::Generic::IEnumerable_1<::StringW>* ListProcessors();
    // static public UnityEngine.InputSystem.InputDevice AddDevice(System.String layout, System.String name, System.String variants)
    // Offset: 0xD993F0
    static ::UnityEngine::InputSystem::InputDevice* AddDevice(::StringW layout, ::StringW name, ::StringW variants);
    // static public TDevice AddDevice(System.String name)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TDevice>
    static TDevice AddDevice(::StringW name) {
      static_assert(std::is_convertible_v<TDevice, ::UnityEngine::InputSystem::InputDevice*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputSystem::AddDevice");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputSystem", "AddDevice", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDevice>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDevice>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<TDevice, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, name);
    }
    // static public UnityEngine.InputSystem.InputDevice AddDevice(UnityEngine.InputSystem.Layouts.InputDeviceDescription description)
    // Offset: 0xD994F0
    static ::UnityEngine::InputSystem::InputDevice* AddDevice(::UnityEngine::InputSystem::Layouts::InputDeviceDescription description);
    // static public System.Void AddDevice(UnityEngine.InputSystem.InputDevice device)
    // Offset: 0xD9960C
    static void AddDevice(::UnityEngine::InputSystem::InputDevice* device);
    // static public System.Void RemoveDevice(UnityEngine.InputSystem.InputDevice device)
    // Offset: 0xD996C4
    static void RemoveDevice(::UnityEngine::InputSystem::InputDevice* device);
    // static public System.Void FlushDisconnectedDevices()
    // Offset: 0xD99740
    static void FlushDisconnectedDevices();
    // static public UnityEngine.InputSystem.InputDevice GetDevice(System.String nameOrLayout)
    // Offset: 0xD997B0
    static ::UnityEngine::InputSystem::InputDevice* GetDevice(::StringW nameOrLayout);
    // static public TDevice GetDevice()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TDevice>
    static TDevice GetDevice() {
      static_assert(std::is_convertible_v<TDevice, ::UnityEngine::InputSystem::InputDevice*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputSystem::GetDevice");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputSystem", "GetDevice", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDevice>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDevice>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<TDevice, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static public TDevice GetDevice(UnityEngine.InputSystem.Utilities.InternedString usage)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TDevice>
    static TDevice GetDevice(::UnityEngine::InputSystem::Utilities::InternedString usage) {
      static_assert(std::is_convertible_v<TDevice, ::UnityEngine::InputSystem::InputDevice*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputSystem::GetDevice");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputSystem", "GetDevice", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDevice>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(usage)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDevice>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<TDevice, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, usage);
    }
    // static public TDevice GetDevice(System.String usage)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TDevice>
    static TDevice GetDevice(::StringW usage) {
      static_assert(std::is_convertible_v<TDevice, ::UnityEngine::InputSystem::InputDevice*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputSystem::GetDevice");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputSystem", "GetDevice", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDevice>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(usage)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDevice>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<TDevice, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, usage);
    }
    // static public UnityEngine.InputSystem.InputDevice GetDeviceById(System.Int32 deviceId)
    // Offset: 0xD99828
    static ::UnityEngine::InputSystem::InputDevice* GetDeviceById(int deviceId);
    // static public System.Collections.Generic.List`1<UnityEngine.InputSystem.Layouts.InputDeviceDescription> GetUnsupportedDevices()
    // Offset: 0xD998A0
    static ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>* GetUnsupportedDevices();
    // static public System.Int32 GetUnsupportedDevices(System.Collections.Generic.List`1<UnityEngine.InputSystem.Layouts.InputDeviceDescription> descriptions)
    // Offset: 0xD9992C
    static int GetUnsupportedDevices(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>* descriptions);
    // static public System.Void EnableDevice(UnityEngine.InputSystem.InputDevice device)
    // Offset: 0xD999A4
    static void EnableDevice(::UnityEngine::InputSystem::InputDevice* device);
    // static public System.Void DisableDevice(UnityEngine.InputSystem.InputDevice device)
    // Offset: 0xD99A20
    static void DisableDevice(::UnityEngine::InputSystem::InputDevice* device);
    // static public System.Boolean TrySyncDevice(UnityEngine.InputSystem.InputDevice device)
    // Offset: 0xD99A9C
    static bool TrySyncDevice(::UnityEngine::InputSystem::InputDevice* device);
    // static public System.Boolean TryResetDevice(UnityEngine.InputSystem.InputDevice device)
    // Offset: 0xD99B54
    static bool TryResetDevice(::UnityEngine::InputSystem::InputDevice* device);
    // static public System.Void PauseHaptics()
    // Offset: 0xD99BD8
    static void PauseHaptics();
    // static public System.Void ResumeHaptics()
    // Offset: 0xD99D04
    static void ResumeHaptics();
    // static public System.Void ResetHaptics()
    // Offset: 0xD99E34
    static void ResetHaptics();
    // static public System.Void SetDeviceUsage(UnityEngine.InputSystem.InputDevice device, System.String usage)
    // Offset: 0xD99F64
    static void SetDeviceUsage(::UnityEngine::InputSystem::InputDevice* device, ::StringW usage);
    // static public System.Void SetDeviceUsage(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.Utilities.InternedString usage)
    // Offset: 0xD99FF8
    static void SetDeviceUsage(::UnityEngine::InputSystem::InputDevice* device, ::UnityEngine::InputSystem::Utilities::InternedString usage);
    // static public System.Void AddDeviceUsage(UnityEngine.InputSystem.InputDevice device, System.String usage)
    // Offset: 0xD9A088
    static void AddDeviceUsage(::UnityEngine::InputSystem::InputDevice* device, ::StringW usage);
    // static public System.Void AddDeviceUsage(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.Utilities.InternedString usage)
    // Offset: 0xD9A134
    static void AddDeviceUsage(::UnityEngine::InputSystem::InputDevice* device, ::UnityEngine::InputSystem::Utilities::InternedString usage);
    // static public System.Void RemoveDeviceUsage(UnityEngine.InputSystem.InputDevice device, System.String usage)
    // Offset: 0xD9A1C4
    static void RemoveDeviceUsage(::UnityEngine::InputSystem::InputDevice* device, ::StringW usage);
    // static public System.Void RemoveDeviceUsage(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.Utilities.InternedString usage)
    // Offset: 0xD9A270
    static void RemoveDeviceUsage(::UnityEngine::InputSystem::InputDevice* device, ::UnityEngine::InputSystem::Utilities::InternedString usage);
    // static public UnityEngine.InputSystem.InputControl FindControl(System.String path)
    // Offset: 0xD9A300
    static ::UnityEngine::InputSystem::InputControl* FindControl(::StringW path);
    // static public UnityEngine.InputSystem.InputControlList`1<UnityEngine.InputSystem.InputControl> FindControls(System.String path)
    // Offset: 0xD9A428
    static ::UnityEngine::InputSystem::InputControlList_1<::UnityEngine::InputSystem::InputControl*> FindControls(::StringW path);
    // static public UnityEngine.InputSystem.InputControlList`1<TControl> FindControls(System.String path)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TControl>
    static ::UnityEngine::InputSystem::InputControlList_1<TControl> FindControls(::StringW path) {
      static_assert(std::is_convertible_v<TControl, ::UnityEngine::InputSystem::InputControl*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputSystem::FindControls");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputSystem", "FindControls", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TControl>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TControl>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputControlList_1<TControl>, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, path);
    }
    // static public System.Int32 FindControls(System.String path, ref UnityEngine.InputSystem.InputControlList`1<TControl> controls)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TControl>
    static int FindControls(::StringW path, ByRef<::UnityEngine::InputSystem::InputControlList_1<TControl>> controls) {
      static_assert(std::is_convertible_v<TControl, ::UnityEngine::InputSystem::InputControl*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputSystem::FindControls");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputSystem", "FindControls", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TControl>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(controls)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TControl>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, path, byref(controls));
    }
    // static public System.Void QueueEvent(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)
    // Offset: 0xD9A75C
    static void QueueEvent(::UnityEngine::InputSystem::LowLevel::InputEventPtr eventPtr);
    // static public System.Void QueueEvent(ref TEvent inputEvent)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TEvent>
    static void QueueEvent(ByRef<TEvent> inputEvent) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TEvent>, ::UnityEngine::InputSystem::LowLevel::IInputEventTypeInfo> && std::is_convertible_v<TEvent, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputSystem::QueueEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputSystem", "QueueEvent", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TEvent>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputEvent)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TEvent>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, byref(inputEvent));
    }
    // static public System.Void QueueStateEvent(UnityEngine.InputSystem.InputDevice device, TState state, System.Double time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TState>
    static void QueueStateEvent(::UnityEngine::InputSystem::InputDevice* device, TState state, double time) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<TState>, ::UnityEngine::InputSystem::LowLevel::IInputStateTypeInfo> && std::is_convertible_v<TState, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputSystem::QueueStateEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputSystem", "QueueStateEvent", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TState>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(time)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TState>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, device, state, time);
    }
    // static public System.Void QueueDeltaStateEvent(UnityEngine.InputSystem.InputControl control, TDelta delta, System.Double time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TDelta>
    static void QueueDeltaStateEvent(::UnityEngine::InputSystem::InputControl* control, TDelta delta, double time) {
      static_assert(std::is_convertible_v<TDelta, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputSystem::QueueDeltaStateEvent");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputSystem", "QueueDeltaStateEvent", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDelta>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(control), ::il2cpp_utils::ExtractType(delta), ::il2cpp_utils::ExtractType(time)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TDelta>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, control, delta, time);
    }
    // static public System.Void QueueConfigChangeEvent(UnityEngine.InputSystem.InputDevice device, System.Double time)
    // Offset: 0xD9A830
    static void QueueConfigChangeEvent(::UnityEngine::InputSystem::InputDevice* device, double time);
    // static public System.Void QueueTextEvent(UnityEngine.InputSystem.InputDevice device, System.Char character, System.Double time)
    // Offset: 0xD9AA00
    static void QueueTextEvent(::UnityEngine::InputSystem::InputDevice* device, ::Il2CppChar character, double time);
    // static public System.Void Update()
    // Offset: 0xD9ABE0
    static void Update();
    // static System.Void Update(UnityEngine.InputSystem.LowLevel.InputUpdateType updateType)
    // Offset: 0xD9AC6C
    static void Update(::UnityEngine::InputSystem::LowLevel::InputUpdateType updateType);
    // static public System.Void RegisterInteraction(System.Type type, System.String name)
    // Offset: 0xD9B75C
    static void RegisterInteraction(::System::Type* type, ::StringW name);
    // static public System.Void RegisterInteraction(System.String name)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void RegisterInteraction(::StringW name) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputSystem::RegisterInteraction");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputSystem", "RegisterInteraction", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, name);
    }
    // static public System.Type TryGetInteraction(System.String name)
    // Offset: 0xD9B8D8
    static ::System::Type* TryGetInteraction(::StringW name);
    // static public System.Collections.Generic.IEnumerable`1<System.String> ListInteractions()
    // Offset: 0xD9B9BC
    static ::System::Collections::Generic::IEnumerable_1<::StringW>* ListInteractions();
    // static public System.Void RegisterBindingComposite(System.Type type, System.String name)
    // Offset: 0xD9BA44
    static void RegisterBindingComposite(::System::Type* type, ::StringW name);
    // static public System.Void RegisterBindingComposite(System.String name)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void RegisterBindingComposite(::StringW name) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputSystem::RegisterBindingComposite");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputSystem", "RegisterBindingComposite", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, name);
    }
    // static public System.Type TryGetBindingComposite(System.String name)
    // Offset: 0xD9BBC0
    static ::System::Type* TryGetBindingComposite(::StringW name);
    // static public System.Void DisableAllEnabledActions()
    // Offset: 0xD9BCA4
    static void DisableAllEnabledActions();
    // static public System.Collections.Generic.List`1<UnityEngine.InputSystem.InputAction> ListEnabledActions()
    // Offset: 0xD9BCAC
    static ::System::Collections::Generic::List_1<::UnityEngine::InputSystem::InputAction*>* ListEnabledActions();
    // static public System.Int32 ListEnabledActions(System.Collections.Generic.List`1<UnityEngine.InputSystem.InputAction> actions)
    // Offset: 0xD9BD38
    static int ListEnabledActions(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::InputAction*>* actions);
    // static private System.Void RunInitializeInPlayer()
    // Offset: 0xD9C08C
    static void RunInitializeInPlayer();
    // static private System.Void InitializeInPlayer(UnityEngine.InputSystem.LowLevel.IInputRuntime runtime, UnityEngine.InputSystem.InputSettings settings)
    // Offset: 0xD9BF18
    static void InitializeInPlayer(::UnityEngine::InputSystem::LowLevel::IInputRuntime* runtime, ::UnityEngine::InputSystem::InputSettings* settings);
    // static private System.Void RunInitialUpdate()
    // Offset: 0xD9C14C
    static void RunInitialUpdate();
    // static private System.Void PerformDefaultPluginInitialization()
    // Offset: 0xD9C120
    static void PerformDefaultPluginInitialization();
  }; // UnityEngine.InputSystem.InputSystem
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::get_devices
// Il2CppName: get_devices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*> (*)()>(&UnityEngine::InputSystem::InputSystem::get_devices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "get_devices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::get_disconnectedDevices
// Il2CppName: get_disconnectedDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*> (*)()>(&UnityEngine::InputSystem::InputSystem::get_disconnectedDevices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "get_disconnectedDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::get_pollingFrequency
// Il2CppName: get_pollingFrequency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)()>(&UnityEngine::InputSystem::InputSystem::get_pollingFrequency)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "get_pollingFrequency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::set_pollingFrequency
// Il2CppName: set_pollingFrequency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float)>(&UnityEngine::InputSystem::InputSystem::set_pollingFrequency)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "set_pollingFrequency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::get_settings
// Il2CppName: get_settings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputSettings* (*)()>(&UnityEngine::InputSystem::InputSystem::get_settings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "get_settings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::set_settings
// Il2CppName: set_settings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputSettings*)>(&UnityEngine::InputSystem::InputSystem::set_settings)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "set_settings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::get_remoting
// Il2CppName: get_remoting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputRemoting* (*)()>(&UnityEngine::InputSystem::InputSystem::get_remoting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "get_remoting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::get_version
// Il2CppName: get_version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Version* (*)()>(&UnityEngine::InputSystem::InputSystem::get_version)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "get_version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::get_metrics
// Il2CppName: get_metrics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::LowLevel::InputMetrics (*)()>(&UnityEngine::InputSystem::InputSystem::get_metrics)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "get_metrics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::add_onLayoutChange
// Il2CppName: add_onLayoutChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::StringW, ::UnityEngine::InputSystem::InputControlLayoutChange>*)>(&UnityEngine::InputSystem::InputSystem::add_onLayoutChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControlLayoutChange")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "add_onLayoutChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::remove_onLayoutChange
// Il2CppName: remove_onLayoutChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::StringW, ::UnityEngine::InputSystem::InputControlLayoutChange>*)>(&UnityEngine::InputSystem::InputSystem::remove_onLayoutChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControlLayoutChange")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "remove_onLayoutChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::add_onDeviceChange
// Il2CppName: add_onDeviceChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::InputDeviceChange>*)>(&UnityEngine::InputSystem::InputSystem::add_onDeviceChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDeviceChange")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "add_onDeviceChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::remove_onDeviceChange
// Il2CppName: remove_onDeviceChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::InputDeviceChange>*)>(&UnityEngine::InputSystem::InputSystem::remove_onDeviceChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDeviceChange")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "remove_onDeviceChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::add_onDeviceCommand
// Il2CppName: add_onDeviceCommand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::LowLevel::InputDeviceCommandDelegate*)>(&UnityEngine::InputSystem::InputSystem::add_onDeviceCommand)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputDeviceCommandDelegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "add_onDeviceCommand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::remove_onDeviceCommand
// Il2CppName: remove_onDeviceCommand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::LowLevel::InputDeviceCommandDelegate*)>(&UnityEngine::InputSystem::InputSystem::remove_onDeviceCommand)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputDeviceCommandDelegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "remove_onDeviceCommand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::add_onFindLayoutForDevice
// Il2CppName: add_onFindLayoutForDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::Layouts::InputDeviceFindControlLayoutDelegate*)>(&UnityEngine::InputSystem::InputSystem::add_onFindLayoutForDevice)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputDeviceFindControlLayoutDelegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "add_onFindLayoutForDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::remove_onFindLayoutForDevice
// Il2CppName: remove_onFindLayoutForDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::Layouts::InputDeviceFindControlLayoutDelegate*)>(&UnityEngine::InputSystem::InputSystem::remove_onFindLayoutForDevice)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputDeviceFindControlLayoutDelegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "remove_onFindLayoutForDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::add_onEvent
// Il2CppName: add_onEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::UnityEngine::InputSystem::LowLevel::InputEventPtr, ::UnityEngine::InputSystem::InputDevice*>*)>(&UnityEngine::InputSystem::InputSystem::add_onEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "add_onEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::remove_onEvent
// Il2CppName: remove_onEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::UnityEngine::InputSystem::LowLevel::InputEventPtr, ::UnityEngine::InputSystem::InputDevice*>*)>(&UnityEngine::InputSystem::InputSystem::remove_onEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "remove_onEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::add_onBeforeUpdate
// Il2CppName: add_onBeforeUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action*)>(&UnityEngine::InputSystem::InputSystem::add_onBeforeUpdate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "add_onBeforeUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::remove_onBeforeUpdate
// Il2CppName: remove_onBeforeUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action*)>(&UnityEngine::InputSystem::InputSystem::remove_onBeforeUpdate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "remove_onBeforeUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::add_onAfterUpdate
// Il2CppName: add_onAfterUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action*)>(&UnityEngine::InputSystem::InputSystem::add_onAfterUpdate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "add_onAfterUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::remove_onAfterUpdate
// Il2CppName: remove_onAfterUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action*)>(&UnityEngine::InputSystem::InputSystem::remove_onAfterUpdate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "remove_onAfterUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::add_onSettingsChange
// Il2CppName: add_onSettingsChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action*)>(&UnityEngine::InputSystem::InputSystem::add_onSettingsChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "add_onSettingsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::remove_onSettingsChange
// Il2CppName: remove_onSettingsChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action*)>(&UnityEngine::InputSystem::InputSystem::remove_onSettingsChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "remove_onSettingsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::add_onActionChange
// Il2CppName: add_onActionChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::Il2CppObject*, ::UnityEngine::InputSystem::InputActionChange>*)>(&UnityEngine::InputSystem::InputSystem::add_onActionChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionChange")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "add_onActionChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::remove_onActionChange
// Il2CppName: remove_onActionChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::Il2CppObject*, ::UnityEngine::InputSystem::InputActionChange>*)>(&UnityEngine::InputSystem::InputSystem::remove_onActionChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionChange")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "remove_onActionChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::InputSystem::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RegisterLayout
// Il2CppName: RegisterLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Type*, ::StringW, ::System::Nullable_1<::UnityEngine::InputSystem::Layouts::InputDeviceMatcher>)>(&UnityEngine::InputSystem::InputSystem::RegisterLayout)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* matches = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputDeviceMatcher")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "RegisterLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, name, matches});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RegisterLayout
// Il2CppName: RegisterLayout
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RegisterLayout
// Il2CppName: RegisterLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::StringW, ::System::Nullable_1<::UnityEngine::InputSystem::Layouts::InputDeviceMatcher>)>(&UnityEngine::InputSystem::InputSystem::RegisterLayout)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* matches = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputDeviceMatcher")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "RegisterLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json, name, matches});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RegisterLayoutOverride
// Il2CppName: RegisterLayoutOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::StringW)>(&UnityEngine::InputSystem::InputSystem::RegisterLayoutOverride)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "RegisterLayoutOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json, name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RegisterLayoutMatcher
// Il2CppName: RegisterLayoutMatcher
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityEngine::InputSystem::Layouts::InputDeviceMatcher)>(&UnityEngine::InputSystem::InputSystem::RegisterLayoutMatcher)> {
  static const MethodInfo* get() {
    static auto* layoutName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* matcher = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputDeviceMatcher")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "RegisterLayoutMatcher", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layoutName, matcher});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RegisterLayoutMatcher
// Il2CppName: RegisterLayoutMatcher
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RegisterLayoutBuilder
// Il2CppName: RegisterLayoutBuilder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Func_1<::UnityEngine::InputSystem::Layouts::InputControlLayout*>*, ::StringW, ::StringW, ::System::Nullable_1<::UnityEngine::InputSystem::Layouts::InputDeviceMatcher>)>(&UnityEngine::InputSystem::InputSystem::RegisterLayoutBuilder)> {
  static const MethodInfo* get() {
    static auto* buildMethod = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputControlLayout")})->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* baseLayout = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* matches = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputDeviceMatcher")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "RegisterLayoutBuilder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buildMethod, name, baseLayout, matches});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RemoveLayout
// Il2CppName: RemoveLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&UnityEngine::InputSystem::InputSystem::RemoveLayout)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "RemoveLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::TryFindMatchingLayout
// Il2CppName: TryFindMatchingLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::UnityEngine::InputSystem::Layouts::InputDeviceDescription)>(&UnityEngine::InputSystem::InputSystem::TryFindMatchingLayout)> {
  static const MethodInfo* get() {
    static auto* deviceDescription = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputDeviceDescription")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "TryFindMatchingLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deviceDescription});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::ListLayouts
// Il2CppName: ListLayouts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::StringW>* (*)()>(&UnityEngine::InputSystem::InputSystem::ListLayouts)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "ListLayouts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::ListLayoutsBasedOn
// Il2CppName: ListLayoutsBasedOn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::StringW>* (*)(::StringW)>(&UnityEngine::InputSystem::InputSystem::ListLayoutsBasedOn)> {
  static const MethodInfo* get() {
    static auto* baseLayout = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "ListLayoutsBasedOn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{baseLayout});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::LoadLayout
// Il2CppName: LoadLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Layouts::InputControlLayout* (*)(::StringW)>(&UnityEngine::InputSystem::InputSystem::LoadLayout)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "LoadLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::LoadLayout
// Il2CppName: LoadLayout
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::GetNameOfBaseLayout
// Il2CppName: GetNameOfBaseLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&UnityEngine::InputSystem::InputSystem::GetNameOfBaseLayout)> {
  static const MethodInfo* get() {
    static auto* layoutName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "GetNameOfBaseLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layoutName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::IsFirstLayoutBasedOnSecond
// Il2CppName: IsFirstLayoutBasedOnSecond
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW)>(&UnityEngine::InputSystem::InputSystem::IsFirstLayoutBasedOnSecond)> {
  static const MethodInfo* get() {
    static auto* firstLayoutName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* secondLayoutName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "IsFirstLayoutBasedOnSecond", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{firstLayoutName, secondLayoutName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RegisterProcessor
// Il2CppName: RegisterProcessor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Type*, ::StringW)>(&UnityEngine::InputSystem::InputSystem::RegisterProcessor)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "RegisterProcessor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RegisterProcessor
// Il2CppName: RegisterProcessor
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::TryGetProcessor
// Il2CppName: TryGetProcessor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (*)(::StringW)>(&UnityEngine::InputSystem::InputSystem::TryGetProcessor)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "TryGetProcessor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::ListProcessors
// Il2CppName: ListProcessors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::StringW>* (*)()>(&UnityEngine::InputSystem::InputSystem::ListProcessors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "ListProcessors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::AddDevice
// Il2CppName: AddDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputDevice* (*)(::StringW, ::StringW, ::StringW)>(&UnityEngine::InputSystem::InputSystem::AddDevice)> {
  static const MethodInfo* get() {
    static auto* layout = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* variants = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "AddDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layout, name, variants});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::AddDevice
// Il2CppName: AddDevice
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::AddDevice
// Il2CppName: AddDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputDevice* (*)(::UnityEngine::InputSystem::Layouts::InputDeviceDescription)>(&UnityEngine::InputSystem::InputSystem::AddDevice)> {
  static const MethodInfo* get() {
    static auto* description = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputDeviceDescription")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "AddDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{description});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::AddDevice
// Il2CppName: AddDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::InputSystem::AddDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "AddDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RemoveDevice
// Il2CppName: RemoveDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::InputSystem::RemoveDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "RemoveDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::FlushDisconnectedDevices
// Il2CppName: FlushDisconnectedDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::InputSystem::FlushDisconnectedDevices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "FlushDisconnectedDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::GetDevice
// Il2CppName: GetDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputDevice* (*)(::StringW)>(&UnityEngine::InputSystem::InputSystem::GetDevice)> {
  static const MethodInfo* get() {
    static auto* nameOrLayout = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "GetDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameOrLayout});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::GetDevice
// Il2CppName: GetDevice
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::GetDevice
// Il2CppName: GetDevice
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::GetDevice
// Il2CppName: GetDevice
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::GetDeviceById
// Il2CppName: GetDeviceById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputDevice* (*)(int)>(&UnityEngine::InputSystem::InputSystem::GetDeviceById)> {
  static const MethodInfo* get() {
    static auto* deviceId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "GetDeviceById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deviceId});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::GetUnsupportedDevices
// Il2CppName: GetUnsupportedDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>* (*)()>(&UnityEngine::InputSystem::InputSystem::GetUnsupportedDevices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "GetUnsupportedDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::GetUnsupportedDevices
// Il2CppName: GetUnsupportedDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::Layouts::InputDeviceDescription>*)>(&UnityEngine::InputSystem::InputSystem::GetUnsupportedDevices)> {
  static const MethodInfo* get() {
    static auto* descriptions = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Layouts", "InputDeviceDescription")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "GetUnsupportedDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{descriptions});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::EnableDevice
// Il2CppName: EnableDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::InputSystem::EnableDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "EnableDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::DisableDevice
// Il2CppName: DisableDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::InputSystem::DisableDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "DisableDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::TrySyncDevice
// Il2CppName: TrySyncDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::InputSystem::TrySyncDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "TrySyncDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::TryResetDevice
// Il2CppName: TryResetDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::InputSystem::TryResetDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "TryResetDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::PauseHaptics
// Il2CppName: PauseHaptics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::InputSystem::PauseHaptics)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "PauseHaptics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::ResumeHaptics
// Il2CppName: ResumeHaptics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::InputSystem::ResumeHaptics)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "ResumeHaptics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::ResetHaptics
// Il2CppName: ResetHaptics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::InputSystem::ResetHaptics)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "ResetHaptics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::SetDeviceUsage
// Il2CppName: SetDeviceUsage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputDevice*, ::StringW)>(&UnityEngine::InputSystem::InputSystem::SetDeviceUsage)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* usage = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "SetDeviceUsage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, usage});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::SetDeviceUsage
// Il2CppName: SetDeviceUsage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::Utilities::InternedString)>(&UnityEngine::InputSystem::InputSystem::SetDeviceUsage)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* usage = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "SetDeviceUsage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, usage});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::AddDeviceUsage
// Il2CppName: AddDeviceUsage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputDevice*, ::StringW)>(&UnityEngine::InputSystem::InputSystem::AddDeviceUsage)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* usage = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "AddDeviceUsage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, usage});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::AddDeviceUsage
// Il2CppName: AddDeviceUsage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::Utilities::InternedString)>(&UnityEngine::InputSystem::InputSystem::AddDeviceUsage)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* usage = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "AddDeviceUsage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, usage});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RemoveDeviceUsage
// Il2CppName: RemoveDeviceUsage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputDevice*, ::StringW)>(&UnityEngine::InputSystem::InputSystem::RemoveDeviceUsage)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* usage = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "RemoveDeviceUsage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, usage});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RemoveDeviceUsage
// Il2CppName: RemoveDeviceUsage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::Utilities::InternedString)>(&UnityEngine::InputSystem::InputSystem::RemoveDeviceUsage)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* usage = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "InternedString")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "RemoveDeviceUsage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, usage});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::FindControl
// Il2CppName: FindControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControl* (*)(::StringW)>(&UnityEngine::InputSystem::InputSystem::FindControl)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "FindControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::FindControls
// Il2CppName: FindControls
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlList_1<::UnityEngine::InputSystem::InputControl*> (*)(::StringW)>(&UnityEngine::InputSystem::InputSystem::FindControls)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "FindControls", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::FindControls
// Il2CppName: FindControls
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::FindControls
// Il2CppName: FindControls
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::QueueEvent
// Il2CppName: QueueEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::LowLevel::InputEventPtr)>(&UnityEngine::InputSystem::InputSystem::QueueEvent)> {
  static const MethodInfo* get() {
    static auto* eventPtr = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "QueueEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventPtr});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::QueueEvent
// Il2CppName: QueueEvent
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::QueueStateEvent
// Il2CppName: QueueStateEvent
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::QueueDeltaStateEvent
// Il2CppName: QueueDeltaStateEvent
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::QueueConfigChangeEvent
// Il2CppName: QueueConfigChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputDevice*, double)>(&UnityEngine::InputSystem::InputSystem::QueueConfigChangeEvent)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "QueueConfigChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, time});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::QueueTextEvent
// Il2CppName: QueueTextEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputDevice*, ::Il2CppChar, double)>(&UnityEngine::InputSystem::InputSystem::QueueTextEvent)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* character = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "QueueTextEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, character, time});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::InputSystem::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::LowLevel::InputUpdateType)>(&UnityEngine::InputSystem::InputSystem::Update)> {
  static const MethodInfo* get() {
    static auto* updateType = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputUpdateType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updateType});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RegisterInteraction
// Il2CppName: RegisterInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Type*, ::StringW)>(&UnityEngine::InputSystem::InputSystem::RegisterInteraction)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "RegisterInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RegisterInteraction
// Il2CppName: RegisterInteraction
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::TryGetInteraction
// Il2CppName: TryGetInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (*)(::StringW)>(&UnityEngine::InputSystem::InputSystem::TryGetInteraction)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "TryGetInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::ListInteractions
// Il2CppName: ListInteractions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::StringW>* (*)()>(&UnityEngine::InputSystem::InputSystem::ListInteractions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "ListInteractions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RegisterBindingComposite
// Il2CppName: RegisterBindingComposite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Type*, ::StringW)>(&UnityEngine::InputSystem::InputSystem::RegisterBindingComposite)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "RegisterBindingComposite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RegisterBindingComposite
// Il2CppName: RegisterBindingComposite
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::TryGetBindingComposite
// Il2CppName: TryGetBindingComposite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (*)(::StringW)>(&UnityEngine::InputSystem::InputSystem::TryGetBindingComposite)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "TryGetBindingComposite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::DisableAllEnabledActions
// Il2CppName: DisableAllEnabledActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::InputSystem::DisableAllEnabledActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "DisableAllEnabledActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::ListEnabledActions
// Il2CppName: ListEnabledActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::InputSystem::InputAction*>* (*)()>(&UnityEngine::InputSystem::InputSystem::ListEnabledActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "ListEnabledActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::ListEnabledActions
// Il2CppName: ListEnabledActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::Collections::Generic::List_1<::UnityEngine::InputSystem::InputAction*>*)>(&UnityEngine::InputSystem::InputSystem::ListEnabledActions)> {
  static const MethodInfo* get() {
    static auto* actions = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "ListEnabledActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actions});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RunInitializeInPlayer
// Il2CppName: RunInitializeInPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::InputSystem::RunInitializeInPlayer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "RunInitializeInPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::InitializeInPlayer
// Il2CppName: InitializeInPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::LowLevel::IInputRuntime*, ::UnityEngine::InputSystem::InputSettings*)>(&UnityEngine::InputSystem::InputSystem::InitializeInPlayer)> {
  static const MethodInfo* get() {
    static auto* runtime = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "IInputRuntime")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "InitializeInPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{runtime, settings});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::RunInitialUpdate
// Il2CppName: RunInitialUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::InputSystem::RunInitialUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "RunInitialUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputSystem::PerformDefaultPluginInitialization
// Il2CppName: PerformDefaultPluginInitialization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::InputSystem::PerformDefaultPluginInitialization)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputSystem*), "PerformDefaultPluginInitialization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
