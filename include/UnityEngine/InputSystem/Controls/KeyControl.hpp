// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.Controls.ButtonControl
#include "UnityEngine/InputSystem/Controls/ButtonControl.hpp"
// Including type: UnityEngine.InputSystem.Key
#include "UnityEngine/InputSystem/Key.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.InputSystem.Controls
namespace UnityEngine::InputSystem::Controls {
  // Forward declaring type: KeyControl
  class KeyControl;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::Controls::KeyControl);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Controls::KeyControl*, "UnityEngine.InputSystem.Controls", "KeyControl");
// Type namespace: UnityEngine.InputSystem.Controls
namespace UnityEngine::InputSystem::Controls {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.Controls.KeyControl
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: FFFFFFFF
  class KeyControl : public ::UnityEngine::InputSystem::Controls::ButtonControl {
    public:
    public:
    // private UnityEngine.InputSystem.Key <keyCode>k__BackingField
    // Size: 0x4
    // Offset: 0x11C
    ::UnityEngine::InputSystem::Key keyCode;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Key) == 0x4);
    // private System.Int32 m_ScanCode
    // Size: 0x4
    // Offset: 0x120
    int m_ScanCode;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private UnityEngine.InputSystem.Key <keyCode>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Key& dyn_$keyCode$k__BackingField();
    // Get instance field reference: private System.Int32 m_ScanCode
    [[deprecated("Use field access instead!")]] int& dyn_m_ScanCode();
    // public UnityEngine.InputSystem.Key get_keyCode()
    // Offset: 0xE1459C
    ::UnityEngine::InputSystem::Key get_keyCode();
    // public System.Void set_keyCode(UnityEngine.InputSystem.Key value)
    // Offset: 0xE145A4
    void set_keyCode(::UnityEngine::InputSystem::Key value);
    // public System.Int32 get_scanCode()
    // Offset: 0xE145AC
    int get_scanCode();
    // public System.Void .ctor()
    // Offset: 0xE1469C
    // Implemented from: UnityEngine.InputSystem.Controls.ButtonControl
    // Base method: System.Void ButtonControl::.ctor()
    // Base method: System.Void AxisControl::.ctor()
    // Base method: System.Void InputControl_1::.ctor()
    // Base method: System.Void InputControl::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static KeyControl* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Controls::KeyControl::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<KeyControl*, creationType>()));
    }
    // protected override System.Void RefreshConfiguration()
    // Offset: 0xE145D4
    // Implemented from: UnityEngine.InputSystem.InputControl
    // Base method: System.Void InputControl::RefreshConfiguration()
    void RefreshConfiguration();
  }; // UnityEngine.InputSystem.Controls.KeyControl
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::KeyControl::get_keyCode
// Il2CppName: get_keyCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Key (UnityEngine::InputSystem::Controls::KeyControl::*)()>(&UnityEngine::InputSystem::Controls::KeyControl::get_keyCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::KeyControl*), "get_keyCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::KeyControl::set_keyCode
// Il2CppName: set_keyCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Controls::KeyControl::*)(::UnityEngine::InputSystem::Key)>(&UnityEngine::InputSystem::Controls::KeyControl::set_keyCode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "Key")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::KeyControl*), "set_keyCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::KeyControl::get_scanCode
// Il2CppName: get_scanCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::Controls::KeyControl::*)()>(&UnityEngine::InputSystem::Controls::KeyControl::get_scanCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::KeyControl*), "get_scanCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::KeyControl::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::KeyControl::RefreshConfiguration
// Il2CppName: RefreshConfiguration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Controls::KeyControl::*)()>(&UnityEngine::InputSystem::Controls::KeyControl::RefreshConfiguration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::KeyControl*), "RefreshConfiguration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
