// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.Controls.AxisControl
#include "UnityEngine/InputSystem/Controls/AxisControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.InputSystem.Controls
namespace UnityEngine::InputSystem::Controls {
  // Forward declaring type: ButtonControl
  class ButtonControl;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::Controls::ButtonControl);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Controls::ButtonControl*, "UnityEngine.InputSystem.Controls", "ButtonControl");
// Type namespace: UnityEngine.InputSystem.Controls
namespace UnityEngine::InputSystem::Controls {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.Controls.ButtonControl
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: FFFFFFFF
  class ButtonControl : public ::UnityEngine::InputSystem::Controls::AxisControl {
    public:
    public:
    // public System.Single pressPoint
    // Size: 0x4
    // Offset: 0x118
    float pressPoint;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get static field: static System.Single s_GlobalDefaultButtonPressPoint
    static float _get_s_GlobalDefaultButtonPressPoint();
    // Set static field: static System.Single s_GlobalDefaultButtonPressPoint
    static void _set_s_GlobalDefaultButtonPressPoint(float value);
    // Get instance field reference: public System.Single pressPoint
    [[deprecated("Use field access instead!")]] float& dyn_pressPoint();
    // public System.Single get_pressPointOrDefault()
    // Offset: 0xE13844
    float get_pressPointOrDefault();
    // public System.Boolean get_isPressed()
    // Offset: 0xE13918
    bool get_isPressed();
    // public System.Boolean get_wasPressedThisFrame()
    // Offset: 0xE139C4
    bool get_wasPressedThisFrame();
    // public System.Boolean get_wasReleasedThisFrame()
    // Offset: 0xE13AF0
    bool get_wasReleasedThisFrame();
    // public System.Boolean IsValueConsideredPressed(System.Single value)
    // Offset: 0xE138A4
    bool IsValueConsideredPressed(float value);
    // public System.Void .ctor()
    // Offset: 0xE1322C
    // Implemented from: UnityEngine.InputSystem.Controls.AxisControl
    // Base method: System.Void AxisControl::.ctor()
    // Base method: System.Void InputControl_1::.ctor()
    // Base method: System.Void InputControl::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ButtonControl* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Controls::ButtonControl::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ButtonControl*, creationType>()));
    }
  }; // UnityEngine.InputSystem.Controls.ButtonControl
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::ButtonControl::get_pressPointOrDefault
// Il2CppName: get_pressPointOrDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::Controls::ButtonControl::*)()>(&UnityEngine::InputSystem::Controls::ButtonControl::get_pressPointOrDefault)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::ButtonControl*), "get_pressPointOrDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::ButtonControl::get_isPressed
// Il2CppName: get_isPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Controls::ButtonControl::*)()>(&UnityEngine::InputSystem::Controls::ButtonControl::get_isPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::ButtonControl*), "get_isPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::ButtonControl::get_wasPressedThisFrame
// Il2CppName: get_wasPressedThisFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Controls::ButtonControl::*)()>(&UnityEngine::InputSystem::Controls::ButtonControl::get_wasPressedThisFrame)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::ButtonControl*), "get_wasPressedThisFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::ButtonControl::get_wasReleasedThisFrame
// Il2CppName: get_wasReleasedThisFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Controls::ButtonControl::*)()>(&UnityEngine::InputSystem::Controls::ButtonControl::get_wasReleasedThisFrame)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::ButtonControl*), "get_wasReleasedThisFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::ButtonControl::IsValueConsideredPressed
// Il2CppName: IsValueConsideredPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::Controls::ButtonControl::*)(float)>(&UnityEngine::InputSystem::Controls::ButtonControl::IsValueConsideredPressed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::ButtonControl*), "IsValueConsideredPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::ButtonControl::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
