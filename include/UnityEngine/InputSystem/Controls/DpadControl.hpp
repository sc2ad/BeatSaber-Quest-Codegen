// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector2Control
#include "UnityEngine/InputSystem/Controls/Vector2Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Controls
namespace UnityEngine::InputSystem::Controls {
  // Forward declaring type: ButtonControl
  class ButtonControl;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector2 because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.Controls
namespace UnityEngine::InputSystem::Controls {
  // Forward declaring type: DpadControl
  class DpadControl;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::Controls::DpadControl);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::Controls::DpadControl*, "UnityEngine.InputSystem.Controls", "DpadControl");
// Type namespace: UnityEngine.InputSystem.Controls
namespace UnityEngine::InputSystem::Controls {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.Controls.DpadControl
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: FFFFFFFF
  class DpadControl : public ::UnityEngine::InputSystem::Controls::Vector2Control {
    public:
    // Nested type: ::UnityEngine::InputSystem::Controls::DpadControl::DpadAxisControl
    class DpadAxisControl;
    // Nested type: ::UnityEngine::InputSystem::Controls::DpadControl::ButtonBits
    struct ButtonBits;
    public:
    // private UnityEngine.InputSystem.Controls.ButtonControl <up>k__BackingField
    // Size: 0x8
    // Offset: 0x100
    ::UnityEngine::InputSystem::Controls::ButtonControl* up;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <down>k__BackingField
    // Size: 0x8
    // Offset: 0x108
    ::UnityEngine::InputSystem::Controls::ButtonControl* down;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <left>k__BackingField
    // Size: 0x8
    // Offset: 0x110
    ::UnityEngine::InputSystem::Controls::ButtonControl* left;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <right>k__BackingField
    // Size: 0x8
    // Offset: 0x118
    ::UnityEngine::InputSystem::Controls::ButtonControl* right;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <up>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$up$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <down>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$down$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <left>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$left$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <right>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$right$k__BackingField();
    // public UnityEngine.InputSystem.Controls.ButtonControl get_up()
    // Offset: 0xE13EA0
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_up();
    // private System.Void set_up(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xE13EA8
    void set_up(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_down()
    // Offset: 0xE13EB0
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_down();
    // private System.Void set_down(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xE13EB8
    void set_down(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_left()
    // Offset: 0xE13EC0
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_left();
    // private System.Void set_left(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xE13EC8
    void set_left(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_right()
    // Offset: 0xE13ED0
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_right();
    // private System.Void set_right(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xE13ED8
    void set_right(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // static public UnityEngine.Vector2 MakeDpadVector(System.Boolean up, System.Boolean down, System.Boolean left, System.Boolean right, System.Boolean normalize)
    // Offset: 0xE13080
    static ::UnityEngine::Vector2 MakeDpadVector(bool up, bool down, bool left, bool right, bool normalize);
    // static public UnityEngine.Vector2 MakeDpadVector(System.Single up, System.Single down, System.Single left, System.Single right)
    // Offset: 0xE13048
    static ::UnityEngine::Vector2 MakeDpadVector(float up, float down, float left, float right);
    // public System.Void .ctor()
    // Offset: 0xE13EE0
    // Implemented from: UnityEngine.InputSystem.Controls.Vector2Control
    // Base method: System.Void Vector2Control::.ctor()
    // Base method: System.Void InputControl_1::.ctor()
    // Base method: System.Void InputControl::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DpadControl* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::Controls::DpadControl::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DpadControl*, creationType>()));
    }
    // protected override System.Void FinishSetup()
    // Offset: 0xE13FE4
    // Implemented from: UnityEngine.InputSystem.Controls.Vector2Control
    // Base method: System.Void Vector2Control::FinishSetup()
    void FinishSetup();
    // public override UnityEngine.Vector2 ReadUnprocessedValueFromState(System.Void* statePtr)
    // Offset: 0xE14128
    // Implemented from: UnityEngine.InputSystem.Controls.Vector2Control
    // Base method: UnityEngine.Vector2 Vector2Control::ReadUnprocessedValueFromState(System.Void* statePtr)
    ::UnityEngine::Vector2 ReadUnprocessedValueFromState(void* statePtr);
    // public override System.Void WriteValueIntoState(UnityEngine.Vector2 value, System.Void* statePtr)
    // Offset: 0xE14350
    // Implemented from: UnityEngine.InputSystem.Controls.Vector2Control
    // Base method: System.Void Vector2Control::WriteValueIntoState(UnityEngine.Vector2 value, System.Void* statePtr)
    void WriteValueIntoState(::UnityEngine::Vector2 value, void* statePtr);
  }; // UnityEngine.InputSystem.Controls.DpadControl
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::get_up
// Il2CppName: get_up
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (UnityEngine::InputSystem::Controls::DpadControl::*)()>(&UnityEngine::InputSystem::Controls::DpadControl::get_up)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl*), "get_up", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::set_up
// Il2CppName: set_up
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Controls::DpadControl::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&UnityEngine::InputSystem::Controls::DpadControl::set_up)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl*), "set_up", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::get_down
// Il2CppName: get_down
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (UnityEngine::InputSystem::Controls::DpadControl::*)()>(&UnityEngine::InputSystem::Controls::DpadControl::get_down)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl*), "get_down", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::set_down
// Il2CppName: set_down
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Controls::DpadControl::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&UnityEngine::InputSystem::Controls::DpadControl::set_down)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl*), "set_down", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::get_left
// Il2CppName: get_left
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (UnityEngine::InputSystem::Controls::DpadControl::*)()>(&UnityEngine::InputSystem::Controls::DpadControl::get_left)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl*), "get_left", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::set_left
// Il2CppName: set_left
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Controls::DpadControl::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&UnityEngine::InputSystem::Controls::DpadControl::set_left)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl*), "set_left", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::get_right
// Il2CppName: get_right
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (UnityEngine::InputSystem::Controls::DpadControl::*)()>(&UnityEngine::InputSystem::Controls::DpadControl::get_right)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl*), "get_right", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::set_right
// Il2CppName: set_right
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Controls::DpadControl::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&UnityEngine::InputSystem::Controls::DpadControl::set_right)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl*), "set_right", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::MakeDpadVector
// Il2CppName: MakeDpadVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(bool, bool, bool, bool, bool)>(&UnityEngine::InputSystem::Controls::DpadControl::MakeDpadVector)> {
  static const MethodInfo* get() {
    static auto* up = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* down = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* left = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* right = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* normalize = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl*), "MakeDpadVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{up, down, left, right, normalize});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::MakeDpadVector
// Il2CppName: MakeDpadVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(float, float, float, float)>(&UnityEngine::InputSystem::Controls::DpadControl::MakeDpadVector)> {
  static const MethodInfo* get() {
    static auto* up = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* down = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* left = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* right = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl*), "MakeDpadVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{up, down, left, right});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::FinishSetup
// Il2CppName: FinishSetup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Controls::DpadControl::*)()>(&UnityEngine::InputSystem::Controls::DpadControl::FinishSetup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl*), "FinishSetup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::ReadUnprocessedValueFromState
// Il2CppName: ReadUnprocessedValueFromState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::InputSystem::Controls::DpadControl::*)(void*)>(&UnityEngine::InputSystem::Controls::DpadControl::ReadUnprocessedValueFromState)> {
  static const MethodInfo* get() {
    static auto* statePtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl*), "ReadUnprocessedValueFromState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{statePtr});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::Controls::DpadControl::WriteValueIntoState
// Il2CppName: WriteValueIntoState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::Controls::DpadControl::*)(::UnityEngine::Vector2, void*)>(&UnityEngine::InputSystem::Controls::DpadControl::WriteValueIntoState)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* statePtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::Controls::DpadControl*), "WriteValueIntoState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, statePtr});
  }
};
