// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ICloneable
#include "System/ICloneable.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: UnityEngine.InputSystem.IInputActionCollection
#include "UnityEngine/InputSystem/IInputActionCollection.hpp"
// Including type: UnityEngine.ISerializationCallbackReceiver
#include "UnityEngine/ISerializationCallbackReceiver.hpp"
// Including type: UnityEngine.InputSystem.Utilities.InlinedArray`1
#include "UnityEngine/InputSystem/Utilities/InlinedArray_1.hpp"
// Including type: UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext
#include "UnityEngine/InputSystem/InputAction_CallbackContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputActionAsset
  class InputActionAsset;
  // Forward declaring type: InputAction
  class InputAction;
  // Forward declaring type: InputControl
  class InputControl;
  // Forward declaring type: InputActionState
  class InputActionState;
  // Forward declaring type: InputDevice
  class InputDevice;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Guid
  struct Guid;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Skipping declaration: IEnumerator`1 because it is already included!
  // Skipping declaration: IEnumerable`1 because it is already included!
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: IEnumerator because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputActionMap
  class InputActionMap;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::InputActionMap);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputActionMap*, "UnityEngine.InputSystem", "InputActionMap");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.InputActionMap
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 95755C
  class InputActionMap : public ::Il2CppObject/*, public ::System::ICloneable, public ::System::IDisposable, public ::UnityEngine::InputSystem::IInputActionCollection, public ::UnityEngine::ISerializationCallbackReceiver*/ {
    public:
    // Nested type: ::UnityEngine::InputSystem::InputActionMap::BindingJson
    struct BindingJson;
    // Nested type: ::UnityEngine::InputSystem::InputActionMap::ReadActionJson
    struct ReadActionJson;
    // Nested type: ::UnityEngine::InputSystem::InputActionMap::WriteActionJson
    struct WriteActionJson;
    // Nested type: ::UnityEngine::InputSystem::InputActionMap::ReadMapJson
    struct ReadMapJson;
    // Nested type: ::UnityEngine::InputSystem::InputActionMap::WriteMapJson
    struct WriteMapJson;
    // Nested type: ::UnityEngine::InputSystem::InputActionMap::WriteFileJson
    struct WriteFileJson;
    // Nested type: ::UnityEngine::InputSystem::InputActionMap::ReadFileJson
    struct ReadFileJson;
    public:
    // System.String m_Name
    // Size: 0x8
    // Offset: 0x10
    ::StringW m_Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.String m_Id
    // Size: 0x8
    // Offset: 0x18
    ::StringW m_Id;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // UnityEngine.InputSystem.InputActionAsset m_Asset
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::InputSystem::InputActionAsset* m_Asset;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionAsset*) == 0x8);
    // UnityEngine.InputSystem.InputAction[] m_Actions
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::UnityEngine::InputSystem::InputAction*> m_Actions;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::InputAction*>) == 0x8);
    // UnityEngine.InputSystem.InputBinding[] m_Bindings
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<::UnityEngine::InputSystem::InputBinding> m_Bindings;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::InputBinding>) == 0x8);
    // private UnityEngine.InputSystem.InputBinding[] m_BindingsForEachAction
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<::UnityEngine::InputSystem::InputBinding> m_BindingsForEachAction;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::InputBinding>) == 0x8);
    // private UnityEngine.InputSystem.InputControl[] m_ControlsForEachAction
    // Size: 0x8
    // Offset: 0x40
    ::ArrayW<::UnityEngine::InputSystem::InputControl*> m_ControlsForEachAction;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::InputControl*>) == 0x8);
    // System.Int32 m_EnabledActionsCount
    // Size: 0x4
    // Offset: 0x48
    int m_EnabledActionsCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // UnityEngine.InputSystem.InputAction m_SingletonAction
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::InputSystem::InputAction* m_SingletonAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputAction*) == 0x8);
    // System.Int32 m_MapIndexInState
    // Size: 0x4
    // Offset: 0x58
    int m_MapIndexInState;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // UnityEngine.InputSystem.InputActionState m_State
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::InputSystem::InputActionState* m_State;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionState*) == 0x8);
    // private System.Boolean m_NeedToResolveBindings
    // Size: 0x1
    // Offset: 0x68
    bool m_NeedToResolveBindings;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Nullable`1<UnityEngine.InputSystem.InputBinding> m_BindingMask
    // Size: 0xFFFFFFFF
    // Offset: 0x70
    ::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> m_BindingMask;
    // private System.Int32 m_DevicesCount
    // Size: 0x4
    // Offset: 0xD0
    int m_DevicesCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.InputSystem.InputDevice[] m_DevicesArray
    // Size: 0x8
    // Offset: 0xD8
    ::ArrayW<::UnityEngine::InputSystem::InputDevice*> m_DevicesArray;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::InputDevice*>) == 0x8);
    // UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext>> m_ActionCallbacks
    // Size: 0xFFFFFFFF
    // Offset: 0xE0
    ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*> m_ActionCallbacks;
    public:
    // Creating interface conversion operator: operator ::System::ICloneable
    operator ::System::ICloneable() noexcept {
      return *reinterpret_cast<::System::ICloneable*>(this);
    }
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::InputSystem::IInputActionCollection
    operator ::UnityEngine::InputSystem::IInputActionCollection() noexcept {
      return *reinterpret_cast<::UnityEngine::InputSystem::IInputActionCollection*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::ISerializationCallbackReceiver
    operator ::UnityEngine::ISerializationCallbackReceiver() noexcept {
      return *reinterpret_cast<::UnityEngine::ISerializationCallbackReceiver*>(this);
    }
    // Get static field: static System.Int32 s_DeferBindingResolution
    static int _get_s_DeferBindingResolution();
    // Set static field: static System.Int32 s_DeferBindingResolution
    static void _set_s_DeferBindingResolution(int value);
    // Get instance field reference: System.String m_Name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Name();
    // Get instance field reference: System.String m_Id
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Id();
    // Get instance field reference: UnityEngine.InputSystem.InputActionAsset m_Asset
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionAsset*& dyn_m_Asset();
    // Get instance field reference: UnityEngine.InputSystem.InputAction[] m_Actions
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputAction*>& dyn_m_Actions();
    // Get instance field reference: UnityEngine.InputSystem.InputBinding[] m_Bindings
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputBinding>& dyn_m_Bindings();
    // Get instance field reference: private UnityEngine.InputSystem.InputBinding[] m_BindingsForEachAction
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputBinding>& dyn_m_BindingsForEachAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputControl[] m_ControlsForEachAction
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputControl*>& dyn_m_ControlsForEachAction();
    // Get instance field reference: System.Int32 m_EnabledActionsCount
    [[deprecated("Use field access instead!")]] int& dyn_m_EnabledActionsCount();
    // Get instance field reference: UnityEngine.InputSystem.InputAction m_SingletonAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputAction*& dyn_m_SingletonAction();
    // Get instance field reference: System.Int32 m_MapIndexInState
    [[deprecated("Use field access instead!")]] int& dyn_m_MapIndexInState();
    // Get instance field reference: UnityEngine.InputSystem.InputActionState m_State
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionState*& dyn_m_State();
    // Get instance field reference: private System.Boolean m_NeedToResolveBindings
    [[deprecated("Use field access instead!")]] bool& dyn_m_NeedToResolveBindings();
    // Get instance field reference: System.Nullable`1<UnityEngine.InputSystem.InputBinding> m_BindingMask
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::InputSystem::InputBinding>& dyn_m_BindingMask();
    // Get instance field reference: private System.Int32 m_DevicesCount
    [[deprecated("Use field access instead!")]] int& dyn_m_DevicesCount();
    // Get instance field reference: private UnityEngine.InputSystem.InputDevice[] m_DevicesArray
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputDevice*>& dyn_m_DevicesArray();
    // Get instance field reference: UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext>> m_ActionCallbacks
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*>& dyn_m_ActionCallbacks();
    // public System.String get_name()
    // Offset: 0xF41DAC
    ::StringW get_name();
    // public UnityEngine.InputSystem.InputActionAsset get_asset()
    // Offset: 0xF41DB4
    ::UnityEngine::InputSystem::InputActionAsset* get_asset();
    // public System.Guid get_id()
    // Offset: 0xF41DBC
    ::System::Guid get_id();
    // System.Guid get_idDontGenerate()
    // Offset: 0xF404F4
    ::System::Guid get_idDontGenerate();
    // public System.Boolean get_enabled()
    // Offset: 0xF3F3C0
    bool get_enabled();
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputAction> get_actions()
    // Offset: 0xF410EC
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputAction*> get_actions();
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputBinding> get_bindings()
    // Offset: 0xF41E98
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputBinding> get_bindings();
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputControlScheme> get_controlSchemes()
    // Offset: 0xF41F00
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputControlScheme> get_controlSchemes();
    // public System.Nullable`1<UnityEngine.InputSystem.InputBinding> get_bindingMask()
    // Offset: 0xF41F94
    ::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> get_bindingMask();
    // public System.Void set_bindingMask(System.Nullable`1<UnityEngine.InputSystem.InputBinding> value)
    // Offset: 0xF41FA4
    void set_bindingMask(::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> value);
    // public System.Nullable`1<UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice>> get_devices()
    // Offset: 0xF420A4
    ::System::Nullable_1<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*>> get_devices();
    // public System.Void set_devices(System.Nullable`1<UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice>> value)
    // Offset: 0xF421A8
    void set_devices(::System::Nullable_1<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*>> value);
    // public UnityEngine.InputSystem.InputAction get_Item(System.String actionNameOrId)
    // Offset: 0xF42354
    ::UnityEngine::InputSystem::InputAction* get_Item(::StringW actionNameOrId);
    // public System.Void add_actionTriggered(System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> value)
    // Offset: 0xF42454
    void add_actionTriggered(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* value);
    // public System.Void remove_actionTriggered(System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> value)
    // Offset: 0xF424B8
    void remove_actionTriggered(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* value);
    // public System.Void .ctor()
    // Offset: 0xF3E4B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputActionMap* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionMap::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputActionMap*, creationType>()));
    }
    // public System.Void .ctor(System.String name)
    // Offset: 0xF42518
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputActionMap* New_ctor(::StringW name) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionMap::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputActionMap*, creationType>(name)));
    }
    // public System.Void Dispose()
    // Offset: 0xF4255C
    void Dispose();
    // System.Int32 FindActionIndex(System.String nameOrId)
    // Offset: 0xF42570
    int FindActionIndex(::StringW nameOrId);
    // private System.Int32 FindActionIndex(System.Guid id)
    // Offset: 0xF42728
    int FindActionIndex(::System::Guid id);
    // public UnityEngine.InputSystem.InputAction FindAction(System.String nameOrId, System.Boolean throwIfNotFound)
    // Offset: 0xF40168
    ::UnityEngine::InputSystem::InputAction* FindAction(::StringW nameOrId, bool throwIfNotFound);
    // public UnityEngine.InputSystem.InputAction FindAction(System.Guid id)
    // Offset: 0xF406CC
    ::UnityEngine::InputSystem::InputAction* FindAction(::System::Guid id);
    // public System.Boolean IsUsableWithDevice(UnityEngine.InputSystem.InputDevice device)
    // Offset: 0xF4282C
    bool IsUsableWithDevice(::UnityEngine::InputSystem::InputDevice* device);
    // public System.Void Enable()
    // Offset: 0xF40B74
    void Enable();
    // public System.Void Disable()
    // Offset: 0xF40E00
    void Disable();
    // public UnityEngine.InputSystem.InputActionMap Clone()
    // Offset: 0xF4296C
    ::UnityEngine::InputSystem::InputActionMap* Clone();
    // private System.Object System.ICloneable.Clone()
    // Offset: 0xF42B80
    ::Il2CppObject* System_ICloneable_Clone();
    // public System.Boolean Contains(UnityEngine.InputSystem.InputAction action)
    // Offset: 0xF42B84
    bool Contains(::UnityEngine::InputSystem::InputAction* action);
    // public System.Collections.Generic.IEnumerator`1<UnityEngine.InputSystem.InputAction> GetEnumerator()
    // Offset: 0xF42C70
    ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputAction*>* GetEnumerator();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0xF42CDC
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputBinding> GetBindingsForSingleAction(UnityEngine.InputSystem.InputAction action)
    // Offset: 0xF3D668
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputBinding> GetBindingsForSingleAction(::UnityEngine::InputSystem::InputAction* action);
    // UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputControl> GetControlsForSingleAction(UnityEngine.InputSystem.InputAction action)
    // Offset: 0xF3D768
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputControl*> GetControlsForSingleAction(::UnityEngine::InputSystem::InputAction* action);
    // private System.Void SetUpPerActionCachedBindingData()
    // Offset: 0xF42CE0
    void SetUpPerActionCachedBindingData();
    // System.Void ClearPerActionCachedBindingData()
    // Offset: 0xF4316C
    void ClearPerActionCachedBindingData();
    // System.Void GenerateId()
    // Offset: 0xF41E10
    void GenerateId();
    // System.Boolean LazyResolveBindings()
    // Offset: 0xF3D5A0
    bool LazyResolveBindings();
    // System.Void ResolveBindingsIfNecessary()
    // Offset: 0xF3D750
    void ResolveBindingsIfNecessary();
    // System.Void ResolveBindings()
    // Offset: 0xF43174
    void ResolveBindings();
    // System.Int32 FindBinding(UnityEngine.InputSystem.InputBinding match)
    // Offset: 0xF437AC
    int FindBinding(::UnityEngine::InputSystem::InputBinding match);
    // static public UnityEngine.InputSystem.InputActionMap[] FromJson(System.String json)
    // Offset: 0xF4387C
    static ::ArrayW<::UnityEngine::InputSystem::InputActionMap*> FromJson(::StringW json);
    // static public System.String ToJson(System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.InputActionMap> maps)
    // Offset: 0xF43928
    static ::StringW ToJson(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputActionMap*>* maps);
    // public System.String ToJson()
    // Offset: 0xF439E0
    ::StringW ToJson();
    // public System.Void OnBeforeSerialize()
    // Offset: 0xF43AF4
    void OnBeforeSerialize();
    // public System.Void OnAfterDeserialize()
    // Offset: 0xF43AF8
    void OnAfterDeserialize();
    // public override System.String ToString()
    // Offset: 0xF42BB0
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // UnityEngine.InputSystem.InputActionMap
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::get_name
// Il2CppName: get_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::get_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "get_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::get_asset
// Il2CppName: get_asset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionAsset* (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::get_asset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "get_asset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::get_id
// Il2CppName: get_id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Guid (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::get_id)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "get_id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::get_idDontGenerate
// Il2CppName: get_idDontGenerate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Guid (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::get_idDontGenerate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "get_idDontGenerate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::get_enabled
// Il2CppName: get_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::get_enabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "get_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::get_actions
// Il2CppName: get_actions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputAction*> (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::get_actions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "get_actions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::get_bindings
// Il2CppName: get_bindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputBinding> (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::get_bindings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "get_bindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::get_controlSchemes
// Il2CppName: get_controlSchemes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputControlScheme> (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::get_controlSchemes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "get_controlSchemes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::get_bindingMask
// Il2CppName: get_bindingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::get_bindingMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "get_bindingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::set_bindingMask
// Il2CppName: set_bindingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionMap::*)(::System::Nullable_1<::UnityEngine::InputSystem::InputBinding>)>(&UnityEngine::InputSystem::InputActionMap::set_bindingMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputBinding")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "set_bindingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::get_devices
// Il2CppName: get_devices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*>> (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::get_devices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "get_devices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::set_devices
// Il2CppName: set_devices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionMap::*)(::System::Nullable_1<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*>>)>(&UnityEngine::InputSystem::InputActionMap::set_devices)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "ReadOnlyArray`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "set_devices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputAction* (UnityEngine::InputSystem::InputActionMap::*)(::StringW)>(&UnityEngine::InputSystem::InputActionMap::get_Item)> {
  static const MethodInfo* get() {
    static auto* actionNameOrId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actionNameOrId});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::add_actionTriggered
// Il2CppName: add_actionTriggered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionMap::*)(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*)>(&UnityEngine::InputSystem::InputActionMap::add_actionTriggered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "add_actionTriggered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::remove_actionTriggered
// Il2CppName: remove_actionTriggered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionMap::*)(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*)>(&UnityEngine::InputSystem::InputActionMap::remove_actionTriggered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "remove_actionTriggered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::FindActionIndex
// Il2CppName: FindActionIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionMap::*)(::StringW)>(&UnityEngine::InputSystem::InputActionMap::FindActionIndex)> {
  static const MethodInfo* get() {
    static auto* nameOrId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "FindActionIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameOrId});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::FindActionIndex
// Il2CppName: FindActionIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionMap::*)(::System::Guid)>(&UnityEngine::InputSystem::InputActionMap::FindActionIndex)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Guid")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "FindActionIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::FindAction
// Il2CppName: FindAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputAction* (UnityEngine::InputSystem::InputActionMap::*)(::StringW, bool)>(&UnityEngine::InputSystem::InputActionMap::FindAction)> {
  static const MethodInfo* get() {
    static auto* nameOrId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* throwIfNotFound = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "FindAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nameOrId, throwIfNotFound});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::FindAction
// Il2CppName: FindAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputAction* (UnityEngine::InputSystem::InputActionMap::*)(::System::Guid)>(&UnityEngine::InputSystem::InputActionMap::FindAction)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Guid")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "FindAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::IsUsableWithDevice
// Il2CppName: IsUsableWithDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionMap::*)(::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::InputActionMap::IsUsableWithDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "IsUsableWithDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::Enable
// Il2CppName: Enable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::Enable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "Enable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::Disable
// Il2CppName: Disable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::Disable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "Disable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionMap* (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::Clone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::System_ICloneable_Clone
// Il2CppName: System.ICloneable.Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::System_ICloneable_Clone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "System.ICloneable.Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionMap::*)(::UnityEngine::InputSystem::InputAction*)>(&UnityEngine::InputSystem::InputActionMap::Contains)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputAction*>* (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::GetBindingsForSingleAction
// Il2CppName: GetBindingsForSingleAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputBinding> (UnityEngine::InputSystem::InputActionMap::*)(::UnityEngine::InputSystem::InputAction*)>(&UnityEngine::InputSystem::InputActionMap::GetBindingsForSingleAction)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "GetBindingsForSingleAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::GetControlsForSingleAction
// Il2CppName: GetControlsForSingleAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputControl*> (UnityEngine::InputSystem::InputActionMap::*)(::UnityEngine::InputSystem::InputAction*)>(&UnityEngine::InputSystem::InputActionMap::GetControlsForSingleAction)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "GetControlsForSingleAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::SetUpPerActionCachedBindingData
// Il2CppName: SetUpPerActionCachedBindingData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::SetUpPerActionCachedBindingData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "SetUpPerActionCachedBindingData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::ClearPerActionCachedBindingData
// Il2CppName: ClearPerActionCachedBindingData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::ClearPerActionCachedBindingData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "ClearPerActionCachedBindingData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::GenerateId
// Il2CppName: GenerateId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::GenerateId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "GenerateId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::LazyResolveBindings
// Il2CppName: LazyResolveBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::LazyResolveBindings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "LazyResolveBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::ResolveBindingsIfNecessary
// Il2CppName: ResolveBindingsIfNecessary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::ResolveBindingsIfNecessary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "ResolveBindingsIfNecessary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::ResolveBindings
// Il2CppName: ResolveBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::ResolveBindings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "ResolveBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::FindBinding
// Il2CppName: FindBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionMap::*)(::UnityEngine::InputSystem::InputBinding)>(&UnityEngine::InputSystem::InputActionMap::FindBinding)> {
  static const MethodInfo* get() {
    static auto* match = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputBinding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "FindBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{match});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::FromJson
// Il2CppName: FromJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::InputSystem::InputActionMap*> (*)(::StringW)>(&UnityEngine::InputSystem::InputActionMap::FromJson)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "FromJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputActionMap*>*)>(&UnityEngine::InputSystem::InputActionMap::ToJson)> {
  static const MethodInfo* get() {
    static auto* maps = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionMap")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{maps});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::ToJson)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::OnBeforeSerialize
// Il2CppName: OnBeforeSerialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::OnBeforeSerialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "OnBeforeSerialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::OnAfterDeserialize
// Il2CppName: OnAfterDeserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::OnAfterDeserialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "OnAfterDeserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputActionMap::*)()>(&UnityEngine::InputSystem::InputActionMap::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
