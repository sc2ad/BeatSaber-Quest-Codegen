// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.HID.HID
#include "UnityEngine/InputSystem/HID/HID.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::HID
namespace UnityEngine::InputSystem::HID {
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.HID
namespace UnityEngine::InputSystem::HID {
  // Forward declaring type: HIDParser
  class HIDParser;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::HID::HIDParser);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::HID::HIDParser*, "UnityEngine.InputSystem.HID", "HIDParser");
// Type namespace: UnityEngine.InputSystem.HID
namespace UnityEngine::InputSystem::HID {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.HID.HIDParser
  // [TokenAttribute] Offset: FFFFFFFF
  class HIDParser : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::InputSystem::HID::HIDParser::HIDReportData
    struct HIDReportData;
    // Nested type: ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag
    struct HIDItemTypeAndTag;
    // Nested type: ::UnityEngine::InputSystem::HID::HIDParser::HIDItemStateLocal
    struct HIDItemStateLocal;
    // Nested type: ::UnityEngine::InputSystem::HID::HIDParser::HIDItemStateGlobal
    struct HIDItemStateGlobal;
    // static public System.Boolean ParseReportDescriptor(System.Byte[] buffer, ref UnityEngine.InputSystem.HID.HID/UnityEngine.InputSystem.HID.HIDDeviceDescriptor deviceDescriptor)
    // Offset: 0xF3B878
    static bool ParseReportDescriptor(::ArrayW<uint8_t> buffer, ByRef<::UnityEngine::InputSystem::HID::HID::HIDDeviceDescriptor> deviceDescriptor);
    // static public System.Boolean ParseReportDescriptor(System.Byte* bufferPtr, System.Int32 bufferLength, ref UnityEngine.InputSystem.HID.HID/UnityEngine.InputSystem.HID.HIDDeviceDescriptor deviceDescriptor)
    // Offset: 0xF3B918
    static bool ParseReportDescriptor(uint8_t* bufferPtr, int bufferLength, ByRef<::UnityEngine::InputSystem::HID::HID::HIDDeviceDescriptor> deviceDescriptor);
    // static private System.Int32 ReadData(System.Int32 itemSize, System.Byte* currentPtr, System.Byte* endPtr)
    // Offset: 0xF3C2A4
    static int ReadData(int itemSize, uint8_t* currentPtr, uint8_t* endPtr);
  }; // UnityEngine.InputSystem.HID.HIDParser
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::HID::HIDParser::ParseReportDescriptor
// Il2CppName: ParseReportDescriptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ArrayW<uint8_t>, ByRef<::UnityEngine::InputSystem::HID::HID::HIDDeviceDescriptor>)>(&UnityEngine::InputSystem::HID::HIDParser::ParseReportDescriptor)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* deviceDescriptor = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.HID", "HID/HIDDeviceDescriptor")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::HID::HIDParser*), "ParseReportDescriptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, deviceDescriptor});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::HID::HIDParser::ParseReportDescriptor
// Il2CppName: ParseReportDescriptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint8_t*, int, ByRef<::UnityEngine::InputSystem::HID::HID::HIDDeviceDescriptor>)>(&UnityEngine::InputSystem::HID::HIDParser::ParseReportDescriptor)> {
  static const MethodInfo* get() {
    static auto* bufferPtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* bufferLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* deviceDescriptor = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.HID", "HID/HIDDeviceDescriptor")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::HID::HIDParser*), "ParseReportDescriptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bufferPtr, bufferLength, deviceDescriptor});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::HID::HIDParser::ReadData
// Il2CppName: ReadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, uint8_t*, uint8_t*)>(&UnityEngine::InputSystem::HID::HIDParser::ReadData)> {
  static const MethodInfo* get() {
    static auto* itemSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* currentPtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* endPtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::HID::HIDParser*), "ReadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemSize, currentPtr, endPtr});
  }
};
