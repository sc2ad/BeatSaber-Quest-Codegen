// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.HID.HID
#include "UnityEngine/InputSystem/HID/HID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Layouts
namespace UnityEngine::InputSystem::Layouts {
  // Forward declaring type: InputControlLayout
  class InputControlLayout;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::HID::HID::$$c__DisplayClass12_0);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::HID::HID::$$c__DisplayClass12_0*, "UnityEngine.InputSystem.HID", "HID/<>c__DisplayClass12_0");
// Type namespace: UnityEngine.InputSystem.HID
namespace UnityEngine::InputSystem::HID {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.HID.HID/UnityEngine.InputSystem.HID.<>c__DisplayClass12_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class HID::$$c__DisplayClass12_0 : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.InputSystem.HID.HID/UnityEngine.InputSystem.HID.HIDLayoutBuilder layout
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::InputSystem::HID::HID::HIDLayoutBuilder* layout;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::HID::HID::HIDLayoutBuilder*) == 0x8);
    public:
    // Creating conversion operator: operator ::UnityEngine::InputSystem::HID::HID::HIDLayoutBuilder*
    constexpr operator ::UnityEngine::InputSystem::HID::HID::HIDLayoutBuilder*() const noexcept {
      return layout;
    }
    // Get instance field reference: public UnityEngine.InputSystem.HID.HID/UnityEngine.InputSystem.HID.HIDLayoutBuilder layout
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::HID::HID::HIDLayoutBuilder*& dyn_layout();
    // public System.Void .ctor()
    // Offset: 0xE1C134
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HID::$$c__DisplayClass12_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::HID::HID::$$c__DisplayClass12_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HID::$$c__DisplayClass12_0*, creationType>()));
    }
    // UnityEngine.InputSystem.Layouts.InputControlLayout <OnFindLayoutForDevice>b__0()
    // Offset: 0xE1CAAC
    ::UnityEngine::InputSystem::Layouts::InputControlLayout* $OnFindLayoutForDevice$b__0();
  }; // UnityEngine.InputSystem.HID.HID/UnityEngine.InputSystem.HID.<>c__DisplayClass12_0
  #pragma pack(pop)
  static check_size<sizeof(HID::$$c__DisplayClass12_0), 16 + sizeof(::UnityEngine::InputSystem::HID::HID::HIDLayoutBuilder*)> __UnityEngine_InputSystem_HID_HID_$$c__DisplayClass12_0SizeCheck;
  static_assert(sizeof(HID::$$c__DisplayClass12_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::HID::HID::$$c__DisplayClass12_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::HID::HID::$$c__DisplayClass12_0::$OnFindLayoutForDevice$b__0
// Il2CppName: <OnFindLayoutForDevice>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Layouts::InputControlLayout* (UnityEngine::InputSystem::HID::HID::$$c__DisplayClass12_0::*)()>(&UnityEngine::InputSystem::HID::HID::$$c__DisplayClass12_0::$OnFindLayoutForDevice$b__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::HID::HID::$$c__DisplayClass12_0*), "<OnFindLayoutForDevice>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
