// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.HID.HIDParser
#include "UnityEngine/InputSystem/HID/HIDParser.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag, "UnityEngine.InputSystem.HID", "HIDParser/HIDItemTypeAndTag");
// Type namespace: UnityEngine.InputSystem.HID
namespace UnityEngine::InputSystem::HID {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag
  // [TokenAttribute] Offset: FFFFFFFF
  struct HIDParser::HIDItemTypeAndTag/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: HIDItemTypeAndTag
    constexpr HIDItemTypeAndTag(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Input
    static constexpr const int Input = 128;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Input
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_Input();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Input
    static void _set_Input(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Output
    static constexpr const int Output = 144;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Output
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_Output();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Output
    static void _set_Output(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Feature
    static constexpr const int Feature = 176;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Feature
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_Feature();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Feature
    static void _set_Feature(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Collection
    static constexpr const int Collection = 160;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Collection
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_Collection();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Collection
    static void _set_Collection(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag EndCollection
    static constexpr const int EndCollection = 192;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag EndCollection
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_EndCollection();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag EndCollection
    static void _set_EndCollection(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag UsagePage
    static constexpr const int UsagePage = 4;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag UsagePage
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_UsagePage();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag UsagePage
    static void _set_UsagePage(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag LogicalMinimum
    static constexpr const int LogicalMinimum = 20;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag LogicalMinimum
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_LogicalMinimum();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag LogicalMinimum
    static void _set_LogicalMinimum(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag LogicalMaximum
    static constexpr const int LogicalMaximum = 36;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag LogicalMaximum
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_LogicalMaximum();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag LogicalMaximum
    static void _set_LogicalMaximum(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag PhysicalMinimum
    static constexpr const int PhysicalMinimum = 52;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag PhysicalMinimum
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_PhysicalMinimum();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag PhysicalMinimum
    static void _set_PhysicalMinimum(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag PhysicalMaximum
    static constexpr const int PhysicalMaximum = 68;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag PhysicalMaximum
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_PhysicalMaximum();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag PhysicalMaximum
    static void _set_PhysicalMaximum(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag UnitExponent
    static constexpr const int UnitExponent = 84;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag UnitExponent
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_UnitExponent();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag UnitExponent
    static void _set_UnitExponent(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Unit
    static constexpr const int Unit = 100;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Unit
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_Unit();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Unit
    static void _set_Unit(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag ReportSize
    static constexpr const int ReportSize = 116;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag ReportSize
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_ReportSize();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag ReportSize
    static void _set_ReportSize(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag ReportID
    static constexpr const int ReportID = 132;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag ReportID
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_ReportID();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag ReportID
    static void _set_ReportID(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag ReportCount
    static constexpr const int ReportCount = 148;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag ReportCount
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_ReportCount();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag ReportCount
    static void _set_ReportCount(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Push
    static constexpr const int Push = 164;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Push
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_Push();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Push
    static void _set_Push(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Pop
    static constexpr const int Pop = 180;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Pop
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_Pop();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Pop
    static void _set_Pop(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Usage
    static constexpr const int Usage = 8;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Usage
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_Usage();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Usage
    static void _set_Usage(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag UsageMinimum
    static constexpr const int UsageMinimum = 24;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag UsageMinimum
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_UsageMinimum();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag UsageMinimum
    static void _set_UsageMinimum(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag UsageMaximum
    static constexpr const int UsageMaximum = 40;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag UsageMaximum
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_UsageMaximum();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag UsageMaximum
    static void _set_UsageMaximum(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag DesignatorIndex
    static constexpr const int DesignatorIndex = 56;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag DesignatorIndex
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_DesignatorIndex();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag DesignatorIndex
    static void _set_DesignatorIndex(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag DesignatorMinimum
    static constexpr const int DesignatorMinimum = 72;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag DesignatorMinimum
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_DesignatorMinimum();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag DesignatorMinimum
    static void _set_DesignatorMinimum(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag DesignatorMaximum
    static constexpr const int DesignatorMaximum = 88;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag DesignatorMaximum
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_DesignatorMaximum();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag DesignatorMaximum
    static void _set_DesignatorMaximum(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag StringIndex
    static constexpr const int StringIndex = 120;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag StringIndex
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_StringIndex();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag StringIndex
    static void _set_StringIndex(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag StringMinimum
    static constexpr const int StringMinimum = 136;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag StringMinimum
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_StringMinimum();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag StringMinimum
    static void _set_StringMinimum(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag StringMaximum
    static constexpr const int StringMaximum = 152;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag StringMaximum
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_StringMaximum();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag StringMaximum
    static void _set_StringMaximum(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // static field const value: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Delimiter
    static constexpr const int Delimiter = 168;
    // Get static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Delimiter
    static ::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag _get_Delimiter();
    // Set static field: static public UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag Delimiter
    static void _set_Delimiter(::UnityEngine::InputSystem::HID::HIDParser::HIDItemTypeAndTag value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // UnityEngine.InputSystem.HID.HIDParser/UnityEngine.InputSystem.HID.HIDItemTypeAndTag
  #pragma pack(pop)
  static check_size<sizeof(HIDParser::HIDItemTypeAndTag), 0 + sizeof(int)> __UnityEngine_InputSystem_HID_HIDParser_HIDItemTypeAndTagSizeCheck;
  static_assert(sizeof(HIDParser::HIDItemTypeAndTag) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
