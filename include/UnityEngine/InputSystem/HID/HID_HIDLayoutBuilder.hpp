// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.HID.HID
#include "UnityEngine/InputSystem/HID/HID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::HID
namespace UnityEngine::InputSystem::HID {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: UnityEngine::InputSystem::Layouts
namespace UnityEngine::InputSystem::Layouts {
  // Forward declaring type: InputControlLayout
  class InputControlLayout;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::HID::HID::HIDLayoutBuilder);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::HID::HID::HIDLayoutBuilder*, "UnityEngine.InputSystem.HID", "HID/HIDLayoutBuilder");
// Type namespace: UnityEngine.InputSystem.HID
namespace UnityEngine::InputSystem::HID {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.HID.HID/UnityEngine.InputSystem.HID.HIDLayoutBuilder
  // [TokenAttribute] Offset: FFFFFFFF
  class HID::HIDLayoutBuilder : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::InputSystem::HID::HID::HIDLayoutBuilder::$$c
    class $$c;
    public:
    // public System.String displayName
    // Size: 0x8
    // Offset: 0x10
    ::StringW displayName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.InputSystem.HID.HID/UnityEngine.InputSystem.HID.HIDDeviceDescriptor hidDescriptor
    // Size: 0x30
    // Offset: 0x18
    ::UnityEngine::InputSystem::HID::HID::HIDDeviceDescriptor hidDescriptor;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::HID::HID::HIDDeviceDescriptor) == 0x30);
    // public System.String parentLayout
    // Size: 0x8
    // Offset: 0x48
    ::StringW parentLayout;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Type deviceType
    // Size: 0x8
    // Offset: 0x50
    ::System::Type* deviceType;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    public:
    // Get instance field reference: public System.String displayName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_displayName();
    // Get instance field reference: public UnityEngine.InputSystem.HID.HID/UnityEngine.InputSystem.HID.HIDDeviceDescriptor hidDescriptor
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::HID::HID::HIDDeviceDescriptor& dyn_hidDescriptor();
    // Get instance field reference: public System.String parentLayout
    [[deprecated("Use field access instead!")]] ::StringW& dyn_parentLayout();
    // Get instance field reference: public System.Type deviceType
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_deviceType();
    // public System.Void .ctor()
    // Offset: 0xF3B7B0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HID::HIDLayoutBuilder* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::HID::HID::HIDLayoutBuilder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HID::HIDLayoutBuilder*, creationType>()));
    }
    // public UnityEngine.InputSystem.Layouts.InputControlLayout Build()
    // Offset: 0xF3AAF8
    ::UnityEngine::InputSystem::Layouts::InputControlLayout* Build();
  }; // UnityEngine.InputSystem.HID.HID/UnityEngine.InputSystem.HID.HIDLayoutBuilder
  #pragma pack(pop)
  static check_size<sizeof(HID::HIDLayoutBuilder), 80 + sizeof(::System::Type*)> __UnityEngine_InputSystem_HID_HID_HIDLayoutBuilderSizeCheck;
  static_assert(sizeof(HID::HIDLayoutBuilder) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::HID::HID::HIDLayoutBuilder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::HID::HID::HIDLayoutBuilder::Build
// Il2CppName: Build
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Layouts::InputControlLayout* (UnityEngine::InputSystem::HID::HID::HIDLayoutBuilder::*)()>(&UnityEngine::InputSystem::HID::HID::HIDLayoutBuilder::Build)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::HID::HID::HIDLayoutBuilder*), "Build", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
