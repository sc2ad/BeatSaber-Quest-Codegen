// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.InputActionMap
#include "UnityEngine/InputSystem/InputActionMap.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.InputSystem.InputActionMap/UnityEngine.InputSystem.WriteMapJson
#include "UnityEngine/InputSystem/InputActionMap_WriteMapJson.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputActionMap::WriteFileJson, "UnityEngine.InputSystem", "InputActionMap/WriteFileJson");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.InputActionMap/UnityEngine.InputSystem.WriteFileJson
  // [TokenAttribute] Offset: FFFFFFFF
  struct InputActionMap::WriteFileJson/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.InputSystem.InputActionMap/UnityEngine.InputSystem.WriteMapJson[] maps
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<::UnityEngine::InputSystem::InputActionMap::WriteMapJson> maps;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::InputActionMap::WriteMapJson>) == 0x8);
    public:
    // Creating value type constructor for type: WriteFileJson
    constexpr WriteFileJson(::ArrayW<::UnityEngine::InputSystem::InputActionMap::WriteMapJson> maps_ = ::ArrayW<::UnityEngine::InputSystem::InputActionMap::WriteMapJson>(static_cast<void*>(nullptr))) noexcept : maps{maps_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::ArrayW<::UnityEngine::InputSystem::InputActionMap::WriteMapJson>
    constexpr operator ::ArrayW<::UnityEngine::InputSystem::InputActionMap::WriteMapJson>() const noexcept {
      return maps;
    }
    // Get instance field reference: public UnityEngine.InputSystem.InputActionMap/UnityEngine.InputSystem.WriteMapJson[] maps
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputActionMap::WriteMapJson>& dyn_maps();
    // static public UnityEngine.InputSystem.InputActionMap/UnityEngine.InputSystem.WriteFileJson FromMap(UnityEngine.InputSystem.InputActionMap map)
    // Offset: 0xF43A58
    static ::UnityEngine::InputSystem::InputActionMap::WriteFileJson FromMap(::UnityEngine::InputSystem::InputActionMap* map);
    // static public UnityEngine.InputSystem.InputActionMap/UnityEngine.InputSystem.WriteFileJson FromMaps(System.Collections.Generic.IEnumerable`1<UnityEngine.InputSystem.InputActionMap> maps)
    // Offset: 0xF3FC28
    static ::UnityEngine::InputSystem::InputActionMap::WriteFileJson FromMaps(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputActionMap*>* maps);
  }; // UnityEngine.InputSystem.InputActionMap/UnityEngine.InputSystem.WriteFileJson
  #pragma pack(pop)
  static check_size<sizeof(InputActionMap::WriteFileJson), 0 + sizeof(::ArrayW<::UnityEngine::InputSystem::InputActionMap::WriteMapJson>)> __UnityEngine_InputSystem_InputActionMap_WriteFileJsonSizeCheck;
  static_assert(sizeof(InputActionMap::WriteFileJson) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::WriteFileJson::FromMap
// Il2CppName: FromMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionMap::WriteFileJson (*)(::UnityEngine::InputSystem::InputActionMap*)>(&UnityEngine::InputSystem::InputActionMap::WriteFileJson::FromMap)> {
  static const MethodInfo* get() {
    static auto* map = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionMap")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap::WriteFileJson), "FromMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{map});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionMap::WriteFileJson::FromMaps
// Il2CppName: FromMaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionMap::WriteFileJson (*)(::System::Collections::Generic::IEnumerable_1<::UnityEngine::InputSystem::InputActionMap*>*)>(&UnityEngine::InputSystem::InputActionMap::WriteFileJson::FromMaps)> {
  static const MethodInfo* get() {
    static auto* maps = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionMap")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionMap::WriteFileJson), "FromMaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{maps});
  }
};
