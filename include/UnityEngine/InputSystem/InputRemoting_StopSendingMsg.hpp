// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.InputRemoting
#include "UnityEngine/InputSystem/InputRemoting.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::InputRemoting::StopSendingMsg);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputRemoting::StopSendingMsg*, "UnityEngine.InputSystem", "InputRemoting/StopSendingMsg");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.InputRemoting/UnityEngine.InputSystem.StopSendingMsg
  // [TokenAttribute] Offset: FFFFFFFF
  class InputRemoting::StopSendingMsg : public ::Il2CppObject {
    public:
    // static public System.Void Process(UnityEngine.InputSystem.InputRemoting receiver)
    // Offset: 0xD969C4
    static void Process(::UnityEngine::InputSystem::InputRemoting* receiver);
  }; // UnityEngine.InputSystem.InputRemoting/UnityEngine.InputSystem.StopSendingMsg
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputRemoting::StopSendingMsg::Process
// Il2CppName: Process
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputRemoting*)>(&UnityEngine::InputSystem::InputRemoting::StopSendingMsg::Process)> {
  static const MethodInfo* get() {
    static auto* receiver = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputRemoting")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputRemoting::StopSendingMsg*), "Process", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{receiver});
  }
};
