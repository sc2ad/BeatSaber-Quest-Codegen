// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.InputSystem.PlayerNotifications
#include "UnityEngine/InputSystem/PlayerNotifications.hpp"
// Including type: UnityEngine.InputSystem.Users.InputUser
#include "UnityEngine/InputSystem/Users/InputUser.hpp"
// Including type: UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext
#include "UnityEngine/InputSystem/InputAction_CallbackContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputActionAsset
  class InputActionAsset;
  // Forward declaring type: InputValue
  class InputValue;
  // Forward declaring type: InputActionMap
  class InputActionMap;
  // Forward declaring type: InputControl
  class InputControl;
  // Forward declaring type: InputDevice
  class InputDevice;
  // Skipping declaration: InputControlScheme because it is already included!
}
// Forward declaring namespace: UnityEngine::InputSystem::UI
namespace UnityEngine::InputSystem::UI {
  // Forward declaring type: InputSystemUIInputModule
  class InputSystemUIInputModule;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: String
  class String;
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
}
// Forward declaring namespace: UnityEngine::InputSystem::Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: ReadOnlyArray`1<TValue>
  template<typename TValue>
  struct ReadOnlyArray_1;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: PlayerInput
  class PlayerInput;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::PlayerInput);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::PlayerInput*, "UnityEngine.InputSystem", "PlayerInput");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.PlayerInput
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: 95802C
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  class PlayerInput : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::UnityEngine::InputSystem::PlayerInput::ActionEvent
    class ActionEvent;
    // Nested type: ::UnityEngine::InputSystem::PlayerInput::DeviceLostEvent
    class DeviceLostEvent;
    // Nested type: ::UnityEngine::InputSystem::PlayerInput::DeviceRegainedEvent
    class DeviceRegainedEvent;
    // Nested type: ::UnityEngine::InputSystem::PlayerInput::ControlsChangedEvent
    class ControlsChangedEvent;
    public:
    // [TooltipAttribute] Offset: 0x95AE74
    // UnityEngine.InputSystem.InputActionAsset m_Actions
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::InputSystem::InputActionAsset* m_Actions;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionAsset*) == 0x8);
    // [TooltipAttribute] Offset: 0x95AEC0
    // UnityEngine.InputSystem.PlayerNotifications m_NotificationBehavior
    // Size: 0x4
    // Offset: 0x20
    ::UnityEngine::InputSystem::PlayerNotifications m_NotificationBehavior;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::PlayerNotifications) == 0x4);
    // [TooltipAttribute] Offset: 0x95AF0C
    // UnityEngine.InputSystem.UI.InputSystemUIInputModule m_UIInputModule
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::InputSystem::UI::InputSystemUIInputModule* m_UIInputModule;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::UI::InputSystemUIInputModule*) == 0x8);
    // [TooltipAttribute] Offset: 0x95AF58
    // UnityEngine.InputSystem.PlayerInput/UnityEngine.InputSystem.DeviceLostEvent m_DeviceLostEvent
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::InputSystem::PlayerInput::DeviceLostEvent* m_DeviceLostEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::PlayerInput::DeviceLostEvent*) == 0x8);
    // UnityEngine.InputSystem.PlayerInput/UnityEngine.InputSystem.DeviceRegainedEvent m_DeviceRegainedEvent
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::InputSystem::PlayerInput::DeviceRegainedEvent* m_DeviceRegainedEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::PlayerInput::DeviceRegainedEvent*) == 0x8);
    // UnityEngine.InputSystem.PlayerInput/UnityEngine.InputSystem.ControlsChangedEvent m_ControlsChangedEvent
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::InputSystem::PlayerInput::ControlsChangedEvent* m_ControlsChangedEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::PlayerInput::ControlsChangedEvent*) == 0x8);
    // UnityEngine.InputSystem.PlayerInput/UnityEngine.InputSystem.ActionEvent[] m_ActionEvents
    // Size: 0x8
    // Offset: 0x48
    ::ArrayW<::UnityEngine::InputSystem::PlayerInput::ActionEvent*> m_ActionEvents;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::PlayerInput::ActionEvent*>) == 0x8);
    // System.Boolean m_NeverAutoSwitchControlSchemes
    // Size: 0x1
    // Offset: 0x50
    bool m_NeverAutoSwitchControlSchemes;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.String m_DefaultControlScheme
    // Size: 0x8
    // Offset: 0x58
    ::StringW m_DefaultControlScheme;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.String m_DefaultActionMap
    // Size: 0x8
    // Offset: 0x60
    ::StringW m_DefaultActionMap;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.Int32 m_SplitScreenIndex
    // Size: 0x4
    // Offset: 0x68
    int m_SplitScreenIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [TooltipAttribute] Offset: 0x95B014
    // UnityEngine.Camera m_Camera
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::Camera* m_Camera;
    // Field size check
    static_assert(sizeof(::UnityEngine::Camera*) == 0x8);
    // private UnityEngine.InputSystem.InputValue m_InputValueObject
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::InputSystem::InputValue* m_InputValueObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputValue*) == 0x8);
    // UnityEngine.InputSystem.InputActionMap m_CurrentActionMap
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::InputSystem::InputActionMap* m_CurrentActionMap;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionMap*) == 0x8);
    // private System.Int32 m_PlayerIndex
    // Size: 0x4
    // Offset: 0x88
    int m_PlayerIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean m_InputActive
    // Size: 0x1
    // Offset: 0x8C
    bool m_InputActive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Enabled
    // Size: 0x1
    // Offset: 0x8D
    bool m_Enabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_ActionsInitialized
    // Size: 0x1
    // Offset: 0x8E
    bool m_ActionsInitialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Collections.Generic.Dictionary`2<System.String,System.String> m_ActionMessageNames
    // Size: 0x8
    // Offset: 0x90
    ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* m_ActionMessageNames;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*) == 0x8);
    // private UnityEngine.InputSystem.Users.InputUser m_InputUser
    // Size: 0x4
    // Offset: 0x98
    ::UnityEngine::InputSystem::Users::InputUser m_InputUser;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Users::InputUser) == 0x4);
    // private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_ActionTriggeredDelegate
    // Size: 0x8
    // Offset: 0xA0
    ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* m_ActionTriggeredDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*) == 0x8);
    // private UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.PlayerInput>> m_DeviceLostCallbacks
    // Size: 0xFFFFFFFF
    // Offset: 0xA8
    ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>*> m_DeviceLostCallbacks;
    // private UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.PlayerInput>> m_DeviceRegainedCallbacks
    // Size: 0xFFFFFFFF
    // Offset: 0xC0
    ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>*> m_DeviceRegainedCallbacks;
    // private UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.PlayerInput>> m_ControlsChangedCallbacks
    // Size: 0xFFFFFFFF
    // Offset: 0xD8
    ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>*> m_ControlsChangedCallbacks;
    // private UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext>> m_ActionTriggeredCallbacks
    // Size: 0xFFFFFFFF
    // Offset: 0xF0
    ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*> m_ActionTriggeredCallbacks;
    // private System.Action`2<UnityEngine.InputSystem.InputControl,UnityEngine.InputSystem.LowLevel.InputEventPtr> m_UnpairedDeviceUsedDelegate
    // Size: 0x8
    // Offset: 0x108
    ::System::Action_2<::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr>* m_UnpairedDeviceUsedDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr>*) == 0x8);
    // private System.Boolean m_OnUnpairedDeviceUsedHooked
    // Size: 0x1
    // Offset: 0x110
    bool m_OnUnpairedDeviceUsedHooked;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Action`2<UnityEngine.InputSystem.InputDevice,UnityEngine.InputSystem.InputDeviceChange> m_DeviceChangeDelegate
    // Size: 0x8
    // Offset: 0x118
    ::System::Action_2<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::InputDeviceChange>* m_DeviceChangeDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::InputDeviceChange>*) == 0x8);
    // private System.Boolean m_OnDeviceChangeHooked
    // Size: 0x1
    // Offset: 0x120
    bool m_OnDeviceChangeHooked;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // static field const value: static public System.String DeviceLostMessage
    static constexpr const char* DeviceLostMessage = "OnDeviceLost";
    // Get static field: static public System.String DeviceLostMessage
    static ::StringW _get_DeviceLostMessage();
    // Set static field: static public System.String DeviceLostMessage
    static void _set_DeviceLostMessage(::StringW value);
    // static field const value: static public System.String DeviceRegainedMessage
    static constexpr const char* DeviceRegainedMessage = "OnDeviceRegained";
    // Get static field: static public System.String DeviceRegainedMessage
    static ::StringW _get_DeviceRegainedMessage();
    // Set static field: static public System.String DeviceRegainedMessage
    static void _set_DeviceRegainedMessage(::StringW value);
    // static field const value: static public System.String ControlsChangedMessage
    static constexpr const char* ControlsChangedMessage = "OnControlsChanged";
    // Get static field: static public System.String ControlsChangedMessage
    static ::StringW _get_ControlsChangedMessage();
    // Set static field: static public System.String ControlsChangedMessage
    static void _set_ControlsChangedMessage(::StringW value);
    // Get static field: static System.Int32 s_AllActivePlayersCount
    static int _get_s_AllActivePlayersCount();
    // Set static field: static System.Int32 s_AllActivePlayersCount
    static void _set_s_AllActivePlayersCount(int value);
    // Get static field: static UnityEngine.InputSystem.PlayerInput[] s_AllActivePlayers
    static ::ArrayW<::UnityEngine::InputSystem::PlayerInput*> _get_s_AllActivePlayers();
    // Set static field: static UnityEngine.InputSystem.PlayerInput[] s_AllActivePlayers
    static void _set_s_AllActivePlayers(::ArrayW<::UnityEngine::InputSystem::PlayerInput*> value);
    // Get static field: static private System.Action`3<UnityEngine.InputSystem.Users.InputUser,UnityEngine.InputSystem.Users.InputUserChange,UnityEngine.InputSystem.InputDevice> s_UserChangeDelegate
    static ::System::Action_3<::UnityEngine::InputSystem::Users::InputUser, ::UnityEngine::InputSystem::Users::InputUserChange, ::UnityEngine::InputSystem::InputDevice*>* _get_s_UserChangeDelegate();
    // Set static field: static private System.Action`3<UnityEngine.InputSystem.Users.InputUser,UnityEngine.InputSystem.Users.InputUserChange,UnityEngine.InputSystem.InputDevice> s_UserChangeDelegate
    static void _set_s_UserChangeDelegate(::System::Action_3<::UnityEngine::InputSystem::Users::InputUser, ::UnityEngine::InputSystem::Users::InputUserChange, ::UnityEngine::InputSystem::InputDevice*>* value);
    // Get static field: static private System.Int32 s_InitPairWithDevicesCount
    static int _get_s_InitPairWithDevicesCount();
    // Set static field: static private System.Int32 s_InitPairWithDevicesCount
    static void _set_s_InitPairWithDevicesCount(int value);
    // Get static field: static private UnityEngine.InputSystem.InputDevice[] s_InitPairWithDevices
    static ::ArrayW<::UnityEngine::InputSystem::InputDevice*> _get_s_InitPairWithDevices();
    // Set static field: static private UnityEngine.InputSystem.InputDevice[] s_InitPairWithDevices
    static void _set_s_InitPairWithDevices(::ArrayW<::UnityEngine::InputSystem::InputDevice*> value);
    // Get static field: static private System.Int32 s_InitPlayerIndex
    static int _get_s_InitPlayerIndex();
    // Set static field: static private System.Int32 s_InitPlayerIndex
    static void _set_s_InitPlayerIndex(int value);
    // Get static field: static private System.Int32 s_InitSplitScreenIndex
    static int _get_s_InitSplitScreenIndex();
    // Set static field: static private System.Int32 s_InitSplitScreenIndex
    static void _set_s_InitSplitScreenIndex(int value);
    // Get static field: static private System.String s_InitControlScheme
    static ::StringW _get_s_InitControlScheme();
    // Set static field: static private System.String s_InitControlScheme
    static void _set_s_InitControlScheme(::StringW value);
    // Get static field: static System.Boolean s_DestroyIfDeviceSetupUnsuccessful
    static bool _get_s_DestroyIfDeviceSetupUnsuccessful();
    // Set static field: static System.Boolean s_DestroyIfDeviceSetupUnsuccessful
    static void _set_s_DestroyIfDeviceSetupUnsuccessful(bool value);
    // Get instance field reference: UnityEngine.InputSystem.InputActionAsset m_Actions
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionAsset*& dyn_m_Actions();
    // Get instance field reference: UnityEngine.InputSystem.PlayerNotifications m_NotificationBehavior
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::PlayerNotifications& dyn_m_NotificationBehavior();
    // Get instance field reference: UnityEngine.InputSystem.UI.InputSystemUIInputModule m_UIInputModule
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::UI::InputSystemUIInputModule*& dyn_m_UIInputModule();
    // Get instance field reference: UnityEngine.InputSystem.PlayerInput/UnityEngine.InputSystem.DeviceLostEvent m_DeviceLostEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::PlayerInput::DeviceLostEvent*& dyn_m_DeviceLostEvent();
    // Get instance field reference: UnityEngine.InputSystem.PlayerInput/UnityEngine.InputSystem.DeviceRegainedEvent m_DeviceRegainedEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::PlayerInput::DeviceRegainedEvent*& dyn_m_DeviceRegainedEvent();
    // Get instance field reference: UnityEngine.InputSystem.PlayerInput/UnityEngine.InputSystem.ControlsChangedEvent m_ControlsChangedEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::PlayerInput::ControlsChangedEvent*& dyn_m_ControlsChangedEvent();
    // Get instance field reference: UnityEngine.InputSystem.PlayerInput/UnityEngine.InputSystem.ActionEvent[] m_ActionEvents
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::PlayerInput::ActionEvent*>& dyn_m_ActionEvents();
    // Get instance field reference: System.Boolean m_NeverAutoSwitchControlSchemes
    [[deprecated("Use field access instead!")]] bool& dyn_m_NeverAutoSwitchControlSchemes();
    // Get instance field reference: System.String m_DefaultControlScheme
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_DefaultControlScheme();
    // Get instance field reference: System.String m_DefaultActionMap
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_DefaultActionMap();
    // Get instance field reference: System.Int32 m_SplitScreenIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_SplitScreenIndex();
    // Get instance field reference: UnityEngine.Camera m_Camera
    [[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& dyn_m_Camera();
    // Get instance field reference: private UnityEngine.InputSystem.InputValue m_InputValueObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputValue*& dyn_m_InputValueObject();
    // Get instance field reference: UnityEngine.InputSystem.InputActionMap m_CurrentActionMap
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionMap*& dyn_m_CurrentActionMap();
    // Get instance field reference: private System.Int32 m_PlayerIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_PlayerIndex();
    // Get instance field reference: private System.Boolean m_InputActive
    [[deprecated("Use field access instead!")]] bool& dyn_m_InputActive();
    // Get instance field reference: private System.Boolean m_Enabled
    [[deprecated("Use field access instead!")]] bool& dyn_m_Enabled();
    // Get instance field reference: private System.Boolean m_ActionsInitialized
    [[deprecated("Use field access instead!")]] bool& dyn_m_ActionsInitialized();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,System.String> m_ActionMessageNames
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& dyn_m_ActionMessageNames();
    // Get instance field reference: private UnityEngine.InputSystem.Users.InputUser m_InputUser
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Users::InputUser& dyn_m_InputUser();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> m_ActionTriggeredDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*& dyn_m_ActionTriggeredDelegate();
    // Get instance field reference: private UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.PlayerInput>> m_DeviceLostCallbacks
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>*>& dyn_m_DeviceLostCallbacks();
    // Get instance field reference: private UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.PlayerInput>> m_DeviceRegainedCallbacks
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>*>& dyn_m_DeviceRegainedCallbacks();
    // Get instance field reference: private UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.PlayerInput>> m_ControlsChangedCallbacks
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>*>& dyn_m_ControlsChangedCallbacks();
    // Get instance field reference: private UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext>> m_ActionTriggeredCallbacks
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*>& dyn_m_ActionTriggeredCallbacks();
    // Get instance field reference: private System.Action`2<UnityEngine.InputSystem.InputControl,UnityEngine.InputSystem.LowLevel.InputEventPtr> m_UnpairedDeviceUsedDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr>*& dyn_m_UnpairedDeviceUsedDelegate();
    // Get instance field reference: private System.Boolean m_OnUnpairedDeviceUsedHooked
    [[deprecated("Use field access instead!")]] bool& dyn_m_OnUnpairedDeviceUsedHooked();
    // Get instance field reference: private System.Action`2<UnityEngine.InputSystem.InputDevice,UnityEngine.InputSystem.InputDeviceChange> m_DeviceChangeDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::InputDeviceChange>*& dyn_m_DeviceChangeDelegate();
    // Get instance field reference: private System.Boolean m_OnDeviceChangeHooked
    [[deprecated("Use field access instead!")]] bool& dyn_m_OnDeviceChangeHooked();
    // public System.Boolean get_inputIsActive()
    // Offset: 0xCC9E6C
    bool get_inputIsActive();
    // public System.Boolean get_active()
    // Offset: 0xCC9E74
    bool get_active();
    // public System.Int32 get_playerIndex()
    // Offset: 0xCC9E7C
    int get_playerIndex();
    // public System.Int32 get_splitScreenIndex()
    // Offset: 0xCC9E84
    int get_splitScreenIndex();
    // public UnityEngine.InputSystem.InputActionAsset get_actions()
    // Offset: 0xCC9E8C
    ::UnityEngine::InputSystem::InputActionAsset* get_actions();
    // public System.Void set_actions(UnityEngine.InputSystem.InputActionAsset value)
    // Offset: 0xCCA45C
    void set_actions(::UnityEngine::InputSystem::InputActionAsset* value);
    // public System.String get_currentControlScheme()
    // Offset: 0xCCAF90
    ::StringW get_currentControlScheme();
    // public System.String get_defaultControlScheme()
    // Offset: 0xCCB014
    ::StringW get_defaultControlScheme();
    // public System.Void set_defaultControlScheme(System.String value)
    // Offset: 0xCCB01C
    void set_defaultControlScheme(::StringW value);
    // public System.Boolean get_neverAutoSwitchControlSchemes()
    // Offset: 0xCCB024
    bool get_neverAutoSwitchControlSchemes();
    // public System.Void set_neverAutoSwitchControlSchemes(System.Boolean value)
    // Offset: 0xCCB02C
    void set_neverAutoSwitchControlSchemes(bool value);
    // public UnityEngine.InputSystem.InputActionMap get_currentActionMap()
    // Offset: 0xCCB100
    ::UnityEngine::InputSystem::InputActionMap* get_currentActionMap();
    // public System.Void set_currentActionMap(UnityEngine.InputSystem.InputActionMap value)
    // Offset: 0xCCB108
    void set_currentActionMap(::UnityEngine::InputSystem::InputActionMap* value);
    // public System.String get_defaultActionMap()
    // Offset: 0xCCB154
    ::StringW get_defaultActionMap();
    // public System.Void set_defaultActionMap(System.String value)
    // Offset: 0xCCB15C
    void set_defaultActionMap(::StringW value);
    // public UnityEngine.InputSystem.PlayerNotifications get_notificationBehavior()
    // Offset: 0xCCB164
    ::UnityEngine::InputSystem::PlayerNotifications get_notificationBehavior();
    // public System.Void set_notificationBehavior(UnityEngine.InputSystem.PlayerNotifications value)
    // Offset: 0xCCB16C
    void set_notificationBehavior(::UnityEngine::InputSystem::PlayerNotifications value);
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.PlayerInput/UnityEngine.InputSystem.ActionEvent> get_actionEvents()
    // Offset: 0xCCB1C8
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::PlayerInput::ActionEvent*> get_actionEvents();
    // public System.Void set_actionEvents(UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.PlayerInput/UnityEngine.InputSystem.ActionEvent> value)
    // Offset: 0xCCB218
    void set_actionEvents(::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::PlayerInput::ActionEvent*> value);
    // public UnityEngine.InputSystem.PlayerInput/UnityEngine.InputSystem.DeviceLostEvent get_deviceLostEvent()
    // Offset: 0xCCB29C
    ::UnityEngine::InputSystem::PlayerInput::DeviceLostEvent* get_deviceLostEvent();
    // public UnityEngine.InputSystem.PlayerInput/UnityEngine.InputSystem.DeviceRegainedEvent get_deviceRegainedEvent()
    // Offset: 0xCCB354
    ::UnityEngine::InputSystem::PlayerInput::DeviceRegainedEvent* get_deviceRegainedEvent();
    // public UnityEngine.InputSystem.PlayerInput/UnityEngine.InputSystem.ControlsChangedEvent get_controlsChangedEvent()
    // Offset: 0xCCB40C
    ::UnityEngine::InputSystem::PlayerInput::ControlsChangedEvent* get_controlsChangedEvent();
    // public UnityEngine.Camera get_camera()
    // Offset: 0xCCBAA4
    ::UnityEngine::Camera* get_camera();
    // public System.Void set_camera(UnityEngine.Camera value)
    // Offset: 0xCCBAAC
    void set_camera(::UnityEngine::Camera* value);
    // public UnityEngine.InputSystem.UI.InputSystemUIInputModule get_uiInputModule()
    // Offset: 0xCCBAB4
    ::UnityEngine::InputSystem::UI::InputSystemUIInputModule* get_uiInputModule();
    // public System.Void set_uiInputModule(UnityEngine.InputSystem.UI.InputSystemUIInputModule value)
    // Offset: 0xCCBABC
    void set_uiInputModule(::UnityEngine::InputSystem::UI::InputSystemUIInputModule* value);
    // public UnityEngine.InputSystem.Users.InputUser get_user()
    // Offset: 0xCCBE1C
    ::UnityEngine::InputSystem::Users::InputUser get_user();
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputDevice> get_devices()
    // Offset: 0xCCBE24
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*> get_devices();
    // public System.Boolean get_hasMissingRequiredDevices()
    // Offset: 0xCCBE68
    bool get_hasMissingRequiredDevices();
    // static public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.PlayerInput> get_all()
    // Offset: 0xCCBE98
    static ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::PlayerInput*> get_all();
    // static public System.Boolean get_isSinglePlayer()
    // Offset: 0xCCBF2C
    static bool get_isSinglePlayer();
    // public System.Void add_onActionTriggered(System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> value)
    // Offset: 0xCCB4C4
    void add_onActionTriggered(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* value);
    // public System.Void remove_onActionTriggered(System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> value)
    // Offset: 0xCCB568
    void remove_onActionTriggered(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* value);
    // public System.Void add_onDeviceLost(System.Action`1<UnityEngine.InputSystem.PlayerInput> value)
    // Offset: 0xCCB63C
    void add_onDeviceLost(::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>* value);
    // public System.Void remove_onDeviceLost(System.Action`1<UnityEngine.InputSystem.PlayerInput> value)
    // Offset: 0xCCB6E0
    void remove_onDeviceLost(::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>* value);
    // public System.Void add_onDeviceRegained(System.Action`1<UnityEngine.InputSystem.PlayerInput> value)
    // Offset: 0xCCB7B4
    void add_onDeviceRegained(::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>* value);
    // public System.Void remove_onDeviceRegained(System.Action`1<UnityEngine.InputSystem.PlayerInput> value)
    // Offset: 0xCCB858
    void remove_onDeviceRegained(::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>* value);
    // public System.Void add_onControlsChanged(System.Action`1<UnityEngine.InputSystem.PlayerInput> value)
    // Offset: 0xCCB92C
    void add_onControlsChanged(::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>* value);
    // public System.Void remove_onControlsChanged(System.Action`1<UnityEngine.InputSystem.PlayerInput> value)
    // Offset: 0xCCB9D0
    void remove_onControlsChanged(::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>* value);
    // public System.Void .ctor()
    // Offset: 0xCCF424
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerInput* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::PlayerInput::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerInput*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0xCCF438
    static void _cctor();
    // public System.Void ActivateInput()
    // Offset: 0xCCAECC
    void ActivateInput();
    // public System.Void DeactivateInput()
    // Offset: 0xCCC1B0
    void DeactivateInput();
    // public System.Void PassivateInput()
    // Offset: 0xCCC1E0
    void PassivateInput();
    // public System.Boolean SwitchCurrentControlScheme(params UnityEngine.InputSystem.InputDevice[] devices)
    // Offset: 0xCCC210
    bool SwitchCurrentControlScheme(::ArrayW<::UnityEngine::InputSystem::InputDevice*> devices);
    // public System.Void SwitchCurrentControlScheme(System.String controlScheme, params UnityEngine.InputSystem.InputDevice[] devices)
    // Offset: 0xCCC3A8
    void SwitchCurrentControlScheme(::StringW controlScheme, ::ArrayW<::UnityEngine::InputSystem::InputDevice*> devices);
    // public System.Void SwitchCurrentActionMap(System.String mapNameOrId)
    // Offset: 0xCCC060
    void SwitchCurrentActionMap(::StringW mapNameOrId);
    // static public UnityEngine.InputSystem.PlayerInput GetPlayerByIndex(System.Int32 playerIndex)
    // Offset: 0xCCC5BC
    static ::UnityEngine::InputSystem::PlayerInput* GetPlayerByIndex(int playerIndex);
    // static public UnityEngine.InputSystem.PlayerInput FindFirstPairedToDevice(UnityEngine.InputSystem.InputDevice device)
    // Offset: 0xCCC6E0
    static ::UnityEngine::InputSystem::PlayerInput* FindFirstPairedToDevice(::UnityEngine::InputSystem::InputDevice* device);
    // static public UnityEngine.InputSystem.PlayerInput Instantiate(UnityEngine.GameObject prefab, System.Int32 playerIndex, System.String controlScheme, System.Int32 splitScreenIndex, UnityEngine.InputSystem.InputDevice pairWithDevice)
    // Offset: 0xCCC860
    static ::UnityEngine::InputSystem::PlayerInput* Instantiate(::UnityEngine::GameObject* prefab, int playerIndex, ::StringW controlScheme, int splitScreenIndex, ::UnityEngine::InputSystem::InputDevice* pairWithDevice);
    // static public UnityEngine.InputSystem.PlayerInput Instantiate(UnityEngine.GameObject prefab, System.Int32 playerIndex, System.String controlScheme, System.Int32 splitScreenIndex, params UnityEngine.InputSystem.InputDevice[] pairWithDevices)
    // Offset: 0xCCCCB8
    static ::UnityEngine::InputSystem::PlayerInput* Instantiate(::UnityEngine::GameObject* prefab, int playerIndex, ::StringW controlScheme, int splitScreenIndex, ::ArrayW<::UnityEngine::InputSystem::InputDevice*> pairWithDevices);
    // static private UnityEngine.InputSystem.PlayerInput DoInstantiate(UnityEngine.GameObject prefab)
    // Offset: 0xCCC9D0
    static ::UnityEngine::InputSystem::PlayerInput* DoInstantiate(::UnityEngine::GameObject* prefab);
    // private System.Void InitializeActions()
    // Offset: 0xCC9EDC
    void InitializeActions();
    // private System.Void UninitializeActions()
    // Offset: 0xCCA570
    void UninitializeActions();
    // private System.Void InstallOnActionTriggeredHook()
    // Offset: 0xCCCE60
    void InstallOnActionTriggeredHook();
    // private System.Void UninstallOnActionTriggeredHook()
    // Offset: 0xCCD3F0
    void UninstallOnActionTriggeredHook();
    // private System.Void OnActionTriggered(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xCCD634
    void OnActionTriggered(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void CacheMessageNames()
    // Offset: 0xCCD0DC
    void CacheMessageNames();
    // private System.Void ClearCaches()
    // Offset: 0xCCA748
    void ClearCaches();
    // private System.Void AssignUserAndDevices()
    // Offset: 0xCCA74C
    void AssignUserAndDevices();
    // private System.Boolean HaveBindingForDevice(UnityEngine.InputSystem.InputDevice device)
    // Offset: 0xCCDA38
    bool HaveBindingForDevice(::UnityEngine::InputSystem::InputDevice* device);
    // private System.Void UnassignUserAndDevices()
    // Offset: 0xCCDB38
    void UnassignUserAndDevices();
    // private System.Boolean TryToActivateControlScheme(UnityEngine.InputSystem.InputControlScheme controlScheme)
    // Offset: 0xCCD7FC
    bool TryToActivateControlScheme(::UnityEngine::InputSystem::InputControlScheme controlScheme);
    // private System.Void AssignPlayerIndex()
    // Offset: 0xCCDC08
    void AssignPlayerIndex();
    // private System.Void OnEnable()
    // Offset: 0xCCDE40
    void OnEnable();
    // private System.Void StartListeningForUnpairedDeviceActivity()
    // Offset: 0xCCE2AC
    void StartListeningForUnpairedDeviceActivity();
    // private System.Void StopListeningForUnpairedDeviceActivity()
    // Offset: 0xCCB088
    void StopListeningForUnpairedDeviceActivity();
    // private System.Void StartListeningForDeviceChanges()
    // Offset: 0xCCE1F0
    void StartListeningForDeviceChanges();
    // private System.Void StopListeningForDeviceChanges()
    // Offset: 0xCCE4B4
    void StopListeningForDeviceChanges();
    // private System.Void OnDisable()
    // Offset: 0xCCE530
    void OnDisable();
    // public System.Void DebugLogAction(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xCCE824
    void DebugLogAction(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void HandleDeviceLost()
    // Offset: 0xCCE8AC
    void HandleDeviceLost();
    // private System.Void HandleDeviceRegained()
    // Offset: 0xCCE9B0
    void HandleDeviceRegained();
    // private System.Void HandleControlsChanged()
    // Offset: 0xCCEAB4
    void HandleControlsChanged();
    // static private System.Void OnUserChange(UnityEngine.InputSystem.Users.InputUser user, UnityEngine.InputSystem.Users.InputUserChange change, UnityEngine.InputSystem.InputDevice device)
    // Offset: 0xCCEBB8
    static void OnUserChange(::UnityEngine::InputSystem::Users::InputUser user, ::UnityEngine::InputSystem::Users::InputUserChange change, ::UnityEngine::InputSystem::InputDevice* device);
    // private System.Void OnUnpairedDeviceUsed(UnityEngine.InputSystem.InputControl control, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr)
    // Offset: 0xCCED88
    void OnUnpairedDeviceUsed(::UnityEngine::InputSystem::InputControl* control, ::UnityEngine::InputSystem::LowLevel::InputEventPtr eventPtr);
    // private System.Void OnDeviceChange(UnityEngine.InputSystem.InputDevice device, UnityEngine.InputSystem.InputDeviceChange change)
    // Offset: 0xCCF314
    void OnDeviceChange(::UnityEngine::InputSystem::InputDevice* device, ::UnityEngine::InputSystem::InputDeviceChange change);
  }; // UnityEngine.InputSystem.PlayerInput
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_inputIsActive
// Il2CppName: get_inputIsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_inputIsActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_inputIsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_active
// Il2CppName: get_active
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_active)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_active", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_playerIndex
// Il2CppName: get_playerIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_playerIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_playerIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_splitScreenIndex
// Il2CppName: get_splitScreenIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_splitScreenIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_splitScreenIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_actions
// Il2CppName: get_actions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionAsset* (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_actions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_actions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::set_actions
// Il2CppName: set_actions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::UnityEngine::InputSystem::InputActionAsset*)>(&UnityEngine::InputSystem::PlayerInput::set_actions)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "set_actions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_currentControlScheme
// Il2CppName: get_currentControlScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_currentControlScheme)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_currentControlScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_defaultControlScheme
// Il2CppName: get_defaultControlScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_defaultControlScheme)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_defaultControlScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::set_defaultControlScheme
// Il2CppName: set_defaultControlScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::StringW)>(&UnityEngine::InputSystem::PlayerInput::set_defaultControlScheme)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "set_defaultControlScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_neverAutoSwitchControlSchemes
// Il2CppName: get_neverAutoSwitchControlSchemes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_neverAutoSwitchControlSchemes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_neverAutoSwitchControlSchemes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::set_neverAutoSwitchControlSchemes
// Il2CppName: set_neverAutoSwitchControlSchemes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(bool)>(&UnityEngine::InputSystem::PlayerInput::set_neverAutoSwitchControlSchemes)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "set_neverAutoSwitchControlSchemes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_currentActionMap
// Il2CppName: get_currentActionMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionMap* (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_currentActionMap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_currentActionMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::set_currentActionMap
// Il2CppName: set_currentActionMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::UnityEngine::InputSystem::InputActionMap*)>(&UnityEngine::InputSystem::PlayerInput::set_currentActionMap)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionMap")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "set_currentActionMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_defaultActionMap
// Il2CppName: get_defaultActionMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_defaultActionMap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_defaultActionMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::set_defaultActionMap
// Il2CppName: set_defaultActionMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::StringW)>(&UnityEngine::InputSystem::PlayerInput::set_defaultActionMap)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "set_defaultActionMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_notificationBehavior
// Il2CppName: get_notificationBehavior
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::PlayerNotifications (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_notificationBehavior)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_notificationBehavior", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::set_notificationBehavior
// Il2CppName: set_notificationBehavior
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::UnityEngine::InputSystem::PlayerNotifications)>(&UnityEngine::InputSystem::PlayerInput::set_notificationBehavior)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "PlayerNotifications")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "set_notificationBehavior", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_actionEvents
// Il2CppName: get_actionEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::PlayerInput::ActionEvent*> (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_actionEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_actionEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::set_actionEvents
// Il2CppName: set_actionEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::PlayerInput::ActionEvent*>)>(&UnityEngine::InputSystem::PlayerInput::set_actionEvents)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "ReadOnlyArray`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "PlayerInput/ActionEvent")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "set_actionEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_deviceLostEvent
// Il2CppName: get_deviceLostEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::PlayerInput::DeviceLostEvent* (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_deviceLostEvent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_deviceLostEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_deviceRegainedEvent
// Il2CppName: get_deviceRegainedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::PlayerInput::DeviceRegainedEvent* (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_deviceRegainedEvent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_deviceRegainedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_controlsChangedEvent
// Il2CppName: get_controlsChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::PlayerInput::ControlsChangedEvent* (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_controlsChangedEvent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_controlsChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_camera
// Il2CppName: get_camera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Camera* (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_camera)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_camera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::set_camera
// Il2CppName: set_camera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::UnityEngine::Camera*)>(&UnityEngine::InputSystem::PlayerInput::set_camera)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "set_camera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_uiInputModule
// Il2CppName: get_uiInputModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::UI::InputSystemUIInputModule* (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_uiInputModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_uiInputModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::set_uiInputModule
// Il2CppName: set_uiInputModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::UnityEngine::InputSystem::UI::InputSystemUIInputModule*)>(&UnityEngine::InputSystem::PlayerInput::set_uiInputModule)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.UI", "InputSystemUIInputModule")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "set_uiInputModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_user
// Il2CppName: get_user
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Users::InputUser (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_user)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_user", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_devices
// Il2CppName: get_devices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*> (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_devices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_devices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_hasMissingRequiredDevices
// Il2CppName: get_hasMissingRequiredDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::get_hasMissingRequiredDevices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_hasMissingRequiredDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_all
// Il2CppName: get_all
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::PlayerInput*> (*)()>(&UnityEngine::InputSystem::PlayerInput::get_all)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_all", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::get_isSinglePlayer
// Il2CppName: get_isSinglePlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::InputSystem::PlayerInput::get_isSinglePlayer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "get_isSinglePlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::add_onActionTriggered
// Il2CppName: add_onActionTriggered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*)>(&UnityEngine::InputSystem::PlayerInput::add_onActionTriggered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "add_onActionTriggered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::remove_onActionTriggered
// Il2CppName: remove_onActionTriggered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*)>(&UnityEngine::InputSystem::PlayerInput::remove_onActionTriggered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "remove_onActionTriggered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::add_onDeviceLost
// Il2CppName: add_onDeviceLost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>*)>(&UnityEngine::InputSystem::PlayerInput::add_onDeviceLost)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "PlayerInput")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "add_onDeviceLost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::remove_onDeviceLost
// Il2CppName: remove_onDeviceLost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>*)>(&UnityEngine::InputSystem::PlayerInput::remove_onDeviceLost)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "PlayerInput")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "remove_onDeviceLost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::add_onDeviceRegained
// Il2CppName: add_onDeviceRegained
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>*)>(&UnityEngine::InputSystem::PlayerInput::add_onDeviceRegained)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "PlayerInput")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "add_onDeviceRegained", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::remove_onDeviceRegained
// Il2CppName: remove_onDeviceRegained
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>*)>(&UnityEngine::InputSystem::PlayerInput::remove_onDeviceRegained)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "PlayerInput")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "remove_onDeviceRegained", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::add_onControlsChanged
// Il2CppName: add_onControlsChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>*)>(&UnityEngine::InputSystem::PlayerInput::add_onControlsChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "PlayerInput")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "add_onControlsChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::remove_onControlsChanged
// Il2CppName: remove_onControlsChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::System::Action_1<::UnityEngine::InputSystem::PlayerInput*>*)>(&UnityEngine::InputSystem::PlayerInput::remove_onControlsChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "PlayerInput")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "remove_onControlsChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::InputSystem::PlayerInput::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::ActivateInput
// Il2CppName: ActivateInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::ActivateInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "ActivateInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::DeactivateInput
// Il2CppName: DeactivateInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::DeactivateInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "DeactivateInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::PassivateInput
// Il2CppName: PassivateInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::PassivateInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "PassivateInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::SwitchCurrentControlScheme
// Il2CppName: SwitchCurrentControlScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::PlayerInput::*)(::ArrayW<::UnityEngine::InputSystem::InputDevice*>)>(&UnityEngine::InputSystem::PlayerInput::SwitchCurrentControlScheme)> {
  static const MethodInfo* get() {
    static auto* devices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "SwitchCurrentControlScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{devices});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::SwitchCurrentControlScheme
// Il2CppName: SwitchCurrentControlScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::StringW, ::ArrayW<::UnityEngine::InputSystem::InputDevice*>)>(&UnityEngine::InputSystem::PlayerInput::SwitchCurrentControlScheme)> {
  static const MethodInfo* get() {
    static auto* controlScheme = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* devices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "SwitchCurrentControlScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{controlScheme, devices});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::SwitchCurrentActionMap
// Il2CppName: SwitchCurrentActionMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::StringW)>(&UnityEngine::InputSystem::PlayerInput::SwitchCurrentActionMap)> {
  static const MethodInfo* get() {
    static auto* mapNameOrId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "SwitchCurrentActionMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mapNameOrId});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::GetPlayerByIndex
// Il2CppName: GetPlayerByIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::PlayerInput* (*)(int)>(&UnityEngine::InputSystem::PlayerInput::GetPlayerByIndex)> {
  static const MethodInfo* get() {
    static auto* playerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "GetPlayerByIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::FindFirstPairedToDevice
// Il2CppName: FindFirstPairedToDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::PlayerInput* (*)(::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::PlayerInput::FindFirstPairedToDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "FindFirstPairedToDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::Instantiate
// Il2CppName: Instantiate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::PlayerInput* (*)(::UnityEngine::GameObject*, int, ::StringW, int, ::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::PlayerInput::Instantiate)> {
  static const MethodInfo* get() {
    static auto* prefab = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* playerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* controlScheme = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* splitScreenIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* pairWithDevice = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "Instantiate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefab, playerIndex, controlScheme, splitScreenIndex, pairWithDevice});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::Instantiate
// Il2CppName: Instantiate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::PlayerInput* (*)(::UnityEngine::GameObject*, int, ::StringW, int, ::ArrayW<::UnityEngine::InputSystem::InputDevice*>)>(&UnityEngine::InputSystem::PlayerInput::Instantiate)> {
  static const MethodInfo* get() {
    static auto* prefab = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* playerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* controlScheme = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* splitScreenIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* pairWithDevices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "Instantiate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefab, playerIndex, controlScheme, splitScreenIndex, pairWithDevices});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::DoInstantiate
// Il2CppName: DoInstantiate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::PlayerInput* (*)(::UnityEngine::GameObject*)>(&UnityEngine::InputSystem::PlayerInput::DoInstantiate)> {
  static const MethodInfo* get() {
    static auto* prefab = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "DoInstantiate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefab});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::InitializeActions
// Il2CppName: InitializeActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::InitializeActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "InitializeActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::UninitializeActions
// Il2CppName: UninitializeActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::UninitializeActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "UninitializeActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::InstallOnActionTriggeredHook
// Il2CppName: InstallOnActionTriggeredHook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::InstallOnActionTriggeredHook)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "InstallOnActionTriggeredHook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::UninstallOnActionTriggeredHook
// Il2CppName: UninstallOnActionTriggeredHook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::UninstallOnActionTriggeredHook)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "UninstallOnActionTriggeredHook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::OnActionTriggered
// Il2CppName: OnActionTriggered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::PlayerInput::OnActionTriggered)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "OnActionTriggered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::CacheMessageNames
// Il2CppName: CacheMessageNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::CacheMessageNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "CacheMessageNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::ClearCaches
// Il2CppName: ClearCaches
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::ClearCaches)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "ClearCaches", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::AssignUserAndDevices
// Il2CppName: AssignUserAndDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::AssignUserAndDevices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "AssignUserAndDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::HaveBindingForDevice
// Il2CppName: HaveBindingForDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::PlayerInput::*)(::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::PlayerInput::HaveBindingForDevice)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "HaveBindingForDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::UnassignUserAndDevices
// Il2CppName: UnassignUserAndDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::UnassignUserAndDevices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "UnassignUserAndDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::TryToActivateControlScheme
// Il2CppName: TryToActivateControlScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::PlayerInput::*)(::UnityEngine::InputSystem::InputControlScheme)>(&UnityEngine::InputSystem::PlayerInput::TryToActivateControlScheme)> {
  static const MethodInfo* get() {
    static auto* controlScheme = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControlScheme")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "TryToActivateControlScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{controlScheme});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::AssignPlayerIndex
// Il2CppName: AssignPlayerIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::AssignPlayerIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "AssignPlayerIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::StartListeningForUnpairedDeviceActivity
// Il2CppName: StartListeningForUnpairedDeviceActivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::StartListeningForUnpairedDeviceActivity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "StartListeningForUnpairedDeviceActivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::StopListeningForUnpairedDeviceActivity
// Il2CppName: StopListeningForUnpairedDeviceActivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::StopListeningForUnpairedDeviceActivity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "StopListeningForUnpairedDeviceActivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::StartListeningForDeviceChanges
// Il2CppName: StartListeningForDeviceChanges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::StartListeningForDeviceChanges)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "StartListeningForDeviceChanges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::StopListeningForDeviceChanges
// Il2CppName: StopListeningForDeviceChanges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::StopListeningForDeviceChanges)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "StopListeningForDeviceChanges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::DebugLogAction
// Il2CppName: DebugLogAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::InputSystem::PlayerInput::DebugLogAction)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "DebugLogAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::HandleDeviceLost
// Il2CppName: HandleDeviceLost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::HandleDeviceLost)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "HandleDeviceLost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::HandleDeviceRegained
// Il2CppName: HandleDeviceRegained
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::HandleDeviceRegained)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "HandleDeviceRegained", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::HandleControlsChanged
// Il2CppName: HandleControlsChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)()>(&UnityEngine::InputSystem::PlayerInput::HandleControlsChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "HandleControlsChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::OnUserChange
// Il2CppName: OnUserChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::Users::InputUser, ::UnityEngine::InputSystem::Users::InputUserChange, ::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::PlayerInput::OnUserChange)> {
  static const MethodInfo* get() {
    static auto* user = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Users", "InputUser")->byval_arg;
    static auto* change = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Users", "InputUserChange")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "OnUserChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{user, change, device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::OnUnpairedDeviceUsed
// Il2CppName: OnUnpairedDeviceUsed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr)>(&UnityEngine::InputSystem::PlayerInput::OnUnpairedDeviceUsed)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* eventPtr = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "OnUnpairedDeviceUsed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control, eventPtr});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::OnDeviceChange
// Il2CppName: OnDeviceChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::PlayerInput::*)(::UnityEngine::InputSystem::InputDevice*, ::UnityEngine::InputSystem::InputDeviceChange)>(&UnityEngine::InputSystem::PlayerInput::OnDeviceChange)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    static auto* change = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDeviceChange")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput*), "OnDeviceChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, change});
  }
};
