// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.LowLevel.InputEventTrace
#include "UnityEngine/InputSystem/LowLevel/InputEventTrace.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: UnityEngine.InputSystem.LowLevel.InputEventPtr
#include "UnityEngine/InputSystem/LowLevel/InputEventPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator*, "UnityEngine.InputSystem.LowLevel", "InputEventTrace/Enumerator");
// Type namespace: UnityEngine.InputSystem.LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.LowLevel.InputEventTrace/UnityEngine.InputSystem.LowLevel.Enumerator
  // [TokenAttribute] Offset: FFFFFFFF
  class InputEventTrace::Enumerator : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*/ {
    public:
    public:
    // private UnityEngine.InputSystem.LowLevel.InputEventTrace m_Trace
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::InputSystem::LowLevel::InputEventTrace* m_Trace;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::LowLevel::InputEventTrace*) == 0x8);
    // private System.Int32 m_ChangeCounter
    // Size: 0x4
    // Offset: 0x18
    int m_ChangeCounter;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_ChangeCounter and: m_Current
    char __padding1[0x4] = {};
    // UnityEngine.InputSystem.LowLevel.InputEventPtr m_Current
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::InputSystem::LowLevel::InputEventPtr m_Current;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::LowLevel::InputEventPtr) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>
    operator ::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::LowLevel::InputEventPtr>*>(this);
    }
    // Get instance field reference: private UnityEngine.InputSystem.LowLevel.InputEventTrace m_Trace
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::LowLevel::InputEventTrace*& dyn_m_Trace();
    // Get instance field reference: private System.Int32 m_ChangeCounter
    [[deprecated("Use field access instead!")]] int& dyn_m_ChangeCounter();
    // Get instance field reference: UnityEngine.InputSystem.LowLevel.InputEventPtr m_Current
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::LowLevel::InputEventPtr& dyn_m_Current();
    // public UnityEngine.InputSystem.LowLevel.InputEventPtr get_Current()
    // Offset: 0x11A9EC4
    ::UnityEngine::InputSystem::LowLevel::InputEventPtr get_Current();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0x11A9ECC
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
    // public System.Void .ctor(UnityEngine.InputSystem.LowLevel.InputEventTrace trace)
    // Offset: 0x11A960C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputEventTrace::Enumerator* New_ctor(::UnityEngine::InputSystem::LowLevel::InputEventTrace* trace) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputEventTrace::Enumerator*, creationType>(trace)));
    }
    // public System.Void Dispose()
    // Offset: 0x11A9DB0
    void Dispose();
    // public System.Boolean MoveNext()
    // Offset: 0x11A9DBC
    bool MoveNext();
    // public System.Void Reset()
    // Offset: 0x11A9EA0
    void Reset();
  }; // UnityEngine.InputSystem.LowLevel.InputEventTrace/UnityEngine.InputSystem.LowLevel.Enumerator
  #pragma pack(pop)
  static check_size<sizeof(InputEventTrace::Enumerator), 32 + sizeof(::UnityEngine::InputSystem::LowLevel::InputEventPtr)> __UnityEngine_InputSystem_LowLevel_InputEventTrace_EnumeratorSizeCheck;
  static_assert(sizeof(InputEventTrace::Enumerator) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::get_Current
// Il2CppName: get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::LowLevel::InputEventPtr (UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::*)()>(&UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator*), "get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::*)()>(&UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::System_Collections_IEnumerator_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::*)()>(&UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::*)()>(&UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::*)()>(&UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEventTrace::Enumerator*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
