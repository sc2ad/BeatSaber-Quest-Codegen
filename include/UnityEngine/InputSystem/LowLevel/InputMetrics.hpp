// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: UnityEngine.InputSystem.LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Forward declaring type: InputMetrics
  struct InputMetrics;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::LowLevel::InputMetrics, "UnityEngine.InputSystem.LowLevel", "InputMetrics");
// Type namespace: UnityEngine.InputSystem.LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Size: 0x38
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.LowLevel.InputMetrics
  // [TokenAttribute] Offset: FFFFFFFF
  struct InputMetrics/*, public ::System::ValueType*/ {
    public:
    public:
    // private System.Int32 <maxNumDevices>k__BackingField
    // Size: 0x4
    // Offset: 0x0
    int maxNumDevices;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <currentNumDevices>k__BackingField
    // Size: 0x4
    // Offset: 0x4
    int currentNumDevices;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <maxStateSizeInBytes>k__BackingField
    // Size: 0x4
    // Offset: 0x8
    int maxStateSizeInBytes;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <currentStateSizeInBytes>k__BackingField
    // Size: 0x4
    // Offset: 0xC
    int currentStateSizeInBytes;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <currentControlCount>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    int currentControlCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <currentLayoutCount>k__BackingField
    // Size: 0x4
    // Offset: 0x14
    int currentLayoutCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <totalEventBytes>k__BackingField
    // Size: 0x4
    // Offset: 0x18
    int totalEventBytes;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <totalEventCount>k__BackingField
    // Size: 0x4
    // Offset: 0x1C
    int totalEventCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <totalUpdateCount>k__BackingField
    // Size: 0x4
    // Offset: 0x20
    int totalUpdateCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: totalUpdateCount and: totalEventProcessingTime
    char __padding8[0x4] = {};
    // private System.Double <totalEventProcessingTime>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    double totalEventProcessingTime;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // private System.Double <totalEventLagTime>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    double totalEventLagTime;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    public:
    // Creating value type constructor for type: InputMetrics
    constexpr InputMetrics(int maxNumDevices_ = {}, int currentNumDevices_ = {}, int maxStateSizeInBytes_ = {}, int currentStateSizeInBytes_ = {}, int currentControlCount_ = {}, int currentLayoutCount_ = {}, int totalEventBytes_ = {}, int totalEventCount_ = {}, int totalUpdateCount_ = {}, double totalEventProcessingTime_ = {}, double totalEventLagTime_ = {}) noexcept : maxNumDevices{maxNumDevices_}, currentNumDevices{currentNumDevices_}, maxStateSizeInBytes{maxStateSizeInBytes_}, currentStateSizeInBytes{currentStateSizeInBytes_}, currentControlCount{currentControlCount_}, currentLayoutCount{currentLayoutCount_}, totalEventBytes{totalEventBytes_}, totalEventCount{totalEventCount_}, totalUpdateCount{totalUpdateCount_}, totalEventProcessingTime{totalEventProcessingTime_}, totalEventLagTime{totalEventLagTime_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private System.Int32 <maxNumDevices>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$maxNumDevices$k__BackingField();
    // Get instance field reference: private System.Int32 <currentNumDevices>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$currentNumDevices$k__BackingField();
    // Get instance field reference: private System.Int32 <maxStateSizeInBytes>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$maxStateSizeInBytes$k__BackingField();
    // Get instance field reference: private System.Int32 <currentStateSizeInBytes>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$currentStateSizeInBytes$k__BackingField();
    // Get instance field reference: private System.Int32 <currentControlCount>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$currentControlCount$k__BackingField();
    // Get instance field reference: private System.Int32 <currentLayoutCount>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$currentLayoutCount$k__BackingField();
    // Get instance field reference: private System.Int32 <totalEventBytes>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$totalEventBytes$k__BackingField();
    // Get instance field reference: private System.Int32 <totalEventCount>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$totalEventCount$k__BackingField();
    // Get instance field reference: private System.Int32 <totalUpdateCount>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$totalUpdateCount$k__BackingField();
    // Get instance field reference: private System.Double <totalEventProcessingTime>k__BackingField
    [[deprecated("Use field access instead!")]] double& dyn_$totalEventProcessingTime$k__BackingField();
    // Get instance field reference: private System.Double <totalEventLagTime>k__BackingField
    [[deprecated("Use field access instead!")]] double& dyn_$totalEventLagTime$k__BackingField();
    // public System.Int32 get_maxNumDevices()
    // Offset: 0xA56680
    int get_maxNumDevices();
    // public System.Void set_maxNumDevices(System.Int32 value)
    // Offset: 0xA56688
    void set_maxNumDevices(int value);
    // public System.Int32 get_currentNumDevices()
    // Offset: 0xA56690
    int get_currentNumDevices();
    // public System.Void set_currentNumDevices(System.Int32 value)
    // Offset: 0xA56698
    void set_currentNumDevices(int value);
    // public System.Int32 get_maxStateSizeInBytes()
    // Offset: 0xA566A0
    int get_maxStateSizeInBytes();
    // public System.Void set_maxStateSizeInBytes(System.Int32 value)
    // Offset: 0xA566A8
    void set_maxStateSizeInBytes(int value);
    // public System.Int32 get_currentStateSizeInBytes()
    // Offset: 0xA566B0
    int get_currentStateSizeInBytes();
    // public System.Void set_currentStateSizeInBytes(System.Int32 value)
    // Offset: 0xA566B8
    void set_currentStateSizeInBytes(int value);
    // public System.Int32 get_currentControlCount()
    // Offset: 0xA566C0
    int get_currentControlCount();
    // public System.Void set_currentControlCount(System.Int32 value)
    // Offset: 0xA566C8
    void set_currentControlCount(int value);
    // public System.Int32 get_currentLayoutCount()
    // Offset: 0xA566D0
    int get_currentLayoutCount();
    // public System.Void set_currentLayoutCount(System.Int32 value)
    // Offset: 0xA566D8
    void set_currentLayoutCount(int value);
    // public System.Int32 get_totalEventBytes()
    // Offset: 0xA566E0
    int get_totalEventBytes();
    // public System.Void set_totalEventBytes(System.Int32 value)
    // Offset: 0xA566E8
    void set_totalEventBytes(int value);
    // public System.Int32 get_totalEventCount()
    // Offset: 0xA566F0
    int get_totalEventCount();
    // public System.Void set_totalEventCount(System.Int32 value)
    // Offset: 0xA566F8
    void set_totalEventCount(int value);
    // public System.Int32 get_totalUpdateCount()
    // Offset: 0xA56700
    int get_totalUpdateCount();
    // public System.Void set_totalUpdateCount(System.Int32 value)
    // Offset: 0xA56708
    void set_totalUpdateCount(int value);
    // public System.Double get_totalEventProcessingTime()
    // Offset: 0xA56710
    double get_totalEventProcessingTime();
    // public System.Void set_totalEventProcessingTime(System.Double value)
    // Offset: 0xA56718
    void set_totalEventProcessingTime(double value);
    // public System.Double get_totalEventLagTime()
    // Offset: 0xA56720
    double get_totalEventLagTime();
    // public System.Void set_totalEventLagTime(System.Double value)
    // Offset: 0xA56728
    void set_totalEventLagTime(double value);
    // public System.Single get_averageEventBytesPerFrame()
    // Offset: 0xA56730
    float get_averageEventBytesPerFrame();
    // public System.Double get_averageProcessingTimePerEvent()
    // Offset: 0xA56748
    double get_averageProcessingTimePerEvent();
    // public System.Double get_averageLagTimePerEvent()
    // Offset: 0xA5675C
    double get_averageLagTimePerEvent();
  }; // UnityEngine.InputSystem.LowLevel.InputMetrics
  #pragma pack(pop)
  static check_size<sizeof(InputMetrics), 48 + sizeof(double)> __UnityEngine_InputSystem_LowLevel_InputMetricsSizeCheck;
  static_assert(sizeof(InputMetrics) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::get_maxNumDevices
// Il2CppName: get_maxNumDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::InputMetrics::*)()>(&UnityEngine::InputSystem::LowLevel::InputMetrics::get_maxNumDevices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "get_maxNumDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::set_maxNumDevices
// Il2CppName: set_maxNumDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputMetrics::*)(int)>(&UnityEngine::InputSystem::LowLevel::InputMetrics::set_maxNumDevices)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "set_maxNumDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::get_currentNumDevices
// Il2CppName: get_currentNumDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::InputMetrics::*)()>(&UnityEngine::InputSystem::LowLevel::InputMetrics::get_currentNumDevices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "get_currentNumDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::set_currentNumDevices
// Il2CppName: set_currentNumDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputMetrics::*)(int)>(&UnityEngine::InputSystem::LowLevel::InputMetrics::set_currentNumDevices)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "set_currentNumDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::get_maxStateSizeInBytes
// Il2CppName: get_maxStateSizeInBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::InputMetrics::*)()>(&UnityEngine::InputSystem::LowLevel::InputMetrics::get_maxStateSizeInBytes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "get_maxStateSizeInBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::set_maxStateSizeInBytes
// Il2CppName: set_maxStateSizeInBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputMetrics::*)(int)>(&UnityEngine::InputSystem::LowLevel::InputMetrics::set_maxStateSizeInBytes)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "set_maxStateSizeInBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::get_currentStateSizeInBytes
// Il2CppName: get_currentStateSizeInBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::InputMetrics::*)()>(&UnityEngine::InputSystem::LowLevel::InputMetrics::get_currentStateSizeInBytes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "get_currentStateSizeInBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::set_currentStateSizeInBytes
// Il2CppName: set_currentStateSizeInBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputMetrics::*)(int)>(&UnityEngine::InputSystem::LowLevel::InputMetrics::set_currentStateSizeInBytes)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "set_currentStateSizeInBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::get_currentControlCount
// Il2CppName: get_currentControlCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::InputMetrics::*)()>(&UnityEngine::InputSystem::LowLevel::InputMetrics::get_currentControlCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "get_currentControlCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::set_currentControlCount
// Il2CppName: set_currentControlCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputMetrics::*)(int)>(&UnityEngine::InputSystem::LowLevel::InputMetrics::set_currentControlCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "set_currentControlCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::get_currentLayoutCount
// Il2CppName: get_currentLayoutCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::InputMetrics::*)()>(&UnityEngine::InputSystem::LowLevel::InputMetrics::get_currentLayoutCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "get_currentLayoutCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::set_currentLayoutCount
// Il2CppName: set_currentLayoutCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputMetrics::*)(int)>(&UnityEngine::InputSystem::LowLevel::InputMetrics::set_currentLayoutCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "set_currentLayoutCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::get_totalEventBytes
// Il2CppName: get_totalEventBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::InputMetrics::*)()>(&UnityEngine::InputSystem::LowLevel::InputMetrics::get_totalEventBytes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "get_totalEventBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::set_totalEventBytes
// Il2CppName: set_totalEventBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputMetrics::*)(int)>(&UnityEngine::InputSystem::LowLevel::InputMetrics::set_totalEventBytes)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "set_totalEventBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::get_totalEventCount
// Il2CppName: get_totalEventCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::InputMetrics::*)()>(&UnityEngine::InputSystem::LowLevel::InputMetrics::get_totalEventCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "get_totalEventCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::set_totalEventCount
// Il2CppName: set_totalEventCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputMetrics::*)(int)>(&UnityEngine::InputSystem::LowLevel::InputMetrics::set_totalEventCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "set_totalEventCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::get_totalUpdateCount
// Il2CppName: get_totalUpdateCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::InputMetrics::*)()>(&UnityEngine::InputSystem::LowLevel::InputMetrics::get_totalUpdateCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "get_totalUpdateCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::set_totalUpdateCount
// Il2CppName: set_totalUpdateCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputMetrics::*)(int)>(&UnityEngine::InputSystem::LowLevel::InputMetrics::set_totalUpdateCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "set_totalUpdateCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::get_totalEventProcessingTime
// Il2CppName: get_totalEventProcessingTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (UnityEngine::InputSystem::LowLevel::InputMetrics::*)()>(&UnityEngine::InputSystem::LowLevel::InputMetrics::get_totalEventProcessingTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "get_totalEventProcessingTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::set_totalEventProcessingTime
// Il2CppName: set_totalEventProcessingTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputMetrics::*)(double)>(&UnityEngine::InputSystem::LowLevel::InputMetrics::set_totalEventProcessingTime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "set_totalEventProcessingTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::get_totalEventLagTime
// Il2CppName: get_totalEventLagTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (UnityEngine::InputSystem::LowLevel::InputMetrics::*)()>(&UnityEngine::InputSystem::LowLevel::InputMetrics::get_totalEventLagTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "get_totalEventLagTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::set_totalEventLagTime
// Il2CppName: set_totalEventLagTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputMetrics::*)(double)>(&UnityEngine::InputSystem::LowLevel::InputMetrics::set_totalEventLagTime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "set_totalEventLagTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::get_averageEventBytesPerFrame
// Il2CppName: get_averageEventBytesPerFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::LowLevel::InputMetrics::*)()>(&UnityEngine::InputSystem::LowLevel::InputMetrics::get_averageEventBytesPerFrame)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "get_averageEventBytesPerFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::get_averageProcessingTimePerEvent
// Il2CppName: get_averageProcessingTimePerEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (UnityEngine::InputSystem::LowLevel::InputMetrics::*)()>(&UnityEngine::InputSystem::LowLevel::InputMetrics::get_averageProcessingTimePerEvent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "get_averageProcessingTimePerEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputMetrics::get_averageLagTimePerEvent
// Il2CppName: get_averageLagTimePerEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (UnityEngine::InputSystem::LowLevel::InputMetrics::*)()>(&UnityEngine::InputSystem::LowLevel::InputMetrics::get_averageLagTimePerEvent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputMetrics), "get_averageLagTimePerEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
