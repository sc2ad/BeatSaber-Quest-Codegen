// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputControl
  class InputControl;
}
// Forward declaring namespace: UnityEngine::InputSystem::LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Forward declaring type: InputEventPtr
  struct InputEventPtr;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Forward declaring type: IInputStateChangeMonitor
  class IInputStateChangeMonitor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::LowLevel::IInputStateChangeMonitor);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::LowLevel::IInputStateChangeMonitor*, "UnityEngine.InputSystem.LowLevel", "IInputStateChangeMonitor");
// Type namespace: UnityEngine.InputSystem.LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.LowLevel.IInputStateChangeMonitor
  // [TokenAttribute] Offset: FFFFFFFF
  class IInputStateChangeMonitor {
    public:
    // public System.Void NotifyControlStateChanged(UnityEngine.InputSystem.InputControl control, System.Double time, UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, System.Int64 monitorIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void NotifyControlStateChanged(::UnityEngine::InputSystem::InputControl* control, double time, ::UnityEngine::InputSystem::LowLevel::InputEventPtr eventPtr, int64_t monitorIndex);
    // public System.Void NotifyTimerExpired(UnityEngine.InputSystem.InputControl control, System.Double time, System.Int64 monitorIndex, System.Int32 timerIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void NotifyTimerExpired(::UnityEngine::InputSystem::InputControl* control, double time, int64_t monitorIndex, int timerIndex);
  }; // UnityEngine.InputSystem.LowLevel.IInputStateChangeMonitor
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputStateChangeMonitor::NotifyControlStateChanged
// Il2CppName: NotifyControlStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::IInputStateChangeMonitor::*)(::UnityEngine::InputSystem::InputControl*, double, ::UnityEngine::InputSystem::LowLevel::InputEventPtr, int64_t)>(&UnityEngine::InputSystem::LowLevel::IInputStateChangeMonitor::NotifyControlStateChanged)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* eventPtr = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr")->byval_arg;
    static auto* monitorIndex = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputStateChangeMonitor*), "NotifyControlStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control, time, eventPtr, monitorIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputStateChangeMonitor::NotifyTimerExpired
// Il2CppName: NotifyTimerExpired
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::IInputStateChangeMonitor::*)(::UnityEngine::InputSystem::InputControl*, double, int64_t, int)>(&UnityEngine::InputSystem::LowLevel::IInputStateChangeMonitor::NotifyTimerExpired)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* monitorIndex = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* timerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputStateChangeMonitor*), "NotifyTimerExpired", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control, time, monitorIndex, timerIndex});
  }
};
