// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.LowLevel.InputUpdateType
#include "UnityEngine/InputSystem/LowLevel/InputUpdateType.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Forward declaring type: InputUpdateDelegate
  class InputUpdateDelegate;
  // Forward declaring type: InputEvent
  struct InputEvent;
  // Forward declaring type: InputDeviceCommand
  struct InputDeviceCommand;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: ScreenOrientation
  struct ScreenOrientation;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Forward declaring type: IInputRuntime
  class IInputRuntime;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::LowLevel::IInputRuntime);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::LowLevel::IInputRuntime*, "UnityEngine.InputSystem.LowLevel", "IInputRuntime");
// Type namespace: UnityEngine.InputSystem.LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.LowLevel.IInputRuntime
  // [TokenAttribute] Offset: FFFFFFFF
  class IInputRuntime {
    public:
    // public UnityEngine.InputSystem.LowLevel.InputUpdateDelegate get_onUpdate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::InputSystem::LowLevel::InputUpdateDelegate* get_onUpdate();
    // public System.Void set_onUpdate(UnityEngine.InputSystem.LowLevel.InputUpdateDelegate value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_onUpdate(::UnityEngine::InputSystem::LowLevel::InputUpdateDelegate* value);
    // public System.Action`1<UnityEngine.InputSystem.LowLevel.InputUpdateType> get_onBeforeUpdate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Action_1<::UnityEngine::InputSystem::LowLevel::InputUpdateType>* get_onBeforeUpdate();
    // public System.Void set_onBeforeUpdate(System.Action`1<UnityEngine.InputSystem.LowLevel.InputUpdateType> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_onBeforeUpdate(::System::Action_1<::UnityEngine::InputSystem::LowLevel::InputUpdateType>* value);
    // public System.Func`2<UnityEngine.InputSystem.LowLevel.InputUpdateType,System.Boolean> get_onShouldRunUpdate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Func_2<::UnityEngine::InputSystem::LowLevel::InputUpdateType, bool>* get_onShouldRunUpdate();
    // public System.Void set_onShouldRunUpdate(System.Func`2<UnityEngine.InputSystem.LowLevel.InputUpdateType,System.Boolean> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_onShouldRunUpdate(::System::Func_2<::UnityEngine::InputSystem::LowLevel::InputUpdateType, bool>* value);
    // public System.Action`2<System.Int32,System.String> get_onDeviceDiscovered()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Action_2<int, ::StringW>* get_onDeviceDiscovered();
    // public System.Void set_onDeviceDiscovered(System.Action`2<System.Int32,System.String> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_onDeviceDiscovered(::System::Action_2<int, ::StringW>* value);
    // public System.Action`1<System.Boolean> get_onPlayerFocusChanged()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Action_1<bool>* get_onPlayerFocusChanged();
    // public System.Void set_onPlayerFocusChanged(System.Action`1<System.Boolean> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_onPlayerFocusChanged(::System::Action_1<bool>* value);
    // public System.Action get_onShutdown()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Action* get_onShutdown();
    // public System.Void set_onShutdown(System.Action value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_onShutdown(::System::Action* value);
    // public System.Single get_pollingFrequency()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_pollingFrequency();
    // public System.Void set_pollingFrequency(System.Single value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_pollingFrequency(float value);
    // public System.Double get_currentTime()
    // Offset: 0xFFFFFFFFFFFFFFFF
    double get_currentTime();
    // public System.Double get_currentTimeForFixedUpdate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    double get_currentTimeForFixedUpdate();
    // public System.Single get_unscaledGameTime()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_unscaledGameTime();
    // public System.Double get_currentTimeOffsetToRealtimeSinceStartup()
    // Offset: 0xFFFFFFFFFFFFFFFF
    double get_currentTimeOffsetToRealtimeSinceStartup();
    // public System.Boolean get_runInBackground()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_runInBackground();
    // public UnityEngine.ScreenOrientation get_screenOrientation()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::ScreenOrientation get_screenOrientation();
    // public System.Boolean get_isInBatchMode()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_isInBatchMode();
    // public System.Int32 AllocateDeviceId()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int AllocateDeviceId();
    // public System.Void Update(UnityEngine.InputSystem.LowLevel.InputUpdateType type)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Update(::UnityEngine::InputSystem::LowLevel::InputUpdateType type);
    // public System.Void QueueEvent(UnityEngine.InputSystem.LowLevel.InputEvent* ptr)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void QueueEvent(::UnityEngine::InputSystem::LowLevel::InputEvent* ptr);
    // public System.Int64 DeviceCommand(System.Int32 deviceId, UnityEngine.InputSystem.LowLevel.InputDeviceCommand* commandPtr)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int64_t DeviceCommand(int deviceId, ::UnityEngine::InputSystem::LowLevel::InputDeviceCommand* commandPtr);
  }; // UnityEngine.InputSystem.LowLevel.IInputRuntime
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::get_onUpdate
// Il2CppName: get_onUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::LowLevel::InputUpdateDelegate* (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)()>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::get_onUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "get_onUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::set_onUpdate
// Il2CppName: set_onUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)(::UnityEngine::InputSystem::LowLevel::InputUpdateDelegate*)>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::set_onUpdate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputUpdateDelegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "set_onUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::get_onBeforeUpdate
// Il2CppName: get_onBeforeUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_1<::UnityEngine::InputSystem::LowLevel::InputUpdateType>* (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)()>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::get_onBeforeUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "get_onBeforeUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::set_onBeforeUpdate
// Il2CppName: set_onBeforeUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)(::System::Action_1<::UnityEngine::InputSystem::LowLevel::InputUpdateType>*)>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::set_onBeforeUpdate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputUpdateType")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "set_onBeforeUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::get_onShouldRunUpdate
// Il2CppName: get_onShouldRunUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_2<::UnityEngine::InputSystem::LowLevel::InputUpdateType, bool>* (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)()>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::get_onShouldRunUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "get_onShouldRunUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::set_onShouldRunUpdate
// Il2CppName: set_onShouldRunUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)(::System::Func_2<::UnityEngine::InputSystem::LowLevel::InputUpdateType, bool>*)>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::set_onShouldRunUpdate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputUpdateType"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "set_onShouldRunUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::get_onDeviceDiscovered
// Il2CppName: get_onDeviceDiscovered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_2<int, ::StringW>* (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)()>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::get_onDeviceDiscovered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "get_onDeviceDiscovered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::set_onDeviceDiscovered
// Il2CppName: set_onDeviceDiscovered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)(::System::Action_2<int, ::StringW>*)>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::set_onDeviceDiscovered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "set_onDeviceDiscovered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::get_onPlayerFocusChanged
// Il2CppName: get_onPlayerFocusChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_1<bool>* (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)()>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::get_onPlayerFocusChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "get_onPlayerFocusChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::set_onPlayerFocusChanged
// Il2CppName: set_onPlayerFocusChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)(::System::Action_1<bool>*)>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::set_onPlayerFocusChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "set_onPlayerFocusChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::get_onShutdown
// Il2CppName: get_onShutdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action* (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)()>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::get_onShutdown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "get_onShutdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::set_onShutdown
// Il2CppName: set_onShutdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)(::System::Action*)>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::set_onShutdown)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "set_onShutdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::get_pollingFrequency
// Il2CppName: get_pollingFrequency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)()>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::get_pollingFrequency)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "get_pollingFrequency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::set_pollingFrequency
// Il2CppName: set_pollingFrequency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)(float)>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::set_pollingFrequency)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "set_pollingFrequency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::get_currentTime
// Il2CppName: get_currentTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)()>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::get_currentTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "get_currentTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::get_currentTimeForFixedUpdate
// Il2CppName: get_currentTimeForFixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)()>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::get_currentTimeForFixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "get_currentTimeForFixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::get_unscaledGameTime
// Il2CppName: get_unscaledGameTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)()>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::get_unscaledGameTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "get_unscaledGameTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::get_currentTimeOffsetToRealtimeSinceStartup
// Il2CppName: get_currentTimeOffsetToRealtimeSinceStartup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)()>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::get_currentTimeOffsetToRealtimeSinceStartup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "get_currentTimeOffsetToRealtimeSinceStartup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::get_runInBackground
// Il2CppName: get_runInBackground
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)()>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::get_runInBackground)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "get_runInBackground", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::get_screenOrientation
// Il2CppName: get_screenOrientation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ScreenOrientation (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)()>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::get_screenOrientation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "get_screenOrientation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::get_isInBatchMode
// Il2CppName: get_isInBatchMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)()>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::get_isInBatchMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "get_isInBatchMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::AllocateDeviceId
// Il2CppName: AllocateDeviceId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)()>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::AllocateDeviceId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "AllocateDeviceId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)(::UnityEngine::InputSystem::LowLevel::InputUpdateType)>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::Update)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputUpdateType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::QueueEvent
// Il2CppName: QueueEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)(::UnityEngine::InputSystem::LowLevel::InputEvent*)>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::QueueEvent)> {
  static const MethodInfo* get() {
    static auto* ptr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEvent"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "QueueEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IInputRuntime::DeviceCommand
// Il2CppName: DeviceCommand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (UnityEngine::InputSystem::LowLevel::IInputRuntime::*)(int, ::UnityEngine::InputSystem::LowLevel::InputDeviceCommand*)>(&UnityEngine::InputSystem::LowLevel::IInputRuntime::DeviceCommand)> {
  static const MethodInfo* get() {
    static auto* deviceId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* commandPtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputDeviceCommand"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IInputRuntime*), "DeviceCommand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deviceId, commandPtr});
  }
};
