// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::LowLevel
namespace UnityEngine::InputSystem::LowLevel {
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerator`1<T>
  template<typename T>
  class IEnumerator_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Forward declaring type: IMECompositionString
  struct IMECompositionString;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::LowLevel::IMECompositionString, "UnityEngine.InputSystem.LowLevel", "IMECompositionString");
// Type namespace: UnityEngine.InputSystem.LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Size: 0x6
  #pragma pack(push, 1)
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.LowLevel.IMECompositionString
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 958C7C
  struct IMECompositionString/*, public ::System::ValueType, public ::System::Collections::Generic::IEnumerable_1<::Il2CppChar>*/ {
    public:
    // Nested type: ::UnityEngine::InputSystem::LowLevel::IMECompositionString::Enumerator
    struct Enumerator;
    // Nested type: ::UnityEngine::InputSystem::LowLevel::IMECompositionString::$buffer$e__FixedBuffer
    struct $buffer$e__FixedBuffer;
    // Size: 0x2
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.InputSystem.LowLevel.IMECompositionString/UnityEngine.InputSystem.LowLevel.<buffer>e__FixedBuffer
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    // [UnsafeValueTypeAttribute] Offset: FFFFFFFF
    struct $buffer$e__FixedBuffer/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.Char FixedElementField
      // Size: 0x2
      // Offset: 0x0
      ::Il2CppChar FixedElementField;
      // Field size check
      static_assert(sizeof(::Il2CppChar) == 0x2);
      public:
      // Creating value type constructor for type: $buffer$e__FixedBuffer
      constexpr $buffer$e__FixedBuffer(::Il2CppChar FixedElementField_ = {}) noexcept : FixedElementField{FixedElementField_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Creating conversion operator: operator ::Il2CppChar
      constexpr operator ::Il2CppChar() const noexcept {
        return FixedElementField;
      }
      // Get instance field reference: public System.Char FixedElementField
      [[deprecated("Use field access instead!")]] ::Il2CppChar& dyn_FixedElementField();
    }; // UnityEngine.InputSystem.LowLevel.IMECompositionString/UnityEngine.InputSystem.LowLevel.<buffer>e__FixedBuffer
    #pragma pack(pop)
    static check_size<sizeof(IMECompositionString::$buffer$e__FixedBuffer), 0 + sizeof(::Il2CppChar)> __UnityEngine_InputSystem_LowLevel_IMECompositionString_$buffer$e__FixedBufferSizeCheck;
    static_assert(sizeof(IMECompositionString::$buffer$e__FixedBuffer) == 0x2);
    public:
    // private System.Int32 size
    // Size: 0x4
    // Offset: 0x0
    int size;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [FixedBufferAttribute] Offset: 0x9609A4
    // private UnityEngine.InputSystem.LowLevel.IMECompositionString/UnityEngine.InputSystem.LowLevel.<buffer>e__FixedBuffer buffer
    // Size: 0x2
    // Offset: 0x4
    ::UnityEngine::InputSystem::LowLevel::IMECompositionString::$buffer$e__FixedBuffer buffer;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::LowLevel::IMECompositionString::$buffer$e__FixedBuffer) == 0x2);
    public:
    // Creating value type constructor for type: IMECompositionString
    constexpr IMECompositionString(int size_ = {}, ::UnityEngine::InputSystem::LowLevel::IMECompositionString::$buffer$e__FixedBuffer buffer_ = {}) noexcept : size{size_}, buffer{buffer_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerable_1<::Il2CppChar>
    operator ::System::Collections::Generic::IEnumerable_1<::Il2CppChar>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::Il2CppChar>*>(this);
    }
    // Get instance field reference: private System.Int32 size
    [[deprecated("Use field access instead!")]] int& dyn_size();
    // Get instance field reference: private UnityEngine.InputSystem.LowLevel.IMECompositionString/UnityEngine.InputSystem.LowLevel.<buffer>e__FixedBuffer buffer
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::LowLevel::IMECompositionString::$buffer$e__FixedBuffer& dyn_buffer();
    // public System.Int32 get_Count()
    // Offset: 0xA55F84
    int get_Count();
    // public System.Char get_Item(System.Int32 index)
    // Offset: 0xA55F8C
    ::Il2CppChar get_Item(int index);
    // public System.Void .ctor(System.String characters)
    // Offset: 0xA55F94
    IMECompositionString(::StringW characters);
    // public System.Collections.Generic.IEnumerator`1<System.Char> GetEnumerator()
    // Offset: 0xA55FB4
    ::System::Collections::Generic::IEnumerator_1<::Il2CppChar>* GetEnumerator();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0xA55FBC
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // public override System.String ToString()
    // Offset: 0xA55F9C
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // UnityEngine.InputSystem.LowLevel.IMECompositionString
  #pragma pack(pop)
  static check_size<sizeof(IMECompositionString), 4 + sizeof(::UnityEngine::InputSystem::LowLevel::IMECompositionString::$buffer$e__FixedBuffer)> __UnityEngine_InputSystem_LowLevel_IMECompositionStringSizeCheck;
  static_assert(sizeof(IMECompositionString) == 0x6);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::LowLevel::IMECompositionString::$buffer$e__FixedBuffer, "UnityEngine.InputSystem.LowLevel", "IMECompositionString/<buffer>e__FixedBuffer");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IMECompositionString::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::IMECompositionString::*)()>(&UnityEngine::InputSystem::LowLevel::IMECompositionString::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IMECompositionString), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IMECompositionString::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (UnityEngine::InputSystem::LowLevel::IMECompositionString::*)(int)>(&UnityEngine::InputSystem::LowLevel::IMECompositionString::get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IMECompositionString), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IMECompositionString::IMECompositionString
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IMECompositionString::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<::Il2CppChar>* (UnityEngine::InputSystem::LowLevel::IMECompositionString::*)()>(&UnityEngine::InputSystem::LowLevel::IMECompositionString::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IMECompositionString), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IMECompositionString::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::InputSystem::LowLevel::IMECompositionString::*)()>(&UnityEngine::InputSystem::LowLevel::IMECompositionString::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IMECompositionString), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::IMECompositionString::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::LowLevel::IMECompositionString::*)()>(&UnityEngine::InputSystem::LowLevel::IMECompositionString::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::IMECompositionString), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
