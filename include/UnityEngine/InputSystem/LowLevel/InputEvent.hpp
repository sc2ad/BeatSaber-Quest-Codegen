// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngineInternal.Input.NativeInputEvent
#include "UnityEngineInternal/Input/NativeInputEvent.hpp"
// Including type: System.UInt32
#include "System/UInt32.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: FourCC
  struct FourCC;
}
// Forward declaring namespace: UnityEngine::InputSystem::LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Forward declaring type: InputEventBuffer
  struct InputEventBuffer;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Forward declaring type: InputEvent
  struct InputEvent;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::LowLevel::InputEvent, "UnityEngine.InputSystem.LowLevel", "InputEvent");
// Type namespace: UnityEngine.InputSystem.LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Size: 0x14
  #pragma pack(push, 1)
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.LowLevel.InputEvent
  // [TokenAttribute] Offset: FFFFFFFF
  struct InputEvent/*, public ::System::ValueType*/ {
    public:
    public:
    // private UnityEngineInternal.Input.NativeInputEvent m_Event
    // Size: 0x14
    // Offset: 0x0
    ::UnityEngineInternal::Input::NativeInputEvent m_Event;
    // Field size check
    static_assert(sizeof(::UnityEngineInternal::Input::NativeInputEvent) == 0x14);
    public:
    // Creating value type constructor for type: InputEvent
    constexpr InputEvent(::UnityEngineInternal::Input::NativeInputEvent m_Event_ = {}) noexcept : m_Event{m_Event_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating conversion operator: operator ::UnityEngineInternal::Input::NativeInputEvent
    constexpr operator ::UnityEngineInternal::Input::NativeInputEvent() const noexcept {
      return m_Event;
    }
    // static field const value: static private System.UInt32 kHandledMask
    static constexpr const uint kHandledMask = 2147483648u;
    // Get static field: static private System.UInt32 kHandledMask
    static uint _get_kHandledMask();
    // Set static field: static private System.UInt32 kHandledMask
    static void _set_kHandledMask(uint value);
    // static field const value: static private System.UInt32 kIdMask
    static constexpr const uint kIdMask = 2147483647u;
    // Get static field: static private System.UInt32 kIdMask
    static uint _get_kIdMask();
    // Set static field: static private System.UInt32 kIdMask
    static void _set_kIdMask(uint value);
    // static field const value: static System.Int32 kBaseEventSize
    static constexpr const int kBaseEventSize = 20;
    // Get static field: static System.Int32 kBaseEventSize
    static int _get_kBaseEventSize();
    // Set static field: static System.Int32 kBaseEventSize
    static void _set_kBaseEventSize(int value);
    // static field const value: static public System.Int32 InvalidEventId
    static constexpr const int InvalidEventId = 0;
    // Get static field: static public System.Int32 InvalidEventId
    static int _get_InvalidEventId();
    // Set static field: static public System.Int32 InvalidEventId
    static void _set_InvalidEventId(int value);
    // static field const value: static System.Int32 kAlignment
    static constexpr const int kAlignment = 4;
    // Get static field: static System.Int32 kAlignment
    static int _get_kAlignment();
    // Set static field: static System.Int32 kAlignment
    static void _set_kAlignment(int value);
    // Get instance field reference: private UnityEngineInternal.Input.NativeInputEvent m_Event
    [[deprecated("Use field access instead!")]] ::UnityEngineInternal::Input::NativeInputEvent& dyn_m_Event();
    // public UnityEngine.InputSystem.Utilities.FourCC get_type()
    // Offset: 0xA56134
    ::UnityEngine::InputSystem::Utilities::FourCC get_type();
    // public System.Void set_type(UnityEngine.InputSystem.Utilities.FourCC value)
    // Offset: 0xA5613C
    void set_type(::UnityEngine::InputSystem::Utilities::FourCC value);
    // public System.UInt32 get_sizeInBytes()
    // Offset: 0xA56144
    uint get_sizeInBytes();
    // public System.Void set_sizeInBytes(System.UInt32 value)
    // Offset: 0xA5614C
    void set_sizeInBytes(uint value);
    // public System.Int32 get_eventId()
    // Offset: 0xA56154
    int get_eventId();
    // public System.Void set_eventId(System.Int32 value)
    // Offset: 0xA56160
    void set_eventId(int value);
    // public System.Int32 get_deviceId()
    // Offset: 0xA56174
    int get_deviceId();
    // public System.Void set_deviceId(System.Int32 value)
    // Offset: 0xA5617C
    void set_deviceId(int value);
    // public System.Double get_time()
    // Offset: 0xA56184
    double get_time();
    // public System.Void set_time(System.Double value)
    // Offset: 0xA561E0
    void set_time(double value);
    // System.Double get_internalTime()
    // Offset: 0xA56248
    double get_internalTime();
    // System.Void set_internalTime(System.Double value)
    // Offset: 0xA56250
    void set_internalTime(double value);
    // public System.Boolean get_handled()
    // Offset: 0xA56264
    bool get_handled();
    // public System.Void set_handled(System.Boolean value)
    // Offset: 0xA56270
    void set_handled(bool value);
    // public System.Void .ctor(UnityEngine.InputSystem.Utilities.FourCC type, System.Int32 sizeInBytes, System.Int32 deviceId, System.Double time)
    // Offset: 0xA56258
    InputEvent(::UnityEngine::InputSystem::Utilities::FourCC type, int sizeInBytes, int deviceId, double time);
    // static UnityEngine.InputSystem.LowLevel.InputEvent* GetNextInMemory(UnityEngine.InputSystem.LowLevel.InputEvent* currentPtr)
    // Offset: 0x11A61EC
    static ::UnityEngine::InputSystem::LowLevel::InputEvent* GetNextInMemory(::UnityEngine::InputSystem::LowLevel::InputEvent* currentPtr);
    // static UnityEngine.InputSystem.LowLevel.InputEvent* GetNextInMemoryChecked(UnityEngine.InputSystem.LowLevel.InputEvent* currentPtr, ref UnityEngine.InputSystem.LowLevel.InputEventBuffer buffer)
    // Offset: 0x11A621C
    static ::UnityEngine::InputSystem::LowLevel::InputEvent* GetNextInMemoryChecked(::UnityEngine::InputSystem::LowLevel::InputEvent* currentPtr, ByRef<::UnityEngine::InputSystem::LowLevel::InputEventBuffer> buffer);
    // static public System.Boolean Equals(UnityEngine.InputSystem.LowLevel.InputEvent* first, UnityEngine.InputSystem.LowLevel.InputEvent* second)
    // Offset: 0x11A63C4
    static bool Equals(::UnityEngine::InputSystem::LowLevel::InputEvent* first, ::UnityEngine::InputSystem::LowLevel::InputEvent* second);
    // public override System.String ToString()
    // Offset: 0xA5628C
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // UnityEngine.InputSystem.LowLevel.InputEvent
  #pragma pack(pop)
  static check_size<sizeof(InputEvent), 0 + sizeof(::UnityEngineInternal::Input::NativeInputEvent)> __UnityEngine_InputSystem_LowLevel_InputEventSizeCheck;
  static_assert(sizeof(InputEvent) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::get_type
// Il2CppName: get_type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::FourCC (UnityEngine::InputSystem::LowLevel::InputEvent::*)()>(&UnityEngine::InputSystem::LowLevel::InputEvent::get_type)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "get_type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::set_type
// Il2CppName: set_type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputEvent::*)(::UnityEngine::InputSystem::Utilities::FourCC)>(&UnityEngine::InputSystem::LowLevel::InputEvent::set_type)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Utilities", "FourCC")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "set_type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::get_sizeInBytes
// Il2CppName: get_sizeInBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (UnityEngine::InputSystem::LowLevel::InputEvent::*)()>(&UnityEngine::InputSystem::LowLevel::InputEvent::get_sizeInBytes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "get_sizeInBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::set_sizeInBytes
// Il2CppName: set_sizeInBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputEvent::*)(uint)>(&UnityEngine::InputSystem::LowLevel::InputEvent::set_sizeInBytes)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "set_sizeInBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::get_eventId
// Il2CppName: get_eventId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::InputEvent::*)()>(&UnityEngine::InputSystem::LowLevel::InputEvent::get_eventId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "get_eventId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::set_eventId
// Il2CppName: set_eventId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputEvent::*)(int)>(&UnityEngine::InputSystem::LowLevel::InputEvent::set_eventId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "set_eventId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::get_deviceId
// Il2CppName: get_deviceId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::InputEvent::*)()>(&UnityEngine::InputSystem::LowLevel::InputEvent::get_deviceId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "get_deviceId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::set_deviceId
// Il2CppName: set_deviceId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputEvent::*)(int)>(&UnityEngine::InputSystem::LowLevel::InputEvent::set_deviceId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "set_deviceId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::get_time
// Il2CppName: get_time
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (UnityEngine::InputSystem::LowLevel::InputEvent::*)()>(&UnityEngine::InputSystem::LowLevel::InputEvent::get_time)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "get_time", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::set_time
// Il2CppName: set_time
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputEvent::*)(double)>(&UnityEngine::InputSystem::LowLevel::InputEvent::set_time)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "set_time", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::get_internalTime
// Il2CppName: get_internalTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (UnityEngine::InputSystem::LowLevel::InputEvent::*)()>(&UnityEngine::InputSystem::LowLevel::InputEvent::get_internalTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "get_internalTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::set_internalTime
// Il2CppName: set_internalTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputEvent::*)(double)>(&UnityEngine::InputSystem::LowLevel::InputEvent::set_internalTime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "set_internalTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::get_handled
// Il2CppName: get_handled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::LowLevel::InputEvent::*)()>(&UnityEngine::InputSystem::LowLevel::InputEvent::get_handled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "get_handled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::set_handled
// Il2CppName: set_handled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::InputEvent::*)(bool)>(&UnityEngine::InputSystem::LowLevel::InputEvent::set_handled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "set_handled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::InputEvent
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::GetNextInMemory
// Il2CppName: GetNextInMemory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::LowLevel::InputEvent* (*)(::UnityEngine::InputSystem::LowLevel::InputEvent*)>(&UnityEngine::InputSystem::LowLevel::InputEvent::GetNextInMemory)> {
  static const MethodInfo* get() {
    static auto* currentPtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEvent"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "GetNextInMemory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{currentPtr});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::GetNextInMemoryChecked
// Il2CppName: GetNextInMemoryChecked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::LowLevel::InputEvent* (*)(::UnityEngine::InputSystem::LowLevel::InputEvent*, ByRef<::UnityEngine::InputSystem::LowLevel::InputEventBuffer>)>(&UnityEngine::InputSystem::LowLevel::InputEvent::GetNextInMemoryChecked)> {
  static const MethodInfo* get() {
    static auto* currentPtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEvent"))->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventBuffer")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "GetNextInMemoryChecked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{currentPtr, buffer});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::InputSystem::LowLevel::InputEvent*, ::UnityEngine::InputSystem::LowLevel::InputEvent*)>(&UnityEngine::InputSystem::LowLevel::InputEvent::Equals)> {
  static const MethodInfo* get() {
    static auto* first = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEvent"))->byval_arg;
    static auto* second = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEvent"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{first, second});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::InputEvent::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::LowLevel::InputEvent::*)()>(&UnityEngine::InputSystem::LowLevel::InputEvent::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::InputEvent), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
