// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.InputSystem.LowLevel.IInputEventTypeInfo
#include "UnityEngine/InputSystem/LowLevel/IInputEventTypeInfo.hpp"
// Including type: UnityEngine.InputSystem.LowLevel.InputEvent
#include "UnityEngine/InputSystem/LowLevel/InputEvent.hpp"
// Including type: UnityEngine.InputSystem.Utilities.FourCC
#include "UnityEngine/InputSystem/Utilities/FourCC.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Forward declaring type: InputEventPtr
  struct InputEventPtr;
}
// Forward declaring namespace: Unity::Collections
namespace Unity::Collections {
  // Forward declaring type: NativeArray`1<T>
  template<typename T>
  struct NativeArray_1;
  // Forward declaring type: Allocator
  struct Allocator;
}
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputControl
  class InputControl;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Forward declaring type: DeltaStateEvent
  struct DeltaStateEvent;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::LowLevel::DeltaStateEvent, "UnityEngine.InputSystem.LowLevel", "DeltaStateEvent");
// Type namespace: UnityEngine.InputSystem.LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Size: 0x1D
  #pragma pack(push, 1)
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.LowLevel.DeltaStateEvent
  // [TokenAttribute] Offset: FFFFFFFF
  struct DeltaStateEvent/*, public ::System::ValueType, public ::UnityEngine::InputSystem::LowLevel::IInputEventTypeInfo*/ {
    public:
    // Nested type: ::UnityEngine::InputSystem::LowLevel::DeltaStateEvent::$stateData$e__FixedBuffer
    struct $stateData$e__FixedBuffer;
    // Size: 0x1
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.InputSystem.LowLevel.DeltaStateEvent/UnityEngine.InputSystem.LowLevel.<stateData>e__FixedBuffer
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    // [UnsafeValueTypeAttribute] Offset: FFFFFFFF
    struct $stateData$e__FixedBuffer/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.Byte FixedElementField
      // Size: 0x1
      // Offset: 0x0
      uint8_t FixedElementField;
      // Field size check
      static_assert(sizeof(uint8_t) == 0x1);
      public:
      // Creating value type constructor for type: $stateData$e__FixedBuffer
      constexpr $stateData$e__FixedBuffer(uint8_t FixedElementField_ = {}) noexcept : FixedElementField{FixedElementField_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Creating conversion operator: operator uint8_t
      constexpr operator uint8_t() const noexcept {
        return FixedElementField;
      }
      // Get instance field reference: public System.Byte FixedElementField
      [[deprecated("Use field access instead!")]] uint8_t& dyn_FixedElementField();
    }; // UnityEngine.InputSystem.LowLevel.DeltaStateEvent/UnityEngine.InputSystem.LowLevel.<stateData>e__FixedBuffer
    #pragma pack(pop)
    static check_size<sizeof(DeltaStateEvent::$stateData$e__FixedBuffer), 0 + sizeof(uint8_t)> __UnityEngine_InputSystem_LowLevel_DeltaStateEvent_$stateData$e__FixedBufferSizeCheck;
    static_assert(sizeof(DeltaStateEvent::$stateData$e__FixedBuffer) == 0x1);
    public:
    // public UnityEngine.InputSystem.LowLevel.InputEvent baseEvent
    // Size: 0x14
    // Offset: 0x0
    ::UnityEngine::InputSystem::LowLevel::InputEvent baseEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::LowLevel::InputEvent) == 0x14);
    // public UnityEngine.InputSystem.Utilities.FourCC stateFormat
    // Size: 0x4
    // Offset: 0x14
    ::UnityEngine::InputSystem::Utilities::FourCC stateFormat;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Utilities::FourCC) == 0x4);
    // public System.UInt32 stateOffset
    // Size: 0x4
    // Offset: 0x18
    uint stateOffset;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // [FixedBufferAttribute] Offset: 0x96093C
    // UnityEngine.InputSystem.LowLevel.DeltaStateEvent/UnityEngine.InputSystem.LowLevel.<stateData>e__FixedBuffer stateData
    // Size: 0x1
    // Offset: 0x1C
    ::UnityEngine::InputSystem::LowLevel::DeltaStateEvent::$stateData$e__FixedBuffer stateData;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::LowLevel::DeltaStateEvent::$stateData$e__FixedBuffer) == 0x1);
    public:
    // Creating value type constructor for type: DeltaStateEvent
    constexpr DeltaStateEvent(::UnityEngine::InputSystem::LowLevel::InputEvent baseEvent_ = {}, ::UnityEngine::InputSystem::Utilities::FourCC stateFormat_ = {}, uint stateOffset_ = {}, ::UnityEngine::InputSystem::LowLevel::DeltaStateEvent::$stateData$e__FixedBuffer stateData_ = {}) noexcept : baseEvent{baseEvent_}, stateFormat{stateFormat_}, stateOffset{stateOffset_}, stateData{stateData_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::InputSystem::LowLevel::IInputEventTypeInfo
    operator ::UnityEngine::InputSystem::LowLevel::IInputEventTypeInfo() noexcept {
      return *reinterpret_cast<::UnityEngine::InputSystem::LowLevel::IInputEventTypeInfo*>(this);
    }
    // static field const value: static public System.Int32 Type
    static constexpr const int Type = 1145852993;
    // Get static field: static public System.Int32 Type
    static int _get_Type();
    // Set static field: static public System.Int32 Type
    static void _set_Type(int value);
    // Get instance field reference: public UnityEngine.InputSystem.LowLevel.InputEvent baseEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::LowLevel::InputEvent& dyn_baseEvent();
    // Get instance field reference: public UnityEngine.InputSystem.Utilities.FourCC stateFormat
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::FourCC& dyn_stateFormat();
    // Get instance field reference: public System.UInt32 stateOffset
    [[deprecated("Use field access instead!")]] uint& dyn_stateOffset();
    // Get instance field reference: UnityEngine.InputSystem.LowLevel.DeltaStateEvent/UnityEngine.InputSystem.LowLevel.<stateData>e__FixedBuffer stateData
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::LowLevel::DeltaStateEvent::$stateData$e__FixedBuffer& dyn_stateData();
    // public System.UInt32 get_deltaStateSizeInBytes()
    // Offset: 0xA55C0C
    uint get_deltaStateSizeInBytes();
    // public System.Void* get_deltaState()
    // Offset: 0xA55C18
    void* get_deltaState();
    // public UnityEngine.InputSystem.Utilities.FourCC get_typeStatic()
    // Offset: 0xA55C20
    ::UnityEngine::InputSystem::Utilities::FourCC get_typeStatic();
    // public UnityEngine.InputSystem.LowLevel.InputEventPtr ToEventPtr()
    // Offset: 0xA55C44
    ::UnityEngine::InputSystem::LowLevel::InputEventPtr ToEventPtr();
    // static public UnityEngine.InputSystem.LowLevel.DeltaStateEvent* From(UnityEngine.InputSystem.LowLevel.InputEventPtr ptr)
    // Offset: 0x11A44D8
    static ::UnityEngine::InputSystem::LowLevel::DeltaStateEvent* From(::UnityEngine::InputSystem::LowLevel::InputEventPtr ptr);
    // static public Unity.Collections.NativeArray`1<System.Byte> From(UnityEngine.InputSystem.InputControl control, out UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, Unity.Collections.Allocator allocator)
    // Offset: 0x11A45FC
    static ::Unity::Collections::NativeArray_1<uint8_t> From(::UnityEngine::InputSystem::InputControl* control, ByRef<::UnityEngine::InputSystem::LowLevel::InputEventPtr> eventPtr, ::Unity::Collections::Allocator allocator);
  }; // UnityEngine.InputSystem.LowLevel.DeltaStateEvent
  #pragma pack(pop)
  static check_size<sizeof(DeltaStateEvent), 28 + sizeof(::UnityEngine::InputSystem::LowLevel::DeltaStateEvent::$stateData$e__FixedBuffer)> __UnityEngine_InputSystem_LowLevel_DeltaStateEventSizeCheck;
  static_assert(sizeof(DeltaStateEvent) == 0x1D);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::LowLevel::DeltaStateEvent::$stateData$e__FixedBuffer, "UnityEngine.InputSystem.LowLevel", "DeltaStateEvent/<stateData>e__FixedBuffer");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::DeltaStateEvent::get_deltaStateSizeInBytes
// Il2CppName: get_deltaStateSizeInBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (UnityEngine::InputSystem::LowLevel::DeltaStateEvent::*)()>(&UnityEngine::InputSystem::LowLevel::DeltaStateEvent::get_deltaStateSizeInBytes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::DeltaStateEvent), "get_deltaStateSizeInBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::DeltaStateEvent::get_deltaState
// Il2CppName: get_deltaState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void* (UnityEngine::InputSystem::LowLevel::DeltaStateEvent::*)()>(&UnityEngine::InputSystem::LowLevel::DeltaStateEvent::get_deltaState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::DeltaStateEvent), "get_deltaState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::DeltaStateEvent::get_typeStatic
// Il2CppName: get_typeStatic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::FourCC (UnityEngine::InputSystem::LowLevel::DeltaStateEvent::*)()>(&UnityEngine::InputSystem::LowLevel::DeltaStateEvent::get_typeStatic)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::DeltaStateEvent), "get_typeStatic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::DeltaStateEvent::ToEventPtr
// Il2CppName: ToEventPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::LowLevel::InputEventPtr (UnityEngine::InputSystem::LowLevel::DeltaStateEvent::*)()>(&UnityEngine::InputSystem::LowLevel::DeltaStateEvent::ToEventPtr)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::DeltaStateEvent), "ToEventPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::DeltaStateEvent::From
// Il2CppName: From
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::LowLevel::DeltaStateEvent* (*)(::UnityEngine::InputSystem::LowLevel::InputEventPtr)>(&UnityEngine::InputSystem::LowLevel::DeltaStateEvent::From)> {
  static const MethodInfo* get() {
    static auto* ptr = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::DeltaStateEvent), "From", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::DeltaStateEvent::From
// Il2CppName: From
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Unity::Collections::NativeArray_1<uint8_t> (*)(::UnityEngine::InputSystem::InputControl*, ByRef<::UnityEngine::InputSystem::LowLevel::InputEventPtr>, ::Unity::Collections::Allocator)>(&UnityEngine::InputSystem::LowLevel::DeltaStateEvent::From)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* eventPtr = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr")->this_arg;
    static auto* allocator = &::il2cpp_utils::GetClassFromName("Unity.Collections", "Allocator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::DeltaStateEvent), "From", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control, eventPtr, allocator});
  }
};
