// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.InputSystem.LowLevel.IInputEventTypeInfo
#include "UnityEngine/InputSystem/LowLevel/IInputEventTypeInfo.hpp"
// Including type: UnityEngine.InputSystem.LowLevel.InputEvent
#include "UnityEngine/InputSystem/LowLevel/InputEvent.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: FourCC
  struct FourCC;
}
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputActionPhase
  struct InputActionPhase;
}
// Forward declaring namespace: UnityEngine::InputSystem::LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Forward declaring type: InputEventPtr
  struct InputEventPtr;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Forward declaring type: ActionEvent
  struct ActionEvent;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::LowLevel::ActionEvent, "UnityEngine.InputSystem.LowLevel", "ActionEvent");
// Type namespace: UnityEngine.InputSystem.LowLevel
namespace UnityEngine::InputSystem::LowLevel {
  // Size: 0x25
  #pragma pack(push, 1)
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.LowLevel.ActionEvent
  // [TokenAttribute] Offset: FFFFFFFF
  struct ActionEvent/*, public ::System::ValueType, public ::UnityEngine::InputSystem::LowLevel::IInputEventTypeInfo*/ {
    public:
    // Nested type: ::UnityEngine::InputSystem::LowLevel::ActionEvent::$m_ValueData$e__FixedBuffer
    struct $m_ValueData$e__FixedBuffer;
    // Size: 0x1
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.InputSystem.LowLevel.ActionEvent/UnityEngine.InputSystem.LowLevel.<m_ValueData>e__FixedBuffer
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: FFFFFFFF
    // [UnsafeValueTypeAttribute] Offset: FFFFFFFF
    struct $m_ValueData$e__FixedBuffer/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.Byte FixedElementField
      // Size: 0x1
      // Offset: 0x0
      uint8_t FixedElementField;
      // Field size check
      static_assert(sizeof(uint8_t) == 0x1);
      public:
      // Creating value type constructor for type: $m_ValueData$e__FixedBuffer
      constexpr $m_ValueData$e__FixedBuffer(uint8_t FixedElementField_ = {}) noexcept : FixedElementField{FixedElementField_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Creating conversion operator: operator uint8_t
      constexpr operator uint8_t() const noexcept {
        return FixedElementField;
      }
      // Get instance field reference: public System.Byte FixedElementField
      [[deprecated("Use field access instead!")]] uint8_t& dyn_FixedElementField();
    }; // UnityEngine.InputSystem.LowLevel.ActionEvent/UnityEngine.InputSystem.LowLevel.<m_ValueData>e__FixedBuffer
    #pragma pack(pop)
    static check_size<sizeof(ActionEvent::$m_ValueData$e__FixedBuffer), 0 + sizeof(uint8_t)> __UnityEngine_InputSystem_LowLevel_ActionEvent_$m_ValueData$e__FixedBufferSizeCheck;
    static_assert(sizeof(ActionEvent::$m_ValueData$e__FixedBuffer) == 0x1);
    public:
    // public UnityEngine.InputSystem.LowLevel.InputEvent baseEvent
    // Size: 0x14
    // Offset: 0x0
    ::UnityEngine::InputSystem::LowLevel::InputEvent baseEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::LowLevel::InputEvent) == 0x14);
    // private System.UInt16 m_ControlIndex
    // Size: 0x2
    // Offset: 0x14
    uint16_t m_ControlIndex;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // private System.UInt16 m_BindingIndex
    // Size: 0x2
    // Offset: 0x16
    uint16_t m_BindingIndex;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // private System.UInt16 m_InteractionIndex
    // Size: 0x2
    // Offset: 0x18
    uint16_t m_InteractionIndex;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // private System.Byte m_StateIndex
    // Size: 0x1
    // Offset: 0x1A
    uint8_t m_StateIndex;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Byte m_Phase
    // Size: 0x1
    // Offset: 0x1B
    uint8_t m_Phase;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Double m_StartTime
    // Size: 0x8
    // Offset: 0x1C
    double m_StartTime;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // [FixedBufferAttribute] Offset: 0x9608D4
    // public UnityEngine.InputSystem.LowLevel.ActionEvent/UnityEngine.InputSystem.LowLevel.<m_ValueData>e__FixedBuffer m_ValueData
    // Size: 0x1
    // Offset: 0x24
    ::UnityEngine::InputSystem::LowLevel::ActionEvent::$m_ValueData$e__FixedBuffer m_ValueData;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::LowLevel::ActionEvent::$m_ValueData$e__FixedBuffer) == 0x1);
    public:
    // Creating value type constructor for type: ActionEvent
    constexpr ActionEvent(::UnityEngine::InputSystem::LowLevel::InputEvent baseEvent_ = {}, uint16_t m_ControlIndex_ = {}, uint16_t m_BindingIndex_ = {}, uint16_t m_InteractionIndex_ = {}, uint8_t m_StateIndex_ = {}, uint8_t m_Phase_ = {}, double m_StartTime_ = {}, ::UnityEngine::InputSystem::LowLevel::ActionEvent::$m_ValueData$e__FixedBuffer m_ValueData_ = {}) noexcept : baseEvent{baseEvent_}, m_ControlIndex{m_ControlIndex_}, m_BindingIndex{m_BindingIndex_}, m_InteractionIndex{m_InteractionIndex_}, m_StateIndex{m_StateIndex_}, m_Phase{m_Phase_}, m_StartTime{m_StartTime_}, m_ValueData{m_ValueData_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::InputSystem::LowLevel::IInputEventTypeInfo
    operator ::UnityEngine::InputSystem::LowLevel::IInputEventTypeInfo() noexcept {
      return *reinterpret_cast<::UnityEngine::InputSystem::LowLevel::IInputEventTypeInfo*>(this);
    }
    // Get instance field reference: public UnityEngine.InputSystem.LowLevel.InputEvent baseEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::LowLevel::InputEvent& dyn_baseEvent();
    // Get instance field reference: private System.UInt16 m_ControlIndex
    [[deprecated("Use field access instead!")]] uint16_t& dyn_m_ControlIndex();
    // Get instance field reference: private System.UInt16 m_BindingIndex
    [[deprecated("Use field access instead!")]] uint16_t& dyn_m_BindingIndex();
    // Get instance field reference: private System.UInt16 m_InteractionIndex
    [[deprecated("Use field access instead!")]] uint16_t& dyn_m_InteractionIndex();
    // Get instance field reference: private System.Byte m_StateIndex
    [[deprecated("Use field access instead!")]] uint8_t& dyn_m_StateIndex();
    // Get instance field reference: private System.Byte m_Phase
    [[deprecated("Use field access instead!")]] uint8_t& dyn_m_Phase();
    // Get instance field reference: private System.Double m_StartTime
    [[deprecated("Use field access instead!")]] double& dyn_m_StartTime();
    // Get instance field reference: public UnityEngine.InputSystem.LowLevel.ActionEvent/UnityEngine.InputSystem.LowLevel.<m_ValueData>e__FixedBuffer m_ValueData
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::LowLevel::ActionEvent::$m_ValueData$e__FixedBuffer& dyn_m_ValueData();
    // static public UnityEngine.InputSystem.Utilities.FourCC get_Type()
    // Offset: 0x11A3F8C
    static ::UnityEngine::InputSystem::Utilities::FourCC get_Type();
    // public System.Double get_startTime()
    // Offset: 0xA55B0C
    double get_startTime();
    // public System.Void set_startTime(System.Double value)
    // Offset: 0xA55B14
    void set_startTime(double value);
    // public UnityEngine.InputSystem.InputActionPhase get_phase()
    // Offset: 0xA55B1C
    ::UnityEngine::InputSystem::InputActionPhase get_phase();
    // public System.Void set_phase(UnityEngine.InputSystem.InputActionPhase value)
    // Offset: 0xA55B24
    void set_phase(::UnityEngine::InputSystem::InputActionPhase value);
    // public System.Byte* get_valueData()
    // Offset: 0xA55B2C
    uint8_t* get_valueData();
    // public System.Int32 get_valueSizeInBytes()
    // Offset: 0xA55B34
    int get_valueSizeInBytes();
    // public System.Int32 get_stateIndex()
    // Offset: 0xA55B40
    int get_stateIndex();
    // public System.Void set_stateIndex(System.Int32 value)
    // Offset: 0xA55B48
    void set_stateIndex(int value);
    // public System.Int32 get_controlIndex()
    // Offset: 0xA55B50
    int get_controlIndex();
    // public System.Void set_controlIndex(System.Int32 value)
    // Offset: 0xA55B58
    void set_controlIndex(int value);
    // public System.Int32 get_bindingIndex()
    // Offset: 0xA55B60
    int get_bindingIndex();
    // public System.Void set_bindingIndex(System.Int32 value)
    // Offset: 0xA55B68
    void set_bindingIndex(int value);
    // public System.Int32 get_interactionIndex()
    // Offset: 0xA55B70
    int get_interactionIndex();
    // public System.Void set_interactionIndex(System.Int32 value)
    // Offset: 0xA55B84
    void set_interactionIndex(int value);
    // public UnityEngine.InputSystem.Utilities.FourCC get_typeStatic()
    // Offset: 0xA55B94
    ::UnityEngine::InputSystem::Utilities::FourCC get_typeStatic();
    // public UnityEngine.InputSystem.LowLevel.InputEventPtr ToEventPtr()
    // Offset: 0xA55B8C
    ::UnityEngine::InputSystem::LowLevel::InputEventPtr ToEventPtr();
    // static public System.Int32 GetEventSizeWithValueSize(System.Int32 valueSizeInBytes)
    // Offset: 0x11A42D0
    static int GetEventSizeWithValueSize(int valueSizeInBytes);
    // static public UnityEngine.InputSystem.LowLevel.ActionEvent* From(UnityEngine.InputSystem.LowLevel.InputEventPtr ptr)
    // Offset: 0x11A42D8
    static ::UnityEngine::InputSystem::LowLevel::ActionEvent* From(::UnityEngine::InputSystem::LowLevel::InputEventPtr ptr);
  }; // UnityEngine.InputSystem.LowLevel.ActionEvent
  #pragma pack(pop)
  static check_size<sizeof(ActionEvent), 36 + sizeof(::UnityEngine::InputSystem::LowLevel::ActionEvent::$m_ValueData$e__FixedBuffer)> __UnityEngine_InputSystem_LowLevel_ActionEventSizeCheck;
  static_assert(sizeof(ActionEvent) == 0x25);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::LowLevel::ActionEvent::$m_ValueData$e__FixedBuffer, "UnityEngine.InputSystem.LowLevel", "ActionEvent/<m_ValueData>e__FixedBuffer");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::get_Type
// Il2CppName: get_Type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::FourCC (*)()>(&UnityEngine::InputSystem::LowLevel::ActionEvent::get_Type)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "get_Type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::get_startTime
// Il2CppName: get_startTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (UnityEngine::InputSystem::LowLevel::ActionEvent::*)()>(&UnityEngine::InputSystem::LowLevel::ActionEvent::get_startTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "get_startTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::set_startTime
// Il2CppName: set_startTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::ActionEvent::*)(double)>(&UnityEngine::InputSystem::LowLevel::ActionEvent::set_startTime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "set_startTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::get_phase
// Il2CppName: get_phase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionPhase (UnityEngine::InputSystem::LowLevel::ActionEvent::*)()>(&UnityEngine::InputSystem::LowLevel::ActionEvent::get_phase)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "get_phase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::set_phase
// Il2CppName: set_phase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::ActionEvent::*)(::UnityEngine::InputSystem::InputActionPhase)>(&UnityEngine::InputSystem::LowLevel::ActionEvent::set_phase)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionPhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "set_phase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::get_valueData
// Il2CppName: get_valueData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t* (UnityEngine::InputSystem::LowLevel::ActionEvent::*)()>(&UnityEngine::InputSystem::LowLevel::ActionEvent::get_valueData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "get_valueData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::get_valueSizeInBytes
// Il2CppName: get_valueSizeInBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::ActionEvent::*)()>(&UnityEngine::InputSystem::LowLevel::ActionEvent::get_valueSizeInBytes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "get_valueSizeInBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::get_stateIndex
// Il2CppName: get_stateIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::ActionEvent::*)()>(&UnityEngine::InputSystem::LowLevel::ActionEvent::get_stateIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "get_stateIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::set_stateIndex
// Il2CppName: set_stateIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::ActionEvent::*)(int)>(&UnityEngine::InputSystem::LowLevel::ActionEvent::set_stateIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "set_stateIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::get_controlIndex
// Il2CppName: get_controlIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::ActionEvent::*)()>(&UnityEngine::InputSystem::LowLevel::ActionEvent::get_controlIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "get_controlIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::set_controlIndex
// Il2CppName: set_controlIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::ActionEvent::*)(int)>(&UnityEngine::InputSystem::LowLevel::ActionEvent::set_controlIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "set_controlIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::get_bindingIndex
// Il2CppName: get_bindingIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::ActionEvent::*)()>(&UnityEngine::InputSystem::LowLevel::ActionEvent::get_bindingIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "get_bindingIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::set_bindingIndex
// Il2CppName: set_bindingIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::ActionEvent::*)(int)>(&UnityEngine::InputSystem::LowLevel::ActionEvent::set_bindingIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "set_bindingIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::get_interactionIndex
// Il2CppName: get_interactionIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::LowLevel::ActionEvent::*)()>(&UnityEngine::InputSystem::LowLevel::ActionEvent::get_interactionIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "get_interactionIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::set_interactionIndex
// Il2CppName: set_interactionIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::LowLevel::ActionEvent::*)(int)>(&UnityEngine::InputSystem::LowLevel::ActionEvent::set_interactionIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "set_interactionIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::get_typeStatic
// Il2CppName: get_typeStatic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::FourCC (UnityEngine::InputSystem::LowLevel::ActionEvent::*)()>(&UnityEngine::InputSystem::LowLevel::ActionEvent::get_typeStatic)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "get_typeStatic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::ToEventPtr
// Il2CppName: ToEventPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::LowLevel::InputEventPtr (UnityEngine::InputSystem::LowLevel::ActionEvent::*)()>(&UnityEngine::InputSystem::LowLevel::ActionEvent::ToEventPtr)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "ToEventPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::GetEventSizeWithValueSize
// Il2CppName: GetEventSizeWithValueSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&UnityEngine::InputSystem::LowLevel::ActionEvent::GetEventSizeWithValueSize)> {
  static const MethodInfo* get() {
    static auto* valueSizeInBytes = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "GetEventSizeWithValueSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{valueSizeInBytes});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::LowLevel::ActionEvent::From
// Il2CppName: From
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::LowLevel::ActionEvent* (*)(::UnityEngine::InputSystem::LowLevel::InputEventPtr)>(&UnityEngine::InputSystem::LowLevel::ActionEvent::From)> {
  static const MethodInfo* get() {
    static auto* ptr = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::LowLevel::ActionEvent), "From", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
