// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.InputRemoting/UnityEngine.InputSystem.ChangeUsageMsg
#include "UnityEngine/InputSystem/InputRemoting_ChangeUsageMsg.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputRemoting::ChangeUsageMsg::Data, "UnityEngine.InputSystem", "InputRemoting/ChangeUsageMsg/Data");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.InputRemoting/UnityEngine.InputSystem.ChangeUsageMsg/UnityEngine.InputSystem.Data
  // [TokenAttribute] Offset: FFFFFFFF
  struct InputRemoting::ChangeUsageMsg::Data/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Int32 deviceId
    // Size: 0x4
    // Offset: 0x0
    int deviceId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: deviceId and: usages
    char __padding0[0x4] = {};
    // public System.String[] usages
    // Size: 0x8
    // Offset: 0x8
    ::ArrayW<::StringW> usages;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    public:
    // Creating value type constructor for type: Data
    constexpr Data(int deviceId_ = {}, ::ArrayW<::StringW> usages_ = ::ArrayW<::StringW>(static_cast<void*>(nullptr))) noexcept : deviceId{deviceId_}, usages{usages_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Int32 deviceId
    [[deprecated("Use field access instead!")]] int& dyn_deviceId();
    // Get instance field reference: public System.String[] usages
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_usages();
  }; // UnityEngine.InputSystem.InputRemoting/UnityEngine.InputSystem.ChangeUsageMsg/UnityEngine.InputSystem.Data
  #pragma pack(pop)
  static check_size<sizeof(InputRemoting::ChangeUsageMsg::Data), 8 + sizeof(::ArrayW<::StringW>)> __UnityEngine_InputSystem_InputRemoting_ChangeUsageMsg_DataSizeCheck;
  static_assert(sizeof(InputRemoting::ChangeUsageMsg::Data) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
