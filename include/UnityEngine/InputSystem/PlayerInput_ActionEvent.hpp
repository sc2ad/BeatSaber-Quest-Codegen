// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.PlayerInput
#include "UnityEngine/InputSystem/PlayerInput.hpp"
// Including type: UnityEngine.Events.UnityEvent`1
#include "UnityEngine/Events/UnityEvent_1.hpp"
// Including type: UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext
#include "UnityEngine/InputSystem/InputAction_CallbackContext.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputAction
  class InputAction;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::PlayerInput::ActionEvent);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::PlayerInput::ActionEvent*, "UnityEngine.InputSystem", "PlayerInput/ActionEvent");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.PlayerInput/UnityEngine.InputSystem.ActionEvent
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayerInput::ActionEvent : public ::UnityEngine::Events::UnityEvent_1<::UnityEngine::InputSystem::InputAction_CallbackContext> {
    public:
    public:
    // private System.String m_ActionId
    // Size: 0x8
    // Offset: 0x30
    ::StringW m_ActionId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String m_ActionName
    // Size: 0x8
    // Offset: 0x38
    ::StringW m_ActionName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::ArrayW<::Il2CppObject*>
    constexpr operator ::ArrayW<::Il2CppObject*>() const noexcept = delete;
    // Get instance field reference: private System.String m_ActionId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_ActionId();
    // Get instance field reference: private System.String m_ActionName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_ActionName();
    // public System.String get_actionId()
    // Offset: 0xCCF494
    ::StringW get_actionId();
    // public System.String get_actionName()
    // Offset: 0xCCF49C
    ::StringW get_actionName();
    // public System.Void .ctor()
    // Offset: 0xCCF4A4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerInput::ActionEvent* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::PlayerInput::ActionEvent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerInput::ActionEvent*, creationType>()));
    }
    // public System.Void .ctor(UnityEngine.InputSystem.InputAction action)
    // Offset: 0xCCF4F4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerInput::ActionEvent* New_ctor(::UnityEngine::InputSystem::InputAction* action) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::PlayerInput::ActionEvent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerInput::ActionEvent*, creationType>(action)));
    }
    // public System.Void .ctor(System.Guid actionGUID, System.String name)
    // Offset: 0xCCF6B0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerInput::ActionEvent* New_ctor(::System::Guid actionGUID, ::StringW name) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::PlayerInput::ActionEvent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerInput::ActionEvent*, creationType>(actionGUID, name)));
    }
  }; // UnityEngine.InputSystem.PlayerInput/UnityEngine.InputSystem.ActionEvent
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::ActionEvent::get_actionId
// Il2CppName: get_actionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::PlayerInput::ActionEvent::*)()>(&UnityEngine::InputSystem::PlayerInput::ActionEvent::get_actionId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput::ActionEvent*), "get_actionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::ActionEvent::get_actionName
// Il2CppName: get_actionName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::PlayerInput::ActionEvent::*)()>(&UnityEngine::InputSystem::PlayerInput::ActionEvent::get_actionName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::PlayerInput::ActionEvent*), "get_actionName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::ActionEvent::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::ActionEvent::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::PlayerInput::ActionEvent::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
