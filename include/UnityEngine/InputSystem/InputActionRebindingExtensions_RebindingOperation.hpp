// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.InputActionRebindingExtensions
#include "UnityEngine/InputSystem/InputActionRebindingExtensions.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.InputSystem.InputBinding
#include "UnityEngine/InputSystem/InputBinding.hpp"
// Including type: UnityEngine.InputSystem.Utilities.InternedString
#include "UnityEngine/InputSystem/Utilities/InternedString.hpp"
// Including type: UnityEngine.InputSystem.InputControlList`1
#include "UnityEngine/InputSystem/InputControlList_1.hpp"
// Including type: UnityEngine.InputSystem.LowLevel.InputEventPtr
#include "UnityEngine/InputSystem/LowLevel/InputEventPtr.hpp"
// Including type: UnityEngine.InputSystem.Layouts.InputControlLayout/UnityEngine.InputSystem.Layouts.Cache
#include "UnityEngine/InputSystem/Layouts/InputControlLayout.hpp"
// Including type: System.Single
#include "System/Single.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: ReadOnlyArray`1<TValue>
  template<typename TValue>
  struct ReadOnlyArray_1;
}
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputAction
  class InputAction;
  // Forward declaring type: InputControl
  class InputControl;
  // Forward declaring type: InputDevice
  class InputDevice;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*, "UnityEngine.InputSystem", "InputActionRebindingExtensions/RebindingOperation");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation
  // [TokenAttribute] Offset: FFFFFFFF
  class InputActionRebindingExtensions::RebindingOperation : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    // Nested type: ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags
    struct Flags;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags
    // [TokenAttribute] Offset: FFFFFFFF
    // [FlagsAttribute] Offset: FFFFFFFF
    struct Flags/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: Flags
      constexpr Flags(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags Started
      static constexpr const int Started = 1;
      // Get static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags Started
      static ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags _get_Started();
      // Set static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags Started
      static void _set_Started(::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags value);
      // static field const value: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags Completed
      static constexpr const int Completed = 2;
      // Get static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags Completed
      static ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags _get_Completed();
      // Set static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags Completed
      static void _set_Completed(::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags value);
      // static field const value: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags Canceled
      static constexpr const int Canceled = 4;
      // Get static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags Canceled
      static ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags _get_Canceled();
      // Set static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags Canceled
      static void _set_Canceled(::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags value);
      // static field const value: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags OnEventHooked
      static constexpr const int OnEventHooked = 8;
      // Get static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags OnEventHooked
      static ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags _get_OnEventHooked();
      // Set static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags OnEventHooked
      static void _set_OnEventHooked(::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags value);
      // static field const value: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags OnAfterUpdateHooked
      static constexpr const int OnAfterUpdateHooked = 16;
      // Get static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags OnAfterUpdateHooked
      static ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags _get_OnAfterUpdateHooked();
      // Set static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags OnAfterUpdateHooked
      static void _set_OnAfterUpdateHooked(::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags value);
      // static field const value: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags DontIgnoreNoisyControls
      static constexpr const int DontIgnoreNoisyControls = 64;
      // Get static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags DontIgnoreNoisyControls
      static ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags _get_DontIgnoreNoisyControls();
      // Set static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags DontIgnoreNoisyControls
      static void _set_DontIgnoreNoisyControls(::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags value);
      // static field const value: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags DontGeneralizePathOfSelectedControl
      static constexpr const int DontGeneralizePathOfSelectedControl = 128;
      // Get static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags DontGeneralizePathOfSelectedControl
      static ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags _get_DontGeneralizePathOfSelectedControl();
      // Set static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags DontGeneralizePathOfSelectedControl
      static void _set_DontGeneralizePathOfSelectedControl(::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags value);
      // static field const value: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags AddNewBinding
      static constexpr const int AddNewBinding = 256;
      // Get static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags AddNewBinding
      static ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags _get_AddNewBinding();
      // Set static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags AddNewBinding
      static void _set_AddNewBinding(::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags value);
      // static field const value: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags SuppressMatchingEvents
      static constexpr const int SuppressMatchingEvents = 512;
      // Get static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags SuppressMatchingEvents
      static ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags _get_SuppressMatchingEvents();
      // Set static field: static public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags SuppressMatchingEvents
      static void _set_SuppressMatchingEvents(::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags
    #pragma pack(pop)
    static check_size<sizeof(InputActionRebindingExtensions::RebindingOperation::Flags), 0 + sizeof(int)> __UnityEngine_InputSystem_InputActionRebindingExtensions_RebindingOperation_FlagsSizeCheck;
    static_assert(sizeof(InputActionRebindingExtensions::RebindingOperation::Flags) == 0x4);
    public:
    // private UnityEngine.InputSystem.InputAction m_ActionToRebind
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::InputSystem::InputAction* m_ActionToRebind;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputAction*) == 0x8);
    // private System.Nullable`1<UnityEngine.InputSystem.InputBinding> m_BindingMask
    // Size: 0xFFFFFFFF
    // Offset: 0x18
    ::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> m_BindingMask;
    // private System.Type m_ControlType
    // Size: 0x8
    // Offset: 0x78
    ::System::Type* m_ControlType;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    // private UnityEngine.InputSystem.Utilities.InternedString m_ExpectedLayout
    // Size: 0x10
    // Offset: 0x80
    ::UnityEngine::InputSystem::Utilities::InternedString m_ExpectedLayout;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Utilities::InternedString) == 0x10);
    // private System.Int32 m_IncludePathCount
    // Size: 0x4
    // Offset: 0x90
    int m_IncludePathCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.String[] m_IncludePaths
    // Size: 0x8
    // Offset: 0x98
    ::ArrayW<::StringW> m_IncludePaths;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // private System.Int32 m_ExcludePathCount
    // Size: 0x4
    // Offset: 0xA0
    int m_ExcludePathCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.String[] m_ExcludePaths
    // Size: 0x8
    // Offset: 0xA8
    ::ArrayW<::StringW> m_ExcludePaths;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // private System.Int32 m_TargetBindingIndex
    // Size: 0x4
    // Offset: 0xB0
    int m_TargetBindingIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.String m_BindingGroupForNewBinding
    // Size: 0x8
    // Offset: 0xB8
    ::StringW m_BindingGroupForNewBinding;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String m_CancelBinding
    // Size: 0x8
    // Offset: 0xC0
    ::StringW m_CancelBinding;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Single m_MagnitudeThreshold
    // Size: 0x4
    // Offset: 0xC8
    float m_MagnitudeThreshold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single[] m_Scores
    // Size: 0x8
    // Offset: 0xD0
    ::ArrayW<float> m_Scores;
    // Field size check
    static_assert(sizeof(::ArrayW<float>) == 0x8);
    // private System.Single[] m_Magnitudes
    // Size: 0x8
    // Offset: 0xD8
    ::ArrayW<float> m_Magnitudes;
    // Field size check
    static_assert(sizeof(::ArrayW<float>) == 0x8);
    // private System.Double m_LastMatchTime
    // Size: 0x8
    // Offset: 0xE0
    double m_LastMatchTime;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // private System.Double m_StartTime
    // Size: 0x8
    // Offset: 0xE8
    double m_StartTime;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // private System.Single m_Timeout
    // Size: 0x4
    // Offset: 0xF0
    float m_Timeout;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_WaitSecondsAfterMatch
    // Size: 0x4
    // Offset: 0xF4
    float m_WaitSecondsAfterMatch;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.InputSystem.InputControlList`1<UnityEngine.InputSystem.InputControl> m_Candidates
    // Size: 0xFFFFFFFF
    // Offset: 0xF8
    ::UnityEngine::InputSystem::InputControlList_1<::UnityEngine::InputSystem::InputControl*> m_Candidates;
    // private System.Action`1<UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation> m_OnComplete
    // Size: 0x8
    // Offset: 0x118
    ::System::Action_1<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*>* m_OnComplete;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation> m_OnCancel
    // Size: 0x8
    // Offset: 0x120
    ::System::Action_1<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*>* m_OnCancel;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*>*) == 0x8);
    // private System.Action`1<UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation> m_OnPotentialMatch
    // Size: 0x8
    // Offset: 0x128
    ::System::Action_1<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*>* m_OnPotentialMatch;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*>*) == 0x8);
    // private System.Func`2<UnityEngine.InputSystem.InputControl,System.String> m_OnGeneratePath
    // Size: 0x8
    // Offset: 0x130
    ::System::Func_2<::UnityEngine::InputSystem::InputControl*, ::StringW>* m_OnGeneratePath;
    // Field size check
    static_assert(sizeof(::System::Func_2<::UnityEngine::InputSystem::InputControl*, ::StringW>*) == 0x8);
    // private System.Func`3<UnityEngine.InputSystem.InputControl,UnityEngine.InputSystem.LowLevel.InputEventPtr,System.Single> m_OnComputeScore
    // Size: 0x8
    // Offset: 0x138
    ::System::Func_3<::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr, float>* m_OnComputeScore;
    // Field size check
    static_assert(sizeof(::System::Func_3<::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr, float>*) == 0x8);
    // private System.Action`2<UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation,System.String> m_OnApplyBinding
    // Size: 0x8
    // Offset: 0x140
    ::System::Action_2<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*, ::StringW>* m_OnApplyBinding;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*, ::StringW>*) == 0x8);
    // private System.Action`2<UnityEngine.InputSystem.LowLevel.InputEventPtr,UnityEngine.InputSystem.InputDevice> m_OnEventDelegate
    // Size: 0x8
    // Offset: 0x148
    ::System::Action_2<::UnityEngine::InputSystem::LowLevel::InputEventPtr, ::UnityEngine::InputSystem::InputDevice*>* m_OnEventDelegate;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::InputSystem::LowLevel::InputEventPtr, ::UnityEngine::InputSystem::InputDevice*>*) == 0x8);
    // private System.Action m_OnAfterUpdateDelegate
    // Size: 0x8
    // Offset: 0x150
    ::System::Action* m_OnAfterUpdateDelegate;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private UnityEngine.InputSystem.Layouts.InputControlLayout/UnityEngine.InputSystem.Layouts.Cache m_LayoutCache
    // Size: 0x8
    // Offset: 0x158
    ::UnityEngine::InputSystem::Layouts::InputControlLayout::Cache m_LayoutCache;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Layouts::InputControlLayout::Cache) == 0x8);
    // private System.Text.StringBuilder m_PathBuilder
    // Size: 0x8
    // Offset: 0x160
    ::System::Text::StringBuilder* m_PathBuilder;
    // Field size check
    static_assert(sizeof(::System::Text::StringBuilder*) == 0x8);
    // private UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags m_Flags
    // Size: 0x4
    // Offset: 0x168
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags m_Flags;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags) == 0x4);
    // private System.Int32 m_StartingActuationsCount
    // Size: 0x4
    // Offset: 0x16C
    int m_StartingActuationsCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single[] m_StaringActuationMagnitudes
    // Size: 0x8
    // Offset: 0x170
    ::ArrayW<float> m_StaringActuationMagnitudes;
    // Field size check
    static_assert(sizeof(::ArrayW<float>) == 0x8);
    // private UnityEngine.InputSystem.InputControl[] m_StartingActuationControls
    // Size: 0x8
    // Offset: 0x178
    ::ArrayW<::UnityEngine::InputSystem::InputControl*> m_StartingActuationControls;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::InputSystem::InputControl*>) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // static field const value: static public System.Single kDefaultMagnitudeThreshold
    static constexpr const float kDefaultMagnitudeThreshold = 0.2;
    // Get static field: static public System.Single kDefaultMagnitudeThreshold
    static float _get_kDefaultMagnitudeThreshold();
    // Set static field: static public System.Single kDefaultMagnitudeThreshold
    static void _set_kDefaultMagnitudeThreshold(float value);
    // Get instance field reference: private UnityEngine.InputSystem.InputAction m_ActionToRebind
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputAction*& dyn_m_ActionToRebind();
    // Get instance field reference: private System.Nullable`1<UnityEngine.InputSystem.InputBinding> m_BindingMask
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::InputSystem::InputBinding>& dyn_m_BindingMask();
    // Get instance field reference: private System.Type m_ControlType
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_m_ControlType();
    // Get instance field reference: private UnityEngine.InputSystem.Utilities.InternedString m_ExpectedLayout
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InternedString& dyn_m_ExpectedLayout();
    // Get instance field reference: private System.Int32 m_IncludePathCount
    [[deprecated("Use field access instead!")]] int& dyn_m_IncludePathCount();
    // Get instance field reference: private System.String[] m_IncludePaths
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_m_IncludePaths();
    // Get instance field reference: private System.Int32 m_ExcludePathCount
    [[deprecated("Use field access instead!")]] int& dyn_m_ExcludePathCount();
    // Get instance field reference: private System.String[] m_ExcludePaths
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_m_ExcludePaths();
    // Get instance field reference: private System.Int32 m_TargetBindingIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_TargetBindingIndex();
    // Get instance field reference: private System.String m_BindingGroupForNewBinding
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_BindingGroupForNewBinding();
    // Get instance field reference: private System.String m_CancelBinding
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_CancelBinding();
    // Get instance field reference: private System.Single m_MagnitudeThreshold
    [[deprecated("Use field access instead!")]] float& dyn_m_MagnitudeThreshold();
    // Get instance field reference: private System.Single[] m_Scores
    [[deprecated("Use field access instead!")]] ::ArrayW<float>& dyn_m_Scores();
    // Get instance field reference: private System.Single[] m_Magnitudes
    [[deprecated("Use field access instead!")]] ::ArrayW<float>& dyn_m_Magnitudes();
    // Get instance field reference: private System.Double m_LastMatchTime
    [[deprecated("Use field access instead!")]] double& dyn_m_LastMatchTime();
    // Get instance field reference: private System.Double m_StartTime
    [[deprecated("Use field access instead!")]] double& dyn_m_StartTime();
    // Get instance field reference: private System.Single m_Timeout
    [[deprecated("Use field access instead!")]] float& dyn_m_Timeout();
    // Get instance field reference: private System.Single m_WaitSecondsAfterMatch
    [[deprecated("Use field access instead!")]] float& dyn_m_WaitSecondsAfterMatch();
    // Get instance field reference: private UnityEngine.InputSystem.InputControlList`1<UnityEngine.InputSystem.InputControl> m_Candidates
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputControlList_1<::UnityEngine::InputSystem::InputControl*>& dyn_m_Candidates();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation> m_OnComplete
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*>*& dyn_m_OnComplete();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation> m_OnCancel
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*>*& dyn_m_OnCancel();
    // Get instance field reference: private System.Action`1<UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation> m_OnPotentialMatch
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*>*& dyn_m_OnPotentialMatch();
    // Get instance field reference: private System.Func`2<UnityEngine.InputSystem.InputControl,System.String> m_OnGeneratePath
    [[deprecated("Use field access instead!")]] ::System::Func_2<::UnityEngine::InputSystem::InputControl*, ::StringW>*& dyn_m_OnGeneratePath();
    // Get instance field reference: private System.Func`3<UnityEngine.InputSystem.InputControl,UnityEngine.InputSystem.LowLevel.InputEventPtr,System.Single> m_OnComputeScore
    [[deprecated("Use field access instead!")]] ::System::Func_3<::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr, float>*& dyn_m_OnComputeScore();
    // Get instance field reference: private System.Action`2<UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation,System.String> m_OnApplyBinding
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*, ::StringW>*& dyn_m_OnApplyBinding();
    // Get instance field reference: private System.Action`2<UnityEngine.InputSystem.LowLevel.InputEventPtr,UnityEngine.InputSystem.InputDevice> m_OnEventDelegate
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::InputSystem::LowLevel::InputEventPtr, ::UnityEngine::InputSystem::InputDevice*>*& dyn_m_OnEventDelegate();
    // Get instance field reference: private System.Action m_OnAfterUpdateDelegate
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_m_OnAfterUpdateDelegate();
    // Get instance field reference: private UnityEngine.InputSystem.Layouts.InputControlLayout/UnityEngine.InputSystem.Layouts.Cache m_LayoutCache
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Layouts::InputControlLayout::Cache& dyn_m_LayoutCache();
    // Get instance field reference: private System.Text.StringBuilder m_PathBuilder
    [[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& dyn_m_PathBuilder();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation/UnityEngine.InputSystem.Flags m_Flags
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags& dyn_m_Flags();
    // Get instance field reference: private System.Int32 m_StartingActuationsCount
    [[deprecated("Use field access instead!")]] int& dyn_m_StartingActuationsCount();
    // Get instance field reference: private System.Single[] m_StaringActuationMagnitudes
    [[deprecated("Use field access instead!")]] ::ArrayW<float>& dyn_m_StaringActuationMagnitudes();
    // Get instance field reference: private UnityEngine.InputSystem.InputControl[] m_StartingActuationControls
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputControl*>& dyn_m_StartingActuationControls();
    // public UnityEngine.InputSystem.InputAction get_action()
    // Offset: 0xF47730
    ::UnityEngine::InputSystem::InputAction* get_action();
    // public System.Nullable`1<UnityEngine.InputSystem.InputBinding> get_bindingMask()
    // Offset: 0xF47738
    ::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> get_bindingMask();
    // public UnityEngine.InputSystem.InputControlList`1<UnityEngine.InputSystem.InputControl> get_candidates()
    // Offset: 0xF47748
    ::UnityEngine::InputSystem::InputControlList_1<::UnityEngine::InputSystem::InputControl*> get_candidates();
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<System.Single> get_scores()
    // Offset: 0xF4775C
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<float> get_scores();
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<System.Single> get_magnitudes()
    // Offset: 0xF477CC
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<float> get_magnitudes();
    // public UnityEngine.InputSystem.InputControl get_selectedControl()
    // Offset: 0xF4783C
    ::UnityEngine::InputSystem::InputControl* get_selectedControl();
    // public System.Boolean get_started()
    // Offset: 0xF478A4
    bool get_started();
    // public System.Boolean get_completed()
    // Offset: 0xF478B0
    bool get_completed();
    // public System.Boolean get_canceled()
    // Offset: 0xF478BC
    bool get_canceled();
    // public System.Double get_startTime()
    // Offset: 0xF478C8
    double get_startTime();
    // public System.Single get_timeout()
    // Offset: 0xF478D0
    float get_timeout();
    // public System.String get_expectedControlType()
    // Offset: 0xF4726C
    ::StringW get_expectedControlType();
    // public System.Void .ctor()
    // Offset: 0xF46F74
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputActionRebindingExtensions::RebindingOperation* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputActionRebindingExtensions::RebindingOperation*, creationType>()));
    }
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithAction(UnityEngine.InputSystem.InputAction action)
    // Offset: 0xF46F90
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithAction(::UnityEngine::InputSystem::InputAction* action);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithMatchingEventsBeingSuppressed(System.Boolean value)
    // Offset: 0xF4722C
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithMatchingEventsBeingSuppressed(bool value);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithCancelingThrough(System.String binding)
    // Offset: 0xF4727C
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithCancelingThrough(::StringW binding);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithCancelingThrough(UnityEngine.InputSystem.InputControl control)
    // Offset: 0xF4795C
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithCancelingThrough(::UnityEngine::InputSystem::InputControl* control);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithExpectedControlType(System.String layoutName)
    // Offset: 0xF472B0
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithExpectedControlType(::StringW layoutName);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithExpectedControlType(System.Type type)
    // Offset: 0xF47A10
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithExpectedControlType(::System::Type* type);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithExpectedControlType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TControl>
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithExpectedControlType() {
      static_assert(std::is_convertible_v<TControl, ::UnityEngine::InputSystem::InputControl*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithExpectedControlType");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithExpectedControlType", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TControl>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TControl>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*, false>(this, ___generic__method);
    }
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithTargetBinding(System.Int32 bindingIndex)
    // Offset: 0xF472A8
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithTargetBinding(int bindingIndex);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithBindingMask(System.Nullable`1<UnityEngine.InputSystem.InputBinding> bindingMask)
    // Offset: 0xF47B78
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithBindingMask(::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> bindingMask);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithBindingGroup(System.String group)
    // Offset: 0xF47BA4
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithBindingGroup(::StringW group);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithoutGeneralizingPathOfSelectedControl()
    // Offset: 0xF47C54
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithoutGeneralizingPathOfSelectedControl();
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithRebindAddingNewBinding(System.String group)
    // Offset: 0xF47C64
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithRebindAddingNewBinding(::StringW group);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithMagnitudeHavingToBeGreaterThan(System.Single magnitude)
    // Offset: 0xF47C78
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithMagnitudeHavingToBeGreaterThan(float magnitude);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithoutIgnoringNoisyControls()
    // Offset: 0xF47D58
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithoutIgnoringNoisyControls();
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithControlsHavingToMatchPath(System.String path)
    // Offset: 0xF47304
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithControlsHavingToMatchPath(::StringW path);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithControlsExcluding(System.String path)
    // Offset: 0xF470F8
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithControlsExcluding(::StringW path);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation WithTimeout(System.Single timeInSeconds)
    // Offset: 0xF47D88
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* WithTimeout(float timeInSeconds);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation OnComplete(System.Action`1<UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation> callback)
    // Offset: 0xF47D90
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* OnComplete(::System::Action_1<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*>* callback);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation OnCancel(System.Action`1<UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation> callback)
    // Offset: 0xF47D98
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* OnCancel(::System::Action_1<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*>* callback);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation OnPotentialMatch(System.Action`1<UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation> callback)
    // Offset: 0xF47DA0
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* OnPotentialMatch(::System::Action_1<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*>* callback);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation OnGeneratePath(System.Func`2<UnityEngine.InputSystem.InputControl,System.String> callback)
    // Offset: 0xF47DA8
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* OnGeneratePath(::System::Func_2<::UnityEngine::InputSystem::InputControl*, ::StringW>* callback);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation OnComputeScore(System.Func`3<UnityEngine.InputSystem.InputControl,UnityEngine.InputSystem.LowLevel.InputEventPtr,System.Single> callback)
    // Offset: 0xF47DB0
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* OnComputeScore(::System::Func_3<::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr, float>* callback);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation OnApplyBinding(System.Action`2<UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation,System.String> callback)
    // Offset: 0xF47DB8
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* OnApplyBinding(::System::Action_2<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*, ::StringW>* callback);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation OnMatchWaitForAnother(System.Single seconds)
    // Offset: 0xF470F0
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* OnMatchWaitForAnother(float seconds);
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation Start()
    // Offset: 0xF47DC0
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* Start();
    // public System.Void Cancel()
    // Offset: 0xF4810C
    void Cancel();
    // public System.Void Complete()
    // Offset: 0xF48188
    void Complete();
    // public System.Void AddCandidate(UnityEngine.InputSystem.InputControl control, System.Single score, System.Single magnitude)
    // Offset: 0xF48450
    void AddCandidate(::UnityEngine::InputSystem::InputControl* control, float score, float magnitude);
    // public System.Void RemoveCandidate(UnityEngine.InputSystem.InputControl control)
    // Offset: 0xF486D4
    void RemoveCandidate(::UnityEngine::InputSystem::InputControl* control);
    // public System.Void Dispose()
    // Offset: 0xF487C8
    void Dispose();
    // public UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation Reset()
    // Offset: 0xF489A4
    ::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* Reset();
    // private System.Void HookOnEvent()
    // Offset: 0xF4804C
    void HookOnEvent();
    // private System.Void UnhookOnEvent()
    // Offset: 0xF48834
    void UnhookOnEvent();
    // private System.Void OnEvent(UnityEngine.InputSystem.LowLevel.InputEventPtr eventPtr, UnityEngine.InputSystem.InputDevice device)
    // Offset: 0xF48A44
    void OnEvent(::UnityEngine::InputSystem::LowLevel::InputEventPtr eventPtr, ::UnityEngine::InputSystem::InputDevice* device);
    // private System.Void SortCandidatesByScore()
    // Offset: 0xF485AC
    void SortCandidatesByScore();
    // static private System.Boolean HavePathMatch(UnityEngine.InputSystem.InputControl control, System.String[] paths, System.Int32 pathCount)
    // Offset: 0xF490E4
    static bool HavePathMatch(::UnityEngine::InputSystem::InputControl* control, ::ArrayW<::StringW> paths, int pathCount);
    // private System.Void HookOnAfterUpdate()
    // Offset: 0xF47F94
    void HookOnAfterUpdate();
    // private System.Void UnhookOnAfterUpdate()
    // Offset: 0xF488B8
    void UnhookOnAfterUpdate();
    // private System.Void OnAfterUpdate()
    // Offset: 0xF49174
    void OnAfterUpdate();
    // private System.Void OnComplete()
    // Offset: 0xF48198
    void OnComplete();
    // private System.Void OnCancel()
    // Offset: 0xF4811C
    void OnCancel();
    // private System.Void ResetAfterMatchCompleted()
    // Offset: 0xF49494
    void ResetAfterMatchCompleted();
    // private System.Void ThrowIfRebindInProgress()
    // Offset: 0xF478D8
    void ThrowIfRebindInProgress();
    // private System.String GeneratePathForControl(UnityEngine.InputSystem.InputControl control)
    // Offset: 0xF49350
    ::StringW GeneratePathForControl(::UnityEngine::InputSystem::InputControl* control);
    // protected override System.Void Finalize()
    // Offset: 0xF4893C
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // UnityEngine.InputSystem.InputActionRebindingExtensions/UnityEngine.InputSystem.RebindingOperation
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Flags, "UnityEngine.InputSystem", "InputActionRebindingExtensions/RebindingOperation/Flags");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_action
// Il2CppName: get_action
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputAction* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_action)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "get_action", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_bindingMask
// Il2CppName: get_bindingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_bindingMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "get_bindingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_candidates
// Il2CppName: get_candidates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlList_1<::UnityEngine::InputSystem::InputControl*> (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_candidates)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "get_candidates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_scores
// Il2CppName: get_scores
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<float> (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_scores)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "get_scores", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_magnitudes
// Il2CppName: get_magnitudes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<float> (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_magnitudes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "get_magnitudes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_selectedControl
// Il2CppName: get_selectedControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControl* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_selectedControl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "get_selectedControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_started
// Il2CppName: get_started
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_started)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "get_started", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_completed
// Il2CppName: get_completed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_completed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "get_completed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_canceled
// Il2CppName: get_canceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_canceled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "get_canceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_startTime
// Il2CppName: get_startTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_startTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "get_startTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_timeout
// Il2CppName: get_timeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_timeout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "get_timeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_expectedControlType
// Il2CppName: get_expectedControlType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::get_expectedControlType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "get_expectedControlType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithAction
// Il2CppName: WithAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::UnityEngine::InputSystem::InputAction*)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithAction)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "WithAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithMatchingEventsBeingSuppressed
// Il2CppName: WithMatchingEventsBeingSuppressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(bool)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithMatchingEventsBeingSuppressed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "WithMatchingEventsBeingSuppressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithCancelingThrough
// Il2CppName: WithCancelingThrough
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::StringW)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithCancelingThrough)> {
  static const MethodInfo* get() {
    static auto* binding = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "WithCancelingThrough", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binding});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithCancelingThrough
// Il2CppName: WithCancelingThrough
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::UnityEngine::InputSystem::InputControl*)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithCancelingThrough)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "WithCancelingThrough", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithExpectedControlType
// Il2CppName: WithExpectedControlType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::StringW)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithExpectedControlType)> {
  static const MethodInfo* get() {
    static auto* layoutName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "WithExpectedControlType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layoutName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithExpectedControlType
// Il2CppName: WithExpectedControlType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::System::Type*)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithExpectedControlType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "WithExpectedControlType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithExpectedControlType
// Il2CppName: WithExpectedControlType
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithTargetBinding
// Il2CppName: WithTargetBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(int)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithTargetBinding)> {
  static const MethodInfo* get() {
    static auto* bindingIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "WithTargetBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bindingIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithBindingMask
// Il2CppName: WithBindingMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::System::Nullable_1<::UnityEngine::InputSystem::InputBinding>)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithBindingMask)> {
  static const MethodInfo* get() {
    static auto* bindingMask = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputBinding")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "WithBindingMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bindingMask});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithBindingGroup
// Il2CppName: WithBindingGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::StringW)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithBindingGroup)> {
  static const MethodInfo* get() {
    static auto* group = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "WithBindingGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{group});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithoutGeneralizingPathOfSelectedControl
// Il2CppName: WithoutGeneralizingPathOfSelectedControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithoutGeneralizingPathOfSelectedControl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "WithoutGeneralizingPathOfSelectedControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithRebindAddingNewBinding
// Il2CppName: WithRebindAddingNewBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::StringW)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithRebindAddingNewBinding)> {
  static const MethodInfo* get() {
    static auto* group = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "WithRebindAddingNewBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{group});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithMagnitudeHavingToBeGreaterThan
// Il2CppName: WithMagnitudeHavingToBeGreaterThan
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(float)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithMagnitudeHavingToBeGreaterThan)> {
  static const MethodInfo* get() {
    static auto* magnitude = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "WithMagnitudeHavingToBeGreaterThan", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{magnitude});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithoutIgnoringNoisyControls
// Il2CppName: WithoutIgnoringNoisyControls
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithoutIgnoringNoisyControls)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "WithoutIgnoringNoisyControls", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithControlsHavingToMatchPath
// Il2CppName: WithControlsHavingToMatchPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::StringW)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithControlsHavingToMatchPath)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "WithControlsHavingToMatchPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithControlsExcluding
// Il2CppName: WithControlsExcluding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::StringW)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithControlsExcluding)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "WithControlsExcluding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithTimeout
// Il2CppName: WithTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(float)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::WithTimeout)> {
  static const MethodInfo* get() {
    static auto* timeInSeconds = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "WithTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{timeInSeconds});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnComplete
// Il2CppName: OnComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::System::Action_1<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*>*)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnComplete)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionRebindingExtensions/RebindingOperation")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "OnComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnCancel
// Il2CppName: OnCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::System::Action_1<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*>*)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnCancel)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionRebindingExtensions/RebindingOperation")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "OnCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnPotentialMatch
// Il2CppName: OnPotentialMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::System::Action_1<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*>*)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnPotentialMatch)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionRebindingExtensions/RebindingOperation")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "OnPotentialMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnGeneratePath
// Il2CppName: OnGeneratePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::System::Func_2<::UnityEngine::InputSystem::InputControl*, ::StringW>*)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnGeneratePath)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "OnGeneratePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnComputeScore
// Il2CppName: OnComputeScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::System::Func_3<::UnityEngine::InputSystem::InputControl*, ::UnityEngine::InputSystem::LowLevel::InputEventPtr, float>*)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnComputeScore)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl"), ::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "OnComputeScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnApplyBinding
// Il2CppName: OnApplyBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::System::Action_2<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*, ::StringW>*)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnApplyBinding)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionRebindingExtensions/RebindingOperation"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "OnApplyBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnMatchWaitForAnother
// Il2CppName: OnMatchWaitForAnother
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(float)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnMatchWaitForAnother)> {
  static const MethodInfo* get() {
    static auto* seconds = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "OnMatchWaitForAnother", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{seconds});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Cancel
// Il2CppName: Cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Cancel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "Cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Complete
// Il2CppName: Complete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Complete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "Complete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::AddCandidate
// Il2CppName: AddCandidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::UnityEngine::InputSystem::InputControl*, float, float)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::AddCandidate)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* score = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* magnitude = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "AddCandidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control, score, magnitude});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::RemoveCandidate
// Il2CppName: RemoveCandidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::UnityEngine::InputSystem::InputControl*)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::RemoveCandidate)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "RemoveCandidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation* (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::HookOnEvent
// Il2CppName: HookOnEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::HookOnEvent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "HookOnEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::UnhookOnEvent
// Il2CppName: UnhookOnEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::UnhookOnEvent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "UnhookOnEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnEvent
// Il2CppName: OnEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::UnityEngine::InputSystem::LowLevel::InputEventPtr, ::UnityEngine::InputSystem::InputDevice*)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnEvent)> {
  static const MethodInfo* get() {
    static auto* eventPtr = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.LowLevel", "InputEventPtr")->byval_arg;
    static auto* device = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputDevice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "OnEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventPtr, device});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::SortCandidatesByScore
// Il2CppName: SortCandidatesByScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::SortCandidatesByScore)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "SortCandidatesByScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::HavePathMatch
// Il2CppName: HavePathMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::InputSystem::InputControl*, ::ArrayW<::StringW>, int)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::HavePathMatch)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    static auto* paths = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* pathCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "HavePathMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control, paths, pathCount});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::HookOnAfterUpdate
// Il2CppName: HookOnAfterUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::HookOnAfterUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "HookOnAfterUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::UnhookOnAfterUpdate
// Il2CppName: UnhookOnAfterUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::UnhookOnAfterUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "UnhookOnAfterUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnAfterUpdate
// Il2CppName: OnAfterUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnAfterUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "OnAfterUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnComplete
// Il2CppName: OnComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnComplete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "OnComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnCancel
// Il2CppName: OnCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::OnCancel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "OnCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::ResetAfterMatchCompleted
// Il2CppName: ResetAfterMatchCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::ResetAfterMatchCompleted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "ResetAfterMatchCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::ThrowIfRebindInProgress
// Il2CppName: ThrowIfRebindInProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::ThrowIfRebindInProgress)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "ThrowIfRebindInProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::GeneratePathForControl
// Il2CppName: GeneratePathForControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)(::UnityEngine::InputSystem::InputControl*)>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::GeneratePathForControl)> {
  static const MethodInfo* get() {
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "GeneratePathForControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{control});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::*)()>(&UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionRebindingExtensions::RebindingOperation*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
