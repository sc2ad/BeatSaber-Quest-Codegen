// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: TouchPhase
  struct TouchPhase;
  // Forward declaring type: Key
  struct Key;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputExtensions
  class InputExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::InputExtensions);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputExtensions*, "UnityEngine.InputSystem", "InputExtensions");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.InputExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class InputExtensions : public ::Il2CppObject {
    public:
    // static public System.Boolean IsEndedOrCanceled(UnityEngine.InputSystem.TouchPhase phase)
    // Offset: 0xD8A614
    static bool IsEndedOrCanceled(::UnityEngine::InputSystem::TouchPhase phase);
    // static public System.Boolean IsActive(UnityEngine.InputSystem.TouchPhase phase)
    // Offset: 0xD8A624
    static bool IsActive(::UnityEngine::InputSystem::TouchPhase phase);
    // static public System.Boolean IsModifierKey(UnityEngine.InputSystem.Key key)
    // Offset: 0xD8A644
    static bool IsModifierKey(::UnityEngine::InputSystem::Key key);
    // static public System.Boolean IsTextInputKey(UnityEngine.InputSystem.Key key)
    // Offset: 0xD8A654
    static bool IsTextInputKey(::UnityEngine::InputSystem::Key key);
  }; // UnityEngine.InputSystem.InputExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputExtensions::IsEndedOrCanceled
// Il2CppName: IsEndedOrCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::InputSystem::TouchPhase)>(&UnityEngine::InputSystem::InputExtensions::IsEndedOrCanceled)> {
  static const MethodInfo* get() {
    static auto* phase = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "TouchPhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputExtensions*), "IsEndedOrCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{phase});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputExtensions::IsActive
// Il2CppName: IsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::InputSystem::TouchPhase)>(&UnityEngine::InputSystem::InputExtensions::IsActive)> {
  static const MethodInfo* get() {
    static auto* phase = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "TouchPhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputExtensions*), "IsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{phase});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputExtensions::IsModifierKey
// Il2CppName: IsModifierKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::InputSystem::Key)>(&UnityEngine::InputSystem::InputExtensions::IsModifierKey)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "Key")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputExtensions*), "IsModifierKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputExtensions::IsTextInputKey
// Il2CppName: IsTextInputKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::InputSystem::Key)>(&UnityEngine::InputSystem::InputExtensions::IsTextInputKey)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "Key")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputExtensions*), "IsTextInputKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
