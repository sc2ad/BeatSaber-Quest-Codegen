// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputActionMap
  class InputActionMap;
  // Forward declaring type: InputActionAsset
  class InputActionAsset;
  // Forward declaring type: InputAction
  class InputAction;
  // Forward declaring type: InputActionType
  struct InputActionType;
  // Forward declaring type: InputControl
  class InputControl;
  // Forward declaring type: InputBinding
  struct InputBinding;
  // Forward declaring type: InputControlScheme
  struct InputControlScheme;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Guid
  struct Guid;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputActionSetupExtensions
  class InputActionSetupExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::InputActionSetupExtensions);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputActionSetupExtensions*, "UnityEngine.InputSystem", "InputActionSetupExtensions");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.InputActionSetupExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class InputActionSetupExtensions : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax
    struct BindingSyntax;
    // Nested type: ::UnityEngine::InputSystem::InputActionSetupExtensions::CompositeSyntax
    struct CompositeSyntax;
    // Nested type: ::UnityEngine::InputSystem::InputActionSetupExtensions::ControlSchemeSyntax
    struct ControlSchemeSyntax;
    // Nested type: ::UnityEngine::InputSystem::InputActionSetupExtensions::$$c__DisplayClass5_0
    class $$c__DisplayClass5_0;
    // static public UnityEngine.InputSystem.InputActionMap AddActionMap(UnityEngine.InputSystem.InputActionAsset asset, System.String name)
    // Offset: 0xF49D58
    static ::UnityEngine::InputSystem::InputActionMap* AddActionMap(::UnityEngine::InputSystem::InputActionAsset* asset, ::StringW name);
    // static public System.Void AddActionMap(UnityEngine.InputSystem.InputActionAsset asset, UnityEngine.InputSystem.InputActionMap map)
    // Offset: 0xF49F08
    static void AddActionMap(::UnityEngine::InputSystem::InputActionAsset* asset, ::UnityEngine::InputSystem::InputActionMap* map);
    // static public System.Void RemoveActionMap(UnityEngine.InputSystem.InputActionAsset asset, UnityEngine.InputSystem.InputActionMap map)
    // Offset: 0xF4A114
    static void RemoveActionMap(::UnityEngine::InputSystem::InputActionAsset* asset, ::UnityEngine::InputSystem::InputActionMap* map);
    // static public System.Void RemoveActionMap(UnityEngine.InputSystem.InputActionAsset asset, System.String nameOrId)
    // Offset: 0xF4A27C
    static void RemoveActionMap(::UnityEngine::InputSystem::InputActionAsset* asset, ::StringW nameOrId);
    // static public UnityEngine.InputSystem.InputAction AddAction(UnityEngine.InputSystem.InputActionMap map, System.String name, UnityEngine.InputSystem.InputActionType type, System.String binding, System.String interactions, System.String processors, System.String groups, System.String expectedControlLayout)
    // Offset: 0xF4A38C
    static ::UnityEngine::InputSystem::InputAction* AddAction(::UnityEngine::InputSystem::InputActionMap* map, ::StringW name, ::UnityEngine::InputSystem::InputActionType type, ::StringW binding, ::StringW interactions, ::StringW processors, ::StringW groups, ::StringW expectedControlLayout);
    // static public System.Void RemoveAction(UnityEngine.InputSystem.InputAction action)
    // Offset: 0xF4A714
    static void RemoveAction(::UnityEngine::InputSystem::InputAction* action);
    // static public System.Void RemoveAction(UnityEngine.InputSystem.InputActionAsset asset, System.String nameOrId)
    // Offset: 0xF4AA70
    static void RemoveAction(::UnityEngine::InputSystem::InputActionAsset* asset, ::StringW nameOrId);
    // static public UnityEngine.InputSystem.InputActionSetupExtensions/UnityEngine.InputSystem.BindingSyntax AddBinding(UnityEngine.InputSystem.InputAction action, System.String path, System.String interactions, System.String processors, System.String groups)
    // Offset: 0xF4945C
    static ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax AddBinding(::UnityEngine::InputSystem::InputAction* action, ::StringW path, ::StringW interactions, ::StringW processors, ::StringW groups);
    // static public UnityEngine.InputSystem.InputActionSetupExtensions/UnityEngine.InputSystem.BindingSyntax AddBinding(UnityEngine.InputSystem.InputAction action, UnityEngine.InputSystem.InputControl control)
    // Offset: 0xF4AC68
    static ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax AddBinding(::UnityEngine::InputSystem::InputAction* action, ::UnityEngine::InputSystem::InputControl* control);
    // static public UnityEngine.InputSystem.InputActionSetupExtensions/UnityEngine.InputSystem.BindingSyntax AddBinding(UnityEngine.InputSystem.InputAction action, UnityEngine.InputSystem.InputBinding binding)
    // Offset: 0xF4AB78
    static ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax AddBinding(::UnityEngine::InputSystem::InputAction* action, ::UnityEngine::InputSystem::InputBinding binding);
    // static public UnityEngine.InputSystem.InputActionSetupExtensions/UnityEngine.InputSystem.BindingSyntax AddBinding(UnityEngine.InputSystem.InputActionMap actionMap, System.String path, System.String interactions, System.String groups, System.String action)
    // Offset: 0xF4AE10
    static ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax AddBinding(::UnityEngine::InputSystem::InputActionMap* actionMap, ::StringW path, ::StringW interactions, ::StringW groups, ::StringW action);
    // static public UnityEngine.InputSystem.InputActionSetupExtensions/UnityEngine.InputSystem.BindingSyntax AddBinding(UnityEngine.InputSystem.InputActionMap actionMap, System.String path, UnityEngine.InputSystem.InputAction action, System.String interactions, System.String groups)
    // Offset: 0xF4B00C
    static ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax AddBinding(::UnityEngine::InputSystem::InputActionMap* actionMap, ::StringW path, ::UnityEngine::InputSystem::InputAction* action, ::StringW interactions, ::StringW groups);
    // static public UnityEngine.InputSystem.InputActionSetupExtensions/UnityEngine.InputSystem.BindingSyntax AddBinding(UnityEngine.InputSystem.InputActionMap actionMap, System.String path, System.Guid action, System.String interactions, System.String groups)
    // Offset: 0xF4B150
    static ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax AddBinding(::UnityEngine::InputSystem::InputActionMap* actionMap, ::StringW path, ::System::Guid action, ::StringW interactions, ::StringW groups);
    // static public UnityEngine.InputSystem.InputActionSetupExtensions/UnityEngine.InputSystem.BindingSyntax AddBinding(UnityEngine.InputSystem.InputActionMap actionMap, UnityEngine.InputSystem.InputBinding binding)
    // Offset: 0xF4AEF8
    static ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax AddBinding(::UnityEngine::InputSystem::InputActionMap* actionMap, ::UnityEngine::InputSystem::InputBinding binding);
    // static public UnityEngine.InputSystem.InputActionSetupExtensions/UnityEngine.InputSystem.CompositeSyntax AddCompositeBinding(UnityEngine.InputSystem.InputAction action, System.String composite, System.String interactions, System.String processors)
    // Offset: 0xF4B268
    static ::UnityEngine::InputSystem::InputActionSetupExtensions::CompositeSyntax AddCompositeBinding(::UnityEngine::InputSystem::InputAction* action, ::StringW composite, ::StringW interactions, ::StringW processors);
    // static private System.Int32 AddBindingInternal(UnityEngine.InputSystem.InputActionMap map, UnityEngine.InputSystem.InputBinding binding)
    // Offset: 0xF4AD34
    static int AddBindingInternal(::UnityEngine::InputSystem::InputActionMap* map, ::UnityEngine::InputSystem::InputBinding binding);
    // static public UnityEngine.InputSystem.InputActionSetupExtensions/UnityEngine.InputSystem.BindingSyntax ChangeBinding(UnityEngine.InputSystem.InputAction action, System.Int32 index)
    // Offset: 0xF4B3E8
    static ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax ChangeBinding(::UnityEngine::InputSystem::InputAction* action, int index);
    // static public UnityEngine.InputSystem.InputActionSetupExtensions/UnityEngine.InputSystem.BindingSyntax ChangeBindingWithId(UnityEngine.InputSystem.InputAction action, System.String id)
    // Offset: 0xF4B4B4
    static ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax ChangeBindingWithId(::UnityEngine::InputSystem::InputAction* action, ::StringW id);
    // static public UnityEngine.InputSystem.InputActionSetupExtensions/UnityEngine.InputSystem.BindingSyntax ChangeBindingWithId(UnityEngine.InputSystem.InputAction action, System.Guid id)
    // Offset: 0xF4B6BC
    static ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax ChangeBindingWithId(::UnityEngine::InputSystem::InputAction* action, ::System::Guid id);
    // static public UnityEngine.InputSystem.InputActionSetupExtensions/UnityEngine.InputSystem.BindingSyntax ChangeBindingWithGroup(UnityEngine.InputSystem.InputAction action, System.String group)
    // Offset: 0xF4B738
    static ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax ChangeBindingWithGroup(::UnityEngine::InputSystem::InputAction* action, ::StringW group);
    // static public UnityEngine.InputSystem.InputActionSetupExtensions/UnityEngine.InputSystem.BindingSyntax ChangeBindingWithPath(UnityEngine.InputSystem.InputAction action, System.String path)
    // Offset: 0xF4B770
    static ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax ChangeBindingWithPath(::UnityEngine::InputSystem::InputAction* action, ::StringW path);
    // static public UnityEngine.InputSystem.InputActionSetupExtensions/UnityEngine.InputSystem.BindingSyntax ChangeBinding(UnityEngine.InputSystem.InputAction action, UnityEngine.InputSystem.InputBinding match)
    // Offset: 0xF4B504
    static ::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax ChangeBinding(::UnityEngine::InputSystem::InputAction* action, ::UnityEngine::InputSystem::InputBinding match);
    // static public System.Void Rename(UnityEngine.InputSystem.InputAction action, System.String newName)
    // Offset: 0xF4B7A8
    static void Rename(::UnityEngine::InputSystem::InputAction* action, ::StringW newName);
    // static public System.Void AddControlScheme(UnityEngine.InputSystem.InputActionAsset asset, UnityEngine.InputSystem.InputControlScheme controlScheme)
    // Offset: 0xF4B9BC
    static void AddControlScheme(::UnityEngine::InputSystem::InputActionAsset* asset, ::UnityEngine::InputSystem::InputControlScheme controlScheme);
    // static public UnityEngine.InputSystem.InputActionSetupExtensions/UnityEngine.InputSystem.ControlSchemeSyntax AddControlScheme(UnityEngine.InputSystem.InputActionAsset asset, System.String name)
    // Offset: 0xF4BC90
    static ::UnityEngine::InputSystem::InputActionSetupExtensions::ControlSchemeSyntax AddControlScheme(::UnityEngine::InputSystem::InputActionAsset* asset, ::StringW name);
    // static public System.Void RemoveControlScheme(UnityEngine.InputSystem.InputActionAsset asset, System.String name)
    // Offset: 0xF4BDF8
    static void RemoveControlScheme(::UnityEngine::InputSystem::InputActionAsset* asset, ::StringW name);
    // static public UnityEngine.InputSystem.InputControlScheme WithBindingGroup(UnityEngine.InputSystem.InputControlScheme scheme, System.String bindingGroup)
    // Offset: 0xF4BF20
    static ::UnityEngine::InputSystem::InputControlScheme WithBindingGroup(::UnityEngine::InputSystem::InputControlScheme scheme, ::StringW bindingGroup);
    // static public UnityEngine.InputSystem.InputControlScheme WithRequiredDevice(UnityEngine.InputSystem.InputControlScheme scheme, System.String controlPath)
    // Offset: 0xF4BFCC
    static ::UnityEngine::InputSystem::InputControlScheme WithRequiredDevice(::UnityEngine::InputSystem::InputControlScheme scheme, ::StringW controlPath);
    // static public UnityEngine.InputSystem.InputControlScheme WithOptionalDevice(UnityEngine.InputSystem.InputControlScheme scheme, System.String controlPath)
    // Offset: 0xF4C078
    static ::UnityEngine::InputSystem::InputControlScheme WithOptionalDevice(::UnityEngine::InputSystem::InputControlScheme scheme, ::StringW controlPath);
    // static public UnityEngine.InputSystem.InputControlScheme OrWithRequiredDevice(UnityEngine.InputSystem.InputControlScheme scheme, System.String controlPath)
    // Offset: 0xF4C124
    static ::UnityEngine::InputSystem::InputControlScheme OrWithRequiredDevice(::UnityEngine::InputSystem::InputControlScheme scheme, ::StringW controlPath);
    // static public UnityEngine.InputSystem.InputControlScheme OrWithOptionalDevice(UnityEngine.InputSystem.InputControlScheme scheme, System.String controlPath)
    // Offset: 0xF4C1D0
    static ::UnityEngine::InputSystem::InputControlScheme OrWithOptionalDevice(::UnityEngine::InputSystem::InputControlScheme scheme, ::StringW controlPath);
  }; // UnityEngine.InputSystem.InputActionSetupExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::AddActionMap
// Il2CppName: AddActionMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionMap* (*)(::UnityEngine::InputSystem::InputActionAsset*, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::AddActionMap)> {
  static const MethodInfo* get() {
    static auto* asset = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionAsset")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "AddActionMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asset, name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::AddActionMap
// Il2CppName: AddActionMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputActionAsset*, ::UnityEngine::InputSystem::InputActionMap*)>(&UnityEngine::InputSystem::InputActionSetupExtensions::AddActionMap)> {
  static const MethodInfo* get() {
    static auto* asset = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionAsset")->byval_arg;
    static auto* map = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionMap")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "AddActionMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asset, map});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::RemoveActionMap
// Il2CppName: RemoveActionMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputActionAsset*, ::UnityEngine::InputSystem::InputActionMap*)>(&UnityEngine::InputSystem::InputActionSetupExtensions::RemoveActionMap)> {
  static const MethodInfo* get() {
    static auto* asset = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionAsset")->byval_arg;
    static auto* map = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionMap")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "RemoveActionMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asset, map});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::RemoveActionMap
// Il2CppName: RemoveActionMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputActionAsset*, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::RemoveActionMap)> {
  static const MethodInfo* get() {
    static auto* asset = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionAsset")->byval_arg;
    static auto* nameOrId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "RemoveActionMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asset, nameOrId});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::AddAction
// Il2CppName: AddAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputAction* (*)(::UnityEngine::InputSystem::InputActionMap*, ::StringW, ::UnityEngine::InputSystem::InputActionType, ::StringW, ::StringW, ::StringW, ::StringW, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::AddAction)> {
  static const MethodInfo* get() {
    static auto* map = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionMap")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionType")->byval_arg;
    static auto* binding = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* interactions = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* processors = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* groups = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* expectedControlLayout = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "AddAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{map, name, type, binding, interactions, processors, groups, expectedControlLayout});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::RemoveAction
// Il2CppName: RemoveAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputAction*)>(&UnityEngine::InputSystem::InputActionSetupExtensions::RemoveAction)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "RemoveAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::RemoveAction
// Il2CppName: RemoveAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputActionAsset*, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::RemoveAction)> {
  static const MethodInfo* get() {
    static auto* asset = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionAsset")->byval_arg;
    static auto* nameOrId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "RemoveAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asset, nameOrId});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::AddBinding
// Il2CppName: AddBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (*)(::UnityEngine::InputSystem::InputAction*, ::StringW, ::StringW, ::StringW, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::AddBinding)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* interactions = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* processors = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* groups = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "AddBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action, path, interactions, processors, groups});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::AddBinding
// Il2CppName: AddBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (*)(::UnityEngine::InputSystem::InputAction*, ::UnityEngine::InputSystem::InputControl*)>(&UnityEngine::InputSystem::InputActionSetupExtensions::AddBinding)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    static auto* control = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "AddBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action, control});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::AddBinding
// Il2CppName: AddBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (*)(::UnityEngine::InputSystem::InputAction*, ::UnityEngine::InputSystem::InputBinding)>(&UnityEngine::InputSystem::InputActionSetupExtensions::AddBinding)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    static auto* binding = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputBinding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "AddBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action, binding});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::AddBinding
// Il2CppName: AddBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (*)(::UnityEngine::InputSystem::InputActionMap*, ::StringW, ::StringW, ::StringW, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::AddBinding)> {
  static const MethodInfo* get() {
    static auto* actionMap = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionMap")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* interactions = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* groups = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* action = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "AddBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actionMap, path, interactions, groups, action});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::AddBinding
// Il2CppName: AddBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (*)(::UnityEngine::InputSystem::InputActionMap*, ::StringW, ::UnityEngine::InputSystem::InputAction*, ::StringW, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::AddBinding)> {
  static const MethodInfo* get() {
    static auto* actionMap = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionMap")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    static auto* interactions = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* groups = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "AddBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actionMap, path, action, interactions, groups});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::AddBinding
// Il2CppName: AddBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (*)(::UnityEngine::InputSystem::InputActionMap*, ::StringW, ::System::Guid, ::StringW, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::AddBinding)> {
  static const MethodInfo* get() {
    static auto* actionMap = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionMap")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* action = &::il2cpp_utils::GetClassFromName("System", "Guid")->byval_arg;
    static auto* interactions = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* groups = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "AddBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actionMap, path, action, interactions, groups});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::AddBinding
// Il2CppName: AddBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (*)(::UnityEngine::InputSystem::InputActionMap*, ::UnityEngine::InputSystem::InputBinding)>(&UnityEngine::InputSystem::InputActionSetupExtensions::AddBinding)> {
  static const MethodInfo* get() {
    static auto* actionMap = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionMap")->byval_arg;
    static auto* binding = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputBinding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "AddBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actionMap, binding});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::AddCompositeBinding
// Il2CppName: AddCompositeBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::CompositeSyntax (*)(::UnityEngine::InputSystem::InputAction*, ::StringW, ::StringW, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::AddCompositeBinding)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    static auto* composite = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* interactions = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* processors = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "AddCompositeBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action, composite, interactions, processors});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::AddBindingInternal
// Il2CppName: AddBindingInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::InputSystem::InputActionMap*, ::UnityEngine::InputSystem::InputBinding)>(&UnityEngine::InputSystem::InputActionSetupExtensions::AddBindingInternal)> {
  static const MethodInfo* get() {
    static auto* map = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionMap")->byval_arg;
    static auto* binding = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputBinding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "AddBindingInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{map, binding});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::ChangeBinding
// Il2CppName: ChangeBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (*)(::UnityEngine::InputSystem::InputAction*, int)>(&UnityEngine::InputSystem::InputActionSetupExtensions::ChangeBinding)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "ChangeBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action, index});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::ChangeBindingWithId
// Il2CppName: ChangeBindingWithId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (*)(::UnityEngine::InputSystem::InputAction*, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::ChangeBindingWithId)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "ChangeBindingWithId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action, id});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::ChangeBindingWithId
// Il2CppName: ChangeBindingWithId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (*)(::UnityEngine::InputSystem::InputAction*, ::System::Guid)>(&UnityEngine::InputSystem::InputActionSetupExtensions::ChangeBindingWithId)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Guid")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "ChangeBindingWithId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action, id});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::ChangeBindingWithGroup
// Il2CppName: ChangeBindingWithGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (*)(::UnityEngine::InputSystem::InputAction*, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::ChangeBindingWithGroup)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    static auto* group = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "ChangeBindingWithGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action, group});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::ChangeBindingWithPath
// Il2CppName: ChangeBindingWithPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (*)(::UnityEngine::InputSystem::InputAction*, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::ChangeBindingWithPath)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "ChangeBindingWithPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action, path});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::ChangeBinding
// Il2CppName: ChangeBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::BindingSyntax (*)(::UnityEngine::InputSystem::InputAction*, ::UnityEngine::InputSystem::InputBinding)>(&UnityEngine::InputSystem::InputActionSetupExtensions::ChangeBinding)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    static auto* match = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputBinding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "ChangeBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action, match});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::Rename
// Il2CppName: Rename
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputAction*, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::Rename)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    static auto* newName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "Rename", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action, newName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::AddControlScheme
// Il2CppName: AddControlScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputActionAsset*, ::UnityEngine::InputSystem::InputControlScheme)>(&UnityEngine::InputSystem::InputActionSetupExtensions::AddControlScheme)> {
  static const MethodInfo* get() {
    static auto* asset = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionAsset")->byval_arg;
    static auto* controlScheme = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControlScheme")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "AddControlScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asset, controlScheme});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::AddControlScheme
// Il2CppName: AddControlScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionSetupExtensions::ControlSchemeSyntax (*)(::UnityEngine::InputSystem::InputActionAsset*, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::AddControlScheme)> {
  static const MethodInfo* get() {
    static auto* asset = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionAsset")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "AddControlScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asset, name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::RemoveControlScheme
// Il2CppName: RemoveControlScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputActionAsset*, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::RemoveControlScheme)> {
  static const MethodInfo* get() {
    static auto* asset = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionAsset")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "RemoveControlScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asset, name});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::WithBindingGroup
// Il2CppName: WithBindingGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlScheme (*)(::UnityEngine::InputSystem::InputControlScheme, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::WithBindingGroup)> {
  static const MethodInfo* get() {
    static auto* scheme = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControlScheme")->byval_arg;
    static auto* bindingGroup = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "WithBindingGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scheme, bindingGroup});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::WithRequiredDevice
// Il2CppName: WithRequiredDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlScheme (*)(::UnityEngine::InputSystem::InputControlScheme, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::WithRequiredDevice)> {
  static const MethodInfo* get() {
    static auto* scheme = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControlScheme")->byval_arg;
    static auto* controlPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "WithRequiredDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scheme, controlPath});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::WithOptionalDevice
// Il2CppName: WithOptionalDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlScheme (*)(::UnityEngine::InputSystem::InputControlScheme, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::WithOptionalDevice)> {
  static const MethodInfo* get() {
    static auto* scheme = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControlScheme")->byval_arg;
    static auto* controlPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "WithOptionalDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scheme, controlPath});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::OrWithRequiredDevice
// Il2CppName: OrWithRequiredDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlScheme (*)(::UnityEngine::InputSystem::InputControlScheme, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::OrWithRequiredDevice)> {
  static const MethodInfo* get() {
    static auto* scheme = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControlScheme")->byval_arg;
    static auto* controlPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "OrWithRequiredDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scheme, controlPath});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionSetupExtensions::OrWithOptionalDevice
// Il2CppName: OrWithOptionalDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControlScheme (*)(::UnityEngine::InputSystem::InputControlScheme, ::StringW)>(&UnityEngine::InputSystem::InputActionSetupExtensions::OrWithOptionalDevice)> {
  static const MethodInfo* get() {
    static auto* scheme = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputControlScheme")->byval_arg;
    static auto* controlPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionSetupExtensions*), "OrWithOptionalDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scheme, controlPath});
  }
};
