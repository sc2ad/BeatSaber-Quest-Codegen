// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.OnScreen.OnScreenControl
#include "UnityEngine/InputSystem/OnScreen/OnScreenControl.hpp"
// Including type: UnityEngine.EventSystems.IPointerDownHandler
#include "UnityEngine/EventSystems/IPointerDownHandler.hpp"
// Including type: UnityEngine.EventSystems.IPointerUpHandler
#include "UnityEngine/EventSystems/IPointerUpHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: PointerEventData
  class PointerEventData;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem.OnScreen
namespace UnityEngine::InputSystem::OnScreen {
  // Forward declaring type: OnScreenButton
  class OnScreenButton;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::OnScreen::OnScreenButton);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::OnScreen::OnScreenButton*, "UnityEngine.InputSystem.OnScreen", "OnScreenButton");
// Type namespace: UnityEngine.InputSystem.OnScreen
namespace UnityEngine::InputSystem::OnScreen {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.OnScreen.OnScreenButton
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: 95830C
  class OnScreenButton : public ::UnityEngine::InputSystem::OnScreen::OnScreenControl/*, public ::UnityEngine::EventSystems::IPointerDownHandler, public ::UnityEngine::EventSystems::IPointerUpHandler*/ {
    public:
    public:
    // [InputControlAttribute] Offset: 0x95BA64
    // private System.String m_ControlPath
    // Size: 0x8
    // Offset: 0x30
    ::StringW m_ControlPath;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IPointerDownHandler
    operator ::UnityEngine::EventSystems::IPointerDownHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IPointerDownHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IPointerUpHandler
    operator ::UnityEngine::EventSystems::IPointerUpHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IPointerUpHandler*>(this);
    }
    // Get instance field reference: private System.String m_ControlPath
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_ControlPath();
    // public System.Void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0xCC8710
    void OnPointerUp(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0xCC8764
    void OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData);
    // protected override System.String get_controlPathInternal()
    // Offset: 0xCC87B8
    // Implemented from: UnityEngine.InputSystem.OnScreen.OnScreenControl
    // Base method: System.String OnScreenControl::get_controlPathInternal()
    ::StringW get_controlPathInternal();
    // protected override System.Void set_controlPathInternal(System.String value)
    // Offset: 0xCC87C0
    // Implemented from: UnityEngine.InputSystem.OnScreen.OnScreenControl
    // Base method: System.Void OnScreenControl::set_controlPathInternal(System.String value)
    void set_controlPathInternal(::StringW value);
    // public System.Void .ctor()
    // Offset: 0xCC87C8
    // Implemented from: UnityEngine.InputSystem.OnScreen.OnScreenControl
    // Base method: System.Void OnScreenControl::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OnScreenButton* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::OnScreen::OnScreenButton::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OnScreenButton*, creationType>()));
    }
  }; // UnityEngine.InputSystem.OnScreen.OnScreenButton
  #pragma pack(pop)
  static check_size<sizeof(OnScreenButton), 48 + sizeof(::StringW)> __UnityEngine_InputSystem_OnScreen_OnScreenButtonSizeCheck;
  static_assert(sizeof(OnScreenButton) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenButton::OnPointerUp
// Il2CppName: OnPointerUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenButton::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::InputSystem::OnScreen::OnScreenButton::OnPointerUp)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenButton*), "OnPointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenButton::OnPointerDown
// Il2CppName: OnPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenButton::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::InputSystem::OnScreen::OnScreenButton::OnPointerDown)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenButton*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenButton::get_controlPathInternal
// Il2CppName: get_controlPathInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::OnScreen::OnScreenButton::*)()>(&UnityEngine::InputSystem::OnScreen::OnScreenButton::get_controlPathInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenButton*), "get_controlPathInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenButton::set_controlPathInternal
// Il2CppName: set_controlPathInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::OnScreen::OnScreenButton::*)(::StringW)>(&UnityEngine::InputSystem::OnScreen::OnScreenButton::set_controlPathInternal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::OnScreen::OnScreenButton*), "set_controlPathInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::OnScreen::OnScreenButton::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
