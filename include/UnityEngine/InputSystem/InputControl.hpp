// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.LowLevel.InputStateBlock
#include "UnityEngine/InputSystem/LowLevel/InputStateBlock.hpp"
// Including type: UnityEngine.InputSystem.Utilities.InternedString
#include "UnityEngine/InputSystem/Utilities/InternedString.hpp"
// Including type: UnityEngine.InputSystem.Utilities.PrimitiveValue
#include "UnityEngine/InputSystem/Utilities/PrimitiveValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Utilities
namespace UnityEngine::InputSystem::Utilities {
  // Forward declaring type: ReadOnlyArray`1<TValue>
  template<typename TValue>
  struct ReadOnlyArray_1;
}
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputDevice
  class InputDevice;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputControl
  class InputControl;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::InputControl);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputControl*, "UnityEngine.InputSystem", "InputControl");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0xD4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.InputControl
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 9575D4
  // [DebuggerDisplayAttribute] Offset: 9575D4
  // [PreserveAttribute] Offset: FFFFFFFF
  class InputControl : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::InputSystem::InputControl::ControlFlags
    struct ControlFlags;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.InputSystem.InputControl/UnityEngine.InputSystem.ControlFlags
    // [TokenAttribute] Offset: FFFFFFFF
    // [FlagsAttribute] Offset: FFFFFFFF
    struct ControlFlags/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: ControlFlags
      constexpr ControlFlags(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.InputSystem.InputControl/UnityEngine.InputSystem.ControlFlags ConfigUpToDate
      static constexpr const int ConfigUpToDate = 1;
      // Get static field: static public UnityEngine.InputSystem.InputControl/UnityEngine.InputSystem.ControlFlags ConfigUpToDate
      static ::UnityEngine::InputSystem::InputControl::ControlFlags _get_ConfigUpToDate();
      // Set static field: static public UnityEngine.InputSystem.InputControl/UnityEngine.InputSystem.ControlFlags ConfigUpToDate
      static void _set_ConfigUpToDate(::UnityEngine::InputSystem::InputControl::ControlFlags value);
      // static field const value: static public UnityEngine.InputSystem.InputControl/UnityEngine.InputSystem.ControlFlags IsNoisy
      static constexpr const int IsNoisy = 2;
      // Get static field: static public UnityEngine.InputSystem.InputControl/UnityEngine.InputSystem.ControlFlags IsNoisy
      static ::UnityEngine::InputSystem::InputControl::ControlFlags _get_IsNoisy();
      // Set static field: static public UnityEngine.InputSystem.InputControl/UnityEngine.InputSystem.ControlFlags IsNoisy
      static void _set_IsNoisy(::UnityEngine::InputSystem::InputControl::ControlFlags value);
      // static field const value: static public UnityEngine.InputSystem.InputControl/UnityEngine.InputSystem.ControlFlags IsSynthetic
      static constexpr const int IsSynthetic = 4;
      // Get static field: static public UnityEngine.InputSystem.InputControl/UnityEngine.InputSystem.ControlFlags IsSynthetic
      static ::UnityEngine::InputSystem::InputControl::ControlFlags _get_IsSynthetic();
      // Set static field: static public UnityEngine.InputSystem.InputControl/UnityEngine.InputSystem.ControlFlags IsSynthetic
      static void _set_IsSynthetic(::UnityEngine::InputSystem::InputControl::ControlFlags value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.InputSystem.InputControl/UnityEngine.InputSystem.ControlFlags
    #pragma pack(pop)
    static check_size<sizeof(InputControl::ControlFlags), 0 + sizeof(int)> __UnityEngine_InputSystem_InputControl_ControlFlagsSizeCheck;
    static_assert(sizeof(InputControl::ControlFlags) == 0x4);
    public:
    // protected internal UnityEngine.InputSystem.LowLevel.InputStateBlock m_StateBlock
    // Size: 0x10
    // Offset: 0x10
    ::UnityEngine::InputSystem::LowLevel::InputStateBlock m_StateBlock;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::LowLevel::InputStateBlock) == 0x10);
    // UnityEngine.InputSystem.Utilities.InternedString m_Name
    // Size: 0x10
    // Offset: 0x20
    ::UnityEngine::InputSystem::Utilities::InternedString m_Name;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Utilities::InternedString) == 0x10);
    // System.String m_Path
    // Size: 0x8
    // Offset: 0x30
    ::StringW m_Path;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.String m_DisplayName
    // Size: 0x8
    // Offset: 0x38
    ::StringW m_DisplayName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.String m_DisplayNameFromLayout
    // Size: 0x8
    // Offset: 0x40
    ::StringW m_DisplayNameFromLayout;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.String m_ShortDisplayName
    // Size: 0x8
    // Offset: 0x48
    ::StringW m_ShortDisplayName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.String m_ShortDisplayNameFromLayout
    // Size: 0x8
    // Offset: 0x50
    ::StringW m_ShortDisplayNameFromLayout;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // UnityEngine.InputSystem.Utilities.InternedString m_Layout
    // Size: 0x10
    // Offset: 0x58
    ::UnityEngine::InputSystem::Utilities::InternedString m_Layout;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Utilities::InternedString) == 0x10);
    // UnityEngine.InputSystem.Utilities.InternedString m_Variants
    // Size: 0x10
    // Offset: 0x68
    ::UnityEngine::InputSystem::Utilities::InternedString m_Variants;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Utilities::InternedString) == 0x10);
    // UnityEngine.InputSystem.InputDevice m_Device
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::InputSystem::InputDevice* m_Device;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputDevice*) == 0x8);
    // UnityEngine.InputSystem.InputControl m_Parent
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::InputSystem::InputControl* m_Parent;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputControl*) == 0x8);
    // System.Int32 m_UsageCount
    // Size: 0x4
    // Offset: 0x88
    int m_UsageCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 m_UsageStartIndex
    // Size: 0x4
    // Offset: 0x8C
    int m_UsageStartIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 m_AliasCount
    // Size: 0x4
    // Offset: 0x90
    int m_AliasCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 m_AliasStartIndex
    // Size: 0x4
    // Offset: 0x94
    int m_AliasStartIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 m_ChildCount
    // Size: 0x4
    // Offset: 0x98
    int m_ChildCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 m_ChildStartIndex
    // Size: 0x4
    // Offset: 0x9C
    int m_ChildStartIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // UnityEngine.InputSystem.InputControl/UnityEngine.InputSystem.ControlFlags m_ControlFlags
    // Size: 0x4
    // Offset: 0xA0
    ::UnityEngine::InputSystem::InputControl::ControlFlags m_ControlFlags;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputControl::ControlFlags) == 0x4);
    // Padding between fields: m_ControlFlags and: m_DefaultState
    char __padding17[0x4] = {};
    // UnityEngine.InputSystem.Utilities.PrimitiveValue m_DefaultState
    // Size: 0xC
    // Offset: 0xA8
    ::UnityEngine::InputSystem::Utilities::PrimitiveValue m_DefaultState;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Utilities::PrimitiveValue) == 0xC);
    // Padding between fields: m_DefaultState and: m_MinValue
    char __padding18[0x4] = {};
    // UnityEngine.InputSystem.Utilities.PrimitiveValue m_MinValue
    // Size: 0xC
    // Offset: 0xB8
    ::UnityEngine::InputSystem::Utilities::PrimitiveValue m_MinValue;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Utilities::PrimitiveValue) == 0xC);
    // Padding between fields: m_MinValue and: m_MaxValue
    char __padding19[0x4] = {};
    // UnityEngine.InputSystem.Utilities.PrimitiveValue m_MaxValue
    // Size: 0xC
    // Offset: 0xC8
    ::UnityEngine::InputSystem::Utilities::PrimitiveValue m_MaxValue;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Utilities::PrimitiveValue) == 0xC);
    public:
    // Get instance field reference: protected internal UnityEngine.InputSystem.LowLevel.InputStateBlock m_StateBlock
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::LowLevel::InputStateBlock& dyn_m_StateBlock();
    // Get instance field reference: UnityEngine.InputSystem.Utilities.InternedString m_Name
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InternedString& dyn_m_Name();
    // Get instance field reference: System.String m_Path
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Path();
    // Get instance field reference: System.String m_DisplayName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_DisplayName();
    // Get instance field reference: System.String m_DisplayNameFromLayout
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_DisplayNameFromLayout();
    // Get instance field reference: System.String m_ShortDisplayName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_ShortDisplayName();
    // Get instance field reference: System.String m_ShortDisplayNameFromLayout
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_ShortDisplayNameFromLayout();
    // Get instance field reference: UnityEngine.InputSystem.Utilities.InternedString m_Layout
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InternedString& dyn_m_Layout();
    // Get instance field reference: UnityEngine.InputSystem.Utilities.InternedString m_Variants
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InternedString& dyn_m_Variants();
    // Get instance field reference: UnityEngine.InputSystem.InputDevice m_Device
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputDevice*& dyn_m_Device();
    // Get instance field reference: UnityEngine.InputSystem.InputControl m_Parent
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputControl*& dyn_m_Parent();
    // Get instance field reference: System.Int32 m_UsageCount
    [[deprecated("Use field access instead!")]] int& dyn_m_UsageCount();
    // Get instance field reference: System.Int32 m_UsageStartIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_UsageStartIndex();
    // Get instance field reference: System.Int32 m_AliasCount
    [[deprecated("Use field access instead!")]] int& dyn_m_AliasCount();
    // Get instance field reference: System.Int32 m_AliasStartIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_AliasStartIndex();
    // Get instance field reference: System.Int32 m_ChildCount
    [[deprecated("Use field access instead!")]] int& dyn_m_ChildCount();
    // Get instance field reference: System.Int32 m_ChildStartIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_ChildStartIndex();
    // Get instance field reference: UnityEngine.InputSystem.InputControl/UnityEngine.InputSystem.ControlFlags m_ControlFlags
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputControl::ControlFlags& dyn_m_ControlFlags();
    // Get instance field reference: UnityEngine.InputSystem.Utilities.PrimitiveValue m_DefaultState
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::PrimitiveValue& dyn_m_DefaultState();
    // Get instance field reference: UnityEngine.InputSystem.Utilities.PrimitiveValue m_MinValue
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::PrimitiveValue& dyn_m_MinValue();
    // Get instance field reference: UnityEngine.InputSystem.Utilities.PrimitiveValue m_MaxValue
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::PrimitiveValue& dyn_m_MaxValue();
    // public System.String get_name()
    // Offset: 0x1377BEC
    ::StringW get_name();
    // public System.String get_displayName()
    // Offset: 0x1377BFC
    ::StringW get_displayName();
    // protected System.Void set_displayName(System.String value)
    // Offset: 0x1377CA4
    void set_displayName(::StringW value);
    // public System.String get_shortDisplayName()
    // Offset: 0x1377CAC
    ::StringW get_shortDisplayName();
    // protected System.Void set_shortDisplayName(System.String value)
    // Offset: 0x1377CFC
    void set_shortDisplayName(::StringW value);
    // public System.String get_path()
    // Offset: 0x1377D04
    ::StringW get_path();
    // public System.String get_layout()
    // Offset: 0x1377E40
    ::StringW get_layout();
    // public System.String get_variants()
    // Offset: 0x1377E50
    ::StringW get_variants();
    // public UnityEngine.InputSystem.InputDevice get_device()
    // Offset: 0x1377E60
    ::UnityEngine::InputSystem::InputDevice* get_device();
    // public UnityEngine.InputSystem.InputControl get_parent()
    // Offset: 0x1377E68
    ::UnityEngine::InputSystem::InputControl* get_parent();
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputControl> get_children()
    // Offset: 0x1377E70
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputControl*> get_children();
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.InternedString> get_usages()
    // Offset: 0x1377EE8
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::InternedString> get_usages();
    // public UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.Utilities.InternedString> get_aliases()
    // Offset: 0x1377F60
    ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::InternedString> get_aliases();
    // public UnityEngine.InputSystem.LowLevel.InputStateBlock get_stateBlock()
    // Offset: 0x1377FD8
    ::UnityEngine::InputSystem::LowLevel::InputStateBlock get_stateBlock();
    // public System.Boolean get_noisy()
    // Offset: 0x1377FE4
    bool get_noisy();
    // System.Void set_noisy(System.Boolean value)
    // Offset: 0x1377FF0
    void set_noisy(bool value);
    // public System.Boolean get_synthetic()
    // Offset: 0x13780B8
    bool get_synthetic();
    // System.Void set_synthetic(System.Boolean value)
    // Offset: 0x13780C4
    void set_synthetic(bool value);
    // public UnityEngine.InputSystem.InputControl get_Item(System.String path)
    // Offset: 0x13780E0
    ::UnityEngine::InputSystem::InputControl* get_Item(::StringW path);
    // public System.Type get_valueType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Type* get_valueType();
    // public System.Int32 get_valueSizeInBytes()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_valueSizeInBytes();
    // protected internal System.Void* get_currentStatePtr()
    // Offset: 0x13783A8
    void* get_currentStatePtr();
    // protected internal System.Void* get_previousFrameStatePtr()
    // Offset: 0x1378960
    void* get_previousFrameStatePtr();
    // protected internal System.Void* get_defaultStatePtr()
    // Offset: 0x1378978
    void* get_defaultStatePtr();
    // protected internal System.Void* get_noiseMaskPtr()
    // Offset: 0x13789C8
    void* get_noiseMaskPtr();
    // protected internal System.UInt32 get_stateOffsetRelativeToDeviceRoot()
    // Offset: 0x1378A18
    uint get_stateOffsetRelativeToDeviceRoot();
    // System.Boolean get_isConfigUpToDate()
    // Offset: 0x1378784
    bool get_isConfigUpToDate();
    // System.Void set_isConfigUpToDate(System.Boolean value)
    // Offset: 0x1378790
    void set_isConfigUpToDate(bool value);
    // System.Boolean get_hasDefaultState()
    // Offset: 0x1378A3C
    bool get_hasDefaultState();
    // protected System.Void .ctor()
    // Offset: 0x1378754
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputControl* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputControl*, creationType>()));
    }
    // private System.String DebuggerDisplay()
    // Offset: 0x1378270
    ::StringW DebuggerDisplay();
    // public System.Single EvaluateMagnitude()
    // Offset: 0x1372064
    float EvaluateMagnitude();
    // public System.Single EvaluateMagnitude(System.Void* statePtr)
    // Offset: 0x13783C0
    float EvaluateMagnitude(void* statePtr);
    // public System.Object ReadValueFromBufferAsObject(System.Void* buffer, System.Int32 bufferSize)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* ReadValueFromBufferAsObject(void* buffer, int bufferSize);
    // public System.Object ReadValueFromStateAsObject(System.Void* statePtr)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* ReadValueFromStateAsObject(void* statePtr);
    // public System.Void ReadValueFromStateIntoBuffer(System.Void* statePtr, System.Void* bufferPtr, System.Int32 bufferSize)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ReadValueFromStateIntoBuffer(void* statePtr, void* bufferPtr, int bufferSize);
    // public System.Void WriteValueFromBufferIntoState(System.Void* bufferPtr, System.Int32 bufferSize, System.Void* statePtr)
    // Offset: 0x13783C8
    void WriteValueFromBufferIntoState(void* bufferPtr, int bufferSize, void* statePtr);
    // public System.Void WriteValueFromObjectIntoState(System.Object value, System.Void* statePtr)
    // Offset: 0x1378450
    void WriteValueFromObjectIntoState(::Il2CppObject* value, void* statePtr);
    // public System.Boolean CompareValue(System.Void* firstStatePtr, System.Void* secondStatePtr)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool CompareValue(void* firstStatePtr, void* secondStatePtr);
    // public UnityEngine.InputSystem.InputControl TryGetChildControl(System.String path)
    // Offset: 0x13784D8
    ::UnityEngine::InputSystem::InputControl* TryGetChildControl(::StringW path);
    // public TControl TryGetChildControl(System.String path)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TControl>
    TControl TryGetChildControl(::StringW path) {
      static_assert(std::is_convertible_v<TControl, ::UnityEngine::InputSystem::InputControl*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl::TryGetChildControl");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetChildControl", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TControl>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TControl>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<TControl, false>(this, ___generic__method, path);
    }
    // public UnityEngine.InputSystem.InputControl GetChildControl(System.String path)
    // Offset: 0x137857C
    ::UnityEngine::InputSystem::InputControl* GetChildControl(::StringW path);
    // public TControl GetChildControl(System.String path)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TControl>
    TControl GetChildControl(::StringW path) {
      static_assert(std::is_convertible_v<TControl, ::UnityEngine::InputSystem::InputControl*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputControl::GetChildControl");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChildControl", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TControl>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TControl>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<TControl, false>(this, ___generic__method, path);
    }
    // protected System.Void FinishSetup()
    // Offset: 0x1378780
    void FinishSetup();
    // protected System.Void RefreshConfigurationIfNeeded()
    // Offset: 0x1377C64
    void RefreshConfigurationIfNeeded();
    // protected System.Void RefreshConfiguration()
    // Offset: 0x13787AC
    void RefreshConfiguration();
    // System.Void CallFinishSetupRecursive()
    // Offset: 0x1378A60
    void CallFinishSetupRecursive();
    // System.String MakeChildPath(System.String path)
    // Offset: 0x13786A0
    ::StringW MakeChildPath(::StringW path);
    // System.Void BakeOffsetIntoStateBlockRecursive(System.UInt32 offset)
    // Offset: 0x1378B14
    void BakeOffsetIntoStateBlockRecursive(uint offset);
    // System.Int32 ResolveDeviceIndex()
    // Offset: 0x13787B0
    int ResolveDeviceIndex();
    // System.Void AddProcessor(System.Object first)
    // Offset: 0x1378BC8
    void AddProcessor(::Il2CppObject* first);
    // public override System.String ToString()
    // Offset: 0x1378200
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // UnityEngine.InputSystem.InputControl
  #pragma pack(pop)
  static check_size<sizeof(InputControl), 200 + sizeof(::UnityEngine::InputSystem::Utilities::PrimitiveValue)> __UnityEngine_InputSystem_InputControlSizeCheck;
  static_assert(sizeof(InputControl) == 0xD4);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputControl::ControlFlags, "UnityEngine.InputSystem", "InputControl/ControlFlags");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_name
// Il2CppName: get_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_displayName
// Il2CppName: get_displayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_displayName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_displayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::set_displayName
// Il2CppName: set_displayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControl::*)(::StringW)>(&UnityEngine::InputSystem::InputControl::set_displayName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "set_displayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_shortDisplayName
// Il2CppName: get_shortDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_shortDisplayName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_shortDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::set_shortDisplayName
// Il2CppName: set_shortDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControl::*)(::StringW)>(&UnityEngine::InputSystem::InputControl::set_shortDisplayName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "set_shortDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_path
// Il2CppName: get_path
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_path)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_path", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_layout
// Il2CppName: get_layout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_layout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_layout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_variants
// Il2CppName: get_variants
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_variants)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_variants", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_device
// Il2CppName: get_device
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputDevice* (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_device)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_device", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_parent
// Il2CppName: get_parent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControl* (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_parent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_parent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_children
// Il2CppName: get_children
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputControl*> (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_children)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_children", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_usages
// Il2CppName: get_usages
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::InternedString> (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_usages)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_usages", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_aliases
// Il2CppName: get_aliases
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::Utilities::InternedString> (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_aliases)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_aliases", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_stateBlock
// Il2CppName: get_stateBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::LowLevel::InputStateBlock (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_stateBlock)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_stateBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_noisy
// Il2CppName: get_noisy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_noisy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_noisy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::set_noisy
// Il2CppName: set_noisy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControl::*)(bool)>(&UnityEngine::InputSystem::InputControl::set_noisy)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "set_noisy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_synthetic
// Il2CppName: get_synthetic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_synthetic)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_synthetic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::set_synthetic
// Il2CppName: set_synthetic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControl::*)(bool)>(&UnityEngine::InputSystem::InputControl::set_synthetic)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "set_synthetic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControl* (UnityEngine::InputSystem::InputControl::*)(::StringW)>(&UnityEngine::InputSystem::InputControl::get_Item)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_valueType
// Il2CppName: get_valueType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_valueType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_valueType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_valueSizeInBytes
// Il2CppName: get_valueSizeInBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_valueSizeInBytes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_valueSizeInBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_currentStatePtr
// Il2CppName: get_currentStatePtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void* (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_currentStatePtr)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_currentStatePtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_previousFrameStatePtr
// Il2CppName: get_previousFrameStatePtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void* (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_previousFrameStatePtr)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_previousFrameStatePtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_defaultStatePtr
// Il2CppName: get_defaultStatePtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void* (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_defaultStatePtr)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_defaultStatePtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_noiseMaskPtr
// Il2CppName: get_noiseMaskPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void* (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_noiseMaskPtr)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_noiseMaskPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_stateOffsetRelativeToDeviceRoot
// Il2CppName: get_stateOffsetRelativeToDeviceRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_stateOffsetRelativeToDeviceRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_stateOffsetRelativeToDeviceRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_isConfigUpToDate
// Il2CppName: get_isConfigUpToDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_isConfigUpToDate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_isConfigUpToDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::set_isConfigUpToDate
// Il2CppName: set_isConfigUpToDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControl::*)(bool)>(&UnityEngine::InputSystem::InputControl::set_isConfigUpToDate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "set_isConfigUpToDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::get_hasDefaultState
// Il2CppName: get_hasDefaultState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::get_hasDefaultState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "get_hasDefaultState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::DebuggerDisplay
// Il2CppName: DebuggerDisplay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::DebuggerDisplay)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "DebuggerDisplay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::EvaluateMagnitude
// Il2CppName: EvaluateMagnitude
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::EvaluateMagnitude)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "EvaluateMagnitude", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::EvaluateMagnitude
// Il2CppName: EvaluateMagnitude
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::InputSystem::InputControl::*)(void*)>(&UnityEngine::InputSystem::InputControl::EvaluateMagnitude)> {
  static const MethodInfo* get() {
    static auto* statePtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "EvaluateMagnitude", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{statePtr});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::ReadValueFromBufferAsObject
// Il2CppName: ReadValueFromBufferAsObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::InputSystem::InputControl::*)(void*, int)>(&UnityEngine::InputSystem::InputControl::ReadValueFromBufferAsObject)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* bufferSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "ReadValueFromBufferAsObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, bufferSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::ReadValueFromStateAsObject
// Il2CppName: ReadValueFromStateAsObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::InputSystem::InputControl::*)(void*)>(&UnityEngine::InputSystem::InputControl::ReadValueFromStateAsObject)> {
  static const MethodInfo* get() {
    static auto* statePtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "ReadValueFromStateAsObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{statePtr});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::ReadValueFromStateIntoBuffer
// Il2CppName: ReadValueFromStateIntoBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControl::*)(void*, void*, int)>(&UnityEngine::InputSystem::InputControl::ReadValueFromStateIntoBuffer)> {
  static const MethodInfo* get() {
    static auto* statePtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* bufferPtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* bufferSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "ReadValueFromStateIntoBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{statePtr, bufferPtr, bufferSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::WriteValueFromBufferIntoState
// Il2CppName: WriteValueFromBufferIntoState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControl::*)(void*, int, void*)>(&UnityEngine::InputSystem::InputControl::WriteValueFromBufferIntoState)> {
  static const MethodInfo* get() {
    static auto* bufferPtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* bufferSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* statePtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "WriteValueFromBufferIntoState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bufferPtr, bufferSize, statePtr});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::WriteValueFromObjectIntoState
// Il2CppName: WriteValueFromObjectIntoState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControl::*)(::Il2CppObject*, void*)>(&UnityEngine::InputSystem::InputControl::WriteValueFromObjectIntoState)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* statePtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "WriteValueFromObjectIntoState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, statePtr});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::CompareValue
// Il2CppName: CompareValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputControl::*)(void*, void*)>(&UnityEngine::InputSystem::InputControl::CompareValue)> {
  static const MethodInfo* get() {
    static auto* firstStatePtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* secondStatePtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "CompareValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{firstStatePtr, secondStatePtr});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::TryGetChildControl
// Il2CppName: TryGetChildControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControl* (UnityEngine::InputSystem::InputControl::*)(::StringW)>(&UnityEngine::InputSystem::InputControl::TryGetChildControl)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "TryGetChildControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::TryGetChildControl
// Il2CppName: TryGetChildControl
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::GetChildControl
// Il2CppName: GetChildControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputControl* (UnityEngine::InputSystem::InputControl::*)(::StringW)>(&UnityEngine::InputSystem::InputControl::GetChildControl)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "GetChildControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::GetChildControl
// Il2CppName: GetChildControl
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::FinishSetup
// Il2CppName: FinishSetup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::FinishSetup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "FinishSetup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::RefreshConfigurationIfNeeded
// Il2CppName: RefreshConfigurationIfNeeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::RefreshConfigurationIfNeeded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "RefreshConfigurationIfNeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::RefreshConfiguration
// Il2CppName: RefreshConfiguration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::RefreshConfiguration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "RefreshConfiguration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::CallFinishSetupRecursive
// Il2CppName: CallFinishSetupRecursive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::CallFinishSetupRecursive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "CallFinishSetupRecursive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::MakeChildPath
// Il2CppName: MakeChildPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputControl::*)(::StringW)>(&UnityEngine::InputSystem::InputControl::MakeChildPath)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "MakeChildPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::BakeOffsetIntoStateBlockRecursive
// Il2CppName: BakeOffsetIntoStateBlockRecursive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControl::*)(uint)>(&UnityEngine::InputSystem::InputControl::BakeOffsetIntoStateBlockRecursive)> {
  static const MethodInfo* get() {
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "BakeOffsetIntoStateBlockRecursive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{offset});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::ResolveDeviceIndex
// Il2CppName: ResolveDeviceIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::ResolveDeviceIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "ResolveDeviceIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::AddProcessor
// Il2CppName: AddProcessor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputControl::*)(::Il2CppObject*)>(&UnityEngine::InputSystem::InputControl::AddProcessor)> {
  static const MethodInfo* get() {
    static auto* first = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "AddProcessor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{first});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputControl::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputControl::*)()>(&UnityEngine::InputSystem::InputControl::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputControl*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
