// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.InputActionState
#include "UnityEngine/InputSystem/InputActionState.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputActionState::BindingState, "UnityEngine.InputSystem", "InputActionState/BindingState");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0x14
  #pragma pack(push, 1)
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: UnityEngine.InputSystem.InputActionState/UnityEngine.InputSystem.BindingState
  // [TokenAttribute] Offset: FFFFFFFF
  struct InputActionState::BindingState/*, public ::System::ValueType*/ {
    public:
    // Nested type: ::UnityEngine::InputSystem::InputActionState::BindingState::Flags
    struct Flags;
    public:
    // private System.Byte m_ControlCount
    // Size: 0x1
    // Offset: 0x0
    uint8_t m_ControlCount;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Byte m_InteractionCount
    // Size: 0x1
    // Offset: 0x1
    uint8_t m_InteractionCount;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Byte m_ProcessorCount
    // Size: 0x1
    // Offset: 0x2
    uint8_t m_ProcessorCount;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Byte m_MapIndex
    // Size: 0x1
    // Offset: 0x3
    uint8_t m_MapIndex;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Byte m_Flags
    // Size: 0x1
    // Offset: 0x4
    uint8_t m_Flags;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Byte m_PartIndex
    // Size: 0x1
    // Offset: 0x5
    uint8_t m_PartIndex;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.UInt16 m_ActionIndex
    // Size: 0x2
    // Offset: 0x6
    uint16_t m_ActionIndex;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // private System.UInt16 m_CompositeOrCompositeBindingIndex
    // Size: 0x2
    // Offset: 0x8
    uint16_t m_CompositeOrCompositeBindingIndex;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // private System.UInt16 m_ProcessorStartIndex
    // Size: 0x2
    // Offset: 0xA
    uint16_t m_ProcessorStartIndex;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // private System.UInt16 m_InteractionStartIndex
    // Size: 0x2
    // Offset: 0xC
    uint16_t m_InteractionStartIndex;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // private System.UInt16 m_ControlStartIndex
    // Size: 0x2
    // Offset: 0xE
    uint16_t m_ControlStartIndex;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // private System.Int32 m_TriggerEventIdForComposite
    // Size: 0x4
    // Offset: 0x10
    int m_TriggerEventIdForComposite;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: BindingState
    constexpr BindingState(uint8_t m_ControlCount_ = {}, uint8_t m_InteractionCount_ = {}, uint8_t m_ProcessorCount_ = {}, uint8_t m_MapIndex_ = {}, uint8_t m_Flags_ = {}, uint8_t m_PartIndex_ = {}, uint16_t m_ActionIndex_ = {}, uint16_t m_CompositeOrCompositeBindingIndex_ = {}, uint16_t m_ProcessorStartIndex_ = {}, uint16_t m_InteractionStartIndex_ = {}, uint16_t m_ControlStartIndex_ = {}, int m_TriggerEventIdForComposite_ = {}) noexcept : m_ControlCount{m_ControlCount_}, m_InteractionCount{m_InteractionCount_}, m_ProcessorCount{m_ProcessorCount_}, m_MapIndex{m_MapIndex_}, m_Flags{m_Flags_}, m_PartIndex{m_PartIndex_}, m_ActionIndex{m_ActionIndex_}, m_CompositeOrCompositeBindingIndex{m_CompositeOrCompositeBindingIndex_}, m_ProcessorStartIndex{m_ProcessorStartIndex_}, m_InteractionStartIndex{m_InteractionStartIndex_}, m_ControlStartIndex{m_ControlStartIndex_}, m_TriggerEventIdForComposite{m_TriggerEventIdForComposite_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private System.Byte m_ControlCount
    [[deprecated("Use field access instead!")]] uint8_t& dyn_m_ControlCount();
    // Get instance field reference: private System.Byte m_InteractionCount
    [[deprecated("Use field access instead!")]] uint8_t& dyn_m_InteractionCount();
    // Get instance field reference: private System.Byte m_ProcessorCount
    [[deprecated("Use field access instead!")]] uint8_t& dyn_m_ProcessorCount();
    // Get instance field reference: private System.Byte m_MapIndex
    [[deprecated("Use field access instead!")]] uint8_t& dyn_m_MapIndex();
    // Get instance field reference: private System.Byte m_Flags
    [[deprecated("Use field access instead!")]] uint8_t& dyn_m_Flags();
    // Get instance field reference: private System.Byte m_PartIndex
    [[deprecated("Use field access instead!")]] uint8_t& dyn_m_PartIndex();
    // Get instance field reference: private System.UInt16 m_ActionIndex
    [[deprecated("Use field access instead!")]] uint16_t& dyn_m_ActionIndex();
    // Get instance field reference: private System.UInt16 m_CompositeOrCompositeBindingIndex
    [[deprecated("Use field access instead!")]] uint16_t& dyn_m_CompositeOrCompositeBindingIndex();
    // Get instance field reference: private System.UInt16 m_ProcessorStartIndex
    [[deprecated("Use field access instead!")]] uint16_t& dyn_m_ProcessorStartIndex();
    // Get instance field reference: private System.UInt16 m_InteractionStartIndex
    [[deprecated("Use field access instead!")]] uint16_t& dyn_m_InteractionStartIndex();
    // Get instance field reference: private System.UInt16 m_ControlStartIndex
    [[deprecated("Use field access instead!")]] uint16_t& dyn_m_ControlStartIndex();
    // Get instance field reference: private System.Int32 m_TriggerEventIdForComposite
    [[deprecated("Use field access instead!")]] int& dyn_m_TriggerEventIdForComposite();
    // public System.Int32 get_controlStartIndex()
    // Offset: 0xA5B1C8
    int get_controlStartIndex();
    // public System.Void set_controlStartIndex(System.Int32 value)
    // Offset: 0xA5B1D0
    void set_controlStartIndex(int value);
    // public System.Int32 get_controlCount()
    // Offset: 0xA5B1D8
    int get_controlCount();
    // public System.Void set_controlCount(System.Int32 value)
    // Offset: 0xA5B1E0
    void set_controlCount(int value);
    // public System.Int32 get_interactionStartIndex()
    // Offset: 0xA5B1E8
    int get_interactionStartIndex();
    // public System.Void set_interactionStartIndex(System.Int32 value)
    // Offset: 0xA5B1FC
    void set_interactionStartIndex(int value);
    // public System.Int32 get_interactionCount()
    // Offset: 0xA5B204
    int get_interactionCount();
    // public System.Void set_interactionCount(System.Int32 value)
    // Offset: 0xA5B20C
    void set_interactionCount(int value);
    // public System.Int32 get_processorStartIndex()
    // Offset: 0xA5B214
    int get_processorStartIndex();
    // public System.Void set_processorStartIndex(System.Int32 value)
    // Offset: 0xA5B228
    void set_processorStartIndex(int value);
    // public System.Int32 get_processorCount()
    // Offset: 0xA5B230
    int get_processorCount();
    // public System.Void set_processorCount(System.Int32 value)
    // Offset: 0xA5B238
    void set_processorCount(int value);
    // public System.Int32 get_actionIndex()
    // Offset: 0xA5B240
    int get_actionIndex();
    // public System.Void set_actionIndex(System.Int32 value)
    // Offset: 0xA5B254
    void set_actionIndex(int value);
    // public System.Int32 get_mapIndex()
    // Offset: 0xA5B25C
    int get_mapIndex();
    // public System.Void set_mapIndex(System.Int32 value)
    // Offset: 0xA5B264
    void set_mapIndex(int value);
    // public System.Int32 get_compositeOrCompositeBindingIndex()
    // Offset: 0xA5B26C
    int get_compositeOrCompositeBindingIndex();
    // public System.Void set_compositeOrCompositeBindingIndex(System.Int32 value)
    // Offset: 0xA5B280
    void set_compositeOrCompositeBindingIndex(int value);
    // public System.Int32 get_triggerEventIdForComposite()
    // Offset: 0xA5B288
    int get_triggerEventIdForComposite();
    // public System.Void set_triggerEventIdForComposite(System.Int32 value)
    // Offset: 0xA5B290
    void set_triggerEventIdForComposite(int value);
    // public UnityEngine.InputSystem.InputActionState/UnityEngine.InputSystem.BindingState/UnityEngine.InputSystem.Flags get_flags()
    // Offset: 0xA5B298
    ::UnityEngine::InputSystem::InputActionState::BindingState::Flags get_flags();
    // public System.Void set_flags(UnityEngine.InputSystem.InputActionState/UnityEngine.InputSystem.BindingState/UnityEngine.InputSystem.Flags value)
    // Offset: 0xA5B2A0
    void set_flags(::UnityEngine::InputSystem::InputActionState::BindingState::Flags value);
    // public System.Boolean get_chainsWithNext()
    // Offset: 0xA5B2A8
    bool get_chainsWithNext();
    // public System.Void set_chainsWithNext(System.Boolean value)
    // Offset: 0xA5B2B4
    void set_chainsWithNext(bool value);
    // public System.Boolean get_isEndOfChain()
    // Offset: 0xA5B2D0
    bool get_isEndOfChain();
    // public System.Void set_isEndOfChain(System.Boolean value)
    // Offset: 0xA5B2DC
    void set_isEndOfChain(bool value);
    // public System.Boolean get_isPartOfChain()
    // Offset: 0xA5B2F8
    bool get_isPartOfChain();
    // public System.Boolean get_isComposite()
    // Offset: 0xA5B308
    bool get_isComposite();
    // public System.Void set_isComposite(System.Boolean value)
    // Offset: 0xA5B314
    void set_isComposite(bool value);
    // public System.Boolean get_isPartOfComposite()
    // Offset: 0xA5B330
    bool get_isPartOfComposite();
    // public System.Void set_isPartOfComposite(System.Boolean value)
    // Offset: 0xA5B33C
    void set_isPartOfComposite(bool value);
    // public System.Boolean get_initialStateCheckPending()
    // Offset: 0xA5B358
    bool get_initialStateCheckPending();
    // public System.Void set_initialStateCheckPending(System.Boolean value)
    // Offset: 0xA5B364
    void set_initialStateCheckPending(bool value);
    // public System.Boolean get_wantsInitialStateCheck()
    // Offset: 0xA5B380
    bool get_wantsInitialStateCheck();
    // public System.Void set_wantsInitialStateCheck(System.Boolean value)
    // Offset: 0xA5B38C
    void set_wantsInitialStateCheck(bool value);
    // public System.Int32 get_partIndex()
    // Offset: 0xA5B3A8
    int get_partIndex();
    // public System.Void set_partIndex(System.Int32 value)
    // Offset: 0xA5B3B0
    void set_partIndex(int value);
  }; // UnityEngine.InputSystem.InputActionState/UnityEngine.InputSystem.BindingState
  #pragma pack(pop)
  static check_size<sizeof(InputActionState::BindingState), 16 + sizeof(int)> __UnityEngine_InputSystem_InputActionState_BindingStateSizeCheck;
  static_assert(sizeof(InputActionState::BindingState) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_controlStartIndex
// Il2CppName: get_controlStartIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_controlStartIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_controlStartIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_controlStartIndex
// Il2CppName: set_controlStartIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(int)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_controlStartIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_controlStartIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_controlCount
// Il2CppName: get_controlCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_controlCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_controlCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_controlCount
// Il2CppName: set_controlCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(int)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_controlCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_controlCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_interactionStartIndex
// Il2CppName: get_interactionStartIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_interactionStartIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_interactionStartIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_interactionStartIndex
// Il2CppName: set_interactionStartIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(int)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_interactionStartIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_interactionStartIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_interactionCount
// Il2CppName: get_interactionCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_interactionCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_interactionCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_interactionCount
// Il2CppName: set_interactionCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(int)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_interactionCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_interactionCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_processorStartIndex
// Il2CppName: get_processorStartIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_processorStartIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_processorStartIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_processorStartIndex
// Il2CppName: set_processorStartIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(int)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_processorStartIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_processorStartIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_processorCount
// Il2CppName: get_processorCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_processorCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_processorCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_processorCount
// Il2CppName: set_processorCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(int)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_processorCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_processorCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_actionIndex
// Il2CppName: get_actionIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_actionIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_actionIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_actionIndex
// Il2CppName: set_actionIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(int)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_actionIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_actionIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_mapIndex
// Il2CppName: get_mapIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_mapIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_mapIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_mapIndex
// Il2CppName: set_mapIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(int)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_mapIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_mapIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_compositeOrCompositeBindingIndex
// Il2CppName: get_compositeOrCompositeBindingIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_compositeOrCompositeBindingIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_compositeOrCompositeBindingIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_compositeOrCompositeBindingIndex
// Il2CppName: set_compositeOrCompositeBindingIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(int)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_compositeOrCompositeBindingIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_compositeOrCompositeBindingIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_triggerEventIdForComposite
// Il2CppName: get_triggerEventIdForComposite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_triggerEventIdForComposite)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_triggerEventIdForComposite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_triggerEventIdForComposite
// Il2CppName: set_triggerEventIdForComposite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(int)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_triggerEventIdForComposite)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_triggerEventIdForComposite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_flags
// Il2CppName: get_flags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionState::BindingState::Flags (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_flags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_flags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_flags
// Il2CppName: set_flags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(::UnityEngine::InputSystem::InputActionState::BindingState::Flags)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_flags)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionState/BindingState/Flags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_flags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_chainsWithNext
// Il2CppName: get_chainsWithNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_chainsWithNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_chainsWithNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_chainsWithNext
// Il2CppName: set_chainsWithNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(bool)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_chainsWithNext)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_chainsWithNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_isEndOfChain
// Il2CppName: get_isEndOfChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_isEndOfChain)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_isEndOfChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_isEndOfChain
// Il2CppName: set_isEndOfChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(bool)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_isEndOfChain)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_isEndOfChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_isPartOfChain
// Il2CppName: get_isPartOfChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_isPartOfChain)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_isPartOfChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_isComposite
// Il2CppName: get_isComposite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_isComposite)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_isComposite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_isComposite
// Il2CppName: set_isComposite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(bool)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_isComposite)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_isComposite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_isPartOfComposite
// Il2CppName: get_isPartOfComposite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_isPartOfComposite)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_isPartOfComposite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_isPartOfComposite
// Il2CppName: set_isPartOfComposite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(bool)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_isPartOfComposite)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_isPartOfComposite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_initialStateCheckPending
// Il2CppName: get_initialStateCheckPending
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_initialStateCheckPending)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_initialStateCheckPending", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_initialStateCheckPending
// Il2CppName: set_initialStateCheckPending
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(bool)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_initialStateCheckPending)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_initialStateCheckPending", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_wantsInitialStateCheck
// Il2CppName: get_wantsInitialStateCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_wantsInitialStateCheck)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_wantsInitialStateCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_wantsInitialStateCheck
// Il2CppName: set_wantsInitialStateCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(bool)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_wantsInitialStateCheck)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_wantsInitialStateCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::get_partIndex
// Il2CppName: get_partIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::InputSystem::InputActionState::BindingState::*)()>(&UnityEngine::InputSystem::InputActionState::BindingState::get_partIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "get_partIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionState::BindingState::set_partIndex
// Il2CppName: set_partIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionState::BindingState::*)(int)>(&UnityEngine::InputSystem::InputActionState::BindingState::set_partIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionState::BindingState), "set_partIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
