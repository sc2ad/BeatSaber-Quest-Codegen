// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.Sensor
#include "UnityEngine/InputSystem/Sensor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Controls
namespace UnityEngine::InputSystem::Controls {
  // Forward declaring type: QuaternionControl
  class QuaternionControl;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: AttitudeSensor
  class AttitudeSensor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::AttitudeSensor);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::AttitudeSensor*, "UnityEngine.InputSystem", "AttitudeSensor");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0x158
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.AttitudeSensor
  // [TokenAttribute] Offset: FFFFFFFF
  // [InputControlLayoutAttribute] Offset: 957BF8
  // [PreserveAttribute] Offset: FFFFFFFF
  class AttitudeSensor : public ::UnityEngine::InputSystem::Sensor {
    public:
    public:
    // private UnityEngine.InputSystem.Controls.QuaternionControl <attitude>k__BackingField
    // Size: 0x8
    // Offset: 0x150
    ::UnityEngine::InputSystem::Controls::QuaternionControl* attitude;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::QuaternionControl*) == 0x8);
    public:
    // Creating conversion operator: operator ::UnityEngine::InputSystem::Controls::QuaternionControl*
    constexpr operator ::UnityEngine::InputSystem::Controls::QuaternionControl*() const noexcept {
      return attitude;
    }
    // Get static field: static private UnityEngine.InputSystem.AttitudeSensor <current>k__BackingField
    static ::UnityEngine::InputSystem::AttitudeSensor* _get_$current$k__BackingField();
    // Set static field: static private UnityEngine.InputSystem.AttitudeSensor <current>k__BackingField
    static void _set_$current$k__BackingField(::UnityEngine::InputSystem::AttitudeSensor* value);
    // Get instance field reference: private UnityEngine.InputSystem.Controls.QuaternionControl <attitude>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::QuaternionControl*& dyn_$attitude$k__BackingField();
    // public UnityEngine.InputSystem.Controls.QuaternionControl get_attitude()
    // Offset: 0xE123E8
    ::UnityEngine::InputSystem::Controls::QuaternionControl* get_attitude();
    // private System.Void set_attitude(UnityEngine.InputSystem.Controls.QuaternionControl value)
    // Offset: 0xE123F0
    void set_attitude(::UnityEngine::InputSystem::Controls::QuaternionControl* value);
    // static public UnityEngine.InputSystem.AttitudeSensor get_current()
    // Offset: 0xE123F8
    static ::UnityEngine::InputSystem::AttitudeSensor* get_current();
    // static private System.Void set_current(UnityEngine.InputSystem.AttitudeSensor value)
    // Offset: 0xE12448
    static void set_current(::UnityEngine::InputSystem::AttitudeSensor* value);
    // public System.Void .ctor()
    // Offset: 0xE10D60
    // Implemented from: UnityEngine.InputSystem.Sensor
    // Base method: System.Void Sensor::.ctor()
    // Base method: System.Void InputDevice::.ctor()
    // Base method: System.Void InputControl::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AttitudeSensor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::AttitudeSensor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AttitudeSensor*, creationType>()));
    }
    // public override System.Void MakeCurrent()
    // Offset: 0xE1249C
    // Implemented from: UnityEngine.InputSystem.InputDevice
    // Base method: System.Void InputDevice::MakeCurrent()
    void MakeCurrent();
    // protected override System.Void OnRemoved()
    // Offset: 0xE124F8
    // Implemented from: UnityEngine.InputSystem.InputDevice
    // Base method: System.Void InputDevice::OnRemoved()
    void OnRemoved();
    // protected override System.Void FinishSetup()
    // Offset: 0xE1258C
    // Implemented from: UnityEngine.InputSystem.InputControl
    // Base method: System.Void InputControl::FinishSetup()
    void FinishSetup();
  }; // UnityEngine.InputSystem.AttitudeSensor
  #pragma pack(pop)
  static check_size<sizeof(AttitudeSensor), 336 + sizeof(::UnityEngine::InputSystem::Controls::QuaternionControl*)> __UnityEngine_InputSystem_AttitudeSensorSizeCheck;
  static_assert(sizeof(AttitudeSensor) == 0x158);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::AttitudeSensor::get_attitude
// Il2CppName: get_attitude
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::QuaternionControl* (UnityEngine::InputSystem::AttitudeSensor::*)()>(&UnityEngine::InputSystem::AttitudeSensor::get_attitude)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::AttitudeSensor*), "get_attitude", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::AttitudeSensor::set_attitude
// Il2CppName: set_attitude
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::AttitudeSensor::*)(::UnityEngine::InputSystem::Controls::QuaternionControl*)>(&UnityEngine::InputSystem::AttitudeSensor::set_attitude)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "QuaternionControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::AttitudeSensor*), "set_attitude", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::AttitudeSensor::get_current
// Il2CppName: get_current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::AttitudeSensor* (*)()>(&UnityEngine::InputSystem::AttitudeSensor::get_current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::AttitudeSensor*), "get_current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::AttitudeSensor::set_current
// Il2CppName: set_current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::AttitudeSensor*)>(&UnityEngine::InputSystem::AttitudeSensor::set_current)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "AttitudeSensor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::AttitudeSensor*), "set_current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::AttitudeSensor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::AttitudeSensor::MakeCurrent
// Il2CppName: MakeCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::AttitudeSensor::*)()>(&UnityEngine::InputSystem::AttitudeSensor::MakeCurrent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::AttitudeSensor*), "MakeCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::AttitudeSensor::OnRemoved
// Il2CppName: OnRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::AttitudeSensor::*)()>(&UnityEngine::InputSystem::AttitudeSensor::OnRemoved)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::AttitudeSensor*), "OnRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::AttitudeSensor::FinishSetup
// Il2CppName: FinishSetup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::AttitudeSensor::*)()>(&UnityEngine::InputSystem::AttitudeSensor::FinishSetup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::AttitudeSensor*), "FinishSetup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
