// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputActionAsset
  class InputActionAsset;
  // Forward declaring type: InputAction
  class InputAction;
}
// Completed forward declares
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputActionReference
  class InputActionReference;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::InputSystem::InputActionReference);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::InputSystem::InputActionReference*, "UnityEngine.InputSystem", "InputActionReference");
// Type namespace: UnityEngine.InputSystem
namespace UnityEngine::InputSystem {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.InputSystem.InputActionReference
  // [TokenAttribute] Offset: FFFFFFFF
  class InputActionReference : public ::UnityEngine::ScriptableObject {
    public:
    public:
    // UnityEngine.InputSystem.InputActionAsset m_Asset
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::InputSystem::InputActionAsset* m_Asset;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionAsset*) == 0x8);
    // System.String m_ActionId
    // Size: 0x8
    // Offset: 0x20
    ::StringW m_ActionId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.InputSystem.InputAction m_Action
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::InputSystem::InputAction* m_Action;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputAction*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: UnityEngine.InputSystem.InputActionAsset m_Asset
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionAsset*& dyn_m_Asset();
    // Get instance field reference: System.String m_ActionId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_ActionId();
    // Get instance field reference: private UnityEngine.InputSystem.InputAction m_Action
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputAction*& dyn_m_Action();
    // public UnityEngine.InputSystem.InputActionAsset get_asset()
    // Offset: 0xF4953C
    ::UnityEngine::InputSystem::InputActionAsset* get_asset();
    // public UnityEngine.InputSystem.InputAction get_action()
    // Offset: 0xF44204
    ::UnityEngine::InputSystem::InputAction* get_action();
    // public System.Void .ctor()
    // Offset: 0xF49D50
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputActionReference* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionReference::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputActionReference*, creationType>()));
    }
    // public System.Void Set(UnityEngine.InputSystem.InputAction action)
    // Offset: 0xF49544
    void Set(::UnityEngine::InputSystem::InputAction* action);
    // public System.Void Set(UnityEngine.InputSystem.InputActionAsset asset, System.String mapName, System.String actionName)
    // Offset: 0xF49798
    void Set(::UnityEngine::InputSystem::InputActionAsset* asset, ::StringW mapName, ::StringW actionName);
    // private System.Void SetInternal(UnityEngine.InputSystem.InputActionAsset asset, UnityEngine.InputSystem.InputAction action)
    // Offset: 0xF49654
    void SetInternal(::UnityEngine::InputSystem::InputActionAsset* asset, ::UnityEngine::InputSystem::InputAction* action);
    // static public UnityEngine.InputSystem.InputActionReference Create(UnityEngine.InputSystem.InputAction action)
    // Offset: 0xF49CD8
    static ::UnityEngine::InputSystem::InputActionReference* Create(::UnityEngine::InputSystem::InputAction* action);
    // public UnityEngine.InputSystem.InputAction ToInputAction()
    // Offset: 0xF49D4C
    ::UnityEngine::InputSystem::InputAction* ToInputAction();
    // public override System.String ToString()
    // Offset: 0xF4999C
    // Implemented from: UnityEngine.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // UnityEngine.InputSystem.InputActionReference
  #pragma pack(pop)
  static check_size<sizeof(InputActionReference), 40 + sizeof(::UnityEngine::InputSystem::InputAction*)> __UnityEngine_InputSystem_InputActionReferenceSizeCheck;
  static_assert(sizeof(InputActionReference) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionReference::get_asset
// Il2CppName: get_asset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionAsset* (UnityEngine::InputSystem::InputActionReference::*)()>(&UnityEngine::InputSystem::InputActionReference::get_asset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionReference*), "get_asset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionReference::get_action
// Il2CppName: get_action
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputAction* (UnityEngine::InputSystem::InputActionReference::*)()>(&UnityEngine::InputSystem::InputActionReference::get_action)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionReference*), "get_action", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionReference::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionReference::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionReference::*)(::UnityEngine::InputSystem::InputAction*)>(&UnityEngine::InputSystem::InputActionReference::Set)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionReference*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionReference::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionReference::*)(::UnityEngine::InputSystem::InputActionAsset*, ::StringW, ::StringW)>(&UnityEngine::InputSystem::InputActionReference::Set)> {
  static const MethodInfo* get() {
    static auto* asset = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionAsset")->byval_arg;
    static auto* mapName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* actionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionReference*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asset, mapName, actionName});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionReference::SetInternal
// Il2CppName: SetInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::InputSystem::InputActionReference::*)(::UnityEngine::InputSystem::InputActionAsset*, ::UnityEngine::InputSystem::InputAction*)>(&UnityEngine::InputSystem::InputActionReference::SetInternal)> {
  static const MethodInfo* get() {
    static auto* asset = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionAsset")->byval_arg;
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionReference*), "SetInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asset, action});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionReference::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (*)(::UnityEngine::InputSystem::InputAction*)>(&UnityEngine::InputSystem::InputActionReference::Create)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionReference*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionReference::ToInputAction
// Il2CppName: ToInputAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputAction* (UnityEngine::InputSystem::InputActionReference::*)()>(&UnityEngine::InputSystem::InputActionReference::ToInputAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionReference*), "ToInputAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::InputSystem::InputActionReference::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::InputSystem::InputActionReference::*)()>(&UnityEngine::InputSystem::InputActionReference::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::InputSystem::InputActionReference*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
