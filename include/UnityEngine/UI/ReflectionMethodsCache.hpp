// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
}
// Completed forward declares
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // Forward declaring type: ReflectionMethodsCache
  class ReflectionMethodsCache;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UI::ReflectionMethodsCache);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UI::ReflectionMethodsCache*, "UnityEngine.UI", "ReflectionMethodsCache");
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UI.ReflectionMethodsCache
  // [TokenAttribute] Offset: FFFFFFFF
  class ReflectionMethodsCache : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback
    class Raycast3DCallback;
    // Nested type: ::UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback
    class RaycastAllCallback;
    // Nested type: ::UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback
    class GetRaycastNonAllocCallback;
    // Nested type: ::UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback
    class Raycast2DCallback;
    // Nested type: ::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback
    class GetRayIntersectionAllCallback;
    // Nested type: ::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback
    class GetRayIntersectionAllNonAllocCallback;
    public:
    // public UnityEngine.UI.ReflectionMethodsCache/UnityEngine.UI.Raycast3DCallback raycast3D
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback* raycast3D;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback*) == 0x8);
    // public UnityEngine.UI.ReflectionMethodsCache/UnityEngine.UI.RaycastAllCallback raycast3DAll
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback* raycast3DAll;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback*) == 0x8);
    // public UnityEngine.UI.ReflectionMethodsCache/UnityEngine.UI.GetRaycastNonAllocCallback getRaycastNonAlloc
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback* getRaycastNonAlloc;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback*) == 0x8);
    // public UnityEngine.UI.ReflectionMethodsCache/UnityEngine.UI.Raycast2DCallback raycast2D
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback* raycast2D;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback*) == 0x8);
    // public UnityEngine.UI.ReflectionMethodsCache/UnityEngine.UI.GetRayIntersectionAllCallback getRayIntersectionAll
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback* getRayIntersectionAll;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback*) == 0x8);
    // public UnityEngine.UI.ReflectionMethodsCache/UnityEngine.UI.GetRayIntersectionAllNonAllocCallback getRayIntersectionAllNonAlloc
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback* getRayIntersectionAllNonAlloc;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback*) == 0x8);
    public:
    // Get static field: static private UnityEngine.UI.ReflectionMethodsCache s_ReflectionMethodsCache
    static ::UnityEngine::UI::ReflectionMethodsCache* _get_s_ReflectionMethodsCache();
    // Set static field: static private UnityEngine.UI.ReflectionMethodsCache s_ReflectionMethodsCache
    static void _set_s_ReflectionMethodsCache(::UnityEngine::UI::ReflectionMethodsCache* value);
    // Get instance field reference: public UnityEngine.UI.ReflectionMethodsCache/UnityEngine.UI.Raycast3DCallback raycast3D
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback*& dyn_raycast3D();
    // Get instance field reference: public UnityEngine.UI.ReflectionMethodsCache/UnityEngine.UI.RaycastAllCallback raycast3DAll
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback*& dyn_raycast3DAll();
    // Get instance field reference: public UnityEngine.UI.ReflectionMethodsCache/UnityEngine.UI.GetRaycastNonAllocCallback getRaycastNonAlloc
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback*& dyn_getRaycastNonAlloc();
    // Get instance field reference: public UnityEngine.UI.ReflectionMethodsCache/UnityEngine.UI.Raycast2DCallback raycast2D
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback*& dyn_raycast2D();
    // Get instance field reference: public UnityEngine.UI.ReflectionMethodsCache/UnityEngine.UI.GetRayIntersectionAllCallback getRayIntersectionAll
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback*& dyn_getRayIntersectionAll();
    // Get instance field reference: public UnityEngine.UI.ReflectionMethodsCache/UnityEngine.UI.GetRayIntersectionAllNonAllocCallback getRayIntersectionAllNonAlloc
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback*& dyn_getRayIntersectionAllNonAlloc();
    // static public UnityEngine.UI.ReflectionMethodsCache get_Singleton()
    // Offset: 0x1ED899C
    static ::UnityEngine::UI::ReflectionMethodsCache* get_Singleton();
    // public System.Void .ctor()
    // Offset: 0x1ED7EB0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ReflectionMethodsCache* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ReflectionMethodsCache::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ReflectionMethodsCache*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x1ED8A5C
    static void _cctor();
  }; // UnityEngine.UI.ReflectionMethodsCache
  #pragma pack(pop)
  static check_size<sizeof(ReflectionMethodsCache), 56 + sizeof(::UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback*)> __UnityEngine_UI_ReflectionMethodsCacheSizeCheck;
  static_assert(sizeof(ReflectionMethodsCache) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UI::ReflectionMethodsCache::get_Singleton
// Il2CppName: get_Singleton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::ReflectionMethodsCache* (*)()>(&UnityEngine::UI::ReflectionMethodsCache::get_Singleton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ReflectionMethodsCache*), "get_Singleton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ReflectionMethodsCache::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UI::ReflectionMethodsCache::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UI::ReflectionMethodsCache::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ReflectionMethodsCache*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
