// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UI.DefaultControls
#include "UnityEngine/UI/DefaultControls.hpp"
// Including type: UnityEngine.UI.DefaultControls/UnityEngine.UI.IFactoryControls
#include "UnityEngine/UI/DefaultControls_IFactoryControls.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UI::DefaultControls::DefaultRuntimeFactory);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UI::DefaultControls::DefaultRuntimeFactory*, "UnityEngine.UI", "DefaultControls/DefaultRuntimeFactory");
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UI.DefaultControls/UnityEngine.UI.DefaultRuntimeFactory
  // [TokenAttribute] Offset: FFFFFFFF
  class DefaultControls::DefaultRuntimeFactory : public ::Il2CppObject/*, public ::UnityEngine::UI::DefaultControls::IFactoryControls*/ {
    public:
    // Creating interface conversion operator: operator ::UnityEngine::UI::DefaultControls::IFactoryControls
    operator ::UnityEngine::UI::DefaultControls::IFactoryControls() noexcept {
      return *reinterpret_cast<::UnityEngine::UI::DefaultControls::IFactoryControls*>(this);
    }
    // Creating interface conversion operator: i_IFactoryControls
    inline ::UnityEngine::UI::DefaultControls::IFactoryControls* i_IFactoryControls() noexcept {
      return reinterpret_cast<::UnityEngine::UI::DefaultControls::IFactoryControls*>(this);
    }
    // Get static field: static public UnityEngine.UI.DefaultControls/UnityEngine.UI.IFactoryControls Default
    static ::UnityEngine::UI::DefaultControls::IFactoryControls* _get_Default();
    // Set static field: static public UnityEngine.UI.DefaultControls/UnityEngine.UI.IFactoryControls Default
    static void _set_Default(::UnityEngine::UI::DefaultControls::IFactoryControls* value);
    // public System.Void .ctor()
    // Offset: 0x1943F98
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DefaultControls::DefaultRuntimeFactory* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DefaultControls::DefaultRuntimeFactory*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x1943FA0
    static void _cctor();
    // public UnityEngine.GameObject CreateGameObject(System.String name, params System.Type[] components)
    // Offset: 0x1943F24
    ::UnityEngine::GameObject* CreateGameObject(::StringW name, ::ArrayW<::System::Type*> components);
  }; // UnityEngine.UI.DefaultControls/UnityEngine.UI.DefaultRuntimeFactory
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::DefaultControls::DefaultRuntimeFactory*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::CreateGameObject
// Il2CppName: CreateGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::*)(::StringW, ::ArrayW<::System::Type*>)>(&UnityEngine::UI::DefaultControls::DefaultRuntimeFactory::CreateGameObject)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* components = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Type"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::DefaultControls::DefaultRuntimeFactory*), "CreateGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, components});
  }
};
