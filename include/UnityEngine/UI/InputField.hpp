// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UI.Selectable
#include "UnityEngine/UI/Selectable.hpp"
// Including type: UnityEngine.EventSystems.IPointerClickHandler
#include "UnityEngine/EventSystems/IPointerClickHandler.hpp"
// Including type: UnityEngine.EventSystems.ISubmitHandler
#include "UnityEngine/EventSystems/ISubmitHandler.hpp"
// Including type: UnityEngine.UI.ICanvasElement
#include "UnityEngine/UI/ICanvasElement.hpp"
// Including type: UnityEngine.UI.ILayoutElement
#include "UnityEngine/UI/ILayoutElement.hpp"
// Including type: UnityEngine.EventSystems.IUpdateSelectedHandler
#include "UnityEngine/EventSystems/IUpdateSelectedHandler.hpp"
// Including type: UnityEngine.EventSystems.IBeginDragHandler
#include "UnityEngine/EventSystems/IBeginDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IDragHandler
#include "UnityEngine/EventSystems/IDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IEndDragHandler
#include "UnityEngine/EventSystems/IEndDragHandler.hpp"
// Including type: UnityEngine.TouchScreenKeyboardType
#include "UnityEngine/TouchScreenKeyboardType.hpp"
// Including type: UnityEngine.UIVertex
#include "UnityEngine/UIVertex.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: CanvasRenderer
  class CanvasRenderer;
  // Forward declaring type: RectTransform
  class RectTransform;
  // Forward declaring type: TextGenerator
  class TextGenerator;
  // Forward declaring type: TouchScreenKeyboard
  class TouchScreenKeyboard;
  // Forward declaring type: Coroutine
  class Coroutine;
  // Forward declaring type: WaitForSecondsRealtime
  class WaitForSecondsRealtime;
  // Forward declaring type: Event
  class Event;
  // Forward declaring type: Transform
  class Transform;
  // Skipping declaration: Vector2 because it is already included!
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
  // Forward declaring type: Graphic
  class Graphic;
  // Skipping declaration: ContentType because it is already included!
  // Skipping declaration: LineType because it is already included!
  // Skipping declaration: InputType because it is already included!
  // Skipping declaration: CharacterValidation because it is already included!
  // Forward declaring type: CanvasUpdate
  struct CanvasUpdate;
  // Forward declaring type: VertexHelper
  class VertexHelper;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: BaseInput
  class BaseInput;
  // Forward declaring type: PointerEventData
  class PointerEventData;
  // Forward declaring type: BaseEventData
  class BaseEventData;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // Forward declaring type: InputField
  class InputField;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UI::InputField);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UI::InputField*, "UnityEngine.UI", "InputField");
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // Size: 0x210
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UI.InputField
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: 10C759C
  class InputField : public ::UnityEngine::UI::Selectable/*, public ::UnityEngine::EventSystems::IPointerClickHandler, public ::UnityEngine::EventSystems::ISubmitHandler, public ::UnityEngine::UI::ICanvasElement, public ::UnityEngine::UI::ILayoutElement, public ::UnityEngine::EventSystems::IUpdateSelectedHandler, public ::UnityEngine::EventSystems::IBeginDragHandler, public ::UnityEngine::EventSystems::IDragHandler, public ::UnityEngine::EventSystems::IEndDragHandler*/ {
    public:
    // Nested type: ::UnityEngine::UI::InputField::ContentType
    struct ContentType;
    // Nested type: ::UnityEngine::UI::InputField::InputType
    struct InputType;
    // Nested type: ::UnityEngine::UI::InputField::CharacterValidation
    struct CharacterValidation;
    // Nested type: ::UnityEngine::UI::InputField::LineType
    struct LineType;
    // Nested type: ::UnityEngine::UI::InputField::OnValidateInput
    class OnValidateInput;
    // Nested type: ::UnityEngine::UI::InputField::SubmitEvent
    class SubmitEvent;
    // Nested type: ::UnityEngine::UI::InputField::OnChangeEvent
    class OnChangeEvent;
    // Nested type: ::UnityEngine::UI::InputField::EditState
    struct EditState;
    // Nested type: ::UnityEngine::UI::InputField::$CaretBlink$d__161
    class $CaretBlink$d__161;
    // Nested type: ::UnityEngine::UI::InputField::$MouseDragOutsideRect$d__181
    class $MouseDragOutsideRect$d__181;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UI.InputField/UnityEngine.UI.ContentType
    // [TokenAttribute] Offset: FFFFFFFF
    struct ContentType/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: ContentType
      constexpr ContentType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Standard
      static constexpr const int Standard = 0;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Standard
      static ::UnityEngine::UI::InputField::ContentType _get_Standard();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Standard
      static void _set_Standard(::UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Autocorrected
      static constexpr const int Autocorrected = 1;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Autocorrected
      static ::UnityEngine::UI::InputField::ContentType _get_Autocorrected();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Autocorrected
      static void _set_Autocorrected(::UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType IntegerNumber
      static constexpr const int IntegerNumber = 2;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType IntegerNumber
      static ::UnityEngine::UI::InputField::ContentType _get_IntegerNumber();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType IntegerNumber
      static void _set_IntegerNumber(::UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType DecimalNumber
      static constexpr const int DecimalNumber = 3;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType DecimalNumber
      static ::UnityEngine::UI::InputField::ContentType _get_DecimalNumber();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType DecimalNumber
      static void _set_DecimalNumber(::UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Alphanumeric
      static constexpr const int Alphanumeric = 4;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Alphanumeric
      static ::UnityEngine::UI::InputField::ContentType _get_Alphanumeric();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Alphanumeric
      static void _set_Alphanumeric(::UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Name
      static constexpr const int Name = 5;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Name
      static ::UnityEngine::UI::InputField::ContentType _get_Name();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Name
      static void _set_Name(::UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType EmailAddress
      static constexpr const int EmailAddress = 6;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType EmailAddress
      static ::UnityEngine::UI::InputField::ContentType _get_EmailAddress();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType EmailAddress
      static void _set_EmailAddress(::UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Password
      static constexpr const int Password = 7;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Password
      static ::UnityEngine::UI::InputField::ContentType _get_Password();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Password
      static void _set_Password(::UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Pin
      static constexpr const int Pin = 8;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Pin
      static ::UnityEngine::UI::InputField::ContentType _get_Pin();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Pin
      static void _set_Pin(::UnityEngine::UI::InputField::ContentType value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Custom
      static constexpr const int Custom = 9;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Custom
      static ::UnityEngine::UI::InputField::ContentType _get_Custom();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.ContentType Custom
      static void _set_Custom(::UnityEngine::UI::InputField::ContentType value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.UI.InputField/UnityEngine.UI.ContentType
    #pragma pack(pop)
    static check_size<sizeof(InputField::ContentType), 0 + sizeof(int)> __UnityEngine_UI_InputField_ContentTypeSizeCheck;
    static_assert(sizeof(InputField::ContentType) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UI.InputField/UnityEngine.UI.InputType
    // [TokenAttribute] Offset: FFFFFFFF
    struct InputType/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: InputType
      constexpr InputType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.InputType Standard
      static constexpr const int Standard = 0;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.InputType Standard
      static ::UnityEngine::UI::InputField::InputType _get_Standard();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.InputType Standard
      static void _set_Standard(::UnityEngine::UI::InputField::InputType value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.InputType AutoCorrect
      static constexpr const int AutoCorrect = 1;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.InputType AutoCorrect
      static ::UnityEngine::UI::InputField::InputType _get_AutoCorrect();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.InputType AutoCorrect
      static void _set_AutoCorrect(::UnityEngine::UI::InputField::InputType value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.InputType Password
      static constexpr const int Password = 2;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.InputType Password
      static ::UnityEngine::UI::InputField::InputType _get_Password();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.InputType Password
      static void _set_Password(::UnityEngine::UI::InputField::InputType value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.UI.InputField/UnityEngine.UI.InputType
    #pragma pack(pop)
    static check_size<sizeof(InputField::InputType), 0 + sizeof(int)> __UnityEngine_UI_InputField_InputTypeSizeCheck;
    static_assert(sizeof(InputField::InputType) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation
    // [TokenAttribute] Offset: FFFFFFFF
    struct CharacterValidation/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: CharacterValidation
      constexpr CharacterValidation(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation None
      static constexpr const int None = 0;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation None
      static ::UnityEngine::UI::InputField::CharacterValidation _get_None();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation None
      static void _set_None(::UnityEngine::UI::InputField::CharacterValidation value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation Integer
      static constexpr const int Integer = 1;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation Integer
      static ::UnityEngine::UI::InputField::CharacterValidation _get_Integer();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation Integer
      static void _set_Integer(::UnityEngine::UI::InputField::CharacterValidation value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation Decimal
      static constexpr const int Decimal = 2;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation Decimal
      static ::UnityEngine::UI::InputField::CharacterValidation _get_Decimal();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation Decimal
      static void _set_Decimal(::UnityEngine::UI::InputField::CharacterValidation value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation Alphanumeric
      static constexpr const int Alphanumeric = 3;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation Alphanumeric
      static ::UnityEngine::UI::InputField::CharacterValidation _get_Alphanumeric();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation Alphanumeric
      static void _set_Alphanumeric(::UnityEngine::UI::InputField::CharacterValidation value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation Name
      static constexpr const int Name = 4;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation Name
      static ::UnityEngine::UI::InputField::CharacterValidation _get_Name();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation Name
      static void _set_Name(::UnityEngine::UI::InputField::CharacterValidation value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation EmailAddress
      static constexpr const int EmailAddress = 5;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation EmailAddress
      static ::UnityEngine::UI::InputField::CharacterValidation _get_EmailAddress();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation EmailAddress
      static void _set_EmailAddress(::UnityEngine::UI::InputField::CharacterValidation value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation
    #pragma pack(pop)
    static check_size<sizeof(InputField::CharacterValidation), 0 + sizeof(int)> __UnityEngine_UI_InputField_CharacterValidationSizeCheck;
    static_assert(sizeof(InputField::CharacterValidation) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UI.InputField/UnityEngine.UI.LineType
    // [TokenAttribute] Offset: FFFFFFFF
    struct LineType/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: LineType
      constexpr LineType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.LineType SingleLine
      static constexpr const int SingleLine = 0;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.LineType SingleLine
      static ::UnityEngine::UI::InputField::LineType _get_SingleLine();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.LineType SingleLine
      static void _set_SingleLine(::UnityEngine::UI::InputField::LineType value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.LineType MultiLineSubmit
      static constexpr const int MultiLineSubmit = 1;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.LineType MultiLineSubmit
      static ::UnityEngine::UI::InputField::LineType _get_MultiLineSubmit();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.LineType MultiLineSubmit
      static void _set_MultiLineSubmit(::UnityEngine::UI::InputField::LineType value);
      // static field const value: static public UnityEngine.UI.InputField/UnityEngine.UI.LineType MultiLineNewline
      static constexpr const int MultiLineNewline = 2;
      // Get static field: static public UnityEngine.UI.InputField/UnityEngine.UI.LineType MultiLineNewline
      static ::UnityEngine::UI::InputField::LineType _get_MultiLineNewline();
      // Set static field: static public UnityEngine.UI.InputField/UnityEngine.UI.LineType MultiLineNewline
      static void _set_MultiLineNewline(::UnityEngine::UI::InputField::LineType value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.UI.InputField/UnityEngine.UI.LineType
    #pragma pack(pop)
    static check_size<sizeof(InputField::LineType), 0 + sizeof(int)> __UnityEngine_UI_InputField_LineTypeSizeCheck;
    static_assert(sizeof(InputField::LineType) == 0x4);
    public:
    // protected UnityEngine.TouchScreenKeyboard m_Keyboard
    // Size: 0x8
    // Offset: 0xF8
    ::UnityEngine::TouchScreenKeyboard* m_Keyboard;
    // Field size check
    static_assert(sizeof(::UnityEngine::TouchScreenKeyboard*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x10C8D20
    // protected UnityEngine.UI.Text m_TextComponent
    // Size: 0x8
    // Offset: 0x100
    ::UnityEngine::UI::Text* m_TextComponent;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // protected UnityEngine.UI.Graphic m_Placeholder
    // Size: 0x8
    // Offset: 0x108
    ::UnityEngine::UI::Graphic* m_Placeholder;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Graphic*) == 0x8);
    // private UnityEngine.UI.InputField/UnityEngine.UI.ContentType m_ContentType
    // Size: 0x4
    // Offset: 0x110
    ::UnityEngine::UI::InputField::ContentType m_ContentType;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::InputField::ContentType) == 0x4);
    // [FormerlySerializedAsAttribute] Offset: 0x10C8D8C
    // private UnityEngine.UI.InputField/UnityEngine.UI.InputType m_InputType
    // Size: 0x4
    // Offset: 0x114
    ::UnityEngine::UI::InputField::InputType m_InputType;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::InputField::InputType) == 0x4);
    // [FormerlySerializedAsAttribute] Offset: 0x10C8DD8
    // private System.Char m_AsteriskChar
    // Size: 0x2
    // Offset: 0x118
    ::Il2CppChar m_AsteriskChar;
    // Field size check
    static_assert(sizeof(::Il2CppChar) == 0x2);
    // Padding between fields: m_AsteriskChar and: m_KeyboardType
    char __padding5[0x2] = {};
    // [FormerlySerializedAsAttribute] Offset: 0x10C8E24
    // private UnityEngine.TouchScreenKeyboardType m_KeyboardType
    // Size: 0x4
    // Offset: 0x11C
    ::UnityEngine::TouchScreenKeyboardType m_KeyboardType;
    // Field size check
    static_assert(sizeof(::UnityEngine::TouchScreenKeyboardType) == 0x4);
    // private UnityEngine.UI.InputField/UnityEngine.UI.LineType m_LineType
    // Size: 0x4
    // Offset: 0x120
    ::UnityEngine::UI::InputField::LineType m_LineType;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::InputField::LineType) == 0x4);
    // [FormerlySerializedAsAttribute] Offset: 0x10C8E80
    // private System.Boolean m_HideMobileInput
    // Size: 0x1
    // Offset: 0x124
    bool m_HideMobileInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_HideMobileInput and: m_CharacterValidation
    char __padding8[0x3] = {};
    // [FormerlySerializedAsAttribute] Offset: 0x10C8ECC
    // private UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation m_CharacterValidation
    // Size: 0x4
    // Offset: 0x128
    ::UnityEngine::UI::InputField::CharacterValidation m_CharacterValidation;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::InputField::CharacterValidation) == 0x4);
    // [FormerlySerializedAsAttribute] Offset: 0x10C8F18
    // private System.Int32 m_CharacterLimit
    // Size: 0x4
    // Offset: 0x12C
    int m_CharacterLimit;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [FormerlySerializedAsAttribute] Offset: 0x10C8F64
    // [FormerlySerializedAsAttribute] Offset: 0x10C8F64
    // [FormerlySerializedAsAttribute] Offset: 0x10C8F64
    // private UnityEngine.UI.InputField/UnityEngine.UI.SubmitEvent m_OnEndEdit
    // Size: 0x8
    // Offset: 0x130
    ::UnityEngine::UI::InputField::SubmitEvent* m_OnEndEdit;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::InputField::SubmitEvent*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x10C8FF8
    // [FormerlySerializedAsAttribute] Offset: 0x10C8FF8
    // private UnityEngine.UI.InputField/UnityEngine.UI.OnChangeEvent m_OnValueChanged
    // Size: 0x8
    // Offset: 0x138
    ::UnityEngine::UI::InputField::OnChangeEvent* m_OnValueChanged;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::InputField::OnChangeEvent*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x10C9068
    // private UnityEngine.UI.InputField/UnityEngine.UI.OnValidateInput m_OnValidateInput
    // Size: 0x8
    // Offset: 0x140
    ::UnityEngine::UI::InputField::OnValidateInput* m_OnValidateInput;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::InputField::OnValidateInput*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x10C90B4
    // private UnityEngine.Color m_CaretColor
    // Size: 0x10
    // Offset: 0x148
    ::UnityEngine::Color m_CaretColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private System.Boolean m_CustomCaretColor
    // Size: 0x1
    // Offset: 0x158
    bool m_CustomCaretColor;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_CustomCaretColor and: m_SelectionColor
    char __padding15[0x3] = {};
    // private UnityEngine.Color m_SelectionColor
    // Size: 0x10
    // Offset: 0x15C
    ::UnityEngine::Color m_SelectionColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // Padding between fields: m_SelectionColor and: m_Text
    char __padding16[0x4] = {};
    // [FormerlySerializedAsAttribute] Offset: 0x10C9120
    // protected System.String m_Text
    // Size: 0x8
    // Offset: 0x170
    ::StringW m_Text;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [RangeAttribute] Offset: 0x10C916C
    // private System.Single m_CaretBlinkRate
    // Size: 0x4
    // Offset: 0x178
    float m_CaretBlinkRate;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x10C91AC
    // private System.Int32 m_CaretWidth
    // Size: 0x4
    // Offset: 0x17C
    int m_CaretWidth;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean m_ReadOnly
    // Size: 0x1
    // Offset: 0x180
    bool m_ReadOnly;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_ShouldActivateOnSelect
    // Size: 0x1
    // Offset: 0x181
    bool m_ShouldActivateOnSelect;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_ShouldActivateOnSelect and: m_CaretPosition
    char __padding21[0x2] = {};
    // protected System.Int32 m_CaretPosition
    // Size: 0x4
    // Offset: 0x184
    int m_CaretPosition;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // protected System.Int32 m_CaretSelectPosition
    // Size: 0x4
    // Offset: 0x188
    int m_CaretSelectPosition;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_CaretSelectPosition and: caretRectTrans
    char __padding23[0x4] = {};
    // private UnityEngine.RectTransform caretRectTrans
    // Size: 0x8
    // Offset: 0x190
    ::UnityEngine::RectTransform* caretRectTrans;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // protected UnityEngine.UIVertex[] m_CursorVerts
    // Size: 0x8
    // Offset: 0x198
    ::ArrayW<::UnityEngine::UIVertex> m_CursorVerts;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::UIVertex>) == 0x8);
    // private UnityEngine.TextGenerator m_InputTextCache
    // Size: 0x8
    // Offset: 0x1A0
    ::UnityEngine::TextGenerator* m_InputTextCache;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextGenerator*) == 0x8);
    // private UnityEngine.CanvasRenderer m_CachedInputRenderer
    // Size: 0x8
    // Offset: 0x1A8
    ::UnityEngine::CanvasRenderer* m_CachedInputRenderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::CanvasRenderer*) == 0x8);
    // private System.Boolean m_PreventFontCallback
    // Size: 0x1
    // Offset: 0x1B0
    bool m_PreventFontCallback;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_PreventFontCallback and: m_Mesh
    char __padding28[0x7] = {};
    // protected UnityEngine.Mesh m_Mesh
    // Size: 0x8
    // Offset: 0x1B8
    ::UnityEngine::Mesh* m_Mesh;
    // Field size check
    static_assert(sizeof(::UnityEngine::Mesh*) == 0x8);
    // private System.Boolean m_AllowInput
    // Size: 0x1
    // Offset: 0x1C0
    bool m_AllowInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_ShouldActivateNextUpdate
    // Size: 0x1
    // Offset: 0x1C1
    bool m_ShouldActivateNextUpdate;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_UpdateDrag
    // Size: 0x1
    // Offset: 0x1C2
    bool m_UpdateDrag;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_DragPositionOutOfBounds
    // Size: 0x1
    // Offset: 0x1C3
    bool m_DragPositionOutOfBounds;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean m_CaretVisible
    // Size: 0x1
    // Offset: 0x1C4
    bool m_CaretVisible;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_CaretVisible and: m_BlinkCoroutine
    char __padding34[0x3] = {};
    // private UnityEngine.Coroutine m_BlinkCoroutine
    // Size: 0x8
    // Offset: 0x1C8
    ::UnityEngine::Coroutine* m_BlinkCoroutine;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    // private System.Single m_BlinkStartTime
    // Size: 0x4
    // Offset: 0x1D0
    float m_BlinkStartTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // protected System.Int32 m_DrawStart
    // Size: 0x4
    // Offset: 0x1D4
    int m_DrawStart;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // protected System.Int32 m_DrawEnd
    // Size: 0x4
    // Offset: 0x1D8
    int m_DrawEnd;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_DrawEnd and: m_DragCoroutine
    char __padding38[0x4] = {};
    // private UnityEngine.Coroutine m_DragCoroutine
    // Size: 0x8
    // Offset: 0x1E0
    ::UnityEngine::Coroutine* m_DragCoroutine;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    // private System.String m_OriginalText
    // Size: 0x8
    // Offset: 0x1E8
    ::StringW m_OriginalText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean m_WasCanceled
    // Size: 0x1
    // Offset: 0x1F0
    bool m_WasCanceled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_HasDoneFocusTransition
    // Size: 0x1
    // Offset: 0x1F1
    bool m_HasDoneFocusTransition;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_HasDoneFocusTransition and: m_WaitForSecondsRealtime
    char __padding42[0x6] = {};
    // private UnityEngine.WaitForSecondsRealtime m_WaitForSecondsRealtime
    // Size: 0x8
    // Offset: 0x1F8
    ::UnityEngine::WaitForSecondsRealtime* m_WaitForSecondsRealtime;
    // Field size check
    static_assert(sizeof(::UnityEngine::WaitForSecondsRealtime*) == 0x8);
    // private System.Boolean m_TouchKeyboardAllowsInPlaceEditing
    // Size: 0x1
    // Offset: 0x200
    bool m_TouchKeyboardAllowsInPlaceEditing;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_TouchKeyboardAllowsInPlaceEditing and: m_ProcessingEvent
    char __padding44[0x7] = {};
    // private UnityEngine.Event m_ProcessingEvent
    // Size: 0x8
    // Offset: 0x208
    ::UnityEngine::Event* m_ProcessingEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Event*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IPointerClickHandler
    operator ::UnityEngine::EventSystems::IPointerClickHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IPointerClickHandler*>(this);
    }
    // Creating interface conversion operator: i_IPointerClickHandler
    inline ::UnityEngine::EventSystems::IPointerClickHandler* i_IPointerClickHandler() noexcept {
      return reinterpret_cast<::UnityEngine::EventSystems::IPointerClickHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::ISubmitHandler
    operator ::UnityEngine::EventSystems::ISubmitHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::ISubmitHandler*>(this);
    }
    // Creating interface conversion operator: i_ISubmitHandler
    inline ::UnityEngine::EventSystems::ISubmitHandler* i_ISubmitHandler() noexcept {
      return reinterpret_cast<::UnityEngine::EventSystems::ISubmitHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::UI::ICanvasElement
    operator ::UnityEngine::UI::ICanvasElement() noexcept {
      return *reinterpret_cast<::UnityEngine::UI::ICanvasElement*>(this);
    }
    // Creating interface conversion operator: i_ICanvasElement
    inline ::UnityEngine::UI::ICanvasElement* i_ICanvasElement() noexcept {
      return reinterpret_cast<::UnityEngine::UI::ICanvasElement*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::UI::ILayoutElement
    operator ::UnityEngine::UI::ILayoutElement() noexcept {
      return *reinterpret_cast<::UnityEngine::UI::ILayoutElement*>(this);
    }
    // Creating interface conversion operator: i_ILayoutElement
    inline ::UnityEngine::UI::ILayoutElement* i_ILayoutElement() noexcept {
      return reinterpret_cast<::UnityEngine::UI::ILayoutElement*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IUpdateSelectedHandler
    operator ::UnityEngine::EventSystems::IUpdateSelectedHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IUpdateSelectedHandler*>(this);
    }
    // Creating interface conversion operator: i_IUpdateSelectedHandler
    inline ::UnityEngine::EventSystems::IUpdateSelectedHandler* i_IUpdateSelectedHandler() noexcept {
      return reinterpret_cast<::UnityEngine::EventSystems::IUpdateSelectedHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IBeginDragHandler
    operator ::UnityEngine::EventSystems::IBeginDragHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IBeginDragHandler*>(this);
    }
    // Creating interface conversion operator: i_IBeginDragHandler
    inline ::UnityEngine::EventSystems::IBeginDragHandler* i_IBeginDragHandler() noexcept {
      return reinterpret_cast<::UnityEngine::EventSystems::IBeginDragHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IDragHandler
    operator ::UnityEngine::EventSystems::IDragHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IDragHandler*>(this);
    }
    // Creating interface conversion operator: i_IDragHandler
    inline ::UnityEngine::EventSystems::IDragHandler* i_IDragHandler() noexcept {
      return reinterpret_cast<::UnityEngine::EventSystems::IDragHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IEndDragHandler
    operator ::UnityEngine::EventSystems::IEndDragHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IEndDragHandler*>(this);
    }
    // Creating interface conversion operator: i_IEndDragHandler
    inline ::UnityEngine::EventSystems::IEndDragHandler* i_IEndDragHandler() noexcept {
      return reinterpret_cast<::UnityEngine::EventSystems::IEndDragHandler*>(this);
    }
    // Get static field: static private readonly System.Char[] kSeparators
    static ::ArrayW<::Il2CppChar> _get_kSeparators();
    // Set static field: static private readonly System.Char[] kSeparators
    static void _set_kSeparators(::ArrayW<::Il2CppChar> value);
    // static field const value: static private System.Single kHScrollSpeed
    static constexpr const float kHScrollSpeed = 0.05;
    // Get static field: static private System.Single kHScrollSpeed
    static float _get_kHScrollSpeed();
    // Set static field: static private System.Single kHScrollSpeed
    static void _set_kHScrollSpeed(float value);
    // static field const value: static private System.Single kVScrollSpeed
    static constexpr const float kVScrollSpeed = 0.1;
    // Get static field: static private System.Single kVScrollSpeed
    static float _get_kVScrollSpeed();
    // Set static field: static private System.Single kVScrollSpeed
    static void _set_kVScrollSpeed(float value);
    // static field const value: static private System.String kEmailSpecialCharacters
    static constexpr const char* kEmailSpecialCharacters = "!#$%&'*+-/=?^_`{|}~";
    // Get static field: static private System.String kEmailSpecialCharacters
    static ::StringW _get_kEmailSpecialCharacters();
    // Set static field: static private System.String kEmailSpecialCharacters
    static void _set_kEmailSpecialCharacters(::StringW value);
    // static field const value: static private System.Int32 k_MaxTextLength
    static constexpr const int k_MaxTextLength = 16382;
    // Get static field: static private System.Int32 k_MaxTextLength
    static int _get_k_MaxTextLength();
    // Set static field: static private System.Int32 k_MaxTextLength
    static void _set_k_MaxTextLength(int value);
    // Get instance field reference: protected UnityEngine.TouchScreenKeyboard m_Keyboard
    [[deprecated("Use field access instead!")]] ::UnityEngine::TouchScreenKeyboard*& dyn_m_Keyboard();
    // Get instance field reference: protected UnityEngine.UI.Text m_TextComponent
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_m_TextComponent();
    // Get instance field reference: protected UnityEngine.UI.Graphic m_Placeholder
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Graphic*& dyn_m_Placeholder();
    // Get instance field reference: private UnityEngine.UI.InputField/UnityEngine.UI.ContentType m_ContentType
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::InputField::ContentType& dyn_m_ContentType();
    // Get instance field reference: private UnityEngine.UI.InputField/UnityEngine.UI.InputType m_InputType
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::InputField::InputType& dyn_m_InputType();
    // Get instance field reference: private System.Char m_AsteriskChar
    [[deprecated("Use field access instead!")]] ::Il2CppChar& dyn_m_AsteriskChar();
    // Get instance field reference: private UnityEngine.TouchScreenKeyboardType m_KeyboardType
    [[deprecated("Use field access instead!")]] ::UnityEngine::TouchScreenKeyboardType& dyn_m_KeyboardType();
    // Get instance field reference: private UnityEngine.UI.InputField/UnityEngine.UI.LineType m_LineType
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::InputField::LineType& dyn_m_LineType();
    // Get instance field reference: private System.Boolean m_HideMobileInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_HideMobileInput();
    // Get instance field reference: private UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation m_CharacterValidation
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::InputField::CharacterValidation& dyn_m_CharacterValidation();
    // Get instance field reference: private System.Int32 m_CharacterLimit
    [[deprecated("Use field access instead!")]] int& dyn_m_CharacterLimit();
    // Get instance field reference: private UnityEngine.UI.InputField/UnityEngine.UI.SubmitEvent m_OnEndEdit
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::InputField::SubmitEvent*& dyn_m_OnEndEdit();
    // Get instance field reference: private UnityEngine.UI.InputField/UnityEngine.UI.OnChangeEvent m_OnValueChanged
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::InputField::OnChangeEvent*& dyn_m_OnValueChanged();
    // Get instance field reference: private UnityEngine.UI.InputField/UnityEngine.UI.OnValidateInput m_OnValidateInput
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::InputField::OnValidateInput*& dyn_m_OnValidateInput();
    // Get instance field reference: private UnityEngine.Color m_CaretColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_m_CaretColor();
    // Get instance field reference: private System.Boolean m_CustomCaretColor
    [[deprecated("Use field access instead!")]] bool& dyn_m_CustomCaretColor();
    // Get instance field reference: private UnityEngine.Color m_SelectionColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_m_SelectionColor();
    // Get instance field reference: protected System.String m_Text
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Text();
    // Get instance field reference: private System.Single m_CaretBlinkRate
    [[deprecated("Use field access instead!")]] float& dyn_m_CaretBlinkRate();
    // Get instance field reference: private System.Int32 m_CaretWidth
    [[deprecated("Use field access instead!")]] int& dyn_m_CaretWidth();
    // Get instance field reference: private System.Boolean m_ReadOnly
    [[deprecated("Use field access instead!")]] bool& dyn_m_ReadOnly();
    // Get instance field reference: private System.Boolean m_ShouldActivateOnSelect
    [[deprecated("Use field access instead!")]] bool& dyn_m_ShouldActivateOnSelect();
    // Get instance field reference: protected System.Int32 m_CaretPosition
    [[deprecated("Use field access instead!")]] int& dyn_m_CaretPosition();
    // Get instance field reference: protected System.Int32 m_CaretSelectPosition
    [[deprecated("Use field access instead!")]] int& dyn_m_CaretSelectPosition();
    // Get instance field reference: private UnityEngine.RectTransform caretRectTrans
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_caretRectTrans();
    // Get instance field reference: protected UnityEngine.UIVertex[] m_CursorVerts
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UIVertex>& dyn_m_CursorVerts();
    // Get instance field reference: private UnityEngine.TextGenerator m_InputTextCache
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextGenerator*& dyn_m_InputTextCache();
    // Get instance field reference: private UnityEngine.CanvasRenderer m_CachedInputRenderer
    [[deprecated("Use field access instead!")]] ::UnityEngine::CanvasRenderer*& dyn_m_CachedInputRenderer();
    // Get instance field reference: private System.Boolean m_PreventFontCallback
    [[deprecated("Use field access instead!")]] bool& dyn_m_PreventFontCallback();
    // Get instance field reference: protected UnityEngine.Mesh m_Mesh
    [[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& dyn_m_Mesh();
    // Get instance field reference: private System.Boolean m_AllowInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_AllowInput();
    // Get instance field reference: private System.Boolean m_ShouldActivateNextUpdate
    [[deprecated("Use field access instead!")]] bool& dyn_m_ShouldActivateNextUpdate();
    // Get instance field reference: private System.Boolean m_UpdateDrag
    [[deprecated("Use field access instead!")]] bool& dyn_m_UpdateDrag();
    // Get instance field reference: private System.Boolean m_DragPositionOutOfBounds
    [[deprecated("Use field access instead!")]] bool& dyn_m_DragPositionOutOfBounds();
    // Get instance field reference: protected System.Boolean m_CaretVisible
    [[deprecated("Use field access instead!")]] bool& dyn_m_CaretVisible();
    // Get instance field reference: private UnityEngine.Coroutine m_BlinkCoroutine
    [[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& dyn_m_BlinkCoroutine();
    // Get instance field reference: private System.Single m_BlinkStartTime
    [[deprecated("Use field access instead!")]] float& dyn_m_BlinkStartTime();
    // Get instance field reference: protected System.Int32 m_DrawStart
    [[deprecated("Use field access instead!")]] int& dyn_m_DrawStart();
    // Get instance field reference: protected System.Int32 m_DrawEnd
    [[deprecated("Use field access instead!")]] int& dyn_m_DrawEnd();
    // Get instance field reference: private UnityEngine.Coroutine m_DragCoroutine
    [[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& dyn_m_DragCoroutine();
    // Get instance field reference: private System.String m_OriginalText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_OriginalText();
    // Get instance field reference: private System.Boolean m_WasCanceled
    [[deprecated("Use field access instead!")]] bool& dyn_m_WasCanceled();
    // Get instance field reference: private System.Boolean m_HasDoneFocusTransition
    [[deprecated("Use field access instead!")]] bool& dyn_m_HasDoneFocusTransition();
    // Get instance field reference: private UnityEngine.WaitForSecondsRealtime m_WaitForSecondsRealtime
    [[deprecated("Use field access instead!")]] ::UnityEngine::WaitForSecondsRealtime*& dyn_m_WaitForSecondsRealtime();
    // Get instance field reference: private System.Boolean m_TouchKeyboardAllowsInPlaceEditing
    [[deprecated("Use field access instead!")]] bool& dyn_m_TouchKeyboardAllowsInPlaceEditing();
    // Get instance field reference: private UnityEngine.Event m_ProcessingEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::Event*& dyn_m_ProcessingEvent();
    // private UnityEngine.EventSystems.BaseInput get_input()
    // Offset: 0x1EFB158
    ::UnityEngine::EventSystems::BaseInput* get_input();
    // private System.String get_compositionString()
    // Offset: 0x1EFB298
    ::StringW get_compositionString();
    // protected UnityEngine.Mesh get_mesh()
    // Offset: 0x1EFB580
    ::UnityEngine::Mesh* get_mesh();
    // protected UnityEngine.TextGenerator get_cachedInputTextGenerator()
    // Offset: 0x1EFB624
    ::UnityEngine::TextGenerator* get_cachedInputTextGenerator();
    // public System.Boolean get_shouldHideMobileInput()
    // Offset: 0x1EFB6F0
    bool get_shouldHideMobileInput();
    // public System.Void set_shouldHideMobileInput(System.Boolean value)
    // Offset: 0x1EFB690
    void set_shouldHideMobileInput(bool value);
    // public System.Boolean get_shouldActivateOnSelect()
    // Offset: 0x1EFB750
    bool get_shouldActivateOnSelect();
    // public System.Void set_shouldActivateOnSelect(System.Boolean value)
    // Offset: 0x1EFB744
    void set_shouldActivateOnSelect(bool value);
    // public System.String get_text()
    // Offset: 0x1EFB780
    ::StringW get_text();
    // public System.Void set_text(System.String value)
    // Offset: 0x1EFB788
    void set_text(::StringW value);
    // public System.Boolean get_isFocused()
    // Offset: 0x1EFBF6C
    bool get_isFocused();
    // public System.Single get_caretBlinkRate()
    // Offset: 0x1EFBF74
    float get_caretBlinkRate();
    // public System.Void set_caretBlinkRate(System.Single value)
    // Offset: 0x1EFBF7C
    void set_caretBlinkRate(float value);
    // public System.Int32 get_caretWidth()
    // Offset: 0x1EFC060
    int get_caretWidth();
    // public System.Void set_caretWidth(System.Int32 value)
    // Offset: 0x1EFC068
    void set_caretWidth(int value);
    // public UnityEngine.UI.Text get_textComponent()
    // Offset: 0x1EFC14C
    ::UnityEngine::UI::Text* get_textComponent();
    // public System.Void set_textComponent(UnityEngine.UI.Text value)
    // Offset: 0x1EFC154
    void set_textComponent(::UnityEngine::UI::Text* value);
    // public UnityEngine.UI.Graphic get_placeholder()
    // Offset: 0x1EFC3A8
    ::UnityEngine::UI::Graphic* get_placeholder();
    // public System.Void set_placeholder(UnityEngine.UI.Graphic value)
    // Offset: 0x1EFC3B0
    void set_placeholder(::UnityEngine::UI::Graphic* value);
    // public UnityEngine.Color get_caretColor()
    // Offset: 0x1EFC410
    ::UnityEngine::Color get_caretColor();
    // public System.Void set_caretColor(UnityEngine.Color value)
    // Offset: 0x1EFC458
    void set_caretColor(::UnityEngine::Color value);
    // public System.Boolean get_customCaretColor()
    // Offset: 0x1EFC494
    bool get_customCaretColor();
    // public System.Void set_customCaretColor(System.Boolean value)
    // Offset: 0x1EFC49C
    void set_customCaretColor(bool value);
    // public UnityEngine.Color get_selectionColor()
    // Offset: 0x1EFC4C0
    ::UnityEngine::Color get_selectionColor();
    // public System.Void set_selectionColor(UnityEngine.Color value)
    // Offset: 0x1EFC4D4
    void set_selectionColor(::UnityEngine::Color value);
    // public UnityEngine.UI.InputField/UnityEngine.UI.SubmitEvent get_onEndEdit()
    // Offset: 0x1EFC510
    ::UnityEngine::UI::InputField::SubmitEvent* get_onEndEdit();
    // public System.Void set_onEndEdit(UnityEngine.UI.InputField/UnityEngine.UI.SubmitEvent value)
    // Offset: 0x1EFC518
    void set_onEndEdit(::UnityEngine::UI::InputField::SubmitEvent* value);
    // public UnityEngine.UI.InputField/UnityEngine.UI.OnChangeEvent get_onValueChange()
    // Offset: 0x1EFC578
    ::UnityEngine::UI::InputField::OnChangeEvent* get_onValueChange();
    // public System.Void set_onValueChange(UnityEngine.UI.InputField/UnityEngine.UI.OnChangeEvent value)
    // Offset: 0x1EFC580
    void set_onValueChange(::UnityEngine::UI::InputField::OnChangeEvent* value);
    // public UnityEngine.UI.InputField/UnityEngine.UI.OnChangeEvent get_onValueChanged()
    // Offset: 0x1EFC5E4
    ::UnityEngine::UI::InputField::OnChangeEvent* get_onValueChanged();
    // public System.Void set_onValueChanged(UnityEngine.UI.InputField/UnityEngine.UI.OnChangeEvent value)
    // Offset: 0x1EFC584
    void set_onValueChanged(::UnityEngine::UI::InputField::OnChangeEvent* value);
    // public UnityEngine.UI.InputField/UnityEngine.UI.OnValidateInput get_onValidateInput()
    // Offset: 0x1EFC5EC
    ::UnityEngine::UI::InputField::OnValidateInput* get_onValidateInput();
    // public System.Void set_onValidateInput(UnityEngine.UI.InputField/UnityEngine.UI.OnValidateInput value)
    // Offset: 0x1EFC5F4
    void set_onValidateInput(::UnityEngine::UI::InputField::OnValidateInput* value);
    // public System.Int32 get_characterLimit()
    // Offset: 0x1EFC654
    int get_characterLimit();
    // public System.Void set_characterLimit(System.Int32 value)
    // Offset: 0x1EFC65C
    void set_characterLimit(int value);
    // public UnityEngine.UI.InputField/UnityEngine.UI.ContentType get_contentType()
    // Offset: 0x1EFC720
    ::UnityEngine::UI::InputField::ContentType get_contentType();
    // public System.Void set_contentType(UnityEngine.UI.InputField/UnityEngine.UI.ContentType value)
    // Offset: 0x1EFC728
    void set_contentType(::UnityEngine::UI::InputField::ContentType value);
    // public UnityEngine.UI.InputField/UnityEngine.UI.LineType get_lineType()
    // Offset: 0x1EFC85C
    ::UnityEngine::UI::InputField::LineType get_lineType();
    // public System.Void set_lineType(UnityEngine.UI.InputField/UnityEngine.UI.LineType value)
    // Offset: 0x1EFC864
    void set_lineType(::UnityEngine::UI::InputField::LineType value);
    // public UnityEngine.UI.InputField/UnityEngine.UI.InputType get_inputType()
    // Offset: 0x1EFC998
    ::UnityEngine::UI::InputField::InputType get_inputType();
    // public System.Void set_inputType(UnityEngine.UI.InputField/UnityEngine.UI.InputType value)
    // Offset: 0x1EFC9A0
    void set_inputType(::UnityEngine::UI::InputField::InputType value);
    // public UnityEngine.TouchScreenKeyboard get_touchScreenKeyboard()
    // Offset: 0x1EFCA44
    ::UnityEngine::TouchScreenKeyboard* get_touchScreenKeyboard();
    // public UnityEngine.TouchScreenKeyboardType get_keyboardType()
    // Offset: 0x1EFCA4C
    ::UnityEngine::TouchScreenKeyboardType get_keyboardType();
    // public System.Void set_keyboardType(UnityEngine.TouchScreenKeyboardType value)
    // Offset: 0x1EFCA54
    void set_keyboardType(::UnityEngine::TouchScreenKeyboardType value);
    // public UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation get_characterValidation()
    // Offset: 0x1EFCAE0
    ::UnityEngine::UI::InputField::CharacterValidation get_characterValidation();
    // public System.Void set_characterValidation(UnityEngine.UI.InputField/UnityEngine.UI.CharacterValidation value)
    // Offset: 0x1EFCAE8
    void set_characterValidation(::UnityEngine::UI::InputField::CharacterValidation value);
    // public System.Boolean get_readOnly()
    // Offset: 0x1EFCB74
    bool get_readOnly();
    // public System.Void set_readOnly(System.Boolean value)
    // Offset: 0x1EFCB7C
    void set_readOnly(bool value);
    // public System.Boolean get_multiLine()
    // Offset: 0x1EFCB88
    bool get_multiLine();
    // public System.Char get_asteriskChar()
    // Offset: 0x1EFCB9C
    ::Il2CppChar get_asteriskChar();
    // public System.Void set_asteriskChar(System.Char value)
    // Offset: 0x1EFCBA4
    void set_asteriskChar(::Il2CppChar value);
    // public System.Boolean get_wasCanceled()
    // Offset: 0x1EFCC20
    bool get_wasCanceled();
    // protected System.Int32 get_caretPositionInternal()
    // Offset: 0x1EFCC60
    int get_caretPositionInternal();
    // protected System.Void set_caretPositionInternal(System.Int32 value)
    // Offset: 0x1EFCC90
    void set_caretPositionInternal(int value);
    // protected System.Int32 get_caretSelectPositionInternal()
    // Offset: 0x1EFCCC8
    int get_caretSelectPositionInternal();
    // protected System.Void set_caretSelectPositionInternal(System.Int32 value)
    // Offset: 0x1EFCCF8
    void set_caretSelectPositionInternal(int value);
    // public System.Int32 get_caretPosition()
    // Offset: 0x1EFCD64
    int get_caretPosition();
    // public System.Void set_caretPosition(System.Int32 value)
    // Offset: 0x1EFCD94
    void set_caretPosition(int value);
    // public System.Int32 get_selectionAnchorPosition()
    // Offset: 0x1EFCE80
    int get_selectionAnchorPosition();
    // public System.Void set_selectionAnchorPosition(System.Int32 value)
    // Offset: 0x1EFCDC0
    void set_selectionAnchorPosition(int value);
    // public System.Int32 get_selectionFocusPosition()
    // Offset: 0x1EFCEB0
    int get_selectionFocusPosition();
    // public System.Void set_selectionFocusPosition(System.Int32 value)
    // Offset: 0x1EFCE20
    void set_selectionFocusPosition(int value);
    // static private System.String get_clipboard()
    // Offset: 0x1EFD830
    static ::StringW get_clipboard();
    // static private System.Void set_clipboard(System.String value)
    // Offset: 0x1EFD838
    static void set_clipboard(::StringW value);
    // public System.Single get_minWidth()
    // Offset: 0x1F042B8
    float get_minWidth();
    // public System.Single get_preferredWidth()
    // Offset: 0x1F042C0
    float get_preferredWidth();
    // public System.Single get_flexibleWidth()
    // Offset: 0x1F04420
    float get_flexibleWidth();
    // public System.Single get_minHeight()
    // Offset: 0x1F04428
    float get_minHeight();
    // public System.Single get_preferredHeight()
    // Offset: 0x1F04430
    float get_preferredHeight();
    // public System.Single get_flexibleHeight()
    // Offset: 0x1F045AC
    float get_flexibleHeight();
    // public System.Int32 get_layoutPriority()
    // Offset: 0x1F045B4
    int get_layoutPriority();
    // private UnityEngine.Transform UnityEngine.UI.ICanvasElement.get_transform()
    // Offset: 0x1F04638
    ::UnityEngine::Transform* UnityEngine_UI_ICanvasElement_get_transform();
    // public System.Void SetTextWithoutNotify(System.String input)
    // Offset: 0x1EFBA60
    void SetTextWithoutNotify(::StringW input);
    // private System.Void SetText(System.String value, System.Boolean sendCallback)
    // Offset: 0x1EFB790
    void SetText(::StringW value, bool sendCallback);
    // protected System.Void ClampPos(ref System.Int32 pos)
    // Offset: 0x1EFCC28
    void ClampPos(ByRef<int> pos);
    // private System.Collections.IEnumerator CaretBlink()
    // Offset: 0x1EFD4E0
    ::System::Collections::IEnumerator* CaretBlink();
    // private System.Void SetCaretVisible()
    // Offset: 0x1EFD550
    void SetCaretVisible();
    // private System.Void SetCaretActive()
    // Offset: 0x1EFC000
    void SetCaretActive();
    // private System.Void UpdateCaretMaterial()
    // Offset: 0x1EFD590
    void UpdateCaretMaterial();
    // protected System.Void OnFocus()
    // Offset: 0x1EFD6BC
    void OnFocus();
    // protected System.Void SelectAll()
    // Offset: 0x1EFD6C0
    void SelectAll();
    // public System.Void MoveTextEnd(System.Boolean shift)
    // Offset: 0x1EFD70C
    void MoveTextEnd(bool shift);
    // public System.Void MoveTextStart(System.Boolean shift)
    // Offset: 0x1EFD7A8
    void MoveTextStart(bool shift);
    // private System.Boolean InPlaceEditing()
    // Offset: 0x1EFD840
    bool InPlaceEditing();
    // private System.Void UpdateCaretFromKeyboard()
    // Offset: 0x1EFD87C
    void UpdateCaretFromKeyboard();
    // protected System.Void LateUpdate()
    // Offset: 0x1EFD968
    void LateUpdate();
    // public UnityEngine.Vector2 ScreenToLocal(UnityEngine.Vector2 screen)
    // Offset: 0x1EFED94
    ::UnityEngine::Vector2 ScreenToLocal(::UnityEngine::Vector2 screen);
    // private System.Int32 GetUnclampedCharacterLineFromPosition(UnityEngine.Vector2 pos, UnityEngine.TextGenerator generator)
    // Offset: 0x1EFF088
    int GetUnclampedCharacterLineFromPosition(::UnityEngine::Vector2 pos, ::UnityEngine::TextGenerator* generator);
    // protected System.Int32 GetCharacterIndexFromPosition(UnityEngine.Vector2 pos)
    // Offset: 0x1EFF2BC
    int GetCharacterIndexFromPosition(::UnityEngine::Vector2 pos);
    // private System.Boolean MayDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1EFF758
    bool MayDrag(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1EFF848
    void OnBeginDrag(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1EFF874
    void OnDrag(::UnityEngine::EventSystems::PointerEventData* eventData);
    // private System.Collections.IEnumerator MouseDragOutsideRect(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1EFFA54
    ::System::Collections::IEnumerator* MouseDragOutsideRect(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1EFFAD0
    void OnEndDrag(::UnityEngine::EventSystems::PointerEventData* eventData);
    // protected UnityEngine.UI.InputField/UnityEngine.UI.EditState KeyPressed(UnityEngine.Event evt)
    // Offset: 0x1EFFCF8
    ::UnityEngine::UI::InputField::EditState KeyPressed(::UnityEngine::Event* evt);
    // private System.Boolean IsValidChar(System.Char c)
    // Offset: 0x1F00874
    bool IsValidChar(::Il2CppChar c);
    // public System.Void ProcessEvent(UnityEngine.Event e)
    // Offset: 0x1F008E4
    void ProcessEvent(::UnityEngine::Event* e);
    // public System.Void OnUpdateSelected(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x1F008E8
    void OnUpdateSelected(::UnityEngine::EventSystems::BaseEventData* eventData);
    // private System.String GetSelectedString()
    // Offset: 0x1F00284
    ::StringW GetSelectedString();
    // private System.Int32 FindtNextWordBegin()
    // Offset: 0x1F00A1C
    int FindtNextWordBegin();
    // private System.Void MoveRight(System.Boolean shift, System.Boolean ctrl)
    // Offset: 0x1F006D4
    void MoveRight(bool shift, bool ctrl);
    // private System.Int32 FindtPrevWordBegin()
    // Offset: 0x1F00AF0
    int FindtPrevWordBegin();
    // private System.Void MoveLeft(System.Boolean shift, System.Boolean ctrl)
    // Offset: 0x1F0054C
    void MoveLeft(bool shift, bool ctrl);
    // private System.Int32 DetermineCharacterLine(System.Int32 charPos, UnityEngine.TextGenerator generator)
    // Offset: 0x1F00BA8
    int DetermineCharacterLine(int charPos, ::UnityEngine::TextGenerator* generator);
    // private System.Int32 LineUpCharacterPosition(System.Int32 originalPos, System.Boolean goToFirstChar)
    // Offset: 0x1F00CC8
    int LineUpCharacterPosition(int originalPos, bool goToFirstChar);
    // private System.Int32 LineDownCharacterPosition(System.Int32 originalPos, System.Boolean goToLastChar)
    // Offset: 0x1F01038
    int LineDownCharacterPosition(int originalPos, bool goToLastChar);
    // private System.Void MoveDown(System.Boolean shift)
    // Offset: 0x1F00868
    void MoveDown(bool shift);
    // private System.Void MoveDown(System.Boolean shift, System.Boolean goToLastChar)
    // Offset: 0x1F01304
    void MoveDown(bool shift, bool goToLastChar);
    // private System.Void MoveUp(System.Boolean shift)
    // Offset: 0x1F0085C
    void MoveUp(bool shift);
    // private System.Void MoveUp(System.Boolean shift, System.Boolean goToFirstChar)
    // Offset: 0x1F0149C
    void MoveUp(bool shift, bool goToFirstChar);
    // private System.Void Delete()
    // Offset: 0x1F00334
    void Delete();
    // private System.Void ForwardSpace()
    // Offset: 0x1F001DC
    void ForwardSpace();
    // private System.Void Backspace()
    // Offset: 0x1F000EC
    void Backspace();
    // private System.Void Insert(System.Char c)
    // Offset: 0x1F01640
    void Insert(::Il2CppChar c);
    // private System.Void UpdateTouchKeyboardFromEditChanges()
    // Offset: 0x1F004F4
    void UpdateTouchKeyboardFromEditChanges();
    // private System.Void SendOnValueChangedAndUpdateLabel()
    // Offset: 0x1EFED70
    void SendOnValueChangedAndUpdateLabel();
    // private System.Void SendOnValueChanged()
    // Offset: 0x1EFBA68
    void SendOnValueChanged();
    // protected System.Void SendOnSubmit()
    // Offset: 0x1F0172C
    void SendOnSubmit();
    // protected System.Void Append(System.String input)
    // Offset: 0x1F017A8
    void Append(::StringW input);
    // protected System.Void Append(System.Char input)
    // Offset: 0x1F01868
    void Append(::Il2CppChar input);
    // protected System.Void UpdateLabel()
    // Offset: 0x1EFBAE4
    void UpdateLabel();
    // private System.Boolean IsSelectionVisible()
    // Offset: 0x1F025CC
    bool IsSelectionVisible();
    // static private System.Int32 GetLineStartPosition(UnityEngine.TextGenerator gen, System.Int32 line)
    // Offset: 0x1F0263C
    static int GetLineStartPosition(::UnityEngine::TextGenerator* gen, int line);
    // static private System.Int32 GetLineEndPosition(UnityEngine.TextGenerator gen, System.Int32 line)
    // Offset: 0x1EFF5AC
    static int GetLineEndPosition(::UnityEngine::TextGenerator* gen, int line);
    // private System.Void SetDrawRangeToContainCaretPosition(System.Int32 caretPos)
    // Offset: 0x1F019C8
    void SetDrawRangeToContainCaretPosition(int caretPos);
    // public System.Void ForceLabelUpdate()
    // Offset: 0x1F027CC
    void ForceLabelUpdate();
    // private System.Void MarkGeometryAsDirty()
    // Offset: 0x1EFC0E4
    void MarkGeometryAsDirty();
    // public System.Void Rebuild(UnityEngine.UI.CanvasUpdate update)
    // Offset: 0x1F027D0
    void Rebuild(::UnityEngine::UI::CanvasUpdate update);
    // public System.Void LayoutComplete()
    // Offset: 0x1F02BD8
    void LayoutComplete();
    // public System.Void GraphicUpdateComplete()
    // Offset: 0x1F02BDC
    void GraphicUpdateComplete();
    // private System.Void UpdateGeometry()
    // Offset: 0x1F027E0
    void UpdateGeometry();
    // private System.Void AssignPositioningIfNeeded()
    // Offset: 0x1EFE0F0
    void AssignPositioningIfNeeded();
    // private System.Void OnFillVBO(UnityEngine.Mesh vbo)
    // Offset: 0x1F02BE0
    void OnFillVBO(::UnityEngine::Mesh* vbo);
    // private System.Void GenerateCaret(UnityEngine.UI.VertexHelper vbo, UnityEngine.Vector2 roundingOffset)
    // Offset: 0x1F02DD4
    void GenerateCaret(::UnityEngine::UI::VertexHelper* vbo, ::UnityEngine::Vector2 roundingOffset);
    // private System.Void CreateCursorVerts()
    // Offset: 0x1F03F04
    void CreateCursorVerts();
    // private System.Void GenerateHighlight(UnityEngine.UI.VertexHelper vbo, UnityEngine.Vector2 roundingOffset)
    // Offset: 0x1F035B8
    void GenerateHighlight(::UnityEngine::UI::VertexHelper* vbo, ::UnityEngine::Vector2 roundingOffset);
    // protected System.Char Validate(System.String text, System.Int32 pos, System.Char ch)
    // Offset: 0x1EFE6F8
    ::Il2CppChar Validate(::StringW text, int pos, ::Il2CppChar ch);
    // public System.Void ActivateInputField()
    // Offset: 0x1F04054
    void ActivateInputField();
    // private System.Void ActivateInputFieldInternal()
    // Offset: 0x1EFDDA8
    void ActivateInputFieldInternal();
    // public System.Void OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1F041E0
    void OnPointerClick(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void DeactivateInputField()
    // Offset: 0x1EFD338
    void DeactivateInputField();
    // public System.Void OnSubmit(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x1F04230
    void OnSubmit(::UnityEngine::EventSystems::BaseEventData* eventData);
    // private System.Void EnforceContentType()
    // Offset: 0x1EFC7A4
    void EnforceContentType();
    // private System.Void EnforceTextHOverflow()
    // Offset: 0x1EFB4D0
    void EnforceTextHOverflow();
    // private System.Void SetToCustomIfContentTypeIsNot(params UnityEngine.UI.InputField/UnityEngine.UI.ContentType[] allowedContentTypes)
    // Offset: 0x1EFC928
    void SetToCustomIfContentTypeIsNot(::ArrayW<::UnityEngine::UI::InputField::ContentType> allowedContentTypes);
    // private System.Void SetToCustom()
    // Offset: 0x1EFCA2C
    void SetToCustom();
    // public System.Void CalculateLayoutInputHorizontal()
    // Offset: 0x1F042B0
    void CalculateLayoutInputHorizontal();
    // public System.Void CalculateLayoutInputVertical()
    // Offset: 0x1F042B4
    void CalculateLayoutInputVertical();
    // private System.Boolean get_hasSelection()
    // Offset: 0x1EFCD30
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Boolean Selectable::get_hasSelection()
    bool get_hasSelection();
    // protected System.Void .ctor()
    // Offset: 0x1EFB33C
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::.ctor()
    // Base method: System.Void UIBehaviour::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InputField* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::InputField::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InputField*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x1F045BC
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::.cctor()
    static void _cctor();
    // protected override System.Void OnEnable()
    // Offset: 0x1EFCEE0
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x1EFD120
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::OnDisable()
    void OnDisable();
    // public override System.Void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1EFFAF8
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData)
    void OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public override System.Void OnSelect(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x1F04194
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::OnSelect(UnityEngine.EventSystems.BaseEventData eventData)
    void OnSelect(::UnityEngine::EventSystems::BaseEventData* eventData);
    // public override System.Void OnDeselect(UnityEngine.EventSystems.BaseEventData eventData)
    // Offset: 0x1F04200
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::OnDeselect(UnityEngine.EventSystems.BaseEventData eventData)
    void OnDeselect(::UnityEngine::EventSystems::BaseEventData* eventData);
    // protected override System.Void DoStateTransition(UnityEngine.UI.Selectable/UnityEngine.UI.SelectionState state, System.Boolean instant)
    // Offset: 0x1F04284
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::DoStateTransition(UnityEngine.UI.Selectable/UnityEngine.UI.SelectionState state, System.Boolean instant)
    void DoStateTransition(::UnityEngine::UI::Selectable::SelectionState state, bool instant);
  }; // UnityEngine.UI.InputField
  #pragma pack(pop)
  static check_size<sizeof(InputField), 520 + sizeof(::UnityEngine::Event*)> __UnityEngine_UI_InputFieldSizeCheck;
  static_assert(sizeof(InputField) == 0x210);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UI::InputField::LineType, "UnityEngine.UI", "InputField/LineType");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UI::InputField::CharacterValidation, "UnityEngine.UI", "InputField/CharacterValidation");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UI::InputField::InputType, "UnityEngine.UI", "InputField/InputType");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UI::InputField::ContentType, "UnityEngine.UI", "InputField/ContentType");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_input
// Il2CppName: get_input
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::EventSystems::BaseInput* (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_input)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_input", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_compositionString
// Il2CppName: get_compositionString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_compositionString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_compositionString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_mesh
// Il2CppName: get_mesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Mesh* (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_mesh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_mesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_cachedInputTextGenerator
// Il2CppName: get_cachedInputTextGenerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextGenerator* (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_cachedInputTextGenerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_cachedInputTextGenerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_shouldHideMobileInput
// Il2CppName: get_shouldHideMobileInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_shouldHideMobileInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_shouldHideMobileInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_shouldHideMobileInput
// Il2CppName: set_shouldHideMobileInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(bool)>(&UnityEngine::UI::InputField::set_shouldHideMobileInput)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_shouldHideMobileInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_shouldActivateOnSelect
// Il2CppName: get_shouldActivateOnSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_shouldActivateOnSelect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_shouldActivateOnSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_shouldActivateOnSelect
// Il2CppName: set_shouldActivateOnSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(bool)>(&UnityEngine::UI::InputField::set_shouldActivateOnSelect)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_shouldActivateOnSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_text
// Il2CppName: get_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_text)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_text
// Il2CppName: set_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::StringW)>(&UnityEngine::UI::InputField::set_text)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_isFocused
// Il2CppName: get_isFocused
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_isFocused)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_isFocused", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_caretBlinkRate
// Il2CppName: get_caretBlinkRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_caretBlinkRate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_caretBlinkRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_caretBlinkRate
// Il2CppName: set_caretBlinkRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(float)>(&UnityEngine::UI::InputField::set_caretBlinkRate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_caretBlinkRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_caretWidth
// Il2CppName: get_caretWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_caretWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_caretWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_caretWidth
// Il2CppName: set_caretWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(int)>(&UnityEngine::UI::InputField::set_caretWidth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_caretWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_textComponent
// Il2CppName: get_textComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::Text* (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_textComponent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_textComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_textComponent
// Il2CppName: set_textComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::UI::Text*)>(&UnityEngine::UI::InputField::set_textComponent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Text")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_textComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_placeholder
// Il2CppName: get_placeholder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::Graphic* (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_placeholder)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_placeholder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_placeholder
// Il2CppName: set_placeholder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::UI::Graphic*)>(&UnityEngine::UI::InputField::set_placeholder)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Graphic")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_placeholder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_caretColor
// Il2CppName: get_caretColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_caretColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_caretColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_caretColor
// Il2CppName: set_caretColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::Color)>(&UnityEngine::UI::InputField::set_caretColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_caretColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_customCaretColor
// Il2CppName: get_customCaretColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_customCaretColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_customCaretColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_customCaretColor
// Il2CppName: set_customCaretColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(bool)>(&UnityEngine::UI::InputField::set_customCaretColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_customCaretColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_selectionColor
// Il2CppName: get_selectionColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_selectionColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_selectionColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_selectionColor
// Il2CppName: set_selectionColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::Color)>(&UnityEngine::UI::InputField::set_selectionColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_selectionColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_onEndEdit
// Il2CppName: get_onEndEdit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::InputField::SubmitEvent* (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_onEndEdit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_onEndEdit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_onEndEdit
// Il2CppName: set_onEndEdit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::UI::InputField::SubmitEvent*)>(&UnityEngine::UI::InputField::set_onEndEdit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "InputField/SubmitEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_onEndEdit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_onValueChange
// Il2CppName: get_onValueChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::InputField::OnChangeEvent* (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_onValueChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_onValueChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_onValueChange
// Il2CppName: set_onValueChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::UI::InputField::OnChangeEvent*)>(&UnityEngine::UI::InputField::set_onValueChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "InputField/OnChangeEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_onValueChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_onValueChanged
// Il2CppName: get_onValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::InputField::OnChangeEvent* (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_onValueChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_onValueChanged
// Il2CppName: set_onValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::UI::InputField::OnChangeEvent*)>(&UnityEngine::UI::InputField::set_onValueChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "InputField/OnChangeEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_onValidateInput
// Il2CppName: get_onValidateInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::InputField::OnValidateInput* (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_onValidateInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_onValidateInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_onValidateInput
// Il2CppName: set_onValidateInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::UI::InputField::OnValidateInput*)>(&UnityEngine::UI::InputField::set_onValidateInput)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "InputField/OnValidateInput")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_onValidateInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_characterLimit
// Il2CppName: get_characterLimit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_characterLimit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_characterLimit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_characterLimit
// Il2CppName: set_characterLimit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(int)>(&UnityEngine::UI::InputField::set_characterLimit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_characterLimit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_contentType
// Il2CppName: get_contentType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::InputField::ContentType (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_contentType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_contentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_contentType
// Il2CppName: set_contentType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::UI::InputField::ContentType)>(&UnityEngine::UI::InputField::set_contentType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "InputField/ContentType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_contentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_lineType
// Il2CppName: get_lineType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::InputField::LineType (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_lineType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_lineType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_lineType
// Il2CppName: set_lineType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::UI::InputField::LineType)>(&UnityEngine::UI::InputField::set_lineType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "InputField/LineType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_lineType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_inputType
// Il2CppName: get_inputType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::InputField::InputType (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_inputType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_inputType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_inputType
// Il2CppName: set_inputType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::UI::InputField::InputType)>(&UnityEngine::UI::InputField::set_inputType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "InputField/InputType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_inputType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_touchScreenKeyboard
// Il2CppName: get_touchScreenKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TouchScreenKeyboard* (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_touchScreenKeyboard)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_touchScreenKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_keyboardType
// Il2CppName: get_keyboardType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TouchScreenKeyboardType (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_keyboardType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_keyboardType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_keyboardType
// Il2CppName: set_keyboardType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::TouchScreenKeyboardType)>(&UnityEngine::UI::InputField::set_keyboardType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "TouchScreenKeyboardType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_keyboardType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_characterValidation
// Il2CppName: get_characterValidation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::InputField::CharacterValidation (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_characterValidation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_characterValidation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_characterValidation
// Il2CppName: set_characterValidation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::UI::InputField::CharacterValidation)>(&UnityEngine::UI::InputField::set_characterValidation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "InputField/CharacterValidation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_characterValidation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_readOnly
// Il2CppName: get_readOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_readOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_readOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_readOnly
// Il2CppName: set_readOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(bool)>(&UnityEngine::UI::InputField::set_readOnly)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_readOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_multiLine
// Il2CppName: get_multiLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_multiLine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_multiLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_asteriskChar
// Il2CppName: get_asteriskChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_asteriskChar)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_asteriskChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_asteriskChar
// Il2CppName: set_asteriskChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::Il2CppChar)>(&UnityEngine::UI::InputField::set_asteriskChar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_asteriskChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_wasCanceled
// Il2CppName: get_wasCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_wasCanceled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_wasCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_caretPositionInternal
// Il2CppName: get_caretPositionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_caretPositionInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_caretPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_caretPositionInternal
// Il2CppName: set_caretPositionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(int)>(&UnityEngine::UI::InputField::set_caretPositionInternal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_caretPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_caretSelectPositionInternal
// Il2CppName: get_caretSelectPositionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_caretSelectPositionInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_caretSelectPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_caretSelectPositionInternal
// Il2CppName: set_caretSelectPositionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(int)>(&UnityEngine::UI::InputField::set_caretSelectPositionInternal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_caretSelectPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_caretPosition
// Il2CppName: get_caretPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_caretPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_caretPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_caretPosition
// Il2CppName: set_caretPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(int)>(&UnityEngine::UI::InputField::set_caretPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_caretPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_selectionAnchorPosition
// Il2CppName: get_selectionAnchorPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_selectionAnchorPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_selectionAnchorPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_selectionAnchorPosition
// Il2CppName: set_selectionAnchorPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(int)>(&UnityEngine::UI::InputField::set_selectionAnchorPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_selectionAnchorPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_selectionFocusPosition
// Il2CppName: get_selectionFocusPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_selectionFocusPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_selectionFocusPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_selectionFocusPosition
// Il2CppName: set_selectionFocusPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(int)>(&UnityEngine::UI::InputField::set_selectionFocusPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_selectionFocusPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_clipboard
// Il2CppName: get_clipboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::UI::InputField::get_clipboard)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_clipboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::set_clipboard
// Il2CppName: set_clipboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&UnityEngine::UI::InputField::set_clipboard)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "set_clipboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_minWidth
// Il2CppName: get_minWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_minWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_minWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_preferredWidth
// Il2CppName: get_preferredWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_preferredWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_preferredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_flexibleWidth
// Il2CppName: get_flexibleWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_flexibleWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_flexibleWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_minHeight
// Il2CppName: get_minHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_minHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_minHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_preferredHeight
// Il2CppName: get_preferredHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_preferredHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_preferredHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_flexibleHeight
// Il2CppName: get_flexibleHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_flexibleHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_flexibleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_layoutPriority
// Il2CppName: get_layoutPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_layoutPriority)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_layoutPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::UnityEngine_UI_ICanvasElement_get_transform
// Il2CppName: UnityEngine.UI.ICanvasElement.get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::UnityEngine_UI_ICanvasElement_get_transform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::SetTextWithoutNotify
// Il2CppName: SetTextWithoutNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::StringW)>(&UnityEngine::UI::InputField::SetTextWithoutNotify)> {
  static const MethodInfo* get() {
    static auto* input = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "SetTextWithoutNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::SetText
// Il2CppName: SetText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::StringW, bool)>(&UnityEngine::UI::InputField::SetText)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* sendCallback = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "SetText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, sendCallback});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::ClampPos
// Il2CppName: ClampPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(ByRef<int>)>(&UnityEngine::UI::InputField::ClampPos)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "ClampPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::CaretBlink
// Il2CppName: CaretBlink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::CaretBlink)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "CaretBlink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::SetCaretVisible
// Il2CppName: SetCaretVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::SetCaretVisible)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "SetCaretVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::SetCaretActive
// Il2CppName: SetCaretActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::SetCaretActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "SetCaretActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::UpdateCaretMaterial
// Il2CppName: UpdateCaretMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::UpdateCaretMaterial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "UpdateCaretMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::OnFocus
// Il2CppName: OnFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::OnFocus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "OnFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::SelectAll
// Il2CppName: SelectAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::SelectAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "SelectAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::MoveTextEnd
// Il2CppName: MoveTextEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(bool)>(&UnityEngine::UI::InputField::MoveTextEnd)> {
  static const MethodInfo* get() {
    static auto* shift = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "MoveTextEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shift});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::MoveTextStart
// Il2CppName: MoveTextStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(bool)>(&UnityEngine::UI::InputField::MoveTextStart)> {
  static const MethodInfo* get() {
    static auto* shift = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "MoveTextStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shift});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::InPlaceEditing
// Il2CppName: InPlaceEditing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::InPlaceEditing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "InPlaceEditing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::UpdateCaretFromKeyboard
// Il2CppName: UpdateCaretFromKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::UpdateCaretFromKeyboard)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "UpdateCaretFromKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::ScreenToLocal
// Il2CppName: ScreenToLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::UI::InputField::*)(::UnityEngine::Vector2)>(&UnityEngine::UI::InputField::ScreenToLocal)> {
  static const MethodInfo* get() {
    static auto* screen = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "ScreenToLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{screen});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::GetUnclampedCharacterLineFromPosition
// Il2CppName: GetUnclampedCharacterLineFromPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::InputField::*)(::UnityEngine::Vector2, ::UnityEngine::TextGenerator*)>(&UnityEngine::UI::InputField::GetUnclampedCharacterLineFromPosition)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* generator = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextGenerator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "GetUnclampedCharacterLineFromPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos, generator});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::GetCharacterIndexFromPosition
// Il2CppName: GetCharacterIndexFromPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::InputField::*)(::UnityEngine::Vector2)>(&UnityEngine::UI::InputField::GetCharacterIndexFromPosition)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "GetCharacterIndexFromPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::MayDrag
// Il2CppName: MayDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::InputField::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::InputField::MayDrag)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "MayDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::OnBeginDrag
// Il2CppName: OnBeginDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::InputField::OnBeginDrag)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "OnBeginDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::OnDrag
// Il2CppName: OnDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::InputField::OnDrag)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "OnDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::MouseDragOutsideRect
// Il2CppName: MouseDragOutsideRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::UI::InputField::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::InputField::MouseDragOutsideRect)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "MouseDragOutsideRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::OnEndDrag
// Il2CppName: OnEndDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::InputField::OnEndDrag)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "OnEndDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::KeyPressed
// Il2CppName: KeyPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::InputField::EditState (UnityEngine::UI::InputField::*)(::UnityEngine::Event*)>(&UnityEngine::UI::InputField::KeyPressed)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "KeyPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::IsValidChar
// Il2CppName: IsValidChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::InputField::*)(::Il2CppChar)>(&UnityEngine::UI::InputField::IsValidChar)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "IsValidChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::ProcessEvent
// Il2CppName: ProcessEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::Event*)>(&UnityEngine::UI::InputField::ProcessEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "ProcessEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::OnUpdateSelected
// Il2CppName: OnUpdateSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::EventSystems::BaseEventData*)>(&UnityEngine::UI::InputField::OnUpdateSelected)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "BaseEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "OnUpdateSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::GetSelectedString
// Il2CppName: GetSelectedString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::GetSelectedString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "GetSelectedString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::FindtNextWordBegin
// Il2CppName: FindtNextWordBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::FindtNextWordBegin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "FindtNextWordBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::MoveRight
// Il2CppName: MoveRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(bool, bool)>(&UnityEngine::UI::InputField::MoveRight)> {
  static const MethodInfo* get() {
    static auto* shift = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* ctrl = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "MoveRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shift, ctrl});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::FindtPrevWordBegin
// Il2CppName: FindtPrevWordBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::FindtPrevWordBegin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "FindtPrevWordBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::MoveLeft
// Il2CppName: MoveLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(bool, bool)>(&UnityEngine::UI::InputField::MoveLeft)> {
  static const MethodInfo* get() {
    static auto* shift = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* ctrl = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "MoveLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shift, ctrl});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::DetermineCharacterLine
// Il2CppName: DetermineCharacterLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::InputField::*)(int, ::UnityEngine::TextGenerator*)>(&UnityEngine::UI::InputField::DetermineCharacterLine)> {
  static const MethodInfo* get() {
    static auto* charPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* generator = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextGenerator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "DetermineCharacterLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{charPos, generator});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::LineUpCharacterPosition
// Il2CppName: LineUpCharacterPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::InputField::*)(int, bool)>(&UnityEngine::UI::InputField::LineUpCharacterPosition)> {
  static const MethodInfo* get() {
    static auto* originalPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* goToFirstChar = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "LineUpCharacterPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{originalPos, goToFirstChar});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::LineDownCharacterPosition
// Il2CppName: LineDownCharacterPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::InputField::*)(int, bool)>(&UnityEngine::UI::InputField::LineDownCharacterPosition)> {
  static const MethodInfo* get() {
    static auto* originalPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* goToLastChar = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "LineDownCharacterPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{originalPos, goToLastChar});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::MoveDown
// Il2CppName: MoveDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(bool)>(&UnityEngine::UI::InputField::MoveDown)> {
  static const MethodInfo* get() {
    static auto* shift = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "MoveDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shift});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::MoveDown
// Il2CppName: MoveDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(bool, bool)>(&UnityEngine::UI::InputField::MoveDown)> {
  static const MethodInfo* get() {
    static auto* shift = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* goToLastChar = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "MoveDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shift, goToLastChar});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::MoveUp
// Il2CppName: MoveUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(bool)>(&UnityEngine::UI::InputField::MoveUp)> {
  static const MethodInfo* get() {
    static auto* shift = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "MoveUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shift});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::MoveUp
// Il2CppName: MoveUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(bool, bool)>(&UnityEngine::UI::InputField::MoveUp)> {
  static const MethodInfo* get() {
    static auto* shift = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* goToFirstChar = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "MoveUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shift, goToFirstChar});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::Delete
// Il2CppName: Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::Delete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::ForwardSpace
// Il2CppName: ForwardSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::ForwardSpace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "ForwardSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::Backspace
// Il2CppName: Backspace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::Backspace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "Backspace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::Il2CppChar)>(&UnityEngine::UI::InputField::Insert)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::UpdateTouchKeyboardFromEditChanges
// Il2CppName: UpdateTouchKeyboardFromEditChanges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::UpdateTouchKeyboardFromEditChanges)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "UpdateTouchKeyboardFromEditChanges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::SendOnValueChangedAndUpdateLabel
// Il2CppName: SendOnValueChangedAndUpdateLabel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::SendOnValueChangedAndUpdateLabel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "SendOnValueChangedAndUpdateLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::SendOnValueChanged
// Il2CppName: SendOnValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::SendOnValueChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "SendOnValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::SendOnSubmit
// Il2CppName: SendOnSubmit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::SendOnSubmit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "SendOnSubmit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::StringW)>(&UnityEngine::UI::InputField::Append)> {
  static const MethodInfo* get() {
    static auto* input = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::Il2CppChar)>(&UnityEngine::UI::InputField::Append)> {
  static const MethodInfo* get() {
    static auto* input = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::UpdateLabel
// Il2CppName: UpdateLabel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::UpdateLabel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "UpdateLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::IsSelectionVisible
// Il2CppName: IsSelectionVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::IsSelectionVisible)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "IsSelectionVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::GetLineStartPosition
// Il2CppName: GetLineStartPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::TextGenerator*, int)>(&UnityEngine::UI::InputField::GetLineStartPosition)> {
  static const MethodInfo* get() {
    static auto* gen = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextGenerator")->byval_arg;
    static auto* line = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "GetLineStartPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gen, line});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::GetLineEndPosition
// Il2CppName: GetLineEndPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::TextGenerator*, int)>(&UnityEngine::UI::InputField::GetLineEndPosition)> {
  static const MethodInfo* get() {
    static auto* gen = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextGenerator")->byval_arg;
    static auto* line = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "GetLineEndPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gen, line});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::SetDrawRangeToContainCaretPosition
// Il2CppName: SetDrawRangeToContainCaretPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(int)>(&UnityEngine::UI::InputField::SetDrawRangeToContainCaretPosition)> {
  static const MethodInfo* get() {
    static auto* caretPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "SetDrawRangeToContainCaretPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{caretPos});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::ForceLabelUpdate
// Il2CppName: ForceLabelUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::ForceLabelUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "ForceLabelUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::MarkGeometryAsDirty
// Il2CppName: MarkGeometryAsDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::MarkGeometryAsDirty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "MarkGeometryAsDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::Rebuild
// Il2CppName: Rebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::UI::CanvasUpdate)>(&UnityEngine::UI::InputField::Rebuild)> {
  static const MethodInfo* get() {
    static auto* update = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "CanvasUpdate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{update});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::LayoutComplete
// Il2CppName: LayoutComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::LayoutComplete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "LayoutComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::GraphicUpdateComplete
// Il2CppName: GraphicUpdateComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::GraphicUpdateComplete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "GraphicUpdateComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::UpdateGeometry
// Il2CppName: UpdateGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::UpdateGeometry)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "UpdateGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::AssignPositioningIfNeeded
// Il2CppName: AssignPositioningIfNeeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::AssignPositioningIfNeeded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "AssignPositioningIfNeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::OnFillVBO
// Il2CppName: OnFillVBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::Mesh*)>(&UnityEngine::UI::InputField::OnFillVBO)> {
  static const MethodInfo* get() {
    static auto* vbo = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "OnFillVBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vbo});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::GenerateCaret
// Il2CppName: GenerateCaret
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::UI::VertexHelper*, ::UnityEngine::Vector2)>(&UnityEngine::UI::InputField::GenerateCaret)> {
  static const MethodInfo* get() {
    static auto* vbo = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "VertexHelper")->byval_arg;
    static auto* roundingOffset = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "GenerateCaret", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vbo, roundingOffset});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::CreateCursorVerts
// Il2CppName: CreateCursorVerts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::CreateCursorVerts)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "CreateCursorVerts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::GenerateHighlight
// Il2CppName: GenerateHighlight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::UI::VertexHelper*, ::UnityEngine::Vector2)>(&UnityEngine::UI::InputField::GenerateHighlight)> {
  static const MethodInfo* get() {
    static auto* vbo = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "VertexHelper")->byval_arg;
    static auto* roundingOffset = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "GenerateHighlight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vbo, roundingOffset});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::Validate
// Il2CppName: Validate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (UnityEngine::UI::InputField::*)(::StringW, int, ::Il2CppChar)>(&UnityEngine::UI::InputField::Validate)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* pos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ch = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "Validate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text, pos, ch});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::ActivateInputField
// Il2CppName: ActivateInputField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::ActivateInputField)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "ActivateInputField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::ActivateInputFieldInternal
// Il2CppName: ActivateInputFieldInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::ActivateInputFieldInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "ActivateInputFieldInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::OnPointerClick
// Il2CppName: OnPointerClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::InputField::OnPointerClick)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "OnPointerClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::DeactivateInputField
// Il2CppName: DeactivateInputField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::DeactivateInputField)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "DeactivateInputField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::OnSubmit
// Il2CppName: OnSubmit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::EventSystems::BaseEventData*)>(&UnityEngine::UI::InputField::OnSubmit)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "BaseEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "OnSubmit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::EnforceContentType
// Il2CppName: EnforceContentType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::EnforceContentType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "EnforceContentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::EnforceTextHOverflow
// Il2CppName: EnforceTextHOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::EnforceTextHOverflow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "EnforceTextHOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::SetToCustomIfContentTypeIsNot
// Il2CppName: SetToCustomIfContentTypeIsNot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::ArrayW<::UnityEngine::UI::InputField::ContentType>)>(&UnityEngine::UI::InputField::SetToCustomIfContentTypeIsNot)> {
  static const MethodInfo* get() {
    static auto* allowedContentTypes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.UI", "InputField/ContentType"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "SetToCustomIfContentTypeIsNot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{allowedContentTypes});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::SetToCustom
// Il2CppName: SetToCustom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::SetToCustom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "SetToCustom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::CalculateLayoutInputHorizontal
// Il2CppName: CalculateLayoutInputHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::CalculateLayoutInputHorizontal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::CalculateLayoutInputVertical
// Il2CppName: CalculateLayoutInputVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::CalculateLayoutInputVertical)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "CalculateLayoutInputVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::get_hasSelection
// Il2CppName: get_hasSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::get_hasSelection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "get_hasSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UI::InputField::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UI::InputField::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)()>(&UnityEngine::UI::InputField::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::OnPointerDown
// Il2CppName: OnPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::InputField::OnPointerDown)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::OnSelect
// Il2CppName: OnSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::EventSystems::BaseEventData*)>(&UnityEngine::UI::InputField::OnSelect)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "BaseEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "OnSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::OnDeselect
// Il2CppName: OnDeselect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::EventSystems::BaseEventData*)>(&UnityEngine::UI::InputField::OnDeselect)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "BaseEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "OnDeselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::InputField::DoStateTransition
// Il2CppName: DoStateTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::InputField::*)(::UnityEngine::UI::Selectable::SelectionState, bool)>(&UnityEngine::UI::InputField::DoStateTransition)> {
  static const MethodInfo* get() {
    static auto* state = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Selectable/SelectionState")->byval_arg;
    static auto* instant = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::InputField*), "DoStateTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{state, instant});
  }
};
