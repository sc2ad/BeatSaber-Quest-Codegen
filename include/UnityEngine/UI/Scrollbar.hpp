// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UI.Selectable
#include "UnityEngine/UI/Selectable.hpp"
// Including type: UnityEngine.UI.ICanvasElement
#include "UnityEngine/UI/ICanvasElement.hpp"
// Including type: UnityEngine.EventSystems.IBeginDragHandler
#include "UnityEngine/EventSystems/IBeginDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IDragHandler
#include "UnityEngine/EventSystems/IDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IInitializePotentialDragHandler
#include "UnityEngine/EventSystems/IInitializePotentialDragHandler.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.DrivenRectTransformTracker
#include "UnityEngine/DrivenRectTransformTracker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Coroutine
  class Coroutine;
  // Forward declaring type: RectTransform
  class RectTransform;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Camera
  class Camera;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Skipping declaration: Direction because it is already included!
  // Forward declaring type: CanvasUpdate
  struct CanvasUpdate;
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: PointerEventData
  class PointerEventData;
  // Forward declaring type: AxisEventData
  class AxisEventData;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // Forward declaring type: Scrollbar
  class Scrollbar;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UI::Scrollbar);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UI::Scrollbar*, "UnityEngine.UI", "Scrollbar");
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // Size: 0x13A
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UI.Scrollbar
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: 108A6B0
  // [ExecuteAlways] Offset: FFFFFFFF
  // [RequireComponent] Offset: 108A6B0
  class Scrollbar : public ::UnityEngine::UI::Selectable/*, public ::UnityEngine::UI::ICanvasElement, public ::UnityEngine::EventSystems::IBeginDragHandler, public ::UnityEngine::EventSystems::IDragHandler, public ::UnityEngine::EventSystems::IInitializePotentialDragHandler*/ {
    public:
    // Nested type: ::UnityEngine::UI::Scrollbar::Direction
    struct Direction;
    // Nested type: ::UnityEngine::UI::Scrollbar::ScrollEvent
    class ScrollEvent;
    // Nested type: ::UnityEngine::UI::Scrollbar::Axis
    struct Axis;
    // Nested type: ::UnityEngine::UI::Scrollbar::$ClickRepeat$d__58
    class $ClickRepeat$d__58;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction
    // [TokenAttribute] Offset: FFFFFFFF
    struct Direction/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: Direction
      constexpr Direction(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction LeftToRight
      static constexpr const int LeftToRight = 0;
      // Get static field: static public UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction LeftToRight
      static ::UnityEngine::UI::Scrollbar::Direction _get_LeftToRight();
      // Set static field: static public UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction LeftToRight
      static void _set_LeftToRight(::UnityEngine::UI::Scrollbar::Direction value);
      // static field const value: static public UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction RightToLeft
      static constexpr const int RightToLeft = 1;
      // Get static field: static public UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction RightToLeft
      static ::UnityEngine::UI::Scrollbar::Direction _get_RightToLeft();
      // Set static field: static public UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction RightToLeft
      static void _set_RightToLeft(::UnityEngine::UI::Scrollbar::Direction value);
      // static field const value: static public UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction BottomToTop
      static constexpr const int BottomToTop = 2;
      // Get static field: static public UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction BottomToTop
      static ::UnityEngine::UI::Scrollbar::Direction _get_BottomToTop();
      // Set static field: static public UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction BottomToTop
      static void _set_BottomToTop(::UnityEngine::UI::Scrollbar::Direction value);
      // static field const value: static public UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction TopToBottom
      static constexpr const int TopToBottom = 3;
      // Get static field: static public UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction TopToBottom
      static ::UnityEngine::UI::Scrollbar::Direction _get_TopToBottom();
      // Set static field: static public UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction TopToBottom
      static void _set_TopToBottom(::UnityEngine::UI::Scrollbar::Direction value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction
    #pragma pack(pop)
    static check_size<sizeof(Scrollbar::Direction), 0 + sizeof(int)> __UnityEngine_UI_Scrollbar_DirectionSizeCheck;
    static_assert(sizeof(Scrollbar::Direction) == 0x4);
    public:
    // private UnityEngine.RectTransform m_HandleRect
    // Size: 0x8
    // Offset: 0xF8
    ::UnityEngine::RectTransform* m_HandleRect;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction m_Direction
    // Size: 0x4
    // Offset: 0x100
    ::UnityEngine::UI::Scrollbar::Direction m_Direction;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Scrollbar::Direction) == 0x4);
    // [RangeAttribute] Offset: 0x108C440
    // private System.Single m_Value
    // Size: 0x4
    // Offset: 0x104
    float m_Value;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x108C480
    // private System.Single m_Size
    // Size: 0x4
    // Offset: 0x108
    float m_Size;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x108C4C0
    // private System.Int32 m_NumberOfSteps
    // Size: 0x4
    // Offset: 0x10C
    int m_NumberOfSteps;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [SpaceAttribute] Offset: 0x108C500
    // private UnityEngine.UI.Scrollbar/UnityEngine.UI.ScrollEvent m_OnValueChanged
    // Size: 0x8
    // Offset: 0x110
    ::UnityEngine::UI::Scrollbar::ScrollEvent* m_OnValueChanged;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Scrollbar::ScrollEvent*) == 0x8);
    // private UnityEngine.RectTransform m_ContainerRect
    // Size: 0x8
    // Offset: 0x118
    ::UnityEngine::RectTransform* m_ContainerRect;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.Vector2 m_Offset
    // Size: 0x8
    // Offset: 0x120
    ::UnityEngine::Vector2 m_Offset;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private UnityEngine.DrivenRectTransformTracker m_Tracker
    // Size: 0x1
    // Offset: 0x128
    ::UnityEngine::DrivenRectTransformTracker m_Tracker;
    // Field size check
    static_assert(sizeof(::UnityEngine::DrivenRectTransformTracker) == 0x1);
    // Padding between fields: m_Tracker and: m_PointerDownRepeat
    char __padding8[0x7] = {};
    // private UnityEngine.Coroutine m_PointerDownRepeat
    // Size: 0x8
    // Offset: 0x130
    ::UnityEngine::Coroutine* m_PointerDownRepeat;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    // private System.Boolean isPointerDownAndNotDragging
    // Size: 0x1
    // Offset: 0x138
    bool isPointerDownAndNotDragging;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_DelayedUpdateVisuals
    // Size: 0x1
    // Offset: 0x139
    bool m_DelayedUpdateVisuals;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::UI::ICanvasElement
    operator ::UnityEngine::UI::ICanvasElement() noexcept {
      return *reinterpret_cast<::UnityEngine::UI::ICanvasElement*>(this);
    }
    // Creating interface conversion operator: i_ICanvasElement
    inline ::UnityEngine::UI::ICanvasElement* i_ICanvasElement() noexcept {
      return reinterpret_cast<::UnityEngine::UI::ICanvasElement*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IBeginDragHandler
    operator ::UnityEngine::EventSystems::IBeginDragHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IBeginDragHandler*>(this);
    }
    // Creating interface conversion operator: i_IBeginDragHandler
    inline ::UnityEngine::EventSystems::IBeginDragHandler* i_IBeginDragHandler() noexcept {
      return reinterpret_cast<::UnityEngine::EventSystems::IBeginDragHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IDragHandler
    operator ::UnityEngine::EventSystems::IDragHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IDragHandler*>(this);
    }
    // Creating interface conversion operator: i_IDragHandler
    inline ::UnityEngine::EventSystems::IDragHandler* i_IDragHandler() noexcept {
      return reinterpret_cast<::UnityEngine::EventSystems::IDragHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IInitializePotentialDragHandler
    operator ::UnityEngine::EventSystems::IInitializePotentialDragHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IInitializePotentialDragHandler*>(this);
    }
    // Creating interface conversion operator: i_IInitializePotentialDragHandler
    inline ::UnityEngine::EventSystems::IInitializePotentialDragHandler* i_IInitializePotentialDragHandler() noexcept {
      return reinterpret_cast<::UnityEngine::EventSystems::IInitializePotentialDragHandler*>(this);
    }
    // Get instance field reference: private UnityEngine.RectTransform m_HandleRect
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_m_HandleRect();
    // Get instance field reference: private UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction m_Direction
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Scrollbar::Direction& dyn_m_Direction();
    // Get instance field reference: private System.Single m_Value
    [[deprecated("Use field access instead!")]] float& dyn_m_Value();
    // Get instance field reference: private System.Single m_Size
    [[deprecated("Use field access instead!")]] float& dyn_m_Size();
    // Get instance field reference: private System.Int32 m_NumberOfSteps
    [[deprecated("Use field access instead!")]] int& dyn_m_NumberOfSteps();
    // Get instance field reference: private UnityEngine.UI.Scrollbar/UnityEngine.UI.ScrollEvent m_OnValueChanged
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Scrollbar::ScrollEvent*& dyn_m_OnValueChanged();
    // Get instance field reference: private UnityEngine.RectTransform m_ContainerRect
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_m_ContainerRect();
    // Get instance field reference: private UnityEngine.Vector2 m_Offset
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_Offset();
    // Get instance field reference: private UnityEngine.DrivenRectTransformTracker m_Tracker
    [[deprecated("Use field access instead!")]] ::UnityEngine::DrivenRectTransformTracker& dyn_m_Tracker();
    // Get instance field reference: private UnityEngine.Coroutine m_PointerDownRepeat
    [[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& dyn_m_PointerDownRepeat();
    // Get instance field reference: private System.Boolean isPointerDownAndNotDragging
    [[deprecated("Use field access instead!")]] bool& dyn_isPointerDownAndNotDragging();
    // Get instance field reference: private System.Boolean m_DelayedUpdateVisuals
    [[deprecated("Use field access instead!")]] bool& dyn_m_DelayedUpdateVisuals();
    // public UnityEngine.RectTransform get_handleRect()
    // Offset: 0x1EDE818
    ::UnityEngine::RectTransform* get_handleRect();
    // public System.Void set_handleRect(UnityEngine.RectTransform value)
    // Offset: 0x1EDE820
    void set_handleRect(::UnityEngine::RectTransform* value);
    // public UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction get_direction()
    // Offset: 0x1EDEB74
    ::UnityEngine::UI::Scrollbar::Direction get_direction();
    // public System.Void set_direction(UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction value)
    // Offset: 0x1EDEB7C
    void set_direction(::UnityEngine::UI::Scrollbar::Direction value);
    // public System.Single get_value()
    // Offset: 0x1EDEDF0
    float get_value();
    // public System.Void set_value(System.Single value)
    // Offset: 0x1EDD164
    void set_value(float value);
    // public System.Single get_size()
    // Offset: 0x1EDEFD0
    float get_size();
    // public System.Void set_size(System.Single value)
    // Offset: 0x1EDCF6C
    void set_size(float value);
    // public System.Int32 get_numberOfSteps()
    // Offset: 0x1EDEFD8
    int get_numberOfSteps();
    // public System.Void set_numberOfSteps(System.Int32 value)
    // Offset: 0x1EDEFE0
    void set_numberOfSteps(int value);
    // public UnityEngine.UI.Scrollbar/UnityEngine.UI.ScrollEvent get_onValueChanged()
    // Offset: 0x1EDF06C
    ::UnityEngine::UI::Scrollbar::ScrollEvent* get_onValueChanged();
    // public System.Void set_onValueChanged(UnityEngine.UI.Scrollbar/UnityEngine.UI.ScrollEvent value)
    // Offset: 0x1EDF074
    void set_onValueChanged(::UnityEngine::UI::Scrollbar::ScrollEvent* value);
    // private System.Single get_stepSize()
    // Offset: 0x1EDF07C
    float get_stepSize();
    // private UnityEngine.UI.Scrollbar/UnityEngine.UI.Axis get_axis()
    // Offset: 0x1EDF4F0
    ::UnityEngine::UI::Scrollbar::Axis get_axis();
    // private System.Boolean get_reverseValue()
    // Offset: 0x1EDF500
    bool get_reverseValue();
    // private UnityEngine.Transform UnityEngine.UI.ICanvasElement.get_transform()
    // Offset: 0x1EE09B0
    ::UnityEngine::Transform* UnityEngine_UI_ICanvasElement_get_transform();
    // public System.Void SetValueWithoutNotify(System.Single input)
    // Offset: 0x1EDEFC8
    void SetValueWithoutNotify(float input);
    // public System.Void Rebuild(UnityEngine.UI.CanvasUpdate executing)
    // Offset: 0x1EDF0A8
    void Rebuild(::UnityEngine::UI::CanvasUpdate executing);
    // public System.Void LayoutComplete()
    // Offset: 0x1EDF0AC
    void LayoutComplete();
    // public System.Void GraphicUpdateComplete()
    // Offset: 0x1EDF0B0
    void GraphicUpdateComplete();
    // protected System.Void Update()
    // Offset: 0x1EDF494
    void Update();
    // private System.Void UpdateCachedReferences()
    // Offset: 0x1EDE8A4
    void UpdateCachedReferences();
    // private System.Void Set(System.Single input, System.Boolean sendCallback)
    // Offset: 0x1EDEEFC
    void Set(float input, bool sendCallback);
    // private System.Void UpdateVisuals()
    // Offset: 0x1EDE998
    void UpdateVisuals();
    // private System.Void UpdateDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1EDF514
    void UpdateDrag(::UnityEngine::EventSystems::PointerEventData* eventData);
    // private System.Void DoUpdateDrag(UnityEngine.Vector2 handleCorner, System.Single remainingSize)
    // Offset: 0x1EDF7C8
    void DoUpdateDrag(::UnityEngine::Vector2 handleCorner, float remainingSize);
    // private System.Boolean MayDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1EDF90C
    bool MayDrag(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1EDF974
    void OnBeginDrag(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1EDFB80
    void OnDrag(::UnityEngine::EventSystems::PointerEventData* eventData);
    // protected System.Collections.IEnumerator ClickRepeat(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1EDFE88
    ::System::Collections::IEnumerator* ClickRepeat(::UnityEngine::EventSystems::PointerEventData* eventData);
    // protected System.Collections.IEnumerator ClickRepeat(UnityEngine.Vector2 screenPosition, UnityEngine.Camera camera)
    // Offset: 0x1EDFDF4
    ::System::Collections::IEnumerator* ClickRepeat(::UnityEngine::Vector2 screenPosition, ::UnityEngine::Camera* camera);
    // public System.Void OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1EE0804
    void OnInitializePotentialDrag(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void SetDirection(UnityEngine.UI.Scrollbar/UnityEngine.UI.Direction direction, System.Boolean includeRectLayouts)
    // Offset: 0x1EE081C
    void SetDirection(::UnityEngine::UI::Scrollbar::Direction direction, bool includeRectLayouts);
    // protected System.Void .ctor()
    // Offset: 0x1EDEBF8
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::.ctor()
    // Base method: System.Void UIBehaviour::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Scrollbar* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::Scrollbar::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Scrollbar*, creationType>()));
    }
    // protected override System.Void OnEnable()
    // Offset: 0x1EDF0B4
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x1EDF2F0
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::OnDisable()
    void OnDisable();
    // protected override System.Void OnRectTransformDimensionsChange()
    // Offset: 0x1EDF4A8
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnRectTransformDimensionsChange()
    void OnRectTransformDimensionsChange();
    // public override System.Void OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1EDFC2C
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::OnPointerDown(UnityEngine.EventSystems.PointerEventData eventData)
    void OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public override System.Void OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1EDFF00
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::OnPointerUp(UnityEngine.EventSystems.PointerEventData eventData)
    void OnPointerUp(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public override System.Void OnMove(UnityEngine.EventSystems.AxisEventData eventData)
    // Offset: 0x1EDFF48
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: System.Void Selectable::OnMove(UnityEngine.EventSystems.AxisEventData eventData)
    void OnMove(::UnityEngine::EventSystems::AxisEventData* eventData);
    // public override UnityEngine.UI.Selectable FindSelectableOnLeft()
    // Offset: 0x1EE0274
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: UnityEngine.UI.Selectable Selectable::FindSelectableOnLeft()
    ::UnityEngine::UI::Selectable* FindSelectableOnLeft();
    // public override UnityEngine.UI.Selectable FindSelectableOnRight()
    // Offset: 0x1EE03D8
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: UnityEngine.UI.Selectable Selectable::FindSelectableOnRight()
    ::UnityEngine::UI::Selectable* FindSelectableOnRight();
    // public override UnityEngine.UI.Selectable FindSelectableOnUp()
    // Offset: 0x1EE053C
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: UnityEngine.UI.Selectable Selectable::FindSelectableOnUp()
    ::UnityEngine::UI::Selectable* FindSelectableOnUp();
    // public override UnityEngine.UI.Selectable FindSelectableOnDown()
    // Offset: 0x1EE06A0
    // Implemented from: UnityEngine.UI.Selectable
    // Base method: UnityEngine.UI.Selectable Selectable::FindSelectableOnDown()
    ::UnityEngine::UI::Selectable* FindSelectableOnDown();
  }; // UnityEngine.UI.Scrollbar
  #pragma pack(pop)
  static check_size<sizeof(Scrollbar), 313 + sizeof(bool)> __UnityEngine_UI_ScrollbarSizeCheck;
  static_assert(sizeof(Scrollbar) == 0x13A);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UI::Scrollbar::Direction, "UnityEngine.UI", "Scrollbar/Direction");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::get_handleRect
// Il2CppName: get_handleRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::get_handleRect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "get_handleRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::set_handleRect
// Il2CppName: set_handleRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(::UnityEngine::RectTransform*)>(&UnityEngine::UI::Scrollbar::set_handleRect)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "set_handleRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::get_direction
// Il2CppName: get_direction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::Scrollbar::Direction (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::get_direction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "get_direction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::set_direction
// Il2CppName: set_direction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(::UnityEngine::UI::Scrollbar::Direction)>(&UnityEngine::UI::Scrollbar::set_direction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Scrollbar/Direction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "set_direction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::get_value
// Il2CppName: get_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::get_value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "get_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::set_value
// Il2CppName: set_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(float)>(&UnityEngine::UI::Scrollbar::set_value)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "set_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::get_size
// Il2CppName: get_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::get_size)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "get_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::set_size
// Il2CppName: set_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(float)>(&UnityEngine::UI::Scrollbar::set_size)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "set_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::get_numberOfSteps
// Il2CppName: get_numberOfSteps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::get_numberOfSteps)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "get_numberOfSteps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::set_numberOfSteps
// Il2CppName: set_numberOfSteps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(int)>(&UnityEngine::UI::Scrollbar::set_numberOfSteps)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "set_numberOfSteps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::get_onValueChanged
// Il2CppName: get_onValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::Scrollbar::ScrollEvent* (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::get_onValueChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "get_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::set_onValueChanged
// Il2CppName: set_onValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(::UnityEngine::UI::Scrollbar::ScrollEvent*)>(&UnityEngine::UI::Scrollbar::set_onValueChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Scrollbar/ScrollEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "set_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::get_stepSize
// Il2CppName: get_stepSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::get_stepSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "get_stepSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::get_axis
// Il2CppName: get_axis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::Scrollbar::Axis (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::get_axis)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "get_axis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::get_reverseValue
// Il2CppName: get_reverseValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::get_reverseValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "get_reverseValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::UnityEngine_UI_ICanvasElement_get_transform
// Il2CppName: UnityEngine.UI.ICanvasElement.get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::UnityEngine_UI_ICanvasElement_get_transform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::SetValueWithoutNotify
// Il2CppName: SetValueWithoutNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(float)>(&UnityEngine::UI::Scrollbar::SetValueWithoutNotify)> {
  static const MethodInfo* get() {
    static auto* input = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "SetValueWithoutNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::Rebuild
// Il2CppName: Rebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(::UnityEngine::UI::CanvasUpdate)>(&UnityEngine::UI::Scrollbar::Rebuild)> {
  static const MethodInfo* get() {
    static auto* executing = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "CanvasUpdate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{executing});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::LayoutComplete
// Il2CppName: LayoutComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::LayoutComplete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "LayoutComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::GraphicUpdateComplete
// Il2CppName: GraphicUpdateComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::GraphicUpdateComplete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "GraphicUpdateComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::UpdateCachedReferences
// Il2CppName: UpdateCachedReferences
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::UpdateCachedReferences)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "UpdateCachedReferences", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(float, bool)>(&UnityEngine::UI::Scrollbar::Set)> {
  static const MethodInfo* get() {
    static auto* input = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* sendCallback = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input, sendCallback});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::UpdateVisuals
// Il2CppName: UpdateVisuals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::UpdateVisuals)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "UpdateVisuals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::UpdateDrag
// Il2CppName: UpdateDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::Scrollbar::UpdateDrag)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "UpdateDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::DoUpdateDrag
// Il2CppName: DoUpdateDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(::UnityEngine::Vector2, float)>(&UnityEngine::UI::Scrollbar::DoUpdateDrag)> {
  static const MethodInfo* get() {
    static auto* handleCorner = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* remainingSize = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "DoUpdateDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handleCorner, remainingSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::MayDrag
// Il2CppName: MayDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::Scrollbar::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::Scrollbar::MayDrag)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "MayDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::OnBeginDrag
// Il2CppName: OnBeginDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::Scrollbar::OnBeginDrag)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "OnBeginDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::OnDrag
// Il2CppName: OnDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::Scrollbar::OnDrag)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "OnDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::ClickRepeat
// Il2CppName: ClickRepeat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::UI::Scrollbar::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::Scrollbar::ClickRepeat)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "ClickRepeat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::ClickRepeat
// Il2CppName: ClickRepeat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::UI::Scrollbar::*)(::UnityEngine::Vector2, ::UnityEngine::Camera*)>(&UnityEngine::UI::Scrollbar::ClickRepeat)> {
  static const MethodInfo* get() {
    static auto* screenPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "ClickRepeat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{screenPosition, camera});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::OnInitializePotentialDrag
// Il2CppName: OnInitializePotentialDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::Scrollbar::OnInitializePotentialDrag)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "OnInitializePotentialDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::SetDirection
// Il2CppName: SetDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(::UnityEngine::UI::Scrollbar::Direction, bool)>(&UnityEngine::UI::Scrollbar::SetDirection)> {
  static const MethodInfo* get() {
    static auto* direction = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Scrollbar/Direction")->byval_arg;
    static auto* includeRectLayouts = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "SetDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{direction, includeRectLayouts});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::OnRectTransformDimensionsChange
// Il2CppName: OnRectTransformDimensionsChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::OnRectTransformDimensionsChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::OnPointerDown
// Il2CppName: OnPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::Scrollbar::OnPointerDown)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::OnPointerUp
// Il2CppName: OnPointerUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::Scrollbar::OnPointerUp)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "OnPointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::OnMove
// Il2CppName: OnMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::Scrollbar::*)(::UnityEngine::EventSystems::AxisEventData*)>(&UnityEngine::UI::Scrollbar::OnMove)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "AxisEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "OnMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::FindSelectableOnLeft
// Il2CppName: FindSelectableOnLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::Selectable* (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::FindSelectableOnLeft)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "FindSelectableOnLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::FindSelectableOnRight
// Il2CppName: FindSelectableOnRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::Selectable* (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::FindSelectableOnRight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "FindSelectableOnRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::FindSelectableOnUp
// Il2CppName: FindSelectableOnUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::Selectable* (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::FindSelectableOnUp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "FindSelectableOnUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::Scrollbar::FindSelectableOnDown
// Il2CppName: FindSelectableOnDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::Selectable* (UnityEngine::UI::Scrollbar::*)()>(&UnityEngine::UI::Scrollbar::FindSelectableOnDown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::Scrollbar*), "FindSelectableOnDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
