// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.EventSystems.UIBehaviour
#include "UnityEngine/EventSystems/UIBehaviour.hpp"
// Including type: UnityEngine.UI.ICanvasElement
#include "UnityEngine/UI/ICanvasElement.hpp"
// Including type: UnityEngine.UI.ILayoutElement
#include "UnityEngine/UI/ILayoutElement.hpp"
// Including type: UnityEngine.EventSystems.IBeginDragHandler
#include "UnityEngine/EventSystems/IBeginDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IDragHandler
#include "UnityEngine/EventSystems/IDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IEndDragHandler
#include "UnityEngine/EventSystems/IEndDragHandler.hpp"
// Including type: UnityEngine.UI.ILayoutGroup
#include "UnityEngine/UI/ILayoutGroup.hpp"
// Including type: UnityEngine.EventSystems.IInitializePotentialDragHandler
#include "UnityEngine/EventSystems/IInitializePotentialDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IScrollHandler
#include "UnityEngine/EventSystems/IScrollHandler.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.DrivenRectTransformTracker
#include "UnityEngine/DrivenRectTransformTracker.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Scrollbar
  class Scrollbar;
  // Skipping declaration: MovementType because it is already included!
  // Skipping declaration: ScrollbarVisibility because it is already included!
  // Forward declaring type: CanvasUpdate
  struct CanvasUpdate;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectTransform
  class RectTransform;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: PointerEventData
  class PointerEventData;
}
// Completed forward declares
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // Forward declaring type: ScrollRect
  class ScrollRect;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UI::ScrollRect);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UI::ScrollRect*, "UnityEngine.UI", "ScrollRect");
// Type namespace: UnityEngine.UI
namespace UnityEngine::UI {
  // Size: 0x128
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UI.ScrollRect
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: 10C7B44
  // [SelectionBaseAttribute] Offset: FFFFFFFF
  // [ExecuteAlways] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  // [RequireComponent] Offset: 10C7B44
  class ScrollRect : public ::UnityEngine::EventSystems::UIBehaviour/*, public ::UnityEngine::UI::ICanvasElement, public ::UnityEngine::UI::ILayoutElement, public ::UnityEngine::EventSystems::IBeginDragHandler, public ::UnityEngine::EventSystems::IDragHandler, public ::UnityEngine::EventSystems::IEndDragHandler, public ::UnityEngine::UI::ILayoutGroup, public ::UnityEngine::EventSystems::IInitializePotentialDragHandler, public ::UnityEngine::EventSystems::IScrollHandler*/ {
    public:
    // Nested type: ::UnityEngine::UI::ScrollRect::MovementType
    struct MovementType;
    // Nested type: ::UnityEngine::UI::ScrollRect::ScrollbarVisibility
    struct ScrollbarVisibility;
    // Nested type: ::UnityEngine::UI::ScrollRect::ScrollRectEvent
    class ScrollRectEvent;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UI.ScrollRect/UnityEngine.UI.MovementType
    // [TokenAttribute] Offset: FFFFFFFF
    struct MovementType/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: MovementType
      constexpr MovementType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.MovementType Unrestricted
      static constexpr const int Unrestricted = 0;
      // Get static field: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.MovementType Unrestricted
      static ::UnityEngine::UI::ScrollRect::MovementType _get_Unrestricted();
      // Set static field: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.MovementType Unrestricted
      static void _set_Unrestricted(::UnityEngine::UI::ScrollRect::MovementType value);
      // static field const value: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.MovementType Elastic
      static constexpr const int Elastic = 1;
      // Get static field: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.MovementType Elastic
      static ::UnityEngine::UI::ScrollRect::MovementType _get_Elastic();
      // Set static field: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.MovementType Elastic
      static void _set_Elastic(::UnityEngine::UI::ScrollRect::MovementType value);
      // static field const value: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.MovementType Clamped
      static constexpr const int Clamped = 2;
      // Get static field: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.MovementType Clamped
      static ::UnityEngine::UI::ScrollRect::MovementType _get_Clamped();
      // Set static field: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.MovementType Clamped
      static void _set_Clamped(::UnityEngine::UI::ScrollRect::MovementType value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.UI.ScrollRect/UnityEngine.UI.MovementType
    #pragma pack(pop)
    static check_size<sizeof(ScrollRect::MovementType), 0 + sizeof(int)> __UnityEngine_UI_ScrollRect_MovementTypeSizeCheck;
    static_assert(sizeof(ScrollRect::MovementType) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility
    // [TokenAttribute] Offset: FFFFFFFF
    struct ScrollbarVisibility/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: ScrollbarVisibility
      constexpr ScrollbarVisibility(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility Permanent
      static constexpr const int Permanent = 0;
      // Get static field: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility Permanent
      static ::UnityEngine::UI::ScrollRect::ScrollbarVisibility _get_Permanent();
      // Set static field: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility Permanent
      static void _set_Permanent(::UnityEngine::UI::ScrollRect::ScrollbarVisibility value);
      // static field const value: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility AutoHide
      static constexpr const int AutoHide = 1;
      // Get static field: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility AutoHide
      static ::UnityEngine::UI::ScrollRect::ScrollbarVisibility _get_AutoHide();
      // Set static field: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility AutoHide
      static void _set_AutoHide(::UnityEngine::UI::ScrollRect::ScrollbarVisibility value);
      // static field const value: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility AutoHideAndExpandViewport
      static constexpr const int AutoHideAndExpandViewport = 2;
      // Get static field: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility AutoHideAndExpandViewport
      static ::UnityEngine::UI::ScrollRect::ScrollbarVisibility _get_AutoHideAndExpandViewport();
      // Set static field: static public UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility AutoHideAndExpandViewport
      static void _set_AutoHideAndExpandViewport(::UnityEngine::UI::ScrollRect::ScrollbarVisibility value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility
    #pragma pack(pop)
    static check_size<sizeof(ScrollRect::ScrollbarVisibility), 0 + sizeof(int)> __UnityEngine_UI_ScrollRect_ScrollbarVisibilitySizeCheck;
    static_assert(sizeof(ScrollRect::ScrollbarVisibility) == 0x4);
    public:
    // private UnityEngine.RectTransform m_Content
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::RectTransform* m_Content;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // private System.Boolean m_Horizontal
    // Size: 0x1
    // Offset: 0x20
    bool m_Horizontal;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Vertical
    // Size: 0x1
    // Offset: 0x21
    bool m_Vertical;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Vertical and: m_MovementType
    char __padding2[0x2] = {};
    // private UnityEngine.UI.ScrollRect/UnityEngine.UI.MovementType m_MovementType
    // Size: 0x4
    // Offset: 0x24
    ::UnityEngine::UI::ScrollRect::MovementType m_MovementType;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::ScrollRect::MovementType) == 0x4);
    // private System.Single m_Elasticity
    // Size: 0x4
    // Offset: 0x28
    float m_Elasticity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean m_Inertia
    // Size: 0x1
    // Offset: 0x2C
    bool m_Inertia;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Inertia and: m_DecelerationRate
    char __padding5[0x3] = {};
    // private System.Single m_DecelerationRate
    // Size: 0x4
    // Offset: 0x30
    float m_DecelerationRate;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_ScrollSensitivity
    // Size: 0x4
    // Offset: 0x34
    float m_ScrollSensitivity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.RectTransform m_Viewport
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::RectTransform* m_Viewport;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.UI.Scrollbar m_HorizontalScrollbar
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::UI::Scrollbar* m_HorizontalScrollbar;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Scrollbar*) == 0x8);
    // private UnityEngine.UI.Scrollbar m_VerticalScrollbar
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::UI::Scrollbar* m_VerticalScrollbar;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Scrollbar*) == 0x8);
    // private UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility m_HorizontalScrollbarVisibility
    // Size: 0x4
    // Offset: 0x50
    ::UnityEngine::UI::ScrollRect::ScrollbarVisibility m_HorizontalScrollbarVisibility;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::ScrollRect::ScrollbarVisibility) == 0x4);
    // private UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility m_VerticalScrollbarVisibility
    // Size: 0x4
    // Offset: 0x54
    ::UnityEngine::UI::ScrollRect::ScrollbarVisibility m_VerticalScrollbarVisibility;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::ScrollRect::ScrollbarVisibility) == 0x4);
    // private System.Single m_HorizontalScrollbarSpacing
    // Size: 0x4
    // Offset: 0x58
    float m_HorizontalScrollbarSpacing;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_VerticalScrollbarSpacing
    // Size: 0x4
    // Offset: 0x5C
    float m_VerticalScrollbarSpacing;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollRectEvent m_OnValueChanged
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::UI::ScrollRect::ScrollRectEvent* m_OnValueChanged;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::ScrollRect::ScrollRectEvent*) == 0x8);
    // private UnityEngine.Vector2 m_PointerStartLocalCursor
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::Vector2 m_PointerStartLocalCursor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // protected UnityEngine.Vector2 m_ContentStartPosition
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::Vector2 m_ContentStartPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private UnityEngine.RectTransform m_ViewRect
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::RectTransform* m_ViewRect;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // protected UnityEngine.Bounds m_ContentBounds
    // Size: 0x18
    // Offset: 0x80
    ::UnityEngine::Bounds m_ContentBounds;
    // Field size check
    static_assert(sizeof(::UnityEngine::Bounds) == 0x18);
    // private UnityEngine.Bounds m_ViewBounds
    // Size: 0x18
    // Offset: 0x98
    ::UnityEngine::Bounds m_ViewBounds;
    // Field size check
    static_assert(sizeof(::UnityEngine::Bounds) == 0x18);
    // private UnityEngine.Vector2 m_Velocity
    // Size: 0x8
    // Offset: 0xB0
    ::UnityEngine::Vector2 m_Velocity;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private System.Boolean m_Dragging
    // Size: 0x1
    // Offset: 0xB8
    bool m_Dragging;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Scrolling
    // Size: 0x1
    // Offset: 0xB9
    bool m_Scrolling;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Scrolling and: m_PrevPosition
    char __padding23[0x2] = {};
    // private UnityEngine.Vector2 m_PrevPosition
    // Size: 0x8
    // Offset: 0xBC
    ::UnityEngine::Vector2 m_PrevPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private UnityEngine.Bounds m_PrevContentBounds
    // Size: 0x18
    // Offset: 0xC4
    ::UnityEngine::Bounds m_PrevContentBounds;
    // Field size check
    static_assert(sizeof(::UnityEngine::Bounds) == 0x18);
    // private UnityEngine.Bounds m_PrevViewBounds
    // Size: 0x18
    // Offset: 0xDC
    ::UnityEngine::Bounds m_PrevViewBounds;
    // Field size check
    static_assert(sizeof(::UnityEngine::Bounds) == 0x18);
    // private System.Boolean m_HasRebuiltLayout
    // Size: 0x1
    // Offset: 0xF4
    bool m_HasRebuiltLayout;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_HSliderExpand
    // Size: 0x1
    // Offset: 0xF5
    bool m_HSliderExpand;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_VSliderExpand
    // Size: 0x1
    // Offset: 0xF6
    bool m_VSliderExpand;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_VSliderExpand and: m_HSliderHeight
    char __padding29[0x1] = {};
    // private System.Single m_HSliderHeight
    // Size: 0x4
    // Offset: 0xF8
    float m_HSliderHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_VSliderWidth
    // Size: 0x4
    // Offset: 0xFC
    float m_VSliderWidth;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.RectTransform m_Rect
    // Size: 0x8
    // Offset: 0x100
    ::UnityEngine::RectTransform* m_Rect;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.RectTransform m_HorizontalScrollbarRect
    // Size: 0x8
    // Offset: 0x108
    ::UnityEngine::RectTransform* m_HorizontalScrollbarRect;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.RectTransform m_VerticalScrollbarRect
    // Size: 0x8
    // Offset: 0x110
    ::UnityEngine::RectTransform* m_VerticalScrollbarRect;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.DrivenRectTransformTracker m_Tracker
    // Size: 0x1
    // Offset: 0x118
    ::UnityEngine::DrivenRectTransformTracker m_Tracker;
    // Field size check
    static_assert(sizeof(::UnityEngine::DrivenRectTransformTracker) == 0x1);
    // Padding between fields: m_Tracker and: m_Corners
    char __padding35[0x7] = {};
    // private readonly UnityEngine.Vector3[] m_Corners
    // Size: 0x8
    // Offset: 0x120
    ::ArrayW<::UnityEngine::Vector3> m_Corners;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Vector3>) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::UI::ICanvasElement
    operator ::UnityEngine::UI::ICanvasElement() noexcept {
      return *reinterpret_cast<::UnityEngine::UI::ICanvasElement*>(this);
    }
    // Creating interface conversion operator: i_ICanvasElement
    inline ::UnityEngine::UI::ICanvasElement* i_ICanvasElement() noexcept {
      return reinterpret_cast<::UnityEngine::UI::ICanvasElement*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::UI::ILayoutElement
    operator ::UnityEngine::UI::ILayoutElement() noexcept {
      return *reinterpret_cast<::UnityEngine::UI::ILayoutElement*>(this);
    }
    // Creating interface conversion operator: i_ILayoutElement
    inline ::UnityEngine::UI::ILayoutElement* i_ILayoutElement() noexcept {
      return reinterpret_cast<::UnityEngine::UI::ILayoutElement*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IBeginDragHandler
    operator ::UnityEngine::EventSystems::IBeginDragHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IBeginDragHandler*>(this);
    }
    // Creating interface conversion operator: i_IBeginDragHandler
    inline ::UnityEngine::EventSystems::IBeginDragHandler* i_IBeginDragHandler() noexcept {
      return reinterpret_cast<::UnityEngine::EventSystems::IBeginDragHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IDragHandler
    operator ::UnityEngine::EventSystems::IDragHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IDragHandler*>(this);
    }
    // Creating interface conversion operator: i_IDragHandler
    inline ::UnityEngine::EventSystems::IDragHandler* i_IDragHandler() noexcept {
      return reinterpret_cast<::UnityEngine::EventSystems::IDragHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IEndDragHandler
    operator ::UnityEngine::EventSystems::IEndDragHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IEndDragHandler*>(this);
    }
    // Creating interface conversion operator: i_IEndDragHandler
    inline ::UnityEngine::EventSystems::IEndDragHandler* i_IEndDragHandler() noexcept {
      return reinterpret_cast<::UnityEngine::EventSystems::IEndDragHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::UI::ILayoutGroup
    operator ::UnityEngine::UI::ILayoutGroup() noexcept {
      return *reinterpret_cast<::UnityEngine::UI::ILayoutGroup*>(this);
    }
    // Creating interface conversion operator: i_ILayoutGroup
    inline ::UnityEngine::UI::ILayoutGroup* i_ILayoutGroup() noexcept {
      return reinterpret_cast<::UnityEngine::UI::ILayoutGroup*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IInitializePotentialDragHandler
    operator ::UnityEngine::EventSystems::IInitializePotentialDragHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IInitializePotentialDragHandler*>(this);
    }
    // Creating interface conversion operator: i_IInitializePotentialDragHandler
    inline ::UnityEngine::EventSystems::IInitializePotentialDragHandler* i_IInitializePotentialDragHandler() noexcept {
      return reinterpret_cast<::UnityEngine::EventSystems::IInitializePotentialDragHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IScrollHandler
    operator ::UnityEngine::EventSystems::IScrollHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IScrollHandler*>(this);
    }
    // Creating interface conversion operator: i_IScrollHandler
    inline ::UnityEngine::EventSystems::IScrollHandler* i_IScrollHandler() noexcept {
      return reinterpret_cast<::UnityEngine::EventSystems::IScrollHandler*>(this);
    }
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.RectTransform m_Content
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_m_Content();
    // Get instance field reference: private System.Boolean m_Horizontal
    [[deprecated("Use field access instead!")]] bool& dyn_m_Horizontal();
    // Get instance field reference: private System.Boolean m_Vertical
    [[deprecated("Use field access instead!")]] bool& dyn_m_Vertical();
    // Get instance field reference: private UnityEngine.UI.ScrollRect/UnityEngine.UI.MovementType m_MovementType
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::ScrollRect::MovementType& dyn_m_MovementType();
    // Get instance field reference: private System.Single m_Elasticity
    [[deprecated("Use field access instead!")]] float& dyn_m_Elasticity();
    // Get instance field reference: private System.Boolean m_Inertia
    [[deprecated("Use field access instead!")]] bool& dyn_m_Inertia();
    // Get instance field reference: private System.Single m_DecelerationRate
    [[deprecated("Use field access instead!")]] float& dyn_m_DecelerationRate();
    // Get instance field reference: private System.Single m_ScrollSensitivity
    [[deprecated("Use field access instead!")]] float& dyn_m_ScrollSensitivity();
    // Get instance field reference: private UnityEngine.RectTransform m_Viewport
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_m_Viewport();
    // Get instance field reference: private UnityEngine.UI.Scrollbar m_HorizontalScrollbar
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Scrollbar*& dyn_m_HorizontalScrollbar();
    // Get instance field reference: private UnityEngine.UI.Scrollbar m_VerticalScrollbar
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Scrollbar*& dyn_m_VerticalScrollbar();
    // Get instance field reference: private UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility m_HorizontalScrollbarVisibility
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::ScrollRect::ScrollbarVisibility& dyn_m_HorizontalScrollbarVisibility();
    // Get instance field reference: private UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility m_VerticalScrollbarVisibility
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::ScrollRect::ScrollbarVisibility& dyn_m_VerticalScrollbarVisibility();
    // Get instance field reference: private System.Single m_HorizontalScrollbarSpacing
    [[deprecated("Use field access instead!")]] float& dyn_m_HorizontalScrollbarSpacing();
    // Get instance field reference: private System.Single m_VerticalScrollbarSpacing
    [[deprecated("Use field access instead!")]] float& dyn_m_VerticalScrollbarSpacing();
    // Get instance field reference: private UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollRectEvent m_OnValueChanged
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::ScrollRect::ScrollRectEvent*& dyn_m_OnValueChanged();
    // Get instance field reference: private UnityEngine.Vector2 m_PointerStartLocalCursor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_PointerStartLocalCursor();
    // Get instance field reference: protected UnityEngine.Vector2 m_ContentStartPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_ContentStartPosition();
    // Get instance field reference: private UnityEngine.RectTransform m_ViewRect
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_m_ViewRect();
    // Get instance field reference: protected UnityEngine.Bounds m_ContentBounds
    [[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& dyn_m_ContentBounds();
    // Get instance field reference: private UnityEngine.Bounds m_ViewBounds
    [[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& dyn_m_ViewBounds();
    // Get instance field reference: private UnityEngine.Vector2 m_Velocity
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_Velocity();
    // Get instance field reference: private System.Boolean m_Dragging
    [[deprecated("Use field access instead!")]] bool& dyn_m_Dragging();
    // Get instance field reference: private System.Boolean m_Scrolling
    [[deprecated("Use field access instead!")]] bool& dyn_m_Scrolling();
    // Get instance field reference: private UnityEngine.Vector2 m_PrevPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_PrevPosition();
    // Get instance field reference: private UnityEngine.Bounds m_PrevContentBounds
    [[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& dyn_m_PrevContentBounds();
    // Get instance field reference: private UnityEngine.Bounds m_PrevViewBounds
    [[deprecated("Use field access instead!")]] ::UnityEngine::Bounds& dyn_m_PrevViewBounds();
    // Get instance field reference: private System.Boolean m_HasRebuiltLayout
    [[deprecated("Use field access instead!")]] bool& dyn_m_HasRebuiltLayout();
    // Get instance field reference: private System.Boolean m_HSliderExpand
    [[deprecated("Use field access instead!")]] bool& dyn_m_HSliderExpand();
    // Get instance field reference: private System.Boolean m_VSliderExpand
    [[deprecated("Use field access instead!")]] bool& dyn_m_VSliderExpand();
    // Get instance field reference: private System.Single m_HSliderHeight
    [[deprecated("Use field access instead!")]] float& dyn_m_HSliderHeight();
    // Get instance field reference: private System.Single m_VSliderWidth
    [[deprecated("Use field access instead!")]] float& dyn_m_VSliderWidth();
    // Get instance field reference: private UnityEngine.RectTransform m_Rect
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_m_Rect();
    // Get instance field reference: private UnityEngine.RectTransform m_HorizontalScrollbarRect
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_m_HorizontalScrollbarRect();
    // Get instance field reference: private UnityEngine.RectTransform m_VerticalScrollbarRect
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_m_VerticalScrollbarRect();
    // Get instance field reference: private UnityEngine.DrivenRectTransformTracker m_Tracker
    [[deprecated("Use field access instead!")]] ::UnityEngine::DrivenRectTransformTracker& dyn_m_Tracker();
    // Get instance field reference: private readonly UnityEngine.Vector3[] m_Corners
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& dyn_m_Corners();
    // public UnityEngine.RectTransform get_content()
    // Offset: 0x1F64A74
    ::UnityEngine::RectTransform* get_content();
    // public System.Void set_content(UnityEngine.RectTransform value)
    // Offset: 0x1F64A7C
    void set_content(::UnityEngine::RectTransform* value);
    // public System.Boolean get_horizontal()
    // Offset: 0x1F64A84
    bool get_horizontal();
    // public System.Void set_horizontal(System.Boolean value)
    // Offset: 0x1F64A8C
    void set_horizontal(bool value);
    // public System.Boolean get_vertical()
    // Offset: 0x1F64A98
    bool get_vertical();
    // public System.Void set_vertical(System.Boolean value)
    // Offset: 0x1F64AA0
    void set_vertical(bool value);
    // public UnityEngine.UI.ScrollRect/UnityEngine.UI.MovementType get_movementType()
    // Offset: 0x1F64AAC
    ::UnityEngine::UI::ScrollRect::MovementType get_movementType();
    // public System.Void set_movementType(UnityEngine.UI.ScrollRect/UnityEngine.UI.MovementType value)
    // Offset: 0x1F64AB4
    void set_movementType(::UnityEngine::UI::ScrollRect::MovementType value);
    // public System.Single get_elasticity()
    // Offset: 0x1F64ABC
    float get_elasticity();
    // public System.Void set_elasticity(System.Single value)
    // Offset: 0x1F64AC4
    void set_elasticity(float value);
    // public System.Boolean get_inertia()
    // Offset: 0x1F64ACC
    bool get_inertia();
    // public System.Void set_inertia(System.Boolean value)
    // Offset: 0x1F64AD4
    void set_inertia(bool value);
    // public System.Single get_decelerationRate()
    // Offset: 0x1F64AE0
    float get_decelerationRate();
    // public System.Void set_decelerationRate(System.Single value)
    // Offset: 0x1F64AE8
    void set_decelerationRate(float value);
    // public System.Single get_scrollSensitivity()
    // Offset: 0x1F64AF0
    float get_scrollSensitivity();
    // public System.Void set_scrollSensitivity(System.Single value)
    // Offset: 0x1F64AF8
    void set_scrollSensitivity(float value);
    // public UnityEngine.RectTransform get_viewport()
    // Offset: 0x1F64B00
    ::UnityEngine::RectTransform* get_viewport();
    // public System.Void set_viewport(UnityEngine.RectTransform value)
    // Offset: 0x1F64B08
    void set_viewport(::UnityEngine::RectTransform* value);
    // public UnityEngine.UI.Scrollbar get_horizontalScrollbar()
    // Offset: 0x1F64BCC
    ::UnityEngine::UI::Scrollbar* get_horizontalScrollbar();
    // public System.Void set_horizontalScrollbar(UnityEngine.UI.Scrollbar value)
    // Offset: 0x1F64BD4
    void set_horizontalScrollbar(::UnityEngine::UI::Scrollbar* value);
    // public UnityEngine.UI.Scrollbar get_verticalScrollbar()
    // Offset: 0x1F64D48
    ::UnityEngine::UI::Scrollbar* get_verticalScrollbar();
    // public System.Void set_verticalScrollbar(UnityEngine.UI.Scrollbar value)
    // Offset: 0x1F64D50
    void set_verticalScrollbar(::UnityEngine::UI::Scrollbar* value);
    // public UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility get_horizontalScrollbarVisibility()
    // Offset: 0x1F64EC4
    ::UnityEngine::UI::ScrollRect::ScrollbarVisibility get_horizontalScrollbarVisibility();
    // public System.Void set_horizontalScrollbarVisibility(UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility value)
    // Offset: 0x1F64ECC
    void set_horizontalScrollbarVisibility(::UnityEngine::UI::ScrollRect::ScrollbarVisibility value);
    // public UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility get_verticalScrollbarVisibility()
    // Offset: 0x1F64ED4
    ::UnityEngine::UI::ScrollRect::ScrollbarVisibility get_verticalScrollbarVisibility();
    // public System.Void set_verticalScrollbarVisibility(UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility value)
    // Offset: 0x1F64EDC
    void set_verticalScrollbarVisibility(::UnityEngine::UI::ScrollRect::ScrollbarVisibility value);
    // public System.Single get_horizontalScrollbarSpacing()
    // Offset: 0x1F64EE4
    float get_horizontalScrollbarSpacing();
    // public System.Void set_horizontalScrollbarSpacing(System.Single value)
    // Offset: 0x1F64EEC
    void set_horizontalScrollbarSpacing(float value);
    // public System.Single get_verticalScrollbarSpacing()
    // Offset: 0x1F64F88
    float get_verticalScrollbarSpacing();
    // public System.Void set_verticalScrollbarSpacing(System.Single value)
    // Offset: 0x1F64F90
    void set_verticalScrollbarSpacing(float value);
    // public UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollRectEvent get_onValueChanged()
    // Offset: 0x1F64F98
    ::UnityEngine::UI::ScrollRect::ScrollRectEvent* get_onValueChanged();
    // public System.Void set_onValueChanged(UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollRectEvent value)
    // Offset: 0x1F64FA0
    void set_onValueChanged(::UnityEngine::UI::ScrollRect::ScrollRectEvent* value);
    // protected UnityEngine.RectTransform get_viewRect()
    // Offset: 0x1F64FA8
    ::UnityEngine::RectTransform* get_viewRect();
    // public UnityEngine.Vector2 get_velocity()
    // Offset: 0x1F6509C
    ::UnityEngine::Vector2 get_velocity();
    // public System.Void set_velocity(UnityEngine.Vector2 value)
    // Offset: 0x1F650A4
    void set_velocity(::UnityEngine::Vector2 value);
    // private UnityEngine.RectTransform get_rectTransform()
    // Offset: 0x1F650AC
    ::UnityEngine::RectTransform* get_rectTransform();
    // public UnityEngine.Vector2 get_normalizedPosition()
    // Offset: 0x1F673E8
    ::UnityEngine::Vector2 get_normalizedPosition();
    // public System.Void set_normalizedPosition(UnityEngine.Vector2 value)
    // Offset: 0x1F677DC
    void set_normalizedPosition(::UnityEngine::Vector2 value);
    // public System.Single get_horizontalNormalizedPosition()
    // Offset: 0x1F67534
    float get_horizontalNormalizedPosition();
    // public System.Void set_horizontalNormalizedPosition(System.Single value)
    // Offset: 0x1F67830
    void set_horizontalNormalizedPosition(float value);
    // public System.Single get_verticalNormalizedPosition()
    // Offset: 0x1F6768C
    float get_verticalNormalizedPosition();
    // public System.Void set_verticalNormalizedPosition(System.Single value)
    // Offset: 0x1F67844
    void set_verticalNormalizedPosition(float value);
    // private System.Boolean get_hScrollingNeeded()
    // Offset: 0x1F67A9C
    bool get_hScrollingNeeded();
    // private System.Boolean get_vScrollingNeeded()
    // Offset: 0x1F67B04
    bool get_vScrollingNeeded();
    // public System.Single get_minWidth()
    // Offset: 0x1F67B74
    float get_minWidth();
    // public System.Single get_preferredWidth()
    // Offset: 0x1F67B7C
    float get_preferredWidth();
    // public System.Single get_flexibleWidth()
    // Offset: 0x1F67B84
    float get_flexibleWidth();
    // public System.Single get_minHeight()
    // Offset: 0x1F67B8C
    float get_minHeight();
    // public System.Single get_preferredHeight()
    // Offset: 0x1F67B94
    float get_preferredHeight();
    // public System.Single get_flexibleHeight()
    // Offset: 0x1F67B9C
    float get_flexibleHeight();
    // public System.Int32 get_layoutPriority()
    // Offset: 0x1F67BA4
    int get_layoutPriority();
    // private UnityEngine.Transform UnityEngine.UI.ICanvasElement.get_transform()
    // Offset: 0x1F68D30
    ::UnityEngine::Transform* UnityEngine_UI_ICanvasElement_get_transform();
    // public System.Void Rebuild(UnityEngine.UI.CanvasUpdate executing)
    // Offset: 0x1F65280
    void Rebuild(::UnityEngine::UI::CanvasUpdate executing);
    // public System.Void LayoutComplete()
    // Offset: 0x1F65F50
    void LayoutComplete();
    // public System.Void GraphicUpdateComplete()
    // Offset: 0x1F65F54
    void GraphicUpdateComplete();
    // private System.Void UpdateCachedData()
    // Offset: 0x1F65334
    void UpdateCachedData();
    // private System.Void EnsureLayoutHasRebuilt()
    // Offset: 0x1F66398
    void EnsureLayoutHasRebuilt();
    // public System.Void StopMovement()
    // Offset: 0x1F6641C
    void StopMovement();
    // public System.Void OnScroll(UnityEngine.EventSystems.PointerEventData data)
    // Offset: 0x1F66488
    void OnScroll(::UnityEngine::EventSystems::PointerEventData* data);
    // public System.Void OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1F66770
    void OnInitializePotentialDrag(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnBeginDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1F667F8
    void OnBeginDrag(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnEndDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1F66928
    void OnEndDrag(::UnityEngine::EventSystems::PointerEventData* eventData);
    // public System.Void OnDrag(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x1F6694C
    void OnDrag(::UnityEngine::EventSystems::PointerEventData* eventData);
    // protected System.Void SetContentAnchoredPosition(UnityEngine.Vector2 position)
    // Offset: 0x1F66C3C
    void SetContentAnchoredPosition(::UnityEngine::Vector2 position);
    // protected System.Void LateUpdate()
    // Offset: 0x1F66D54
    void LateUpdate();
    // protected System.Void UpdatePrevData()
    // Offset: 0x1F65E74
    void UpdatePrevData();
    // private System.Void UpdateScrollbars(UnityEngine.Vector2 offset)
    // Offset: 0x1F65C5C
    void UpdateScrollbars(::UnityEngine::Vector2 offset);
    // private System.Void SetHorizontalNormalizedPosition(System.Single value)
    // Offset: 0x1F67858
    void SetHorizontalNormalizedPosition(float value);
    // private System.Void SetVerticalNormalizedPosition(System.Single value)
    // Offset: 0x1F6786C
    void SetVerticalNormalizedPosition(float value);
    // protected System.Void SetNormalizedPosition(System.Single value, System.Int32 axis)
    // Offset: 0x1F67880
    void SetNormalizedPosition(float value, int axis);
    // static private System.Single RubberDelta(System.Single overStretching, System.Single viewSize)
    // Offset: 0x1F66B90
    static float RubberDelta(float overStretching, float viewSize);
    // public System.Void CalculateLayoutInputHorizontal()
    // Offset: 0x1F67B6C
    void CalculateLayoutInputHorizontal();
    // public System.Void CalculateLayoutInputVertical()
    // Offset: 0x1F67B70
    void CalculateLayoutInputVertical();
    // public System.Void SetLayoutHorizontal()
    // Offset: 0x1F67BAC
    void SetLayoutHorizontal();
    // public System.Void SetLayoutVertical()
    // Offset: 0x1F68270
    void SetLayoutVertical();
    // private System.Void UpdateScrollbarVisibility()
    // Offset: 0x1F67440
    void UpdateScrollbarVisibility();
    // static private System.Void UpdateOneScrollbarVisibility(System.Boolean xScrollingNeeded, System.Boolean xAxisEnabled, UnityEngine.UI.ScrollRect/UnityEngine.UI.ScrollbarVisibility scrollbarVisibility, UnityEngine.UI.Scrollbar scrollbar)
    // Offset: 0x1F686F4
    static void UpdateOneScrollbarVisibility(bool xScrollingNeeded, bool xAxisEnabled, ::UnityEngine::UI::ScrollRect::ScrollbarVisibility scrollbarVisibility, ::UnityEngine::UI::Scrollbar* scrollbar);
    // private System.Void UpdateScrollbarLayout()
    // Offset: 0x1F683CC
    void UpdateScrollbarLayout();
    // protected System.Void UpdateBounds()
    // Offset: 0x1F65700
    void UpdateBounds();
    // static System.Void AdjustBounds(ref UnityEngine.Bounds viewBounds, ref UnityEngine.Vector2 contentPivot, ref UnityEngine.Vector3 contentSize, ref UnityEngine.Vector3 contentPos)
    // Offset: 0x1F687F8
    static void AdjustBounds(ByRef<::UnityEngine::Bounds> viewBounds, ByRef<::UnityEngine::Vector2> contentPivot, ByRef<::UnityEngine::Vector3> contentSize, ByRef<::UnityEngine::Vector3> contentPos);
    // private UnityEngine.Bounds GetBounds()
    // Offset: 0x1F6817C
    ::UnityEngine::Bounds GetBounds();
    // static UnityEngine.Bounds InternalGetBounds(UnityEngine.Vector3[] corners, ref UnityEngine.Matrix4x4 viewWorldToLocalMatrix)
    // Offset: 0x1F68938
    static ::UnityEngine::Bounds InternalGetBounds(::ArrayW<::UnityEngine::Vector3> corners, ByRef<::UnityEngine::Matrix4x4> viewWorldToLocalMatrix);
    // private UnityEngine.Vector2 CalculateOffset(UnityEngine.Vector2 delta)
    // Offset: 0x1F66734
    ::UnityEngine::Vector2 CalculateOffset(::UnityEngine::Vector2 delta);
    // static UnityEngine.Vector2 InternalCalculateOffset(ref UnityEngine.Bounds viewBounds, ref UnityEngine.Bounds contentBounds, System.Boolean horizontal, System.Boolean vertical, UnityEngine.UI.ScrollRect/UnityEngine.UI.MovementType movementType, ref UnityEngine.Vector2 delta)
    // Offset: 0x1F68B3C
    static ::UnityEngine::Vector2 InternalCalculateOffset(ByRef<::UnityEngine::Bounds> viewBounds, ByRef<::UnityEngine::Bounds> contentBounds, bool horizontal, bool vertical, ::UnityEngine::UI::ScrollRect::MovementType movementType, ByRef<::UnityEngine::Vector2> delta);
    // protected System.Void SetDirty()
    // Offset: 0x1F64EF4
    void SetDirty();
    // protected System.Void SetDirtyCaching()
    // Offset: 0x1F64B10
    void SetDirtyCaching();
    // protected System.Void .ctor()
    // Offset: 0x1F65144
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ScrollRect* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UI::ScrollRect::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ScrollRect*, creationType>()));
    }
    // protected override System.Void OnEnable()
    // Offset: 0x1F65F58
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnEnable()
    void OnEnable();
    // protected override System.Void OnDisable()
    // Offset: 0x1F660F8
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnDisable()
    void OnDisable();
    // public override System.Boolean IsActive()
    // Offset: 0x1F66308
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Boolean UIBehaviour::IsActive()
    bool IsActive();
    // protected override System.Void OnRectTransformDimensionsChange()
    // Offset: 0x1F67A98
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::OnRectTransformDimensionsChange()
    void OnRectTransformDimensionsChange();
  }; // UnityEngine.UI.ScrollRect
  #pragma pack(pop)
  static check_size<sizeof(ScrollRect), 288 + sizeof(::ArrayW<::UnityEngine::Vector3>)> __UnityEngine_UI_ScrollRectSizeCheck;
  static_assert(sizeof(ScrollRect) == 0x128);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UI::ScrollRect::ScrollbarVisibility, "UnityEngine.UI", "ScrollRect/ScrollbarVisibility");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UI::ScrollRect::MovementType, "UnityEngine.UI", "ScrollRect/MovementType");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_content
// Il2CppName: get_content
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_content)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_content", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_content
// Il2CppName: set_content
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::RectTransform*)>(&UnityEngine::UI::ScrollRect::set_content)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_content", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_horizontal
// Il2CppName: get_horizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_horizontal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_horizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_horizontal
// Il2CppName: set_horizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(bool)>(&UnityEngine::UI::ScrollRect::set_horizontal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_horizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_vertical
// Il2CppName: get_vertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_vertical)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_vertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_vertical
// Il2CppName: set_vertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(bool)>(&UnityEngine::UI::ScrollRect::set_vertical)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_vertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_movementType
// Il2CppName: get_movementType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::ScrollRect::MovementType (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_movementType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_movementType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_movementType
// Il2CppName: set_movementType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::UI::ScrollRect::MovementType)>(&UnityEngine::UI::ScrollRect::set_movementType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "ScrollRect/MovementType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_movementType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_elasticity
// Il2CppName: get_elasticity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_elasticity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_elasticity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_elasticity
// Il2CppName: set_elasticity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(float)>(&UnityEngine::UI::ScrollRect::set_elasticity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_elasticity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_inertia
// Il2CppName: get_inertia
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_inertia)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_inertia", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_inertia
// Il2CppName: set_inertia
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(bool)>(&UnityEngine::UI::ScrollRect::set_inertia)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_inertia", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_decelerationRate
// Il2CppName: get_decelerationRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_decelerationRate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_decelerationRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_decelerationRate
// Il2CppName: set_decelerationRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(float)>(&UnityEngine::UI::ScrollRect::set_decelerationRate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_decelerationRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_scrollSensitivity
// Il2CppName: get_scrollSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_scrollSensitivity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_scrollSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_scrollSensitivity
// Il2CppName: set_scrollSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(float)>(&UnityEngine::UI::ScrollRect::set_scrollSensitivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_scrollSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_viewport
// Il2CppName: get_viewport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_viewport)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_viewport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_viewport
// Il2CppName: set_viewport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::RectTransform*)>(&UnityEngine::UI::ScrollRect::set_viewport)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_viewport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_horizontalScrollbar
// Il2CppName: get_horizontalScrollbar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::Scrollbar* (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_horizontalScrollbar)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_horizontalScrollbar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_horizontalScrollbar
// Il2CppName: set_horizontalScrollbar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::UI::Scrollbar*)>(&UnityEngine::UI::ScrollRect::set_horizontalScrollbar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Scrollbar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_horizontalScrollbar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_verticalScrollbar
// Il2CppName: get_verticalScrollbar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::Scrollbar* (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_verticalScrollbar)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_verticalScrollbar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_verticalScrollbar
// Il2CppName: set_verticalScrollbar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::UI::Scrollbar*)>(&UnityEngine::UI::ScrollRect::set_verticalScrollbar)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Scrollbar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_verticalScrollbar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_horizontalScrollbarVisibility
// Il2CppName: get_horizontalScrollbarVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::ScrollRect::ScrollbarVisibility (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_horizontalScrollbarVisibility)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_horizontalScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_horizontalScrollbarVisibility
// Il2CppName: set_horizontalScrollbarVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::UI::ScrollRect::ScrollbarVisibility)>(&UnityEngine::UI::ScrollRect::set_horizontalScrollbarVisibility)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "ScrollRect/ScrollbarVisibility")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_horizontalScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_verticalScrollbarVisibility
// Il2CppName: get_verticalScrollbarVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::ScrollRect::ScrollbarVisibility (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_verticalScrollbarVisibility)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_verticalScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_verticalScrollbarVisibility
// Il2CppName: set_verticalScrollbarVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::UI::ScrollRect::ScrollbarVisibility)>(&UnityEngine::UI::ScrollRect::set_verticalScrollbarVisibility)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "ScrollRect/ScrollbarVisibility")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_verticalScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_horizontalScrollbarSpacing
// Il2CppName: get_horizontalScrollbarSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_horizontalScrollbarSpacing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_horizontalScrollbarSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_horizontalScrollbarSpacing
// Il2CppName: set_horizontalScrollbarSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(float)>(&UnityEngine::UI::ScrollRect::set_horizontalScrollbarSpacing)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_horizontalScrollbarSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_verticalScrollbarSpacing
// Il2CppName: get_verticalScrollbarSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_verticalScrollbarSpacing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_verticalScrollbarSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_verticalScrollbarSpacing
// Il2CppName: set_verticalScrollbarSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(float)>(&UnityEngine::UI::ScrollRect::set_verticalScrollbarSpacing)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_verticalScrollbarSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_onValueChanged
// Il2CppName: get_onValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UI::ScrollRect::ScrollRectEvent* (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_onValueChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_onValueChanged
// Il2CppName: set_onValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::UI::ScrollRect::ScrollRectEvent*)>(&UnityEngine::UI::ScrollRect::set_onValueChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "ScrollRect/ScrollRectEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_viewRect
// Il2CppName: get_viewRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_viewRect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_viewRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_velocity
// Il2CppName: get_velocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_velocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_velocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_velocity
// Il2CppName: set_velocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::Vector2)>(&UnityEngine::UI::ScrollRect::set_velocity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_velocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_rectTransform
// Il2CppName: get_rectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::RectTransform* (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_rectTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_rectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_normalizedPosition
// Il2CppName: get_normalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_normalizedPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_normalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_normalizedPosition
// Il2CppName: set_normalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::Vector2)>(&UnityEngine::UI::ScrollRect::set_normalizedPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_normalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_horizontalNormalizedPosition
// Il2CppName: get_horizontalNormalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_horizontalNormalizedPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_horizontalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_horizontalNormalizedPosition
// Il2CppName: set_horizontalNormalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(float)>(&UnityEngine::UI::ScrollRect::set_horizontalNormalizedPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_horizontalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_verticalNormalizedPosition
// Il2CppName: get_verticalNormalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_verticalNormalizedPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_verticalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::set_verticalNormalizedPosition
// Il2CppName: set_verticalNormalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(float)>(&UnityEngine::UI::ScrollRect::set_verticalNormalizedPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "set_verticalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_hScrollingNeeded
// Il2CppName: get_hScrollingNeeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_hScrollingNeeded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_hScrollingNeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_vScrollingNeeded
// Il2CppName: get_vScrollingNeeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_vScrollingNeeded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_vScrollingNeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_minWidth
// Il2CppName: get_minWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_minWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_minWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_preferredWidth
// Il2CppName: get_preferredWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_preferredWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_preferredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_flexibleWidth
// Il2CppName: get_flexibleWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_flexibleWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_flexibleWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_minHeight
// Il2CppName: get_minHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_minHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_minHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_preferredHeight
// Il2CppName: get_preferredHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_preferredHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_preferredHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_flexibleHeight
// Il2CppName: get_flexibleHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_flexibleHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_flexibleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::get_layoutPriority
// Il2CppName: get_layoutPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::get_layoutPriority)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "get_layoutPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::UnityEngine_UI_ICanvasElement_get_transform
// Il2CppName: UnityEngine.UI.ICanvasElement.get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::UnityEngine_UI_ICanvasElement_get_transform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::Rebuild
// Il2CppName: Rebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::UI::CanvasUpdate)>(&UnityEngine::UI::ScrollRect::Rebuild)> {
  static const MethodInfo* get() {
    static auto* executing = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "CanvasUpdate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{executing});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::LayoutComplete
// Il2CppName: LayoutComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::LayoutComplete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "LayoutComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::GraphicUpdateComplete
// Il2CppName: GraphicUpdateComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::GraphicUpdateComplete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "GraphicUpdateComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::UpdateCachedData
// Il2CppName: UpdateCachedData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::UpdateCachedData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "UpdateCachedData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::EnsureLayoutHasRebuilt
// Il2CppName: EnsureLayoutHasRebuilt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::EnsureLayoutHasRebuilt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "EnsureLayoutHasRebuilt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::StopMovement
// Il2CppName: StopMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::StopMovement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "StopMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::OnScroll
// Il2CppName: OnScroll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::ScrollRect::OnScroll)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "OnScroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::OnInitializePotentialDrag
// Il2CppName: OnInitializePotentialDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::ScrollRect::OnInitializePotentialDrag)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "OnInitializePotentialDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::OnBeginDrag
// Il2CppName: OnBeginDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::ScrollRect::OnBeginDrag)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "OnBeginDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::OnEndDrag
// Il2CppName: OnEndDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::ScrollRect::OnEndDrag)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "OnEndDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::OnDrag
// Il2CppName: OnDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::EventSystems::PointerEventData*)>(&UnityEngine::UI::ScrollRect::OnDrag)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "OnDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::SetContentAnchoredPosition
// Il2CppName: SetContentAnchoredPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::Vector2)>(&UnityEngine::UI::ScrollRect::SetContentAnchoredPosition)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "SetContentAnchoredPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::UpdatePrevData
// Il2CppName: UpdatePrevData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::UpdatePrevData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "UpdatePrevData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::UpdateScrollbars
// Il2CppName: UpdateScrollbars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(::UnityEngine::Vector2)>(&UnityEngine::UI::ScrollRect::UpdateScrollbars)> {
  static const MethodInfo* get() {
    static auto* offset = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "UpdateScrollbars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{offset});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::SetHorizontalNormalizedPosition
// Il2CppName: SetHorizontalNormalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(float)>(&UnityEngine::UI::ScrollRect::SetHorizontalNormalizedPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "SetHorizontalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::SetVerticalNormalizedPosition
// Il2CppName: SetVerticalNormalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(float)>(&UnityEngine::UI::ScrollRect::SetVerticalNormalizedPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "SetVerticalNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::SetNormalizedPosition
// Il2CppName: SetNormalizedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)(float, int)>(&UnityEngine::UI::ScrollRect::SetNormalizedPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* axis = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "SetNormalizedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, axis});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::RubberDelta
// Il2CppName: RubberDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float, float)>(&UnityEngine::UI::ScrollRect::RubberDelta)> {
  static const MethodInfo* get() {
    static auto* overStretching = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* viewSize = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "RubberDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{overStretching, viewSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::CalculateLayoutInputHorizontal
// Il2CppName: CalculateLayoutInputHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::CalculateLayoutInputHorizontal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::CalculateLayoutInputVertical
// Il2CppName: CalculateLayoutInputVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::CalculateLayoutInputVertical)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "CalculateLayoutInputVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::SetLayoutHorizontal
// Il2CppName: SetLayoutHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::SetLayoutHorizontal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "SetLayoutHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::SetLayoutVertical
// Il2CppName: SetLayoutVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::SetLayoutVertical)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "SetLayoutVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::UpdateScrollbarVisibility
// Il2CppName: UpdateScrollbarVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::UpdateScrollbarVisibility)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "UpdateScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::UpdateOneScrollbarVisibility
// Il2CppName: UpdateOneScrollbarVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool, bool, ::UnityEngine::UI::ScrollRect::ScrollbarVisibility, ::UnityEngine::UI::Scrollbar*)>(&UnityEngine::UI::ScrollRect::UpdateOneScrollbarVisibility)> {
  static const MethodInfo* get() {
    static auto* xScrollingNeeded = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* xAxisEnabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* scrollbarVisibility = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "ScrollRect/ScrollbarVisibility")->byval_arg;
    static auto* scrollbar = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Scrollbar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "UpdateOneScrollbarVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xScrollingNeeded, xAxisEnabled, scrollbarVisibility, scrollbar});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::UpdateScrollbarLayout
// Il2CppName: UpdateScrollbarLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::UpdateScrollbarLayout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "UpdateScrollbarLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::UpdateBounds
// Il2CppName: UpdateBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::UpdateBounds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "UpdateBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::AdjustBounds
// Il2CppName: AdjustBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Bounds>, ByRef<::UnityEngine::Vector2>, ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::UI::ScrollRect::AdjustBounds)> {
  static const MethodInfo* get() {
    static auto* viewBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->this_arg;
    static auto* contentPivot = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    static auto* contentSize = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* contentPos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "AdjustBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{viewBounds, contentPivot, contentSize, contentPos});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::GetBounds
// Il2CppName: GetBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Bounds (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::GetBounds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "GetBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::InternalGetBounds
// Il2CppName: InternalGetBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Bounds (*)(::ArrayW<::UnityEngine::Vector3>, ByRef<::UnityEngine::Matrix4x4>)>(&UnityEngine::UI::ScrollRect::InternalGetBounds)> {
  static const MethodInfo* get() {
    static auto* corners = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* viewWorldToLocalMatrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "InternalGetBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{corners, viewWorldToLocalMatrix});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::CalculateOffset
// Il2CppName: CalculateOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (UnityEngine::UI::ScrollRect::*)(::UnityEngine::Vector2)>(&UnityEngine::UI::ScrollRect::CalculateOffset)> {
  static const MethodInfo* get() {
    static auto* delta = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "CalculateOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{delta});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::InternalCalculateOffset
// Il2CppName: InternalCalculateOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(ByRef<::UnityEngine::Bounds>, ByRef<::UnityEngine::Bounds>, bool, bool, ::UnityEngine::UI::ScrollRect::MovementType, ByRef<::UnityEngine::Vector2>)>(&UnityEngine::UI::ScrollRect::InternalCalculateOffset)> {
  static const MethodInfo* get() {
    static auto* viewBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->this_arg;
    static auto* contentBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->this_arg;
    static auto* horizontal = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* vertical = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* movementType = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "ScrollRect/MovementType")->byval_arg;
    static auto* delta = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "InternalCalculateOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{viewBounds, contentBounds, horizontal, vertical, movementType, delta});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::SetDirty
// Il2CppName: SetDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::SetDirty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "SetDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::SetDirtyCaching
// Il2CppName: SetDirtyCaching
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::SetDirtyCaching)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "SetDirtyCaching", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::IsActive
// Il2CppName: IsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::IsActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "IsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UI::ScrollRect::OnRectTransformDimensionsChange
// Il2CppName: OnRectTransformDimensionsChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UI::ScrollRect::*)()>(&UnityEngine::UI::ScrollRect::OnRectTransformDimensionsChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UI::ScrollRect*), "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
