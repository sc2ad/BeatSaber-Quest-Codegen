// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.TextGenerationSettings
#include "UnityEngine/TextGenerationSettings.hpp"
// Including type: UnityEngine.TextGenerationError
#include "UnityEngine/TextGenerationError.hpp"
// Including type: UnityEngine.UIVertex
#include "UnityEngine/UIVertex.hpp"
// Including type: UnityEngine.UICharInfo
#include "UnityEngine/UICharInfo.hpp"
// Including type: UnityEngine.UILineInfo
#include "UnityEngine/UILineInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rect
  struct Rect;
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Font
  class Font;
  // Skipping declaration: Color because it is already included!
  // Skipping declaration: FontStyle because it is already included!
  // Skipping declaration: TextAnchor because it is already included!
  // Skipping declaration: VerticalWrapMode because it is already included!
  // Skipping declaration: HorizontalWrapMode because it is already included!
  // Skipping declaration: Vector2 because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: TextGenerator
  class TextGenerator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::TextGenerator);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextGenerator*, "UnityEngine", "TextGenerator");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0xA3
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.TextGenerator
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 10A62BC
  // [UsedByNativeCodeAttribute] Offset: 10A62BC
  class TextGenerator : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // System.IntPtr m_Ptr
    // Size: 0x8
    // Offset: 0x10
    ::System::IntPtr m_Ptr;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // private System.String m_LastString
    // Size: 0x8
    // Offset: 0x18
    ::StringW m_LastString;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.TextGenerationSettings m_LastSettings
    // Size: 0x59
    // Offset: 0x20
    ::UnityEngine::TextGenerationSettings m_LastSettings;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextGenerationSettings) == 0x59);
    // Padding between fields: m_LastSettings and: m_HasGenerated
    char __padding2[0x7] = {};
    // private System.Boolean m_HasGenerated
    // Size: 0x1
    // Offset: 0x80
    bool m_HasGenerated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_HasGenerated and: m_LastValid
    char __padding3[0x3] = {};
    // private UnityEngine.TextGenerationError m_LastValid
    // Size: 0x4
    // Offset: 0x84
    ::UnityEngine::TextGenerationError m_LastValid;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextGenerationError) == 0x4);
    // private readonly System.Collections.Generic.List`1<UnityEngine.UIVertex> m_Verts
    // Size: 0x8
    // Offset: 0x88
    ::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* m_Verts;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.UICharInfo> m_Characters
    // Size: 0x8
    // Offset: 0x90
    ::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>* m_Characters;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.UILineInfo> m_Lines
    // Size: 0x8
    // Offset: 0x98
    ::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>* m_Lines;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>*) == 0x8);
    // private System.Boolean m_CachedVerts
    // Size: 0x1
    // Offset: 0xA0
    bool m_CachedVerts;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_CachedCharacters
    // Size: 0x1
    // Offset: 0xA1
    bool m_CachedCharacters;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_CachedLines
    // Size: 0x1
    // Offset: 0xA2
    bool m_CachedLines;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Creating interface conversion operator: i_IDisposable
    inline ::System::IDisposable* i_IDisposable() noexcept {
      return reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: System.IntPtr m_Ptr
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_m_Ptr();
    // Get instance field reference: private System.String m_LastString
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_LastString();
    // Get instance field reference: private UnityEngine.TextGenerationSettings m_LastSettings
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextGenerationSettings& dyn_m_LastSettings();
    // Get instance field reference: private System.Boolean m_HasGenerated
    [[deprecated("Use field access instead!")]] bool& dyn_m_HasGenerated();
    // Get instance field reference: private UnityEngine.TextGenerationError m_LastValid
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextGenerationError& dyn_m_LastValid();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.UIVertex> m_Verts
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIVertex>*& dyn_m_Verts();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.UICharInfo> m_Characters
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>*& dyn_m_Characters();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.UILineInfo> m_Lines
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>*& dyn_m_Lines();
    // Get instance field reference: private System.Boolean m_CachedVerts
    [[deprecated("Use field access instead!")]] bool& dyn_m_CachedVerts();
    // Get instance field reference: private System.Boolean m_CachedCharacters
    [[deprecated("Use field access instead!")]] bool& dyn_m_CachedCharacters();
    // Get instance field reference: private System.Boolean m_CachedLines
    [[deprecated("Use field access instead!")]] bool& dyn_m_CachedLines();
    // public System.Int32 get_characterCountVisible()
    // Offset: 0x2BA2D60
    int get_characterCountVisible();
    // public System.Collections.Generic.IList`1<UnityEngine.UIVertex> get_verts()
    // Offset: 0x2BA3960
    ::System::Collections::Generic::IList_1<::UnityEngine::UIVertex>* get_verts();
    // public System.Collections.Generic.IList`1<UnityEngine.UICharInfo> get_characters()
    // Offset: 0x2BA39C8
    ::System::Collections::Generic::IList_1<::UnityEngine::UICharInfo>* get_characters();
    // public System.Collections.Generic.IList`1<UnityEngine.UILineInfo> get_lines()
    // Offset: 0x2BA3A30
    ::System::Collections::Generic::IList_1<::UnityEngine::UILineInfo>* get_lines();
    // public UnityEngine.Rect get_rectExtents()
    // Offset: 0x2BA3364
    ::UnityEngine::Rect get_rectExtents();
    // public System.Int32 get_characterCount()
    // Offset: 0x2BA2DA8
    int get_characterCount();
    // public System.Int32 get_lineCount()
    // Offset: 0x2BA3AE8
    int get_lineCount();
    // public System.Void .ctor()
    // Offset: 0x2BA2A60
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextGenerator* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextGenerator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextGenerator*, creationType>()));
    }
    // public System.Void .ctor(System.Int32 initialCapacity)
    // Offset: 0x2BA2A68
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextGenerator* New_ctor(int initialCapacity) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextGenerator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextGenerator*, creationType>(initialCapacity)));
    }
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0x2BA2C94
    void System_IDisposable_Dispose();
    // private UnityEngine.TextGenerationSettings ValidatedSettings(UnityEngine.TextGenerationSettings settings)
    // Offset: 0x2BA2DE8
    ::UnityEngine::TextGenerationSettings ValidatedSettings(::UnityEngine::TextGenerationSettings settings);
    // public System.Void Invalidate()
    // Offset: 0x2BA30B0
    void Invalidate();
    // public System.Void GetCharacters(System.Collections.Generic.List`1<UnityEngine.UICharInfo> characters)
    // Offset: 0x2BA30B8
    void GetCharacters(::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>* characters);
    // public System.Void GetLines(System.Collections.Generic.List`1<UnityEngine.UILineInfo> lines)
    // Offset: 0x2BA3158
    void GetLines(::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>* lines);
    // public System.Void GetVertices(System.Collections.Generic.List`1<UnityEngine.UIVertex> vertices)
    // Offset: 0x2BA31F8
    void GetVertices(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>* vertices);
    // public System.Single GetPreferredWidth(System.String str, UnityEngine.TextGenerationSettings settings)
    // Offset: 0x2BA3298
    float GetPreferredWidth(::StringW str, ::UnityEngine::TextGenerationSettings settings);
    // public System.Single GetPreferredHeight(System.String str, UnityEngine.TextGenerationSettings settings)
    // Offset: 0x2BA33C0
    float GetPreferredHeight(::StringW str, ::UnityEngine::TextGenerationSettings settings);
    // public System.Boolean PopulateWithErrors(System.String str, UnityEngine.TextGenerationSettings settings, UnityEngine.GameObject context)
    // Offset: 0x2BA3434
    bool PopulateWithErrors(::StringW str, ::UnityEngine::TextGenerationSettings settings, ::UnityEngine::GameObject* context);
    // public System.Boolean Populate(System.String str, UnityEngine.TextGenerationSettings settings)
    // Offset: 0x2BA3310
    bool Populate(::StringW str, ::UnityEngine::TextGenerationSettings settings);
    // private UnityEngine.TextGenerationError PopulateWithError(System.String str, UnityEngine.TextGenerationSettings settings)
    // Offset: 0x2BA35F0
    ::UnityEngine::TextGenerationError PopulateWithError(::StringW str, ::UnityEngine::TextGenerationSettings settings);
    // private UnityEngine.TextGenerationError PopulateAlways(System.String str, UnityEngine.TextGenerationSettings settings)
    // Offset: 0x2BA368C
    ::UnityEngine::TextGenerationError PopulateAlways(::StringW str, ::UnityEngine::TextGenerationSettings settings);
    // static private System.IntPtr Internal_Create()
    // Offset: 0x2BA2B70
    static ::System::IntPtr Internal_Create();
    // static private System.Void Internal_Destroy(System.IntPtr ptr)
    // Offset: 0x2BA2D20
    static void Internal_Destroy(::System::IntPtr ptr);
    // System.Boolean Populate_Internal(System.String str, UnityEngine.Font font, UnityEngine.Color color, System.Int32 fontSize, System.Single scaleFactor, System.Single lineSpacing, UnityEngine.FontStyle style, System.Boolean richText, System.Boolean resizeTextForBestFit, System.Int32 resizeTextMinSize, System.Int32 resizeTextMaxSize, System.Int32 verticalOverFlow, System.Int32 horizontalOverflow, System.Boolean updateBounds, UnityEngine.TextAnchor anchor, System.Single extentsX, System.Single extentsY, System.Single pivotX, System.Single pivotY, System.Boolean generateOutOfBounds, System.Boolean alignByGeometry, out System.UInt32 error)
    // Offset: 0x2BA3B28
    bool Populate_Internal(::StringW str, ::UnityEngine::Font* font, ::UnityEngine::Color color, int fontSize, float scaleFactor, float lineSpacing, ::UnityEngine::FontStyle style, bool richText, bool resizeTextForBestFit, int resizeTextMinSize, int resizeTextMaxSize, int verticalOverFlow, int horizontalOverflow, bool updateBounds, ::UnityEngine::TextAnchor anchor, float extentsX, float extentsY, float pivotX, float pivotY, bool generateOutOfBounds, bool alignByGeometry, ByRef<uint> error);
    // System.Boolean Populate_Internal(System.String str, UnityEngine.Font font, UnityEngine.Color color, System.Int32 fontSize, System.Single scaleFactor, System.Single lineSpacing, UnityEngine.FontStyle style, System.Boolean richText, System.Boolean resizeTextForBestFit, System.Int32 resizeTextMinSize, System.Int32 resizeTextMaxSize, UnityEngine.VerticalWrapMode verticalOverFlow, UnityEngine.HorizontalWrapMode horizontalOverflow, System.Boolean updateBounds, UnityEngine.TextAnchor anchor, UnityEngine.Vector2 extents, UnityEngine.Vector2 pivot, System.Boolean generateOutOfBounds, System.Boolean alignByGeometry, out UnityEngine.TextGenerationError error)
    // Offset: 0x2BA37A8
    bool Populate_Internal(::StringW str, ::UnityEngine::Font* font, ::UnityEngine::Color color, int fontSize, float scaleFactor, float lineSpacing, ::UnityEngine::FontStyle style, bool richText, bool resizeTextForBestFit, int resizeTextMinSize, int resizeTextMaxSize, ::UnityEngine::VerticalWrapMode verticalOverFlow, ::UnityEngine::HorizontalWrapMode horizontalOverflow, bool updateBounds, ::UnityEngine::TextAnchor anchor, ::UnityEngine::Vector2 extents, ::UnityEngine::Vector2 pivot, bool generateOutOfBounds, bool alignByGeometry, ByRef<::UnityEngine::TextGenerationError> error);
    // private System.Void GetVerticesInternal(System.Object vertices)
    // Offset: 0x2BA3248
    void GetVerticesInternal(::Il2CppObject* vertices);
    // private System.Void GetCharactersInternal(System.Object characters)
    // Offset: 0x2BA3108
    void GetCharactersInternal(::Il2CppObject* characters);
    // private System.Void GetLinesInternal(System.Object lines)
    // Offset: 0x2BA31A8
    void GetLinesInternal(::Il2CppObject* lines);
    // private System.Void get_rectExtents_Injected(out UnityEngine.Rect ret)
    // Offset: 0x2BA3A98
    void get_rectExtents_Injected(ByRef<::UnityEngine::Rect> ret);
    // private System.Boolean Populate_Internal_Injected(System.String str, UnityEngine.Font font, ref UnityEngine.Color color, System.Int32 fontSize, System.Single scaleFactor, System.Single lineSpacing, UnityEngine.FontStyle style, System.Boolean richText, System.Boolean resizeTextForBestFit, System.Int32 resizeTextMinSize, System.Int32 resizeTextMaxSize, System.Int32 verticalOverFlow, System.Int32 horizontalOverflow, System.Boolean updateBounds, UnityEngine.TextAnchor anchor, System.Single extentsX, System.Single extentsY, System.Single pivotX, System.Single pivotY, System.Boolean generateOutOfBounds, System.Boolean alignByGeometry, out System.UInt32 error)
    // Offset: 0x2BA3C78
    bool Populate_Internal_Injected(::StringW str, ::UnityEngine::Font* font, ByRef<::UnityEngine::Color> color, int fontSize, float scaleFactor, float lineSpacing, ::UnityEngine::FontStyle style, bool richText, bool resizeTextForBestFit, int resizeTextMinSize, int resizeTextMaxSize, int verticalOverFlow, int horizontalOverflow, bool updateBounds, ::UnityEngine::TextAnchor anchor, float extentsX, float extentsY, float pivotX, float pivotY, bool generateOutOfBounds, bool alignByGeometry, ByRef<uint> error);
    // protected override System.Void Finalize()
    // Offset: 0x2BA2BA4
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // UnityEngine.TextGenerator
  #pragma pack(pop)
  static check_size<sizeof(TextGenerator), 162 + sizeof(bool)> __UnityEngine_TextGeneratorSizeCheck;
  static_assert(sizeof(TextGenerator) == 0xA3);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TextGenerator::get_characterCountVisible
// Il2CppName: get_characterCountVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextGenerator::*)()>(&UnityEngine::TextGenerator::get_characterCountVisible)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "get_characterCountVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::get_verts
// Il2CppName: get_verts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::UnityEngine::UIVertex>* (UnityEngine::TextGenerator::*)()>(&UnityEngine::TextGenerator::get_verts)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "get_verts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::get_characters
// Il2CppName: get_characters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::UnityEngine::UICharInfo>* (UnityEngine::TextGenerator::*)()>(&UnityEngine::TextGenerator::get_characters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "get_characters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::get_lines
// Il2CppName: get_lines
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::UnityEngine::UILineInfo>* (UnityEngine::TextGenerator::*)()>(&UnityEngine::TextGenerator::get_lines)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "get_lines", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::get_rectExtents
// Il2CppName: get_rectExtents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::TextGenerator::*)()>(&UnityEngine::TextGenerator::get_rectExtents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "get_rectExtents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::get_characterCount
// Il2CppName: get_characterCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextGenerator::*)()>(&UnityEngine::TextGenerator::get_characterCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "get_characterCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::get_lineCount
// Il2CppName: get_lineCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextGenerator::*)()>(&UnityEngine::TextGenerator::get_lineCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "get_lineCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::TextGenerator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::TextGenerator::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextGenerator::*)()>(&UnityEngine::TextGenerator::System_IDisposable_Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::ValidatedSettings
// Il2CppName: ValidatedSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextGenerationSettings (UnityEngine::TextGenerator::*)(::UnityEngine::TextGenerationSettings)>(&UnityEngine::TextGenerator::ValidatedSettings)> {
  static const MethodInfo* get() {
    static auto* settings = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextGenerationSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "ValidatedSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{settings});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::Invalidate
// Il2CppName: Invalidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextGenerator::*)()>(&UnityEngine::TextGenerator::Invalidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "Invalidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::GetCharacters
// Il2CppName: GetCharacters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextGenerator::*)(::System::Collections::Generic::List_1<::UnityEngine::UICharInfo>*)>(&UnityEngine::TextGenerator::GetCharacters)> {
  static const MethodInfo* get() {
    static auto* characters = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "UICharInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "GetCharacters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{characters});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::GetLines
// Il2CppName: GetLines
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextGenerator::*)(::System::Collections::Generic::List_1<::UnityEngine::UILineInfo>*)>(&UnityEngine::TextGenerator::GetLines)> {
  static const MethodInfo* get() {
    static auto* lines = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "UILineInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "GetLines", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lines});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::GetVertices
// Il2CppName: GetVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextGenerator::*)(::System::Collections::Generic::List_1<::UnityEngine::UIVertex>*)>(&UnityEngine::TextGenerator::GetVertices)> {
  static const MethodInfo* get() {
    static auto* vertices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "UIVertex")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "GetVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertices});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::GetPreferredWidth
// Il2CppName: GetPreferredWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TextGenerator::*)(::StringW, ::UnityEngine::TextGenerationSettings)>(&UnityEngine::TextGenerator::GetPreferredWidth)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextGenerationSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "GetPreferredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, settings});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::GetPreferredHeight
// Il2CppName: GetPreferredHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TextGenerator::*)(::StringW, ::UnityEngine::TextGenerationSettings)>(&UnityEngine::TextGenerator::GetPreferredHeight)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextGenerationSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "GetPreferredHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, settings});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::PopulateWithErrors
// Il2CppName: PopulateWithErrors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextGenerator::*)(::StringW, ::UnityEngine::TextGenerationSettings, ::UnityEngine::GameObject*)>(&UnityEngine::TextGenerator::PopulateWithErrors)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextGenerationSettings")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "PopulateWithErrors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, settings, context});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::Populate
// Il2CppName: Populate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextGenerator::*)(::StringW, ::UnityEngine::TextGenerationSettings)>(&UnityEngine::TextGenerator::Populate)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextGenerationSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "Populate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, settings});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::PopulateWithError
// Il2CppName: PopulateWithError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextGenerationError (UnityEngine::TextGenerator::*)(::StringW, ::UnityEngine::TextGenerationSettings)>(&UnityEngine::TextGenerator::PopulateWithError)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextGenerationSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "PopulateWithError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, settings});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::PopulateAlways
// Il2CppName: PopulateAlways
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextGenerationError (UnityEngine::TextGenerator::*)(::StringW, ::UnityEngine::TextGenerationSettings)>(&UnityEngine::TextGenerator::PopulateAlways)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextGenerationSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "PopulateAlways", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, settings});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::Internal_Create
// Il2CppName: Internal_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&UnityEngine::TextGenerator::Internal_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "Internal_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::Internal_Destroy
// Il2CppName: Internal_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&UnityEngine::TextGenerator::Internal_Destroy)> {
  static const MethodInfo* get() {
    static auto* ptr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "Internal_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::Populate_Internal
// Il2CppName: Populate_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextGenerator::*)(::StringW, ::UnityEngine::Font*, ::UnityEngine::Color, int, float, float, ::UnityEngine::FontStyle, bool, bool, int, int, int, int, bool, ::UnityEngine::TextAnchor, float, float, float, float, bool, bool, ByRef<uint>)>(&UnityEngine::TextGenerator::Populate_Internal)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* font = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* fontSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* scaleFactor = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* lineSpacing = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("UnityEngine", "FontStyle")->byval_arg;
    static auto* richText = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* resizeTextForBestFit = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* resizeTextMinSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* resizeTextMaxSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* verticalOverFlow = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* horizontalOverflow = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* updateBounds = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* anchor = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextAnchor")->byval_arg;
    static auto* extentsX = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* extentsY = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* pivotX = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* pivotY = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* generateOutOfBounds = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* alignByGeometry = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "Populate_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, font, color, fontSize, scaleFactor, lineSpacing, style, richText, resizeTextForBestFit, resizeTextMinSize, resizeTextMaxSize, verticalOverFlow, horizontalOverflow, updateBounds, anchor, extentsX, extentsY, pivotX, pivotY, generateOutOfBounds, alignByGeometry, error});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::Populate_Internal
// Il2CppName: Populate_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextGenerator::*)(::StringW, ::UnityEngine::Font*, ::UnityEngine::Color, int, float, float, ::UnityEngine::FontStyle, bool, bool, int, int, ::UnityEngine::VerticalWrapMode, ::UnityEngine::HorizontalWrapMode, bool, ::UnityEngine::TextAnchor, ::UnityEngine::Vector2, ::UnityEngine::Vector2, bool, bool, ByRef<::UnityEngine::TextGenerationError>)>(&UnityEngine::TextGenerator::Populate_Internal)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* font = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* fontSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* scaleFactor = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* lineSpacing = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("UnityEngine", "FontStyle")->byval_arg;
    static auto* richText = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* resizeTextForBestFit = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* resizeTextMinSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* resizeTextMaxSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* verticalOverFlow = &::il2cpp_utils::GetClassFromName("UnityEngine", "VerticalWrapMode")->byval_arg;
    static auto* horizontalOverflow = &::il2cpp_utils::GetClassFromName("UnityEngine", "HorizontalWrapMode")->byval_arg;
    static auto* updateBounds = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* anchor = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextAnchor")->byval_arg;
    static auto* extents = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* pivot = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* generateOutOfBounds = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* alignByGeometry = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextGenerationError")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "Populate_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, font, color, fontSize, scaleFactor, lineSpacing, style, richText, resizeTextForBestFit, resizeTextMinSize, resizeTextMaxSize, verticalOverFlow, horizontalOverflow, updateBounds, anchor, extents, pivot, generateOutOfBounds, alignByGeometry, error});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::GetVerticesInternal
// Il2CppName: GetVerticesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextGenerator::*)(::Il2CppObject*)>(&UnityEngine::TextGenerator::GetVerticesInternal)> {
  static const MethodInfo* get() {
    static auto* vertices = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "GetVerticesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertices});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::GetCharactersInternal
// Il2CppName: GetCharactersInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextGenerator::*)(::Il2CppObject*)>(&UnityEngine::TextGenerator::GetCharactersInternal)> {
  static const MethodInfo* get() {
    static auto* characters = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "GetCharactersInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{characters});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::GetLinesInternal
// Il2CppName: GetLinesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextGenerator::*)(::Il2CppObject*)>(&UnityEngine::TextGenerator::GetLinesInternal)> {
  static const MethodInfo* get() {
    static auto* lines = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "GetLinesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lines});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::get_rectExtents_Injected
// Il2CppName: get_rectExtents_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextGenerator::*)(ByRef<::UnityEngine::Rect>)>(&UnityEngine::TextGenerator::get_rectExtents_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "get_rectExtents_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::Populate_Internal_Injected
// Il2CppName: Populate_Internal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextGenerator::*)(::StringW, ::UnityEngine::Font*, ByRef<::UnityEngine::Color>, int, float, float, ::UnityEngine::FontStyle, bool, bool, int, int, int, int, bool, ::UnityEngine::TextAnchor, float, float, float, float, bool, bool, ByRef<uint>)>(&UnityEngine::TextGenerator::Populate_Internal_Injected)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* font = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->this_arg;
    static auto* fontSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* scaleFactor = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* lineSpacing = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("UnityEngine", "FontStyle")->byval_arg;
    static auto* richText = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* resizeTextForBestFit = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* resizeTextMinSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* resizeTextMaxSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* verticalOverFlow = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* horizontalOverflow = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* updateBounds = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* anchor = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextAnchor")->byval_arg;
    static auto* extentsX = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* extentsY = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* pivotX = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* pivotY = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* generateOutOfBounds = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* alignByGeometry = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "Populate_Internal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, font, color, fontSize, scaleFactor, lineSpacing, style, richText, resizeTextForBestFit, resizeTextMinSize, resizeTextMaxSize, verticalOverFlow, horizontalOverflow, updateBounds, anchor, extentsX, extentsY, pivotX, pivotY, generateOutOfBounds, alignByGeometry, error});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextGenerator::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextGenerator::*)()>(&UnityEngine::TextGenerator::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextGenerator*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
