// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.AudioBehaviour
#include "UnityEngine/AudioBehaviour.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: FFTWindow
  struct FFTWindow;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AudioListener
  class AudioListener;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::AudioListener);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::AudioListener*, "UnityEngine", "AudioListener");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.AudioListener
  // [TokenAttribute] Offset: FFFFFFFF
  // [StaticAccessorAttribute] Offset: 10BB18C
  // [RequireComponent] Offset: 10BB18C
  class AudioListener : public ::UnityEngine::AudioBehaviour {
    public:
    // static public System.Boolean get_pause()
    // Offset: 0x2B93A50
    static bool get_pause();
    // static public System.Void set_pause(System.Boolean value)
    // Offset: 0x2B93A84
    static void set_pause(bool value);
    // static private System.Void GetOutputDataHelper(out System.Single[] samples, System.Int32 channel)
    // Offset: 0x2B939A8
    static void GetOutputDataHelper(ByRef<::ArrayW<float>> samples, int channel);
    // static private System.Void GetSpectrumDataHelper(out System.Single[] samples, System.Int32 channel, UnityEngine.FFTWindow window)
    // Offset: 0x2B939F8
    static void GetSpectrumDataHelper(ByRef<::ArrayW<float>> samples, int channel, ::UnityEngine::FFTWindow window);
    // static public System.Void GetOutputData(System.Single[] samples, System.Int32 channel)
    // Offset: 0x2B93AC4
    static void GetOutputData(::ArrayW<float> samples, int channel);
    // static public System.Void GetSpectrumData(System.Single[] samples, System.Int32 channel, UnityEngine.FFTWindow window)
    // Offset: 0x2B93B14
    static void GetSpectrumData(::ArrayW<float> samples, int channel, ::UnityEngine::FFTWindow window);
  }; // UnityEngine.AudioListener
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::AudioListener::get_pause
// Il2CppName: get_pause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::AudioListener::get_pause)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "get_pause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::set_pause
// Il2CppName: set_pause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&UnityEngine::AudioListener::set_pause)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "set_pause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::GetOutputDataHelper
// Il2CppName: GetOutputDataHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::ArrayW<float>>, int)>(&UnityEngine::AudioListener::GetOutputDataHelper)> {
  static const MethodInfo* get() {
    static auto* samples = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->this_arg;
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "GetOutputDataHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{samples, channel});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::GetSpectrumDataHelper
// Il2CppName: GetSpectrumDataHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::ArrayW<float>>, int, ::UnityEngine::FFTWindow)>(&UnityEngine::AudioListener::GetSpectrumDataHelper)> {
  static const MethodInfo* get() {
    static auto* samples = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->this_arg;
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* window = &::il2cpp_utils::GetClassFromName("UnityEngine", "FFTWindow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "GetSpectrumDataHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{samples, channel, window});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::GetOutputData
// Il2CppName: GetOutputData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<float>, int)>(&UnityEngine::AudioListener::GetOutputData)> {
  static const MethodInfo* get() {
    static auto* samples = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "GetOutputData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{samples, channel});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::GetSpectrumData
// Il2CppName: GetSpectrumData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<float>, int, ::UnityEngine::FFTWindow)>(&UnityEngine::AudioListener::GetSpectrumData)> {
  static const MethodInfo* get() {
    static auto* samples = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* window = &::il2cpp_utils::GetClassFromName("UnityEngine", "FFTWindow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "GetSpectrumData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{samples, channel, window});
  }
};
