// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AssetBundleCreateRequest
  class AssetBundleCreateRequest;
  // Forward declaring type: AssetBundleRequest
  class AssetBundleRequest;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AssetBundle
  class AssetBundle;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::AssetBundle);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::AssetBundle*, "UnityEngine", "AssetBundle");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.AssetBundle
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 10B9888
  // [NativeHeaderAttribute] Offset: 10B9888
  // [NativeHeaderAttribute] Offset: 10B9888
  // [NativeHeaderAttribute] Offset: 10B9888
  // [ExcludeFromPresetAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 10B9888
  // [NativeHeaderAttribute] Offset: 10B9888
  // [NativeHeaderAttribute] Offset: 10B9888
  // [NativeHeaderAttribute] Offset: 10B9888
  // [NativeHeaderAttribute] Offset: 10B9888
  // [NativeHeaderAttribute] Offset: 10B9888
  // [NativeHeaderAttribute] Offset: 10B9888
  class AssetBundle : public ::UnityEngine::Object {
    public:
    // private System.Void .ctor()
    // Offset: 0x2BAF288
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AssetBundle* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AssetBundle*, creationType>()));
    }
    // static UnityEngine.AssetBundleCreateRequest LoadFromFileAsync_Internal(System.String path, System.UInt32 crc, System.UInt64 offset)
    // Offset: 0x2BAF2F0
    static ::UnityEngine::AssetBundleCreateRequest* LoadFromFileAsync_Internal(::StringW path, uint crc, uint64_t offset);
    // static public UnityEngine.AssetBundleCreateRequest LoadFromFileAsync(System.String path)
    // Offset: 0x2BAF348
    static ::UnityEngine::AssetBundleCreateRequest* LoadFromFileAsync(::StringW path);
    // static public UnityEngine.AssetBundleCreateRequest LoadFromFileAsync(System.String path, System.UInt32 crc)
    // Offset: 0x2BAF390
    static ::UnityEngine::AssetBundleCreateRequest* LoadFromFileAsync(::StringW path, uint crc);
    // static UnityEngine.AssetBundle LoadFromFile_Internal(System.String path, System.UInt32 crc, System.UInt64 offset)
    // Offset: 0x2BAF3E4
    static ::UnityEngine::AssetBundle* LoadFromFile_Internal(::StringW path, uint crc, uint64_t offset);
    // static public UnityEngine.AssetBundle LoadFromFile(System.String path)
    // Offset: 0x2BAF43C
    static ::UnityEngine::AssetBundle* LoadFromFile(::StringW path);
    // public UnityEngine.Object LoadAsset(System.String name)
    // Offset: 0x2BAF484
    ::UnityEngine::Object* LoadAsset(::StringW name);
    // public T LoadAsset(System.String name)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T LoadAsset(::StringW name) {
      static_assert(std::is_convertible_v<T, ::UnityEngine::Object*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadAsset");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAsset", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method, name);
    }
    // public UnityEngine.Object LoadAsset(System.String name, System.Type type)
    // Offset: 0x2BAF514
    ::UnityEngine::Object* LoadAsset(::StringW name, ::System::Type* type);
    // private UnityEngine.Object LoadAsset_Internal(System.String name, System.Type type)
    // Offset: 0x2BAF624
    ::UnityEngine::Object* LoadAsset_Internal(::StringW name, ::System::Type* type);
    // public UnityEngine.AssetBundleRequest LoadAssetAsync(System.String name)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::UnityEngine::AssetBundleRequest* LoadAssetAsync(::StringW name) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadAssetAsync");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAssetAsync", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundleRequest*, false>(this, ___generic__method, name);
    }
    // public UnityEngine.AssetBundleRequest LoadAssetAsync(System.String name, System.Type type)
    // Offset: 0x2BAF67C
    ::UnityEngine::AssetBundleRequest* LoadAssetAsync(::StringW name, ::System::Type* type);
    // public UnityEngine.AssetBundleRequest LoadAssetWithSubAssetsAsync(System.String name, System.Type type)
    // Offset: 0x2BAF7E4
    ::UnityEngine::AssetBundleRequest* LoadAssetWithSubAssetsAsync(::StringW name, ::System::Type* type);
    // public UnityEngine.AssetBundleRequest LoadAllAssetsAsync()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    ::UnityEngine::AssetBundleRequest* LoadAllAssetsAsync() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadAllAssetsAsync");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAllAssetsAsync", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundleRequest*, false>(this, ___generic__method);
    }
    // public UnityEngine.AssetBundleRequest LoadAllAssetsAsync(System.Type type)
    // Offset: 0x2BAF94C
    ::UnityEngine::AssetBundleRequest* LoadAllAssetsAsync(::System::Type* type);
    // private UnityEngine.AssetBundleRequest LoadAssetAsync_Internal(System.String name, System.Type type)
    // Offset: 0x2BAF78C
    ::UnityEngine::AssetBundleRequest* LoadAssetAsync_Internal(::StringW name, ::System::Type* type);
    // public System.Void Unload(System.Boolean unloadAllLoadedObjects)
    // Offset: 0x2BAFA10
    void Unload(bool unloadAllLoadedObjects);
    // public System.String[] GetAllAssetNames()
    // Offset: 0x2BAFA60
    ::ArrayW<::StringW> GetAllAssetNames();
    // public System.String[] GetAllScenePaths()
    // Offset: 0x2BAFAA0
    ::ArrayW<::StringW> GetAllScenePaths();
    // private UnityEngine.AssetBundleRequest LoadAssetWithSubAssetsAsync_Internal(System.String name, System.Type type)
    // Offset: 0x2BAF8F4
    ::UnityEngine::AssetBundleRequest* LoadAssetWithSubAssetsAsync_Internal(::StringW name, ::System::Type* type);
  }; // UnityEngine.AssetBundle
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::AssetBundle::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::AssetBundle::LoadFromFileAsync_Internal
// Il2CppName: LoadFromFileAsync_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AssetBundleCreateRequest* (*)(::StringW, uint, uint64_t)>(&UnityEngine::AssetBundle::LoadFromFileAsync_Internal)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* crc = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AssetBundle*), "LoadFromFileAsync_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, crc, offset});
  }
};
// Writing MetadataGetter for method: UnityEngine::AssetBundle::LoadFromFileAsync
// Il2CppName: LoadFromFileAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AssetBundleCreateRequest* (*)(::StringW)>(&UnityEngine::AssetBundle::LoadFromFileAsync)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AssetBundle*), "LoadFromFileAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: UnityEngine::AssetBundle::LoadFromFileAsync
// Il2CppName: LoadFromFileAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AssetBundleCreateRequest* (*)(::StringW, uint)>(&UnityEngine::AssetBundle::LoadFromFileAsync)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* crc = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AssetBundle*), "LoadFromFileAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, crc});
  }
};
// Writing MetadataGetter for method: UnityEngine::AssetBundle::LoadFromFile_Internal
// Il2CppName: LoadFromFile_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AssetBundle* (*)(::StringW, uint, uint64_t)>(&UnityEngine::AssetBundle::LoadFromFile_Internal)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* crc = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AssetBundle*), "LoadFromFile_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, crc, offset});
  }
};
// Writing MetadataGetter for method: UnityEngine::AssetBundle::LoadFromFile
// Il2CppName: LoadFromFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AssetBundle* (*)(::StringW)>(&UnityEngine::AssetBundle::LoadFromFile)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AssetBundle*), "LoadFromFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: UnityEngine::AssetBundle::LoadAsset
// Il2CppName: LoadAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Object* (UnityEngine::AssetBundle::*)(::StringW)>(&UnityEngine::AssetBundle::LoadAsset)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AssetBundle*), "LoadAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: UnityEngine::AssetBundle::LoadAsset
// Il2CppName: LoadAsset
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::AssetBundle::LoadAsset
// Il2CppName: LoadAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Object* (UnityEngine::AssetBundle::*)(::StringW, ::System::Type*)>(&UnityEngine::AssetBundle::LoadAsset)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AssetBundle*), "LoadAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, type});
  }
};
// Writing MetadataGetter for method: UnityEngine::AssetBundle::LoadAsset_Internal
// Il2CppName: LoadAsset_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Object* (UnityEngine::AssetBundle::*)(::StringW, ::System::Type*)>(&UnityEngine::AssetBundle::LoadAsset_Internal)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AssetBundle*), "LoadAsset_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, type});
  }
};
// Writing MetadataGetter for method: UnityEngine::AssetBundle::LoadAssetAsync
// Il2CppName: LoadAssetAsync
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::AssetBundle::LoadAssetAsync
// Il2CppName: LoadAssetAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AssetBundleRequest* (UnityEngine::AssetBundle::*)(::StringW, ::System::Type*)>(&UnityEngine::AssetBundle::LoadAssetAsync)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AssetBundle*), "LoadAssetAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, type});
  }
};
// Writing MetadataGetter for method: UnityEngine::AssetBundle::LoadAssetWithSubAssetsAsync
// Il2CppName: LoadAssetWithSubAssetsAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AssetBundleRequest* (UnityEngine::AssetBundle::*)(::StringW, ::System::Type*)>(&UnityEngine::AssetBundle::LoadAssetWithSubAssetsAsync)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AssetBundle*), "LoadAssetWithSubAssetsAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, type});
  }
};
// Writing MetadataGetter for method: UnityEngine::AssetBundle::LoadAllAssetsAsync
// Il2CppName: LoadAllAssetsAsync
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::AssetBundle::LoadAllAssetsAsync
// Il2CppName: LoadAllAssetsAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AssetBundleRequest* (UnityEngine::AssetBundle::*)(::System::Type*)>(&UnityEngine::AssetBundle::LoadAllAssetsAsync)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AssetBundle*), "LoadAllAssetsAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: UnityEngine::AssetBundle::LoadAssetAsync_Internal
// Il2CppName: LoadAssetAsync_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AssetBundleRequest* (UnityEngine::AssetBundle::*)(::StringW, ::System::Type*)>(&UnityEngine::AssetBundle::LoadAssetAsync_Internal)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AssetBundle*), "LoadAssetAsync_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, type});
  }
};
// Writing MetadataGetter for method: UnityEngine::AssetBundle::Unload
// Il2CppName: Unload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::AssetBundle::*)(bool)>(&UnityEngine::AssetBundle::Unload)> {
  static const MethodInfo* get() {
    static auto* unloadAllLoadedObjects = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AssetBundle*), "Unload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{unloadAllLoadedObjects});
  }
};
// Writing MetadataGetter for method: UnityEngine::AssetBundle::GetAllAssetNames
// Il2CppName: GetAllAssetNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (UnityEngine::AssetBundle::*)()>(&UnityEngine::AssetBundle::GetAllAssetNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AssetBundle*), "GetAllAssetNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::AssetBundle::GetAllScenePaths
// Il2CppName: GetAllScenePaths
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (UnityEngine::AssetBundle::*)()>(&UnityEngine::AssetBundle::GetAllScenePaths)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AssetBundle*), "GetAllScenePaths", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::AssetBundle::LoadAssetWithSubAssetsAsync_Internal
// Il2CppName: LoadAssetWithSubAssetsAsync_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AssetBundleRequest* (UnityEngine::AssetBundle::*)(::StringW, ::System::Type*)>(&UnityEngine::AssetBundle::LoadAssetWithSubAssetsAsync_Internal)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AssetBundle*), "LoadAssetWithSubAssetsAsync_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, type});
  }
};
