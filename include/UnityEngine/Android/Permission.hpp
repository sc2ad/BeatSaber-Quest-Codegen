// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine.Android
namespace UnityEngine::Android {
  // Forward declaring type: Permission
  struct Permission;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Android::Permission, "UnityEngine.Android", "Permission");
// Type namespace: UnityEngine.Android
namespace UnityEngine::Android {
  // Size: 0x0
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Android.Permission
  // [TokenAttribute] Offset: FFFFFFFF
  // [UsedByNativeCodeAttribute] Offset: 90CCE4
  // [NativeHeaderAttribute] Offset: 90CCE4
  struct Permission/*, public ::System::ValueType*/ {
    public:
    // Creating value type constructor for type: Permission
    constexpr Permission() noexcept {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // static public System.Boolean HasUserAuthorizedPermission(System.String permission)
    // Offset: 0x165B1B4
    static bool HasUserAuthorizedPermission(::StringW permission);
    // static public System.Void RequestUserPermission(System.String permission)
    // Offset: 0x165B1F4
    static void RequestUserPermission(::StringW permission);
  }; // UnityEngine.Android.Permission
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Android::Permission::HasUserAuthorizedPermission
// Il2CppName: HasUserAuthorizedPermission
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&UnityEngine::Android::Permission::HasUserAuthorizedPermission)> {
  static const MethodInfo* get() {
    static auto* permission = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Android::Permission), "HasUserAuthorizedPermission", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{permission});
  }
};
// Writing MetadataGetter for method: UnityEngine::Android::Permission::RequestUserPermission
// Il2CppName: RequestUserPermission
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&UnityEngine::Android::Permission::RequestUserPermission)> {
  static const MethodInfo* get() {
    static auto* permission = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Android::Permission), "RequestUserPermission", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{permission});
  }
};
