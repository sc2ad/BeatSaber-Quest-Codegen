// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct
#include "UnityEngine/TextCore/LowLevel/GlyphMarshallingStruct.hpp"
// Including type: UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord
#include "UnityEngine/TextCore/LowLevel/GlyphPairAdjustmentRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::TextCore
namespace UnityEngine::TextCore {
  // Forward declaring type: Glyph
  class Glyph;
  // Forward declaring type: FaceInfo
  struct FaceInfo;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::TextCore::LowLevel
namespace UnityEngine::TextCore::LowLevel {
  // Forward declaring type: FontEngineError
  struct FontEngineError;
  // Forward declaring type: GlyphLoadFlags
  struct GlyphLoadFlags;
  // Forward declaring type: GlyphPackingMode
  struct GlyphPackingMode;
  // Forward declaring type: GlyphRenderMode
  struct GlyphRenderMode;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Font
  class Font;
  // Forward declaring type: Texture2D
  class Texture2D;
}
// Completed forward declares
// Type namespace: UnityEngine.TextCore.LowLevel
namespace UnityEngine::TextCore::LowLevel {
  // Forward declaring type: FontEngine
  class FontEngine;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::TextCore::LowLevel::FontEngine);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextCore::LowLevel::FontEngine*, "UnityEngine.TextCore.LowLevel", "FontEngine");
// Type namespace: UnityEngine.TextCore.LowLevel
namespace UnityEngine::TextCore::LowLevel {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TextCore.LowLevel.FontEngine
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 10C4E9C
  class FontEngine : public ::Il2CppObject {
    public:
    // Get static field: static private UnityEngine.TextCore.Glyph[] s_Glyphs
    static ::ArrayW<::UnityEngine::TextCore::Glyph*> _get_s_Glyphs();
    // Set static field: static private UnityEngine.TextCore.Glyph[] s_Glyphs
    static void _set_s_Glyphs(::ArrayW<::UnityEngine::TextCore::Glyph*> value);
    // Get static field: static private System.UInt32[] s_GlyphIndexes_MarshallingArray_A
    static ::ArrayW<uint> _get_s_GlyphIndexes_MarshallingArray_A();
    // Set static field: static private System.UInt32[] s_GlyphIndexes_MarshallingArray_A
    static void _set_s_GlyphIndexes_MarshallingArray_A(::ArrayW<uint> value);
    // Get static field: static private UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[] s_GlyphMarshallingStruct_IN
    static ::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct> _get_s_GlyphMarshallingStruct_IN();
    // Set static field: static private UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[] s_GlyphMarshallingStruct_IN
    static void _set_s_GlyphMarshallingStruct_IN(::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct> value);
    // Get static field: static private UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[] s_GlyphMarshallingStruct_OUT
    static ::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct> _get_s_GlyphMarshallingStruct_OUT();
    // Set static field: static private UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[] s_GlyphMarshallingStruct_OUT
    static void _set_s_GlyphMarshallingStruct_OUT(::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct> value);
    // Get static field: static private UnityEngine.TextCore.GlyphRect[] s_FreeGlyphRects
    static ::ArrayW<::UnityEngine::TextCore::GlyphRect> _get_s_FreeGlyphRects();
    // Set static field: static private UnityEngine.TextCore.GlyphRect[] s_FreeGlyphRects
    static void _set_s_FreeGlyphRects(::ArrayW<::UnityEngine::TextCore::GlyphRect> value);
    // Get static field: static private UnityEngine.TextCore.GlyphRect[] s_UsedGlyphRects
    static ::ArrayW<::UnityEngine::TextCore::GlyphRect> _get_s_UsedGlyphRects();
    // Set static field: static private UnityEngine.TextCore.GlyphRect[] s_UsedGlyphRects
    static void _set_s_UsedGlyphRects(::ArrayW<::UnityEngine::TextCore::GlyphRect> value);
    // Get static field: static private UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] s_PairAdjustmentRecords_MarshallingArray
    static ::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> _get_s_PairAdjustmentRecords_MarshallingArray();
    // Set static field: static private UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] s_PairAdjustmentRecords_MarshallingArray
    static void _set_s_PairAdjustmentRecords_MarshallingArray(::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Glyph> s_GlyphLookupDictionary
    static ::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Glyph*>* _get_s_GlyphLookupDictionary();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Glyph> s_GlyphLookupDictionary
    static void _set_s_GlyphLookupDictionary(::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Glyph*>* value);
    // static private System.Void .cctor()
    // Offset: 0x2B8CFA0
    static void _cctor();
    // static public UnityEngine.TextCore.LowLevel.FontEngineError InitializeFontEngine()
    // Offset: 0x2B8AF9C
    static ::UnityEngine::TextCore::LowLevel::FontEngineError InitializeFontEngine();
    // static private System.Int32 InitializeFontEngine_Internal()
    // Offset: 0x2B8B014
    static int InitializeFontEngine_Internal();
    // static public UnityEngine.TextCore.LowLevel.FontEngineError LoadFontFace(UnityEngine.Font font, System.Int32 pointSize)
    // Offset: 0x2B8B048
    static ::UnityEngine::TextCore::LowLevel::FontEngineError LoadFontFace(::UnityEngine::Font* font, int pointSize);
    // static private System.Int32 LoadFontFace_With_Size_FromFont_Internal(UnityEngine.Font font, System.Int32 pointSize)
    // Offset: 0x2B8B0DC
    static int LoadFontFace_With_Size_FromFont_Internal(::UnityEngine::Font* font, int pointSize);
    // static public UnityEngine.TextCore.FaceInfo GetFaceInfo()
    // Offset: 0x2B8B12C
    static ::UnityEngine::TextCore::FaceInfo GetFaceInfo();
    // static private System.Int32 GetFaceInfo_Internal(ref UnityEngine.TextCore.FaceInfo faceInfo)
    // Offset: 0x2B8B1DC
    static int GetFaceInfo_Internal(ByRef<::UnityEngine::TextCore::FaceInfo> faceInfo);
    // static System.UInt32 GetGlyphIndex(System.UInt32 unicode)
    // Offset: 0x2B8B21C
    static uint GetGlyphIndex(uint unicode);
    // static public System.Boolean TryGetGlyphWithUnicodeValue(System.UInt32 unicode, UnityEngine.TextCore.LowLevel.GlyphLoadFlags flags, out UnityEngine.TextCore.Glyph glyph)
    // Offset: 0x2B8B25C
    static bool TryGetGlyphWithUnicodeValue(uint unicode, ::UnityEngine::TextCore::LowLevel::GlyphLoadFlags flags, ByRef<::UnityEngine::TextCore::Glyph*> glyph);
    // static private System.Boolean TryGetGlyphWithUnicodeValue_Internal(System.UInt32 unicode, UnityEngine.TextCore.LowLevel.GlyphLoadFlags loadFlags, ref UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct glyphStruct)
    // Offset: 0x2B8B380
    static bool TryGetGlyphWithUnicodeValue_Internal(uint unicode, ::UnityEngine::TextCore::LowLevel::GlyphLoadFlags loadFlags, ByRef<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct> glyphStruct);
    // static public System.Boolean TryGetGlyphWithIndexValue(System.UInt32 glyphIndex, UnityEngine.TextCore.LowLevel.GlyphLoadFlags flags, out UnityEngine.TextCore.Glyph glyph)
    // Offset: 0x2B8B3D8
    static bool TryGetGlyphWithIndexValue(uint glyphIndex, ::UnityEngine::TextCore::LowLevel::GlyphLoadFlags flags, ByRef<::UnityEngine::TextCore::Glyph*> glyph);
    // static private System.Boolean TryGetGlyphWithIndexValue_Internal(System.UInt32 glyphIndex, UnityEngine.TextCore.LowLevel.GlyphLoadFlags loadFlags, ref UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct glyphStruct)
    // Offset: 0x2B8B4FC
    static bool TryGetGlyphWithIndexValue_Internal(uint glyphIndex, ::UnityEngine::TextCore::LowLevel::GlyphLoadFlags loadFlags, ByRef<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct> glyphStruct);
    // static System.Boolean TryPackGlyphInAtlas(UnityEngine.TextCore.Glyph glyph, System.Int32 padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, System.Int32 width, System.Int32 height, System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> freeGlyphRects, System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> usedGlyphRects)
    // Offset: 0x2B8B554
    static bool TryPackGlyphInAtlas(::UnityEngine::TextCore::Glyph* glyph, int padding, ::UnityEngine::TextCore::LowLevel::GlyphPackingMode packingMode, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, int width, int height, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* freeGlyphRects, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* usedGlyphRects);
    // static private System.Boolean TryPackGlyphInAtlas_Internal(ref UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct glyph, System.Int32 padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, System.Int32 width, System.Int32 height, out UnityEngine.TextCore.GlyphRect[] freeGlyphRects, ref System.Int32 freeGlyphRectCount, out UnityEngine.TextCore.GlyphRect[] usedGlyphRects, ref System.Int32 usedGlyphRectCount)
    // Offset: 0x2B8BA54
    static bool TryPackGlyphInAtlas_Internal(ByRef<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct> glyph, int padding, ::UnityEngine::TextCore::LowLevel::GlyphPackingMode packingMode, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, int width, int height, ByRef<::ArrayW<::UnityEngine::TextCore::GlyphRect>> freeGlyphRects, ByRef<int> freeGlyphRectCount, ByRef<::ArrayW<::UnityEngine::TextCore::GlyphRect>> usedGlyphRects, ByRef<int> usedGlyphRectCount);
    // static UnityEngine.TextCore.LowLevel.FontEngineError RenderGlyphsToTexture(System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> glyphs, System.Int32 padding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture)
    // Offset: 0x2B8BAF8
    static ::UnityEngine::TextCore::LowLevel::FontEngineError RenderGlyphsToTexture(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>* glyphs, int padding, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, ::UnityEngine::Texture2D* texture);
    // static private System.Int32 RenderGlyphsToTexture_Internal(UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[] glyphs, System.Int32 glyphCount, System.Int32 padding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture)
    // Offset: 0x2B8BD64
    static int RenderGlyphsToTexture_Internal(::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct> glyphs, int glyphCount, int padding, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, ::UnityEngine::Texture2D* texture);
    // static System.Boolean TryAddGlyphToTexture(System.UInt32 glyphIndex, System.Int32 padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> freeGlyphRects, System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> usedGlyphRects, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture, out UnityEngine.TextCore.Glyph glyph)
    // Offset: 0x2B8BDD4
    static bool TryAddGlyphToTexture(uint glyphIndex, int padding, ::UnityEngine::TextCore::LowLevel::GlyphPackingMode packingMode, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* freeGlyphRects, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* usedGlyphRects, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, ::UnityEngine::Texture2D* texture, ByRef<::UnityEngine::TextCore::Glyph*> glyph);
    // static private System.Boolean TryAddGlyphToTexture_Internal(System.UInt32 glyphIndex, System.Int32 padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, out UnityEngine.TextCore.GlyphRect[] freeGlyphRects, ref System.Int32 freeGlyphRectCount, out UnityEngine.TextCore.GlyphRect[] usedGlyphRects, ref System.Int32 usedGlyphRectCount, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture, out UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct glyph)
    // Offset: 0x2B8C2D8
    static bool TryAddGlyphToTexture_Internal(uint glyphIndex, int padding, ::UnityEngine::TextCore::LowLevel::GlyphPackingMode packingMode, ByRef<::ArrayW<::UnityEngine::TextCore::GlyphRect>> freeGlyphRects, ByRef<int> freeGlyphRectCount, ByRef<::ArrayW<::UnityEngine::TextCore::GlyphRect>> usedGlyphRects, ByRef<int> usedGlyphRectCount, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, ::UnityEngine::Texture2D* texture, ByRef<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct> glyph);
    // static System.Boolean TryAddGlyphsToTexture(System.Collections.Generic.List`1<System.UInt32> glyphIndexes, System.Int32 padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> freeGlyphRects, System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> usedGlyphRects, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture, out UnityEngine.TextCore.Glyph[] glyphs)
    // Offset: 0x2B8C37C
    static bool TryAddGlyphsToTexture(::System::Collections::Generic::List_1<uint>* glyphIndexes, int padding, ::UnityEngine::TextCore::LowLevel::GlyphPackingMode packingMode, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* freeGlyphRects, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* usedGlyphRects, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, ::UnityEngine::Texture2D* texture, ByRef<::ArrayW<::UnityEngine::TextCore::Glyph*>> glyphs);
    // static private System.Boolean TryAddGlyphsToTexture_Internal(System.UInt32[] glyphIndex, System.Int32 padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, out UnityEngine.TextCore.GlyphRect[] freeGlyphRects, ref System.Int32 freeGlyphRectCount, out UnityEngine.TextCore.GlyphRect[] usedGlyphRects, ref System.Int32 usedGlyphRectCount, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture, out UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[] glyphs, ref System.Int32 glyphCount)
    // Offset: 0x2B8CCB4
    static bool TryAddGlyphsToTexture_Internal(::ArrayW<uint> glyphIndex, int padding, ::UnityEngine::TextCore::LowLevel::GlyphPackingMode packingMode, ByRef<::ArrayW<::UnityEngine::TextCore::GlyphRect>> freeGlyphRects, ByRef<int> freeGlyphRectCount, ByRef<::ArrayW<::UnityEngine::TextCore::GlyphRect>> usedGlyphRects, ByRef<int> usedGlyphRectCount, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, ::UnityEngine::Texture2D* texture, ByRef<::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>> glyphs, ByRef<int> glyphCount);
    // static UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] GetGlyphPairAdjustmentTable(System.UInt32[] glyphIndexes)
    // Offset: 0x2B8CD68
    static ::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> GetGlyphPairAdjustmentTable(::ArrayW<uint> glyphIndexes);
    // static private System.Int32 PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes(System.UInt32[] glyphIndexes, out System.Int32 recordCount)
    // Offset: 0x2B8CED0
    static int PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes(::ArrayW<uint> glyphIndexes, ByRef<int> recordCount);
    // static private System.Int32 GetGlyphPairAdjustmentRecordsFromMarshallingArray(out UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] glyphPairAdjustmentRecords)
    // Offset: 0x2B8CF20
    static int GetGlyphPairAdjustmentRecordsFromMarshallingArray(ByRef<::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>> glyphPairAdjustmentRecords);
    // static private System.Void SetMarshallingArraySize(ref T[] marshallingArray, System.Int32 recordCount)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void SetMarshallingArraySize(ByRef<::ArrayW<T>> marshallingArray, int recordCount) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextCore::LowLevel::FontEngine::SetMarshallingArraySize");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "SetMarshallingArraySize", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(marshallingArray), ::il2cpp_utils::ExtractType(recordCount)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, byref(marshallingArray), recordCount);
    }
    // static System.Void ResetAtlasTexture(UnityEngine.Texture2D texture)
    // Offset: 0x2B8CF60
    static void ResetAtlasTexture(::UnityEngine::Texture2D* texture);
  }; // UnityEngine.TextCore.LowLevel.FontEngine
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::TextCore::LowLevel::FontEngine::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::InitializeFontEngine
// Il2CppName: InitializeFontEngine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::LowLevel::FontEngineError (*)()>(&UnityEngine::TextCore::LowLevel::FontEngine::InitializeFontEngine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "InitializeFontEngine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::InitializeFontEngine_Internal
// Il2CppName: InitializeFontEngine_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::TextCore::LowLevel::FontEngine::InitializeFontEngine_Internal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "InitializeFontEngine_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::LoadFontFace
// Il2CppName: LoadFontFace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::LowLevel::FontEngineError (*)(::UnityEngine::Font*, int)>(&UnityEngine::TextCore::LowLevel::FontEngine::LoadFontFace)> {
  static const MethodInfo* get() {
    static auto* font = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    static auto* pointSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "LoadFontFace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{font, pointSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::LoadFontFace_With_Size_FromFont_Internal
// Il2CppName: LoadFontFace_With_Size_FromFont_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Font*, int)>(&UnityEngine::TextCore::LowLevel::FontEngine::LoadFontFace_With_Size_FromFont_Internal)> {
  static const MethodInfo* get() {
    static auto* font = &::il2cpp_utils::GetClassFromName("UnityEngine", "Font")->byval_arg;
    static auto* pointSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "LoadFontFace_With_Size_FromFont_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{font, pointSize});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::GetFaceInfo
// Il2CppName: GetFaceInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::FaceInfo (*)()>(&UnityEngine::TextCore::LowLevel::FontEngine::GetFaceInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "GetFaceInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::GetFaceInfo_Internal
// Il2CppName: GetFaceInfo_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<::UnityEngine::TextCore::FaceInfo>)>(&UnityEngine::TextCore::LowLevel::FontEngine::GetFaceInfo_Internal)> {
  static const MethodInfo* get() {
    static auto* faceInfo = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "FaceInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "GetFaceInfo_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{faceInfo});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphIndex
// Il2CppName: GetGlyphIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphIndex)> {
  static const MethodInfo* get() {
    static auto* unicode = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "GetGlyphIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{unicode});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithUnicodeValue
// Il2CppName: TryGetGlyphWithUnicodeValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint, ::UnityEngine::TextCore::LowLevel::GlyphLoadFlags, ByRef<::UnityEngine::TextCore::Glyph*>)>(&UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithUnicodeValue)> {
  static const MethodInfo* get() {
    static auto* unicode = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags")->byval_arg;
    static auto* glyph = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "Glyph")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "TryGetGlyphWithUnicodeValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{unicode, flags, glyph});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithUnicodeValue_Internal
// Il2CppName: TryGetGlyphWithUnicodeValue_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint, ::UnityEngine::TextCore::LowLevel::GlyphLoadFlags, ByRef<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>)>(&UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithUnicodeValue_Internal)> {
  static const MethodInfo* get() {
    static auto* unicode = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* loadFlags = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags")->byval_arg;
    static auto* glyphStruct = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphMarshallingStruct")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "TryGetGlyphWithUnicodeValue_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{unicode, loadFlags, glyphStruct});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithIndexValue
// Il2CppName: TryGetGlyphWithIndexValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint, ::UnityEngine::TextCore::LowLevel::GlyphLoadFlags, ByRef<::UnityEngine::TextCore::Glyph*>)>(&UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithIndexValue)> {
  static const MethodInfo* get() {
    static auto* glyphIndex = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags")->byval_arg;
    static auto* glyph = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "Glyph")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "TryGetGlyphWithIndexValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{glyphIndex, flags, glyph});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithIndexValue_Internal
// Il2CppName: TryGetGlyphWithIndexValue_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint, ::UnityEngine::TextCore::LowLevel::GlyphLoadFlags, ByRef<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>)>(&UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithIndexValue_Internal)> {
  static const MethodInfo* get() {
    static auto* glyphIndex = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* loadFlags = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags")->byval_arg;
    static auto* glyphStruct = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphMarshallingStruct")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "TryGetGlyphWithIndexValue_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{glyphIndex, loadFlags, glyphStruct});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::TryPackGlyphInAtlas
// Il2CppName: TryPackGlyphInAtlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::TextCore::Glyph*, int, ::UnityEngine::TextCore::LowLevel::GlyphPackingMode, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode, int, int, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*)>(&UnityEngine::TextCore::LowLevel::FontEngine::TryPackGlyphInAtlas)> {
  static const MethodInfo* get() {
    static auto* glyph = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "Glyph")->byval_arg;
    static auto* padding = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* packingMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphPackingMode")->byval_arg;
    static auto* renderMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphRenderMode")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* freeGlyphRects = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "GlyphRect")})->byval_arg;
    static auto* usedGlyphRects = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "GlyphRect")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "TryPackGlyphInAtlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{glyph, padding, packingMode, renderMode, width, height, freeGlyphRects, usedGlyphRects});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::TryPackGlyphInAtlas_Internal
// Il2CppName: TryPackGlyphInAtlas_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>, int, ::UnityEngine::TextCore::LowLevel::GlyphPackingMode, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode, int, int, ByRef<::ArrayW<::UnityEngine::TextCore::GlyphRect>>, ByRef<int>, ByRef<::ArrayW<::UnityEngine::TextCore::GlyphRect>>, ByRef<int>)>(&UnityEngine::TextCore::LowLevel::FontEngine::TryPackGlyphInAtlas_Internal)> {
  static const MethodInfo* get() {
    static auto* glyph = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphMarshallingStruct")->this_arg;
    static auto* padding = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* packingMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphPackingMode")->byval_arg;
    static auto* renderMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphRenderMode")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* freeGlyphRects = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "GlyphRect"), 1)->this_arg;
    static auto* freeGlyphRectCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* usedGlyphRects = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "GlyphRect"), 1)->this_arg;
    static auto* usedGlyphRectCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "TryPackGlyphInAtlas_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{glyph, padding, packingMode, renderMode, width, height, freeGlyphRects, freeGlyphRectCount, usedGlyphRects, usedGlyphRectCount});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::RenderGlyphsToTexture
// Il2CppName: RenderGlyphsToTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextCore::LowLevel::FontEngineError (*)(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>*, int, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode, ::UnityEngine::Texture2D*)>(&UnityEngine::TextCore::LowLevel::FontEngine::RenderGlyphsToTexture)> {
  static const MethodInfo* get() {
    static auto* glyphs = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "Glyph")})->byval_arg;
    static auto* padding = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* renderMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphRenderMode")->byval_arg;
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "RenderGlyphsToTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{glyphs, padding, renderMode, texture});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::RenderGlyphsToTexture_Internal
// Il2CppName: RenderGlyphsToTexture_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>, int, int, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode, ::UnityEngine::Texture2D*)>(&UnityEngine::TextCore::LowLevel::FontEngine::RenderGlyphsToTexture_Internal)> {
  static const MethodInfo* get() {
    static auto* glyphs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphMarshallingStruct"), 1)->byval_arg;
    static auto* glyphCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* padding = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* renderMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphRenderMode")->byval_arg;
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "RenderGlyphsToTexture_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{glyphs, glyphCount, padding, renderMode, texture});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphToTexture
// Il2CppName: TryAddGlyphToTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint, int, ::UnityEngine::TextCore::LowLevel::GlyphPackingMode, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode, ::UnityEngine::Texture2D*, ByRef<::UnityEngine::TextCore::Glyph*>)>(&UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphToTexture)> {
  static const MethodInfo* get() {
    static auto* glyphIndex = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* padding = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* packingMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphPackingMode")->byval_arg;
    static auto* freeGlyphRects = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "GlyphRect")})->byval_arg;
    static auto* usedGlyphRects = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "GlyphRect")})->byval_arg;
    static auto* renderMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphRenderMode")->byval_arg;
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* glyph = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "Glyph")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "TryAddGlyphToTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{glyphIndex, padding, packingMode, freeGlyphRects, usedGlyphRects, renderMode, texture, glyph});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphToTexture_Internal
// Il2CppName: TryAddGlyphToTexture_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint, int, ::UnityEngine::TextCore::LowLevel::GlyphPackingMode, ByRef<::ArrayW<::UnityEngine::TextCore::GlyphRect>>, ByRef<int>, ByRef<::ArrayW<::UnityEngine::TextCore::GlyphRect>>, ByRef<int>, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode, ::UnityEngine::Texture2D*, ByRef<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>)>(&UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphToTexture_Internal)> {
  static const MethodInfo* get() {
    static auto* glyphIndex = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* padding = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* packingMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphPackingMode")->byval_arg;
    static auto* freeGlyphRects = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "GlyphRect"), 1)->this_arg;
    static auto* freeGlyphRectCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* usedGlyphRects = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "GlyphRect"), 1)->this_arg;
    static auto* usedGlyphRectCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* renderMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphRenderMode")->byval_arg;
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* glyph = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphMarshallingStruct")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "TryAddGlyphToTexture_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{glyphIndex, padding, packingMode, freeGlyphRects, freeGlyphRectCount, usedGlyphRects, usedGlyphRectCount, renderMode, texture, glyph});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphsToTexture
// Il2CppName: TryAddGlyphsToTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Collections::Generic::List_1<uint>*, int, ::UnityEngine::TextCore::LowLevel::GlyphPackingMode, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*, ::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode, ::UnityEngine::Texture2D*, ByRef<::ArrayW<::UnityEngine::TextCore::Glyph*>>)>(&UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphsToTexture)> {
  static const MethodInfo* get() {
    static auto* glyphIndexes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "UInt32")})->byval_arg;
    static auto* padding = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* packingMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphPackingMode")->byval_arg;
    static auto* freeGlyphRects = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "GlyphRect")})->byval_arg;
    static auto* usedGlyphRects = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "GlyphRect")})->byval_arg;
    static auto* renderMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphRenderMode")->byval_arg;
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* glyphs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "Glyph"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "TryAddGlyphsToTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{glyphIndexes, padding, packingMode, freeGlyphRects, usedGlyphRects, renderMode, texture, glyphs});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphsToTexture_Internal
// Il2CppName: TryAddGlyphsToTexture_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ArrayW<uint>, int, ::UnityEngine::TextCore::LowLevel::GlyphPackingMode, ByRef<::ArrayW<::UnityEngine::TextCore::GlyphRect>>, ByRef<int>, ByRef<::ArrayW<::UnityEngine::TextCore::GlyphRect>>, ByRef<int>, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode, ::UnityEngine::Texture2D*, ByRef<::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>>, ByRef<int>)>(&UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphsToTexture_Internal)> {
  static const MethodInfo* get() {
    static auto* glyphIndex = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* padding = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* packingMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphPackingMode")->byval_arg;
    static auto* freeGlyphRects = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "GlyphRect"), 1)->this_arg;
    static auto* freeGlyphRectCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* usedGlyphRects = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.TextCore", "GlyphRect"), 1)->this_arg;
    static auto* usedGlyphRectCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* renderMode = &::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphRenderMode")->byval_arg;
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* glyphs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphMarshallingStruct"), 1)->this_arg;
    static auto* glyphCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "TryAddGlyphsToTexture_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{glyphIndex, padding, packingMode, freeGlyphRects, freeGlyphRectCount, usedGlyphRects, usedGlyphRectCount, renderMode, texture, glyphs, glyphCount});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphPairAdjustmentTable
// Il2CppName: GetGlyphPairAdjustmentTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord> (*)(::ArrayW<uint>)>(&UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphPairAdjustmentTable)> {
  static const MethodInfo* get() {
    static auto* glyphIndexes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "GetGlyphPairAdjustmentTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{glyphIndexes});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes
// Il2CppName: PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::ArrayW<uint>, ByRef<int>)>(&UnityEngine::TextCore::LowLevel::FontEngine::PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes)> {
  static const MethodInfo* get() {
    static auto* glyphIndexes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    static auto* recordCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{glyphIndexes, recordCount});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphPairAdjustmentRecordsFromMarshallingArray
// Il2CppName: GetGlyphPairAdjustmentRecordsFromMarshallingArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<::ArrayW<::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>>)>(&UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphPairAdjustmentRecordsFromMarshallingArray)> {
  static const MethodInfo* get() {
    static auto* glyphPairAdjustmentRecords = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.TextCore.LowLevel", "GlyphPairAdjustmentRecord"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "GetGlyphPairAdjustmentRecordsFromMarshallingArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{glyphPairAdjustmentRecords});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::SetMarshallingArraySize
// Il2CppName: SetMarshallingArraySize
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::TextCore::LowLevel::FontEngine::ResetAtlasTexture
// Il2CppName: ResetAtlasTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Texture2D*)>(&UnityEngine::TextCore::LowLevel::FontEngine::ResetAtlasTexture)> {
  static const MethodInfo* get() {
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextCore::LowLevel::FontEngine*), "ResetAtlasTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{texture});
  }
};
