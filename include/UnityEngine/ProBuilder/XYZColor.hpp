// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
}
// Completed forward declares
// Type namespace: UnityEngine.ProBuilder
namespace UnityEngine::ProBuilder {
  // Forward declaring type: XYZColor
  class XYZColor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ProBuilder::XYZColor);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ProBuilder::XYZColor*, "UnityEngine.ProBuilder", "XYZColor");
// Type namespace: UnityEngine.ProBuilder
namespace UnityEngine::ProBuilder {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ProBuilder.XYZColor
  // [TokenAttribute] Offset: FFFFFFFF
  class XYZColor : public ::Il2CppObject {
    public:
    public:
    // public System.Single x
    // Size: 0x4
    // Offset: 0x10
    float x;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single y
    // Size: 0x4
    // Offset: 0x14
    float y;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single z
    // Size: 0x4
    // Offset: 0x18
    float z;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: public System.Single x
    [[deprecated("Use field access instead!")]] float& dyn_x();
    // Get instance field reference: public System.Single y
    [[deprecated("Use field access instead!")]] float& dyn_y();
    // Get instance field reference: public System.Single z
    [[deprecated("Use field access instead!")]] float& dyn_z();
    // public System.Void .ctor(System.Single x, System.Single y, System.Single z)
    // Offset: 0x29E4E20
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XYZColor* New_ctor(float x, float y, float z) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ProBuilder::XYZColor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XYZColor*, creationType>(x, y, z)));
    }
    // static public UnityEngine.ProBuilder.XYZColor FromRGB(UnityEngine.Color col)
    // Offset: 0x29E4E68
    static ::UnityEngine::ProBuilder::XYZColor* FromRGB(::UnityEngine::Color col);
    // static public UnityEngine.ProBuilder.XYZColor FromRGB(System.Single R, System.Single G, System.Single B)
    // Offset: 0x29E4EF8
    static ::UnityEngine::ProBuilder::XYZColor* FromRGB(float R, float G, float B);
    // public override System.String ToString()
    // Offset: 0x29E4F80
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // UnityEngine.ProBuilder.XYZColor
  #pragma pack(pop)
  static check_size<sizeof(XYZColor), 24 + sizeof(float)> __UnityEngine_ProBuilder_XYZColorSizeCheck;
  static_assert(sizeof(XYZColor) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ProBuilder::XYZColor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::ProBuilder::XYZColor::FromRGB
// Il2CppName: FromRGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ProBuilder::XYZColor* (*)(::UnityEngine::Color)>(&UnityEngine::ProBuilder::XYZColor::FromRGB)> {
  static const MethodInfo* get() {
    static auto* col = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::XYZColor*), "FromRGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{col});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::XYZColor::FromRGB
// Il2CppName: FromRGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ProBuilder::XYZColor* (*)(float, float, float)>(&UnityEngine::ProBuilder::XYZColor::FromRGB)> {
  static const MethodInfo* get() {
    static auto* R = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* G = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* B = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::XYZColor*), "FromRGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{R, G, B});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::XYZColor::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::ProBuilder::XYZColor::*)()>(&UnityEngine::ProBuilder::XYZColor::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::XYZColor*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
