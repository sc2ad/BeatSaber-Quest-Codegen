// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine.ProBuilder.KdTree
namespace UnityEngine::ProBuilder::KdTree {
  // Forward declaring type: KdTreeNode`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class KdTreeNode_2;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::ProBuilder::KdTree::KdTreeNode_2, "UnityEngine.ProBuilder.KdTree", "KdTreeNode`2");
// Type namespace: UnityEngine.ProBuilder.KdTree
namespace UnityEngine::ProBuilder::KdTree {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.ProBuilder.KdTree.KdTreeNode`2
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 1143424
  template<typename TKey, typename TValue>
  class KdTreeNode_2 : public ::Il2CppObject {
    public:
    public:
    // public TKey[] Point
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<TKey> Point;
    // Field size check
    static_assert(sizeof(::ArrayW<TKey>) == 0x8);
    // public TValue Value
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    TValue Value;
    // public System.Collections.Generic.List`1<TValue> Duplicates
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<TValue>* Duplicates;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<TValue>*) == 0x8);
    // UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey,TValue> LeftChild
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::ProBuilder::KdTree::KdTreeNode_2<TKey, TValue>* LeftChild;
    // Field size check
    static_assert(sizeof(::UnityEngine::ProBuilder::KdTree::KdTreeNode_2<TKey, TValue>*) == 0x8);
    // UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey,TValue> RightChild
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::ProBuilder::KdTree::KdTreeNode_2<TKey, TValue>* RightChild;
    // Field size check
    static_assert(sizeof(::UnityEngine::ProBuilder::KdTree::KdTreeNode_2<TKey, TValue>*) == 0x8);
    public:
    // Autogenerated instance field getter
    // Get instance field: public TKey[] Point
    [[deprecated("Use field access instead!")]] ::ArrayW<TKey>& dyn_Point() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ProBuilder::KdTree::KdTreeNode_2::dyn_Point");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Point"))->offset;
      return *reinterpret_cast<::ArrayW<TKey>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public TValue Value
    [[deprecated("Use field access instead!")]] TValue& dyn_Value() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ProBuilder::KdTree::KdTreeNode_2::dyn_Value");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
      return *reinterpret_cast<TValue*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public System.Collections.Generic.List`1<TValue> Duplicates
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<TValue>*& dyn_Duplicates() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ProBuilder::KdTree::KdTreeNode_2::dyn_Duplicates");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Duplicates"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey,TValue> LeftChild
    [[deprecated("Use field access instead!")]] ::UnityEngine::ProBuilder::KdTree::KdTreeNode_2<TKey, TValue>*& dyn_LeftChild() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ProBuilder::KdTree::KdTreeNode_2::dyn_LeftChild");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LeftChild"))->offset;
      return *reinterpret_cast<::UnityEngine::ProBuilder::KdTree::KdTreeNode_2<TKey, TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey,TValue> RightChild
    [[deprecated("Use field access instead!")]] ::UnityEngine::ProBuilder::KdTree::KdTreeNode_2<TKey, TValue>*& dyn_RightChild() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ProBuilder::KdTree::KdTreeNode_2::dyn_RightChild");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RightChild"))->offset;
      return *reinterpret_cast<::UnityEngine::ProBuilder::KdTree::KdTreeNode_2<TKey, TValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey,TValue> get_Item(System.Int32 compare)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::ProBuilder::KdTree::KdTreeNode_2<TKey, TValue>* get_Item(int compare) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ProBuilder::KdTree::KdTreeNode_2::get_Item");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compare)})));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ProBuilder::KdTree::KdTreeNode_2<TKey, TValue>*, false>(this, ___internal__method, compare);
    }
    // System.Void set_Item(System.Int32 compare, UnityEngine.ProBuilder.KdTree.KdTreeNode`2<TKey,TValue> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Item(int compare, ::UnityEngine::ProBuilder::KdTree::KdTreeNode_2<TKey, TValue>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ProBuilder::KdTree::KdTreeNode_2::set_Item");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compare), ::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, compare, value);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static KdTreeNode_2<TKey, TValue>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ProBuilder::KdTree::KdTreeNode_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<KdTreeNode_2<TKey, TValue>*, creationType>()));
    }
    // public System.Void .ctor(TKey[] point, TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static KdTreeNode_2<TKey, TValue>* New_ctor(::ArrayW<TKey> point, TValue value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ProBuilder::KdTree::KdTreeNode_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<KdTreeNode_2<TKey, TValue>*, creationType>(point, value)));
    }
    // public System.Void AddDuplicate(TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void AddDuplicate(TValue value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ProBuilder::KdTree::KdTreeNode_2::AddDuplicate");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDuplicate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public override System.String ToString()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ProBuilder::KdTree::KdTreeNode_2::ToString");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
    }
  }; // UnityEngine.ProBuilder.KdTree.KdTreeNode`2
  // Could not write size check! Type: UnityEngine.ProBuilder.KdTree.KdTreeNode`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
