// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.ProBuilder.Edge
#include "UnityEngine/ProBuilder/Edge.hpp"
// Including type: UnityEngine.HideFlags
#include "UnityEngine/HideFlags.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: System.UInt32
#include "System/UInt32.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: UnityEngine::ProBuilder
namespace UnityEngine::ProBuilder {
  // Forward declaring type: Face
  class Face;
  // Forward declaring type: SharedVertex
  class SharedVertex;
  // Forward declaring type: UnwrapParameters
  class UnwrapParameters;
  // Forward declaring type: MeshSyncState
  struct MeshSyncState;
  // Forward declaring type: MeshArrays
  struct MeshArrays;
  // Forward declaring type: Vertex
  class Vertex;
  // Forward declaring type: RefreshMask
  struct RefreshMask;
  // Forward declaring type: AutoUnwrapSettings
  struct AutoUnwrapSettings;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: MeshRenderer
  class MeshRenderer;
  // Forward declaring type: MeshFilter
  class MeshFilter;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: MeshTopology
  struct MeshTopology;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Collections::ObjectModel
namespace System::Collections::ObjectModel {
  // Forward declaring type: ReadOnlyCollection`1<T>
  template<typename T>
  class ReadOnlyCollection_1;
}
// Completed forward declares
// Type namespace: UnityEngine.ProBuilder
namespace UnityEngine::ProBuilder {
  // Forward declaring type: ProBuilderMesh
  class ProBuilderMesh;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ProBuilder::ProBuilderMesh);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ProBuilder::ProBuilderMesh*, "UnityEngine.ProBuilder", "ProBuilderMesh");
// Type namespace: UnityEngine.ProBuilder
namespace UnityEngine::ProBuilder {
  // Size: 0x100
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.ProBuilder.ProBuilderMesh
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: 1151460
  // [RequireComponent] Offset: 1151460
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  // [ExecuteInEditMode] Offset: FFFFFFFF
  // [ExcludeFromPresetAttribute] Offset: FFFFFFFF
  // [ExcludeFromObjectFactoryAttribute] Offset: FFFFFFFF
  class ProBuilderMesh : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::UnityEngine::ProBuilder::ProBuilderMesh::CacheValidState
    struct CacheValidState;
    // Nested type: ::UnityEngine::ProBuilder::ProBuilderMesh::$$c
    class $$c;
    // Nested type: ::UnityEngine::ProBuilder::ProBuilderMesh::$$c__DisplayClass150_0
    class $$c__DisplayClass150_0;
    // Nested type: ::UnityEngine::ProBuilder::ProBuilderMesh::$$c__DisplayClass152_0
    class $$c__DisplayClass152_0;
    // Size: 0x1
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.ProBuilder.ProBuilderMesh/UnityEngine.ProBuilder.CacheValidState
    // [TokenAttribute] Offset: FFFFFFFF
    // [FlagsAttribute] Offset: FFFFFFFF
    struct CacheValidState/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Byte value__
      // Size: 0x1
      // Offset: 0x0
      uint8_t value;
      // Field size check
      static_assert(sizeof(uint8_t) == 0x1);
      public:
      // Creating value type constructor for type: CacheValidState
      constexpr CacheValidState(uint8_t value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator uint8_t
      constexpr operator uint8_t() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.ProBuilder.ProBuilderMesh/UnityEngine.ProBuilder.CacheValidState SharedVertex
      static constexpr const uint8_t SharedVertex = 1u;
      // Get static field: static public UnityEngine.ProBuilder.ProBuilderMesh/UnityEngine.ProBuilder.CacheValidState SharedVertex
      static ::UnityEngine::ProBuilder::ProBuilderMesh::CacheValidState _get_SharedVertex();
      // Set static field: static public UnityEngine.ProBuilder.ProBuilderMesh/UnityEngine.ProBuilder.CacheValidState SharedVertex
      static void _set_SharedVertex(::UnityEngine::ProBuilder::ProBuilderMesh::CacheValidState value);
      // static field const value: static public UnityEngine.ProBuilder.ProBuilderMesh/UnityEngine.ProBuilder.CacheValidState SharedTexture
      static constexpr const uint8_t SharedTexture = 2u;
      // Get static field: static public UnityEngine.ProBuilder.ProBuilderMesh/UnityEngine.ProBuilder.CacheValidState SharedTexture
      static ::UnityEngine::ProBuilder::ProBuilderMesh::CacheValidState _get_SharedTexture();
      // Set static field: static public UnityEngine.ProBuilder.ProBuilderMesh/UnityEngine.ProBuilder.CacheValidState SharedTexture
      static void _set_SharedTexture(::UnityEngine::ProBuilder::ProBuilderMesh::CacheValidState value);
      // Get instance field reference: public System.Byte value__
      [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
    }; // UnityEngine.ProBuilder.ProBuilderMesh/UnityEngine.ProBuilder.CacheValidState
    #pragma pack(pop)
    static check_size<sizeof(ProBuilderMesh::CacheValidState), 0 + sizeof(uint8_t)> __UnityEngine_ProBuilder_ProBuilderMesh_CacheValidStateSizeCheck;
    static_assert(sizeof(ProBuilderMesh::CacheValidState) == 0x1);
    public:
    // private System.Int32 m_MeshFormatVersion
    // Size: 0x4
    // Offset: 0x18
    int m_MeshFormatVersion;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_MeshFormatVersion and: m_Faces
    char __padding0[0x4] = {};
    // [FormerlySerializedAsAttribute] Offset: 0x1153484
    // private UnityEngine.ProBuilder.Face[] m_Faces
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::UnityEngine::ProBuilder::Face*> m_Faces;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::ProBuilder::Face*>) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x11534D0
    // [FormerlySerializedAsAttribute] Offset: 0x11534D0
    // private UnityEngine.ProBuilder.SharedVertex[] m_SharedVertices
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::UnityEngine::ProBuilder::SharedVertex*> m_SharedVertices;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::ProBuilder::SharedVertex*>) == 0x8);
    // private UnityEngine.ProBuilder.ProBuilderMesh/UnityEngine.ProBuilder.CacheValidState m_CacheValid
    // Size: 0x1
    // Offset: 0x30
    ::UnityEngine::ProBuilder::ProBuilderMesh::CacheValidState m_CacheValid;
    // Field size check
    static_assert(sizeof(::UnityEngine::ProBuilder::ProBuilderMesh::CacheValidState) == 0x1);
    // Padding between fields: m_CacheValid and: m_SharedVertexLookup
    char __padding3[0x7] = {};
    // private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> m_SharedVertexLookup
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::Dictionary_2<int, int>* m_SharedVertexLookup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<int, int>*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x1153540
    // private UnityEngine.ProBuilder.SharedVertex[] m_SharedTextures
    // Size: 0x8
    // Offset: 0x40
    ::ArrayW<::UnityEngine::ProBuilder::SharedVertex*> m_SharedTextures;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::ProBuilder::SharedVertex*>) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> m_SharedTextureLookup
    // Size: 0x8
    // Offset: 0x48
    ::System::Collections::Generic::Dictionary_2<int, int>* m_SharedTextureLookup;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<int, int>*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x115358C
    // private UnityEngine.Vector3[] m_Positions
    // Size: 0x8
    // Offset: 0x50
    ::ArrayW<::UnityEngine::Vector3> m_Positions;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Vector3>) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x11535D8
    // private UnityEngine.Vector2[] m_Textures0
    // Size: 0x8
    // Offset: 0x58
    ::ArrayW<::UnityEngine::Vector2> m_Textures0;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Vector2>) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x1153624
    // private System.Collections.Generic.List`1<UnityEngine.Vector4> m_Textures2
    // Size: 0x8
    // Offset: 0x60
    ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* m_Textures2;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Vector4>*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x1153670
    // private System.Collections.Generic.List`1<UnityEngine.Vector4> m_Textures3
    // Size: 0x8
    // Offset: 0x68
    ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* m_Textures3;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Vector4>*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x11536BC
    // private UnityEngine.Vector4[] m_Tangents
    // Size: 0x8
    // Offset: 0x70
    ::ArrayW<::UnityEngine::Vector4> m_Tangents;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Vector4>) == 0x8);
    // private UnityEngine.Vector3[] m_Normals
    // Size: 0x8
    // Offset: 0x78
    ::ArrayW<::UnityEngine::Vector3> m_Normals;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Vector3>) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x1153708
    // private UnityEngine.Color[] m_Colors
    // Size: 0x8
    // Offset: 0x80
    ::ArrayW<::UnityEngine::Color> m_Colors;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Color>) == 0x8);
    // private System.Boolean <userCollisions>k__BackingField
    // Size: 0x1
    // Offset: 0x88
    bool userCollisions;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: userCollisions and: m_UnwrapParameters
    char __padding14[0x7] = {};
    // [FormerlySerializedAsAttribute] Offset: 0x1153764
    // private UnityEngine.ProBuilder.UnwrapParameters m_UnwrapParameters
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::ProBuilder::UnwrapParameters* m_UnwrapParameters;
    // Field size check
    static_assert(sizeof(::UnityEngine::ProBuilder::UnwrapParameters*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x11537B0
    // private System.Boolean m_PreserveMeshAssetOnDestroy
    // Size: 0x1
    // Offset: 0x98
    bool m_PreserveMeshAssetOnDestroy;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_PreserveMeshAssetOnDestroy and: assetGuid
    char __padding16[0x7] = {};
    // System.String assetGuid
    // Size: 0x8
    // Offset: 0xA0
    ::StringW assetGuid;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.Mesh m_Mesh
    // Size: 0x8
    // Offset: 0xA8
    ::UnityEngine::Mesh* m_Mesh;
    // Field size check
    static_assert(sizeof(::UnityEngine::Mesh*) == 0x8);
    // private UnityEngine.MeshRenderer m_MeshRenderer
    // Size: 0x8
    // Offset: 0xB0
    ::UnityEngine::MeshRenderer* m_MeshRenderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshRenderer*) == 0x8);
    // private UnityEngine.MeshFilter m_MeshFilter
    // Size: 0x8
    // Offset: 0xB8
    ::UnityEngine::MeshFilter* m_MeshFilter;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshFilter*) == 0x8);
    // private System.Boolean m_IsSelectable
    // Size: 0x1
    // Offset: 0xC0
    bool m_IsSelectable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_IsSelectable and: m_SelectedFaces
    char __padding21[0x7] = {};
    // private System.Int32[] m_SelectedFaces
    // Size: 0x8
    // Offset: 0xC8
    ::ArrayW<int> m_SelectedFaces;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private UnityEngine.ProBuilder.Edge[] m_SelectedEdges
    // Size: 0x8
    // Offset: 0xD0
    ::ArrayW<::UnityEngine::ProBuilder::Edge> m_SelectedEdges;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::ProBuilder::Edge>) == 0x8);
    // private System.Int32[] m_SelectedVertices
    // Size: 0x8
    // Offset: 0xD8
    ::ArrayW<int> m_SelectedVertices;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private System.Boolean m_SelectedCacheDirty
    // Size: 0x1
    // Offset: 0xE0
    bool m_SelectedCacheDirty;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_SelectedCacheDirty and: m_SelectedSharedVerticesCount
    char __padding25[0x3] = {};
    // private System.Int32 m_SelectedSharedVerticesCount
    // Size: 0x4
    // Offset: 0xE4
    int m_SelectedSharedVerticesCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_SelectedCoincidentVertexCount
    // Size: 0x4
    // Offset: 0xE8
    int m_SelectedCoincidentVertexCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_SelectedCoincidentVertexCount and: m_SelectedSharedVertices
    char __padding27[0x4] = {};
    // private System.Collections.Generic.HashSet`1<System.Int32> m_SelectedSharedVertices
    // Size: 0x8
    // Offset: 0xF0
    ::System::Collections::Generic::HashSet_1<int>* m_SelectedSharedVertices;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::HashSet_1<int>*) == 0x8);
    // private System.Collections.Generic.List`1<System.Int32> m_SelectedCoincidentVertices
    // Size: 0x8
    // Offset: 0xF8
    ::System::Collections::Generic::List_1<int>* m_SelectedCoincidentVertices;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<int>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // static field const value: static UnityEngine.HideFlags k_MeshFilterHideFlags
    static constexpr const int k_MeshFilterHideFlags = 10;
    // Get static field: static UnityEngine.HideFlags k_MeshFilterHideFlags
    static ::UnityEngine::HideFlags _get_k_MeshFilterHideFlags();
    // Set static field: static UnityEngine.HideFlags k_MeshFilterHideFlags
    static void _set_k_MeshFilterHideFlags(::UnityEngine::HideFlags value);
    // static field const value: static private System.Int32 k_UVChannelCount
    static constexpr const int k_UVChannelCount = 4;
    // Get static field: static private System.Int32 k_UVChannelCount
    static int _get_k_UVChannelCount();
    // Set static field: static private System.Int32 k_UVChannelCount
    static void _set_k_UVChannelCount(int value);
    // static field const value: static private System.Int32 k_MeshFormatVersion
    static constexpr const int k_MeshFormatVersion = 1;
    // Get static field: static private System.Int32 k_MeshFormatVersion
    static int _get_k_MeshFormatVersion();
    // Set static field: static private System.Int32 k_MeshFormatVersion
    static void _set_k_MeshFormatVersion(int value);
    // static field const value: static private System.Int32 k_MeshFormatVersionSubmeshMaterialRefactor
    static constexpr const int k_MeshFormatVersionSubmeshMaterialRefactor = 1;
    // Get static field: static private System.Int32 k_MeshFormatVersionSubmeshMaterialRefactor
    static int _get_k_MeshFormatVersionSubmeshMaterialRefactor();
    // Set static field: static private System.Int32 k_MeshFormatVersionSubmeshMaterialRefactor
    static void _set_k_MeshFormatVersionSubmeshMaterialRefactor(int value);
    // static field const value: static public System.UInt32 maxVertexCount
    static constexpr const uint maxVertexCount = 65535u;
    // Get static field: static public System.UInt32 maxVertexCount
    static uint _get_maxVertexCount();
    // Set static field: static public System.UInt32 maxVertexCount
    static void _set_maxVertexCount(uint value);
    // Get static field: static private System.Action`1<UnityEngine.ProBuilder.ProBuilderMesh> meshWillBeDestroyed
    static ::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>* _get_meshWillBeDestroyed();
    // Set static field: static private System.Action`1<UnityEngine.ProBuilder.ProBuilderMesh> meshWillBeDestroyed
    static void _set_meshWillBeDestroyed(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>* value);
    // Get static field: static private System.Action`1<UnityEngine.ProBuilder.ProBuilderMesh> componentWillBeDestroyed
    static ::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>* _get_componentWillBeDestroyed();
    // Set static field: static private System.Action`1<UnityEngine.ProBuilder.ProBuilderMesh> componentWillBeDestroyed
    static void _set_componentWillBeDestroyed(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>* value);
    // Get static field: static private System.Action`1<UnityEngine.ProBuilder.ProBuilderMesh> componentHasBeenReset
    static ::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>* _get_componentHasBeenReset();
    // Set static field: static private System.Action`1<UnityEngine.ProBuilder.ProBuilderMesh> componentHasBeenReset
    static void _set_componentHasBeenReset(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>* value);
    // Get static field: static private System.Action`1<UnityEngine.ProBuilder.ProBuilderMesh> elementSelectionChanged
    static ::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>* _get_elementSelectionChanged();
    // Set static field: static private System.Action`1<UnityEngine.ProBuilder.ProBuilderMesh> elementSelectionChanged
    static void _set_elementSelectionChanged(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>* value);
    // Get static field: static private System.Collections.Generic.HashSet`1<System.Int32> s_CachedHashSet
    static ::System::Collections::Generic::HashSet_1<int>* _get_s_CachedHashSet();
    // Set static field: static private System.Collections.Generic.HashSet`1<System.Int32> s_CachedHashSet
    static void _set_s_CachedHashSet(::System::Collections::Generic::HashSet_1<int>* value);
    // Get instance field reference: private System.Int32 m_MeshFormatVersion
    [[deprecated("Use field access instead!")]] int& dyn_m_MeshFormatVersion();
    // Get instance field reference: private UnityEngine.ProBuilder.Face[] m_Faces
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::ProBuilder::Face*>& dyn_m_Faces();
    // Get instance field reference: private UnityEngine.ProBuilder.SharedVertex[] m_SharedVertices
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::ProBuilder::SharedVertex*>& dyn_m_SharedVertices();
    // Get instance field reference: private UnityEngine.ProBuilder.ProBuilderMesh/UnityEngine.ProBuilder.CacheValidState m_CacheValid
    [[deprecated("Use field access instead!")]] ::UnityEngine::ProBuilder::ProBuilderMesh::CacheValidState& dyn_m_CacheValid();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> m_SharedVertexLookup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, int>*& dyn_m_SharedVertexLookup();
    // Get instance field reference: private UnityEngine.ProBuilder.SharedVertex[] m_SharedTextures
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::ProBuilder::SharedVertex*>& dyn_m_SharedTextures();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> m_SharedTextureLookup
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, int>*& dyn_m_SharedTextureLookup();
    // Get instance field reference: private UnityEngine.Vector3[] m_Positions
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& dyn_m_Positions();
    // Get instance field reference: private UnityEngine.Vector2[] m_Textures0
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2>& dyn_m_Textures0();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Vector4> m_Textures2
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*& dyn_m_Textures2();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Vector4> m_Textures3
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*& dyn_m_Textures3();
    // Get instance field reference: private UnityEngine.Vector4[] m_Tangents
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector4>& dyn_m_Tangents();
    // Get instance field reference: private UnityEngine.Vector3[] m_Normals
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& dyn_m_Normals();
    // Get instance field reference: private UnityEngine.Color[] m_Colors
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& dyn_m_Colors();
    // Get instance field reference: private System.Boolean <userCollisions>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$userCollisions$k__BackingField();
    // Get instance field reference: private UnityEngine.ProBuilder.UnwrapParameters m_UnwrapParameters
    [[deprecated("Use field access instead!")]] ::UnityEngine::ProBuilder::UnwrapParameters*& dyn_m_UnwrapParameters();
    // Get instance field reference: private System.Boolean m_PreserveMeshAssetOnDestroy
    [[deprecated("Use field access instead!")]] bool& dyn_m_PreserveMeshAssetOnDestroy();
    // Get instance field reference: System.String assetGuid
    [[deprecated("Use field access instead!")]] ::StringW& dyn_assetGuid();
    // Get instance field reference: private UnityEngine.Mesh m_Mesh
    [[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& dyn_m_Mesh();
    // Get instance field reference: private UnityEngine.MeshRenderer m_MeshRenderer
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& dyn_m_MeshRenderer();
    // Get instance field reference: private UnityEngine.MeshFilter m_MeshFilter
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& dyn_m_MeshFilter();
    // Get instance field reference: private System.Boolean m_IsSelectable
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsSelectable();
    // Get instance field reference: private System.Int32[] m_SelectedFaces
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_m_SelectedFaces();
    // Get instance field reference: private UnityEngine.ProBuilder.Edge[] m_SelectedEdges
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::ProBuilder::Edge>& dyn_m_SelectedEdges();
    // Get instance field reference: private System.Int32[] m_SelectedVertices
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_m_SelectedVertices();
    // Get instance field reference: private System.Boolean m_SelectedCacheDirty
    [[deprecated("Use field access instead!")]] bool& dyn_m_SelectedCacheDirty();
    // Get instance field reference: private System.Int32 m_SelectedSharedVerticesCount
    [[deprecated("Use field access instead!")]] int& dyn_m_SelectedSharedVerticesCount();
    // Get instance field reference: private System.Int32 m_SelectedCoincidentVertexCount
    [[deprecated("Use field access instead!")]] int& dyn_m_SelectedCoincidentVertexCount();
    // Get instance field reference: private System.Collections.Generic.HashSet`1<System.Int32> m_SelectedSharedVertices
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<int>*& dyn_m_SelectedSharedVertices();
    // Get instance field reference: private System.Collections.Generic.List`1<System.Int32> m_SelectedCoincidentVertices
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& dyn_m_SelectedCoincidentVertices();
    // public System.Boolean get_userCollisions()
    // Offset: 0x1A0B9D8
    bool get_userCollisions();
    // public System.Void set_userCollisions(System.Boolean value)
    // Offset: 0x1A0B9E0
    void set_userCollisions(bool value);
    // public UnityEngine.ProBuilder.UnwrapParameters get_unwrapParameters()
    // Offset: 0x1A0B9EC
    ::UnityEngine::ProBuilder::UnwrapParameters* get_unwrapParameters();
    // public System.Void set_unwrapParameters(UnityEngine.ProBuilder.UnwrapParameters value)
    // Offset: 0x1A0B9F4
    void set_unwrapParameters(::UnityEngine::ProBuilder::UnwrapParameters* value);
    // UnityEngine.MeshRenderer get_renderer()
    // Offset: 0x1A0B9FC
    ::UnityEngine::MeshRenderer* get_renderer();
    // UnityEngine.MeshFilter get_filter()
    // Offset: 0x1A0BA78
    ::UnityEngine::MeshFilter* get_filter();
    // public System.Boolean get_preserveMeshAssetOnDestroy()
    // Offset: 0x1A0BB34
    bool get_preserveMeshAssetOnDestroy();
    // public System.Void set_preserveMeshAssetOnDestroy(System.Boolean value)
    // Offset: 0x1A0BB3C
    void set_preserveMeshAssetOnDestroy(bool value);
    // UnityEngine.ProBuilder.Face[] get_facesInternal()
    // Offset: 0x1A0BE28
    ::ArrayW<::UnityEngine::ProBuilder::Face*> get_facesInternal();
    // System.Void set_facesInternal(UnityEngine.ProBuilder.Face[] value)
    // Offset: 0x1A0BE30
    void set_facesInternal(::ArrayW<::UnityEngine::ProBuilder::Face*> value);
    // public System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Face> get_faces()
    // Offset: 0x1A0BE38
    ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Face*>* get_faces();
    // public System.Void set_faces(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Face> value)
    // Offset: 0x1A0BEA8
    void set_faces(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Face*>* value);
    // UnityEngine.ProBuilder.SharedVertex[] get_sharedVerticesInternal()
    // Offset: 0x1A0C33C
    ::ArrayW<::UnityEngine::ProBuilder::SharedVertex*> get_sharedVerticesInternal();
    // System.Void set_sharedVerticesInternal(UnityEngine.ProBuilder.SharedVertex[] value)
    // Offset: 0x1A0C344
    void set_sharedVerticesInternal(::ArrayW<::UnityEngine::ProBuilder::SharedVertex*> value);
    // public System.Collections.Generic.IList`1<UnityEngine.ProBuilder.SharedVertex> get_sharedVertices()
    // Offset: 0x1A0C34C
    ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SharedVertex*>* get_sharedVertices();
    // public System.Void set_sharedVertices(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.SharedVertex> value)
    // Offset: 0x1A0C3BC
    void set_sharedVertices(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SharedVertex*>* value);
    // System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> get_sharedVertexLookup()
    // Offset: 0x1A0C5F4
    ::System::Collections::Generic::Dictionary_2<int, int>* get_sharedVertexLookup();
    // UnityEngine.ProBuilder.SharedVertex[] get_sharedTextures()
    // Offset: 0x1A0C72C
    ::ArrayW<::UnityEngine::ProBuilder::SharedVertex*> get_sharedTextures();
    // System.Void set_sharedTextures(UnityEngine.ProBuilder.SharedVertex[] value)
    // Offset: 0x1A0C734
    void set_sharedTextures(::ArrayW<::UnityEngine::ProBuilder::SharedVertex*> value);
    // System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> get_sharedTextureLookup()
    // Offset: 0x1A0C73C
    ::System::Collections::Generic::Dictionary_2<int, int>* get_sharedTextureLookup();
    // UnityEngine.Vector3[] get_positionsInternal()
    // Offset: 0x1A0C884
    ::ArrayW<::UnityEngine::Vector3> get_positionsInternal();
    // System.Void set_positionsInternal(UnityEngine.Vector3[] value)
    // Offset: 0x1A0C88C
    void set_positionsInternal(::ArrayW<::UnityEngine::Vector3> value);
    // public System.Collections.Generic.IList`1<UnityEngine.Vector3> get_positions()
    // Offset: 0x1A0C894
    ::System::Collections::Generic::IList_1<::UnityEngine::Vector3>* get_positions();
    // public System.Void set_positions(System.Collections.Generic.IList`1<UnityEngine.Vector3> value)
    // Offset: 0x1A0C904
    void set_positions(::System::Collections::Generic::IList_1<::UnityEngine::Vector3>* value);
    // public System.Collections.Generic.IList`1<UnityEngine.Vector3> get_normals()
    // Offset: 0x1A0D7AC
    ::System::Collections::Generic::IList_1<::UnityEngine::Vector3>* get_normals();
    // UnityEngine.Vector3[] get_normalsInternal()
    // Offset: 0x1A0D828
    ::ArrayW<::UnityEngine::Vector3> get_normalsInternal();
    // System.Void set_normalsInternal(UnityEngine.Vector3[] value)
    // Offset: 0x1A0D830
    void set_normalsInternal(::ArrayW<::UnityEngine::Vector3> value);
    // UnityEngine.Color[] get_colorsInternal()
    // Offset: 0x1A0D838
    ::ArrayW<::UnityEngine::Color> get_colorsInternal();
    // System.Void set_colorsInternal(UnityEngine.Color[] value)
    // Offset: 0x1A0D840
    void set_colorsInternal(::ArrayW<::UnityEngine::Color> value);
    // public System.Collections.Generic.IList`1<UnityEngine.Color> get_colors()
    // Offset: 0x1A0D848
    ::System::Collections::Generic::IList_1<::UnityEngine::Color>* get_colors();
    // public System.Void set_colors(System.Collections.Generic.IList`1<UnityEngine.Color> value)
    // Offset: 0x1A0D8C4
    void set_colors(::System::Collections::Generic::IList_1<::UnityEngine::Color>* value);
    // public System.Collections.Generic.IList`1<UnityEngine.Vector4> get_tangents()
    // Offset: 0x1A0DA3C
    ::System::Collections::Generic::IList_1<::UnityEngine::Vector4>* get_tangents();
    // public System.Void set_tangents(System.Collections.Generic.IList`1<UnityEngine.Vector4> value)
    // Offset: 0x1A0DAD0
    void set_tangents(::System::Collections::Generic::IList_1<::UnityEngine::Vector4>* value);
    // UnityEngine.Vector4[] get_tangentsInternal()
    // Offset: 0x1A0DBB0
    ::ArrayW<::UnityEngine::Vector4> get_tangentsInternal();
    // System.Void set_tangentsInternal(UnityEngine.Vector4[] value)
    // Offset: 0x1A0DBB8
    void set_tangentsInternal(::ArrayW<::UnityEngine::Vector4> value);
    // UnityEngine.Vector2[] get_texturesInternal()
    // Offset: 0x1A0DBC0
    ::ArrayW<::UnityEngine::Vector2> get_texturesInternal();
    // System.Void set_texturesInternal(UnityEngine.Vector2[] value)
    // Offset: 0x1A0DBC8
    void set_texturesInternal(::ArrayW<::UnityEngine::Vector2> value);
    // public System.Collections.Generic.IList`1<UnityEngine.Vector2> get_textures()
    // Offset: 0x1A0DBD0
    ::System::Collections::Generic::IList_1<::UnityEngine::Vector2>* get_textures();
    // public System.Void set_textures(System.Collections.Generic.IList`1<UnityEngine.Vector2> value)
    // Offset: 0x1A0DC4C
    void set_textures(::System::Collections::Generic::IList_1<::UnityEngine::Vector2>* value);
    // public System.Int32 get_faceCount()
    // Offset: 0x1A0E0F4
    int get_faceCount();
    // public System.Int32 get_vertexCount()
    // Offset: 0x1A0BD34
    int get_vertexCount();
    // public System.Int32 get_edgeCount()
    // Offset: 0x1A0E10C
    int get_edgeCount();
    // public System.Int32 get_indexCount()
    // Offset: 0x1A0E1A4
    int get_indexCount();
    // public System.Int32 get_triangleCount()
    // Offset: 0x1A0E2AC
    int get_triangleCount();
    // UnityEngine.Mesh get_mesh()
    // Offset: 0x1A0BD4C
    ::UnityEngine::Mesh* get_mesh();
    // System.Void set_mesh(UnityEngine.Mesh value)
    // Offset: 0x1A0EB3C
    void set_mesh(::UnityEngine::Mesh* value);
    // System.Int32 get_id()
    // Offset: 0x1A0EB44
    int get_id();
    // public UnityEngine.ProBuilder.MeshSyncState get_meshSyncState()
    // Offset: 0x1A0EB68
    ::UnityEngine::ProBuilder::MeshSyncState get_meshSyncState();
    // public System.Boolean get_selectable()
    // Offset: 0x1A127FC
    bool get_selectable();
    // public System.Void set_selectable(System.Boolean value)
    // Offset: 0x1A12804
    void set_selectable(bool value);
    // public System.Int32 get_selectedFaceCount()
    // Offset: 0x1A12810
    int get_selectedFaceCount();
    // public System.Int32 get_selectedVertexCount()
    // Offset: 0x1A1282C
    int get_selectedVertexCount();
    // public System.Int32 get_selectedEdgeCount()
    // Offset: 0x1A12848
    int get_selectedEdgeCount();
    // System.Int32 get_selectedSharedVerticesCount()
    // Offset: 0x1A12864
    int get_selectedSharedVerticesCount();
    // System.Int32 get_selectedCoincidentVertexCount()
    // Offset: 0x1A12D20
    int get_selectedCoincidentVertexCount();
    // System.Collections.Generic.IEnumerable`1<System.Int32> get_selectedSharedVertices()
    // Offset: 0x1A12D44
    ::System::Collections::Generic::IEnumerable_1<int>* get_selectedSharedVertices();
    // System.Collections.Generic.IEnumerable`1<System.Int32> get_selectedCoincidentVertices()
    // Offset: 0x1A12D68
    ::System::Collections::Generic::IEnumerable_1<int>* get_selectedCoincidentVertices();
    // public System.Collections.ObjectModel.ReadOnlyCollection`1<System.Int32> get_selectedFaceIndexes()
    // Offset: 0x1A12EA0
    ::System::Collections::ObjectModel::ReadOnlyCollection_1<int>* get_selectedFaceIndexes();
    // public System.Collections.ObjectModel.ReadOnlyCollection`1<System.Int32> get_selectedVertices()
    // Offset: 0x1A12F10
    ::System::Collections::ObjectModel::ReadOnlyCollection_1<int>* get_selectedVertices();
    // public System.Collections.ObjectModel.ReadOnlyCollection`1<UnityEngine.ProBuilder.Edge> get_selectedEdges()
    // Offset: 0x1A12F80
    ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::Edge>* get_selectedEdges();
    // UnityEngine.ProBuilder.Face[] get_selectedFacesInternal()
    // Offset: 0x1A12FF0
    ::ArrayW<::UnityEngine::ProBuilder::Face*> get_selectedFacesInternal();
    // System.Void set_selectedFacesInternal(UnityEngine.ProBuilder.Face[] value)
    // Offset: 0x1A12FF4
    void set_selectedFacesInternal(::ArrayW<::UnityEngine::ProBuilder::Face*> value);
    // System.Int32[] get_selectedFaceIndicesInternal()
    // Offset: 0x1A130A0
    ::ArrayW<int> get_selectedFaceIndicesInternal();
    // System.Void set_selectedFaceIndicesInternal(System.Int32[] value)
    // Offset: 0x1A130A8
    void set_selectedFaceIndicesInternal(::ArrayW<int> value);
    // UnityEngine.ProBuilder.Edge[] get_selectedEdgesInternal()
    // Offset: 0x1A130B0
    ::ArrayW<::UnityEngine::ProBuilder::Edge> get_selectedEdgesInternal();
    // System.Void set_selectedEdgesInternal(UnityEngine.ProBuilder.Edge[] value)
    // Offset: 0x1A130B8
    void set_selectedEdgesInternal(::ArrayW<::UnityEngine::ProBuilder::Edge> value);
    // System.Int32[] get_selectedIndexesInternal()
    // Offset: 0x1A130C0
    ::ArrayW<int> get_selectedIndexesInternal();
    // System.Void set_selectedIndexesInternal(System.Int32[] value)
    // Offset: 0x1A130C8
    void set_selectedIndexesInternal(::ArrayW<int> value);
    // static public System.Void add_meshWillBeDestroyed(System.Action`1<UnityEngine.ProBuilder.ProBuilderMesh> value)
    // Offset: 0x1A0E3C4
    static void add_meshWillBeDestroyed(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>* value);
    // static public System.Void remove_meshWillBeDestroyed(System.Action`1<UnityEngine.ProBuilder.ProBuilderMesh> value)
    // Offset: 0x1A0E4B0
    static void remove_meshWillBeDestroyed(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>* value);
    // static System.Void add_componentWillBeDestroyed(System.Action`1<UnityEngine.ProBuilder.ProBuilderMesh> value)
    // Offset: 0x1A0E59C
    static void add_componentWillBeDestroyed(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>* value);
    // static System.Void remove_componentWillBeDestroyed(System.Action`1<UnityEngine.ProBuilder.ProBuilderMesh> value)
    // Offset: 0x1A0E68C
    static void remove_componentWillBeDestroyed(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>* value);
    // static System.Void add_componentHasBeenReset(System.Action`1<UnityEngine.ProBuilder.ProBuilderMesh> value)
    // Offset: 0x1A0E77C
    static void add_componentHasBeenReset(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>* value);
    // static System.Void remove_componentHasBeenReset(System.Action`1<UnityEngine.ProBuilder.ProBuilderMesh> value)
    // Offset: 0x1A0E86C
    static void remove_componentHasBeenReset(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>* value);
    // static public System.Void add_elementSelectionChanged(System.Action`1<UnityEngine.ProBuilder.ProBuilderMesh> value)
    // Offset: 0x1A0E95C
    static void add_elementSelectionChanged(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>* value);
    // static public System.Void remove_elementSelectionChanged(System.Action`1<UnityEngine.ProBuilder.ProBuilderMesh> value)
    // Offset: 0x1A0EA4C
    static void remove_elementSelectionChanged(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>* value);
    // public System.Void .ctor()
    // Offset: 0x1A137BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ProBuilderMesh* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ProBuilder::ProBuilderMesh::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ProBuilderMesh*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x1A1389C
    static void _cctor();
    // public System.Boolean HasArrays(UnityEngine.ProBuilder.MeshArrays channels)
    // Offset: 0x1A0BB48
    bool HasArrays(::UnityEngine::ProBuilder::MeshArrays channels);
    // System.Void InvalidateSharedVertexLookup()
    // Offset: 0x1A0BF4C
    void InvalidateSharedVertexLookup();
    // System.Void InvalidateSharedTextureLookup()
    // Offset: 0x1A0BFE4
    void InvalidateSharedTextureLookup();
    // System.Void InvalidateFaces()
    // Offset: 0x1A0C07C
    void InvalidateFaces();
    // System.Void InvalidateCaches()
    // Offset: 0x1A0C304
    void InvalidateCaches();
    // System.Void SetSharedVertices(System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<System.Int32,System.Int32>> indexes)
    // Offset: 0x1A0C68C
    void SetSharedVertices(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int, int>>* indexes);
    // System.Void SetSharedTextures(System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<System.Int32,System.Int32>> indexes)
    // Offset: 0x1A0C7E4
    void SetSharedTextures(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int, int>>* indexes);
    // public UnityEngine.ProBuilder.Vertex[] GetVertices(System.Collections.Generic.IList`1<System.Int32> indexes)
    // Offset: 0x1A0C9A8
    ::ArrayW<::UnityEngine::ProBuilder::Vertex*> GetVertices(::System::Collections::Generic::IList_1<int>* indexes);
    // public System.Void SetVertices(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Vertex> vertices, System.Boolean applyMesh)
    // Offset: 0x1A0D434
    void SetVertices(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Vertex*>* vertices, bool applyMesh);
    // public UnityEngine.Vector3[] GetNormals()
    // Offset: 0x1A0D0D0
    ::ArrayW<::UnityEngine::Vector3> GetNormals();
    // public UnityEngine.Color[] GetColors()
    // Offset: 0x1A0D9A4
    ::ArrayW<::UnityEngine::Color> GetColors();
    // public UnityEngine.Vector4[] GetTangents()
    // Offset: 0x1A0D040
    ::ArrayW<::UnityEngine::Vector4> GetTangents();
    // public System.Void GetUVs(System.Int32 channel, System.Collections.Generic.List`1<UnityEngine.Vector4> uvs)
    // Offset: 0x1A0D160
    void GetUVs(int channel, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* uvs);
    // System.Collections.ObjectModel.ReadOnlyCollection`1<UnityEngine.Vector2> GetUVs(System.Int32 channel)
    // Offset: 0x1A0DD20
    ::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Vector2>* GetUVs(int channel);
    // public System.Void SetUVs(System.Int32 channel, System.Collections.Generic.List`1<UnityEngine.Vector4> uvs)
    // Offset: 0x1A0DE28
    void SetUVs(int channel, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>* uvs);
    // private System.Void Awake()
    // Offset: 0x1A0EC84
    void Awake();
    // private System.Void Reset()
    // Offset: 0x1A0EF6C
    void Reset();
    // private System.Void OnDestroy()
    // Offset: 0x1A0F058
    void OnDestroy();
    // public System.Void Clear()
    // Offset: 0x1A0D6E0
    void Clear();
    // System.Void EnsureMeshFilterIsAssigned()
    // Offset: 0x1A0ED00
    void EnsureMeshFilterIsAssigned();
    // static UnityEngine.ProBuilder.ProBuilderMesh CreateInstanceWithPoints(UnityEngine.Vector3[] positions)
    // Offset: 0x1A0F30C
    static ::UnityEngine::ProBuilder::ProBuilderMesh* CreateInstanceWithPoints(::ArrayW<::UnityEngine::Vector3> positions);
    // static public UnityEngine.ProBuilder.ProBuilderMesh Create()
    // Offset: 0x1A0F61C
    static ::UnityEngine::ProBuilder::ProBuilderMesh* Create();
    // static public UnityEngine.ProBuilder.ProBuilderMesh Create(System.Collections.Generic.IEnumerable`1<UnityEngine.Vector3> positions, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces)
    // Offset: 0x1A0F6A8
    static ::UnityEngine::ProBuilder::ProBuilderMesh* Create(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3>* positions, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Face*>* faces);
    // static public UnityEngine.ProBuilder.ProBuilderMesh Create(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Vertex> vertices, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Face> faces, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.SharedVertex> sharedVertices, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.SharedVertex> sharedTextures, System.Collections.Generic.IList`1<UnityEngine.Material> materials)
    // Offset: 0x1A0F868
    static ::UnityEngine::ProBuilder::ProBuilderMesh* Create(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Vertex*>* vertices, ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Face*>* faces, ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SharedVertex*>* sharedVertices, ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SharedVertex*>* sharedTextures, ::System::Collections::Generic::IList_1<::UnityEngine::Material*>* materials);
    // private System.Void GeometryWithPoints(UnityEngine.Vector3[] points)
    // Offset: 0x1A0F404
    void GeometryWithPoints(::ArrayW<::UnityEngine::Vector3> points);
    // public System.Void RebuildWithPositionsAndFaces(System.Collections.Generic.IEnumerable`1<UnityEngine.Vector3> vertices, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces)
    // Offset: 0x1A0F768
    void RebuildWithPositionsAndFaces(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3>* vertices, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Face*>* faces);
    // System.Void Rebuild()
    // Offset: 0x1A0EF40
    void Rebuild();
    // public System.Void ToMesh(UnityEngine.MeshTopology preferredTopology)
    // Offset: 0x1A0F9E0
    void ToMesh(::UnityEngine::MeshTopology preferredTopology);
    // System.Void MakeUnique()
    // Offset: 0x1A0FD38
    void MakeUnique();
    // public System.Void CopyFrom(UnityEngine.ProBuilder.ProBuilderMesh other)
    // Offset: 0x1A0FDAC
    void CopyFrom(::UnityEngine::ProBuilder::ProBuilderMesh* other);
    // public System.Void Refresh(UnityEngine.ProBuilder.RefreshMask mask)
    // Offset: 0x1A0FCC0
    void Refresh(::UnityEngine::ProBuilder::RefreshMask mask);
    // System.Void EnsureMeshColliderIsAssigned()
    // Offset: 0x1A0EE3C
    void EnsureMeshColliderIsAssigned();
    // System.Int32 GetUnusedTextureGroup(System.Int32 i)
    // Offset: 0x1A10674
    int GetUnusedTextureGroup(int i);
    // static private System.Boolean IsValidTextureGroup(System.Int32 group)
    // Offset: 0x1A10760
    static bool IsValidTextureGroup(int group);
    // System.Int32 UnusedElementGroup(System.Int32 i)
    // Offset: 0x1A1076C
    int UnusedElementGroup(int i);
    // public System.Void RefreshUV(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> facesToRefresh)
    // Offset: 0x1A1003C
    void RefreshUV(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Face*>* facesToRefresh);
    // System.Void SetGroupUV(UnityEngine.ProBuilder.AutoUnwrapSettings settings, System.Int32 group)
    // Offset: 0x1A10858
    void SetGroupUV(::UnityEngine::ProBuilder::AutoUnwrapSettings settings, int group);
    // private System.Void RefreshColors()
    // Offset: 0x1A10530
    void RefreshColors();
    // public System.Void SetFaceColor(UnityEngine.ProBuilder.Face face, UnityEngine.Color color)
    // Offset: 0x1A10934
    void SetFaceColor(::UnityEngine::ProBuilder::Face* face, ::UnityEngine::Color color);
    // public System.Void SetMaterial(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces, UnityEngine.Material material)
    // Offset: 0x1A10C08
    void SetMaterial(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Face*>* faces, ::UnityEngine::Material* material);
    // private System.Void RefreshNormals()
    // Offset: 0x1A1056C
    void RefreshNormals();
    // private System.Void RefreshTangents()
    // Offset: 0x1A105F0
    void RefreshTangents();
    // System.Int32 GetSharedVertexHandle(System.Int32 vertex)
    // Offset: 0x1A110A4
    int GetSharedVertexHandle(int vertex);
    // System.Collections.Generic.HashSet`1<System.Int32> GetSharedVertexHandles(System.Collections.Generic.IEnumerable`1<System.Int32> vertices)
    // Offset: 0x1A11214
    ::System::Collections::Generic::HashSet_1<int>* GetSharedVertexHandles(::System::Collections::Generic::IEnumerable_1<int>* vertices);
    // public System.Collections.Generic.List`1<System.Int32> GetCoincidentVertices(System.Collections.Generic.IEnumerable`1<System.Int32> vertices)
    // Offset: 0x1A114F0
    ::System::Collections::Generic::List_1<int>* GetCoincidentVertices(::System::Collections::Generic::IEnumerable_1<int>* vertices);
    // public System.Void GetCoincidentVertices(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces, System.Collections.Generic.List`1<System.Int32> coincident)
    // Offset: 0x1A11A08
    void GetCoincidentVertices(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Face*>* faces, ::System::Collections::Generic::List_1<int>* coincident);
    // public System.Void GetCoincidentVertices(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> edges, System.Collections.Generic.List`1<System.Int32> coincident)
    // Offset: 0x1A11ECC
    void GetCoincidentVertices(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Edge>* edges, ::System::Collections::Generic::List_1<int>* coincident);
    // public System.Void GetCoincidentVertices(System.Collections.Generic.IEnumerable`1<System.Int32> vertices, System.Collections.Generic.List`1<System.Int32> coincident)
    // Offset: 0x1A115B4
    void GetCoincidentVertices(::System::Collections::Generic::IEnumerable_1<int>* vertices, ::System::Collections::Generic::List_1<int>* coincident);
    // public System.Void GetCoincidentVertices(System.Int32 vertex, System.Collections.Generic.List`1<System.Int32> coincident)
    // Offset: 0x1A12410
    void GetCoincidentVertices(int vertex, ::System::Collections::Generic::List_1<int>* coincident);
    // public System.Void SetVerticesCoincident(System.Collections.Generic.IEnumerable`1<System.Int32> vertices)
    // Offset: 0x1A12584
    void SetVerticesCoincident(::System::Collections::Generic::IEnumerable_1<int>* vertices);
    // System.Void SetTexturesCoincident(System.Collections.Generic.IEnumerable`1<System.Int32> vertices)
    // Offset: 0x1A12630
    void SetTexturesCoincident(::System::Collections::Generic::IEnumerable_1<int>* vertices);
    // System.Void AddToSharedVertex(System.Int32 sharedVertexHandle, System.Int32 vertex)
    // Offset: 0x1A1267C
    void AddToSharedVertex(int sharedVertexHandle, int vertex);
    // System.Void AddSharedVertex(UnityEngine.ProBuilder.SharedVertex vertex)
    // Offset: 0x1A12750
    void AddSharedVertex(::UnityEngine::ProBuilder::SharedVertex* vertex);
    // private System.Void CacheSelection()
    // Offset: 0x1A12888
    void CacheSelection();
    // public UnityEngine.ProBuilder.Face[] GetSelectedFaces()
    // Offset: 0x1A12D8C
    ::ArrayW<::UnityEngine::ProBuilder::Face*> GetSelectedFaces();
    // UnityEngine.ProBuilder.Face GetActiveFace()
    // Offset: 0x1A130D0
    ::UnityEngine::ProBuilder::Face* GetActiveFace();
    // UnityEngine.ProBuilder.Edge GetActiveEdge()
    // Offset: 0x1A13138
    ::UnityEngine::ProBuilder::Edge GetActiveEdge();
    // System.Int32 GetActiveVertex()
    // Offset: 0x1A131D0
    int GetActiveVertex();
    // System.Void AddToFaceSelection(System.Int32 index)
    // Offset: 0x1A1320C
    void AddToFaceSelection(int index);
    // public System.Void SetSelectedFaces(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> selected)
    // Offset: 0x1A13444
    void SetSelectedFaces(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Face*>* selected);
    // System.Void SetSelectedFaces(System.Collections.Generic.IEnumerable`1<System.Int32> selected)
    // Offset: 0x1A1328C
    void SetSelectedFaces(::System::Collections::Generic::IEnumerable_1<int>* selected);
    // public System.Void SetSelectedEdges(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> edges)
    // Offset: 0x1A134F8
    void SetSelectedEdges(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Edge>* edges);
    // public System.Void SetSelectedVertices(System.Collections.Generic.IEnumerable`1<System.Int32> vertices)
    // Offset: 0x1A13614
    void SetSelectedVertices(::System::Collections::Generic::IEnumerable_1<int>* vertices);
    // System.Void RemoveFromFaceSelectionAtIndex(System.Int32 index)
    // Offset: 0x1A13750
    void RemoveFromFaceSelectionAtIndex(int index);
    // public System.Void ClearSelection()
    // Offset: 0x1A0F284
    void ClearSelection();
    // private System.Int32 <set_selectedFacesInternal>b__207_0(UnityEngine.ProBuilder.Face x)
    // Offset: 0x1A13910
    int $set_selectedFacesInternal$b__207_0(::UnityEngine::ProBuilder::Face* x);
    // private System.Int32 <SetSelectedFaces>b__221_0(UnityEngine.ProBuilder.Face x)
    // Offset: 0x1A13970
    int $SetSelectedFaces$b__221_0(::UnityEngine::ProBuilder::Face* x);
    // private System.Collections.Generic.IEnumerable`1<System.Int32> <SetSelectedFaces>b__222_0(System.Int32 x)
    // Offset: 0x1A139D0
    ::System::Collections::Generic::IEnumerable_1<int>* $SetSelectedFaces$b__222_0(int x);
    // private System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> <SetSelectedFaces>b__222_1(System.Int32 x)
    // Offset: 0x1A13A14
    ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Edge>* $SetSelectedFaces$b__222_1(int x);
  }; // UnityEngine.ProBuilder.ProBuilderMesh
  #pragma pack(pop)
  static check_size<sizeof(ProBuilderMesh), 248 + sizeof(::System::Collections::Generic::List_1<int>*)> __UnityEngine_ProBuilder_ProBuilderMeshSizeCheck;
  static_assert(sizeof(ProBuilderMesh) == 0x100);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ProBuilder::ProBuilderMesh::CacheValidState, "UnityEngine.ProBuilder", "ProBuilderMesh/CacheValidState");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_userCollisions
// Il2CppName: get_userCollisions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_userCollisions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_userCollisions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_userCollisions
// Il2CppName: set_userCollisions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(bool)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_userCollisions)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_userCollisions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_unwrapParameters
// Il2CppName: get_unwrapParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ProBuilder::UnwrapParameters* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_unwrapParameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_unwrapParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_unwrapParameters
// Il2CppName: set_unwrapParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::UnityEngine::ProBuilder::UnwrapParameters*)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_unwrapParameters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "UnwrapParameters")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_unwrapParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_renderer
// Il2CppName: get_renderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::MeshRenderer* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_renderer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_renderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_filter
// Il2CppName: get_filter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::MeshFilter* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_filter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_filter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_preserveMeshAssetOnDestroy
// Il2CppName: get_preserveMeshAssetOnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_preserveMeshAssetOnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_preserveMeshAssetOnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_preserveMeshAssetOnDestroy
// Il2CppName: set_preserveMeshAssetOnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(bool)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_preserveMeshAssetOnDestroy)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_preserveMeshAssetOnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_facesInternal
// Il2CppName: get_facesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::ProBuilder::Face*> (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_facesInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_facesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_facesInternal
// Il2CppName: set_facesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::ArrayW<::UnityEngine::ProBuilder::Face*>)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_facesInternal)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Face"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_facesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_faces
// Il2CppName: get_faces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Face*>* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_faces)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_faces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_faces
// Il2CppName: set_faces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Face*>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_faces)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Face")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_faces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_sharedVerticesInternal
// Il2CppName: get_sharedVerticesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::ProBuilder::SharedVertex*> (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_sharedVerticesInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_sharedVerticesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_sharedVerticesInternal
// Il2CppName: set_sharedVerticesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::ArrayW<::UnityEngine::ProBuilder::SharedVertex*>)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_sharedVerticesInternal)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "SharedVertex"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_sharedVerticesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_sharedVertices
// Il2CppName: get_sharedVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SharedVertex*>* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_sharedVertices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_sharedVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_sharedVertices
// Il2CppName: set_sharedVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SharedVertex*>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_sharedVertices)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "SharedVertex")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_sharedVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_sharedVertexLookup
// Il2CppName: get_sharedVertexLookup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<int, int>* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_sharedVertexLookup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_sharedVertexLookup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_sharedTextures
// Il2CppName: get_sharedTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::ProBuilder::SharedVertex*> (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_sharedTextures)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_sharedTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_sharedTextures
// Il2CppName: set_sharedTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::ArrayW<::UnityEngine::ProBuilder::SharedVertex*>)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_sharedTextures)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "SharedVertex"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_sharedTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_sharedTextureLookup
// Il2CppName: get_sharedTextureLookup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<int, int>* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_sharedTextureLookup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_sharedTextureLookup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_positionsInternal
// Il2CppName: get_positionsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector3> (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_positionsInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_positionsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_positionsInternal
// Il2CppName: set_positionsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::ArrayW<::UnityEngine::Vector3>)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_positionsInternal)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_positionsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_positions
// Il2CppName: get_positions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::UnityEngine::Vector3>* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_positions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_positions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_positions
// Il2CppName: set_positions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IList_1<::UnityEngine::Vector3>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_positions)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_positions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_normals
// Il2CppName: get_normals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::UnityEngine::Vector3>* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_normals)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_normals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_normalsInternal
// Il2CppName: get_normalsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector3> (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_normalsInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_normalsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_normalsInternal
// Il2CppName: set_normalsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::ArrayW<::UnityEngine::Vector3>)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_normalsInternal)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_normalsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_colorsInternal
// Il2CppName: get_colorsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Color> (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_colorsInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_colorsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_colorsInternal
// Il2CppName: set_colorsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::ArrayW<::UnityEngine::Color>)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_colorsInternal)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Color"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_colorsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_colors
// Il2CppName: get_colors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::UnityEngine::Color>* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_colors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_colors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_colors
// Il2CppName: set_colors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IList_1<::UnityEngine::Color>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_colors)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_colors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_tangents
// Il2CppName: get_tangents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::UnityEngine::Vector4>* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_tangents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_tangents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_tangents
// Il2CppName: set_tangents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IList_1<::UnityEngine::Vector4>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_tangents)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_tangents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_tangentsInternal
// Il2CppName: get_tangentsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector4> (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_tangentsInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_tangentsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_tangentsInternal
// Il2CppName: set_tangentsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::ArrayW<::UnityEngine::Vector4>)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_tangentsInternal)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_tangentsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_texturesInternal
// Il2CppName: get_texturesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector2> (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_texturesInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_texturesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_texturesInternal
// Il2CppName: set_texturesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::ArrayW<::UnityEngine::Vector2>)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_texturesInternal)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_texturesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_textures
// Il2CppName: get_textures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::UnityEngine::Vector2>* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_textures)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_textures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_textures
// Il2CppName: set_textures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IList_1<::UnityEngine::Vector2>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_textures)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_textures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_faceCount
// Il2CppName: get_faceCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_faceCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_faceCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_vertexCount
// Il2CppName: get_vertexCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_vertexCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_vertexCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_edgeCount
// Il2CppName: get_edgeCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_edgeCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_edgeCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_indexCount
// Il2CppName: get_indexCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_indexCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_indexCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_triangleCount
// Il2CppName: get_triangleCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_triangleCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_triangleCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_mesh
// Il2CppName: get_mesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Mesh* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_mesh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_mesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_mesh
// Il2CppName: set_mesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::UnityEngine::Mesh*)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_mesh)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_mesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_id
// Il2CppName: get_id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_id)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_meshSyncState
// Il2CppName: get_meshSyncState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ProBuilder::MeshSyncState (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_meshSyncState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_meshSyncState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_selectable
// Il2CppName: get_selectable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_selectable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_selectable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_selectable
// Il2CppName: set_selectable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(bool)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_selectable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_selectable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_selectedFaceCount
// Il2CppName: get_selectedFaceCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_selectedFaceCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_selectedFaceCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_selectedVertexCount
// Il2CppName: get_selectedVertexCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_selectedVertexCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_selectedVertexCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_selectedEdgeCount
// Il2CppName: get_selectedEdgeCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_selectedEdgeCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_selectedEdgeCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_selectedSharedVerticesCount
// Il2CppName: get_selectedSharedVerticesCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_selectedSharedVerticesCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_selectedSharedVerticesCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_selectedCoincidentVertexCount
// Il2CppName: get_selectedCoincidentVertexCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_selectedCoincidentVertexCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_selectedCoincidentVertexCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_selectedSharedVertices
// Il2CppName: get_selectedSharedVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<int>* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_selectedSharedVertices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_selectedSharedVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_selectedCoincidentVertices
// Il2CppName: get_selectedCoincidentVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<int>* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_selectedCoincidentVertices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_selectedCoincidentVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_selectedFaceIndexes
// Il2CppName: get_selectedFaceIndexes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ObjectModel::ReadOnlyCollection_1<int>* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_selectedFaceIndexes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_selectedFaceIndexes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_selectedVertices
// Il2CppName: get_selectedVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ObjectModel::ReadOnlyCollection_1<int>* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_selectedVertices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_selectedVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_selectedEdges
// Il2CppName: get_selectedEdges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::ProBuilder::Edge>* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_selectedEdges)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_selectedEdges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_selectedFacesInternal
// Il2CppName: get_selectedFacesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::ProBuilder::Face*> (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_selectedFacesInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_selectedFacesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_selectedFacesInternal
// Il2CppName: set_selectedFacesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::ArrayW<::UnityEngine::ProBuilder::Face*>)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_selectedFacesInternal)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Face"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_selectedFacesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_selectedFaceIndicesInternal
// Il2CppName: get_selectedFaceIndicesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_selectedFaceIndicesInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_selectedFaceIndicesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_selectedFaceIndicesInternal
// Il2CppName: set_selectedFaceIndicesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::ArrayW<int>)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_selectedFaceIndicesInternal)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_selectedFaceIndicesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_selectedEdgesInternal
// Il2CppName: get_selectedEdgesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::ProBuilder::Edge> (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_selectedEdgesInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_selectedEdgesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_selectedEdgesInternal
// Il2CppName: set_selectedEdgesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::ArrayW<::UnityEngine::ProBuilder::Edge>)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_selectedEdgesInternal)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Edge"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_selectedEdgesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::get_selectedIndexesInternal
// Il2CppName: get_selectedIndexesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::get_selectedIndexesInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "get_selectedIndexesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::set_selectedIndexesInternal
// Il2CppName: set_selectedIndexesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::ArrayW<int>)>(&UnityEngine::ProBuilder::ProBuilderMesh::set_selectedIndexesInternal)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "set_selectedIndexesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::add_meshWillBeDestroyed
// Il2CppName: add_meshWillBeDestroyed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::add_meshWillBeDestroyed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "ProBuilderMesh")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "add_meshWillBeDestroyed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::remove_meshWillBeDestroyed
// Il2CppName: remove_meshWillBeDestroyed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::remove_meshWillBeDestroyed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "ProBuilderMesh")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "remove_meshWillBeDestroyed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::add_componentWillBeDestroyed
// Il2CppName: add_componentWillBeDestroyed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::add_componentWillBeDestroyed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "ProBuilderMesh")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "add_componentWillBeDestroyed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::remove_componentWillBeDestroyed
// Il2CppName: remove_componentWillBeDestroyed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::remove_componentWillBeDestroyed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "ProBuilderMesh")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "remove_componentWillBeDestroyed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::add_componentHasBeenReset
// Il2CppName: add_componentHasBeenReset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::add_componentHasBeenReset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "ProBuilderMesh")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "add_componentHasBeenReset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::remove_componentHasBeenReset
// Il2CppName: remove_componentHasBeenReset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::remove_componentHasBeenReset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "ProBuilderMesh")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "remove_componentHasBeenReset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::add_elementSelectionChanged
// Il2CppName: add_elementSelectionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::add_elementSelectionChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "ProBuilderMesh")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "add_elementSelectionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::remove_elementSelectionChanged
// Il2CppName: remove_elementSelectionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::UnityEngine::ProBuilder::ProBuilderMesh*>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::remove_elementSelectionChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "ProBuilderMesh")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "remove_elementSelectionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::HasArrays
// Il2CppName: HasArrays
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::ProBuilder::ProBuilderMesh::*)(::UnityEngine::ProBuilder::MeshArrays)>(&UnityEngine::ProBuilder::ProBuilderMesh::HasArrays)> {
  static const MethodInfo* get() {
    static auto* channels = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "MeshArrays")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "HasArrays", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{channels});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::InvalidateSharedVertexLookup
// Il2CppName: InvalidateSharedVertexLookup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::InvalidateSharedVertexLookup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "InvalidateSharedVertexLookup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::InvalidateSharedTextureLookup
// Il2CppName: InvalidateSharedTextureLookup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::InvalidateSharedTextureLookup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "InvalidateSharedTextureLookup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::InvalidateFaces
// Il2CppName: InvalidateFaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::InvalidateFaces)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "InvalidateFaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::InvalidateCaches
// Il2CppName: InvalidateCaches
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::InvalidateCaches)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "InvalidateCaches", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::SetSharedVertices
// Il2CppName: SetSharedVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int, int>>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::SetSharedVertices)> {
  static const MethodInfo* get() {
    static auto* indexes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("System", "Int32")})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "SetSharedVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indexes});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::SetSharedTextures
// Il2CppName: SetSharedTextures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<int, int>>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::SetSharedTextures)> {
  static const MethodInfo* get() {
    static auto* indexes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("System", "Int32")})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "SetSharedTextures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indexes});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetVertices
// Il2CppName: GetVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::ProBuilder::Vertex*> (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IList_1<int>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::GetVertices)> {
  static const MethodInfo* get() {
    static auto* indexes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{indexes});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::SetVertices
// Il2CppName: SetVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Vertex*>*, bool)>(&UnityEngine::ProBuilder::ProBuilderMesh::SetVertices)> {
  static const MethodInfo* get() {
    static auto* vertices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Vertex")})->byval_arg;
    static auto* applyMesh = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "SetVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertices, applyMesh});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetNormals
// Il2CppName: GetNormals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector3> (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::GetNormals)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetNormals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetColors
// Il2CppName: GetColors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Color> (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::GetColors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetColors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetTangents
// Il2CppName: GetTangents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector4> (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::GetTangents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetTangents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetUVs
// Il2CppName: GetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::GetUVs)> {
  static const MethodInfo* get() {
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* uvs = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{channel, uvs});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetUVs
// Il2CppName: GetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ObjectModel::ReadOnlyCollection_1<::UnityEngine::Vector2>* (UnityEngine::ProBuilder::ProBuilderMesh::*)(int)>(&UnityEngine::ProBuilder::ProBuilderMesh::GetUVs)> {
  static const MethodInfo* get() {
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{channel});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::SetUVs
// Il2CppName: SetUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(int, ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::SetUVs)> {
  static const MethodInfo* get() {
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* uvs = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "SetUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{channel, uvs});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::EnsureMeshFilterIsAssigned
// Il2CppName: EnsureMeshFilterIsAssigned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::EnsureMeshFilterIsAssigned)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "EnsureMeshFilterIsAssigned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::CreateInstanceWithPoints
// Il2CppName: CreateInstanceWithPoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ProBuilder::ProBuilderMesh* (*)(::ArrayW<::UnityEngine::Vector3>)>(&UnityEngine::ProBuilder::ProBuilderMesh::CreateInstanceWithPoints)> {
  static const MethodInfo* get() {
    static auto* positions = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "CreateInstanceWithPoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ProBuilder::ProBuilderMesh* (*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ProBuilder::ProBuilderMesh* (*)(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3>*, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Face*>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::Create)> {
  static const MethodInfo* get() {
    static auto* positions = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* faces = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Face")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{positions, faces});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ProBuilder::ProBuilderMesh* (*)(::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Vertex*>*, ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::Face*>*, ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SharedVertex*>*, ::System::Collections::Generic::IList_1<::UnityEngine::ProBuilder::SharedVertex*>*, ::System::Collections::Generic::IList_1<::UnityEngine::Material*>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::Create)> {
  static const MethodInfo* get() {
    static auto* vertices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Vertex")})->byval_arg;
    static auto* faces = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Face")})->byval_arg;
    static auto* sharedVertices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "SharedVertex")})->byval_arg;
    static auto* sharedTextures = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "SharedVertex")})->byval_arg;
    static auto* materials = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Material")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertices, faces, sharedVertices, sharedTextures, materials});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GeometryWithPoints
// Il2CppName: GeometryWithPoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::ArrayW<::UnityEngine::Vector3>)>(&UnityEngine::ProBuilder::ProBuilderMesh::GeometryWithPoints)> {
  static const MethodInfo* get() {
    static auto* points = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GeometryWithPoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{points});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::RebuildWithPositionsAndFaces
// Il2CppName: RebuildWithPositionsAndFaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Vector3>*, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Face*>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::RebuildWithPositionsAndFaces)> {
  static const MethodInfo* get() {
    static auto* vertices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* faces = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Face")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "RebuildWithPositionsAndFaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertices, faces});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::Rebuild
// Il2CppName: Rebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::Rebuild)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::ToMesh
// Il2CppName: ToMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::UnityEngine::MeshTopology)>(&UnityEngine::ProBuilder::ProBuilderMesh::ToMesh)> {
  static const MethodInfo* get() {
    static auto* preferredTopology = &::il2cpp_utils::GetClassFromName("UnityEngine", "MeshTopology")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "ToMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{preferredTopology});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::MakeUnique
// Il2CppName: MakeUnique
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::MakeUnique)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "MakeUnique", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::CopyFrom
// Il2CppName: CopyFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::UnityEngine::ProBuilder::ProBuilderMesh*)>(&UnityEngine::ProBuilder::ProBuilderMesh::CopyFrom)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "ProBuilderMesh")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "CopyFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::UnityEngine::ProBuilder::RefreshMask)>(&UnityEngine::ProBuilder::ProBuilderMesh::Refresh)> {
  static const MethodInfo* get() {
    static auto* mask = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "RefreshMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mask});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::EnsureMeshColliderIsAssigned
// Il2CppName: EnsureMeshColliderIsAssigned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::EnsureMeshColliderIsAssigned)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "EnsureMeshColliderIsAssigned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetUnusedTextureGroup
// Il2CppName: GetUnusedTextureGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)(int)>(&UnityEngine::ProBuilder::ProBuilderMesh::GetUnusedTextureGroup)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetUnusedTextureGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::IsValidTextureGroup
// Il2CppName: IsValidTextureGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&UnityEngine::ProBuilder::ProBuilderMesh::IsValidTextureGroup)> {
  static const MethodInfo* get() {
    static auto* group = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "IsValidTextureGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{group});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::UnusedElementGroup
// Il2CppName: UnusedElementGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)(int)>(&UnityEngine::ProBuilder::ProBuilderMesh::UnusedElementGroup)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "UnusedElementGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::RefreshUV
// Il2CppName: RefreshUV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Face*>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::RefreshUV)> {
  static const MethodInfo* get() {
    static auto* facesToRefresh = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Face")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "RefreshUV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{facesToRefresh});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::SetGroupUV
// Il2CppName: SetGroupUV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::UnityEngine::ProBuilder::AutoUnwrapSettings, int)>(&UnityEngine::ProBuilder::ProBuilderMesh::SetGroupUV)> {
  static const MethodInfo* get() {
    static auto* settings = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "AutoUnwrapSettings")->byval_arg;
    static auto* group = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "SetGroupUV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{settings, group});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::RefreshColors
// Il2CppName: RefreshColors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::RefreshColors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "RefreshColors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::SetFaceColor
// Il2CppName: SetFaceColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::UnityEngine::ProBuilder::Face*, ::UnityEngine::Color)>(&UnityEngine::ProBuilder::ProBuilderMesh::SetFaceColor)> {
  static const MethodInfo* get() {
    static auto* face = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Face")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "SetFaceColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{face, color});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::SetMaterial
// Il2CppName: SetMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Face*>*, ::UnityEngine::Material*)>(&UnityEngine::ProBuilder::ProBuilderMesh::SetMaterial)> {
  static const MethodInfo* get() {
    static auto* faces = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Face")})->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "SetMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{faces, material});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::RefreshNormals
// Il2CppName: RefreshNormals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::RefreshNormals)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "RefreshNormals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::RefreshTangents
// Il2CppName: RefreshTangents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::RefreshTangents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "RefreshTangents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetSharedVertexHandle
// Il2CppName: GetSharedVertexHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)(int)>(&UnityEngine::ProBuilder::ProBuilderMesh::GetSharedVertexHandle)> {
  static const MethodInfo* get() {
    static auto* vertex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetSharedVertexHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertex});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetSharedVertexHandles
// Il2CppName: GetSharedVertexHandles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::HashSet_1<int>* (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IEnumerable_1<int>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::GetSharedVertexHandles)> {
  static const MethodInfo* get() {
    static auto* vertices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetSharedVertexHandles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertices});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetCoincidentVertices
// Il2CppName: GetCoincidentVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<int>* (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IEnumerable_1<int>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::GetCoincidentVertices)> {
  static const MethodInfo* get() {
    static auto* vertices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetCoincidentVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertices});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetCoincidentVertices
// Il2CppName: GetCoincidentVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Face*>*, ::System::Collections::Generic::List_1<int>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::GetCoincidentVertices)> {
  static const MethodInfo* get() {
    static auto* faces = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Face")})->byval_arg;
    static auto* coincident = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetCoincidentVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{faces, coincident});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetCoincidentVertices
// Il2CppName: GetCoincidentVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Edge>*, ::System::Collections::Generic::List_1<int>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::GetCoincidentVertices)> {
  static const MethodInfo* get() {
    static auto* edges = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Edge")})->byval_arg;
    static auto* coincident = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetCoincidentVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{edges, coincident});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetCoincidentVertices
// Il2CppName: GetCoincidentVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IEnumerable_1<int>*, ::System::Collections::Generic::List_1<int>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::GetCoincidentVertices)> {
  static const MethodInfo* get() {
    static auto* vertices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* coincident = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetCoincidentVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertices, coincident});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetCoincidentVertices
// Il2CppName: GetCoincidentVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(int, ::System::Collections::Generic::List_1<int>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::GetCoincidentVertices)> {
  static const MethodInfo* get() {
    static auto* vertex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* coincident = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetCoincidentVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertex, coincident});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::SetVerticesCoincident
// Il2CppName: SetVerticesCoincident
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IEnumerable_1<int>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::SetVerticesCoincident)> {
  static const MethodInfo* get() {
    static auto* vertices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "SetVerticesCoincident", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertices});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::SetTexturesCoincident
// Il2CppName: SetTexturesCoincident
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IEnumerable_1<int>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::SetTexturesCoincident)> {
  static const MethodInfo* get() {
    static auto* vertices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "SetTexturesCoincident", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertices});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::AddToSharedVertex
// Il2CppName: AddToSharedVertex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(int, int)>(&UnityEngine::ProBuilder::ProBuilderMesh::AddToSharedVertex)> {
  static const MethodInfo* get() {
    static auto* sharedVertexHandle = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* vertex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "AddToSharedVertex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sharedVertexHandle, vertex});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::AddSharedVertex
// Il2CppName: AddSharedVertex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::UnityEngine::ProBuilder::SharedVertex*)>(&UnityEngine::ProBuilder::ProBuilderMesh::AddSharedVertex)> {
  static const MethodInfo* get() {
    static auto* vertex = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "SharedVertex")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "AddSharedVertex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertex});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::CacheSelection
// Il2CppName: CacheSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::CacheSelection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "CacheSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetSelectedFaces
// Il2CppName: GetSelectedFaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::ProBuilder::Face*> (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::GetSelectedFaces)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetSelectedFaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetActiveFace
// Il2CppName: GetActiveFace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ProBuilder::Face* (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::GetActiveFace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetActiveFace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetActiveEdge
// Il2CppName: GetActiveEdge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ProBuilder::Edge (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::GetActiveEdge)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetActiveEdge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::GetActiveVertex
// Il2CppName: GetActiveVertex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::GetActiveVertex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "GetActiveVertex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::AddToFaceSelection
// Il2CppName: AddToFaceSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(int)>(&UnityEngine::ProBuilder::ProBuilderMesh::AddToFaceSelection)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "AddToFaceSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::SetSelectedFaces
// Il2CppName: SetSelectedFaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Face*>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::SetSelectedFaces)> {
  static const MethodInfo* get() {
    static auto* selected = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Face")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "SetSelectedFaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selected});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::SetSelectedFaces
// Il2CppName: SetSelectedFaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IEnumerable_1<int>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::SetSelectedFaces)> {
  static const MethodInfo* get() {
    static auto* selected = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "SetSelectedFaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selected});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::SetSelectedEdges
// Il2CppName: SetSelectedEdges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Edge>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::SetSelectedEdges)> {
  static const MethodInfo* get() {
    static auto* edges = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Edge")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "SetSelectedEdges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{edges});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::SetSelectedVertices
// Il2CppName: SetSelectedVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(::System::Collections::Generic::IEnumerable_1<int>*)>(&UnityEngine::ProBuilder::ProBuilderMesh::SetSelectedVertices)> {
  static const MethodInfo* get() {
    static auto* vertices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "SetSelectedVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vertices});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::RemoveFromFaceSelectionAtIndex
// Il2CppName: RemoveFromFaceSelectionAtIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)(int)>(&UnityEngine::ProBuilder::ProBuilderMesh::RemoveFromFaceSelectionAtIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "RemoveFromFaceSelectionAtIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::ClearSelection
// Il2CppName: ClearSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::ProBuilder::ProBuilderMesh::*)()>(&UnityEngine::ProBuilder::ProBuilderMesh::ClearSelection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "ClearSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::$set_selectedFacesInternal$b__207_0
// Il2CppName: <set_selectedFacesInternal>b__207_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)(::UnityEngine::ProBuilder::Face*)>(&UnityEngine::ProBuilder::ProBuilderMesh::$set_selectedFacesInternal$b__207_0)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Face")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "<set_selectedFacesInternal>b__207_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::$SetSelectedFaces$b__221_0
// Il2CppName: <SetSelectedFaces>b__221_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::ProBuilder::ProBuilderMesh::*)(::UnityEngine::ProBuilder::Face*)>(&UnityEngine::ProBuilder::ProBuilderMesh::$SetSelectedFaces$b__221_0)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("UnityEngine.ProBuilder", "Face")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "<SetSelectedFaces>b__221_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::$SetSelectedFaces$b__222_0
// Il2CppName: <SetSelectedFaces>b__222_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<int>* (UnityEngine::ProBuilder::ProBuilderMesh::*)(int)>(&UnityEngine::ProBuilder::ProBuilderMesh::$SetSelectedFaces$b__222_0)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "<SetSelectedFaces>b__222_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: UnityEngine::ProBuilder::ProBuilderMesh::$SetSelectedFaces$b__222_1
// Il2CppName: <SetSelectedFaces>b__222_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::UnityEngine::ProBuilder::Edge>* (UnityEngine::ProBuilder::ProBuilderMesh::*)(int)>(&UnityEngine::ProBuilder::ProBuilderMesh::$SetSelectedFaces$b__222_1)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ProBuilder::ProBuilderMesh*), "<SetSelectedFaces>b__222_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
