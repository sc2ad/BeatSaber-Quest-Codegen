// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Behaviour
#include "UnityEngine/Behaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
  // Forward declaring type: Vector3Int
  struct Vector3Int;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GridLayout
  class GridLayout;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::GridLayout);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::GridLayout*, "UnityEngine", "GridLayout");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.GridLayout
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 1081348
  // [RequireComponent] Offset: 1081348
  // [NativeTypeAttribute] Offset: 1081348
  class GridLayout : public ::UnityEngine::Behaviour {
    public:
    // public System.Void .ctor()
    // Offset: 0x2B01498
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GridLayout* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GridLayout::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GridLayout*, creationType>()));
    }
    // public UnityEngine.Vector3 CellToLocal(UnityEngine.Vector3Int cellPosition)
    // Offset: 0x2B014A0
    ::UnityEngine::Vector3 CellToLocal(::UnityEngine::Vector3Int cellPosition);
    // private System.Void DoNothing()
    // Offset: 0x2B01564
    void DoNothing();
    // private System.Void CellToLocal_Injected(ref UnityEngine.Vector3Int cellPosition, out UnityEngine.Vector3 ret)
    // Offset: 0x2B0150C
    void CellToLocal_Injected(ByRef<::UnityEngine::Vector3Int> cellPosition, ByRef<::UnityEngine::Vector3> ret);
  }; // UnityEngine.GridLayout
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::GridLayout::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::GridLayout::CellToLocal
// Il2CppName: CellToLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::GridLayout::*)(::UnityEngine::Vector3Int)>(&UnityEngine::GridLayout::CellToLocal)> {
  static const MethodInfo* get() {
    static auto* cellPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3Int")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GridLayout*), "CellToLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cellPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::GridLayout::DoNothing
// Il2CppName: DoNothing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GridLayout::*)()>(&UnityEngine::GridLayout::DoNothing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GridLayout*), "DoNothing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::GridLayout::CellToLocal_Injected
// Il2CppName: CellToLocal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::GridLayout::*)(ByRef<::UnityEngine::Vector3Int>, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::GridLayout::CellToLocal_Injected)> {
  static const MethodInfo* get() {
    static auto* cellPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3Int")->this_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::GridLayout*), "CellToLocal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cellPosition, ret});
  }
};
