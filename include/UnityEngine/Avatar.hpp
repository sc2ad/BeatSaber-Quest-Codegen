// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: HumanDescription
  struct HumanDescription;
  // Skipping declaration: Quaternion because it is already included!
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Avatar
  class Avatar;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Avatar);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Avatar*, "UnityEngine", "Avatar");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Avatar
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 106A810
  // [UsedByNativeCodeAttribute] Offset: 106A810
  class Avatar : public ::UnityEngine::Object {
    public:
    // public System.Boolean get_isValid()
    // Offset: 0x2A5DD64
    bool get_isValid();
    // public System.Boolean get_isHuman()
    // Offset: 0x2A5DDA4
    bool get_isHuman();
    // public UnityEngine.HumanDescription get_humanDescription()
    // Offset: 0x2A5DDE4
    ::UnityEngine::HumanDescription get_humanDescription();
    // private System.Void .ctor()
    // Offset: 0x2A5DCFC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Avatar* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Avatar::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Avatar*, creationType>()));
    }
    // System.Void SetMuscleMinMax(System.Int32 muscleId, System.Single min, System.Single max)
    // Offset: 0x2A5DEAC
    void SetMuscleMinMax(int muscleId, float min, float max);
    // System.Void SetParameter(System.Int32 parameterId, System.Single value)
    // Offset: 0x2A5DF14
    void SetParameter(int parameterId, float value);
    // System.Single GetAxisLength(System.Int32 humanId)
    // Offset: 0x2A5DF74
    float GetAxisLength(int humanId);
    // UnityEngine.Quaternion GetPreRotation(System.Int32 humanId)
    // Offset: 0x2A5E040
    ::UnityEngine::Quaternion GetPreRotation(int humanId);
    // UnityEngine.Quaternion GetPostRotation(System.Int32 humanId)
    // Offset: 0x2A5E104
    ::UnityEngine::Quaternion GetPostRotation(int humanId);
    // UnityEngine.Quaternion GetZYPostQ(System.Int32 humanId, UnityEngine.Quaternion parentQ, UnityEngine.Quaternion q)
    // Offset: 0x2A5E1C8
    ::UnityEngine::Quaternion GetZYPostQ(int humanId, ::UnityEngine::Quaternion parentQ, ::UnityEngine::Quaternion q);
    // UnityEngine.Quaternion GetZYRoll(System.Int32 humanId, UnityEngine.Vector3 uvw)
    // Offset: 0x2A5E304
    ::UnityEngine::Quaternion GetZYRoll(int humanId, ::UnityEngine::Vector3 uvw);
    // UnityEngine.Vector3 GetLimitSign(System.Int32 humanId)
    // Offset: 0x2A5E3FC
    ::UnityEngine::Vector3 GetLimitSign(int humanId);
    // System.Single Internal_GetAxisLength(System.Int32 humanId)
    // Offset: 0x2A5DFF0
    float Internal_GetAxisLength(int humanId);
    // UnityEngine.Quaternion Internal_GetPreRotation(System.Int32 humanId)
    // Offset: 0x2A5E098
    ::UnityEngine::Quaternion Internal_GetPreRotation(int humanId);
    // UnityEngine.Quaternion Internal_GetPostRotation(System.Int32 humanId)
    // Offset: 0x2A5E15C
    ::UnityEngine::Quaternion Internal_GetPostRotation(int humanId);
    // UnityEngine.Quaternion Internal_GetZYPostQ(System.Int32 humanId, UnityEngine.Quaternion parentQ, UnityEngine.Quaternion q)
    // Offset: 0x2A5E280
    ::UnityEngine::Quaternion Internal_GetZYPostQ(int humanId, ::UnityEngine::Quaternion parentQ, ::UnityEngine::Quaternion q);
    // UnityEngine.Quaternion Internal_GetZYRoll(System.Int32 humanId, UnityEngine.Vector3 uvw)
    // Offset: 0x2A5E384
    ::UnityEngine::Quaternion Internal_GetZYRoll(int humanId, ::UnityEngine::Vector3 uvw);
    // UnityEngine.Vector3 Internal_GetLimitSign(System.Int32 humanId)
    // Offset: 0x2A5E454
    ::UnityEngine::Vector3 Internal_GetLimitSign(int humanId);
    // private System.Void get_humanDescription_Injected(out UnityEngine.HumanDescription ret)
    // Offset: 0x2A5DE5C
    void get_humanDescription_Injected(ByRef<::UnityEngine::HumanDescription> ret);
    // private System.Void Internal_GetPreRotation_Injected(System.Int32 humanId, out UnityEngine.Quaternion ret)
    // Offset: 0x2A5E4C4
    void Internal_GetPreRotation_Injected(int humanId, ByRef<::UnityEngine::Quaternion> ret);
    // private System.Void Internal_GetPostRotation_Injected(System.Int32 humanId, out UnityEngine.Quaternion ret)
    // Offset: 0x2A5E51C
    void Internal_GetPostRotation_Injected(int humanId, ByRef<::UnityEngine::Quaternion> ret);
    // private System.Void Internal_GetZYPostQ_Injected(System.Int32 humanId, ref UnityEngine.Quaternion parentQ, ref UnityEngine.Quaternion q, out UnityEngine.Quaternion ret)
    // Offset: 0x2A5E574
    void Internal_GetZYPostQ_Injected(int humanId, ByRef<::UnityEngine::Quaternion> parentQ, ByRef<::UnityEngine::Quaternion> q, ByRef<::UnityEngine::Quaternion> ret);
    // private System.Void Internal_GetZYRoll_Injected(System.Int32 humanId, ref UnityEngine.Vector3 uvw, out UnityEngine.Quaternion ret)
    // Offset: 0x2A5E5E4
    void Internal_GetZYRoll_Injected(int humanId, ByRef<::UnityEngine::Vector3> uvw, ByRef<::UnityEngine::Quaternion> ret);
    // private System.Void Internal_GetLimitSign_Injected(System.Int32 humanId, out UnityEngine.Vector3 ret)
    // Offset: 0x2A5E64C
    void Internal_GetLimitSign_Injected(int humanId, ByRef<::UnityEngine::Vector3> ret);
  }; // UnityEngine.Avatar
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Avatar::get_isValid
// Il2CppName: get_isValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Avatar::*)()>(&UnityEngine::Avatar::get_isValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "get_isValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::get_isHuman
// Il2CppName: get_isHuman
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Avatar::*)()>(&UnityEngine::Avatar::get_isHuman)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "get_isHuman", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::get_humanDescription
// Il2CppName: get_humanDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::HumanDescription (UnityEngine::Avatar::*)()>(&UnityEngine::Avatar::get_humanDescription)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "get_humanDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Avatar::SetMuscleMinMax
// Il2CppName: SetMuscleMinMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Avatar::*)(int, float, float)>(&UnityEngine::Avatar::SetMuscleMinMax)> {
  static const MethodInfo* get() {
    static auto* muscleId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* min = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* max = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "SetMuscleMinMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{muscleId, min, max});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::SetParameter
// Il2CppName: SetParameter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Avatar::*)(int, float)>(&UnityEngine::Avatar::SetParameter)> {
  static const MethodInfo* get() {
    static auto* parameterId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "SetParameter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameterId, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::GetAxisLength
// Il2CppName: GetAxisLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Avatar::*)(int)>(&UnityEngine::Avatar::GetAxisLength)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "GetAxisLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::GetPreRotation
// Il2CppName: GetPreRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (UnityEngine::Avatar::*)(int)>(&UnityEngine::Avatar::GetPreRotation)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "GetPreRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::GetPostRotation
// Il2CppName: GetPostRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (UnityEngine::Avatar::*)(int)>(&UnityEngine::Avatar::GetPostRotation)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "GetPostRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::GetZYPostQ
// Il2CppName: GetZYPostQ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (UnityEngine::Avatar::*)(int, ::UnityEngine::Quaternion, ::UnityEngine::Quaternion)>(&UnityEngine::Avatar::GetZYPostQ)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* parentQ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* q = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "GetZYPostQ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId, parentQ, q});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::GetZYRoll
// Il2CppName: GetZYRoll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (UnityEngine::Avatar::*)(int, ::UnityEngine::Vector3)>(&UnityEngine::Avatar::GetZYRoll)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* uvw = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "GetZYRoll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId, uvw});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::GetLimitSign
// Il2CppName: GetLimitSign
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Avatar::*)(int)>(&UnityEngine::Avatar::GetLimitSign)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "GetLimitSign", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::Internal_GetAxisLength
// Il2CppName: Internal_GetAxisLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Avatar::*)(int)>(&UnityEngine::Avatar::Internal_GetAxisLength)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "Internal_GetAxisLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::Internal_GetPreRotation
// Il2CppName: Internal_GetPreRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (UnityEngine::Avatar::*)(int)>(&UnityEngine::Avatar::Internal_GetPreRotation)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "Internal_GetPreRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::Internal_GetPostRotation
// Il2CppName: Internal_GetPostRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (UnityEngine::Avatar::*)(int)>(&UnityEngine::Avatar::Internal_GetPostRotation)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "Internal_GetPostRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::Internal_GetZYPostQ
// Il2CppName: Internal_GetZYPostQ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (UnityEngine::Avatar::*)(int, ::UnityEngine::Quaternion, ::UnityEngine::Quaternion)>(&UnityEngine::Avatar::Internal_GetZYPostQ)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* parentQ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* q = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "Internal_GetZYPostQ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId, parentQ, q});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::Internal_GetZYRoll
// Il2CppName: Internal_GetZYRoll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (UnityEngine::Avatar::*)(int, ::UnityEngine::Vector3)>(&UnityEngine::Avatar::Internal_GetZYRoll)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* uvw = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "Internal_GetZYRoll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId, uvw});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::Internal_GetLimitSign
// Il2CppName: Internal_GetLimitSign
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Avatar::*)(int)>(&UnityEngine::Avatar::Internal_GetLimitSign)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "Internal_GetLimitSign", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::get_humanDescription_Injected
// Il2CppName: get_humanDescription_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Avatar::*)(ByRef<::UnityEngine::HumanDescription>)>(&UnityEngine::Avatar::get_humanDescription_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "HumanDescription")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "get_humanDescription_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::Internal_GetPreRotation_Injected
// Il2CppName: Internal_GetPreRotation_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Avatar::*)(int, ByRef<::UnityEngine::Quaternion>)>(&UnityEngine::Avatar::Internal_GetPreRotation_Injected)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "Internal_GetPreRotation_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::Internal_GetPostRotation_Injected
// Il2CppName: Internal_GetPostRotation_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Avatar::*)(int, ByRef<::UnityEngine::Quaternion>)>(&UnityEngine::Avatar::Internal_GetPostRotation_Injected)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "Internal_GetPostRotation_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::Internal_GetZYPostQ_Injected
// Il2CppName: Internal_GetZYPostQ_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Avatar::*)(int, ByRef<::UnityEngine::Quaternion>, ByRef<::UnityEngine::Quaternion>, ByRef<::UnityEngine::Quaternion>)>(&UnityEngine::Avatar::Internal_GetZYPostQ_Injected)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* parentQ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    static auto* q = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "Internal_GetZYPostQ_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId, parentQ, q, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::Internal_GetZYRoll_Injected
// Il2CppName: Internal_GetZYRoll_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Avatar::*)(int, ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Quaternion>)>(&UnityEngine::Avatar::Internal_GetZYRoll_Injected)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* uvw = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "Internal_GetZYRoll_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId, uvw, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Avatar::Internal_GetLimitSign_Injected
// Il2CppName: Internal_GetLimitSign_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Avatar::*)(int, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Avatar::Internal_GetLimitSign_Injected)> {
  static const MethodInfo* get() {
    static auto* humanId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Avatar*), "Internal_GetLimitSign_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{humanId, ret});
  }
};
