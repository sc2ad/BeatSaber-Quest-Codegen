// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: NUnit.Framework.Internal.TestExecutionStatus
#include "NUnit/Framework/Internal/TestExecutionStatus.hpp"
// Including type: NUnit.Framework.ParallelScope
#include "NUnit/Framework/ParallelScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: NUnit::Framework::Internal
namespace NUnit::Framework::Internal {
  // Forward declaring type: TestResult
  class TestResult;
  // Forward declaring type: Test
  class Test;
  // Forward declaring type: Randomizer
  class Randomizer;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: NUnit::Framework
namespace NUnit::Framework {
  // Forward declaring type: ITestAction
  class ITestAction;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: CultureInfo
  class CultureInfo;
}
// Forward declaring namespace: NUnit::Framework::Interfaces
namespace NUnit::Framework::Interfaces {
  // Forward declaring type: ITestListener
  class ITestListener;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: TextWriter
  class TextWriter;
}
// Forward declaring namespace: NUnit::Framework::Internal::Execution
namespace NUnit::Framework::Internal::Execution {
  // Forward declaring type: IWorkItemDispatcher
  class IWorkItemDispatcher;
}
// Forward declaring namespace: NUnit::Framework::Constraints
namespace NUnit::Framework::Constraints {
  // Forward declaring type: ValueFormatter
  class ValueFormatter;
}
// Forward declaring namespace: UnityEngine::TestTools
namespace UnityEngine::TestTools {
  // Forward declaring type: BeforeAfterTestCommandState
  class BeforeAfterTestCommandState;
  // Forward declaring type: EnumerableTestState
  class EnumerableTestState;
}
// Completed forward declares
// Type namespace: UnityEngine.TestRunner.NUnitExtensions.Runner
namespace UnityEngine::TestRunner::NUnitExtensions::Runner {
  // Forward declaring type: UnityTestExecutionContext
  class UnityTestExecutionContext;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*, "UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityTestExecutionContext");
// Type namespace: UnityEngine.TestRunner.NUnitExtensions.Runner
namespace UnityEngine::TestRunner::NUnitExtensions::Runner {
  // Size: 0xE0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext
  // [TokenAttribute] Offset: FFFFFFFF
  class UnityTestExecutionContext : public ::Il2CppObject/*, public ::NUnit::Framework::Internal::ITestExecutionContext*/ {
    public:
    public:
    // private readonly UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext _priorContext
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* priorContext;
    // Field size check
    static_assert(sizeof(::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*) == 0x8);
    // private NUnit.Framework.Internal.TestResult _currentResult
    // Size: 0x8
    // Offset: 0x18
    ::NUnit::Framework::Internal::TestResult* currentResult;
    // Field size check
    static_assert(sizeof(::NUnit::Framework::Internal::TestResult*) == 0x8);
    // private System.Int32 _assertCount
    // Size: 0x4
    // Offset: 0x20
    int assertCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: assertCount and: Context
    char __padding2[0x4] = {};
    // private UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext <Context>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* Context;
    // Field size check
    static_assert(sizeof(::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*) == 0x8);
    // private NUnit.Framework.Internal.Test <CurrentTest>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::NUnit::Framework::Internal::Test* CurrentTest;
    // Field size check
    static_assert(sizeof(::NUnit::Framework::Internal::Test*) == 0x8);
    // private System.DateTime <StartTime>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::System::DateTime StartTime;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    // private System.Int64 <StartTicks>k__BackingField
    // Size: 0x8
    // Offset: 0x40
    int64_t StartTicks;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // private System.Object <TestObject>k__BackingField
    // Size: 0x8
    // Offset: 0x48
    ::Il2CppObject* TestObject;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.String <WorkDirectory>k__BackingField
    // Size: 0x8
    // Offset: 0x50
    ::StringW WorkDirectory;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private NUnit.Framework.Internal.TestExecutionStatus _executionStatus
    // Size: 0x4
    // Offset: 0x58
    ::NUnit::Framework::Internal::TestExecutionStatus executionStatus;
    // Field size check
    static_assert(sizeof(::NUnit::Framework::Internal::TestExecutionStatus) == 0x4);
    // Padding between fields: executionStatus and: UpstreamActions
    char __padding9[0x4] = {};
    // private System.Collections.Generic.List`1<NUnit.Framework.ITestAction> <UpstreamActions>k__BackingField
    // Size: 0x8
    // Offset: 0x60
    ::System::Collections::Generic::List_1<::NUnit::Framework::ITestAction*>* UpstreamActions;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::NUnit::Framework::ITestAction*>*) == 0x8);
    // private System.Int32 <TestCaseTimeout>k__BackingField
    // Size: 0x4
    // Offset: 0x68
    int TestCaseTimeout;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: TestCaseTimeout and: CurrentCulture
    char __padding11[0x4] = {};
    // private System.Globalization.CultureInfo <CurrentCulture>k__BackingField
    // Size: 0x8
    // Offset: 0x70
    ::System::Globalization::CultureInfo* CurrentCulture;
    // Field size check
    static_assert(sizeof(::System::Globalization::CultureInfo*) == 0x8);
    // private System.Globalization.CultureInfo <CurrentUICulture>k__BackingField
    // Size: 0x8
    // Offset: 0x78
    ::System::Globalization::CultureInfo* CurrentUICulture;
    // Field size check
    static_assert(sizeof(::System::Globalization::CultureInfo*) == 0x8);
    // private NUnit.Framework.Interfaces.ITestListener <Listener>k__BackingField
    // Size: 0x8
    // Offset: 0x80
    ::NUnit::Framework::Interfaces::ITestListener* Listener;
    // Field size check
    static_assert(sizeof(::NUnit::Framework::Interfaces::ITestListener*) == 0x8);
    // private System.IO.TextWriter <OutWriter>k__BackingField
    // Size: 0x8
    // Offset: 0x88
    ::System::IO::TextWriter* OutWriter;
    // Field size check
    static_assert(sizeof(::System::IO::TextWriter*) == 0x8);
    // private System.Boolean <StopOnError>k__BackingField
    // Size: 0x1
    // Offset: 0x90
    bool StopOnError;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: StopOnError and: Dispatcher
    char __padding16[0x7] = {};
    // private NUnit.Framework.Internal.Execution.IWorkItemDispatcher <Dispatcher>k__BackingField
    // Size: 0x8
    // Offset: 0x98
    ::NUnit::Framework::Internal::Execution::IWorkItemDispatcher* Dispatcher;
    // Field size check
    static_assert(sizeof(::NUnit::Framework::Internal::Execution::IWorkItemDispatcher*) == 0x8);
    // private NUnit.Framework.ParallelScope <ParallelScope>k__BackingField
    // Size: 0x4
    // Offset: 0xA0
    ::NUnit::Framework::ParallelScope ParallelScope;
    // Field size check
    static_assert(sizeof(::NUnit::Framework::ParallelScope) == 0x4);
    // Padding between fields: ParallelScope and: WorkerId
    char __padding18[0x4] = {};
    // private System.String <WorkerId>k__BackingField
    // Size: 0x8
    // Offset: 0xA8
    ::StringW WorkerId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private NUnit.Framework.Internal.Randomizer <RandomGenerator>k__BackingField
    // Size: 0x8
    // Offset: 0xB0
    ::NUnit::Framework::Internal::Randomizer* RandomGenerator;
    // Field size check
    static_assert(sizeof(::NUnit::Framework::Internal::Randomizer*) == 0x8);
    // private NUnit.Framework.Constraints.ValueFormatter <CurrentValueFormatter>k__BackingField
    // Size: 0x8
    // Offset: 0xB8
    ::NUnit::Framework::Constraints::ValueFormatter* CurrentValueFormatter;
    // Field size check
    static_assert(sizeof(::NUnit::Framework::Constraints::ValueFormatter*) == 0x8);
    // private System.Boolean <IsSingleThreaded>k__BackingField
    // Size: 0x1
    // Offset: 0xC0
    bool IsSingleThreaded;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IsSingleThreaded and: SetUpTearDownState
    char __padding22[0x7] = {};
    // private UnityEngine.TestTools.BeforeAfterTestCommandState <SetUpTearDownState>k__BackingField
    // Size: 0x8
    // Offset: 0xC8
    ::UnityEngine::TestTools::BeforeAfterTestCommandState* SetUpTearDownState;
    // Field size check
    static_assert(sizeof(::UnityEngine::TestTools::BeforeAfterTestCommandState*) == 0x8);
    // private UnityEngine.TestTools.BeforeAfterTestCommandState <OuterUnityTestActionState>k__BackingField
    // Size: 0x8
    // Offset: 0xD0
    ::UnityEngine::TestTools::BeforeAfterTestCommandState* OuterUnityTestActionState;
    // Field size check
    static_assert(sizeof(::UnityEngine::TestTools::BeforeAfterTestCommandState*) == 0x8);
    // private UnityEngine.TestTools.EnumerableTestState <EnumerableTestState>k__BackingField
    // Size: 0x8
    // Offset: 0xD8
    ::UnityEngine::TestTools::EnumerableTestState* EnumerableTestState;
    // Field size check
    static_assert(sizeof(::UnityEngine::TestTools::EnumerableTestState*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::NUnit::Framework::Internal::ITestExecutionContext
    operator ::NUnit::Framework::Internal::ITestExecutionContext() noexcept {
      return *reinterpret_cast<::NUnit::Framework::Internal::ITestExecutionContext*>(this);
    }
    // Creating interface conversion operator: i_ITestExecutionContext
    inline ::NUnit::Framework::Internal::ITestExecutionContext* i_ITestExecutionContext() noexcept {
      return reinterpret_cast<::NUnit::Framework::Internal::ITestExecutionContext*>(this);
    }
    // Get static field: static private UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext <CurrentContext>k__BackingField
    static ::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* _get_$CurrentContext$k__BackingField();
    // Set static field: static private UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext <CurrentContext>k__BackingField
    static void _set_$CurrentContext$k__BackingField(::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* value);
    // Get instance field reference: private readonly UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext _priorContext
    [[deprecated("Use field access instead!")]] ::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*& dyn__priorContext();
    // Get instance field reference: private NUnit.Framework.Internal.TestResult _currentResult
    [[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::TestResult*& dyn__currentResult();
    // Get instance field reference: private System.Int32 _assertCount
    [[deprecated("Use field access instead!")]] int& dyn__assertCount();
    // Get instance field reference: private UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext <Context>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*& dyn_$Context$k__BackingField();
    // Get instance field reference: private NUnit.Framework.Internal.Test <CurrentTest>k__BackingField
    [[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::Test*& dyn_$CurrentTest$k__BackingField();
    // Get instance field reference: private System.DateTime <StartTime>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn_$StartTime$k__BackingField();
    // Get instance field reference: private System.Int64 <StartTicks>k__BackingField
    [[deprecated("Use field access instead!")]] int64_t& dyn_$StartTicks$k__BackingField();
    // Get instance field reference: private System.Object <TestObject>k__BackingField
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_$TestObject$k__BackingField();
    // Get instance field reference: private System.String <WorkDirectory>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$WorkDirectory$k__BackingField();
    // Get instance field reference: private NUnit.Framework.Internal.TestExecutionStatus _executionStatus
    [[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::TestExecutionStatus& dyn__executionStatus();
    // Get instance field reference: private System.Collections.Generic.List`1<NUnit.Framework.ITestAction> <UpstreamActions>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::NUnit::Framework::ITestAction*>*& dyn_$UpstreamActions$k__BackingField();
    // Get instance field reference: private System.Int32 <TestCaseTimeout>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$TestCaseTimeout$k__BackingField();
    // Get instance field reference: private System.Globalization.CultureInfo <CurrentCulture>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& dyn_$CurrentCulture$k__BackingField();
    // Get instance field reference: private System.Globalization.CultureInfo <CurrentUICulture>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& dyn_$CurrentUICulture$k__BackingField();
    // Get instance field reference: private NUnit.Framework.Interfaces.ITestListener <Listener>k__BackingField
    [[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ITestListener*& dyn_$Listener$k__BackingField();
    // Get instance field reference: private System.IO.TextWriter <OutWriter>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::IO::TextWriter*& dyn_$OutWriter$k__BackingField();
    // Get instance field reference: private System.Boolean <StopOnError>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$StopOnError$k__BackingField();
    // Get instance field reference: private NUnit.Framework.Internal.Execution.IWorkItemDispatcher <Dispatcher>k__BackingField
    [[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::Execution::IWorkItemDispatcher*& dyn_$Dispatcher$k__BackingField();
    // Get instance field reference: private NUnit.Framework.ParallelScope <ParallelScope>k__BackingField
    [[deprecated("Use field access instead!")]] ::NUnit::Framework::ParallelScope& dyn_$ParallelScope$k__BackingField();
    // Get instance field reference: private System.String <WorkerId>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$WorkerId$k__BackingField();
    // Get instance field reference: private NUnit.Framework.Internal.Randomizer <RandomGenerator>k__BackingField
    [[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::Randomizer*& dyn_$RandomGenerator$k__BackingField();
    // Get instance field reference: private NUnit.Framework.Constraints.ValueFormatter <CurrentValueFormatter>k__BackingField
    [[deprecated("Use field access instead!")]] ::NUnit::Framework::Constraints::ValueFormatter*& dyn_$CurrentValueFormatter$k__BackingField();
    // Get instance field reference: private System.Boolean <IsSingleThreaded>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$IsSingleThreaded$k__BackingField();
    // Get instance field reference: private UnityEngine.TestTools.BeforeAfterTestCommandState <SetUpTearDownState>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::TestTools::BeforeAfterTestCommandState*& dyn_$SetUpTearDownState$k__BackingField();
    // Get instance field reference: private UnityEngine.TestTools.BeforeAfterTestCommandState <OuterUnityTestActionState>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::TestTools::BeforeAfterTestCommandState*& dyn_$OuterUnityTestActionState$k__BackingField();
    // Get instance field reference: private UnityEngine.TestTools.EnumerableTestState <EnumerableTestState>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::TestTools::EnumerableTestState*& dyn_$EnumerableTestState$k__BackingField();
    // static public UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext get_CurrentContext()
    // Offset: 0x1980BA4
    static ::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* get_CurrentContext();
    // static public System.Void set_CurrentContext(UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext value)
    // Offset: 0x1980BF4
    static void set_CurrentContext(::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* value);
    // public NUnit.Framework.Internal.Test get_CurrentTest()
    // Offset: 0x1980C48
    ::NUnit::Framework::Internal::Test* get_CurrentTest();
    // public System.Void set_CurrentTest(NUnit.Framework.Internal.Test value)
    // Offset: 0x1980C50
    void set_CurrentTest(::NUnit::Framework::Internal::Test* value);
    // public System.DateTime get_StartTime()
    // Offset: 0x1980C58
    ::System::DateTime get_StartTime();
    // public System.Void set_StartTime(System.DateTime value)
    // Offset: 0x1980C60
    void set_StartTime(::System::DateTime value);
    // public System.Int64 get_StartTicks()
    // Offset: 0x1980C68
    int64_t get_StartTicks();
    // public System.Void set_StartTicks(System.Int64 value)
    // Offset: 0x1980C70
    void set_StartTicks(int64_t value);
    // public NUnit.Framework.Internal.TestResult get_CurrentResult()
    // Offset: 0x1980C78
    ::NUnit::Framework::Internal::TestResult* get_CurrentResult();
    // public System.Void set_CurrentResult(NUnit.Framework.Internal.TestResult value)
    // Offset: 0x1980C80
    void set_CurrentResult(::NUnit::Framework::Internal::TestResult* value);
    // public System.Object get_TestObject()
    // Offset: 0x1980C94
    ::Il2CppObject* get_TestObject();
    // public System.Void set_TestObject(System.Object value)
    // Offset: 0x1980C9C
    void set_TestObject(::Il2CppObject* value);
    // public System.String get_WorkDirectory()
    // Offset: 0x1980CA4
    ::StringW get_WorkDirectory();
    // public System.Void set_WorkDirectory(System.String value)
    // Offset: 0x1980CAC
    void set_WorkDirectory(::StringW value);
    // public NUnit.Framework.Internal.TestExecutionStatus get_ExecutionStatus()
    // Offset: 0x1977F84
    ::NUnit::Framework::Internal::TestExecutionStatus get_ExecutionStatus();
    // public System.Void set_ExecutionStatus(NUnit.Framework.Internal.TestExecutionStatus value)
    // Offset: 0x197A208
    void set_ExecutionStatus(::NUnit::Framework::Internal::TestExecutionStatus value);
    // public System.Collections.Generic.List`1<NUnit.Framework.ITestAction> get_UpstreamActions()
    // Offset: 0x1980CB4
    ::System::Collections::Generic::List_1<::NUnit::Framework::ITestAction*>* get_UpstreamActions();
    // private System.Void set_UpstreamActions(System.Collections.Generic.List`1<NUnit.Framework.ITestAction> value)
    // Offset: 0x1980CBC
    void set_UpstreamActions(::System::Collections::Generic::List_1<::NUnit::Framework::ITestAction*>* value);
    // public System.Int32 get_TestCaseTimeout()
    // Offset: 0x1980CC4
    int get_TestCaseTimeout();
    // public System.Void set_TestCaseTimeout(System.Int32 value)
    // Offset: 0x1980CCC
    void set_TestCaseTimeout(int value);
    // public System.Globalization.CultureInfo get_CurrentCulture()
    // Offset: 0x1980CD4
    ::System::Globalization::CultureInfo* get_CurrentCulture();
    // public System.Void set_CurrentCulture(System.Globalization.CultureInfo value)
    // Offset: 0x1980CDC
    void set_CurrentCulture(::System::Globalization::CultureInfo* value);
    // public System.Globalization.CultureInfo get_CurrentUICulture()
    // Offset: 0x1980CE4
    ::System::Globalization::CultureInfo* get_CurrentUICulture();
    // public System.Void set_CurrentUICulture(System.Globalization.CultureInfo value)
    // Offset: 0x1980CEC
    void set_CurrentUICulture(::System::Globalization::CultureInfo* value);
    // public NUnit.Framework.Interfaces.ITestListener get_Listener()
    // Offset: 0x1980CF4
    ::NUnit::Framework::Interfaces::ITestListener* get_Listener();
    // public System.Void set_Listener(NUnit.Framework.Interfaces.ITestListener value)
    // Offset: 0x1980CFC
    void set_Listener(::NUnit::Framework::Interfaces::ITestListener* value);
    // public System.IO.TextWriter get_OutWriter()
    // Offset: 0x1980D04
    ::System::IO::TextWriter* get_OutWriter();
    // private System.Void set_OutWriter(System.IO.TextWriter value)
    // Offset: 0x1980D0C
    void set_OutWriter(::System::IO::TextWriter* value);
    // public NUnit.Framework.Constraints.ValueFormatter get_CurrentValueFormatter()
    // Offset: 0x1980D14
    ::NUnit::Framework::Constraints::ValueFormatter* get_CurrentValueFormatter();
    // public UnityEngine.TestTools.BeforeAfterTestCommandState get_SetUpTearDownState()
    // Offset: 0x1980D1C
    ::UnityEngine::TestTools::BeforeAfterTestCommandState* get_SetUpTearDownState();
    // public System.Void set_SetUpTearDownState(UnityEngine.TestTools.BeforeAfterTestCommandState value)
    // Offset: 0x1980D24
    void set_SetUpTearDownState(::UnityEngine::TestTools::BeforeAfterTestCommandState* value);
    // public UnityEngine.TestTools.BeforeAfterTestCommandState get_OuterUnityTestActionState()
    // Offset: 0x1980D2C
    ::UnityEngine::TestTools::BeforeAfterTestCommandState* get_OuterUnityTestActionState();
    // public System.Void set_OuterUnityTestActionState(UnityEngine.TestTools.BeforeAfterTestCommandState value)
    // Offset: 0x1980D34
    void set_OuterUnityTestActionState(::UnityEngine::TestTools::BeforeAfterTestCommandState* value);
    // public UnityEngine.TestTools.EnumerableTestState get_EnumerableTestState()
    // Offset: 0x1980D3C
    ::UnityEngine::TestTools::EnumerableTestState* get_EnumerableTestState();
    // public System.Void set_EnumerableTestState(UnityEngine.TestTools.EnumerableTestState value)
    // Offset: 0x1980D44
    void set_EnumerableTestState(::UnityEngine::TestTools::EnumerableTestState* value);
    // public System.Void .ctor()
    // Offset: 0x19806C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UnityTestExecutionContext* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UnityTestExecutionContext*, creationType>()));
    }
    // public System.Void .ctor(UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext other)
    // Offset: 0x197B080
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UnityTestExecutionContext* New_ctor(::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* other) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UnityTestExecutionContext*, creationType>(other)));
    }
    // public System.Void IncrementAssertCount()
    // Offset: 0x1980D4C
    void IncrementAssertCount();
  }; // UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext
  #pragma pack(pop)
  static check_size<sizeof(UnityTestExecutionContext), 216 + sizeof(::UnityEngine::TestTools::EnumerableTestState*)> __UnityEngine_TestRunner_NUnitExtensions_Runner_UnityTestExecutionContextSizeCheck;
  static_assert(sizeof(UnityTestExecutionContext) == 0xE0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentContext
// Il2CppName: get_CurrentContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* (*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentContext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_CurrentContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentContext
// Il2CppName: set_CurrentContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentContext)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.TestRunner.NUnitExtensions.Runner", "UnityTestExecutionContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_CurrentContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentTest
// Il2CppName: get_CurrentTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::NUnit::Framework::Internal::Test* (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentTest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_CurrentTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentTest
// Il2CppName: set_CurrentTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)(::NUnit::Framework::Internal::Test*)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentTest)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("NUnit.Framework.Internal", "Test")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_CurrentTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_StartTime
// Il2CppName: get_StartTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_StartTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_StartTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_StartTime
// Il2CppName: set_StartTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)(::System::DateTime)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_StartTime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_StartTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_StartTicks
// Il2CppName: get_StartTicks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_StartTicks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_StartTicks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_StartTicks
// Il2CppName: set_StartTicks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)(int64_t)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_StartTicks)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_StartTicks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentResult
// Il2CppName: get_CurrentResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::NUnit::Framework::Internal::TestResult* (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentResult)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_CurrentResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentResult
// Il2CppName: set_CurrentResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)(::NUnit::Framework::Internal::TestResult*)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentResult)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("NUnit.Framework.Internal", "TestResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_CurrentResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_TestObject
// Il2CppName: get_TestObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_TestObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_TestObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_TestObject
// Il2CppName: set_TestObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)(::Il2CppObject*)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_TestObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_TestObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_WorkDirectory
// Il2CppName: get_WorkDirectory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_WorkDirectory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_WorkDirectory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_WorkDirectory
// Il2CppName: set_WorkDirectory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)(::StringW)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_WorkDirectory)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_WorkDirectory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_ExecutionStatus
// Il2CppName: get_ExecutionStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::NUnit::Framework::Internal::TestExecutionStatus (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_ExecutionStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_ExecutionStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_ExecutionStatus
// Il2CppName: set_ExecutionStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)(::NUnit::Framework::Internal::TestExecutionStatus)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_ExecutionStatus)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("NUnit.Framework.Internal", "TestExecutionStatus")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_ExecutionStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_UpstreamActions
// Il2CppName: get_UpstreamActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::NUnit::Framework::ITestAction*>* (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_UpstreamActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_UpstreamActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_UpstreamActions
// Il2CppName: set_UpstreamActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)(::System::Collections::Generic::List_1<::NUnit::Framework::ITestAction*>*)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_UpstreamActions)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("NUnit.Framework", "ITestAction")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_UpstreamActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_TestCaseTimeout
// Il2CppName: get_TestCaseTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_TestCaseTimeout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_TestCaseTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_TestCaseTimeout
// Il2CppName: set_TestCaseTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)(int)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_TestCaseTimeout)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_TestCaseTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentCulture
// Il2CppName: get_CurrentCulture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::CultureInfo* (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentCulture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_CurrentCulture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentCulture
// Il2CppName: set_CurrentCulture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)(::System::Globalization::CultureInfo*)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentCulture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Globalization", "CultureInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_CurrentCulture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentUICulture
// Il2CppName: get_CurrentUICulture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::CultureInfo* (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentUICulture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_CurrentUICulture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentUICulture
// Il2CppName: set_CurrentUICulture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)(::System::Globalization::CultureInfo*)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_CurrentUICulture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Globalization", "CultureInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_CurrentUICulture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_Listener
// Il2CppName: get_Listener
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::NUnit::Framework::Interfaces::ITestListener* (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_Listener)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_Listener", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_Listener
// Il2CppName: set_Listener
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)(::NUnit::Framework::Interfaces::ITestListener*)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_Listener)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("NUnit.Framework.Interfaces", "ITestListener")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_Listener", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_OutWriter
// Il2CppName: get_OutWriter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::TextWriter* (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_OutWriter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_OutWriter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_OutWriter
// Il2CppName: set_OutWriter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)(::System::IO::TextWriter*)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_OutWriter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.IO", "TextWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_OutWriter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentValueFormatter
// Il2CppName: get_CurrentValueFormatter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::NUnit::Framework::Constraints::ValueFormatter* (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_CurrentValueFormatter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_CurrentValueFormatter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_SetUpTearDownState
// Il2CppName: get_SetUpTearDownState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TestTools::BeforeAfterTestCommandState* (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_SetUpTearDownState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_SetUpTearDownState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_SetUpTearDownState
// Il2CppName: set_SetUpTearDownState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)(::UnityEngine::TestTools::BeforeAfterTestCommandState*)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_SetUpTearDownState)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.TestTools", "BeforeAfterTestCommandState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_SetUpTearDownState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_OuterUnityTestActionState
// Il2CppName: get_OuterUnityTestActionState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TestTools::BeforeAfterTestCommandState* (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_OuterUnityTestActionState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_OuterUnityTestActionState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_OuterUnityTestActionState
// Il2CppName: set_OuterUnityTestActionState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)(::UnityEngine::TestTools::BeforeAfterTestCommandState*)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_OuterUnityTestActionState)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.TestTools", "BeforeAfterTestCommandState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_OuterUnityTestActionState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_EnumerableTestState
// Il2CppName: get_EnumerableTestState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TestTools::EnumerableTestState* (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::get_EnumerableTestState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "get_EnumerableTestState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_EnumerableTestState
// Il2CppName: set_EnumerableTestState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)(::UnityEngine::TestTools::EnumerableTestState*)>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::set_EnumerableTestState)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.TestTools", "EnumerableTestState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "set_EnumerableTestState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::IncrementAssertCount
// Il2CppName: IncrementAssertCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::*)()>(&UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext::IncrementAssertCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*), "IncrementAssertCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
