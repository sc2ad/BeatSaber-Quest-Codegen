// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.AddressableAssets.Initialization.CacheInitialization
#include "UnityEngine/AddressableAssets/Initialization/CacheInitialization.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::AddressableAssets::Initialization::CacheInitialization::$$c__DisplayClass1_0);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::AddressableAssets::Initialization::CacheInitialization::$$c__DisplayClass1_0*, "UnityEngine.AddressableAssets.Initialization", "CacheInitialization/<>c__DisplayClass1_0");
// Type namespace: UnityEngine.AddressableAssets.Initialization
namespace UnityEngine::AddressableAssets::Initialization {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.AddressableAssets.Initialization.CacheInitialization/UnityEngine.AddressableAssets.Initialization.<>c__DisplayClass1_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class CacheInitialization::$$c__DisplayClass1_0 : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.AddressableAssets.Initialization.CacheInitialization <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::AddressableAssets::Initialization::CacheInitialization* $$4__this;
    // Field size check
    static_assert(sizeof(::UnityEngine::AddressableAssets::Initialization::CacheInitialization*) == 0x8);
    // public System.String id
    // Size: 0x8
    // Offset: 0x18
    ::StringW id;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String data
    // Size: 0x8
    // Offset: 0x20
    ::StringW data;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.AddressableAssets.Initialization.CacheInitialization <>4__this
    [[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::Initialization::CacheInitialization*& dyn_$$4__this();
    // Get instance field reference: public System.String id
    [[deprecated("Use field access instead!")]] ::StringW& dyn_id();
    // Get instance field reference: public System.String data
    [[deprecated("Use field access instead!")]] ::StringW& dyn_data();
    // public System.Void .ctor()
    // Offset: 0x18DDF68
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CacheInitialization::$$c__DisplayClass1_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddressableAssets::Initialization::CacheInitialization::$$c__DisplayClass1_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CacheInitialization::$$c__DisplayClass1_0*, creationType>()));
    }
    // System.Boolean <InitializeAsync>b__0()
    // Offset: 0x18DE058
    bool $InitializeAsync$b__0();
  }; // UnityEngine.AddressableAssets.Initialization.CacheInitialization/UnityEngine.AddressableAssets.Initialization.<>c__DisplayClass1_0
  #pragma pack(pop)
  static check_size<sizeof(CacheInitialization::$$c__DisplayClass1_0), 32 + sizeof(::StringW)> __UnityEngine_AddressableAssets_Initialization_CacheInitialization_$$c__DisplayClass1_0SizeCheck;
  static_assert(sizeof(CacheInitialization::$$c__DisplayClass1_0) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::AddressableAssets::Initialization::CacheInitialization::$$c__DisplayClass1_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::AddressableAssets::Initialization::CacheInitialization::$$c__DisplayClass1_0::$InitializeAsync$b__0
// Il2CppName: <InitializeAsync>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::AddressableAssets::Initialization::CacheInitialization::$$c__DisplayClass1_0::*)()>(&UnityEngine::AddressableAssets::Initialization::CacheInitialization::$$c__DisplayClass1_0::$InitializeAsync$b__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AddressableAssets::Initialization::CacheInitialization::$$c__DisplayClass1_0*), "<InitializeAsync>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
