// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Event
  class Event;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: RepaintData
  class RepaintData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::RepaintData);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::RepaintData*, "UnityEngine.UIElements", "RepaintData");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.RepaintData
  // [TokenAttribute] Offset: FFFFFFFF
  class RepaintData : public ::Il2CppObject {
    public:
    public:
    // [DebuggerBrowsableAttribute] Offset: 0x94044C
    // private UnityEngine.Matrix4x4 <currentOffset>k__BackingField
    // Size: 0x40
    // Offset: 0x10
    ::UnityEngine::Matrix4x4 currentOffset;
    // Field size check
    static_assert(sizeof(::UnityEngine::Matrix4x4) == 0x40);
    // [DebuggerBrowsableAttribute] Offset: 0x940488
    // private UnityEngine.Event <repaintEvent>k__BackingField
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Event* repaintEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Event*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.Matrix4x4 <currentOffset>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& dyn_$currentOffset$k__BackingField();
    // Get instance field reference: private UnityEngine.Event <repaintEvent>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Event*& dyn_$repaintEvent$k__BackingField();
    // public UnityEngine.Matrix4x4 get_currentOffset()
    // Offset: 0xDABC48
    ::UnityEngine::Matrix4x4 get_currentOffset();
    // public System.Void set_repaintEvent(UnityEngine.Event value)
    // Offset: 0xDABC5C
    void set_repaintEvent(::UnityEngine::Event* value);
  }; // UnityEngine.UIElements.RepaintData
  #pragma pack(pop)
  static check_size<sizeof(RepaintData), 80 + sizeof(::UnityEngine::Event*)> __UnityEngine_UIElements_RepaintDataSizeCheck;
  static_assert(sizeof(RepaintData) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::RepaintData::get_currentOffset
// Il2CppName: get_currentOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::UIElements::RepaintData::*)()>(&UnityEngine::UIElements::RepaintData::get_currentOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RepaintData*), "get_currentOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::RepaintData::set_repaintEvent
// Il2CppName: set_repaintEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::RepaintData::*)(::UnityEngine::Event*)>(&UnityEngine::UIElements::RepaintData::set_repaintEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::RepaintData*), "set_repaintEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
