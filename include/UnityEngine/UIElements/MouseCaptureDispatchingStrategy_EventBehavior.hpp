// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.MouseCaptureDispatchingStrategy
#include "UnityEngine/UIElements/MouseCaptureDispatchingStrategy.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::MouseCaptureDispatchingStrategy::EventBehavior, "UnityEngine.UIElements", "MouseCaptureDispatchingStrategy/EventBehavior");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.MouseCaptureDispatchingStrategy/UnityEngine.UIElements.EventBehavior
  // [TokenAttribute] Offset: FFFFFFFF
  // [FlagsAttribute] Offset: FFFFFFFF
  struct MouseCaptureDispatchingStrategy::EventBehavior/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: EventBehavior
    constexpr EventBehavior(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.UIElements.MouseCaptureDispatchingStrategy/UnityEngine.UIElements.EventBehavior None
    static constexpr const int None = 0;
    // Get static field: static public UnityEngine.UIElements.MouseCaptureDispatchingStrategy/UnityEngine.UIElements.EventBehavior None
    static ::UnityEngine::UIElements::MouseCaptureDispatchingStrategy::EventBehavior _get_None();
    // Set static field: static public UnityEngine.UIElements.MouseCaptureDispatchingStrategy/UnityEngine.UIElements.EventBehavior None
    static void _set_None(::UnityEngine::UIElements::MouseCaptureDispatchingStrategy::EventBehavior value);
    // static field const value: static public UnityEngine.UIElements.MouseCaptureDispatchingStrategy/UnityEngine.UIElements.EventBehavior IsCapturable
    static constexpr const int IsCapturable = 1;
    // Get static field: static public UnityEngine.UIElements.MouseCaptureDispatchingStrategy/UnityEngine.UIElements.EventBehavior IsCapturable
    static ::UnityEngine::UIElements::MouseCaptureDispatchingStrategy::EventBehavior _get_IsCapturable();
    // Set static field: static public UnityEngine.UIElements.MouseCaptureDispatchingStrategy/UnityEngine.UIElements.EventBehavior IsCapturable
    static void _set_IsCapturable(::UnityEngine::UIElements::MouseCaptureDispatchingStrategy::EventBehavior value);
    // static field const value: static public UnityEngine.UIElements.MouseCaptureDispatchingStrategy/UnityEngine.UIElements.EventBehavior IsSentExclusivelyToCapturingElement
    static constexpr const int IsSentExclusivelyToCapturingElement = 2;
    // Get static field: static public UnityEngine.UIElements.MouseCaptureDispatchingStrategy/UnityEngine.UIElements.EventBehavior IsSentExclusivelyToCapturingElement
    static ::UnityEngine::UIElements::MouseCaptureDispatchingStrategy::EventBehavior _get_IsSentExclusivelyToCapturingElement();
    // Set static field: static public UnityEngine.UIElements.MouseCaptureDispatchingStrategy/UnityEngine.UIElements.EventBehavior IsSentExclusivelyToCapturingElement
    static void _set_IsSentExclusivelyToCapturingElement(::UnityEngine::UIElements::MouseCaptureDispatchingStrategy::EventBehavior value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // UnityEngine.UIElements.MouseCaptureDispatchingStrategy/UnityEngine.UIElements.EventBehavior
  #pragma pack(pop)
  static check_size<sizeof(MouseCaptureDispatchingStrategy::EventBehavior), 0 + sizeof(int)> __UnityEngine_UIElements_MouseCaptureDispatchingStrategy_EventBehaviorSizeCheck;
  static_assert(sizeof(MouseCaptureDispatchingStrategy::EventBehavior) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
