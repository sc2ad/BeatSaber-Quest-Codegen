// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.CallbackPhase
#include "UnityEngine/UIElements/CallbackPhase.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: EventBase
  class EventBase;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: EventCallbackFunctorBase
  class EventCallbackFunctorBase;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::EventCallbackFunctorBase);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::EventCallbackFunctorBase*, "UnityEngine.UIElements", "EventCallbackFunctorBase");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.EventCallbackFunctorBase
  // [TokenAttribute] Offset: FFFFFFFF
  class EventCallbackFunctorBase : public ::Il2CppObject {
    public:
    public:
    // [DebuggerBrowsableAttribute] Offset: 0x940BCC
    // private UnityEngine.UIElements.CallbackPhase <phase>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    ::UnityEngine::UIElements::CallbackPhase phase;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::CallbackPhase) == 0x4);
    public:
    // Creating conversion operator: operator ::UnityEngine::UIElements::CallbackPhase
    constexpr operator ::UnityEngine::UIElements::CallbackPhase() const noexcept {
      return phase;
    }
    // Get instance field reference: private UnityEngine.UIElements.CallbackPhase <phase>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::CallbackPhase& dyn_$phase$k__BackingField();
    // public UnityEngine.UIElements.CallbackPhase get_phase()
    // Offset: 0xDA0F1C
    ::UnityEngine::UIElements::CallbackPhase get_phase();
    // public System.Void Invoke(UnityEngine.UIElements.EventBase evt)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Invoke(::UnityEngine::UIElements::EventBase* evt);
  }; // UnityEngine.UIElements.EventCallbackFunctorBase
  #pragma pack(pop)
  static check_size<sizeof(EventCallbackFunctorBase), 16 + sizeof(::UnityEngine::UIElements::CallbackPhase)> __UnityEngine_UIElements_EventCallbackFunctorBaseSizeCheck;
  static_assert(sizeof(EventCallbackFunctorBase) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::EventCallbackFunctorBase::get_phase
// Il2CppName: get_phase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::CallbackPhase (UnityEngine::UIElements::EventCallbackFunctorBase::*)()>(&UnityEngine::UIElements::EventCallbackFunctorBase::get_phase)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::EventCallbackFunctorBase*), "get_phase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::EventCallbackFunctorBase::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::EventCallbackFunctorBase::*)(::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::EventCallbackFunctorBase::Invoke)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::EventCallbackFunctorBase*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
