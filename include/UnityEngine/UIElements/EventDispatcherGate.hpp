// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: EventDispatcher
  class EventDispatcher;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: EventDispatcherGate
  struct EventDispatcherGate;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::EventDispatcherGate, "UnityEngine.UIElements", "EventDispatcherGate");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.UIElements.EventDispatcherGate
  // [TokenAttribute] Offset: FFFFFFFF
  struct EventDispatcherGate/*, public ::System::ValueType, public ::System::IEquatable_1<::UnityEngine::UIElements::EventDispatcherGate>, public ::System::IDisposable*/ {
    public:
    public:
    // private readonly UnityEngine.UIElements.EventDispatcher m_Dispatcher
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::UIElements::EventDispatcher* m_Dispatcher;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::EventDispatcher*) == 0x8);
    public:
    // Creating value type constructor for type: EventDispatcherGate
    constexpr EventDispatcherGate(::UnityEngine::UIElements::EventDispatcher* m_Dispatcher_ = {}) noexcept : m_Dispatcher{m_Dispatcher_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::UnityEngine::UIElements::EventDispatcherGate>
    operator ::System::IEquatable_1<::UnityEngine::UIElements::EventDispatcherGate>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::UnityEngine::UIElements::EventDispatcherGate>*>(this);
    }
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Creating conversion operator: operator ::UnityEngine::UIElements::EventDispatcher*
    constexpr operator ::UnityEngine::UIElements::EventDispatcher*() const noexcept {
      return m_Dispatcher;
    }
    // Get instance field reference: private readonly UnityEngine.UIElements.EventDispatcher m_Dispatcher
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::EventDispatcher*& dyn_m_Dispatcher();
    // public System.Void .ctor(UnityEngine.UIElements.EventDispatcher d)
    // Offset: 0xA425CC
    // ABORTED: conflicts with another method.  EventDispatcherGate(::UnityEngine::UIElements::EventDispatcher* d);
    // public System.Void Dispose()
    // Offset: 0xA425D4
    void Dispose();
    // public System.Boolean Equals(UnityEngine.UIElements.EventDispatcherGate other)
    // Offset: 0xA425EC
    bool Equals(::UnityEngine::UIElements::EventDispatcherGate other);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xA425F8
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0xA42600
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // UnityEngine.UIElements.EventDispatcherGate
  #pragma pack(pop)
  static check_size<sizeof(EventDispatcherGate), 0 + sizeof(::UnityEngine::UIElements::EventDispatcher*)> __UnityEngine_UIElements_EventDispatcherGateSizeCheck;
  static_assert(sizeof(EventDispatcherGate) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::EventDispatcherGate::EventDispatcherGate
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::EventDispatcherGate::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::EventDispatcherGate::*)()>(&UnityEngine::UIElements::EventDispatcherGate::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::EventDispatcherGate), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::EventDispatcherGate::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::EventDispatcherGate::*)(::UnityEngine::UIElements::EventDispatcherGate)>(&UnityEngine::UIElements::EventDispatcherGate::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventDispatcherGate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::EventDispatcherGate), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::EventDispatcherGate::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::EventDispatcherGate::*)(::Il2CppObject*)>(&UnityEngine::UIElements::EventDispatcherGate::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::EventDispatcherGate), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::EventDispatcherGate::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::UIElements::EventDispatcherGate::*)()>(&UnityEngine::UIElements::EventDispatcherGate::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::EventDispatcherGate), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
