// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: PointerEventBase`1<T>
  template<typename T>
  class PointerEventBase_1;
  // Forward declaring type: VisualElement
  class VisualElement;
  // Forward declaring type: IPointerEvent
  class IPointerEvent;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: PointerEventsHelper
  class PointerEventsHelper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::PointerEventsHelper);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::PointerEventsHelper*, "UnityEngine.UIElements", "PointerEventsHelper");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.PointerEventsHelper
  // [TokenAttribute] Offset: FFFFFFFF
  class PointerEventsHelper : public ::Il2CppObject {
    public:
    // static System.Void SendEnterLeave(UnityEngine.UIElements.VisualElement previousTopElementUnderPointer, UnityEngine.UIElements.VisualElement currentTopElementUnderPointer, UnityEngine.UIElements.IPointerEvent triggerEvent, UnityEngine.Vector2 position, System.Int32 pointerId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TLeaveEvent, class TEnterEvent>
    static void SendEnterLeave(::UnityEngine::UIElements::VisualElement* previousTopElementUnderPointer, ::UnityEngine::UIElements::VisualElement* currentTopElementUnderPointer, ::UnityEngine::UIElements::IPointerEvent* triggerEvent, ::UnityEngine::Vector2 position, int pointerId) {
      static_assert(std::is_convertible_v<TLeaveEvent, ::UnityEngine::UIElements::PointerEventBase_1<TLeaveEvent>*>);
      static_assert(std::is_convertible_v<TEnterEvent, ::UnityEngine::UIElements::PointerEventBase_1<TEnterEvent>*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::PointerEventsHelper::SendEnterLeave");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "PointerEventsHelper", "SendEnterLeave", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TLeaveEvent>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TEnterEvent>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousTopElementUnderPointer), ::il2cpp_utils::ExtractType(currentTopElementUnderPointer), ::il2cpp_utils::ExtractType(triggerEvent), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(pointerId)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TLeaveEvent>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TEnterEvent>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, previousTopElementUnderPointer, currentTopElementUnderPointer, triggerEvent, position, pointerId);
    }
    // static System.Void SendOverOut(UnityEngine.UIElements.VisualElement previousTopElementUnderPointer, UnityEngine.UIElements.VisualElement currentTopElementUnderPointer, UnityEngine.UIElements.IPointerEvent triggerEvent, UnityEngine.Vector2 position, System.Int32 pointerId)
    // Offset: 0xD9FD94
    static void SendOverOut(::UnityEngine::UIElements::VisualElement* previousTopElementUnderPointer, ::UnityEngine::UIElements::VisualElement* currentTopElementUnderPointer, ::UnityEngine::UIElements::IPointerEvent* triggerEvent, ::UnityEngine::Vector2 position, int pointerId);
  }; // UnityEngine.UIElements.PointerEventsHelper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::PointerEventsHelper::SendEnterLeave
// Il2CppName: SendEnterLeave
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::UIElements::PointerEventsHelper::SendOverOut
// Il2CppName: SendOverOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::VisualElement*, ::UnityEngine::UIElements::IPointerEvent*, ::UnityEngine::Vector2, int)>(&UnityEngine::UIElements::PointerEventsHelper::SendOverOut)> {
  static const MethodInfo* get() {
    static auto* previousTopElementUnderPointer = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* currentTopElementUnderPointer = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    static auto* triggerEvent = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IPointerEvent")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PointerEventsHelper*), "SendOverOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{previousTopElementUnderPointer, currentTopElementUnderPointer, triggerEvent, position, pointerId});
  }
};
