// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.Focusable
#include "UnityEngine/UIElements/Focusable.hpp"
// Including type: UnityEngine.UIElements.ITransform
#include "UnityEngine/UIElements/ITransform.hpp"
// Including type: UnityEngine.UIElements.IResolvedStyle
#include "UnityEngine/UIElements/IResolvedStyle.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.UIElements.PseudoStates
#include "UnityEngine/UIElements/PseudoStates.hpp"
// Including type: UnityEngine.UIElements.PickingMode
#include "UnityEngine/UIElements/PickingMode.hpp"
// Including type: UnityEngine.UIElements.ComputedStyle
#include "UnityEngine/UIElements/ComputedStyle.hpp"
// Including type: UnityEngine.PropertyName
#include "UnityEngine/PropertyName.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Yoga
namespace UnityEngine::Yoga {
  // Forward declaring type: YogaNode
  class YogaNode;
}
// Forward declaring namespace: UnityEngine::UIElements::StyleSheets
namespace UnityEngine::UIElements::StyleSheets {
  // Forward declaring type: VisualElementStylesData
  class VisualElementStylesData;
  // Forward declaring type: InheritedStylesData
  class InheritedStylesData;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: BaseVisualElementPanel
  class BaseVisualElementPanel;
  // Skipping declaration: Hierarchy because it is already included!
  // Forward declaring type: IPanel
  class IPanel;
  // Skipping declaration: Visibility because it is already included!
  // Skipping declaration: DisplayStyle because it is already included!
  // Forward declaring type: VersionChangeType
  struct VersionChangeType;
  // Forward declaring type: FocusController
  class FocusController;
  // Forward declaring type: EventBase
  class EventBase;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector2
  struct Vector2;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElement
  class VisualElement;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::VisualElement);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::VisualElement*, "UnityEngine.UIElements", "VisualElement");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x158
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.VisualElement
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 940044
  class VisualElement : public ::UnityEngine::UIElements::Focusable/*, public ::UnityEngine::UIElements::ITransform, public ::UnityEngine::UIElements::IResolvedStyle*/ {
    public:
    // Nested type: ::UnityEngine::UIElements::VisualElement::Hierarchy
    struct Hierarchy;
    // Size: 0x8
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.UIElements.VisualElement/UnityEngine.UIElements.Hierarchy
    // [TokenAttribute] Offset: FFFFFFFF
    // [DefaultMemberAttribute] Offset: 94007C
    struct Hierarchy/*, public ::System::ValueType*/ {
      public:
      public:
      // private readonly UnityEngine.UIElements.VisualElement m_Owner
      // Size: 0x8
      // Offset: 0x0
      ::UnityEngine::UIElements::VisualElement* m_Owner;
      // Field size check
      static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
      public:
      // Creating value type constructor for type: Hierarchy
      constexpr Hierarchy(::UnityEngine::UIElements::VisualElement* m_Owner_ = {}) noexcept : m_Owner{m_Owner_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Creating conversion operator: operator ::UnityEngine::UIElements::VisualElement*
      constexpr operator ::UnityEngine::UIElements::VisualElement*() const noexcept {
        return m_Owner;
      }
      // Get instance field reference: private readonly UnityEngine.UIElements.VisualElement m_Owner
      [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_Owner();
      // public UnityEngine.UIElements.VisualElement get_parent()
      // Offset: 0xA7C6BC
      ::UnityEngine::UIElements::VisualElement* get_parent();
      // public System.Int32 get_childCount()
      // Offset: 0xA7C6D8
      int get_childCount();
      // public UnityEngine.UIElements.VisualElement get_Item(System.Int32 key)
      // Offset: 0xA7C6E0
      ::UnityEngine::UIElements::VisualElement* get_Item(int key);
      // public System.Boolean Equals(UnityEngine.UIElements.VisualElement/UnityEngine.UIElements.Hierarchy other)
      // Offset: 0xA7C6E8
      bool Equals(::UnityEngine::UIElements::VisualElement::Hierarchy other);
      // public override System.Boolean Equals(System.Object obj)
      // Offset: 0xA7C6F8
      // Implemented from: System.ValueType
      // Base method: System.Boolean ValueType::Equals(System.Object obj)
      bool Equals(::Il2CppObject* obj);
      // public override System.Int32 GetHashCode()
      // Offset: 0xA7C700
      // Implemented from: System.ValueType
      // Base method: System.Int32 ValueType::GetHashCode()
      int GetHashCode();
    }; // UnityEngine.UIElements.VisualElement/UnityEngine.UIElements.Hierarchy
    #pragma pack(pop)
    static check_size<sizeof(VisualElement::Hierarchy), 0 + sizeof(::UnityEngine::UIElements::VisualElement*)> __UnityEngine_UIElements_VisualElement_HierarchySizeCheck;
    static_assert(sizeof(VisualElement::Hierarchy) == 0x8);
    public:
    // [DebuggerBrowsableAttribute] Offset: 0x94071C
    // private System.Boolean <isCompositeRoot>k__BackingField
    // Size: 0x1
    // Offset: 0x1A
    bool isCompositeRoot;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isCompositeRoot and: m_Position
    char __padding0[0x1] = {};
    // private UnityEngine.Vector3 m_Position
    // Size: 0xC
    // Offset: 0x1C
    ::UnityEngine::Vector3 m_Position;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Quaternion m_Rotation
    // Size: 0x10
    // Offset: 0x28
    ::UnityEngine::Quaternion m_Rotation;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // private UnityEngine.Vector3 m_Scale
    // Size: 0xC
    // Offset: 0x38
    ::UnityEngine::Vector3 m_Scale;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // [DebuggerBrowsableAttribute] Offset: 0x940758
    // private System.Boolean <isLayoutManual>k__BackingField
    // Size: 0x1
    // Offset: 0x44
    bool isLayoutManual;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isLayoutManual and: m_Layout
    char __padding4[0x3] = {};
    // private UnityEngine.Rect m_Layout
    // Size: 0x10
    // Offset: 0x48
    ::UnityEngine::Rect m_Layout;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rect) == 0x10);
    // System.Boolean isBoundingBoxDirty
    // Size: 0x1
    // Offset: 0x58
    bool isBoundingBoxDirty;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isBoundingBoxDirty and: m_BoundingBox
    char __padding6[0x3] = {};
    // private UnityEngine.Rect m_BoundingBox
    // Size: 0x10
    // Offset: 0x5C
    ::UnityEngine::Rect m_BoundingBox;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rect) == 0x10);
    // System.Boolean isWorldBoundingBoxDirty
    // Size: 0x1
    // Offset: 0x6C
    bool isWorldBoundingBoxDirty;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isWorldBoundingBoxDirty and: m_WorldBoundingBox
    char __padding8[0x3] = {};
    // private UnityEngine.Rect m_WorldBoundingBox
    // Size: 0x10
    // Offset: 0x70
    ::UnityEngine::Rect m_WorldBoundingBox;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rect) == 0x10);
    // [DebuggerBrowsableAttribute] Offset: 0x940794
    // private System.Boolean <isWorldTransformDirty>k__BackingField
    // Size: 0x1
    // Offset: 0x80
    bool isWorldTransformDirty;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [DebuggerBrowsableAttribute] Offset: 0x9407D0
    // private System.Boolean <isWorldTransformInverseDirty>k__BackingField
    // Size: 0x1
    // Offset: 0x81
    bool isWorldTransformInverseDirty;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isWorldTransformInverseDirty and: m_WorldTransformCache
    char __padding11[0x2] = {};
    // private UnityEngine.Matrix4x4 m_WorldTransformCache
    // Size: 0x40
    // Offset: 0x84
    ::UnityEngine::Matrix4x4 m_WorldTransformCache;
    // Field size check
    static_assert(sizeof(::UnityEngine::Matrix4x4) == 0x40);
    // private UnityEngine.Matrix4x4 m_WorldTransformInverseCache
    // Size: 0x40
    // Offset: 0xC4
    ::UnityEngine::Matrix4x4 m_WorldTransformInverseCache;
    // Field size check
    static_assert(sizeof(::UnityEngine::Matrix4x4) == 0x40);
    // private UnityEngine.UIElements.PseudoStates m_PseudoStates
    // Size: 0x4
    // Offset: 0x104
    ::UnityEngine::UIElements::PseudoStates m_PseudoStates;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::PseudoStates) == 0x4);
    // [DebuggerBrowsableAttribute] Offset: 0x94080C
    // private UnityEngine.UIElements.PickingMode <pickingMode>k__BackingField
    // Size: 0x4
    // Offset: 0x108
    ::UnityEngine::UIElements::PickingMode pickingMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::PickingMode) == 0x4);
    // Padding between fields: pickingMode and: yogaNode
    char __padding15[0x4] = {};
    // [DebuggerBrowsableAttribute] Offset: 0x940848
    // private UnityEngine.Yoga.YogaNode <yogaNode>k__BackingField
    // Size: 0x8
    // Offset: 0x110
    ::UnityEngine::Yoga::YogaNode* yogaNode;
    // Field size check
    static_assert(sizeof(::UnityEngine::Yoga::YogaNode*) == 0x8);
    // UnityEngine.UIElements.StyleSheets.VisualElementStylesData m_Style
    // Size: 0x8
    // Offset: 0x118
    ::UnityEngine::UIElements::StyleSheets::VisualElementStylesData* m_Style;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StyleSheets::VisualElementStylesData*) == 0x8);
    // private UnityEngine.UIElements.StyleSheets.InheritedStylesData m_InheritedStylesData
    // Size: 0x8
    // Offset: 0x120
    ::UnityEngine::UIElements::StyleSheets::InheritedStylesData* m_InheritedStylesData;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::StyleSheets::InheritedStylesData*) == 0x8);
    // [DebuggerBrowsableAttribute] Offset: 0x940884
    // private UnityEngine.UIElements.ComputedStyle <computedStyle>k__BackingField
    // Size: 0x8
    // Offset: 0x128
    ::UnityEngine::UIElements::ComputedStyle computedStyle;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::ComputedStyle) == 0x8);
    // System.Int32 imguiContainerDescendantCount
    // Size: 0x4
    // Offset: 0x130
    int imguiContainerDescendantCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: imguiContainerDescendantCount and: hierarchy
    char __padding20[0x4] = {};
    // [DebuggerBrowsableAttribute] Offset: 0x9408C0
    // private UnityEngine.UIElements.VisualElement/UnityEngine.UIElements.Hierarchy <hierarchy>k__BackingField
    // Size: 0x8
    // Offset: 0x138
    ::UnityEngine::UIElements::VisualElement::Hierarchy hierarchy;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement::Hierarchy) == 0x8);
    // private UnityEngine.UIElements.VisualElement m_PhysicalParent
    // Size: 0x8
    // Offset: 0x140
    ::UnityEngine::UIElements::VisualElement* m_PhysicalParent;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::VisualElement*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> m_Children
    // Size: 0x8
    // Offset: 0x148
    ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>* m_Children;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*) == 0x8);
    // [DebuggerBrowsableAttribute] Offset: 0x9408FC
    // private UnityEngine.UIElements.BaseVisualElementPanel <elementPanel>k__BackingField
    // Size: 0x8
    // Offset: 0x150
    ::UnityEngine::UIElements::BaseVisualElementPanel* elementPanel;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::BaseVisualElementPanel*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::ITransform
    operator ::UnityEngine::UIElements::ITransform() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::ITransform*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::IResolvedStyle
    operator ::UnityEngine::UIElements::IResolvedStyle() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::IResolvedStyle*>(this);
    }
    // Get static field: static private System.Collections.Generic.List`1<System.String> s_EmptyClassList
    static ::System::Collections::Generic::List_1<::StringW>* _get_s_EmptyClassList();
    // Set static field: static private System.Collections.Generic.List`1<System.String> s_EmptyClassList
    static void _set_s_EmptyClassList(::System::Collections::Generic::List_1<::StringW>* value);
    // Get static field: static readonly UnityEngine.PropertyName userDataPropertyKey
    static ::UnityEngine::PropertyName _get_userDataPropertyKey();
    // Set static field: static readonly UnityEngine.PropertyName userDataPropertyKey
    static void _set_userDataPropertyKey(::UnityEngine::PropertyName value);
    // Get static field: static public readonly System.String disabledUssClassName
    static ::StringW _get_disabledUssClassName();
    // Set static field: static public readonly System.String disabledUssClassName
    static void _set_disabledUssClassName(::StringW value);
    // Get static field: static private readonly UnityEngine.Rect s_InfiniteRect
    static ::UnityEngine::Rect _get_s_InfiniteRect();
    // Set static field: static private readonly UnityEngine.Rect s_InfiniteRect
    static void _set_s_InfiniteRect(::UnityEngine::Rect value);
    // Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> s_EmptyList
    static ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>* _get_s_EmptyList();
    // Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> s_EmptyList
    static void _set_s_EmptyList(::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>* value);
    // Get instance field reference: private System.Boolean <isCompositeRoot>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$isCompositeRoot$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector3 m_Position
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_Position();
    // Get instance field reference: private UnityEngine.Quaternion m_Rotation
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_m_Rotation();
    // Get instance field reference: private UnityEngine.Vector3 m_Scale
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_Scale();
    // Get instance field reference: private System.Boolean <isLayoutManual>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$isLayoutManual$k__BackingField();
    // Get instance field reference: private UnityEngine.Rect m_Layout
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rect& dyn_m_Layout();
    // Get instance field reference: System.Boolean isBoundingBoxDirty
    [[deprecated("Use field access instead!")]] bool& dyn_isBoundingBoxDirty();
    // Get instance field reference: private UnityEngine.Rect m_BoundingBox
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rect& dyn_m_BoundingBox();
    // Get instance field reference: System.Boolean isWorldBoundingBoxDirty
    [[deprecated("Use field access instead!")]] bool& dyn_isWorldBoundingBoxDirty();
    // Get instance field reference: private UnityEngine.Rect m_WorldBoundingBox
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rect& dyn_m_WorldBoundingBox();
    // Get instance field reference: private System.Boolean <isWorldTransformDirty>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$isWorldTransformDirty$k__BackingField();
    // Get instance field reference: private System.Boolean <isWorldTransformInverseDirty>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$isWorldTransformInverseDirty$k__BackingField();
    // Get instance field reference: private UnityEngine.Matrix4x4 m_WorldTransformCache
    [[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& dyn_m_WorldTransformCache();
    // Get instance field reference: private UnityEngine.Matrix4x4 m_WorldTransformInverseCache
    [[deprecated("Use field access instead!")]] ::UnityEngine::Matrix4x4& dyn_m_WorldTransformInverseCache();
    // Get instance field reference: private UnityEngine.UIElements.PseudoStates m_PseudoStates
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::PseudoStates& dyn_m_PseudoStates();
    // Get instance field reference: private UnityEngine.UIElements.PickingMode <pickingMode>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::PickingMode& dyn_$pickingMode$k__BackingField();
    // Get instance field reference: private UnityEngine.Yoga.YogaNode <yogaNode>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Yoga::YogaNode*& dyn_$yogaNode$k__BackingField();
    // Get instance field reference: UnityEngine.UIElements.StyleSheets.VisualElementStylesData m_Style
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleSheets::VisualElementStylesData*& dyn_m_Style();
    // Get instance field reference: private UnityEngine.UIElements.StyleSheets.InheritedStylesData m_InheritedStylesData
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::StyleSheets::InheritedStylesData*& dyn_m_InheritedStylesData();
    // Get instance field reference: private UnityEngine.UIElements.ComputedStyle <computedStyle>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::ComputedStyle& dyn_$computedStyle$k__BackingField();
    // Get instance field reference: System.Int32 imguiContainerDescendantCount
    [[deprecated("Use field access instead!")]] int& dyn_imguiContainerDescendantCount();
    // Get instance field reference: private UnityEngine.UIElements.VisualElement/UnityEngine.UIElements.Hierarchy <hierarchy>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement::Hierarchy& dyn_$hierarchy$k__BackingField();
    // Get instance field reference: private UnityEngine.UIElements.VisualElement m_PhysicalParent
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::VisualElement*& dyn_m_PhysicalParent();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> m_Children
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*& dyn_m_Children();
    // Get instance field reference: private UnityEngine.UIElements.BaseVisualElementPanel <elementPanel>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::BaseVisualElementPanel*& dyn_$elementPanel$k__BackingField();
    // System.Boolean get_isCompositeRoot()
    // Offset: 0xDB0730
    bool get_isCompositeRoot();
    // public UnityEngine.UIElements.ITransform get_transform()
    // Offset: 0xDB07F8
    ::UnityEngine::UIElements::ITransform* get_transform();
    // private UnityEngine.Matrix4x4 UnityEngine.UIElements.ITransform.get_matrix()
    // Offset: 0xDB07FC
    ::UnityEngine::Matrix4x4 UnityEngine_UIElements_ITransform_get_matrix();
    // System.Boolean get_isLayoutManual()
    // Offset: 0xDB0900
    bool get_isLayoutManual();
    // public UnityEngine.Rect get_layout()
    // Offset: 0xDA51FC
    ::UnityEngine::Rect get_layout();
    // UnityEngine.Rect get_boundingBox()
    // Offset: 0xDB0AC8
    ::UnityEngine::Rect get_boundingBox();
    // UnityEngine.Rect get_worldBoundingBox()
    // Offset: 0xDA8144
    ::UnityEngine::Rect get_worldBoundingBox();
    // public UnityEngine.Rect get_worldBound()
    // Offset: 0xDA5374
    ::UnityEngine::Rect get_worldBound();
    // UnityEngine.Rect get_rect()
    // Offset: 0xDB0ECC
    ::UnityEngine::Rect get_rect();
    // System.Boolean get_isWorldTransformDirty()
    // Offset: 0xDB0F58
    bool get_isWorldTransformDirty();
    // System.Void set_isWorldTransformDirty(System.Boolean value)
    // Offset: 0xDB0F60
    void set_isWorldTransformDirty(bool value);
    // System.Boolean get_isWorldTransformInverseDirty()
    // Offset: 0xDB0F6C
    bool get_isWorldTransformInverseDirty();
    // System.Void set_isWorldTransformInverseDirty(System.Boolean value)
    // Offset: 0xDB0F74
    void set_isWorldTransformInverseDirty(bool value);
    // public UnityEngine.Matrix4x4 get_worldTransform()
    // Offset: 0xDA5454
    ::UnityEngine::Matrix4x4 get_worldTransform();
    // UnityEngine.Matrix4x4 get_worldTransformInverse()
    // Offset: 0xDB12F4
    ::UnityEngine::Matrix4x4 get_worldTransformInverse();
    // UnityEngine.UIElements.PseudoStates get_pseudoStates()
    // Offset: 0xDB13CC
    ::UnityEngine::UIElements::PseudoStates get_pseudoStates();
    // public UnityEngine.UIElements.PickingMode get_pickingMode()
    // Offset: 0xDB13D4
    ::UnityEngine::UIElements::PickingMode get_pickingMode();
    // UnityEngine.Yoga.YogaNode get_yogaNode()
    // Offset: 0xDB13DC
    ::UnityEngine::Yoga::YogaNode* get_yogaNode();
    // UnityEngine.UIElements.StyleSheets.VisualElementStylesData get_specifiedStyle()
    // Offset: 0xD9E8DC
    ::UnityEngine::UIElements::StyleSheets::VisualElementStylesData* get_specifiedStyle();
    // UnityEngine.UIElements.StyleSheets.InheritedStylesData get_inheritedStyle()
    // Offset: 0xD9E900
    ::UnityEngine::UIElements::StyleSheets::InheritedStylesData* get_inheritedStyle();
    // UnityEngine.UIElements.ComputedStyle get_computedStyle()
    // Offset: 0xDB13E4
    ::UnityEngine::UIElements::ComputedStyle get_computedStyle();
    // public System.Boolean get_enabledInHierarchy()
    // Offset: 0xDA82BC
    bool get_enabledInHierarchy();
    // public System.Boolean get_visible()
    // Offset: 0xDA8204
    bool get_visible();
    // public UnityEngine.UIElements.VisualElement/UnityEngine.UIElements.Hierarchy get_hierarchy()
    // Offset: 0xDB144C
    ::UnityEngine::UIElements::VisualElement::Hierarchy get_hierarchy();
    // UnityEngine.UIElements.BaseVisualElementPanel get_elementPanel()
    // Offset: 0xDB1454
    ::UnityEngine::UIElements::BaseVisualElementPanel* get_elementPanel();
    // public UnityEngine.UIElements.IPanel get_panel()
    // Offset: 0xDA48C8
    ::UnityEngine::UIElements::IPanel* get_panel();
    // public UnityEngine.UIElements.IResolvedStyle get_resolvedStyle()
    // Offset: 0xDA8140
    ::UnityEngine::UIElements::IResolvedStyle* get_resolvedStyle();
    // private UnityEngine.UIElements.Visibility UnityEngine.UIElements.IResolvedStyle.get_visibility()
    // Offset: 0xDB145C
    ::UnityEngine::UIElements::Visibility UnityEngine_UIElements_IResolvedStyle_get_visibility();
    // private UnityEngine.UIElements.DisplayStyle UnityEngine.UIElements.IResolvedStyle.get_display()
    // Offset: 0xDB14D4
    ::UnityEngine::UIElements::DisplayStyle UnityEngine_UIElements_IResolvedStyle_get_display();
    // static private System.Void .cctor()
    // Offset: 0xDB154C
    static void _cctor();
    // static UnityEngine.Rect TransformAlignedRect(UnityEngine.Matrix4x4 lhc, UnityEngine.Rect rect)
    // Offset: 0xDB0908
    static ::UnityEngine::Rect TransformAlignedRect(::UnityEngine::Matrix4x4 lhc, ::UnityEngine::Rect rect);
    // static UnityEngine.Vector2 MultiplyMatrix44Point2(UnityEngine.Matrix4x4 lhs, UnityEngine.Vector2 point)
    // Offset: 0xDB0AA4
    static ::UnityEngine::Vector2 MultiplyMatrix44Point2(::UnityEngine::Matrix4x4 lhs, ::UnityEngine::Vector2 point);
    // System.Void UpdateBoundingBox()
    // Offset: 0xDB0B00
    void UpdateBoundingBox();
    // System.Void UpdateWorldBoundingBox()
    // Offset: 0xDB0DE4
    void UpdateWorldBoundingBox();
    // private System.Void UpdateWorldTransform()
    // Offset: 0xDB0F80
    void UpdateWorldTransform();
    // System.Void IncrementVersion(UnityEngine.UIElements.VersionChangeType changeType)
    // Offset: 0xD9C47C
    void IncrementVersion(::UnityEngine::UIElements::VersionChangeType changeType);
    // public System.Boolean ContainsPoint(UnityEngine.Vector2 localPoint)
    // Offset: 0xDB1400
    bool ContainsPoint(::UnityEngine::Vector2 localPoint);
    // System.Boolean ShouldClip()
    // Offset: 0xDA8184
    bool ShouldClip();
    // UnityEngine.UIElements.VisualElement RetargetElement(UnityEngine.UIElements.VisualElement retargetAgainst)
    // Offset: 0xDA309C
    ::UnityEngine::UIElements::VisualElement* RetargetElement(::UnityEngine::UIElements::VisualElement* retargetAgainst);
    // public override UnityEngine.UIElements.FocusController get_focusController()
    // Offset: 0xDB0738
    // Implemented from: UnityEngine.UIElements.Focusable
    // Base method: UnityEngine.UIElements.FocusController Focusable::get_focusController()
    ::UnityEngine::UIElements::FocusController* get_focusController();
    // public override System.Void SendEvent(UnityEngine.UIElements.EventBase e)
    // Offset: 0xDB13EC
    // Implemented from: UnityEngine.UIElements.CallbackEventHandler
    // Base method: System.Void CallbackEventHandler::SendEvent(UnityEngine.UIElements.EventBase e)
    void SendEvent(::UnityEngine::UIElements::EventBase* e);
  }; // UnityEngine.UIElements.VisualElement
  #pragma pack(pop)
  static check_size<sizeof(VisualElement), 336 + sizeof(::UnityEngine::UIElements::BaseVisualElementPanel*)> __UnityEngine_UIElements_VisualElementSizeCheck;
  static_assert(sizeof(VisualElement) == 0x158);
  // static public System.Boolean op_Equality(UnityEngine.UIElements.VisualElement/UnityEngine.UIElements.Hierarchy x, UnityEngine.UIElements.VisualElement/UnityEngine.UIElements.Hierarchy y)
  // Offset: 0x1C0C8F8
  bool operator ==(const ::UnityEngine::UIElements::VisualElement::Hierarchy& x, const ::UnityEngine::UIElements::VisualElement::Hierarchy& y);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::VisualElement::Hierarchy, "UnityEngine.UIElements", "VisualElement/Hierarchy");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_isCompositeRoot
// Il2CppName: get_isCompositeRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_isCompositeRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_isCompositeRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_transform
// Il2CppName: get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ITransform* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_transform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_ITransform_get_matrix
// Il2CppName: UnityEngine.UIElements.ITransform.get_matrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_ITransform_get_matrix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.ITransform.get_matrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_isLayoutManual
// Il2CppName: get_isLayoutManual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_isLayoutManual)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_isLayoutManual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_layout
// Il2CppName: get_layout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_layout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_layout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_boundingBox
// Il2CppName: get_boundingBox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_boundingBox)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_boundingBox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_worldBoundingBox
// Il2CppName: get_worldBoundingBox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_worldBoundingBox)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_worldBoundingBox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_worldBound
// Il2CppName: get_worldBound
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_worldBound)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_worldBound", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_rect
// Il2CppName: get_rect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_rect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_rect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_isWorldTransformDirty
// Il2CppName: get_isWorldTransformDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_isWorldTransformDirty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_isWorldTransformDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_isWorldTransformDirty
// Il2CppName: set_isWorldTransformDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_isWorldTransformDirty)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_isWorldTransformDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_isWorldTransformInverseDirty
// Il2CppName: get_isWorldTransformInverseDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_isWorldTransformInverseDirty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_isWorldTransformInverseDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::set_isWorldTransformInverseDirty
// Il2CppName: set_isWorldTransformInverseDirty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(bool)>(&UnityEngine::UIElements::VisualElement::set_isWorldTransformInverseDirty)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "set_isWorldTransformInverseDirty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_worldTransform
// Il2CppName: get_worldTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_worldTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_worldTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_worldTransformInverse
// Il2CppName: get_worldTransformInverse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_worldTransformInverse)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_worldTransformInverse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_pseudoStates
// Il2CppName: get_pseudoStates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::PseudoStates (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_pseudoStates)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_pseudoStates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_pickingMode
// Il2CppName: get_pickingMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::PickingMode (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_pickingMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_pickingMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_yogaNode
// Il2CppName: get_yogaNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Yoga::YogaNode* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_yogaNode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_yogaNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_specifiedStyle
// Il2CppName: get_specifiedStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheets::VisualElementStylesData* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_specifiedStyle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_specifiedStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_inheritedStyle
// Il2CppName: get_inheritedStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleSheets::InheritedStylesData* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_inheritedStyle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_inheritedStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_computedStyle
// Il2CppName: get_computedStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::ComputedStyle (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_computedStyle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_computedStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_enabledInHierarchy
// Il2CppName: get_enabledInHierarchy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_enabledInHierarchy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_enabledInHierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_visible
// Il2CppName: get_visible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_visible)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_visible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_hierarchy
// Il2CppName: get_hierarchy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement::Hierarchy (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_hierarchy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_hierarchy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_elementPanel
// Il2CppName: get_elementPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::BaseVisualElementPanel* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_elementPanel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_elementPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_panel
// Il2CppName: get_panel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IPanel* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_panel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_panel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_resolvedStyle
// Il2CppName: get_resolvedStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::IResolvedStyle* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_resolvedStyle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_resolvedStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_visibility
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_visibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::Visibility (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_visibility)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_visibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_display
// Il2CppName: UnityEngine.UIElements.IResolvedStyle.get_display
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::DisplayStyle (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UnityEngine_UIElements_IResolvedStyle_get_display)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UnityEngine.UIElements.IResolvedStyle.get_display", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::VisualElement::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::TransformAlignedRect
// Il2CppName: TransformAlignedRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (*)(::UnityEngine::Matrix4x4, ::UnityEngine::Rect)>(&UnityEngine::UIElements::VisualElement::TransformAlignedRect)> {
  static const MethodInfo* get() {
    static auto* lhc = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    static auto* rect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "TransformAlignedRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhc, rect});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::MultiplyMatrix44Point2
// Il2CppName: MultiplyMatrix44Point2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(::UnityEngine::Matrix4x4, ::UnityEngine::Vector2)>(&UnityEngine::UIElements::VisualElement::MultiplyMatrix44Point2)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    static auto* point = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "MultiplyMatrix44Point2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, point});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UpdateBoundingBox
// Il2CppName: UpdateBoundingBox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UpdateBoundingBox)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UpdateBoundingBox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UpdateWorldBoundingBox
// Il2CppName: UpdateWorldBoundingBox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UpdateWorldBoundingBox)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UpdateWorldBoundingBox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::UpdateWorldTransform
// Il2CppName: UpdateWorldTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::UpdateWorldTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "UpdateWorldTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::IncrementVersion
// Il2CppName: IncrementVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::VersionChangeType)>(&UnityEngine::UIElements::VisualElement::IncrementVersion)> {
  static const MethodInfo* get() {
    static auto* changeType = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VersionChangeType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "IncrementVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{changeType});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ContainsPoint
// Il2CppName: ContainsPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::Vector2)>(&UnityEngine::UIElements::VisualElement::ContainsPoint)> {
  static const MethodInfo* get() {
    static auto* localPoint = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ContainsPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{localPoint});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::ShouldClip
// Il2CppName: ShouldClip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::ShouldClip)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "ShouldClip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::RetargetElement
// Il2CppName: RetargetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::VisualElement* (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::VisualElement*)>(&UnityEngine::UIElements::VisualElement::RetargetElement)> {
  static const MethodInfo* get() {
    static auto* retargetAgainst = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "RetargetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{retargetAgainst});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::get_focusController
// Il2CppName: get_focusController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::FocusController* (UnityEngine::UIElements::VisualElement::*)()>(&UnityEngine::UIElements::VisualElement::get_focusController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "get_focusController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElement::SendEvent
// Il2CppName: SendEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::VisualElement::*)(::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::VisualElement::SendEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElement*), "SendEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
