// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: ITransform
  class ITransform;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::ITransform);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::ITransform*, "UnityEngine.UIElements", "ITransform");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.ITransform
  // [TokenAttribute] Offset: FFFFFFFF
  class ITransform {
    public:
    // public UnityEngine.Matrix4x4 get_matrix()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Matrix4x4 get_matrix();
  }; // UnityEngine.UIElements.ITransform
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::ITransform::get_matrix
// Il2CppName: get_matrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Matrix4x4 (UnityEngine::UIElements::ITransform::*)()>(&UnityEngine::UIElements::ITransform::get_matrix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::ITransform*), "get_matrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
