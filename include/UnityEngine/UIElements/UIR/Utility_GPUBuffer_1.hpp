// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.UIR.Utility
#include "UnityEngine/UIElements/UIR/Utility.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: ValueType because it is already included!
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::UIElements::UIR::Utility::GPUBuffer_1, "UnityEngine.UIElements.UIR", "Utility/GPUBuffer`1");
// Type namespace: UnityEngine.UIElements.UIR
namespace UnityEngine::UIElements::UIR {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.UIR.Utility/UnityEngine.UIElements.UIR.GPUBuffer`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class Utility::GPUBuffer_1 : public ::Il2CppObject {
    public:
    public:
    // private System.IntPtr buffer
    // Size: 0x8
    // Offset: 0x0
    ::System::IntPtr buffer;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    public:
    // Creating conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept {
      return buffer;
    }
    // Autogenerated instance field getter
    // Get instance field: private System.IntPtr buffer
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_buffer() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::UIR::Utility::GPUBuffer_1::dyn_buffer");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
      return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
  }; // UnityEngine.UIElements.UIR.Utility/UnityEngine.UIElements.UIR.GPUBuffer`1
  // Could not write size check! Type: UnityEngine.UIElements.UIR.Utility/UnityEngine.UIElements.UIR.GPUBuffer`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
