// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: ObjectPool`1<T>
  template<typename T>
  class ObjectPool_1;
  // Forward declaring type: VisualElement
  class VisualElement;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: VisualElementListPool
  class VisualElementListPool;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::VisualElementListPool);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::VisualElementListPool*, "UnityEngine.UIElements", "VisualElementListPool");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.VisualElementListPool
  // [TokenAttribute] Offset: FFFFFFFF
  class VisualElementListPool : public ::Il2CppObject {
    public:
    // Get static field: static private UnityEngine.UIElements.ObjectPool`1<System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement>> pool
    static ::UnityEngine::UIElements::ObjectPool_1<::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*>* _get_pool();
    // Set static field: static private UnityEngine.UIElements.ObjectPool`1<System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement>> pool
    static void _set_pool(::UnityEngine::UIElements::ObjectPool_1<::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*>* value);
    // static private System.Void .cctor()
    // Offset: 0x1C0D21C
    static void _cctor();
    // static public System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> Get(System.Int32 initialCapacity)
    // Offset: 0x1C0D0B4
    static ::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>* Get(int initialCapacity);
    // static public System.Void Release(System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> elements)
    // Offset: 0x1C0D180
    static void Release(::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>* elements);
  }; // UnityEngine.UIElements.VisualElementListPool
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElementListPool::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::VisualElementListPool::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElementListPool*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElementListPool::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>* (*)(int)>(&UnityEngine::UIElements::VisualElementListPool::Get)> {
  static const MethodInfo* get() {
    static auto* initialCapacity = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElementListPool*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{initialCapacity});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::VisualElementListPool::Release
// Il2CppName: Release
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::Generic::List_1<::UnityEngine::UIElements::VisualElement*>*)>(&UnityEngine::UIElements::VisualElementListPool::Release)> {
  static const MethodInfo* get() {
    static auto* elements = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "VisualElement")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::VisualElementListPool*), "Release", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{elements});
  }
};
