// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: PointerType
  class PointerType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::PointerType);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::PointerType*, "UnityEngine.UIElements", "PointerType");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.PointerType
  // [TokenAttribute] Offset: FFFFFFFF
  class PointerType : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.String mouse
    static ::StringW _get_mouse();
    // Set static field: static public readonly System.String mouse
    static void _set_mouse(::StringW value);
    // Get static field: static public readonly System.String touch
    static ::StringW _get_touch();
    // Set static field: static public readonly System.String touch
    static void _set_touch(::StringW value);
    // Get static field: static public readonly System.String pen
    static ::StringW _get_pen();
    // Set static field: static public readonly System.String pen
    static void _set_pen(::StringW value);
    // Get static field: static public readonly System.String unknown
    static ::StringW _get_unknown();
    // Set static field: static public readonly System.String unknown
    static void _set_unknown(::StringW value);
    // static private System.Void .cctor()
    // Offset: 0xDAB6CC
    static void _cctor();
    // static System.String GetPointerType(System.Int32 pointerId)
    // Offset: 0xDAB60C
    static ::StringW GetPointerType(int pointerId);
    // static System.Boolean IsDirectManipulationDevice(System.String pointerType)
    // Offset: 0xDA8B08
    static bool IsDirectManipulationDevice(::StringW pointerType);
  }; // UnityEngine.UIElements.PointerType
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::PointerType::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::PointerType::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PointerType*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PointerType::GetPointerType
// Il2CppName: GetPointerType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int)>(&UnityEngine::UIElements::PointerType::GetPointerType)> {
  static const MethodInfo* get() {
    static auto* pointerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PointerType*), "GetPointerType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerId});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::PointerType::IsDirectManipulationDevice
// Il2CppName: IsDirectManipulationDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&UnityEngine::UIElements::PointerType::IsDirectManipulationDevice)> {
  static const MethodInfo* get() {
    static auto* pointerType = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PointerType*), "IsDirectManipulationDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointerType});
  }
};
