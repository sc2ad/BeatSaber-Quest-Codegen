// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.IEventHandler
#include "UnityEngine/UIElements/IEventHandler.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: EventCallbackRegistry
  class EventCallbackRegistry;
  // Forward declaring type: EventBase
  class EventBase;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: CallbackEventHandler
  class CallbackEventHandler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::CallbackEventHandler);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::CallbackEventHandler*, "UnityEngine.UIElements", "CallbackEventHandler");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.CallbackEventHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class CallbackEventHandler : public ::Il2CppObject/*, public ::UnityEngine::UIElements::IEventHandler*/ {
    public:
    public:
    // private UnityEngine.UIElements.EventCallbackRegistry m_CallbackRegistry
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::UIElements::EventCallbackRegistry* m_CallbackRegistry;
    // Field size check
    static_assert(sizeof(::UnityEngine::UIElements::EventCallbackRegistry*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::UIElements::IEventHandler
    operator ::UnityEngine::UIElements::IEventHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::UIElements::IEventHandler*>(this);
    }
    // Creating conversion operator: operator ::UnityEngine::UIElements::EventCallbackRegistry*
    constexpr operator ::UnityEngine::UIElements::EventCallbackRegistry*() const noexcept {
      return m_CallbackRegistry;
    }
    // Get instance field reference: private UnityEngine.UIElements.EventCallbackRegistry m_CallbackRegistry
    [[deprecated("Use field access instead!")]] ::UnityEngine::UIElements::EventCallbackRegistry*& dyn_m_CallbackRegistry();
    // public System.Void SendEvent(UnityEngine.UIElements.EventBase e)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SendEvent(::UnityEngine::UIElements::EventBase* e);
    // System.Void HandleEventAtTargetPhase(UnityEngine.UIElements.EventBase evt)
    // Offset: 0xD9D77C
    void HandleEventAtTargetPhase(::UnityEngine::UIElements::EventBase* evt);
    // public System.Void HandleEvent(UnityEngine.UIElements.EventBase evt)
    // Offset: 0xD9D7D0
    void HandleEvent(::UnityEngine::UIElements::EventBase* evt);
    // public System.Boolean HasTrickleDownHandlers()
    // Offset: 0xD9D9B0
    bool HasTrickleDownHandlers();
    // public System.Boolean HasBubbleUpHandlers()
    // Offset: 0xD9D9F8
    bool HasBubbleUpHandlers();
    // protected System.Void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt)
    // Offset: 0xD9DA40
    void ExecuteDefaultActionAtTarget(::UnityEngine::UIElements::EventBase* evt);
    // protected System.Void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt)
    // Offset: 0xD9DA44
    void ExecuteDefaultAction(::UnityEngine::UIElements::EventBase* evt);
  }; // UnityEngine.UIElements.CallbackEventHandler
  #pragma pack(pop)
  static check_size<sizeof(CallbackEventHandler), 16 + sizeof(::UnityEngine::UIElements::EventCallbackRegistry*)> __UnityEngine_UIElements_CallbackEventHandlerSizeCheck;
  static_assert(sizeof(CallbackEventHandler) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::CallbackEventHandler::SendEvent
// Il2CppName: SendEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CallbackEventHandler::*)(::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::CallbackEventHandler::SendEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CallbackEventHandler*), "SendEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CallbackEventHandler::HandleEventAtTargetPhase
// Il2CppName: HandleEventAtTargetPhase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CallbackEventHandler::*)(::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::CallbackEventHandler::HandleEventAtTargetPhase)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CallbackEventHandler*), "HandleEventAtTargetPhase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CallbackEventHandler::HandleEvent
// Il2CppName: HandleEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CallbackEventHandler::*)(::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::CallbackEventHandler::HandleEvent)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CallbackEventHandler*), "HandleEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CallbackEventHandler::HasTrickleDownHandlers
// Il2CppName: HasTrickleDownHandlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::CallbackEventHandler::*)()>(&UnityEngine::UIElements::CallbackEventHandler::HasTrickleDownHandlers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CallbackEventHandler*), "HasTrickleDownHandlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CallbackEventHandler::HasBubbleUpHandlers
// Il2CppName: HasBubbleUpHandlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::UIElements::CallbackEventHandler::*)()>(&UnityEngine::UIElements::CallbackEventHandler::HasBubbleUpHandlers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CallbackEventHandler*), "HasBubbleUpHandlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CallbackEventHandler::ExecuteDefaultActionAtTarget
// Il2CppName: ExecuteDefaultActionAtTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CallbackEventHandler::*)(::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::CallbackEventHandler::ExecuteDefaultActionAtTarget)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CallbackEventHandler*), "ExecuteDefaultActionAtTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::CallbackEventHandler::ExecuteDefaultAction
// Il2CppName: ExecuteDefaultAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::CallbackEventHandler::*)(::UnityEngine::UIElements::EventBase*)>(&UnityEngine::UIElements::CallbackEventHandler::ExecuteDefaultAction)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::CallbackEventHandler*), "ExecuteDefaultAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
