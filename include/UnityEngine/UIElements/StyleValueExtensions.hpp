// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.StyleEnum`1
#include "UnityEngine/UIElements/StyleEnum_1.hpp"
// Including type: UnityEngine.UIElements.StyleInt
#include "UnityEngine/UIElements/StyleInt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: IConvertible because it is already included!
  // Skipping declaration: ValueType because it is already included!
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: StyleLength
  struct StyleLength;
  // Forward declaring type: StyleFloat
  struct StyleFloat;
  // Skipping declaration: IStyleValue`1 because it is already included!
}
// Forward declaring namespace: UnityEngine::UIElements::StyleSheets
namespace UnityEngine::UIElements::StyleSheets {
  // Forward declaring type: StyleValue
  struct StyleValue;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: StyleValueExtensions
  class StyleValueExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::StyleValueExtensions);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::StyleValueExtensions*, "UnityEngine.UIElements", "StyleValueExtensions");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.StyleValueExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class StyleValueExtensions : public ::Il2CppObject {
    public:
    // static UnityEngine.UIElements.StyleEnum`1<T> ToStyleEnum(UnityEngine.UIElements.StyleInt styleInt, T value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::UnityEngine::UIElements::StyleEnum_1<T> ToStyleEnum(::UnityEngine::UIElements::StyleInt styleInt, T value) {
      static_assert(std::is_convertible_v<std::remove_pointer_t<T>, ::System::IConvertible> && std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StyleValueExtensions::ToStyleEnum");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "StyleValueExtensions", "ToStyleEnum", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(styleInt), ::il2cpp_utils::ExtractType(value)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UIElements::StyleEnum_1<T>, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, styleInt, value);
    }
    // static UnityEngine.UIElements.StyleLength ToStyleLength(UnityEngine.UIElements.StyleSheets.StyleValue styleValue)
    // Offset: 0xDAEEA8
    static ::UnityEngine::UIElements::StyleLength ToStyleLength(::UnityEngine::UIElements::StyleSheets::StyleValue styleValue);
    // static UnityEngine.UIElements.StyleFloat ToStyleFloat(UnityEngine.UIElements.StyleSheets.StyleValue styleValue)
    // Offset: 0xDAEEB4
    static ::UnityEngine::UIElements::StyleFloat ToStyleFloat(::UnityEngine::UIElements::StyleSheets::StyleValue styleValue);
    // static System.String DebugString(UnityEngine.UIElements.IStyleValue`1<T> styleValue)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::StringW DebugString(::UnityEngine::UIElements::IStyleValue_1<T>* styleValue) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::StyleValueExtensions::DebugString");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UIElements", "StyleValueExtensions", "DebugString", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(styleValue)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, styleValue);
    }
  }; // UnityEngine.UIElements.StyleValueExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleValueExtensions::ToStyleEnum
// Il2CppName: ToStyleEnum
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleValueExtensions::ToStyleLength
// Il2CppName: ToStyleLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleLength (*)(::UnityEngine::UIElements::StyleSheets::StyleValue)>(&UnityEngine::UIElements::StyleValueExtensions::ToStyleLength)> {
  static const MethodInfo* get() {
    static auto* styleValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StyleValue")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleValueExtensions*), "ToStyleLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{styleValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleValueExtensions::ToStyleFloat
// Il2CppName: ToStyleFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::StyleFloat (*)(::UnityEngine::UIElements::StyleSheets::StyleValue)>(&UnityEngine::UIElements::StyleValueExtensions::ToStyleFloat)> {
  static const MethodInfo* get() {
    static auto* styleValue = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements.StyleSheets", "StyleValue")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::StyleValueExtensions*), "ToStyleFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{styleValue});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::StyleValueExtensions::DebugString
// Il2CppName: DebugString
// Cannot write MetadataGetter for generic methods!
