// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: IEventHandler
  class IEventHandler;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: MouseCaptureController
  class MouseCaptureController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::MouseCaptureController);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::MouseCaptureController*, "UnityEngine.UIElements", "MouseCaptureController");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.MouseCaptureController
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class MouseCaptureController : public ::Il2CppObject {
    public:
    // Get static field: static private System.Boolean m_IsMouseCapturedWarningEmitted
    static bool _get_m_IsMouseCapturedWarningEmitted();
    // Set static field: static private System.Boolean m_IsMouseCapturedWarningEmitted
    static void _set_m_IsMouseCapturedWarningEmitted(bool value);
    // Get static field: static private System.Boolean m_ReleaseMouseWarningEmitted
    static bool _get_m_ReleaseMouseWarningEmitted();
    // Set static field: static private System.Boolean m_ReleaseMouseWarningEmitted
    static void _set_m_ReleaseMouseWarningEmitted(bool value);
    // static private System.Void .cctor()
    // Offset: 0xDA6100
    static void _cctor();
    // static public System.Boolean HasMouseCapture(UnityEngine.UIElements.IEventHandler handler)
    // Offset: 0xDA52C4
    static bool HasMouseCapture(::UnityEngine::UIElements::IEventHandler* handler);
    // static public System.Void CaptureMouse(UnityEngine.UIElements.IEventHandler handler)
    // Offset: 0xDA5E00
    static void CaptureMouse(::UnityEngine::UIElements::IEventHandler* handler);
    // static public System.Void ReleaseMouse(UnityEngine.UIElements.IEventHandler handler)
    // Offset: 0xDA5FF0
    static void ReleaseMouse(::UnityEngine::UIElements::IEventHandler* handler);
  }; // UnityEngine.UIElements.MouseCaptureController
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::MouseCaptureController::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::MouseCaptureController::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MouseCaptureController*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::MouseCaptureController::HasMouseCapture
// Il2CppName: HasMouseCapture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::UIElements::IEventHandler*)>(&UnityEngine::UIElements::MouseCaptureController::HasMouseCapture)> {
  static const MethodInfo* get() {
    static auto* handler = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MouseCaptureController*), "HasMouseCapture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handler});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::MouseCaptureController::CaptureMouse
// Il2CppName: CaptureMouse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::IEventHandler*)>(&UnityEngine::UIElements::MouseCaptureController::CaptureMouse)> {
  static const MethodInfo* get() {
    static auto* handler = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MouseCaptureController*), "CaptureMouse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handler});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::MouseCaptureController::ReleaseMouse
// Il2CppName: ReleaseMouse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::UIElements::IEventHandler*)>(&UnityEngine::UIElements::MouseCaptureController::ReleaseMouse)> {
  static const MethodInfo* get() {
    static auto* handler = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "IEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::MouseCaptureController*), "ReleaseMouse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handler});
  }
};
