// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: PointerId
  class PointerId;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::PointerId);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::PointerId*, "UnityEngine.UIElements", "PointerId");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.PointerId
  // [TokenAttribute] Offset: FFFFFFFF
  class PointerId : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Int32 maxPointers
    static int _get_maxPointers();
    // Set static field: static public readonly System.Int32 maxPointers
    static void _set_maxPointers(int value);
    // Get static field: static public readonly System.Int32 invalidPointerId
    static int _get_invalidPointerId();
    // Set static field: static public readonly System.Int32 invalidPointerId
    static void _set_invalidPointerId(int value);
    // Get static field: static public readonly System.Int32 mousePointerId
    static int _get_mousePointerId();
    // Set static field: static public readonly System.Int32 mousePointerId
    static void _set_mousePointerId(int value);
    // Get static field: static public readonly System.Int32 touchPointerIdBase
    static int _get_touchPointerIdBase();
    // Set static field: static public readonly System.Int32 touchPointerIdBase
    static void _set_touchPointerIdBase(int value);
    // Get static field: static public readonly System.Int32 touchPointerCount
    static int _get_touchPointerCount();
    // Set static field: static public readonly System.Int32 touchPointerCount
    static void _set_touchPointerCount(int value);
    // Get static field: static public readonly System.Int32 penPointerIdBase
    static int _get_penPointerIdBase();
    // Set static field: static public readonly System.Int32 penPointerIdBase
    static void _set_penPointerIdBase(int value);
    // Get static field: static public readonly System.Int32 penPointerCount
    static int _get_penPointerCount();
    // Set static field: static public readonly System.Int32 penPointerCount
    static void _set_penPointerCount(int value);
    // static private System.Void .cctor()
    // Offset: 0xDAADD0
    static void _cctor();
  }; // UnityEngine.UIElements.PointerId
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::PointerId::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UIElements::PointerId::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::PointerId*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
