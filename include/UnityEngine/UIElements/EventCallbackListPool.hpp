// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Stack`1<T>
  template<typename T>
  class Stack_1;
}
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: EventCallbackList
  class EventCallbackList;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: EventCallbackListPool
  class EventCallbackListPool;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UIElements::EventCallbackListPool);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UIElements::EventCallbackListPool*, "UnityEngine.UIElements", "EventCallbackListPool");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UIElements.EventCallbackListPool
  // [TokenAttribute] Offset: FFFFFFFF
  class EventCallbackListPool : public ::Il2CppObject {
    public:
    public:
    // private readonly System.Collections.Generic.Stack`1<UnityEngine.UIElements.EventCallbackList> m_Stack
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::EventCallbackList*>* m_Stack;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::EventCallbackList*>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::EventCallbackList*>*
    constexpr operator ::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::EventCallbackList*>*() const noexcept {
      return m_Stack;
    }
    // Get instance field reference: private readonly System.Collections.Generic.Stack`1<UnityEngine.UIElements.EventCallbackList> m_Stack
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::EventCallbackList*>*& dyn_m_Stack();
    // public System.Void .ctor()
    // Offset: 0xDA13E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EventCallbackListPool* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventCallbackListPool::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EventCallbackListPool*, creationType>()));
    }
    // public UnityEngine.UIElements.EventCallbackList Get(UnityEngine.UIElements.EventCallbackList initializer)
    // Offset: 0xDA12B8
    ::UnityEngine::UIElements::EventCallbackList* Get(::UnityEngine::UIElements::EventCallbackList* initializer);
    // public System.Void Release(UnityEngine.UIElements.EventCallbackList element)
    // Offset: 0xDA1370
    void Release(::UnityEngine::UIElements::EventCallbackList* element);
  }; // UnityEngine.UIElements.EventCallbackListPool
  #pragma pack(pop)
  static check_size<sizeof(EventCallbackListPool), 16 + sizeof(::System::Collections::Generic::Stack_1<::UnityEngine::UIElements::EventCallbackList*>*)> __UnityEngine_UIElements_EventCallbackListPoolSizeCheck;
  static_assert(sizeof(EventCallbackListPool) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UIElements::EventCallbackListPool::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::UIElements::EventCallbackListPool::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::UIElements::EventCallbackList* (UnityEngine::UIElements::EventCallbackListPool::*)(::UnityEngine::UIElements::EventCallbackList*)>(&UnityEngine::UIElements::EventCallbackListPool::Get)> {
  static const MethodInfo* get() {
    static auto* initializer = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventCallbackList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::EventCallbackListPool*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{initializer});
  }
};
// Writing MetadataGetter for method: UnityEngine::UIElements::EventCallbackListPool::Release
// Il2CppName: Release
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::UIElements::EventCallbackListPool::*)(::UnityEngine::UIElements::EventCallbackList*)>(&UnityEngine::UIElements::EventCallbackListPool::Release)> {
  static const MethodInfo* get() {
    static auto* element = &::il2cpp_utils::GetClassFromName("UnityEngine.UIElements", "EventCallbackList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UIElements::EventCallbackListPool*), "Release", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{element});
  }
};
