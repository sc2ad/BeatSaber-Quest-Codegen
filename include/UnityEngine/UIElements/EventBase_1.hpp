// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.UIElements.EventBase
#include "UnityEngine/UIElements/EventBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: ObjectPool`1<T>
  template<typename T>
  class ObjectPool_1;
}
// Completed forward declares
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // Forward declaring type: EventBase`1<T>
  template<typename T>
  class EventBase_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::UIElements::EventBase_1, "UnityEngine.UIElements", "EventBase`1");
// Type namespace: UnityEngine.UIElements
namespace UnityEngine::UIElements {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.UIElements.EventBase`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class EventBase_1 : public ::UnityEngine::UIElements::EventBase {
    public:
    public:
    // private System.Int32 m_RefCount
    // Size: 0x4
    // Offset: 0x0
    int m_RefCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return m_RefCount;
    }
    // Autogenerated static field getter
    // Get static field: static private readonly System.Int64 s_TypeId
    static int64_t _get_s_TypeId() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventBase_1::_get_s_TypeId");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EventBase_1<T>*>::get(), "s_TypeId"));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly System.Int64 s_TypeId
    static void _set_s_TypeId(int64_t value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventBase_1::_set_s_TypeId");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EventBase_1<T>*>::get(), "s_TypeId", value));
    }
    // Autogenerated static field getter
    // Get static field: static private readonly UnityEngine.UIElements.ObjectPool`1<T> s_Pool
    static ::UnityEngine::UIElements::ObjectPool_1<T>* _get_s_Pool() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventBase_1::_get_s_Pool");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::UIElements::ObjectPool_1<T>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EventBase_1<T>*>::get(), "s_Pool"));
    }
    // Autogenerated static field setter
    // Set static field: static private readonly UnityEngine.UIElements.ObjectPool`1<T> s_Pool
    static void _set_s_Pool(::UnityEngine::UIElements::ObjectPool_1<T>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventBase_1::_set_s_Pool");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EventBase_1<T>*>::get(), "s_Pool", value));
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 m_RefCount
    [[deprecated("Use field access instead!")]] int& dyn_m_RefCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventBase_1::dyn_m_RefCount");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RefCount"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // static public System.Int64 TypeId()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static int64_t TypeId() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventBase_1::TypeId");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EventBase_1<T>*>::get(), "TypeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public T GetPooled()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static T GetPooled() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventBase_1::GetPooled");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EventBase_1<T>*>::get(), "GetPooled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static T GetPooled(UnityEngine.UIElements.EventBase e)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static T GetPooled(::UnityEngine::UIElements::EventBase* e) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventBase_1::GetPooled");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EventBase_1<T>*>::get(), "GetPooled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
    }
    // static private System.Void ReleasePooled(T evt)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void ReleasePooled(T evt) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventBase_1::ReleasePooled");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EventBase_1<T>*>::get(), "ReleasePooled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, evt);
    }
    // public override System.Int64 get_eventTypeId()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.EventBase
    // Base method: System.Int64 EventBase::get_eventTypeId()
    int64_t get_eventTypeId() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventBase_1::get_eventTypeId");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::EventBase*), -1));
      return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
    }
    // protected System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.EventBase
    // Base method: System.Void EventBase::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EventBase_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventBase_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EventBase_1<T>*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.EventBase
    // Base method: System.Void EventBase::.cctor()
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventBase_1::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EventBase_1<T>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // protected override System.Void Init()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.EventBase
    // Base method: System.Void EventBase::Init()
    void Init() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventBase_1::Init");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::EventBase*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // override System.Void Acquire()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.EventBase
    // Base method: System.Void EventBase::Acquire()
    void Acquire() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventBase_1::Acquire");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::EventBase*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public override System.Void Dispose()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: UnityEngine.UIElements.EventBase
    // Base method: System.Void EventBase::Dispose()
    void Dispose() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UIElements::EventBase_1::Dispose");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::UIElements::EventBase*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
  }; // UnityEngine.UIElements.EventBase`1
  // Could not write size check! Type: UnityEngine.UIElements.EventBase`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
