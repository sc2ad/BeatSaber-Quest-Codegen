// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.TreeInstance
#include "UnityEngine/TreeInstance.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
  // Forward declaring type: DetailPrototype
  class DetailPrototype;
  // Forward declaring type: TreePrototype
  class TreePrototype;
  // Forward declaring type: TerrainLayer
  class TerrainLayer;
  // Forward declaring type: Terrain
  class Terrain;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: TerrainData
  class TerrainData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::TerrainData);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TerrainData*, "UnityEngine", "TerrainData");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TerrainData
  // [TokenAttribute] Offset: FFFFFFFF
  // [UsedByNativeCodeAttribute] Offset: 10C31D0
  // [NativeHeaderAttribute] Offset: 10C31D0
  // [NativeHeaderAttribute] Offset: 10C31D0
  class TerrainData : public ::UnityEngine::Object {
    public:
    // Nested type: ::UnityEngine::TerrainData::BoundaryValueType
    struct BoundaryValueType;
    // static field const value: static private System.String k_ScriptingInterfaceName
    static constexpr const char* k_ScriptingInterfaceName = "TerrainDataScriptingInterface";
    // Get static field: static private System.String k_ScriptingInterfaceName
    static ::StringW _get_k_ScriptingInterfaceName();
    // Set static field: static private System.String k_ScriptingInterfaceName
    static void _set_k_ScriptingInterfaceName(::StringW value);
    // static field const value: static private System.String k_ScriptingInterfacePrefix
    static constexpr const char* k_ScriptingInterfacePrefix = "TerrainDataScriptingInterface::";
    // Get static field: static private System.String k_ScriptingInterfacePrefix
    static ::StringW _get_k_ScriptingInterfacePrefix();
    // Set static field: static private System.String k_ScriptingInterfacePrefix
    static void _set_k_ScriptingInterfacePrefix(::StringW value);
    // static field const value: static private System.String k_HeightmapPrefix
    static constexpr const char* k_HeightmapPrefix = "GetHeightmap().";
    // Get static field: static private System.String k_HeightmapPrefix
    static ::StringW _get_k_HeightmapPrefix();
    // Set static field: static private System.String k_HeightmapPrefix
    static void _set_k_HeightmapPrefix(::StringW value);
    // static field const value: static private System.String k_DetailDatabasePrefix
    static constexpr const char* k_DetailDatabasePrefix = "GetDetailDatabase().";
    // Get static field: static private System.String k_DetailDatabasePrefix
    static ::StringW _get_k_DetailDatabasePrefix();
    // Set static field: static private System.String k_DetailDatabasePrefix
    static void _set_k_DetailDatabasePrefix(::StringW value);
    // static field const value: static private System.String k_TreeDatabasePrefix
    static constexpr const char* k_TreeDatabasePrefix = "GetTreeDatabase().";
    // Get static field: static private System.String k_TreeDatabasePrefix
    static ::StringW _get_k_TreeDatabasePrefix();
    // Set static field: static private System.String k_TreeDatabasePrefix
    static void _set_k_TreeDatabasePrefix(::StringW value);
    // static field const value: static private System.String k_SplatDatabasePrefix
    static constexpr const char* k_SplatDatabasePrefix = "GetSplatDatabase().";
    // Get static field: static private System.String k_SplatDatabasePrefix
    static ::StringW _get_k_SplatDatabasePrefix();
    // Set static field: static private System.String k_SplatDatabasePrefix
    static void _set_k_SplatDatabasePrefix(::StringW value);
    // Get static field: static readonly System.Int32 k_MaximumResolution
    static int _get_k_MaximumResolution();
    // Set static field: static readonly System.Int32 k_MaximumResolution
    static void _set_k_MaximumResolution(int value);
    // Get static field: static readonly System.Int32 k_MinimumDetailResolutionPerPatch
    static int _get_k_MinimumDetailResolutionPerPatch();
    // Set static field: static readonly System.Int32 k_MinimumDetailResolutionPerPatch
    static void _set_k_MinimumDetailResolutionPerPatch(int value);
    // Get static field: static readonly System.Int32 k_MaximumDetailResolutionPerPatch
    static int _get_k_MaximumDetailResolutionPerPatch();
    // Set static field: static readonly System.Int32 k_MaximumDetailResolutionPerPatch
    static void _set_k_MaximumDetailResolutionPerPatch(int value);
    // Get static field: static readonly System.Int32 k_MaximumDetailPatchCount
    static int _get_k_MaximumDetailPatchCount();
    // Set static field: static readonly System.Int32 k_MaximumDetailPatchCount
    static void _set_k_MaximumDetailPatchCount(int value);
    // Get static field: static readonly System.Int32 k_MaximumDetailsPerRes
    static int _get_k_MaximumDetailsPerRes();
    // Set static field: static readonly System.Int32 k_MaximumDetailsPerRes
    static void _set_k_MaximumDetailsPerRes(int value);
    // Get static field: static readonly System.Int32 k_MinimumAlphamapResolution
    static int _get_k_MinimumAlphamapResolution();
    // Set static field: static readonly System.Int32 k_MinimumAlphamapResolution
    static void _set_k_MinimumAlphamapResolution(int value);
    // Get static field: static readonly System.Int32 k_MaximumAlphamapResolution
    static int _get_k_MaximumAlphamapResolution();
    // Set static field: static readonly System.Int32 k_MaximumAlphamapResolution
    static void _set_k_MaximumAlphamapResolution(int value);
    // Get static field: static readonly System.Int32 k_MinimumBaseMapResolution
    static int _get_k_MinimumBaseMapResolution();
    // Set static field: static readonly System.Int32 k_MinimumBaseMapResolution
    static void _set_k_MinimumBaseMapResolution(int value);
    // Get static field: static readonly System.Int32 k_MaximumBaseMapResolution
    static int _get_k_MaximumBaseMapResolution();
    // Set static field: static readonly System.Int32 k_MaximumBaseMapResolution
    static void _set_k_MaximumBaseMapResolution(int value);
    // public System.Int32 get_heightmapResolution()
    // Offset: 0x2B756F8
    int get_heightmapResolution();
    // public System.Void set_heightmapResolution(System.Int32 value)
    // Offset: 0x2B75778
    void set_heightmapResolution(int value);
    // private System.Int32 get_internalHeightmapResolution()
    // Offset: 0x2B75738
    int get_internalHeightmapResolution();
    // private System.Void set_internalHeightmapResolution(System.Int32 value)
    // Offset: 0x2B75914
    void set_internalHeightmapResolution(int value);
    // public UnityEngine.Vector3 get_size()
    // Offset: 0x2B741D4
    ::UnityEngine::Vector3 get_size();
    // public System.Void set_size(UnityEngine.Vector3 value)
    // Offset: 0x2B759B4
    void set_size(::UnityEngine::Vector3 value);
    // public System.Int32 get_detailResolutionPerPatch()
    // Offset: 0x2B76480
    int get_detailResolutionPerPatch();
    // public System.Void set_detailPrototypes(UnityEngine.DetailPrototype[] value)
    // Offset: 0x2B76500
    void set_detailPrototypes(::ArrayW<::UnityEngine::DetailPrototype*> value);
    // public UnityEngine.TreeInstance[] get_treeInstances()
    // Offset: 0x2B76688
    ::ArrayW<::UnityEngine::TreeInstance> get_treeInstances();
    // public UnityEngine.TreePrototype[] get_treePrototypes()
    // Offset: 0x2B76760
    ::ArrayW<::UnityEngine::TreePrototype*> get_treePrototypes();
    // public System.Void set_treePrototypes(UnityEngine.TreePrototype[] value)
    // Offset: 0x2B767A0
    void set_treePrototypes(::ArrayW<::UnityEngine::TreePrototype*> value);
    // public System.Int32 get_alphamapLayers()
    // Offset: 0x2B767F0
    int get_alphamapLayers();
    // public System.Int32 get_alphamapResolution()
    // Offset: 0x2B76980
    int get_alphamapResolution();
    // public System.Void set_alphamapResolution(System.Int32 value)
    // Offset: 0x2B76A00
    void set_alphamapResolution(int value);
    // private System.Int32 get_Internal_alphamapResolution()
    // Offset: 0x2B769C0
    int get_Internal_alphamapResolution();
    // private System.Void set_Internal_alphamapResolution(System.Int32 value)
    // Offset: 0x2B76CF4
    void set_Internal_alphamapResolution(int value);
    // public System.Int32 get_alphamapWidth()
    // Offset: 0x2B76D84
    int get_alphamapWidth();
    // public System.Int32 get_alphamapHeight()
    // Offset: 0x2B76DC4
    int get_alphamapHeight();
    // public UnityEngine.TerrainLayer[] get_terrainLayers()
    // Offset: 0x2B7704C
    ::ArrayW<::UnityEngine::TerrainLayer*> get_terrainLayers();
    // public System.Void set_terrainLayers(UnityEngine.TerrainLayer[] value)
    // Offset: 0x2B7708C
    void set_terrainLayers(::ArrayW<::UnityEngine::TerrainLayer*> value);
    // UnityEngine.Terrain[] get_users()
    // Offset: 0x2B72904
    ::ArrayW<::UnityEngine::Terrain*> get_users();
    // public System.Void .ctor()
    // Offset: 0x2B75608
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TerrainData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TerrainData*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x2B770DC
    static void _cctor();
    // static private System.Int32 GetBoundaryValue(UnityEngine.TerrainData/UnityEngine.BoundaryValueType type)
    // Offset: 0x2B755C8
    static int GetBoundaryValue(::UnityEngine::TerrainData::BoundaryValueType type);
    // static private System.Void Internal_Create(UnityEngine.TerrainData terrainData)
    // Offset: 0x2B756B8
    static void Internal_Create(::UnityEngine::TerrainData* terrainData);
    // public System.Single[,] GetHeights(System.Int32 xBase, System.Int32 yBase, System.Int32 width, System.Int32 height)
    // Offset: 0x2B75A5C
    ::ArrayW<float> GetHeights(int xBase, int yBase, int width, int height);
    // private System.Single[,] Internal_GetHeights(System.Int32 xBase, System.Int32 yBase, System.Int32 width, System.Int32 height)
    // Offset: 0x2B75BA8
    ::ArrayW<float> Internal_GetHeights(int xBase, int yBase, int width, int height);
    // public System.Void SetHeights(System.Int32 xBase, System.Int32 yBase, System.Single[,] heights)
    // Offset: 0x2B75C18
    void SetHeights(int xBase, int yBase, ::ArrayW<float> heights);
    // private System.Void Internal_SetHeights(System.Int32 xBase, System.Int32 yBase, System.Int32 width, System.Int32 height, System.Single[,] heights)
    // Offset: 0x2B75F44
    void Internal_SetHeights(int xBase, int yBase, int width, int height, ::ArrayW<float> heights);
    // public System.Void SetDetailResolution(System.Int32 detailResolution, System.Int32 resolutionPerPatch)
    // Offset: 0x2B75FC4
    void SetDetailResolution(int detailResolution, int resolutionPerPatch);
    // private System.Void Internal_SetDetailResolution(System.Int32 patchCount, System.Int32 resolutionPerPatch)
    // Offset: 0x2B76428
    void Internal_SetDetailResolution(int patchCount, int resolutionPerPatch);
    // public System.Void RefreshPrototypes()
    // Offset: 0x2B764C0
    void RefreshPrototypes();
    // public System.Void SetDetailLayer(System.Int32 xBase, System.Int32 yBase, System.Int32 layer, System.Int32[,] details)
    // Offset: 0x2B76550
    void SetDetailLayer(int xBase, int yBase, int layer, ::ArrayW<int> details);
    // private System.Void Internal_SetDetailLayer(System.Int32 xBase, System.Int32 yBase, System.Int32 totalWidth, System.Int32 totalHeight, System.Int32 detailIndex, System.Int32[,] data)
    // Offset: 0x2B76600
    void Internal_SetDetailLayer(int xBase, int yBase, int totalWidth, int totalHeight, int detailIndex, ::ArrayW<int> data);
    // private UnityEngine.TreeInstance[] Internal_GetTreeInstances()
    // Offset: 0x2B766C8
    ::ArrayW<::UnityEngine::TreeInstance> Internal_GetTreeInstances();
    // public System.Void SetTreeInstances(UnityEngine.TreeInstance[] instances, System.Boolean snapToHeightmap)
    // Offset: 0x2B76708
    void SetTreeInstances(::ArrayW<::UnityEngine::TreeInstance> instances, bool snapToHeightmap);
    // public System.Single[,,] GetAlphamaps(System.Int32 x, System.Int32 y, System.Int32 width, System.Int32 height)
    // Offset: 0x2B76830
    ::ArrayW<float> GetAlphamaps(int x, int y, int width, int height);
    // private System.Single[,,] Internal_GetAlphamaps(System.Int32 x, System.Int32 y, System.Int32 width, System.Int32 height)
    // Offset: 0x2B76910
    ::ArrayW<float> Internal_GetAlphamaps(int x, int y, int width, int height);
    // System.Single GetAlphamapResolutionInternal()
    // Offset: 0x2B76D44
    float GetAlphamapResolutionInternal();
    // public System.Void SetAlphamaps(System.Int32 x, System.Int32 y, System.Single[,,] map)
    // Offset: 0x2B76E04
    void SetAlphamaps(int x, int y, ::ArrayW<float> map);
    // private System.Void Internal_SetAlphamaps(System.Int32 x, System.Int32 y, System.Int32 width, System.Int32 height, System.Single[,,] map)
    // Offset: 0x2B76FCC
    void Internal_SetAlphamaps(int x, int y, int width, int height, ::ArrayW<float> map);
    // private System.Void get_size_Injected(out UnityEngine.Vector3 ret)
    // Offset: 0x2B75964
    void get_size_Injected(ByRef<::UnityEngine::Vector3> ret);
    // private System.Void set_size_Injected(ref UnityEngine.Vector3 value)
    // Offset: 0x2B75A0C
    void set_size_Injected(ByRef<::UnityEngine::Vector3> value);
  }; // UnityEngine.TerrainData
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TerrainData::get_heightmapResolution
// Il2CppName: get_heightmapResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TerrainData::*)()>(&UnityEngine::TerrainData::get_heightmapResolution)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "get_heightmapResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::set_heightmapResolution
// Il2CppName: set_heightmapResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(int)>(&UnityEngine::TerrainData::set_heightmapResolution)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "set_heightmapResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::get_internalHeightmapResolution
// Il2CppName: get_internalHeightmapResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TerrainData::*)()>(&UnityEngine::TerrainData::get_internalHeightmapResolution)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "get_internalHeightmapResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::set_internalHeightmapResolution
// Il2CppName: set_internalHeightmapResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(int)>(&UnityEngine::TerrainData::set_internalHeightmapResolution)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "set_internalHeightmapResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::get_size
// Il2CppName: get_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::TerrainData::*)()>(&UnityEngine::TerrainData::get_size)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "get_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::set_size
// Il2CppName: set_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(::UnityEngine::Vector3)>(&UnityEngine::TerrainData::set_size)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "set_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::get_detailResolutionPerPatch
// Il2CppName: get_detailResolutionPerPatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TerrainData::*)()>(&UnityEngine::TerrainData::get_detailResolutionPerPatch)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "get_detailResolutionPerPatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::set_detailPrototypes
// Il2CppName: set_detailPrototypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(::ArrayW<::UnityEngine::DetailPrototype*>)>(&UnityEngine::TerrainData::set_detailPrototypes)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "DetailPrototype"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "set_detailPrototypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::get_treeInstances
// Il2CppName: get_treeInstances
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::TreeInstance> (UnityEngine::TerrainData::*)()>(&UnityEngine::TerrainData::get_treeInstances)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "get_treeInstances", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::get_treePrototypes
// Il2CppName: get_treePrototypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::TreePrototype*> (UnityEngine::TerrainData::*)()>(&UnityEngine::TerrainData::get_treePrototypes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "get_treePrototypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::set_treePrototypes
// Il2CppName: set_treePrototypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(::ArrayW<::UnityEngine::TreePrototype*>)>(&UnityEngine::TerrainData::set_treePrototypes)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "TreePrototype"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "set_treePrototypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::get_alphamapLayers
// Il2CppName: get_alphamapLayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TerrainData::*)()>(&UnityEngine::TerrainData::get_alphamapLayers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "get_alphamapLayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::get_alphamapResolution
// Il2CppName: get_alphamapResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TerrainData::*)()>(&UnityEngine::TerrainData::get_alphamapResolution)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "get_alphamapResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::set_alphamapResolution
// Il2CppName: set_alphamapResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(int)>(&UnityEngine::TerrainData::set_alphamapResolution)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "set_alphamapResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::get_Internal_alphamapResolution
// Il2CppName: get_Internal_alphamapResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TerrainData::*)()>(&UnityEngine::TerrainData::get_Internal_alphamapResolution)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "get_Internal_alphamapResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::set_Internal_alphamapResolution
// Il2CppName: set_Internal_alphamapResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(int)>(&UnityEngine::TerrainData::set_Internal_alphamapResolution)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "set_Internal_alphamapResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::get_alphamapWidth
// Il2CppName: get_alphamapWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TerrainData::*)()>(&UnityEngine::TerrainData::get_alphamapWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "get_alphamapWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::get_alphamapHeight
// Il2CppName: get_alphamapHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TerrainData::*)()>(&UnityEngine::TerrainData::get_alphamapHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "get_alphamapHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::get_terrainLayers
// Il2CppName: get_terrainLayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::TerrainLayer*> (UnityEngine::TerrainData::*)()>(&UnityEngine::TerrainData::get_terrainLayers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "get_terrainLayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::set_terrainLayers
// Il2CppName: set_terrainLayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(::ArrayW<::UnityEngine::TerrainLayer*>)>(&UnityEngine::TerrainData::set_terrainLayers)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "TerrainLayer"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "set_terrainLayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::get_users
// Il2CppName: get_users
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Terrain*> (UnityEngine::TerrainData::*)()>(&UnityEngine::TerrainData::get_users)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "get_users", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::TerrainData::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::TerrainData::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::GetBoundaryValue
// Il2CppName: GetBoundaryValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::TerrainData::BoundaryValueType)>(&UnityEngine::TerrainData::GetBoundaryValue)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("UnityEngine", "TerrainData/BoundaryValueType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "GetBoundaryValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::Internal_Create
// Il2CppName: Internal_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::TerrainData*)>(&UnityEngine::TerrainData::Internal_Create)> {
  static const MethodInfo* get() {
    static auto* terrainData = &::il2cpp_utils::GetClassFromName("UnityEngine", "TerrainData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "Internal_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{terrainData});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::GetHeights
// Il2CppName: GetHeights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<float> (UnityEngine::TerrainData::*)(int, int, int, int)>(&UnityEngine::TerrainData::GetHeights)> {
  static const MethodInfo* get() {
    static auto* xBase = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* yBase = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "GetHeights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xBase, yBase, width, height});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::Internal_GetHeights
// Il2CppName: Internal_GetHeights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<float> (UnityEngine::TerrainData::*)(int, int, int, int)>(&UnityEngine::TerrainData::Internal_GetHeights)> {
  static const MethodInfo* get() {
    static auto* xBase = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* yBase = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "Internal_GetHeights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xBase, yBase, width, height});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::SetHeights
// Il2CppName: SetHeights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(int, int, ::ArrayW<float>)>(&UnityEngine::TerrainData::SetHeights)> {
  static const MethodInfo* get() {
    static auto* xBase = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* yBase = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* heights = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "SetHeights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xBase, yBase, heights});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::Internal_SetHeights
// Il2CppName: Internal_SetHeights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(int, int, int, int, ::ArrayW<float>)>(&UnityEngine::TerrainData::Internal_SetHeights)> {
  static const MethodInfo* get() {
    static auto* xBase = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* yBase = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* heights = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "Internal_SetHeights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xBase, yBase, width, height, heights});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::SetDetailResolution
// Il2CppName: SetDetailResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(int, int)>(&UnityEngine::TerrainData::SetDetailResolution)> {
  static const MethodInfo* get() {
    static auto* detailResolution = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* resolutionPerPatch = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "SetDetailResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{detailResolution, resolutionPerPatch});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::Internal_SetDetailResolution
// Il2CppName: Internal_SetDetailResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(int, int)>(&UnityEngine::TerrainData::Internal_SetDetailResolution)> {
  static const MethodInfo* get() {
    static auto* patchCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* resolutionPerPatch = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "Internal_SetDetailResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{patchCount, resolutionPerPatch});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::RefreshPrototypes
// Il2CppName: RefreshPrototypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)()>(&UnityEngine::TerrainData::RefreshPrototypes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "RefreshPrototypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::SetDetailLayer
// Il2CppName: SetDetailLayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(int, int, int, ::ArrayW<int>)>(&UnityEngine::TerrainData::SetDetailLayer)> {
  static const MethodInfo* get() {
    static auto* xBase = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* yBase = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* details = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "SetDetailLayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xBase, yBase, layer, details});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::Internal_SetDetailLayer
// Il2CppName: Internal_SetDetailLayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(int, int, int, int, int, ::ArrayW<int>)>(&UnityEngine::TerrainData::Internal_SetDetailLayer)> {
  static const MethodInfo* get() {
    static auto* xBase = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* yBase = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* totalWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* totalHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* detailIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "Internal_SetDetailLayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{xBase, yBase, totalWidth, totalHeight, detailIndex, data});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::Internal_GetTreeInstances
// Il2CppName: Internal_GetTreeInstances
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::TreeInstance> (UnityEngine::TerrainData::*)()>(&UnityEngine::TerrainData::Internal_GetTreeInstances)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "Internal_GetTreeInstances", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::SetTreeInstances
// Il2CppName: SetTreeInstances
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(::ArrayW<::UnityEngine::TreeInstance>, bool)>(&UnityEngine::TerrainData::SetTreeInstances)> {
  static const MethodInfo* get() {
    static auto* instances = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "TreeInstance"), 1)->byval_arg;
    static auto* snapToHeightmap = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "SetTreeInstances", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instances, snapToHeightmap});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::GetAlphamaps
// Il2CppName: GetAlphamaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<float> (UnityEngine::TerrainData::*)(int, int, int, int)>(&UnityEngine::TerrainData::GetAlphamaps)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "GetAlphamaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y, width, height});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::Internal_GetAlphamaps
// Il2CppName: Internal_GetAlphamaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<float> (UnityEngine::TerrainData::*)(int, int, int, int)>(&UnityEngine::TerrainData::Internal_GetAlphamaps)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "Internal_GetAlphamaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y, width, height});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::GetAlphamapResolutionInternal
// Il2CppName: GetAlphamapResolutionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::TerrainData::*)()>(&UnityEngine::TerrainData::GetAlphamapResolutionInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "GetAlphamapResolutionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::SetAlphamaps
// Il2CppName: SetAlphamaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(int, int, ::ArrayW<float>)>(&UnityEngine::TerrainData::SetAlphamaps)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* map = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "SetAlphamaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y, map});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::Internal_SetAlphamaps
// Il2CppName: Internal_SetAlphamaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(int, int, int, int, ::ArrayW<float>)>(&UnityEngine::TerrainData::Internal_SetAlphamaps)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* map = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "Internal_SetAlphamaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y, width, height, map});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::get_size_Injected
// Il2CppName: get_size_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(ByRef<::UnityEngine::Vector3>)>(&UnityEngine::TerrainData::get_size_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "get_size_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::TerrainData::set_size_Injected
// Il2CppName: set_size_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TerrainData::*)(ByRef<::UnityEngine::Vector3>)>(&UnityEngine::TerrainData::set_size_Injected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TerrainData*), "set_size_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
