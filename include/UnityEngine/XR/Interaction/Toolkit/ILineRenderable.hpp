// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: ILineRenderable
  class ILineRenderable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::ILineRenderable);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::ILineRenderable*, "UnityEngine.XR.Interaction.Toolkit", "ILineRenderable");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.ILineRenderable
  // [TokenAttribute] Offset: FFFFFFFF
  class ILineRenderable {
    public:
    // public System.Boolean GetLinePoints(ref UnityEngine.Vector3[] linePoints, out System.Int32 numPoints)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetLinePoints(ByRef<::ArrayW<::UnityEngine::Vector3>> linePoints, ByRef<int> numPoints);
    // public System.Boolean TryGetHitInfo(out UnityEngine.Vector3 position, out UnityEngine.Vector3 normal, out System.Int32 positionInLine, out System.Boolean isValidTarget)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TryGetHitInfo(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> normal, ByRef<int> positionInLine, ByRef<bool> isValidTarget);
  }; // UnityEngine.XR.Interaction.Toolkit.ILineRenderable
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ILineRenderable::GetLinePoints
// Il2CppName: GetLinePoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::ILineRenderable::*)(ByRef<::ArrayW<::UnityEngine::Vector3>>, ByRef<int>)>(&UnityEngine::XR::Interaction::Toolkit::ILineRenderable::GetLinePoints)> {
  static const MethodInfo* get() {
    static auto* linePoints = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->this_arg;
    static auto* numPoints = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::ILineRenderable*), "GetLinePoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{linePoints, numPoints});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::ILineRenderable::TryGetHitInfo
// Il2CppName: TryGetHitInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::ILineRenderable::*)(ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Vector3>, ByRef<int>, ByRef<bool>)>(&UnityEngine::XR::Interaction::Toolkit::ILineRenderable::TryGetHitInfo)> {
  static const MethodInfo* get() {
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* normal = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* positionInLine = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* isValidTarget = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::ILineRenderable*), "TryGetHitInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{position, normal, positionInLine, isValidTarget});
  }
};
