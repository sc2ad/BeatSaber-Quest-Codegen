// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.CursorLockMode
#include "UnityEngine/CursorLockMode.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedHMDState
#include "UnityEngine/XR/Interaction/Toolkit/Inputs/Simulation/XRSimulatedHMDState.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedControllerState
#include "UnityEngine/XR/Interaction/Toolkit/Inputs/Simulation/XRSimulatedControllerState.hpp"
// Including type: UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext
#include "UnityEngine/InputSystem/InputAction_CallbackContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation
namespace UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation {
  // Skipping declaration: Space because it is already included!
  // Forward declaring type: XRSimulatedController
  class XRSimulatedController;
  // Forward declaring type: XRSimulatedHMD
  class XRSimulatedHMD;
  // Skipping declaration: TransformationMode because it is already included!
  // Skipping declaration: Axis2DTargets because it is already included!
}
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputActionReference
  class InputActionReference;
  // Forward declaring type: InputAction
  class InputAction;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Skipping declaration: Quaternion because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation
namespace UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation {
  // Forward declaring type: XRDeviceSimulator
  class XRDeviceSimulator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*, "UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation", "XRDeviceSimulator");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation
namespace UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation {
  // Size: 0x2E8
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultExecutionOrder] Offset: 97F284
  class XRDeviceSimulator : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space
    struct Space;
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode
    struct TransformationMode;
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets
    struct Axis2DTargets;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space
    // [TokenAttribute] Offset: FFFFFFFF
    struct Space/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: Space
      constexpr Space(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space Local
      static constexpr const int Local = 0;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space Local
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space _get_Local();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space Local
      static void _set_Local(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space Parent
      static constexpr const int Parent = 1;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space Parent
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space _get_Parent();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space Parent
      static void _set_Parent(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space Screen
      static constexpr const int Screen = 2;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space Screen
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space _get_Screen();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space Screen
      static void _set_Screen(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space
    #pragma pack(pop)
    static check_size<sizeof(XRDeviceSimulator::Space), 0 + sizeof(int)> __UnityEngine_XR_Interaction_Toolkit_Inputs_Simulation_XRDeviceSimulator_SpaceSizeCheck;
    static_assert(sizeof(XRDeviceSimulator::Space) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.TransformationMode
    // [TokenAttribute] Offset: FFFFFFFF
    struct TransformationMode/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: TransformationMode
      constexpr TransformationMode(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.TransformationMode Translate
      static constexpr const int Translate = 0;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.TransformationMode Translate
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode _get_Translate();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.TransformationMode Translate
      static void _set_Translate(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.TransformationMode Rotate
      static constexpr const int Rotate = 1;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.TransformationMode Rotate
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode _get_Rotate();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.TransformationMode Rotate
      static void _set_Rotate(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.TransformationMode
    #pragma pack(pop)
    static check_size<sizeof(XRDeviceSimulator::TransformationMode), 0 + sizeof(int)> __UnityEngine_XR_Interaction_Toolkit_Inputs_Simulation_XRDeviceSimulator_TransformationModeSizeCheck;
    static_assert(sizeof(XRDeviceSimulator::TransformationMode) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets
    // [TokenAttribute] Offset: FFFFFFFF
    // [FlagsAttribute] Offset: FFFFFFFF
    struct Axis2DTargets/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: Axis2DTargets
      constexpr Axis2DTargets(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets None
      static constexpr const int None = 0;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets None
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets _get_None();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets None
      static void _set_None(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets Position
      static constexpr const int Position = 1;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets Position
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets _get_Position();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets Position
      static void _set_Position(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets Primary2DAxis
      static constexpr const int Primary2DAxis = 2;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets Primary2DAxis
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets _get_Primary2DAxis();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets Primary2DAxis
      static void _set_Primary2DAxis(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets Secondary2DAxis
      static constexpr const int Secondary2DAxis = 4;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets Secondary2DAxis
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets _get_Secondary2DAxis();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets Secondary2DAxis
      static void _set_Secondary2DAxis(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets
    #pragma pack(pop)
    static check_size<sizeof(XRDeviceSimulator::Axis2DTargets), 0 + sizeof(int)> __UnityEngine_XR_Interaction_Toolkit_Inputs_Simulation_XRDeviceSimulator_Axis2DTargetsSizeCheck;
    static_assert(sizeof(XRDeviceSimulator::Axis2DTargets) == 0x4);
    public:
    // [TooltipAttribute] Offset: 0x982A7C
    // private UnityEngine.InputSystem.InputActionReference m_KeyboardXTranslateAction
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::InputSystem::InputActionReference* m_KeyboardXTranslateAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982AC8
    // private UnityEngine.InputSystem.InputActionReference m_KeyboardYTranslateAction
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::InputSystem::InputActionReference* m_KeyboardYTranslateAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982B14
    // private UnityEngine.InputSystem.InputActionReference m_KeyboardZTranslateAction
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::InputSystem::InputActionReference* m_KeyboardZTranslateAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982B60
    // private UnityEngine.InputSystem.InputActionReference m_ManipulateLeftAction
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::InputSystem::InputActionReference* m_ManipulateLeftAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982BAC
    // private UnityEngine.InputSystem.InputActionReference m_ManipulateRightAction
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::InputSystem::InputActionReference* m_ManipulateRightAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982BF8
    // private UnityEngine.InputSystem.InputActionReference m_ToggleManipulateLeftAction
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::InputSystem::InputActionReference* m_ToggleManipulateLeftAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982C44
    // private UnityEngine.InputSystem.InputActionReference m_ToggleManipulateRightAction
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::InputSystem::InputActionReference* m_ToggleManipulateRightAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982C90
    // private UnityEngine.InputSystem.InputActionReference m_ManipulateHeadAction
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::InputSystem::InputActionReference* m_ManipulateHeadAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982CDC
    // private UnityEngine.InputSystem.InputActionReference m_MouseDeltaAction
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::InputSystem::InputActionReference* m_MouseDeltaAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982D28
    // private UnityEngine.InputSystem.InputActionReference m_MouseScrollAction
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::InputSystem::InputActionReference* m_MouseScrollAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982D74
    // private UnityEngine.InputSystem.InputActionReference m_RotateModeOverrideAction
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::InputSystem::InputActionReference* m_RotateModeOverrideAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982DC0
    // private UnityEngine.InputSystem.InputActionReference m_ToggleMouseTransformationModeAction
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::InputSystem::InputActionReference* m_ToggleMouseTransformationModeAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982E0C
    // private UnityEngine.InputSystem.InputActionReference m_NegateModeAction
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::InputSystem::InputActionReference* m_NegateModeAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982E58
    // private UnityEngine.InputSystem.InputActionReference m_XConstraintAction
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::InputSystem::InputActionReference* m_XConstraintAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982EA4
    // private UnityEngine.InputSystem.InputActionReference m_YConstraintAction
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::InputSystem::InputActionReference* m_YConstraintAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982EF0
    // private UnityEngine.InputSystem.InputActionReference m_ZConstraintAction
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::InputSystem::InputActionReference* m_ZConstraintAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982F3C
    // private UnityEngine.InputSystem.InputActionReference m_ResetAction
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::InputSystem::InputActionReference* m_ResetAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982F88
    // private UnityEngine.InputSystem.InputActionReference m_ToggleCursorLockAction
    // Size: 0x8
    // Offset: 0xA0
    ::UnityEngine::InputSystem::InputActionReference* m_ToggleCursorLockAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x982FD4
    // private UnityEngine.InputSystem.InputActionReference m_ToggleDevicePositionTargetAction
    // Size: 0x8
    // Offset: 0xA8
    ::UnityEngine::InputSystem::InputActionReference* m_ToggleDevicePositionTargetAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x983020
    // private UnityEngine.InputSystem.InputActionReference m_TogglePrimary2DAxisTargetAction
    // Size: 0x8
    // Offset: 0xB0
    ::UnityEngine::InputSystem::InputActionReference* m_TogglePrimary2DAxisTargetAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x98306C
    // private UnityEngine.InputSystem.InputActionReference m_ToggleSecondary2DAxisTargetAction
    // Size: 0x8
    // Offset: 0xB8
    ::UnityEngine::InputSystem::InputActionReference* m_ToggleSecondary2DAxisTargetAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x9830B8
    // private UnityEngine.InputSystem.InputActionReference m_Axis2DAction
    // Size: 0x8
    // Offset: 0xC0
    ::UnityEngine::InputSystem::InputActionReference* m_Axis2DAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x983104
    // private UnityEngine.InputSystem.InputActionReference m_RestingHandAxis2DAction
    // Size: 0x8
    // Offset: 0xC8
    ::UnityEngine::InputSystem::InputActionReference* m_RestingHandAxis2DAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x983150
    // private UnityEngine.InputSystem.InputActionReference m_GripAction
    // Size: 0x8
    // Offset: 0xD0
    ::UnityEngine::InputSystem::InputActionReference* m_GripAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x98319C
    // private UnityEngine.InputSystem.InputActionReference m_TriggerAction
    // Size: 0x8
    // Offset: 0xD8
    ::UnityEngine::InputSystem::InputActionReference* m_TriggerAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x9831E8
    // private UnityEngine.InputSystem.InputActionReference m_PrimaryButtonAction
    // Size: 0x8
    // Offset: 0xE0
    ::UnityEngine::InputSystem::InputActionReference* m_PrimaryButtonAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x983234
    // private UnityEngine.InputSystem.InputActionReference m_SecondaryButtonAction
    // Size: 0x8
    // Offset: 0xE8
    ::UnityEngine::InputSystem::InputActionReference* m_SecondaryButtonAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x983280
    // private UnityEngine.InputSystem.InputActionReference m_MenuAction
    // Size: 0x8
    // Offset: 0xF0
    ::UnityEngine::InputSystem::InputActionReference* m_MenuAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x9832CC
    // private UnityEngine.InputSystem.InputActionReference m_Primary2DAxisClickAction
    // Size: 0x8
    // Offset: 0xF8
    ::UnityEngine::InputSystem::InputActionReference* m_Primary2DAxisClickAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x983318
    // private UnityEngine.InputSystem.InputActionReference m_Secondary2DAxisClickAction
    // Size: 0x8
    // Offset: 0x100
    ::UnityEngine::InputSystem::InputActionReference* m_Secondary2DAxisClickAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x983364
    // private UnityEngine.InputSystem.InputActionReference m_Primary2DAxisTouchAction
    // Size: 0x8
    // Offset: 0x108
    ::UnityEngine::InputSystem::InputActionReference* m_Primary2DAxisTouchAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x9833B0
    // private UnityEngine.InputSystem.InputActionReference m_Secondary2DAxisTouchAction
    // Size: 0x8
    // Offset: 0x110
    ::UnityEngine::InputSystem::InputActionReference* m_Secondary2DAxisTouchAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x9833FC
    // private UnityEngine.InputSystem.InputActionReference m_PrimaryTouchAction
    // Size: 0x8
    // Offset: 0x118
    ::UnityEngine::InputSystem::InputActionReference* m_PrimaryTouchAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x983448
    // private UnityEngine.InputSystem.InputActionReference m_SecondaryTouchAction
    // Size: 0x8
    // Offset: 0x120
    ::UnityEngine::InputSystem::InputActionReference* m_SecondaryTouchAction;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::InputActionReference*) == 0x8);
    // [TooltipAttribute] Offset: 0x983494
    // private UnityEngine.Transform m_CameraTransform
    // Size: 0x8
    // Offset: 0x128
    ::UnityEngine::Transform* m_CameraTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // [TooltipAttribute] Offset: 0x9834E0
    // private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space m_KeyboardTranslateSpace
    // Size: 0x4
    // Offset: 0x130
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space m_KeyboardTranslateSpace;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space) == 0x4);
    // [TooltipAttribute] Offset: 0x98352C
    // private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space m_MouseTranslateSpace
    // Size: 0x4
    // Offset: 0x134
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space m_MouseTranslateSpace;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space) == 0x4);
    // [TooltipAttribute] Offset: 0x983578
    // private System.Single m_KeyboardXTranslateSpeed
    // Size: 0x4
    // Offset: 0x138
    float m_KeyboardXTranslateSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [TooltipAttribute] Offset: 0x9835C4
    // private System.Single m_KeyboardYTranslateSpeed
    // Size: 0x4
    // Offset: 0x13C
    float m_KeyboardYTranslateSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [TooltipAttribute] Offset: 0x983610
    // private System.Single m_KeyboardZTranslateSpeed
    // Size: 0x4
    // Offset: 0x140
    float m_KeyboardZTranslateSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [TooltipAttribute] Offset: 0x98365C
    // private System.Single m_MouseXTranslateSensitivity
    // Size: 0x4
    // Offset: 0x144
    float m_MouseXTranslateSensitivity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [TooltipAttribute] Offset: 0x9836A8
    // private System.Single m_MouseYTranslateSensitivity
    // Size: 0x4
    // Offset: 0x148
    float m_MouseYTranslateSensitivity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [TooltipAttribute] Offset: 0x9836F4
    // private System.Single m_MouseScrollTranslateSensitivity
    // Size: 0x4
    // Offset: 0x14C
    float m_MouseScrollTranslateSensitivity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [TooltipAttribute] Offset: 0x983740
    // private System.Single m_MouseXRotateSensitivity
    // Size: 0x4
    // Offset: 0x150
    float m_MouseXRotateSensitivity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [TooltipAttribute] Offset: 0x98378C
    // private System.Single m_MouseYRotateSensitivity
    // Size: 0x4
    // Offset: 0x154
    float m_MouseYRotateSensitivity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [TooltipAttribute] Offset: 0x9837D8
    // private System.Single m_MouseScrollRotateSensitivity
    // Size: 0x4
    // Offset: 0x158
    float m_MouseScrollRotateSensitivity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [TooltipAttribute] Offset: 0x983824
    // private System.Boolean m_MouseYRotateInvert
    // Size: 0x1
    // Offset: 0x15C
    bool m_MouseYRotateInvert;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_MouseYRotateInvert and: m_DesiredCursorLockMode
    char __padding46[0x3] = {};
    // [TooltipAttribute] Offset: 0x983870
    // private UnityEngine.CursorLockMode m_DesiredCursorLockMode
    // Size: 0x4
    // Offset: 0x160
    ::UnityEngine::CursorLockMode m_DesiredCursorLockMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::CursorLockMode) == 0x4);
    // private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.TransformationMode <mouseTransformationMode>k__BackingField
    // Size: 0x4
    // Offset: 0x164
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode mouseTransformationMode;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode) == 0x4);
    // private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets <axis2DTargets>k__BackingField
    // Size: 0x4
    // Offset: 0x168
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets axis2DTargets;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets) == 0x4);
    // private System.Single m_KeyboardXTranslateInput
    // Size: 0x4
    // Offset: 0x16C
    float m_KeyboardXTranslateInput;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_KeyboardYTranslateInput
    // Size: 0x4
    // Offset: 0x170
    float m_KeyboardYTranslateInput;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single m_KeyboardZTranslateInput
    // Size: 0x4
    // Offset: 0x174
    float m_KeyboardZTranslateInput;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean m_ManipulateLeftInput
    // Size: 0x1
    // Offset: 0x178
    bool m_ManipulateLeftInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_ManipulateRightInput
    // Size: 0x1
    // Offset: 0x179
    bool m_ManipulateRightInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_ManipulateHeadInput
    // Size: 0x1
    // Offset: 0x17A
    bool m_ManipulateHeadInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_ManipulateHeadInput and: m_MouseDeltaInput
    char __padding55[0x1] = {};
    // private UnityEngine.Vector2 m_MouseDeltaInput
    // Size: 0x8
    // Offset: 0x17C
    ::UnityEngine::Vector2 m_MouseDeltaInput;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private UnityEngine.Vector2 m_MouseScrollInput
    // Size: 0x8
    // Offset: 0x184
    ::UnityEngine::Vector2 m_MouseScrollInput;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private System.Boolean m_RotateModeOverrideInput
    // Size: 0x1
    // Offset: 0x18C
    bool m_RotateModeOverrideInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_NegateModeInput
    // Size: 0x1
    // Offset: 0x18D
    bool m_NegateModeInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_XConstraintInput
    // Size: 0x1
    // Offset: 0x18E
    bool m_XConstraintInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_YConstraintInput
    // Size: 0x1
    // Offset: 0x18F
    bool m_YConstraintInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_ZConstraintInput
    // Size: 0x1
    // Offset: 0x190
    bool m_ZConstraintInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_ResetInput
    // Size: 0x1
    // Offset: 0x191
    bool m_ResetInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_ResetInput and: m_Axis2DInput
    char __padding63[0x2] = {};
    // private UnityEngine.Vector2 m_Axis2DInput
    // Size: 0x8
    // Offset: 0x194
    ::UnityEngine::Vector2 m_Axis2DInput;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private UnityEngine.Vector2 m_RestingHandAxis2DInput
    // Size: 0x8
    // Offset: 0x19C
    ::UnityEngine::Vector2 m_RestingHandAxis2DInput;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private System.Boolean m_GripInput
    // Size: 0x1
    // Offset: 0x1A4
    bool m_GripInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_TriggerInput
    // Size: 0x1
    // Offset: 0x1A5
    bool m_TriggerInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_PrimaryButtonInput
    // Size: 0x1
    // Offset: 0x1A6
    bool m_PrimaryButtonInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_SecondaryButtonInput
    // Size: 0x1
    // Offset: 0x1A7
    bool m_SecondaryButtonInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_MenuInput
    // Size: 0x1
    // Offset: 0x1A8
    bool m_MenuInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Primary2DAxisClickInput
    // Size: 0x1
    // Offset: 0x1A9
    bool m_Primary2DAxisClickInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Secondary2DAxisClickInput
    // Size: 0x1
    // Offset: 0x1AA
    bool m_Secondary2DAxisClickInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Primary2DAxisTouchInput
    // Size: 0x1
    // Offset: 0x1AB
    bool m_Primary2DAxisTouchInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Secondary2DAxisTouchInput
    // Size: 0x1
    // Offset: 0x1AC
    bool m_Secondary2DAxisTouchInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_PrimaryTouchInput
    // Size: 0x1
    // Offset: 0x1AD
    bool m_PrimaryTouchInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_SecondaryTouchInput
    // Size: 0x1
    // Offset: 0x1AE
    bool m_SecondaryTouchInput;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_ManipulatedRestingHandAxis2D
    // Size: 0x1
    // Offset: 0x1AF
    bool m_ManipulatedRestingHandAxis2D;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private UnityEngine.Vector3 m_LeftControllerEuler
    // Size: 0xC
    // Offset: 0x1B0
    ::UnityEngine::Vector3 m_LeftControllerEuler;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 m_RightControllerEuler
    // Size: 0xC
    // Offset: 0x1BC
    ::UnityEngine::Vector3 m_RightControllerEuler;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 m_CenterEyeEuler
    // Size: 0xC
    // Offset: 0x1C8
    ::UnityEngine::Vector3 m_CenterEyeEuler;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedHMDState m_HMDState
    // Size: 0x75
    // Offset: 0x1D4
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedHMDState m_HMDState;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedHMDState) == 0x75);
    // Padding between fields: m_HMDState and: m_LeftControllerState
    char __padding81[0x3] = {};
    // private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedControllerState m_LeftControllerState
    // Size: 0x3F
    // Offset: 0x24C
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedControllerState m_LeftControllerState;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedControllerState) == 0x3F);
    // Padding between fields: m_LeftControllerState and: m_RightControllerState
    char __padding82[0x1] = {};
    // private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedControllerState m_RightControllerState
    // Size: 0x3F
    // Offset: 0x28C
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedControllerState m_RightControllerState;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedControllerState) == 0x3F);
    // Padding between fields: m_RightControllerState and: m_HMDDevice
    char __padding83[0x5] = {};
    // private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedHMD m_HMDDevice
    // Size: 0x8
    // Offset: 0x2D0
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedHMD* m_HMDDevice;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedHMD*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedController m_LeftControllerDevice
    // Size: 0x8
    // Offset: 0x2D8
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedController* m_LeftControllerDevice;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedController*) == 0x8);
    // private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedController m_RightControllerDevice
    // Size: 0x8
    // Offset: 0x2E0
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedController* m_RightControllerDevice;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedController*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_KeyboardXTranslateAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_KeyboardXTranslateAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_KeyboardYTranslateAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_KeyboardYTranslateAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_KeyboardZTranslateAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_KeyboardZTranslateAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_ManipulateLeftAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_ManipulateLeftAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_ManipulateRightAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_ManipulateRightAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_ToggleManipulateLeftAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_ToggleManipulateLeftAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_ToggleManipulateRightAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_ToggleManipulateRightAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_ManipulateHeadAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_ManipulateHeadAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_MouseDeltaAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_MouseDeltaAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_MouseScrollAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_MouseScrollAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_RotateModeOverrideAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_RotateModeOverrideAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_ToggleMouseTransformationModeAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_ToggleMouseTransformationModeAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_NegateModeAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_NegateModeAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_XConstraintAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_XConstraintAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_YConstraintAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_YConstraintAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_ZConstraintAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_ZConstraintAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_ResetAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_ResetAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_ToggleCursorLockAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_ToggleCursorLockAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_ToggleDevicePositionTargetAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_ToggleDevicePositionTargetAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_TogglePrimary2DAxisTargetAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_TogglePrimary2DAxisTargetAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_ToggleSecondary2DAxisTargetAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_ToggleSecondary2DAxisTargetAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_Axis2DAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_Axis2DAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_RestingHandAxis2DAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_RestingHandAxis2DAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_GripAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_GripAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_TriggerAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_TriggerAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_PrimaryButtonAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_PrimaryButtonAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_SecondaryButtonAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_SecondaryButtonAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_MenuAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_MenuAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_Primary2DAxisClickAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_Primary2DAxisClickAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_Secondary2DAxisClickAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_Secondary2DAxisClickAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_Primary2DAxisTouchAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_Primary2DAxisTouchAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_Secondary2DAxisTouchAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_Secondary2DAxisTouchAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_PrimaryTouchAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_PrimaryTouchAction();
    // Get instance field reference: private UnityEngine.InputSystem.InputActionReference m_SecondaryTouchAction
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionReference*& dyn_m_SecondaryTouchAction();
    // Get instance field reference: private UnityEngine.Transform m_CameraTransform
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_m_CameraTransform();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space m_KeyboardTranslateSpace
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space& dyn_m_KeyboardTranslateSpace();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space m_MouseTranslateSpace
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space& dyn_m_MouseTranslateSpace();
    // Get instance field reference: private System.Single m_KeyboardXTranslateSpeed
    [[deprecated("Use field access instead!")]] float& dyn_m_KeyboardXTranslateSpeed();
    // Get instance field reference: private System.Single m_KeyboardYTranslateSpeed
    [[deprecated("Use field access instead!")]] float& dyn_m_KeyboardYTranslateSpeed();
    // Get instance field reference: private System.Single m_KeyboardZTranslateSpeed
    [[deprecated("Use field access instead!")]] float& dyn_m_KeyboardZTranslateSpeed();
    // Get instance field reference: private System.Single m_MouseXTranslateSensitivity
    [[deprecated("Use field access instead!")]] float& dyn_m_MouseXTranslateSensitivity();
    // Get instance field reference: private System.Single m_MouseYTranslateSensitivity
    [[deprecated("Use field access instead!")]] float& dyn_m_MouseYTranslateSensitivity();
    // Get instance field reference: private System.Single m_MouseScrollTranslateSensitivity
    [[deprecated("Use field access instead!")]] float& dyn_m_MouseScrollTranslateSensitivity();
    // Get instance field reference: private System.Single m_MouseXRotateSensitivity
    [[deprecated("Use field access instead!")]] float& dyn_m_MouseXRotateSensitivity();
    // Get instance field reference: private System.Single m_MouseYRotateSensitivity
    [[deprecated("Use field access instead!")]] float& dyn_m_MouseYRotateSensitivity();
    // Get instance field reference: private System.Single m_MouseScrollRotateSensitivity
    [[deprecated("Use field access instead!")]] float& dyn_m_MouseScrollRotateSensitivity();
    // Get instance field reference: private System.Boolean m_MouseYRotateInvert
    [[deprecated("Use field access instead!")]] bool& dyn_m_MouseYRotateInvert();
    // Get instance field reference: private UnityEngine.CursorLockMode m_DesiredCursorLockMode
    [[deprecated("Use field access instead!")]] ::UnityEngine::CursorLockMode& dyn_m_DesiredCursorLockMode();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.TransformationMode <mouseTransformationMode>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode& dyn_$mouseTransformationMode$k__BackingField();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets <axis2DTargets>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets& dyn_$axis2DTargets$k__BackingField();
    // Get instance field reference: private System.Single m_KeyboardXTranslateInput
    [[deprecated("Use field access instead!")]] float& dyn_m_KeyboardXTranslateInput();
    // Get instance field reference: private System.Single m_KeyboardYTranslateInput
    [[deprecated("Use field access instead!")]] float& dyn_m_KeyboardYTranslateInput();
    // Get instance field reference: private System.Single m_KeyboardZTranslateInput
    [[deprecated("Use field access instead!")]] float& dyn_m_KeyboardZTranslateInput();
    // Get instance field reference: private System.Boolean m_ManipulateLeftInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_ManipulateLeftInput();
    // Get instance field reference: private System.Boolean m_ManipulateRightInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_ManipulateRightInput();
    // Get instance field reference: private System.Boolean m_ManipulateHeadInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_ManipulateHeadInput();
    // Get instance field reference: private UnityEngine.Vector2 m_MouseDeltaInput
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_MouseDeltaInput();
    // Get instance field reference: private UnityEngine.Vector2 m_MouseScrollInput
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_MouseScrollInput();
    // Get instance field reference: private System.Boolean m_RotateModeOverrideInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_RotateModeOverrideInput();
    // Get instance field reference: private System.Boolean m_NegateModeInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_NegateModeInput();
    // Get instance field reference: private System.Boolean m_XConstraintInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_XConstraintInput();
    // Get instance field reference: private System.Boolean m_YConstraintInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_YConstraintInput();
    // Get instance field reference: private System.Boolean m_ZConstraintInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_ZConstraintInput();
    // Get instance field reference: private System.Boolean m_ResetInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_ResetInput();
    // Get instance field reference: private UnityEngine.Vector2 m_Axis2DInput
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_Axis2DInput();
    // Get instance field reference: private UnityEngine.Vector2 m_RestingHandAxis2DInput
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_m_RestingHandAxis2DInput();
    // Get instance field reference: private System.Boolean m_GripInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_GripInput();
    // Get instance field reference: private System.Boolean m_TriggerInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_TriggerInput();
    // Get instance field reference: private System.Boolean m_PrimaryButtonInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_PrimaryButtonInput();
    // Get instance field reference: private System.Boolean m_SecondaryButtonInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_SecondaryButtonInput();
    // Get instance field reference: private System.Boolean m_MenuInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_MenuInput();
    // Get instance field reference: private System.Boolean m_Primary2DAxisClickInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_Primary2DAxisClickInput();
    // Get instance field reference: private System.Boolean m_Secondary2DAxisClickInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_Secondary2DAxisClickInput();
    // Get instance field reference: private System.Boolean m_Primary2DAxisTouchInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_Primary2DAxisTouchInput();
    // Get instance field reference: private System.Boolean m_Secondary2DAxisTouchInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_Secondary2DAxisTouchInput();
    // Get instance field reference: private System.Boolean m_PrimaryTouchInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_PrimaryTouchInput();
    // Get instance field reference: private System.Boolean m_SecondaryTouchInput
    [[deprecated("Use field access instead!")]] bool& dyn_m_SecondaryTouchInput();
    // Get instance field reference: private System.Boolean m_ManipulatedRestingHandAxis2D
    [[deprecated("Use field access instead!")]] bool& dyn_m_ManipulatedRestingHandAxis2D();
    // Get instance field reference: private UnityEngine.Vector3 m_LeftControllerEuler
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_LeftControllerEuler();
    // Get instance field reference: private UnityEngine.Vector3 m_RightControllerEuler
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_RightControllerEuler();
    // Get instance field reference: private UnityEngine.Vector3 m_CenterEyeEuler
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_CenterEyeEuler();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedHMDState m_HMDState
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedHMDState& dyn_m_HMDState();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedControllerState m_LeftControllerState
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedControllerState& dyn_m_LeftControllerState();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedControllerState m_RightControllerState
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedControllerState& dyn_m_RightControllerState();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedHMD m_HMDDevice
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedHMD*& dyn_m_HMDDevice();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedController m_LeftControllerDevice
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedController*& dyn_m_LeftControllerDevice();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedController m_RightControllerDevice
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedController*& dyn_m_RightControllerDevice();
    // public UnityEngine.InputSystem.InputActionReference get_keyboardXTranslateAction()
    // Offset: 0xFE803C
    ::UnityEngine::InputSystem::InputActionReference* get_keyboardXTranslateAction();
    // public System.Void set_keyboardXTranslateAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE8044
    void set_keyboardXTranslateAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_keyboardYTranslateAction()
    // Offset: 0xFE81E0
    ::UnityEngine::InputSystem::InputActionReference* get_keyboardYTranslateAction();
    // public System.Void set_keyboardYTranslateAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE81E8
    void set_keyboardYTranslateAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_keyboardZTranslateAction()
    // Offset: 0xFE8384
    ::UnityEngine::InputSystem::InputActionReference* get_keyboardZTranslateAction();
    // public System.Void set_keyboardZTranslateAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE838C
    void set_keyboardZTranslateAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_manipulateLeftAction()
    // Offset: 0xFE8528
    ::UnityEngine::InputSystem::InputActionReference* get_manipulateLeftAction();
    // public System.Void set_manipulateLeftAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE8530
    void set_manipulateLeftAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_manipulateRightAction()
    // Offset: 0xFE86CC
    ::UnityEngine::InputSystem::InputActionReference* get_manipulateRightAction();
    // public System.Void set_manipulateRightAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE86D4
    void set_manipulateRightAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_toggleManipulateLeftAction()
    // Offset: 0xFE8870
    ::UnityEngine::InputSystem::InputActionReference* get_toggleManipulateLeftAction();
    // public System.Void set_toggleManipulateLeftAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE8878
    void set_toggleManipulateLeftAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_toggleManipulateRightAction()
    // Offset: 0xFE89BC
    ::UnityEngine::InputSystem::InputActionReference* get_toggleManipulateRightAction();
    // public System.Void set_toggleManipulateRightAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE89C4
    void set_toggleManipulateRightAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_manipulateHeadAction()
    // Offset: 0xFE8B08
    ::UnityEngine::InputSystem::InputActionReference* get_manipulateHeadAction();
    // public System.Void set_manipulateHeadAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE8B10
    void set_manipulateHeadAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_mouseDeltaAction()
    // Offset: 0xFE8CAC
    ::UnityEngine::InputSystem::InputActionReference* get_mouseDeltaAction();
    // public System.Void set_mouseDeltaAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE8CB4
    void set_mouseDeltaAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_mouseScrollAction()
    // Offset: 0xFE8E50
    ::UnityEngine::InputSystem::InputActionReference* get_mouseScrollAction();
    // public System.Void set_mouseScrollAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE8E58
    void set_mouseScrollAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_rotateModeOverrideAction()
    // Offset: 0xFE8FF4
    ::UnityEngine::InputSystem::InputActionReference* get_rotateModeOverrideAction();
    // public System.Void set_rotateModeOverrideAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE8FFC
    void set_rotateModeOverrideAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_toggleMouseTransformationModeAction()
    // Offset: 0xFE9198
    ::UnityEngine::InputSystem::InputActionReference* get_toggleMouseTransformationModeAction();
    // public System.Void set_toggleMouseTransformationModeAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE91A0
    void set_toggleMouseTransformationModeAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_negateModeAction()
    // Offset: 0xFE92E4
    ::UnityEngine::InputSystem::InputActionReference* get_negateModeAction();
    // public System.Void set_negateModeAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE92EC
    void set_negateModeAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_xConstraintAction()
    // Offset: 0xFE9488
    ::UnityEngine::InputSystem::InputActionReference* get_xConstraintAction();
    // public System.Void set_xConstraintAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE9490
    void set_xConstraintAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_yConstraintAction()
    // Offset: 0xFE962C
    ::UnityEngine::InputSystem::InputActionReference* get_yConstraintAction();
    // public System.Void set_yConstraintAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE9634
    void set_yConstraintAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_zConstraintAction()
    // Offset: 0xFE97D0
    ::UnityEngine::InputSystem::InputActionReference* get_zConstraintAction();
    // public System.Void set_zConstraintAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE97D8
    void set_zConstraintAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_resetAction()
    // Offset: 0xFE9974
    ::UnityEngine::InputSystem::InputActionReference* get_resetAction();
    // public System.Void set_resetAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE997C
    void set_resetAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_toggleCursorLockAction()
    // Offset: 0xFE9B18
    ::UnityEngine::InputSystem::InputActionReference* get_toggleCursorLockAction();
    // public System.Void set_toggleCursorLockAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE9B20
    void set_toggleCursorLockAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_toggleDevicePositionTargetAction()
    // Offset: 0xFE9C64
    ::UnityEngine::InputSystem::InputActionReference* get_toggleDevicePositionTargetAction();
    // public System.Void set_toggleDevicePositionTargetAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE9C6C
    void set_toggleDevicePositionTargetAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_togglePrimary2DAxisTargetAction()
    // Offset: 0xFE9DB0
    ::UnityEngine::InputSystem::InputActionReference* get_togglePrimary2DAxisTargetAction();
    // public System.Void set_togglePrimary2DAxisTargetAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE9DB8
    void set_togglePrimary2DAxisTargetAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_toggleSecondary2DAxisTargetAction()
    // Offset: 0xFE9EFC
    ::UnityEngine::InputSystem::InputActionReference* get_toggleSecondary2DAxisTargetAction();
    // public System.Void set_toggleSecondary2DAxisTargetAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFE9F04
    void set_toggleSecondary2DAxisTargetAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_axis2DAction()
    // Offset: 0xFEA048
    ::UnityEngine::InputSystem::InputActionReference* get_axis2DAction();
    // public System.Void set_axis2DAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFEA050
    void set_axis2DAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_restingHandAxis2DAction()
    // Offset: 0xFEA1EC
    ::UnityEngine::InputSystem::InputActionReference* get_restingHandAxis2DAction();
    // public System.Void set_restingHandAxis2DAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFEA1F4
    void set_restingHandAxis2DAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_gripAction()
    // Offset: 0xFEA390
    ::UnityEngine::InputSystem::InputActionReference* get_gripAction();
    // public System.Void set_gripAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFEA398
    void set_gripAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_triggerAction()
    // Offset: 0xFEA534
    ::UnityEngine::InputSystem::InputActionReference* get_triggerAction();
    // public System.Void set_triggerAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFEA53C
    void set_triggerAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_primaryButtonAction()
    // Offset: 0xFEA6D8
    ::UnityEngine::InputSystem::InputActionReference* get_primaryButtonAction();
    // public System.Void set_primaryButtonAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFEA6E0
    void set_primaryButtonAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_secondaryButtonAction()
    // Offset: 0xFEA87C
    ::UnityEngine::InputSystem::InputActionReference* get_secondaryButtonAction();
    // public System.Void set_secondaryButtonAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFEA884
    void set_secondaryButtonAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_menuAction()
    // Offset: 0xFEAA20
    ::UnityEngine::InputSystem::InputActionReference* get_menuAction();
    // public System.Void set_menuAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFEAA28
    void set_menuAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_primary2DAxisClickAction()
    // Offset: 0xFEABC4
    ::UnityEngine::InputSystem::InputActionReference* get_primary2DAxisClickAction();
    // public System.Void set_primary2DAxisClickAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFEABCC
    void set_primary2DAxisClickAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_secondary2DAxisClickAction()
    // Offset: 0xFEAD68
    ::UnityEngine::InputSystem::InputActionReference* get_secondary2DAxisClickAction();
    // public System.Void set_secondary2DAxisClickAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFEAD70
    void set_secondary2DAxisClickAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_primary2DAxisTouchAction()
    // Offset: 0xFEAF0C
    ::UnityEngine::InputSystem::InputActionReference* get_primary2DAxisTouchAction();
    // public System.Void set_primary2DAxisTouchAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFEAF14
    void set_primary2DAxisTouchAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_secondary2DAxisTouchAction()
    // Offset: 0xFEB0B0
    ::UnityEngine::InputSystem::InputActionReference* get_secondary2DAxisTouchAction();
    // public System.Void set_secondary2DAxisTouchAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFEB0B8
    void set_secondary2DAxisTouchAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_primaryTouchAction()
    // Offset: 0xFEB254
    ::UnityEngine::InputSystem::InputActionReference* get_primaryTouchAction();
    // public System.Void set_primaryTouchAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFEB25C
    void set_primaryTouchAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.InputSystem.InputActionReference get_secondaryTouchAction()
    // Offset: 0xFEB3F8
    ::UnityEngine::InputSystem::InputActionReference* get_secondaryTouchAction();
    // public System.Void set_secondaryTouchAction(UnityEngine.InputSystem.InputActionReference value)
    // Offset: 0xFEB400
    void set_secondaryTouchAction(::UnityEngine::InputSystem::InputActionReference* value);
    // public UnityEngine.Transform get_cameraTransform()
    // Offset: 0xFEB59C
    ::UnityEngine::Transform* get_cameraTransform();
    // public System.Void set_cameraTransform(UnityEngine.Transform value)
    // Offset: 0xFEB5A4
    void set_cameraTransform(::UnityEngine::Transform* value);
    // public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space get_keyboardTranslateSpace()
    // Offset: 0xFEB5AC
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space get_keyboardTranslateSpace();
    // public System.Void set_keyboardTranslateSpace(UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space value)
    // Offset: 0xFEB5B4
    void set_keyboardTranslateSpace(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space value);
    // public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space get_mouseTranslateSpace()
    // Offset: 0xFEB5BC
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space get_mouseTranslateSpace();
    // public System.Void set_mouseTranslateSpace(UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space value)
    // Offset: 0xFEB5C4
    void set_mouseTranslateSpace(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space value);
    // public System.Single get_keyboardXTranslateSpeed()
    // Offset: 0xFEB5CC
    float get_keyboardXTranslateSpeed();
    // public System.Void set_keyboardXTranslateSpeed(System.Single value)
    // Offset: 0xFEB5D4
    void set_keyboardXTranslateSpeed(float value);
    // public System.Single get_keyboardYTranslateSpeed()
    // Offset: 0xFEB5DC
    float get_keyboardYTranslateSpeed();
    // public System.Void set_keyboardYTranslateSpeed(System.Single value)
    // Offset: 0xFEB5E4
    void set_keyboardYTranslateSpeed(float value);
    // public System.Single get_keyboardZTranslateSpeed()
    // Offset: 0xFEB5EC
    float get_keyboardZTranslateSpeed();
    // public System.Void set_keyboardZTranslateSpeed(System.Single value)
    // Offset: 0xFEB5F4
    void set_keyboardZTranslateSpeed(float value);
    // public System.Single get_mouseXTranslateSensitivity()
    // Offset: 0xFEB5FC
    float get_mouseXTranslateSensitivity();
    // public System.Void set_mouseXTranslateSensitivity(System.Single value)
    // Offset: 0xFEB604
    void set_mouseXTranslateSensitivity(float value);
    // public System.Single get_mouseYTranslateSensitivity()
    // Offset: 0xFEB60C
    float get_mouseYTranslateSensitivity();
    // public System.Void set_mouseYTranslateSensitivity(System.Single value)
    // Offset: 0xFEB614
    void set_mouseYTranslateSensitivity(float value);
    // public System.Single get_mouseScrollTranslateSensitivity()
    // Offset: 0xFEB61C
    float get_mouseScrollTranslateSensitivity();
    // public System.Void set_mouseScrollTranslateSensitivity(System.Single value)
    // Offset: 0xFEB624
    void set_mouseScrollTranslateSensitivity(float value);
    // public System.Single get_mouseXRotateSensitivity()
    // Offset: 0xFEB62C
    float get_mouseXRotateSensitivity();
    // public System.Void set_mouseXRotateSensitivity(System.Single value)
    // Offset: 0xFEB634
    void set_mouseXRotateSensitivity(float value);
    // public System.Single get_mouseYRotateSensitivity()
    // Offset: 0xFEB63C
    float get_mouseYRotateSensitivity();
    // public System.Void set_mouseYRotateSensitivity(System.Single value)
    // Offset: 0xFEB644
    void set_mouseYRotateSensitivity(float value);
    // public System.Single get_mouseScrollRotateSensitivity()
    // Offset: 0xFEB64C
    float get_mouseScrollRotateSensitivity();
    // public System.Void set_mouseScrollRotateSensitivity(System.Single value)
    // Offset: 0xFEB654
    void set_mouseScrollRotateSensitivity(float value);
    // public System.Boolean get_mouseYRotateInvert()
    // Offset: 0xFEB65C
    bool get_mouseYRotateInvert();
    // public System.Void set_mouseYRotateInvert(System.Boolean value)
    // Offset: 0xFEB664
    void set_mouseYRotateInvert(bool value);
    // public UnityEngine.CursorLockMode get_desiredCursorLockMode()
    // Offset: 0xFEB670
    ::UnityEngine::CursorLockMode get_desiredCursorLockMode();
    // public System.Void set_desiredCursorLockMode(UnityEngine.CursorLockMode value)
    // Offset: 0xFEB678
    void set_desiredCursorLockMode(::UnityEngine::CursorLockMode value);
    // public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.TransformationMode get_mouseTransformationMode()
    // Offset: 0xFEB680
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode get_mouseTransformationMode();
    // public System.Void set_mouseTransformationMode(UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.TransformationMode value)
    // Offset: 0xFEB688
    void set_mouseTransformationMode(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode value);
    // public UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets get_axis2DTargets()
    // Offset: 0xFEB690
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets get_axis2DTargets();
    // public System.Void set_axis2DTargets(UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Axis2DTargets value)
    // Offset: 0xFEB698
    void set_axis2DTargets(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets value);
    // public System.Void .ctor()
    // Offset: 0xFEE5A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRDeviceSimulator* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRDeviceSimulator*, creationType>()));
    }
    // protected System.Void Awake()
    // Offset: 0xFEB6A0
    void Awake();
    // protected System.Void OnEnable()
    // Offset: 0xFEB824
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0xFEBA14
    void OnDisable();
    // protected System.Void Update()
    // Offset: 0xFEBB4C
    void Update();
    // protected System.Void ProcessPoseInput()
    // Offset: 0xFEBC90
    void ProcessPoseInput();
    // protected System.Void ProcessControlInput()
    // Offset: 0xFED360
    void ProcessControlInput();
    // protected System.Void ProcessAxis2DControlInput()
    // Offset: 0xFED3C8
    void ProcessAxis2DControlInput();
    // protected System.Void ProcessButtonControlInput(ref UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedControllerState controllerState)
    // Offset: 0xFED67C
    void ProcessButtonControlInput(ByRef<::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedControllerState> controllerState);
    // protected System.Void AddDevices()
    // Offset: 0xFED7EC
    void AddDevices();
    // protected System.Void RemoveDevices()
    // Offset: 0xFEDBAC
    void RemoveDevices();
    // protected UnityEngine.Vector3 GetResetScale()
    // Offset: 0xFED278
    ::UnityEngine::Vector3 GetResetScale();
    // static private System.Void GetAxes(UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space translateSpace, UnityEngine.Transform cameraTransform, out UnityEngine.Vector3 right, out UnityEngine.Vector3 up, out UnityEngine.Vector3 forward)
    // Offset: 0xFECE1C
    static void GetAxes(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space translateSpace, ::UnityEngine::Transform* cameraTransform, ByRef<::UnityEngine::Vector3> right, ByRef<::UnityEngine::Vector3> up, ByRef<::UnityEngine::Vector3> forward);
    // static private UnityEngine.Quaternion GetDeltaRotation(UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space translateSpace, in UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedControllerState state, in UnityEngine.Quaternion inverseCameraParentRotation)
    // Offset: 0xFED048
    static ::UnityEngine::Quaternion GetDeltaRotation(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space translateSpace, ByRef<::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedControllerState> state, ByRef<::UnityEngine::Quaternion> inverseCameraParentRotation);
    // static private UnityEngine.Quaternion GetDeltaRotation(UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.Space translateSpace, in UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRSimulatedHMDState state, in UnityEngine.Quaternion inverseCameraParentRotation)
    // Offset: 0xFED164
    static ::UnityEngine::Quaternion GetDeltaRotation(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space translateSpace, ByRef<::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedHMDState> state, ByRef<::UnityEngine::Quaternion> inverseCameraParentRotation);
    // static private System.Void Subscribe(UnityEngine.InputSystem.InputActionReference reference, System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> performed, System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> canceled)
    // Offset: 0xFEDCC0
    static void Subscribe(::UnityEngine::InputSystem::InputActionReference* reference, ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* performed, ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* canceled);
    // static private System.Void Unsubscribe(UnityEngine.InputSystem.InputActionReference reference, System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> performed, System.Action`1<UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext> canceled)
    // Offset: 0xFEDDBC
    static void Unsubscribe(::UnityEngine::InputSystem::InputActionReference* reference, ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* performed, ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* canceled);
    // static private UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.TransformationMode Negate(UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator/UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.TransformationMode mode)
    // Offset: 0xFEDE24
    static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode Negate(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode mode);
    // private UnityEngine.CursorLockMode Negate(UnityEngine.CursorLockMode mode)
    // Offset: 0xFEDE3C
    ::UnityEngine::CursorLockMode Negate(::UnityEngine::CursorLockMode mode);
    // private System.Void SubscribeKeyboardXTranslateAction()
    // Offset: 0xFE8128
    void SubscribeKeyboardXTranslateAction();
    // private System.Void UnsubscribeKeyboardXTranslateAction()
    // Offset: 0xFE8070
    void UnsubscribeKeyboardXTranslateAction();
    // private System.Void SubscribeKeyboardYTranslateAction()
    // Offset: 0xFE82CC
    void SubscribeKeyboardYTranslateAction();
    // private System.Void UnsubscribeKeyboardYTranslateAction()
    // Offset: 0xFE8214
    void UnsubscribeKeyboardYTranslateAction();
    // private System.Void SubscribeKeyboardZTranslateAction()
    // Offset: 0xFE8470
    void SubscribeKeyboardZTranslateAction();
    // private System.Void UnsubscribeKeyboardZTranslateAction()
    // Offset: 0xFE83B8
    void UnsubscribeKeyboardZTranslateAction();
    // private System.Void SubscribeManipulateLeftAction()
    // Offset: 0xFE8614
    void SubscribeManipulateLeftAction();
    // private System.Void UnsubscribeManipulateLeftAction()
    // Offset: 0xFE855C
    void UnsubscribeManipulateLeftAction();
    // private System.Void SubscribeManipulateRightAction()
    // Offset: 0xFE87B8
    void SubscribeManipulateRightAction();
    // private System.Void UnsubscribeManipulateRightAction()
    // Offset: 0xFE8700
    void UnsubscribeManipulateRightAction();
    // private System.Void SubscribeToggleManipulateLeftAction()
    // Offset: 0xFE8930
    void SubscribeToggleManipulateLeftAction();
    // private System.Void UnsubscribeToggleManipulateLeftAction()
    // Offset: 0xFE88A4
    void UnsubscribeToggleManipulateLeftAction();
    // private System.Void SubscribeToggleManipulateRightAction()
    // Offset: 0xFE8A7C
    void SubscribeToggleManipulateRightAction();
    // private System.Void UnsubscribeToggleManipulateRightAction()
    // Offset: 0xFE89F0
    void UnsubscribeToggleManipulateRightAction();
    // private System.Void SubscribeManipulateHeadAction()
    // Offset: 0xFE8BF4
    void SubscribeManipulateHeadAction();
    // private System.Void UnsubscribeManipulateHeadAction()
    // Offset: 0xFE8B3C
    void UnsubscribeManipulateHeadAction();
    // private System.Void SubscribeMouseDeltaAction()
    // Offset: 0xFE8D98
    void SubscribeMouseDeltaAction();
    // private System.Void UnsubscribeMouseDeltaAction()
    // Offset: 0xFE8CE0
    void UnsubscribeMouseDeltaAction();
    // private System.Void SubscribeMouseScrollAction()
    // Offset: 0xFE8F3C
    void SubscribeMouseScrollAction();
    // private System.Void UnsubscribeMouseScrollAction()
    // Offset: 0xFE8E84
    void UnsubscribeMouseScrollAction();
    // private System.Void SubscribeRotateModeOverrideAction()
    // Offset: 0xFE90E0
    void SubscribeRotateModeOverrideAction();
    // private System.Void UnsubscribeRotateModeOverrideAction()
    // Offset: 0xFE9028
    void UnsubscribeRotateModeOverrideAction();
    // private System.Void SubscribeToggleMouseTransformationModeAction()
    // Offset: 0xFE9258
    void SubscribeToggleMouseTransformationModeAction();
    // private System.Void UnsubscribeToggleMouseTransformationModeAction()
    // Offset: 0xFE91CC
    void UnsubscribeToggleMouseTransformationModeAction();
    // private System.Void SubscribeNegateModeAction()
    // Offset: 0xFE93D0
    void SubscribeNegateModeAction();
    // private System.Void UnsubscribeNegateModeAction()
    // Offset: 0xFE9318
    void UnsubscribeNegateModeAction();
    // private System.Void SubscribeXConstraintAction()
    // Offset: 0xFE9574
    void SubscribeXConstraintAction();
    // private System.Void UnsubscribeXConstraintAction()
    // Offset: 0xFE94BC
    void UnsubscribeXConstraintAction();
    // private System.Void SubscribeYConstraintAction()
    // Offset: 0xFE9718
    void SubscribeYConstraintAction();
    // private System.Void UnsubscribeYConstraintAction()
    // Offset: 0xFE9660
    void UnsubscribeYConstraintAction();
    // private System.Void SubscribeZConstraintAction()
    // Offset: 0xFE98BC
    void SubscribeZConstraintAction();
    // private System.Void UnsubscribeZConstraintAction()
    // Offset: 0xFE9804
    void UnsubscribeZConstraintAction();
    // private System.Void SubscribeResetAction()
    // Offset: 0xFE9A60
    void SubscribeResetAction();
    // private System.Void UnsubscribeResetAction()
    // Offset: 0xFE99A8
    void UnsubscribeResetAction();
    // private System.Void SubscribeToggleCursorLockAction()
    // Offset: 0xFE9BD8
    void SubscribeToggleCursorLockAction();
    // private System.Void UnsubscribeToggleCursorLockAction()
    // Offset: 0xFE9B4C
    void UnsubscribeToggleCursorLockAction();
    // private System.Void SubscribeToggleDevicePositionTargetAction()
    // Offset: 0xFE9D24
    void SubscribeToggleDevicePositionTargetAction();
    // private System.Void UnsubscribeToggleDevicePositionTargetAction()
    // Offset: 0xFE9C98
    void UnsubscribeToggleDevicePositionTargetAction();
    // private System.Void SubscribeTogglePrimary2DAxisTargetAction()
    // Offset: 0xFE9E70
    void SubscribeTogglePrimary2DAxisTargetAction();
    // private System.Void UnsubscribeTogglePrimary2DAxisTargetAction()
    // Offset: 0xFE9DE4
    void UnsubscribeTogglePrimary2DAxisTargetAction();
    // private System.Void SubscribeToggleSecondary2DAxisTargetAction()
    // Offset: 0xFE9FBC
    void SubscribeToggleSecondary2DAxisTargetAction();
    // private System.Void UnsubscribeToggleSecondary2DAxisTargetAction()
    // Offset: 0xFE9F30
    void UnsubscribeToggleSecondary2DAxisTargetAction();
    // private System.Void SubscribeAxis2DAction()
    // Offset: 0xFEA134
    void SubscribeAxis2DAction();
    // private System.Void UnsubscribeAxis2DAction()
    // Offset: 0xFEA07C
    void UnsubscribeAxis2DAction();
    // private System.Void SubscribeRestingHandAxis2DAction()
    // Offset: 0xFEA2D8
    void SubscribeRestingHandAxis2DAction();
    // private System.Void UnsubscribeRestingHandAxis2DAction()
    // Offset: 0xFEA220
    void UnsubscribeRestingHandAxis2DAction();
    // private System.Void SubscribeGripAction()
    // Offset: 0xFEA47C
    void SubscribeGripAction();
    // private System.Void UnsubscribeGripAction()
    // Offset: 0xFEA3C4
    void UnsubscribeGripAction();
    // private System.Void SubscribeTriggerAction()
    // Offset: 0xFEA620
    void SubscribeTriggerAction();
    // private System.Void UnsubscribeTriggerAction()
    // Offset: 0xFEA568
    void UnsubscribeTriggerAction();
    // private System.Void SubscribePrimaryButtonAction()
    // Offset: 0xFEA7C4
    void SubscribePrimaryButtonAction();
    // private System.Void UnsubscribePrimaryButtonAction()
    // Offset: 0xFEA70C
    void UnsubscribePrimaryButtonAction();
    // private System.Void SubscribeSecondaryButtonAction()
    // Offset: 0xFEA968
    void SubscribeSecondaryButtonAction();
    // private System.Void UnsubscribeSecondaryButtonAction()
    // Offset: 0xFEA8B0
    void UnsubscribeSecondaryButtonAction();
    // private System.Void SubscribeMenuAction()
    // Offset: 0xFEAB0C
    void SubscribeMenuAction();
    // private System.Void UnsubscribeMenuAction()
    // Offset: 0xFEAA54
    void UnsubscribeMenuAction();
    // private System.Void SubscribePrimary2DAxisClickAction()
    // Offset: 0xFEACB0
    void SubscribePrimary2DAxisClickAction();
    // private System.Void UnsubscribePrimary2DAxisClickAction()
    // Offset: 0xFEABF8
    void UnsubscribePrimary2DAxisClickAction();
    // private System.Void SubscribeSecondary2DAxisClickAction()
    // Offset: 0xFEAE54
    void SubscribeSecondary2DAxisClickAction();
    // private System.Void UnsubscribeSecondary2DAxisClickAction()
    // Offset: 0xFEAD9C
    void UnsubscribeSecondary2DAxisClickAction();
    // private System.Void SubscribePrimary2DAxisTouchAction()
    // Offset: 0xFEAFF8
    void SubscribePrimary2DAxisTouchAction();
    // private System.Void UnsubscribePrimary2DAxisTouchAction()
    // Offset: 0xFEAF40
    void UnsubscribePrimary2DAxisTouchAction();
    // private System.Void SubscribeSecondary2DAxisTouchAction()
    // Offset: 0xFEB19C
    void SubscribeSecondary2DAxisTouchAction();
    // private System.Void UnsubscribeSecondary2DAxisTouchAction()
    // Offset: 0xFEB0E4
    void UnsubscribeSecondary2DAxisTouchAction();
    // private System.Void SubscribePrimaryTouchAction()
    // Offset: 0xFEB340
    void SubscribePrimaryTouchAction();
    // private System.Void UnsubscribePrimaryTouchAction()
    // Offset: 0xFEB288
    void UnsubscribePrimaryTouchAction();
    // private System.Void SubscribeSecondaryTouchAction()
    // Offset: 0xFEB4E4
    void SubscribeSecondaryTouchAction();
    // private System.Void UnsubscribeSecondaryTouchAction()
    // Offset: 0xFEB42C
    void UnsubscribeSecondaryTouchAction();
    // private System.Void OnKeyboardXTranslatePerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEDE50
    void OnKeyboardXTranslatePerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnKeyboardXTranslateCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEDEB4
    void OnKeyboardXTranslateCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnKeyboardYTranslatePerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEDEBC
    void OnKeyboardYTranslatePerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnKeyboardYTranslateCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEDF20
    void OnKeyboardYTranslateCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnKeyboardZTranslatePerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEDF28
    void OnKeyboardZTranslatePerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnKeyboardZTranslateCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEDF8C
    void OnKeyboardZTranslateCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnManipulateLeftPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEDF94
    void OnManipulateLeftPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnManipulateLeftCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEDFA0
    void OnManipulateLeftCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnManipulateRightPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEDFA8
    void OnManipulateRightPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnManipulateRightCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEDFB4
    void OnManipulateRightCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnToggleManipulateLeftPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEDFBC
    void OnToggleManipulateLeftPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnToggleManipulateRightPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEDFCC
    void OnToggleManipulateRightPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnManipulateHeadPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEDFDC
    void OnManipulateHeadPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnManipulateHeadCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEDFE8
    void OnManipulateHeadCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnMouseDeltaPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEDFF0
    void OnMouseDeltaPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnMouseDeltaCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE058
    void OnMouseDeltaCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnMouseScrollPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE0C8
    void OnMouseScrollPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnMouseScrollCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE130
    void OnMouseScrollCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnRotateModeOverridePerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE1A0
    void OnRotateModeOverridePerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnRotateModeOverrideCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE1AC
    void OnRotateModeOverrideCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnToggleMouseTransformationModePerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE1B4
    void OnToggleMouseTransformationModePerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnNegateModePerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE1C8
    void OnNegateModePerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnNegateModeCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE1D4
    void OnNegateModeCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnXConstraintPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE1DC
    void OnXConstraintPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnXConstraintCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE1E8
    void OnXConstraintCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnYConstraintPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE1F0
    void OnYConstraintPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnYConstraintCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE1FC
    void OnYConstraintCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnZConstraintPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE204
    void OnZConstraintPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnZConstraintCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE210
    void OnZConstraintCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnResetPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE218
    void OnResetPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnResetCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE224
    void OnResetCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnToggleCursorLockPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE22C
    void OnToggleCursorLockPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnToggleDevicePositionTargetPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE264
    void OnToggleDevicePositionTargetPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnTogglePrimary2DAxisTargetPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE274
    void OnTogglePrimary2DAxisTargetPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnToggleSecondary2DAxisTargetPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE284
    void OnToggleSecondary2DAxisTargetPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnAxis2DPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE294
    void OnAxis2DPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnAxis2DCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE340
    void OnAxis2DCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnRestingHandAxis2DPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE3B0
    void OnRestingHandAxis2DPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnRestingHandAxis2DCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE45C
    void OnRestingHandAxis2DCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnGripPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE4CC
    void OnGripPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnGripCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE4D8
    void OnGripCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnTriggerPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE4E0
    void OnTriggerPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnTriggerCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE4EC
    void OnTriggerCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnPrimaryButtonPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE4F4
    void OnPrimaryButtonPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnPrimaryButtonCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE500
    void OnPrimaryButtonCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnSecondaryButtonPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE508
    void OnSecondaryButtonPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnSecondaryButtonCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE514
    void OnSecondaryButtonCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnMenuPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE51C
    void OnMenuPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnMenuCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE528
    void OnMenuCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnPrimary2DAxisClickPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE530
    void OnPrimary2DAxisClickPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnPrimary2DAxisClickCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE53C
    void OnPrimary2DAxisClickCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnSecondary2DAxisClickPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE544
    void OnSecondary2DAxisClickPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnSecondary2DAxisClickCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE550
    void OnSecondary2DAxisClickCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnPrimary2DAxisTouchPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE558
    void OnPrimary2DAxisTouchPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnPrimary2DAxisTouchCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE564
    void OnPrimary2DAxisTouchCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnSecondary2DAxisTouchPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE56C
    void OnSecondary2DAxisTouchPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnSecondary2DAxisTouchCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE578
    void OnSecondary2DAxisTouchCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnPrimaryTouchPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE580
    void OnPrimaryTouchPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnPrimaryTouchCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE58C
    void OnPrimaryTouchCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnSecondaryTouchPerformed(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE594
    void OnSecondaryTouchPerformed(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // private System.Void OnSecondaryTouchCanceled(UnityEngine.InputSystem.InputAction/UnityEngine.InputSystem.CallbackContext context)
    // Offset: 0xFEE5A0
    void OnSecondaryTouchCanceled(::UnityEngine::InputSystem::InputAction_CallbackContext context);
    // static private UnityEngine.InputSystem.InputAction GetInputAction(UnityEngine.InputSystem.InputActionReference actionReference)
    // Offset: 0xFEDD28
    static ::UnityEngine::InputSystem::InputAction* GetInputAction(::UnityEngine::InputSystem::InputActionReference* actionReference);
  }; // UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation.XRDeviceSimulator
  #pragma pack(pop)
  static check_size<sizeof(XRDeviceSimulator), 736 + sizeof(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedController*)> __UnityEngine_XR_Interaction_Toolkit_Inputs_Simulation_XRDeviceSimulatorSizeCheck;
  static_assert(sizeof(XRDeviceSimulator) == 0x2E8);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets, "UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation", "XRDeviceSimulator/Axis2DTargets");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode, "UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation", "XRDeviceSimulator/TransformationMode");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space, "UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation", "XRDeviceSimulator/Space");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_keyboardXTranslateAction
// Il2CppName: get_keyboardXTranslateAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_keyboardXTranslateAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_keyboardXTranslateAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_keyboardXTranslateAction
// Il2CppName: set_keyboardXTranslateAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_keyboardXTranslateAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_keyboardXTranslateAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_keyboardYTranslateAction
// Il2CppName: get_keyboardYTranslateAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_keyboardYTranslateAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_keyboardYTranslateAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_keyboardYTranslateAction
// Il2CppName: set_keyboardYTranslateAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_keyboardYTranslateAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_keyboardYTranslateAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_keyboardZTranslateAction
// Il2CppName: get_keyboardZTranslateAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_keyboardZTranslateAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_keyboardZTranslateAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_keyboardZTranslateAction
// Il2CppName: set_keyboardZTranslateAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_keyboardZTranslateAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_keyboardZTranslateAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_manipulateLeftAction
// Il2CppName: get_manipulateLeftAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_manipulateLeftAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_manipulateLeftAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_manipulateLeftAction
// Il2CppName: set_manipulateLeftAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_manipulateLeftAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_manipulateLeftAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_manipulateRightAction
// Il2CppName: get_manipulateRightAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_manipulateRightAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_manipulateRightAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_manipulateRightAction
// Il2CppName: set_manipulateRightAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_manipulateRightAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_manipulateRightAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_toggleManipulateLeftAction
// Il2CppName: get_toggleManipulateLeftAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_toggleManipulateLeftAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_toggleManipulateLeftAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_toggleManipulateLeftAction
// Il2CppName: set_toggleManipulateLeftAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_toggleManipulateLeftAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_toggleManipulateLeftAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_toggleManipulateRightAction
// Il2CppName: get_toggleManipulateRightAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_toggleManipulateRightAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_toggleManipulateRightAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_toggleManipulateRightAction
// Il2CppName: set_toggleManipulateRightAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_toggleManipulateRightAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_toggleManipulateRightAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_manipulateHeadAction
// Il2CppName: get_manipulateHeadAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_manipulateHeadAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_manipulateHeadAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_manipulateHeadAction
// Il2CppName: set_manipulateHeadAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_manipulateHeadAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_manipulateHeadAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseDeltaAction
// Il2CppName: get_mouseDeltaAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseDeltaAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_mouseDeltaAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseDeltaAction
// Il2CppName: set_mouseDeltaAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseDeltaAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_mouseDeltaAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseScrollAction
// Il2CppName: get_mouseScrollAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseScrollAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_mouseScrollAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseScrollAction
// Il2CppName: set_mouseScrollAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseScrollAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_mouseScrollAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_rotateModeOverrideAction
// Il2CppName: get_rotateModeOverrideAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_rotateModeOverrideAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_rotateModeOverrideAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_rotateModeOverrideAction
// Il2CppName: set_rotateModeOverrideAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_rotateModeOverrideAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_rotateModeOverrideAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_toggleMouseTransformationModeAction
// Il2CppName: get_toggleMouseTransformationModeAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_toggleMouseTransformationModeAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_toggleMouseTransformationModeAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_toggleMouseTransformationModeAction
// Il2CppName: set_toggleMouseTransformationModeAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_toggleMouseTransformationModeAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_toggleMouseTransformationModeAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_negateModeAction
// Il2CppName: get_negateModeAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_negateModeAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_negateModeAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_negateModeAction
// Il2CppName: set_negateModeAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_negateModeAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_negateModeAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_xConstraintAction
// Il2CppName: get_xConstraintAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_xConstraintAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_xConstraintAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_xConstraintAction
// Il2CppName: set_xConstraintAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_xConstraintAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_xConstraintAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_yConstraintAction
// Il2CppName: get_yConstraintAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_yConstraintAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_yConstraintAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_yConstraintAction
// Il2CppName: set_yConstraintAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_yConstraintAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_yConstraintAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_zConstraintAction
// Il2CppName: get_zConstraintAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_zConstraintAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_zConstraintAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_zConstraintAction
// Il2CppName: set_zConstraintAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_zConstraintAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_zConstraintAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_resetAction
// Il2CppName: get_resetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_resetAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_resetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_resetAction
// Il2CppName: set_resetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_resetAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_resetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_toggleCursorLockAction
// Il2CppName: get_toggleCursorLockAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_toggleCursorLockAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_toggleCursorLockAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_toggleCursorLockAction
// Il2CppName: set_toggleCursorLockAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_toggleCursorLockAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_toggleCursorLockAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_toggleDevicePositionTargetAction
// Il2CppName: get_toggleDevicePositionTargetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_toggleDevicePositionTargetAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_toggleDevicePositionTargetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_toggleDevicePositionTargetAction
// Il2CppName: set_toggleDevicePositionTargetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_toggleDevicePositionTargetAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_toggleDevicePositionTargetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_togglePrimary2DAxisTargetAction
// Il2CppName: get_togglePrimary2DAxisTargetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_togglePrimary2DAxisTargetAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_togglePrimary2DAxisTargetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_togglePrimary2DAxisTargetAction
// Il2CppName: set_togglePrimary2DAxisTargetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_togglePrimary2DAxisTargetAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_togglePrimary2DAxisTargetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_toggleSecondary2DAxisTargetAction
// Il2CppName: get_toggleSecondary2DAxisTargetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_toggleSecondary2DAxisTargetAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_toggleSecondary2DAxisTargetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_toggleSecondary2DAxisTargetAction
// Il2CppName: set_toggleSecondary2DAxisTargetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_toggleSecondary2DAxisTargetAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_toggleSecondary2DAxisTargetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_axis2DAction
// Il2CppName: get_axis2DAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_axis2DAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_axis2DAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_axis2DAction
// Il2CppName: set_axis2DAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_axis2DAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_axis2DAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_restingHandAxis2DAction
// Il2CppName: get_restingHandAxis2DAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_restingHandAxis2DAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_restingHandAxis2DAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_restingHandAxis2DAction
// Il2CppName: set_restingHandAxis2DAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_restingHandAxis2DAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_restingHandAxis2DAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_gripAction
// Il2CppName: get_gripAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_gripAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_gripAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_gripAction
// Il2CppName: set_gripAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_gripAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_gripAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_triggerAction
// Il2CppName: get_triggerAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_triggerAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_triggerAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_triggerAction
// Il2CppName: set_triggerAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_triggerAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_triggerAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_primaryButtonAction
// Il2CppName: get_primaryButtonAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_primaryButtonAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_primaryButtonAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_primaryButtonAction
// Il2CppName: set_primaryButtonAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_primaryButtonAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_primaryButtonAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_secondaryButtonAction
// Il2CppName: get_secondaryButtonAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_secondaryButtonAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_secondaryButtonAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_secondaryButtonAction
// Il2CppName: set_secondaryButtonAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_secondaryButtonAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_secondaryButtonAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_menuAction
// Il2CppName: get_menuAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_menuAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_menuAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_menuAction
// Il2CppName: set_menuAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_menuAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_menuAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_primary2DAxisClickAction
// Il2CppName: get_primary2DAxisClickAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_primary2DAxisClickAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_primary2DAxisClickAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_primary2DAxisClickAction
// Il2CppName: set_primary2DAxisClickAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_primary2DAxisClickAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_primary2DAxisClickAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_secondary2DAxisClickAction
// Il2CppName: get_secondary2DAxisClickAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_secondary2DAxisClickAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_secondary2DAxisClickAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_secondary2DAxisClickAction
// Il2CppName: set_secondary2DAxisClickAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_secondary2DAxisClickAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_secondary2DAxisClickAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_primary2DAxisTouchAction
// Il2CppName: get_primary2DAxisTouchAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_primary2DAxisTouchAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_primary2DAxisTouchAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_primary2DAxisTouchAction
// Il2CppName: set_primary2DAxisTouchAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_primary2DAxisTouchAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_primary2DAxisTouchAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_secondary2DAxisTouchAction
// Il2CppName: get_secondary2DAxisTouchAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_secondary2DAxisTouchAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_secondary2DAxisTouchAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_secondary2DAxisTouchAction
// Il2CppName: set_secondary2DAxisTouchAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_secondary2DAxisTouchAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_secondary2DAxisTouchAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_primaryTouchAction
// Il2CppName: get_primaryTouchAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_primaryTouchAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_primaryTouchAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_primaryTouchAction
// Il2CppName: set_primaryTouchAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_primaryTouchAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_primaryTouchAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_secondaryTouchAction
// Il2CppName: get_secondaryTouchAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputActionReference* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_secondaryTouchAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_secondaryTouchAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_secondaryTouchAction
// Il2CppName: set_secondaryTouchAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_secondaryTouchAction)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_secondaryTouchAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_cameraTransform
// Il2CppName: get_cameraTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_cameraTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_cameraTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_cameraTransform
// Il2CppName: set_cameraTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::Transform*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_cameraTransform)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_cameraTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_keyboardTranslateSpace
// Il2CppName: get_keyboardTranslateSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_keyboardTranslateSpace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_keyboardTranslateSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_keyboardTranslateSpace
// Il2CppName: set_keyboardTranslateSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_keyboardTranslateSpace)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation", "XRDeviceSimulator/Space")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_keyboardTranslateSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseTranslateSpace
// Il2CppName: get_mouseTranslateSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseTranslateSpace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_mouseTranslateSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseTranslateSpace
// Il2CppName: set_mouseTranslateSpace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseTranslateSpace)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation", "XRDeviceSimulator/Space")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_mouseTranslateSpace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_keyboardXTranslateSpeed
// Il2CppName: get_keyboardXTranslateSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_keyboardXTranslateSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_keyboardXTranslateSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_keyboardXTranslateSpeed
// Il2CppName: set_keyboardXTranslateSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_keyboardXTranslateSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_keyboardXTranslateSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_keyboardYTranslateSpeed
// Il2CppName: get_keyboardYTranslateSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_keyboardYTranslateSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_keyboardYTranslateSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_keyboardYTranslateSpeed
// Il2CppName: set_keyboardYTranslateSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_keyboardYTranslateSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_keyboardYTranslateSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_keyboardZTranslateSpeed
// Il2CppName: get_keyboardZTranslateSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_keyboardZTranslateSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_keyboardZTranslateSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_keyboardZTranslateSpeed
// Il2CppName: set_keyboardZTranslateSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_keyboardZTranslateSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_keyboardZTranslateSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseXTranslateSensitivity
// Il2CppName: get_mouseXTranslateSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseXTranslateSensitivity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_mouseXTranslateSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseXTranslateSensitivity
// Il2CppName: set_mouseXTranslateSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseXTranslateSensitivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_mouseXTranslateSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseYTranslateSensitivity
// Il2CppName: get_mouseYTranslateSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseYTranslateSensitivity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_mouseYTranslateSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseYTranslateSensitivity
// Il2CppName: set_mouseYTranslateSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseYTranslateSensitivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_mouseYTranslateSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseScrollTranslateSensitivity
// Il2CppName: get_mouseScrollTranslateSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseScrollTranslateSensitivity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_mouseScrollTranslateSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseScrollTranslateSensitivity
// Il2CppName: set_mouseScrollTranslateSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseScrollTranslateSensitivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_mouseScrollTranslateSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseXRotateSensitivity
// Il2CppName: get_mouseXRotateSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseXRotateSensitivity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_mouseXRotateSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseXRotateSensitivity
// Il2CppName: set_mouseXRotateSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseXRotateSensitivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_mouseXRotateSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseYRotateSensitivity
// Il2CppName: get_mouseYRotateSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseYRotateSensitivity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_mouseYRotateSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseYRotateSensitivity
// Il2CppName: set_mouseYRotateSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseYRotateSensitivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_mouseYRotateSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseScrollRotateSensitivity
// Il2CppName: get_mouseScrollRotateSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseScrollRotateSensitivity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_mouseScrollRotateSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseScrollRotateSensitivity
// Il2CppName: set_mouseScrollRotateSensitivity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(float)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseScrollRotateSensitivity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_mouseScrollRotateSensitivity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseYRotateInvert
// Il2CppName: get_mouseYRotateInvert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseYRotateInvert)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_mouseYRotateInvert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseYRotateInvert
// Il2CppName: set_mouseYRotateInvert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseYRotateInvert)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_mouseYRotateInvert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_desiredCursorLockMode
// Il2CppName: get_desiredCursorLockMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::CursorLockMode (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_desiredCursorLockMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_desiredCursorLockMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_desiredCursorLockMode
// Il2CppName: set_desiredCursorLockMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::CursorLockMode)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_desiredCursorLockMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "CursorLockMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_desiredCursorLockMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseTransformationMode
// Il2CppName: get_mouseTransformationMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_mouseTransformationMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_mouseTransformationMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseTransformationMode
// Il2CppName: set_mouseTransformationMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_mouseTransformationMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation", "XRDeviceSimulator/TransformationMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_mouseTransformationMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_axis2DTargets
// Il2CppName: get_axis2DTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::get_axis2DTargets)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "get_axis2DTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_axis2DTargets
// Il2CppName: set_axis2DTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Axis2DTargets)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::set_axis2DTargets)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation", "XRDeviceSimulator/Axis2DTargets")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "set_axis2DTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::ProcessPoseInput
// Il2CppName: ProcessPoseInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::ProcessPoseInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "ProcessPoseInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::ProcessControlInput
// Il2CppName: ProcessControlInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::ProcessControlInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "ProcessControlInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::ProcessAxis2DControlInput
// Il2CppName: ProcessAxis2DControlInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::ProcessAxis2DControlInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "ProcessAxis2DControlInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::ProcessButtonControlInput
// Il2CppName: ProcessButtonControlInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(ByRef<::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedControllerState>)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::ProcessButtonControlInput)> {
  static const MethodInfo* get() {
    static auto* controllerState = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation", "XRSimulatedControllerState")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "ProcessButtonControlInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{controllerState});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::AddDevices
// Il2CppName: AddDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::AddDevices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "AddDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::RemoveDevices
// Il2CppName: RemoveDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::RemoveDevices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "RemoveDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::GetResetScale
// Il2CppName: GetResetScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::GetResetScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "GetResetScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::GetAxes
// Il2CppName: GetAxes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space, ::UnityEngine::Transform*, ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::GetAxes)> {
  static const MethodInfo* get() {
    static auto* translateSpace = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation", "XRDeviceSimulator/Space")->byval_arg;
    static auto* cameraTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* right = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* up = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* forward = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "GetAxes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{translateSpace, cameraTransform, right, up, forward});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::GetDeltaRotation
// Il2CppName: GetDeltaRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (*)(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space, ByRef<::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedControllerState>, ByRef<::UnityEngine::Quaternion>)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::GetDeltaRotation)> {
  static const MethodInfo* get() {
    static auto* translateSpace = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation", "XRDeviceSimulator/Space")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation", "XRSimulatedControllerState")->this_arg;
    static auto* inverseCameraParentRotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "GetDeltaRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{translateSpace, state, inverseCameraParentRotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::GetDeltaRotation
// Il2CppName: GetDeltaRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (*)(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Space, ByRef<::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRSimulatedHMDState>, ByRef<::UnityEngine::Quaternion>)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::GetDeltaRotation)> {
  static const MethodInfo* get() {
    static auto* translateSpace = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation", "XRDeviceSimulator/Space")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation", "XRSimulatedHMDState")->this_arg;
    static auto* inverseCameraParentRotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "GetDeltaRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{translateSpace, state, inverseCameraParentRotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Subscribe
// Il2CppName: Subscribe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputActionReference*, ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*, ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Subscribe)> {
  static const MethodInfo* get() {
    static auto* reference = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    static auto* performed = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    static auto* canceled = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "Subscribe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reference, performed, canceled});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Unsubscribe
// Il2CppName: Unsubscribe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::InputSystem::InputActionReference*, ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*, ::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Unsubscribe)> {
  static const MethodInfo* get() {
    static auto* reference = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    static auto* performed = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    static auto* canceled = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "Unsubscribe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reference, performed, canceled});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Negate
// Il2CppName: Negate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode (*)(::UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::TransformationMode)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Negate)> {
  static const MethodInfo* get() {
    static auto* mode = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Inputs.Simulation", "XRDeviceSimulator/TransformationMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "Negate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mode});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Negate
// Il2CppName: Negate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::CursorLockMode (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::CursorLockMode)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::Negate)> {
  static const MethodInfo* get() {
    static auto* mode = &::il2cpp_utils::GetClassFromName("UnityEngine", "CursorLockMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "Negate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mode});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeKeyboardXTranslateAction
// Il2CppName: SubscribeKeyboardXTranslateAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeKeyboardXTranslateAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeKeyboardXTranslateAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeKeyboardXTranslateAction
// Il2CppName: UnsubscribeKeyboardXTranslateAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeKeyboardXTranslateAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeKeyboardXTranslateAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeKeyboardYTranslateAction
// Il2CppName: SubscribeKeyboardYTranslateAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeKeyboardYTranslateAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeKeyboardYTranslateAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeKeyboardYTranslateAction
// Il2CppName: UnsubscribeKeyboardYTranslateAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeKeyboardYTranslateAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeKeyboardYTranslateAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeKeyboardZTranslateAction
// Il2CppName: SubscribeKeyboardZTranslateAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeKeyboardZTranslateAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeKeyboardZTranslateAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeKeyboardZTranslateAction
// Il2CppName: UnsubscribeKeyboardZTranslateAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeKeyboardZTranslateAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeKeyboardZTranslateAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeManipulateLeftAction
// Il2CppName: SubscribeManipulateLeftAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeManipulateLeftAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeManipulateLeftAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeManipulateLeftAction
// Il2CppName: UnsubscribeManipulateLeftAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeManipulateLeftAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeManipulateLeftAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeManipulateRightAction
// Il2CppName: SubscribeManipulateRightAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeManipulateRightAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeManipulateRightAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeManipulateRightAction
// Il2CppName: UnsubscribeManipulateRightAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeManipulateRightAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeManipulateRightAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeToggleManipulateLeftAction
// Il2CppName: SubscribeToggleManipulateLeftAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeToggleManipulateLeftAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeToggleManipulateLeftAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeToggleManipulateLeftAction
// Il2CppName: UnsubscribeToggleManipulateLeftAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeToggleManipulateLeftAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeToggleManipulateLeftAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeToggleManipulateRightAction
// Il2CppName: SubscribeToggleManipulateRightAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeToggleManipulateRightAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeToggleManipulateRightAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeToggleManipulateRightAction
// Il2CppName: UnsubscribeToggleManipulateRightAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeToggleManipulateRightAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeToggleManipulateRightAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeManipulateHeadAction
// Il2CppName: SubscribeManipulateHeadAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeManipulateHeadAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeManipulateHeadAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeManipulateHeadAction
// Il2CppName: UnsubscribeManipulateHeadAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeManipulateHeadAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeManipulateHeadAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeMouseDeltaAction
// Il2CppName: SubscribeMouseDeltaAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeMouseDeltaAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeMouseDeltaAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeMouseDeltaAction
// Il2CppName: UnsubscribeMouseDeltaAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeMouseDeltaAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeMouseDeltaAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeMouseScrollAction
// Il2CppName: SubscribeMouseScrollAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeMouseScrollAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeMouseScrollAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeMouseScrollAction
// Il2CppName: UnsubscribeMouseScrollAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeMouseScrollAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeMouseScrollAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeRotateModeOverrideAction
// Il2CppName: SubscribeRotateModeOverrideAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeRotateModeOverrideAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeRotateModeOverrideAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeRotateModeOverrideAction
// Il2CppName: UnsubscribeRotateModeOverrideAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeRotateModeOverrideAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeRotateModeOverrideAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeToggleMouseTransformationModeAction
// Il2CppName: SubscribeToggleMouseTransformationModeAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeToggleMouseTransformationModeAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeToggleMouseTransformationModeAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeToggleMouseTransformationModeAction
// Il2CppName: UnsubscribeToggleMouseTransformationModeAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeToggleMouseTransformationModeAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeToggleMouseTransformationModeAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeNegateModeAction
// Il2CppName: SubscribeNegateModeAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeNegateModeAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeNegateModeAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeNegateModeAction
// Il2CppName: UnsubscribeNegateModeAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeNegateModeAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeNegateModeAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeXConstraintAction
// Il2CppName: SubscribeXConstraintAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeXConstraintAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeXConstraintAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeXConstraintAction
// Il2CppName: UnsubscribeXConstraintAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeXConstraintAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeXConstraintAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeYConstraintAction
// Il2CppName: SubscribeYConstraintAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeYConstraintAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeYConstraintAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeYConstraintAction
// Il2CppName: UnsubscribeYConstraintAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeYConstraintAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeYConstraintAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeZConstraintAction
// Il2CppName: SubscribeZConstraintAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeZConstraintAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeZConstraintAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeZConstraintAction
// Il2CppName: UnsubscribeZConstraintAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeZConstraintAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeZConstraintAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeResetAction
// Il2CppName: SubscribeResetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeResetAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeResetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeResetAction
// Il2CppName: UnsubscribeResetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeResetAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeResetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeToggleCursorLockAction
// Il2CppName: SubscribeToggleCursorLockAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeToggleCursorLockAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeToggleCursorLockAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeToggleCursorLockAction
// Il2CppName: UnsubscribeToggleCursorLockAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeToggleCursorLockAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeToggleCursorLockAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeToggleDevicePositionTargetAction
// Il2CppName: SubscribeToggleDevicePositionTargetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeToggleDevicePositionTargetAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeToggleDevicePositionTargetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeToggleDevicePositionTargetAction
// Il2CppName: UnsubscribeToggleDevicePositionTargetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeToggleDevicePositionTargetAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeToggleDevicePositionTargetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeTogglePrimary2DAxisTargetAction
// Il2CppName: SubscribeTogglePrimary2DAxisTargetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeTogglePrimary2DAxisTargetAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeTogglePrimary2DAxisTargetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeTogglePrimary2DAxisTargetAction
// Il2CppName: UnsubscribeTogglePrimary2DAxisTargetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeTogglePrimary2DAxisTargetAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeTogglePrimary2DAxisTargetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeToggleSecondary2DAxisTargetAction
// Il2CppName: SubscribeToggleSecondary2DAxisTargetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeToggleSecondary2DAxisTargetAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeToggleSecondary2DAxisTargetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeToggleSecondary2DAxisTargetAction
// Il2CppName: UnsubscribeToggleSecondary2DAxisTargetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeToggleSecondary2DAxisTargetAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeToggleSecondary2DAxisTargetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeAxis2DAction
// Il2CppName: SubscribeAxis2DAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeAxis2DAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeAxis2DAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeAxis2DAction
// Il2CppName: UnsubscribeAxis2DAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeAxis2DAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeAxis2DAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeRestingHandAxis2DAction
// Il2CppName: SubscribeRestingHandAxis2DAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeRestingHandAxis2DAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeRestingHandAxis2DAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeRestingHandAxis2DAction
// Il2CppName: UnsubscribeRestingHandAxis2DAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeRestingHandAxis2DAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeRestingHandAxis2DAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeGripAction
// Il2CppName: SubscribeGripAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeGripAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeGripAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeGripAction
// Il2CppName: UnsubscribeGripAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeGripAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeGripAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeTriggerAction
// Il2CppName: SubscribeTriggerAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeTriggerAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeTriggerAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeTriggerAction
// Il2CppName: UnsubscribeTriggerAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeTriggerAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeTriggerAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribePrimaryButtonAction
// Il2CppName: SubscribePrimaryButtonAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribePrimaryButtonAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribePrimaryButtonAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribePrimaryButtonAction
// Il2CppName: UnsubscribePrimaryButtonAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribePrimaryButtonAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribePrimaryButtonAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeSecondaryButtonAction
// Il2CppName: SubscribeSecondaryButtonAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeSecondaryButtonAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeSecondaryButtonAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeSecondaryButtonAction
// Il2CppName: UnsubscribeSecondaryButtonAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeSecondaryButtonAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeSecondaryButtonAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeMenuAction
// Il2CppName: SubscribeMenuAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeMenuAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeMenuAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeMenuAction
// Il2CppName: UnsubscribeMenuAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeMenuAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeMenuAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribePrimary2DAxisClickAction
// Il2CppName: SubscribePrimary2DAxisClickAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribePrimary2DAxisClickAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribePrimary2DAxisClickAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribePrimary2DAxisClickAction
// Il2CppName: UnsubscribePrimary2DAxisClickAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribePrimary2DAxisClickAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribePrimary2DAxisClickAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeSecondary2DAxisClickAction
// Il2CppName: SubscribeSecondary2DAxisClickAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeSecondary2DAxisClickAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeSecondary2DAxisClickAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeSecondary2DAxisClickAction
// Il2CppName: UnsubscribeSecondary2DAxisClickAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeSecondary2DAxisClickAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeSecondary2DAxisClickAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribePrimary2DAxisTouchAction
// Il2CppName: SubscribePrimary2DAxisTouchAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribePrimary2DAxisTouchAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribePrimary2DAxisTouchAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribePrimary2DAxisTouchAction
// Il2CppName: UnsubscribePrimary2DAxisTouchAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribePrimary2DAxisTouchAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribePrimary2DAxisTouchAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeSecondary2DAxisTouchAction
// Il2CppName: SubscribeSecondary2DAxisTouchAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeSecondary2DAxisTouchAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeSecondary2DAxisTouchAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeSecondary2DAxisTouchAction
// Il2CppName: UnsubscribeSecondary2DAxisTouchAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeSecondary2DAxisTouchAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeSecondary2DAxisTouchAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribePrimaryTouchAction
// Il2CppName: SubscribePrimaryTouchAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribePrimaryTouchAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribePrimaryTouchAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribePrimaryTouchAction
// Il2CppName: UnsubscribePrimaryTouchAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribePrimaryTouchAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribePrimaryTouchAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeSecondaryTouchAction
// Il2CppName: SubscribeSecondaryTouchAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::SubscribeSecondaryTouchAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "SubscribeSecondaryTouchAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeSecondaryTouchAction
// Il2CppName: UnsubscribeSecondaryTouchAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::UnsubscribeSecondaryTouchAction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "UnsubscribeSecondaryTouchAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnKeyboardXTranslatePerformed
// Il2CppName: OnKeyboardXTranslatePerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnKeyboardXTranslatePerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnKeyboardXTranslatePerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnKeyboardXTranslateCanceled
// Il2CppName: OnKeyboardXTranslateCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnKeyboardXTranslateCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnKeyboardXTranslateCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnKeyboardYTranslatePerformed
// Il2CppName: OnKeyboardYTranslatePerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnKeyboardYTranslatePerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnKeyboardYTranslatePerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnKeyboardYTranslateCanceled
// Il2CppName: OnKeyboardYTranslateCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnKeyboardYTranslateCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnKeyboardYTranslateCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnKeyboardZTranslatePerformed
// Il2CppName: OnKeyboardZTranslatePerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnKeyboardZTranslatePerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnKeyboardZTranslatePerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnKeyboardZTranslateCanceled
// Il2CppName: OnKeyboardZTranslateCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnKeyboardZTranslateCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnKeyboardZTranslateCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnManipulateLeftPerformed
// Il2CppName: OnManipulateLeftPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnManipulateLeftPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnManipulateLeftPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnManipulateLeftCanceled
// Il2CppName: OnManipulateLeftCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnManipulateLeftCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnManipulateLeftCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnManipulateRightPerformed
// Il2CppName: OnManipulateRightPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnManipulateRightPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnManipulateRightPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnManipulateRightCanceled
// Il2CppName: OnManipulateRightCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnManipulateRightCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnManipulateRightCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnToggleManipulateLeftPerformed
// Il2CppName: OnToggleManipulateLeftPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnToggleManipulateLeftPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnToggleManipulateLeftPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnToggleManipulateRightPerformed
// Il2CppName: OnToggleManipulateRightPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnToggleManipulateRightPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnToggleManipulateRightPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnManipulateHeadPerformed
// Il2CppName: OnManipulateHeadPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnManipulateHeadPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnManipulateHeadPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnManipulateHeadCanceled
// Il2CppName: OnManipulateHeadCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnManipulateHeadCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnManipulateHeadCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnMouseDeltaPerformed
// Il2CppName: OnMouseDeltaPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnMouseDeltaPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnMouseDeltaPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnMouseDeltaCanceled
// Il2CppName: OnMouseDeltaCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnMouseDeltaCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnMouseDeltaCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnMouseScrollPerformed
// Il2CppName: OnMouseScrollPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnMouseScrollPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnMouseScrollPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnMouseScrollCanceled
// Il2CppName: OnMouseScrollCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnMouseScrollCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnMouseScrollCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnRotateModeOverridePerformed
// Il2CppName: OnRotateModeOverridePerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnRotateModeOverridePerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnRotateModeOverridePerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnRotateModeOverrideCanceled
// Il2CppName: OnRotateModeOverrideCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnRotateModeOverrideCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnRotateModeOverrideCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnToggleMouseTransformationModePerformed
// Il2CppName: OnToggleMouseTransformationModePerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnToggleMouseTransformationModePerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnToggleMouseTransformationModePerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnNegateModePerformed
// Il2CppName: OnNegateModePerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnNegateModePerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnNegateModePerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnNegateModeCanceled
// Il2CppName: OnNegateModeCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnNegateModeCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnNegateModeCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnXConstraintPerformed
// Il2CppName: OnXConstraintPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnXConstraintPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnXConstraintPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnXConstraintCanceled
// Il2CppName: OnXConstraintCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnXConstraintCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnXConstraintCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnYConstraintPerformed
// Il2CppName: OnYConstraintPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnYConstraintPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnYConstraintPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnYConstraintCanceled
// Il2CppName: OnYConstraintCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnYConstraintCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnYConstraintCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnZConstraintPerformed
// Il2CppName: OnZConstraintPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnZConstraintPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnZConstraintPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnZConstraintCanceled
// Il2CppName: OnZConstraintCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnZConstraintCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnZConstraintCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnResetPerformed
// Il2CppName: OnResetPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnResetPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnResetPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnResetCanceled
// Il2CppName: OnResetCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnResetCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnResetCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnToggleCursorLockPerformed
// Il2CppName: OnToggleCursorLockPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnToggleCursorLockPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnToggleCursorLockPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnToggleDevicePositionTargetPerformed
// Il2CppName: OnToggleDevicePositionTargetPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnToggleDevicePositionTargetPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnToggleDevicePositionTargetPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnTogglePrimary2DAxisTargetPerformed
// Il2CppName: OnTogglePrimary2DAxisTargetPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnTogglePrimary2DAxisTargetPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnTogglePrimary2DAxisTargetPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnToggleSecondary2DAxisTargetPerformed
// Il2CppName: OnToggleSecondary2DAxisTargetPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnToggleSecondary2DAxisTargetPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnToggleSecondary2DAxisTargetPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnAxis2DPerformed
// Il2CppName: OnAxis2DPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnAxis2DPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnAxis2DPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnAxis2DCanceled
// Il2CppName: OnAxis2DCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnAxis2DCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnAxis2DCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnRestingHandAxis2DPerformed
// Il2CppName: OnRestingHandAxis2DPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnRestingHandAxis2DPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnRestingHandAxis2DPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnRestingHandAxis2DCanceled
// Il2CppName: OnRestingHandAxis2DCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnRestingHandAxis2DCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnRestingHandAxis2DCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnGripPerformed
// Il2CppName: OnGripPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnGripPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnGripPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnGripCanceled
// Il2CppName: OnGripCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnGripCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnGripCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnTriggerPerformed
// Il2CppName: OnTriggerPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnTriggerPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnTriggerPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnTriggerCanceled
// Il2CppName: OnTriggerCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnTriggerCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnTriggerCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnPrimaryButtonPerformed
// Il2CppName: OnPrimaryButtonPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnPrimaryButtonPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnPrimaryButtonPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnPrimaryButtonCanceled
// Il2CppName: OnPrimaryButtonCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnPrimaryButtonCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnPrimaryButtonCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnSecondaryButtonPerformed
// Il2CppName: OnSecondaryButtonPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnSecondaryButtonPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnSecondaryButtonPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnSecondaryButtonCanceled
// Il2CppName: OnSecondaryButtonCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnSecondaryButtonCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnSecondaryButtonCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnMenuPerformed
// Il2CppName: OnMenuPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnMenuPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnMenuPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnMenuCanceled
// Il2CppName: OnMenuCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnMenuCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnMenuCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnPrimary2DAxisClickPerformed
// Il2CppName: OnPrimary2DAxisClickPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnPrimary2DAxisClickPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnPrimary2DAxisClickPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnPrimary2DAxisClickCanceled
// Il2CppName: OnPrimary2DAxisClickCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnPrimary2DAxisClickCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnPrimary2DAxisClickCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnSecondary2DAxisClickPerformed
// Il2CppName: OnSecondary2DAxisClickPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnSecondary2DAxisClickPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnSecondary2DAxisClickPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnSecondary2DAxisClickCanceled
// Il2CppName: OnSecondary2DAxisClickCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnSecondary2DAxisClickCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnSecondary2DAxisClickCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnPrimary2DAxisTouchPerformed
// Il2CppName: OnPrimary2DAxisTouchPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnPrimary2DAxisTouchPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnPrimary2DAxisTouchPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnPrimary2DAxisTouchCanceled
// Il2CppName: OnPrimary2DAxisTouchCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnPrimary2DAxisTouchCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnPrimary2DAxisTouchCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnSecondary2DAxisTouchPerformed
// Il2CppName: OnSecondary2DAxisTouchPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnSecondary2DAxisTouchPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnSecondary2DAxisTouchPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnSecondary2DAxisTouchCanceled
// Il2CppName: OnSecondary2DAxisTouchCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnSecondary2DAxisTouchCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnSecondary2DAxisTouchCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnPrimaryTouchPerformed
// Il2CppName: OnPrimaryTouchPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnPrimaryTouchPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnPrimaryTouchPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnPrimaryTouchCanceled
// Il2CppName: OnPrimaryTouchCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnPrimaryTouchCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnPrimaryTouchCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnSecondaryTouchPerformed
// Il2CppName: OnSecondaryTouchPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnSecondaryTouchPerformed)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnSecondaryTouchPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnSecondaryTouchCanceled
// Il2CppName: OnSecondaryTouchCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::*)(::UnityEngine::InputSystem::InputAction_CallbackContext)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::OnSecondaryTouchCanceled)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputAction/CallbackContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "OnSecondaryTouchCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::GetInputAction
// Il2CppName: GetInputAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::InputAction* (*)(::UnityEngine::InputSystem::InputActionReference*)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator::GetInputAction)> {
  static const MethodInfo* get() {
    static auto* actionReference = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputActionReference")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Simulation::XRDeviceSimulator*), "GetInputAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actionReference});
  }
};
