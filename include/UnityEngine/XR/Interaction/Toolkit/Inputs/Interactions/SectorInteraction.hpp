// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.IInputInteraction`1
#include "UnityEngine/InputSystem/IInputInteraction_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem
namespace UnityEngine::InputSystem {
  // Forward declaring type: InputInteractionContext
  struct InputInteractionContext;
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions
namespace UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions {
  // Skipping declaration: Directions because it is already included!
}
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit::Inputs
namespace UnityEngine::XR::Interaction::Toolkit::Inputs {
  // Forward declaring type: Cardinal
  struct Cardinal;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions
namespace UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions {
  // Forward declaring type: SectorInteraction
  class SectorInteraction;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction*, "UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions", "SectorInteraction");
// Type namespace: UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions
namespace UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: FFFFFFFF
  class SectorInteraction : public ::Il2CppObject/*, public ::UnityEngine::InputSystem::IInputInteraction_1<::UnityEngine::Vector2>*/ {
    public:
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions
    struct Directions;
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::SweepBehavior
    struct SweepBehavior;
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::State
    struct State;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions
    // [TokenAttribute] Offset: FFFFFFFF
    // [FlagsAttribute] Offset: FFFFFFFF
    struct Directions/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: Directions
      constexpr Directions(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions None
      static constexpr const int None = 0;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions None
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions _get_None();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions None
      static void _set_None(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions North
      static constexpr const int North = 1;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions North
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions _get_North();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions North
      static void _set_North(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions South
      static constexpr const int South = 2;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions South
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions _get_South();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions South
      static void _set_South(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions East
      static constexpr const int East = 4;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions East
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions _get_East();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions East
      static void _set_East(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions West
      static constexpr const int West = 8;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions West
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions _get_West();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions West
      static void _set_West(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions
    #pragma pack(pop)
    static check_size<sizeof(SectorInteraction::Directions), 0 + sizeof(int)> __UnityEngine_XR_Interaction_Toolkit_Inputs_Interactions_SectorInteraction_DirectionsSizeCheck;
    static_assert(sizeof(SectorInteraction::Directions) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SweepBehavior
    // [TokenAttribute] Offset: FFFFFFFF
    struct SweepBehavior/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: SweepBehavior
      constexpr SweepBehavior(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SweepBehavior Locked
      static constexpr const int Locked = 0;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SweepBehavior Locked
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::SweepBehavior _get_Locked();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SweepBehavior Locked
      static void _set_Locked(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::SweepBehavior value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SweepBehavior AllowReentry
      static constexpr const int AllowReentry = 1;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SweepBehavior AllowReentry
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::SweepBehavior _get_AllowReentry();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SweepBehavior AllowReentry
      static void _set_AllowReentry(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::SweepBehavior value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SweepBehavior DisallowReentry
      static constexpr const int DisallowReentry = 2;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SweepBehavior DisallowReentry
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::SweepBehavior _get_DisallowReentry();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SweepBehavior DisallowReentry
      static void _set_DisallowReentry(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::SweepBehavior value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SweepBehavior HistoryIndependent
      static constexpr const int HistoryIndependent = 3;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SweepBehavior HistoryIndependent
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::SweepBehavior _get_HistoryIndependent();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SweepBehavior HistoryIndependent
      static void _set_HistoryIndependent(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::SweepBehavior value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SweepBehavior
    #pragma pack(pop)
    static check_size<sizeof(SectorInteraction::SweepBehavior), 0 + sizeof(int)> __UnityEngine_XR_Interaction_Toolkit_Inputs_Interactions_SectorInteraction_SweepBehaviorSizeCheck;
    static_assert(sizeof(SectorInteraction::SweepBehavior) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.State
    // [TokenAttribute] Offset: FFFFFFFF
    struct State/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: State
      constexpr State(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.State Centered
      static constexpr const int Centered = 0;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.State Centered
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::State _get_Centered();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.State Centered
      static void _set_Centered(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::State value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.State StartedValidDirection
      static constexpr const int StartedValidDirection = 1;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.State StartedValidDirection
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::State _get_StartedValidDirection();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.State StartedValidDirection
      static void _set_StartedValidDirection(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::State value);
      // static field const value: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.State StartedInvalidDirection
      static constexpr const int StartedInvalidDirection = 2;
      // Get static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.State StartedInvalidDirection
      static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::State _get_StartedInvalidDirection();
      // Set static field: static public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.State StartedInvalidDirection
      static void _set_StartedInvalidDirection(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::State value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.State
    #pragma pack(pop)
    static check_size<sizeof(SectorInteraction::State), 0 + sizeof(int)> __UnityEngine_XR_Interaction_Toolkit_Inputs_Interactions_SectorInteraction_StateSizeCheck;
    static_assert(sizeof(SectorInteraction::State) == 0x4);
    public:
    // public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions directions
    // Size: 0x4
    // Offset: 0x10
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions directions;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions) == 0x4);
    // public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SweepBehavior sweepBehavior
    // Size: 0x4
    // Offset: 0x14
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::SweepBehavior sweepBehavior;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::SweepBehavior) == 0x4);
    // public System.Single pressPoint
    // Size: 0x4
    // Offset: 0x18
    float pressPoint;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.State m_State
    // Size: 0x4
    // Offset: 0x1C
    ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::State m_State;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::State) == 0x4);
    // private System.Boolean m_WasValidDirection
    // Size: 0x1
    // Offset: 0x20
    bool m_WasValidDirection;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::InputSystem::IInputInteraction_1<::UnityEngine::Vector2>
    operator ::UnityEngine::InputSystem::IInputInteraction_1<::UnityEngine::Vector2>() noexcept {
      return *reinterpret_cast<::UnityEngine::InputSystem::IInputInteraction_1<::UnityEngine::Vector2>*>(this);
    }
    // Get static field: static private System.Single <defaultPressPoint>k__BackingField
    static float _get_$defaultPressPoint$k__BackingField();
    // Set static field: static private System.Single <defaultPressPoint>k__BackingField
    static void _set_$defaultPressPoint$k__BackingField(float value);
    // Get instance field reference: public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions directions
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions& dyn_directions();
    // Get instance field reference: public UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SweepBehavior sweepBehavior
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::SweepBehavior& dyn_sweepBehavior();
    // Get instance field reference: public System.Single pressPoint
    [[deprecated("Use field access instead!")]] float& dyn_pressPoint();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.State m_State
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::State& dyn_m_State();
    // Get instance field reference: private System.Boolean m_WasValidDirection
    [[deprecated("Use field access instead!")]] bool& dyn_m_WasValidDirection();
    // System.Single get_pressPointOrDefault()
    // Offset: 0xFE7B38
    float get_pressPointOrDefault();
    // static public System.Single get_defaultPressPoint()
    // Offset: 0xFE7BEC
    static float get_defaultPressPoint();
    // static public System.Void set_defaultPressPoint(System.Single value)
    // Offset: 0xFE7C54
    static void set_defaultPressPoint(float value);
    // static private System.Void .cctor()
    // Offset: 0xFE7F0C
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0xFE7F94
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SectorInteraction* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SectorInteraction*, creationType>()));
    }
    // public System.Void Process(ref UnityEngine.InputSystem.InputInteractionContext context)
    // Offset: 0xFE7CC8
    void Process(ByRef<::UnityEngine::InputSystem::InputInteractionContext> context);
    // private System.Boolean IsValidDirection(ref UnityEngine.InputSystem.InputInteractionContext context)
    // Offset: 0xFE7E34
    bool IsValidDirection(ByRef<::UnityEngine::InputSystem::InputInteractionContext> context);
    // static private UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction/UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.Directions GetNearestDirection(UnityEngine.XR.Interaction.Toolkit.Inputs.Cardinal value)
    // Offset: 0xFE7EE8
    static ::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions GetNearestDirection(::UnityEngine::XR::Interaction::Toolkit::Inputs::Cardinal value);
    // public System.Void Reset()
    // Offset: 0xFE7F08
    void Reset();
    // static private System.Void Initialize()
    // Offset: 0xFE7F90
    static void Initialize();
  }; // UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions.SectorInteraction
  #pragma pack(pop)
  static check_size<sizeof(SectorInteraction), 32 + sizeof(bool)> __UnityEngine_XR_Interaction_Toolkit_Inputs_Interactions_SectorInteractionSizeCheck;
  static_assert(sizeof(SectorInteraction) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::State, "UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions", "SectorInteraction/State");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::SweepBehavior, "UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions", "SectorInteraction/SweepBehavior");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions, "UnityEngine.XR.Interaction.Toolkit.Inputs.Interactions", "SectorInteraction/Directions");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::get_pressPointOrDefault
// Il2CppName: get_pressPointOrDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::get_pressPointOrDefault)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction*), "get_pressPointOrDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::get_defaultPressPoint
// Il2CppName: get_defaultPressPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::get_defaultPressPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction*), "get_defaultPressPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::set_defaultPressPoint
// Il2CppName: set_defaultPressPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::set_defaultPressPoint)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction*), "set_defaultPressPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Process
// Il2CppName: Process
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::*)(ByRef<::UnityEngine::InputSystem::InputInteractionContext>)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Process)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputInteractionContext")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction*), "Process", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::IsValidDirection
// Il2CppName: IsValidDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::*)(ByRef<::UnityEngine::InputSystem::InputInteractionContext>)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::IsValidDirection)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem", "InputInteractionContext")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction*), "IsValidDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::GetNearestDirection
// Il2CppName: GetNearestDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Directions (*)(::UnityEngine::XR::Interaction::Toolkit::Inputs::Cardinal)>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::GetNearestDirection)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit.Inputs", "Cardinal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction*), "GetNearestDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction::Initialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::Inputs::Interactions::SectorInteraction*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
