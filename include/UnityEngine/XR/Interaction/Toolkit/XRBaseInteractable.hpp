// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: XRInteractionManager
  class XRInteractionManager;
  // Forward declaring type: XRBaseInteractor
  class XRBaseInteractor;
  // Forward declaring type: XRInteractableEvent
  class XRInteractableEvent;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: XRBaseInteractable
  class XRBaseInteractable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*, "UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0xA0
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
  // [TokenAttribute] Offset: FFFFFFFF
  // [SelectionBaseAttribute] Offset: FFFFFFFF
  // [DefaultExecutionOrder] Offset: 97ECF0
  class XRBaseInteractable : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType
    struct MovementType;
    public:
    // [TooltipAttribute] Offset: 0x97FD54
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* m_InteractionManager;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*) == 0x8);
    // [TooltipAttribute] Offset: 0x97FDA0
    // private System.Collections.Generic.List`1<UnityEngine.Collider> m_Colliders
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::UnityEngine::Collider*>* m_Colliders;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Collider*>*) == 0x8);
    // [TooltipAttribute] Offset: 0x97FDEC
    // private UnityEngine.LayerMask m_InteractionLayerMask
    // Size: 0x4
    // Offset: 0x28
    ::UnityEngine::LayerMask m_InteractionLayerMask;
    // Field size check
    static_assert(sizeof(::UnityEngine::LayerMask) == 0x4);
    // Padding between fields: m_InteractionLayerMask and: m_HoveringInteractors
    char __padding2[0x4] = {};
    // private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor> m_HoveringInteractors
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>* m_HoveringInteractors;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*) == 0x8);
    // private System.Boolean <isHovered>k__BackingField
    // Size: 0x1
    // Offset: 0x38
    bool isHovered;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <isSelected>k__BackingField
    // Size: 0x1
    // Offset: 0x39
    bool isSelected;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isSelected and: m_RegisteredInteractionManager
    char __padding5[0x6] = {};
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* m_RegisteredInteractionManager;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x97FE58
    // [TooltipAttribute] Offset: 0x97FE58
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnFirstHoverEntered
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnFirstHoverEntered;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x97FEC8
    // [TooltipAttribute] Offset: 0x97FEC8
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnHoverEntered
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnHoverEntered;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x97FF38
    // [TooltipAttribute] Offset: 0x97FF38
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnHoverExited
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnHoverExited;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x97FFA8
    // [TooltipAttribute] Offset: 0x97FFA8
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnLastHoverExited
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnLastHoverExited;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x980018
    // [TooltipAttribute] Offset: 0x980018
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectEntered
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnSelectEntered;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x980088
    // [TooltipAttribute] Offset: 0x980088
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectExited
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnSelectExited;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x9800F8
    // [TooltipAttribute] Offset: 0x9800F8
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectCanceled
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnSelectCanceled;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // [TooltipAttribute] Offset: 0x980168
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnActivate
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnActivate;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // [TooltipAttribute] Offset: 0x9801B4
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnDeactivate
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* m_OnDeactivate;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*) == 0x8);
    // [TooltipAttribute] Offset: 0x980200
    // private UnityEngine.GameObject m_CustomReticle
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::GameObject* m_CustomReticle;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor,UnityEngine.GameObject> m_ReticleCache
    // Size: 0x8
    // Offset: 0x98
    ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::GameObject*>* m_ReticleCache;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::GameObject*>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
    static ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* _get_s_InteractionManagerCache();
    // Set static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
    static void _set_s_InteractionManagerCache(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value);
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& dyn_m_InteractionManager();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Collider> m_Colliders
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& dyn_m_Colliders();
    // Get instance field reference: private UnityEngine.LayerMask m_InteractionLayerMask
    [[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& dyn_m_InteractionLayerMask();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor> m_HoveringInteractors
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>*& dyn_m_HoveringInteractors();
    // Get instance field reference: private System.Boolean <isHovered>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$isHovered$k__BackingField();
    // Get instance field reference: private System.Boolean <isSelected>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$isSelected$k__BackingField();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& dyn_m_RegisteredInteractionManager();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnFirstHoverEntered
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnFirstHoverEntered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnHoverEntered
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnHoverEntered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnHoverExited
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnHoverExited();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnLastHoverExited
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnLastHoverExited();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectEntered
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnSelectEntered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectExited
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnSelectExited();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnSelectCanceled
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnSelectCanceled();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnActivate
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnActivate();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent m_OnDeactivate
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*& dyn_m_OnDeactivate();
    // Get instance field reference: private UnityEngine.GameObject m_CustomReticle
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_m_CustomReticle();
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor,UnityEngine.GameObject> m_ReticleCache
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::GameObject*>*& dyn_m_ReticleCache();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractionManager get_interactionManager()
    // Offset: 0xD79DC8
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* get_interactionManager();
    // public System.Void set_interactionManager(UnityEngine.XR.Interaction.Toolkit.XRInteractionManager value)
    // Offset: 0xD79DD0
    void set_interactionManager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value);
    // public System.Collections.Generic.List`1<UnityEngine.Collider> get_colliders()
    // Offset: 0xD79F04
    ::System::Collections::Generic::List_1<::UnityEngine::Collider*>* get_colliders();
    // public UnityEngine.LayerMask get_interactionLayerMask()
    // Offset: 0xD79F0C
    ::UnityEngine::LayerMask get_interactionLayerMask();
    // public System.Void set_interactionLayerMask(UnityEngine.LayerMask value)
    // Offset: 0xD79F14
    void set_interactionLayerMask(::UnityEngine::LayerMask value);
    // public System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor> get_hoveringInteractors()
    // Offset: 0xD79F1C
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>* get_hoveringInteractors();
    // public System.Boolean get_isHovered()
    // Offset: 0xD79F24
    bool get_isHovered();
    // private System.Void set_isHovered(System.Boolean value)
    // Offset: 0xD79F2C
    void set_isHovered(bool value);
    // public System.Boolean get_isSelected()
    // Offset: 0xD79F38
    bool get_isSelected();
    // private System.Void set_isSelected(System.Boolean value)
    // Offset: 0xD79F40
    void set_isSelected(bool value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onFirstHoverEntered()
    // Offset: 0xD79F4C
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onFirstHoverEntered();
    // public System.Void set_onFirstHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0xD79F54
    void set_onFirstHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onFirstHoverEnter()
    // Offset: 0xD79F5C
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onFirstHoverEnter();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onHoverEntered()
    // Offset: 0xD79F64
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onHoverEntered();
    // public System.Void set_onHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0xD79F6C
    void set_onHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onHoverEnter()
    // Offset: 0xD79F74
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onHoverEnter();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onHoverExited()
    // Offset: 0xD79F7C
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onHoverExited();
    // public System.Void set_onHoverExited(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0xD79F84
    void set_onHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onHoverExit()
    // Offset: 0xD79F8C
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onHoverExit();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onLastHoverExited()
    // Offset: 0xD79F94
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onLastHoverExited();
    // public System.Void set_onLastHoverExited(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0xD79F9C
    void set_onLastHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onLastHoverExit()
    // Offset: 0xD79FA4
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onLastHoverExit();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectEntered()
    // Offset: 0xD79FAC
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onSelectEntered();
    // public System.Void set_onSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0xD79FB4
    void set_onSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectEnter()
    // Offset: 0xD79FBC
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onSelectEnter();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectExited()
    // Offset: 0xD79FC4
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onSelectExited();
    // public System.Void set_onSelectExited(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0xD79FCC
    void set_onSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectExit()
    // Offset: 0xD79FD4
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onSelectExit();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectCanceled()
    // Offset: 0xD79FDC
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onSelectCanceled();
    // public System.Void set_onSelectCanceled(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0xD79FE4
    void set_onSelectCanceled(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onSelectCancel()
    // Offset: 0xD79FEC
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onSelectCancel();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onActivate()
    // Offset: 0xD79FF4
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onActivate();
    // public System.Void set_onActivate(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0xD79FFC
    void set_onActivate(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent get_onDeactivate()
    // Offset: 0xD7A004
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* get_onDeactivate();
    // public System.Void set_onDeactivate(UnityEngine.XR.Interaction.Toolkit.XRInteractableEvent value)
    // Offset: 0xD7A00C
    void set_onDeactivate(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* value);
    // public UnityEngine.GameObject get_customReticle()
    // Offset: 0xD7A014
    ::UnityEngine::GameObject* get_customReticle();
    // public System.Void set_customReticle(UnityEngine.GameObject value)
    // Offset: 0xD7A01C
    void set_customReticle(::UnityEngine::GameObject* value);
    // protected System.Void .ctor()
    // Offset: 0xD7AF04
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRBaseInteractable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRBaseInteractable*, creationType>()));
    }
    // protected System.Void Reset()
    // Offset: 0xD7A024
    void Reset();
    // protected System.Void Awake()
    // Offset: 0xD7A028
    void Awake();
    // protected System.Void OnDestroy()
    // Offset: 0xD7A2C4
    void OnDestroy();
    // private System.Void FindInteractionManagerEditTime()
    // Offset: 0xD7A364
    void FindInteractionManagerEditTime();
    // private System.Void FindCreateInteractionManager()
    // Offset: 0xD7A09C
    void FindCreateInteractionManager();
    // private System.Void RegisterWithInteractionManager()
    // Offset: 0xD79DD8
    void RegisterWithInteractionManager();
    // public System.Single GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7A368
    float GetDistanceSqrToInteractor(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // private System.Boolean IsOnValidLayerMask(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7A5EC
    bool IsOnValidLayerMask(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // public System.Boolean IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7A634
    bool IsHoverableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // public System.Boolean IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7A638
    bool IsSelectableBy(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected internal System.Void OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7A63C
    void OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected internal System.Void OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7A6FC
    void OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected internal System.Void OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7A7A4
    void OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected internal System.Void OnHoverExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7A860
    void OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected internal System.Void OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7A904
    void OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected internal System.Void OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7A910
    void OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected internal System.Void OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7A984
    void OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected internal System.Void OnSelectExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7A98C
    void OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected internal System.Void OnSelectCanceling(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7AA00
    void OnSelectCanceling(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected internal System.Void OnSelectCanceled(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7AA08
    void OnSelectCanceled(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected internal System.Void OnActivate(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7AA7C
    void OnActivate(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // public System.Void AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7AAF0
    void AttachCustomReticle(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // public System.Void RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7ACFC
    void RemoveCustomReticle(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // protected internal System.Void OnDeactivate(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor interactor)
    // Offset: 0xD7AE8C
    void OnDeactivate(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor* interactor);
    // public System.Void ProcessInteractable(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase updatePhase)
    // Offset: 0xD7AF00
    void ProcessInteractable(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase);
  }; // UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable
  #pragma pack(pop)
  static check_size<sizeof(XRBaseInteractable), 152 + sizeof(::System::Collections::Generic::Dictionary_2<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, ::UnityEngine::GameObject*>*)> __UnityEngine_XR_Interaction_Toolkit_XRBaseInteractableSizeCheck;
  static_assert(sizeof(XRBaseInteractable) == 0xA0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionManager
// Il2CppName: get_interactionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_interactionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionManager
// Il2CppName: set_interactionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionManager)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_interactionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_colliders
// Il2CppName: get_colliders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_colliders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_colliders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionLayerMask
// Il2CppName: get_interactionLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::LayerMask (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_interactionLayerMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_interactionLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionLayerMask
// Il2CppName: set_interactionLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::LayerMask)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_interactionLayerMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "LayerMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_interactionLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoveringInteractors
// Il2CppName: get_hoveringInteractors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_hoveringInteractors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_hoveringInteractors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isHovered
// Il2CppName: get_isHovered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isHovered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_isHovered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_isHovered
// Il2CppName: set_isHovered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_isHovered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_isHovered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isSelected
// Il2CppName: get_isSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_isSelected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_isSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_isSelected
// Il2CppName: set_isSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_isSelected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_isSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEntered
// Il2CppName: get_onFirstHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEntered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onFirstHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onFirstHoverEntered
// Il2CppName: set_onFirstHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onFirstHoverEntered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onFirstHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEnter
// Il2CppName: get_onFirstHoverEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onFirstHoverEnter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onFirstHoverEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEntered
// Il2CppName: get_onHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEntered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverEntered
// Il2CppName: set_onHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverEntered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEnter
// Il2CppName: get_onHoverEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverEnter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onHoverEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExited
// Il2CppName: get_onHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverExited
// Il2CppName: set_onHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onHoverExited)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExit
// Il2CppName: get_onHoverExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onHoverExit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onHoverExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExited
// Il2CppName: get_onLastHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onLastHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onLastHoverExited
// Il2CppName: set_onLastHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onLastHoverExited)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onLastHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExit
// Il2CppName: get_onLastHoverExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onLastHoverExit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onLastHoverExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEntered
// Il2CppName: get_onSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEntered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectEntered
// Il2CppName: set_onSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectEntered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEnter
// Il2CppName: get_onSelectEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectEnter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onSelectEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExited
// Il2CppName: get_onSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectExited
// Il2CppName: set_onSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectExited)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExit
// Il2CppName: get_onSelectExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectExit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onSelectExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectCanceled
// Il2CppName: get_onSelectCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectCanceled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onSelectCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectCanceled
// Il2CppName: set_onSelectCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onSelectCanceled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onSelectCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectCancel
// Il2CppName: get_onSelectCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onSelectCancel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onSelectCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onActivate
// Il2CppName: get_onActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onActivate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onActivate
// Il2CppName: set_onActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onActivate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onDeactivate
// Il2CppName: get_onDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_onDeactivate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_onDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onDeactivate
// Il2CppName: set_onDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractableEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_onDeactivate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractableEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_onDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_customReticle
// Il2CppName: get_customReticle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::get_customReticle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "get_customReticle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_customReticle
// Il2CppName: set_customReticle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::GameObject*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::set_customReticle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "set_customReticle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::FindInteractionManagerEditTime
// Il2CppName: FindInteractionManagerEditTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::FindInteractionManagerEditTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "FindInteractionManagerEditTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::FindCreateInteractionManager
// Il2CppName: FindCreateInteractionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::FindCreateInteractionManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "FindCreateInteractionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RegisterWithInteractionManager
// Il2CppName: RegisterWithInteractionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RegisterWithInteractionManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "RegisterWithInteractionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistanceSqrToInteractor
// Il2CppName: GetDistanceSqrToInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::GetDistanceSqrToInteractor)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "GetDistanceSqrToInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsOnValidLayerMask
// Il2CppName: IsOnValidLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsOnValidLayerMask)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "IsOnValidLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHoverableBy
// Il2CppName: IsHoverableBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsHoverableBy)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "IsHoverableBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelectableBy
// Il2CppName: IsSelectableBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::IsSelectableBy)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "IsSelectableBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntering
// Il2CppName: OnHoverEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntering)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnHoverEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntered
// Il2CppName: OnHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverEntered)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExiting
// Il2CppName: OnHoverExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExiting)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnHoverExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExited
// Il2CppName: OnHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnHoverExited)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntering
// Il2CppName: OnSelectEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntering)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnSelectEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntered
// Il2CppName: OnSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectEntered)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExiting
// Il2CppName: OnSelectExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExiting)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnSelectExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExited
// Il2CppName: OnSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectExited)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectCanceling
// Il2CppName: OnSelectCanceling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectCanceling)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnSelectCanceling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectCanceled
// Il2CppName: OnSelectCanceled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnSelectCanceled)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnSelectCanceled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnActivate
// Il2CppName: OnActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnActivate)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::AttachCustomReticle
// Il2CppName: AttachCustomReticle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::AttachCustomReticle)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "AttachCustomReticle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RemoveCustomReticle
// Il2CppName: RemoveCustomReticle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::RemoveCustomReticle)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "RemoveCustomReticle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDeactivate
// Il2CppName: OnDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::OnDeactivate)> {
  static const MethodInfo* get() {
    static auto* interactor = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "OnDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactor});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractable
// Il2CppName: ProcessInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::ProcessInteractable)> {
  static const MethodInfo* get() {
    static auto* updatePhase = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*), "ProcessInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updatePhase});
  }
};
