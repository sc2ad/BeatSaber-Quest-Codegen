// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType
#include "UnityEngine/XR/Interaction/Toolkit/XRBaseInteractable_MovementType.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder
#include "UnityEngine/XR/Interaction/Toolkit/XRInteractionUpdateOrder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::XR::Interaction::Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: XRInteractionManager
  class XRInteractionManager;
  // Skipping declaration: XRBaseInteractable because it is already included!
  // Forward declaring type: XRInteractorEvent
  class XRInteractorEvent;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Forward declaring type: XRBaseInteractor
  class XRBaseInteractor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*, "UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractor");
// Type namespace: UnityEngine.XR.Interaction.Toolkit
namespace UnityEngine::XR::Interaction::Toolkit {
  // Size: 0x80
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
  // [TokenAttribute] Offset: FFFFFFFF
  // [SelectionBaseAttribute] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  // [DefaultExecutionOrder] Offset: 97EF28
  class XRBaseInteractor : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // [TooltipAttribute] Offset: 0x9812B8
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* m_InteractionManager;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*) == 0x8);
    // [TooltipAttribute] Offset: 0x981304
    // private UnityEngine.LayerMask m_InteractionLayerMask
    // Size: 0x4
    // Offset: 0x20
    ::UnityEngine::LayerMask m_InteractionLayerMask;
    // Field size check
    static_assert(sizeof(::UnityEngine::LayerMask) == 0x4);
    // Padding between fields: m_InteractionLayerMask and: m_AttachTransform
    char __padding1[0x4] = {};
    // [TooltipAttribute] Offset: 0x981350
    // private UnityEngine.Transform m_AttachTransform
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Transform* m_AttachTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // [TooltipAttribute] Offset: 0x98139C
    // private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable m_StartingSelectedInteractable
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* m_StartingSelectedInteractable;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x9813E8
    // [TooltipAttribute] Offset: 0x9813E8
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnHoverEntered
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* m_OnHoverEntered;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x981458
    // [TooltipAttribute] Offset: 0x981458
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnHoverExited
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* m_OnHoverExited;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x9814C8
    // [TooltipAttribute] Offset: 0x9814C8
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnSelectEntered
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* m_OnSelectEntered;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x981538
    // [TooltipAttribute] Offset: 0x981538
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnSelectExited
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* m_OnSelectExited;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*) == 0x8);
    // private System.Boolean m_AllowHover
    // Size: 0x1
    // Offset: 0x58
    bool m_AllowHover;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_AllowSelect
    // Size: 0x1
    // Offset: 0x59
    bool m_AllowSelect;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_EnableInteractions
    // Size: 0x1
    // Offset: 0x5A
    bool m_EnableInteractions;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_IsPerformingManualInteraction
    // Size: 0x1
    // Offset: 0x5B
    bool m_IsPerformingManualInteraction;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_IsPerformingManualInteraction and: selectTarget
    char __padding11[0x4] = {};
    // private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable <selectTarget>k__BackingField
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* selectTarget;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*) == 0x8);
    // private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> <hoverTargets>k__BackingField
    // Size: 0x8
    // Offset: 0x68
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* hoverTargets;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*) == 0x8);
    // private System.Boolean m_RequiresRegistration
    // Size: 0x1
    // Offset: 0x70
    bool m_RequiresRegistration;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_RequiresRegistration and: m_RegisteredInteractionManager
    char __padding14[0x7] = {};
    // private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* m_RegisteredInteractionManager;
    // Field size check
    static_assert(sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
    static ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* _get_s_InteractionManagerCache();
    // Set static field: static private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager s_InteractionManagerCache
    static void _set_s_InteractionManagerCache(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value);
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_InteractionManager
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& dyn_m_InteractionManager();
    // Get instance field reference: private UnityEngine.LayerMask m_InteractionLayerMask
    [[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& dyn_m_InteractionLayerMask();
    // Get instance field reference: private UnityEngine.Transform m_AttachTransform
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_m_AttachTransform();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable m_StartingSelectedInteractable
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& dyn_m_StartingSelectedInteractable();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnHoverEntered
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& dyn_m_OnHoverEntered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnHoverExited
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& dyn_m_OnHoverExited();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnSelectEntered
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& dyn_m_OnSelectEntered();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent m_OnSelectExited
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*& dyn_m_OnSelectExited();
    // Get instance field reference: private System.Boolean m_AllowHover
    [[deprecated("Use field access instead!")]] bool& dyn_m_AllowHover();
    // Get instance field reference: private System.Boolean m_AllowSelect
    [[deprecated("Use field access instead!")]] bool& dyn_m_AllowSelect();
    // Get instance field reference: private System.Boolean m_EnableInteractions
    [[deprecated("Use field access instead!")]] bool& dyn_m_EnableInteractions();
    // Get instance field reference: private System.Boolean m_IsPerformingManualInteraction
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsPerformingManualInteraction();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable <selectTarget>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*& dyn_$selectTarget$k__BackingField();
    // Get instance field reference: private readonly System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> <hoverTargets>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*& dyn_$hoverTargets$k__BackingField();
    // Get instance field reference: private System.Boolean m_RequiresRegistration
    [[deprecated("Use field access instead!")]] bool& dyn_m_RequiresRegistration();
    // Get instance field reference: private UnityEngine.XR.Interaction.Toolkit.XRInteractionManager m_RegisteredInteractionManager
    [[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*& dyn_m_RegisteredInteractionManager();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractionManager get_interactionManager()
    // Offset: 0xD7B0E8
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* get_interactionManager();
    // public System.Void set_interactionManager(UnityEngine.XR.Interaction.Toolkit.XRInteractionManager value)
    // Offset: 0xD7B0F0
    void set_interactionManager(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* value);
    // public UnityEngine.LayerMask get_interactionLayerMask()
    // Offset: 0xD7B254
    ::UnityEngine::LayerMask get_interactionLayerMask();
    // public System.Void set_interactionLayerMask(UnityEngine.LayerMask value)
    // Offset: 0xD7B25C
    void set_interactionLayerMask(::UnityEngine::LayerMask value);
    // public UnityEngine.Transform get_attachTransform()
    // Offset: 0xD7B264
    ::UnityEngine::Transform* get_attachTransform();
    // public System.Void set_attachTransform(UnityEngine.Transform value)
    // Offset: 0xD7B26C
    void set_attachTransform(::UnityEngine::Transform* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable get_startingSelectedInteractable()
    // Offset: 0xD7B274
    ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* get_startingSelectedInteractable();
    // public System.Void set_startingSelectedInteractable(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable value)
    // Offset: 0xD7B27C
    void set_startingSelectedInteractable(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onHoverEntered()
    // Offset: 0xD7B284
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* get_onHoverEntered();
    // public System.Void set_onHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent value)
    // Offset: 0xD7B28C
    void set_onHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onHoverEnter()
    // Offset: 0xD7B294
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* get_onHoverEnter();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onHoverExited()
    // Offset: 0xD7B29C
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* get_onHoverExited();
    // public System.Void set_onHoverExited(UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent value)
    // Offset: 0xD7B2A4
    void set_onHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onHoverExit()
    // Offset: 0xD7B2AC
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* get_onHoverExit();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onSelectEntered()
    // Offset: 0xD7B2B4
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* get_onSelectEntered();
    // public System.Void set_onSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent value)
    // Offset: 0xD7B2BC
    void set_onSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onSelectEnter()
    // Offset: 0xD7B2C4
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* get_onSelectEnter();
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onSelectExited()
    // Offset: 0xD7B2CC
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* get_onSelectExited();
    // public System.Void set_onSelectExited(UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent value)
    // Offset: 0xD7B2D4
    void set_onSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* value);
    // public UnityEngine.XR.Interaction.Toolkit.XRInteractorEvent get_onSelectExit()
    // Offset: 0xD7B2DC
    ::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* get_onSelectExit();
    // public System.Boolean get_allowHover()
    // Offset: 0xD7B2E4
    bool get_allowHover();
    // public System.Void set_allowHover(System.Boolean value)
    // Offset: 0xD7B2EC
    void set_allowHover(bool value);
    // public System.Boolean get_allowSelect()
    // Offset: 0xD7B2F8
    bool get_allowSelect();
    // public System.Void set_allowSelect(System.Boolean value)
    // Offset: 0xD7B300
    void set_allowSelect(bool value);
    // public System.Boolean get_enableInteractions()
    // Offset: 0xD7B30C
    bool get_enableInteractions();
    // public System.Void set_enableInteractions(System.Boolean value)
    // Offset: 0xD7B314
    void set_enableInteractions(bool value);
    // public System.Boolean get_isPerformingManualInteraction()
    // Offset: 0xD7B338
    bool get_isPerformingManualInteraction();
    // public UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable get_selectTarget()
    // Offset: 0xD7B340
    ::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* get_selectTarget();
    // protected System.Void set_selectTarget(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable value)
    // Offset: 0xD7B348
    void set_selectTarget(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* value);
    // protected System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> get_hoverTargets()
    // Offset: 0xD7B350
    ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* get_hoverTargets();
    // public System.Boolean get_isHoverActive()
    // Offset: 0xD7B9CC
    bool get_isHoverActive();
    // public System.Boolean get_isSelectActive()
    // Offset: 0xD7B9D4
    bool get_isSelectActive();
    // public System.Boolean get_requireSelectExclusive()
    // Offset: 0xD7BA04
    bool get_requireSelectExclusive();
    // public System.Nullable`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable/UnityEngine.XR.Interaction.Toolkit.MovementType> get_selectedInteractableMovementTypeOverride()
    // Offset: 0xD7BA0C
    ::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType> get_selectedInteractableMovementTypeOverride();
    // protected System.Void .ctor()
    // Offset: 0xD79CD8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRBaseInteractor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRBaseInteractor*, creationType>()));
    }
    // protected System.Void Reset()
    // Offset: 0xD7B358
    void Reset();
    // protected System.Void Awake()
    // Offset: 0xD78EC8
    void Awake();
    // protected System.Void OnEnable()
    // Offset: 0xD7B584
    void OnEnable();
    // protected System.Void OnDisable()
    // Offset: 0xD7B634
    void OnDisable();
    // protected System.Void Start()
    // Offset: 0xD7B6D4
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0xD7B7C4
    void OnDestroy();
    // public System.Void GetHoverTargets(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> targets)
    // Offset: 0xD7B864
    void GetHoverTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* targets);
    // private System.Void FindInteractionManagerEditTime()
    // Offset: 0xD7B980
    void FindInteractionManagerEditTime();
    // private System.Void FindCreateInteractionManager()
    // Offset: 0xD7B35C
    void FindCreateInteractionManager();
    // private System.Void RegisterWithInteractionManager()
    // Offset: 0xD7B0F8
    void RegisterWithInteractionManager();
    // private System.Boolean IsOnValidLayerMask(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xD7B984
    bool IsOnValidLayerMask(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // private System.Void EnableInteractions(System.Boolean enable)
    // Offset: 0xD7B328
    void EnableInteractions(bool enable);
    // public System.Void GetValidTargets(System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable> validTargets)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void GetValidTargets(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* validTargets);
    // public System.Boolean CanHover(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xD7B9DC
    bool CanHover(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public System.Boolean CanSelect(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xD7B9F0
    bool CanSelect(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected internal System.Void OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xD79AC4
    void OnHoverEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected internal System.Void OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xD7BA14
    void OnHoverEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected internal System.Void OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xD79C6C
    void OnHoverExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected internal System.Void OnHoverExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xD7BA88
    void OnHoverExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected internal System.Void OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xD796BC
    void OnSelectEntering(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected internal System.Void OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xD7BAFC
    void OnSelectEntered(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected internal System.Void OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xD798FC
    void OnSelectExiting(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // protected internal System.Void OnSelectExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xD7BB70
    void OnSelectExited(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public System.Void ProcessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder/UnityEngine.XR.Interaction.Toolkit.UpdatePhase updatePhase)
    // Offset: 0xD7BBE4
    void ProcessInteractor(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase updatePhase);
    // public System.Void StartManualInteraction(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable interactable)
    // Offset: 0xD7BBE8
    void StartManualInteraction(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* interactable);
    // public System.Void EndManualInteraction()
    // Offset: 0xD7BC38
    void EndManualInteraction();
  }; // UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor
  #pragma pack(pop)
  static check_size<sizeof(XRBaseInteractor), 120 + sizeof(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*)> __UnityEngine_XR_Interaction_Toolkit_XRBaseInteractorSizeCheck;
  static_assert(sizeof(XRBaseInteractor) == 0x80);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionManager
// Il2CppName: get_interactionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_interactionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionManager
// Il2CppName: set_interactionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionManager*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionManager)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionManager")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_interactionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionLayerMask
// Il2CppName: get_interactionLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::LayerMask (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_interactionLayerMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_interactionLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionLayerMask
// Il2CppName: set_interactionLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::LayerMask)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_interactionLayerMask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "LayerMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_interactionLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachTransform
// Il2CppName: get_attachTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_attachTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_attachTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_attachTransform
// Il2CppName: set_attachTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::Transform*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_attachTransform)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_attachTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingSelectedInteractable
// Il2CppName: get_startingSelectedInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_startingSelectedInteractable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_startingSelectedInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingSelectedInteractable
// Il2CppName: set_startingSelectedInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_startingSelectedInteractable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_startingSelectedInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEntered
// Il2CppName: get_onHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEntered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_onHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverEntered
// Il2CppName: set_onHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverEntered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractorEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_onHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEnter
// Il2CppName: get_onHoverEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverEnter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_onHoverEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExited
// Il2CppName: get_onHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_onHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverExited
// Il2CppName: set_onHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onHoverExited)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractorEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_onHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExit
// Il2CppName: get_onHoverExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onHoverExit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_onHoverExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEntered
// Il2CppName: get_onSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEntered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_onSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectEntered
// Il2CppName: set_onSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectEntered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractorEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_onSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEnter
// Il2CppName: get_onSelectEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectEnter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_onSelectEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExited
// Il2CppName: get_onSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_onSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectExited
// Il2CppName: set_onSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_onSelectExited)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractorEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_onSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExit
// Il2CppName: get_onSelectExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRInteractorEvent* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_onSelectExit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_onSelectExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowHover
// Il2CppName: get_allowHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowHover)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_allowHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowHover
// Il2CppName: set_allowHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowHover)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_allowHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowSelect
// Il2CppName: get_allowSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_allowSelect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_allowSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowSelect
// Il2CppName: set_allowSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_allowSelect)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_allowSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_enableInteractions
// Il2CppName: get_enableInteractions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_enableInteractions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_enableInteractions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_enableInteractions
// Il2CppName: set_enableInteractions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_enableInteractions)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_enableInteractions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isPerformingManualInteraction
// Il2CppName: get_isPerformingManualInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isPerformingManualInteraction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_isPerformingManualInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectTarget
// Il2CppName: get_selectTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectTarget)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_selectTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_selectTarget
// Il2CppName: set_selectTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::set_selectTarget)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "set_selectTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverTargets
// Il2CppName: get_hoverTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>* (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_hoverTargets)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_hoverTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isHoverActive
// Il2CppName: get_isHoverActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isHoverActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_isHoverActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isSelectActive
// Il2CppName: get_isSelectActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_isSelectActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_isSelectActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_requireSelectExclusive
// Il2CppName: get_requireSelectExclusive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_requireSelectExclusive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_requireSelectExclusive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectedInteractableMovementTypeOverride
// Il2CppName: get_selectedInteractableMovementTypeOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable::MovementType> (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::get_selectedInteractableMovementTypeOverride)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "get_selectedInteractableMovementTypeOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetHoverTargets
// Il2CppName: GetHoverTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetHoverTargets)> {
  static const MethodInfo* get() {
    static auto* targets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "GetHoverTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::FindInteractionManagerEditTime
// Il2CppName: FindInteractionManagerEditTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::FindInteractionManagerEditTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "FindInteractionManagerEditTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::FindCreateInteractionManager
// Il2CppName: FindCreateInteractionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::FindCreateInteractionManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "FindCreateInteractionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::RegisterWithInteractionManager
// Il2CppName: RegisterWithInteractionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::RegisterWithInteractionManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "RegisterWithInteractionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsOnValidLayerMask
// Il2CppName: IsOnValidLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::IsOnValidLayerMask)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "IsOnValidLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::EnableInteractions
// Il2CppName: EnableInteractions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(bool)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::EnableInteractions)> {
  static const MethodInfo* get() {
    static auto* enable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "EnableInteractions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{enable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetValidTargets
// Il2CppName: GetValidTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*>*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::GetValidTargets)> {
  static const MethodInfo* get() {
    static auto* validTargets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "GetValidTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{validTargets});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanHover
// Il2CppName: CanHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanHover)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "CanHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanSelect
// Il2CppName: CanSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::CanSelect)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "CanSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntering
// Il2CppName: OnHoverEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntering)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnHoverEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntered
// Il2CppName: OnHoverEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverEntered)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnHoverEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExiting
// Il2CppName: OnHoverExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExiting)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnHoverExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExited
// Il2CppName: OnHoverExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnHoverExited)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnHoverExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntering
// Il2CppName: OnSelectEntering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntering)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnSelectEntering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntered
// Il2CppName: OnSelectEntered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectEntered)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnSelectEntered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExiting
// Il2CppName: OnSelectExiting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExiting)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnSelectExiting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExited
// Il2CppName: OnSelectExited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::OnSelectExited)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "OnSelectExited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessInteractor
// Il2CppName: ProcessInteractor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRInteractionUpdateOrder::UpdatePhase)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::ProcessInteractor)> {
  static const MethodInfo* get() {
    static auto* updatePhase = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRInteractionUpdateOrder/UpdatePhase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "ProcessInteractor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{updatePhase});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::StartManualInteraction
// Il2CppName: StartManualInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)(::UnityEngine::XR::Interaction::Toolkit::XRBaseInteractable*)>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::StartManualInteraction)> {
  static const MethodInfo* get() {
    static auto* interactable = &::il2cpp_utils::GetClassFromName("UnityEngine.XR.Interaction.Toolkit", "XRBaseInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "StartManualInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactable});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::EndManualInteraction
// Il2CppName: EndManualInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::*)()>(&UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor::EndManualInteraction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::Interaction::Toolkit::XRBaseInteractor*), "EndManualInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
