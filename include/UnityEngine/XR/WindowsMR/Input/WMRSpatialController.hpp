// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.XR.XRControllerWithRumble
#include "UnityEngine/InputSystem/XR/XRControllerWithRumble.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Controls
namespace UnityEngine::InputSystem::Controls {
  // Forward declaring type: Vector2Control
  class Vector2Control;
  // Forward declaring type: AxisControl
  class AxisControl;
  // Forward declaring type: ButtonControl
  class ButtonControl;
  // Forward declaring type: Vector3Control
  class Vector3Control;
  // Forward declaring type: QuaternionControl
  class QuaternionControl;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.WindowsMR.Input
namespace UnityEngine::XR::WindowsMR::Input {
  // Forward declaring type: WMRSpatialController
  class WMRSpatialController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::WindowsMR::Input::WMRSpatialController);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::WindowsMR::Input::WMRSpatialController*, "UnityEngine.XR.WindowsMR.Input", "WMRSpatialController");
// Type namespace: UnityEngine.XR.WindowsMR.Input
namespace UnityEngine::XR::WindowsMR::Input {
  // Size: 0x1F8
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.WindowsMR.Input.WMRSpatialController
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: FFFFFFFF
  // [InputControlLayoutAttribute] Offset: 957454
  class WMRSpatialController : public ::UnityEngine::InputSystem::XR::XRControllerWithRumble {
    public:
    public:
    // private UnityEngine.InputSystem.Controls.Vector2Control <joystick>k__BackingField
    // Size: 0x8
    // Offset: 0x170
    ::UnityEngine::InputSystem::Controls::Vector2Control* joystick;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::Vector2Control*) == 0x8);
    // private UnityEngine.InputSystem.Controls.Vector2Control <touchpad>k__BackingField
    // Size: 0x8
    // Offset: 0x178
    ::UnityEngine::InputSystem::Controls::Vector2Control* touchpad;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::Vector2Control*) == 0x8);
    // private UnityEngine.InputSystem.Controls.AxisControl <grip>k__BackingField
    // Size: 0x8
    // Offset: 0x180
    ::UnityEngine::InputSystem::Controls::AxisControl* grip;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::AxisControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <gripPressed>k__BackingField
    // Size: 0x8
    // Offset: 0x188
    ::UnityEngine::InputSystem::Controls::ButtonControl* gripPressed;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <menu>k__BackingField
    // Size: 0x8
    // Offset: 0x190
    ::UnityEngine::InputSystem::Controls::ButtonControl* menu;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.AxisControl <trigger>k__BackingField
    // Size: 0x8
    // Offset: 0x198
    ::UnityEngine::InputSystem::Controls::AxisControl* trigger;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::AxisControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <triggerPressed>k__BackingField
    // Size: 0x8
    // Offset: 0x1A0
    ::UnityEngine::InputSystem::Controls::ButtonControl* triggerPressed;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <joystickClicked>k__BackingField
    // Size: 0x8
    // Offset: 0x1A8
    ::UnityEngine::InputSystem::Controls::ButtonControl* joystickClicked;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <touchpadClicked>k__BackingField
    // Size: 0x8
    // Offset: 0x1B0
    ::UnityEngine::InputSystem::Controls::ButtonControl* touchpadClicked;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <touchpadTouched>k__BackingField
    // Size: 0x8
    // Offset: 0x1B8
    ::UnityEngine::InputSystem::Controls::ButtonControl* touchpadTouched;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.Vector3Control <deviceVelocity>k__BackingField
    // Size: 0x8
    // Offset: 0x1C0
    ::UnityEngine::InputSystem::Controls::Vector3Control* deviceVelocity;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::Vector3Control*) == 0x8);
    // private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularVelocity>k__BackingField
    // Size: 0x8
    // Offset: 0x1C8
    ::UnityEngine::InputSystem::Controls::Vector3Control* deviceAngularVelocity;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::Vector3Control*) == 0x8);
    // private UnityEngine.InputSystem.Controls.AxisControl <batteryLevel>k__BackingField
    // Size: 0x8
    // Offset: 0x1D0
    ::UnityEngine::InputSystem::Controls::AxisControl* batteryLevel;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::AxisControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.AxisControl <sourceLossRisk>k__BackingField
    // Size: 0x8
    // Offset: 0x1D8
    ::UnityEngine::InputSystem::Controls::AxisControl* sourceLossRisk;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::AxisControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.Vector3Control <sourceLossMitigationDirection>k__BackingField
    // Size: 0x8
    // Offset: 0x1E0
    ::UnityEngine::InputSystem::Controls::Vector3Control* sourceLossMitigationDirection;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::Vector3Control*) == 0x8);
    // private UnityEngine.InputSystem.Controls.Vector3Control <pointerPosition>k__BackingField
    // Size: 0x8
    // Offset: 0x1E8
    ::UnityEngine::InputSystem::Controls::Vector3Control* pointerPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::Vector3Control*) == 0x8);
    // private UnityEngine.InputSystem.Controls.QuaternionControl <pointerRotation>k__BackingField
    // Size: 0x8
    // Offset: 0x1F0
    ::UnityEngine::InputSystem::Controls::QuaternionControl* pointerRotation;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::QuaternionControl*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.InputSystem.Controls.Vector2Control <joystick>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector2Control*& dyn_$joystick$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.Vector2Control <touchpad>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector2Control*& dyn_$touchpad$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.AxisControl <grip>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& dyn_$grip$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <gripPressed>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$gripPressed$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <menu>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$menu$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.AxisControl <trigger>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& dyn_$trigger$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <triggerPressed>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$triggerPressed$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <joystickClicked>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$joystickClicked$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <touchpadClicked>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$touchpadClicked$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <touchpadTouched>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$touchpadTouched$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.Vector3Control <deviceVelocity>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& dyn_$deviceVelocity$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularVelocity>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& dyn_$deviceAngularVelocity$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.AxisControl <batteryLevel>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& dyn_$batteryLevel$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.AxisControl <sourceLossRisk>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& dyn_$sourceLossRisk$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.Vector3Control <sourceLossMitigationDirection>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& dyn_$sourceLossMitigationDirection$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.Vector3Control <pointerPosition>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& dyn_$pointerPosition$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.QuaternionControl <pointerRotation>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::QuaternionControl*& dyn_$pointerRotation$k__BackingField();
    // public UnityEngine.InputSystem.Controls.Vector2Control get_joystick()
    // Offset: 0x1B5B968
    ::UnityEngine::InputSystem::Controls::Vector2Control* get_joystick();
    // private System.Void set_joystick(UnityEngine.InputSystem.Controls.Vector2Control value)
    // Offset: 0x1B5B970
    void set_joystick(::UnityEngine::InputSystem::Controls::Vector2Control* value);
    // public UnityEngine.InputSystem.Controls.Vector2Control get_touchpad()
    // Offset: 0x1B5B978
    ::UnityEngine::InputSystem::Controls::Vector2Control* get_touchpad();
    // private System.Void set_touchpad(UnityEngine.InputSystem.Controls.Vector2Control value)
    // Offset: 0x1B5B980
    void set_touchpad(::UnityEngine::InputSystem::Controls::Vector2Control* value);
    // public UnityEngine.InputSystem.Controls.AxisControl get_grip()
    // Offset: 0x1B5B988
    ::UnityEngine::InputSystem::Controls::AxisControl* get_grip();
    // private System.Void set_grip(UnityEngine.InputSystem.Controls.AxisControl value)
    // Offset: 0x1B5B990
    void set_grip(::UnityEngine::InputSystem::Controls::AxisControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_gripPressed()
    // Offset: 0x1B5B998
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_gripPressed();
    // private System.Void set_gripPressed(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0x1B5B9A0
    void set_gripPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_menu()
    // Offset: 0x1B5B9A8
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_menu();
    // private System.Void set_menu(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0x1B5B9B0
    void set_menu(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.AxisControl get_trigger()
    // Offset: 0x1B5B9B8
    ::UnityEngine::InputSystem::Controls::AxisControl* get_trigger();
    // private System.Void set_trigger(UnityEngine.InputSystem.Controls.AxisControl value)
    // Offset: 0x1B5B9C0
    void set_trigger(::UnityEngine::InputSystem::Controls::AxisControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_triggerPressed()
    // Offset: 0x1B5B9C8
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_triggerPressed();
    // private System.Void set_triggerPressed(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0x1B5B9D0
    void set_triggerPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_joystickClicked()
    // Offset: 0x1B5B9D8
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_joystickClicked();
    // private System.Void set_joystickClicked(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0x1B5B9E0
    void set_joystickClicked(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_touchpadClicked()
    // Offset: 0x1B5B9E8
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_touchpadClicked();
    // private System.Void set_touchpadClicked(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0x1B5B9F0
    void set_touchpadClicked(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_touchpadTouched()
    // Offset: 0x1B5B9F8
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_touchpadTouched();
    // private System.Void set_touchpadTouched(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0x1B5BA00
    void set_touchpadTouched(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.Vector3Control get_deviceVelocity()
    // Offset: 0x1B5BA08
    ::UnityEngine::InputSystem::Controls::Vector3Control* get_deviceVelocity();
    // private System.Void set_deviceVelocity(UnityEngine.InputSystem.Controls.Vector3Control value)
    // Offset: 0x1B5BA10
    void set_deviceVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value);
    // public UnityEngine.InputSystem.Controls.Vector3Control get_deviceAngularVelocity()
    // Offset: 0x1B5BA18
    ::UnityEngine::InputSystem::Controls::Vector3Control* get_deviceAngularVelocity();
    // private System.Void set_deviceAngularVelocity(UnityEngine.InputSystem.Controls.Vector3Control value)
    // Offset: 0x1B5BA20
    void set_deviceAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value);
    // public UnityEngine.InputSystem.Controls.AxisControl get_batteryLevel()
    // Offset: 0x1B5BA28
    ::UnityEngine::InputSystem::Controls::AxisControl* get_batteryLevel();
    // private System.Void set_batteryLevel(UnityEngine.InputSystem.Controls.AxisControl value)
    // Offset: 0x1B5BA30
    void set_batteryLevel(::UnityEngine::InputSystem::Controls::AxisControl* value);
    // public UnityEngine.InputSystem.Controls.AxisControl get_sourceLossRisk()
    // Offset: 0x1B5BA38
    ::UnityEngine::InputSystem::Controls::AxisControl* get_sourceLossRisk();
    // private System.Void set_sourceLossRisk(UnityEngine.InputSystem.Controls.AxisControl value)
    // Offset: 0x1B5BA40
    void set_sourceLossRisk(::UnityEngine::InputSystem::Controls::AxisControl* value);
    // public UnityEngine.InputSystem.Controls.Vector3Control get_sourceLossMitigationDirection()
    // Offset: 0x1B5BA48
    ::UnityEngine::InputSystem::Controls::Vector3Control* get_sourceLossMitigationDirection();
    // private System.Void set_sourceLossMitigationDirection(UnityEngine.InputSystem.Controls.Vector3Control value)
    // Offset: 0x1B5BA50
    void set_sourceLossMitigationDirection(::UnityEngine::InputSystem::Controls::Vector3Control* value);
    // public UnityEngine.InputSystem.Controls.Vector3Control get_pointerPosition()
    // Offset: 0x1B5BA58
    ::UnityEngine::InputSystem::Controls::Vector3Control* get_pointerPosition();
    // private System.Void set_pointerPosition(UnityEngine.InputSystem.Controls.Vector3Control value)
    // Offset: 0x1B5BA60
    void set_pointerPosition(::UnityEngine::InputSystem::Controls::Vector3Control* value);
    // public UnityEngine.InputSystem.Controls.QuaternionControl get_pointerRotation()
    // Offset: 0x1B5BA68
    ::UnityEngine::InputSystem::Controls::QuaternionControl* get_pointerRotation();
    // private System.Void set_pointerRotation(UnityEngine.InputSystem.Controls.QuaternionControl value)
    // Offset: 0x1B5BA70
    void set_pointerRotation(::UnityEngine::InputSystem::Controls::QuaternionControl* value);
    // public System.Void .ctor()
    // Offset: 0x1B5BCCC
    // Implemented from: UnityEngine.InputSystem.XR.XRControllerWithRumble
    // Base method: System.Void XRControllerWithRumble::.ctor()
    // Base method: System.Void XRController::.ctor()
    // Base method: System.Void TrackedDevice::.ctor()
    // Base method: System.Void InputDevice::.ctor()
    // Base method: System.Void InputControl::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WMRSpatialController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WMRSpatialController*, creationType>()));
    }
    // protected override System.Void FinishSetup()
    // Offset: 0x1B5BA78
    // Implemented from: UnityEngine.InputSystem.XR.XRController
    // Base method: System.Void XRController::FinishSetup()
    void FinishSetup();
  }; // UnityEngine.XR.WindowsMR.Input.WMRSpatialController
  #pragma pack(pop)
  static check_size<sizeof(WMRSpatialController), 496 + sizeof(::UnityEngine::InputSystem::Controls::QuaternionControl*)> __UnityEngine_XR_WindowsMR_Input_WMRSpatialControllerSizeCheck;
  static_assert(sizeof(WMRSpatialController) == 0x1F8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_joystick
// Il2CppName: get_joystick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::Vector2Control* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_joystick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_joystick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_joystick
// Il2CppName: set_joystick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::Vector2Control*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_joystick)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "Vector2Control")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_joystick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_touchpad
// Il2CppName: get_touchpad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::Vector2Control* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_touchpad)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_touchpad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_touchpad
// Il2CppName: set_touchpad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::Vector2Control*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_touchpad)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "Vector2Control")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_touchpad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_grip
// Il2CppName: get_grip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::AxisControl* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_grip)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_grip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_grip
// Il2CppName: set_grip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::AxisControl*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_grip)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "AxisControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_grip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_gripPressed
// Il2CppName: get_gripPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_gripPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_gripPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_gripPressed
// Il2CppName: set_gripPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_gripPressed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_gripPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_menu
// Il2CppName: get_menu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_menu)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_menu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_menu
// Il2CppName: set_menu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_menu)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_menu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_trigger
// Il2CppName: get_trigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::AxisControl* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_trigger)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_trigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_trigger
// Il2CppName: set_trigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::AxisControl*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_trigger)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "AxisControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_trigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_triggerPressed
// Il2CppName: get_triggerPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_triggerPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_triggerPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_triggerPressed
// Il2CppName: set_triggerPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_triggerPressed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_triggerPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_joystickClicked
// Il2CppName: get_joystickClicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_joystickClicked)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_joystickClicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_joystickClicked
// Il2CppName: set_joystickClicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_joystickClicked)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_joystickClicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_touchpadClicked
// Il2CppName: get_touchpadClicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_touchpadClicked)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_touchpadClicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_touchpadClicked
// Il2CppName: set_touchpadClicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_touchpadClicked)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_touchpadClicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_touchpadTouched
// Il2CppName: get_touchpadTouched
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_touchpadTouched)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_touchpadTouched", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_touchpadTouched
// Il2CppName: set_touchpadTouched
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_touchpadTouched)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_touchpadTouched", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_deviceVelocity
// Il2CppName: get_deviceVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::Vector3Control* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_deviceVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_deviceVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_deviceVelocity
// Il2CppName: set_deviceVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::Vector3Control*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_deviceVelocity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "Vector3Control")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_deviceVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_deviceAngularVelocity
// Il2CppName: get_deviceAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::Vector3Control* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_deviceAngularVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_deviceAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_deviceAngularVelocity
// Il2CppName: set_deviceAngularVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::Vector3Control*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_deviceAngularVelocity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "Vector3Control")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_deviceAngularVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_batteryLevel
// Il2CppName: get_batteryLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::AxisControl* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_batteryLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_batteryLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_batteryLevel
// Il2CppName: set_batteryLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::AxisControl*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_batteryLevel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "AxisControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_batteryLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_sourceLossRisk
// Il2CppName: get_sourceLossRisk
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::AxisControl* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_sourceLossRisk)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_sourceLossRisk", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_sourceLossRisk
// Il2CppName: set_sourceLossRisk
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::AxisControl*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_sourceLossRisk)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "AxisControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_sourceLossRisk", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_sourceLossMitigationDirection
// Il2CppName: get_sourceLossMitigationDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::Vector3Control* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_sourceLossMitigationDirection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_sourceLossMitigationDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_sourceLossMitigationDirection
// Il2CppName: set_sourceLossMitigationDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::Vector3Control*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_sourceLossMitigationDirection)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "Vector3Control")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_sourceLossMitigationDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_pointerPosition
// Il2CppName: get_pointerPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::Vector3Control* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_pointerPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_pointerPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_pointerPosition
// Il2CppName: set_pointerPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::Vector3Control*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_pointerPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "Vector3Control")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_pointerPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_pointerRotation
// Il2CppName: get_pointerRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::QuaternionControl* (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_pointerRotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "get_pointerRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_pointerRotation
// Il2CppName: set_pointerRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)(::UnityEngine::InputSystem::Controls::QuaternionControl*)>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_pointerRotation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "QuaternionControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "set_pointerRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRSpatialController::FinishSetup
// Il2CppName: FinishSetup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRSpatialController::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRSpatialController::FinishSetup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRSpatialController*), "FinishSetup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
