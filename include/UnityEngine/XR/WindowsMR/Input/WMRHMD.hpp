// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.XR.XRHMD
#include "UnityEngine/InputSystem/XR/XRHMD.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Controls
namespace UnityEngine::InputSystem::Controls {
  // Forward declaring type: ButtonControl
  class ButtonControl;
}
// Completed forward declares
// Type namespace: UnityEngine.XR.WindowsMR.Input
namespace UnityEngine::XR::WindowsMR::Input {
  // Forward declaring type: WMRHMD
  class WMRHMD;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::WindowsMR::Input::WMRHMD);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::WindowsMR::Input::WMRHMD*, "UnityEngine.XR.WindowsMR.Input", "WMRHMD");
// Type namespace: UnityEngine.XR.WindowsMR.Input
namespace UnityEngine::XR::WindowsMR::Input {
  // Size: 0x1A8
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.WindowsMR.Input.WMRHMD
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: FFFFFFFF
  // [InputControlLayoutAttribute] Offset: 957354
  class WMRHMD : public ::UnityEngine::InputSystem::XR::XRHMD {
    public:
    public:
    // private UnityEngine.InputSystem.Controls.ButtonControl <userPresence>k__BackingField
    // Size: 0x8
    // Offset: 0x1A0
    ::UnityEngine::InputSystem::Controls::ButtonControl* userPresence;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    public:
    // Creating conversion operator: operator ::UnityEngine::InputSystem::Controls::ButtonControl*
    constexpr operator ::UnityEngine::InputSystem::Controls::ButtonControl*() const noexcept {
      return userPresence;
    }
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <userPresence>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$userPresence$k__BackingField();
    // public UnityEngine.InputSystem.Controls.ButtonControl get_userPresence()
    // Offset: 0x1B5B8E4
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_userPresence();
    // private System.Void set_userPresence(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0x1B5B8EC
    void set_userPresence(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public System.Void .ctor()
    // Offset: 0x1B5B960
    // Implemented from: UnityEngine.InputSystem.XR.XRHMD
    // Base method: System.Void XRHMD::.ctor()
    // Base method: System.Void TrackedDevice::.ctor()
    // Base method: System.Void InputDevice::.ctor()
    // Base method: System.Void InputControl::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WMRHMD* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRHMD::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WMRHMD*, creationType>()));
    }
    // protected override System.Void FinishSetup()
    // Offset: 0x1B5B8F4
    // Implemented from: UnityEngine.InputSystem.XR.XRHMD
    // Base method: System.Void XRHMD::FinishSetup()
    void FinishSetup();
  }; // UnityEngine.XR.WindowsMR.Input.WMRHMD
  #pragma pack(pop)
  static check_size<sizeof(WMRHMD), 416 + sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*)> __UnityEngine_XR_WindowsMR_Input_WMRHMDSizeCheck;
  static_assert(sizeof(WMRHMD) == 0x1A8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRHMD::get_userPresence
// Il2CppName: get_userPresence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (UnityEngine::XR::WindowsMR::Input::WMRHMD::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRHMD::get_userPresence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRHMD*), "get_userPresence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRHMD::set_userPresence
// Il2CppName: set_userPresence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRHMD::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&UnityEngine::XR::WindowsMR::Input::WMRHMD::set_userPresence)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRHMD*), "set_userPresence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRHMD::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::XR::WindowsMR::Input::WMRHMD::FinishSetup
// Il2CppName: FinishSetup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::XR::WindowsMR::Input::WMRHMD::*)()>(&UnityEngine::XR::WindowsMR::Input::WMRHMD::FinishSetup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::WindowsMR::Input::WMRHMD*), "FinishSetup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
