// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.XR.InputFeatureUsage`1
#include "UnityEngine/XR/InputFeatureUsage_1.hpp"
// Including type: UnityEngine.XR.InputTrackingState
#include "UnityEngine/XR/InputTrackingState.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.XR.Hand
#include "UnityEngine/XR/Hand.hpp"
// Including type: UnityEngine.XR.Eyes
#include "UnityEngine/XR/Eyes.hpp"
// Completed includes
// Type namespace: UnityEngine.XR
namespace UnityEngine::XR {
  // Forward declaring type: CommonUsages
  class CommonUsages;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::XR::CommonUsages);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::CommonUsages*, "UnityEngine.XR", "CommonUsages");
// Type namespace: UnityEngine.XR
namespace UnityEngine::XR {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.CommonUsages
  // [TokenAttribute] Offset: FFFFFFFF
  class CommonUsages : public ::Il2CppObject {
    public:
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> isTracked
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_isTracked();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> isTracked
    static void _set_isTracked(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primaryButton
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_primaryButton();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primaryButton
    static void _set_primaryButton(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primaryTouch
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_primaryTouch();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primaryTouch
    static void _set_primaryTouch(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondaryButton
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_secondaryButton();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondaryButton
    static void _set_secondaryButton(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondaryTouch
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_secondaryTouch();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondaryTouch
    static void _set_secondaryTouch(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> gripButton
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_gripButton();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> gripButton
    static void _set_gripButton(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> triggerButton
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_triggerButton();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> triggerButton
    static void _set_triggerButton(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> menuButton
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_menuButton();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> menuButton
    static void _set_menuButton(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primary2DAxisClick
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_primary2DAxisClick();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primary2DAxisClick
    static void _set_primary2DAxisClick(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primary2DAxisTouch
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_primary2DAxisTouch();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> primary2DAxisTouch
    static void _set_primary2DAxisTouch(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondary2DAxisClick
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_secondary2DAxisClick();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondary2DAxisClick
    static void _set_secondary2DAxisClick(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondary2DAxisTouch
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_secondary2DAxisTouch();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> secondary2DAxisTouch
    static void _set_secondary2DAxisTouch(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> userPresence
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_userPresence();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> userPresence
    static void _set_userPresence(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.InputTrackingState> trackingState
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::InputTrackingState> _get_trackingState();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.InputTrackingState> trackingState
    static void _set_trackingState(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::InputTrackingState> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> batteryLevel
    static ::UnityEngine::XR::InputFeatureUsage_1<float> _get_batteryLevel();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> batteryLevel
    static void _set_batteryLevel(::UnityEngine::XR::InputFeatureUsage_1<float> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> trigger
    static ::UnityEngine::XR::InputFeatureUsage_1<float> _get_trigger();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> trigger
    static void _set_trigger(::UnityEngine::XR::InputFeatureUsage_1<float> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> grip
    static ::UnityEngine::XR::InputFeatureUsage_1<float> _get_grip();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> grip
    static void _set_grip(::UnityEngine::XR::InputFeatureUsage_1<float> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> primary2DAxis
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> _get_primary2DAxis();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> primary2DAxis
    static void _set_primary2DAxis(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> secondary2DAxis
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> _get_secondary2DAxis();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> secondary2DAxis
    static void _set_secondary2DAxis(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> devicePosition
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_devicePosition();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> devicePosition
    static void _set_devicePosition(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyePosition
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_leftEyePosition();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyePosition
    static void _set_leftEyePosition(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyePosition
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_rightEyePosition();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyePosition
    static void _set_rightEyePosition(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyePosition
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_centerEyePosition();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyePosition
    static void _set_centerEyePosition(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraPosition
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_colorCameraPosition();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraPosition
    static void _set_colorCameraPosition(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceVelocity
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_deviceVelocity();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceVelocity
    static void _set_deviceVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAngularVelocity
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_deviceAngularVelocity();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAngularVelocity
    static void _set_deviceAngularVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeVelocity
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_leftEyeVelocity();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeVelocity
    static void _set_leftEyeVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAngularVelocity
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_leftEyeAngularVelocity();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAngularVelocity
    static void _set_leftEyeAngularVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeVelocity
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_rightEyeVelocity();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeVelocity
    static void _set_rightEyeVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAngularVelocity
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_rightEyeAngularVelocity();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAngularVelocity
    static void _set_rightEyeAngularVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeVelocity
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_centerEyeVelocity();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeVelocity
    static void _set_centerEyeVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAngularVelocity
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_centerEyeAngularVelocity();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAngularVelocity
    static void _set_centerEyeAngularVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraVelocity
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_colorCameraVelocity();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraVelocity
    static void _set_colorCameraVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAngularVelocity
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_colorCameraAngularVelocity();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAngularVelocity
    static void _set_colorCameraAngularVelocity(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAcceleration
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_deviceAcceleration();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAcceleration
    static void _set_deviceAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAngularAcceleration
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_deviceAngularAcceleration();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> deviceAngularAcceleration
    static void _set_deviceAngularAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAcceleration
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_leftEyeAcceleration();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAcceleration
    static void _set_leftEyeAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAngularAcceleration
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_leftEyeAngularAcceleration();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> leftEyeAngularAcceleration
    static void _set_leftEyeAngularAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAcceleration
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_rightEyeAcceleration();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAcceleration
    static void _set_rightEyeAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAngularAcceleration
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_rightEyeAngularAcceleration();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> rightEyeAngularAcceleration
    static void _set_rightEyeAngularAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAcceleration
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_centerEyeAcceleration();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAcceleration
    static void _set_centerEyeAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAngularAcceleration
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_centerEyeAngularAcceleration();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> centerEyeAngularAcceleration
    static void _set_centerEyeAngularAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAcceleration
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_colorCameraAcceleration();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAcceleration
    static void _set_colorCameraAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAngularAcceleration
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> _get_colorCameraAngularAcceleration();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector3> colorCameraAngularAcceleration
    static void _set_colorCameraAngularAcceleration(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector3> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> deviceRotation
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> _get_deviceRotation();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> deviceRotation
    static void _set_deviceRotation(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> leftEyeRotation
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> _get_leftEyeRotation();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> leftEyeRotation
    static void _set_leftEyeRotation(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> rightEyeRotation
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> _get_rightEyeRotation();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> rightEyeRotation
    static void _set_rightEyeRotation(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> centerEyeRotation
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> _get_centerEyeRotation();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> centerEyeRotation
    static void _set_centerEyeRotation(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> colorCameraRotation
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> _get_colorCameraRotation();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Quaternion> colorCameraRotation
    static void _set_colorCameraRotation(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Quaternion> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.Hand> handData
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::Hand> _get_handData();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.Hand> handData
    static void _set_handData(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::Hand> value);
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.Eyes> eyesData
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::Eyes> _get_eyesData();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.XR.Eyes> eyesData
    static void _set_eyesData(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::XR::Eyes> value);
    // [ObsoleteAttribute] Offset: 0x92A864
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> dPad
    static ::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> _get_dPad();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2> dPad
    static void _set_dPad(::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2> value);
    // [ObsoleteAttribute] Offset: 0x92A89C
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> indexFinger
    static ::UnityEngine::XR::InputFeatureUsage_1<float> _get_indexFinger();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> indexFinger
    static void _set_indexFinger(::UnityEngine::XR::InputFeatureUsage_1<float> value);
    // [ObsoleteAttribute] Offset: 0x92A8D4
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> middleFinger
    static ::UnityEngine::XR::InputFeatureUsage_1<float> _get_middleFinger();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> middleFinger
    static void _set_middleFinger(::UnityEngine::XR::InputFeatureUsage_1<float> value);
    // [ObsoleteAttribute] Offset: 0x92A90C
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> ringFinger
    static ::UnityEngine::XR::InputFeatureUsage_1<float> _get_ringFinger();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> ringFinger
    static void _set_ringFinger(::UnityEngine::XR::InputFeatureUsage_1<float> value);
    // [ObsoleteAttribute] Offset: 0x92A944
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> pinkyFinger
    static ::UnityEngine::XR::InputFeatureUsage_1<float> _get_pinkyFinger();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> pinkyFinger
    static void _set_pinkyFinger(::UnityEngine::XR::InputFeatureUsage_1<float> value);
    // [ObsoleteAttribute] Offset: 0x92A97C
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> thumbrest
    static ::UnityEngine::XR::InputFeatureUsage_1<bool> _get_thumbrest();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Boolean> thumbrest
    static void _set_thumbrest(::UnityEngine::XR::InputFeatureUsage_1<bool> value);
    // [ObsoleteAttribute] Offset: 0x92A9B4
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> indexTouch
    static ::UnityEngine::XR::InputFeatureUsage_1<float> _get_indexTouch();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> indexTouch
    static void _set_indexTouch(::UnityEngine::XR::InputFeatureUsage_1<float> value);
    // [ObsoleteAttribute] Offset: 0x92A9EC
    // Get static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> thumbTouch
    static ::UnityEngine::XR::InputFeatureUsage_1<float> _get_thumbTouch();
    // Set static field: static public UnityEngine.XR.InputFeatureUsage`1<System.Single> thumbTouch
    static void _set_thumbTouch(::UnityEngine::XR::InputFeatureUsage_1<float> value);
    // static private System.Void .cctor()
    // Offset: 0x1BD1624
    static void _cctor();
  }; // UnityEngine.XR.CommonUsages
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::XR::CommonUsages::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::XR::CommonUsages::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::XR::CommonUsages*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
