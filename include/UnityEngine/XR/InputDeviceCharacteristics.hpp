// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngine.XR
namespace UnityEngine::XR {
  // Forward declaring type: InputDeviceCharacteristics
  struct InputDeviceCharacteristics;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::XR::InputDeviceCharacteristics, "UnityEngine.XR", "InputDeviceCharacteristics");
// Type namespace: UnityEngine.XR
namespace UnityEngine::XR {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.XR.InputDeviceCharacteristics
  // [TokenAttribute] Offset: FFFFFFFF
  // [FlagsAttribute] Offset: FFFFFFFF
  struct InputDeviceCharacteristics/*, public ::System::Enum*/ {
    public:
    public:
    // public System.UInt32 value__
    // Size: 0x4
    // Offset: 0x0
    uint value;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Creating value type constructor for type: InputDeviceCharacteristics
    constexpr InputDeviceCharacteristics(uint value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint
    constexpr operator uint() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngine.XR.InputDeviceCharacteristics None
    static constexpr const uint None = 0u;
    // Get static field: static public UnityEngine.XR.InputDeviceCharacteristics None
    static ::UnityEngine::XR::InputDeviceCharacteristics _get_None();
    // Set static field: static public UnityEngine.XR.InputDeviceCharacteristics None
    static void _set_None(::UnityEngine::XR::InputDeviceCharacteristics value);
    // static field const value: static public UnityEngine.XR.InputDeviceCharacteristics HeadMounted
    static constexpr const uint HeadMounted = 1u;
    // Get static field: static public UnityEngine.XR.InputDeviceCharacteristics HeadMounted
    static ::UnityEngine::XR::InputDeviceCharacteristics _get_HeadMounted();
    // Set static field: static public UnityEngine.XR.InputDeviceCharacteristics HeadMounted
    static void _set_HeadMounted(::UnityEngine::XR::InputDeviceCharacteristics value);
    // static field const value: static public UnityEngine.XR.InputDeviceCharacteristics Camera
    static constexpr const uint Camera = 2u;
    // Get static field: static public UnityEngine.XR.InputDeviceCharacteristics Camera
    static ::UnityEngine::XR::InputDeviceCharacteristics _get_Camera();
    // Set static field: static public UnityEngine.XR.InputDeviceCharacteristics Camera
    static void _set_Camera(::UnityEngine::XR::InputDeviceCharacteristics value);
    // static field const value: static public UnityEngine.XR.InputDeviceCharacteristics HeldInHand
    static constexpr const uint HeldInHand = 4u;
    // Get static field: static public UnityEngine.XR.InputDeviceCharacteristics HeldInHand
    static ::UnityEngine::XR::InputDeviceCharacteristics _get_HeldInHand();
    // Set static field: static public UnityEngine.XR.InputDeviceCharacteristics HeldInHand
    static void _set_HeldInHand(::UnityEngine::XR::InputDeviceCharacteristics value);
    // static field const value: static public UnityEngine.XR.InputDeviceCharacteristics HandTracking
    static constexpr const uint HandTracking = 8u;
    // Get static field: static public UnityEngine.XR.InputDeviceCharacteristics HandTracking
    static ::UnityEngine::XR::InputDeviceCharacteristics _get_HandTracking();
    // Set static field: static public UnityEngine.XR.InputDeviceCharacteristics HandTracking
    static void _set_HandTracking(::UnityEngine::XR::InputDeviceCharacteristics value);
    // static field const value: static public UnityEngine.XR.InputDeviceCharacteristics EyeTracking
    static constexpr const uint EyeTracking = 16u;
    // Get static field: static public UnityEngine.XR.InputDeviceCharacteristics EyeTracking
    static ::UnityEngine::XR::InputDeviceCharacteristics _get_EyeTracking();
    // Set static field: static public UnityEngine.XR.InputDeviceCharacteristics EyeTracking
    static void _set_EyeTracking(::UnityEngine::XR::InputDeviceCharacteristics value);
    // static field const value: static public UnityEngine.XR.InputDeviceCharacteristics TrackedDevice
    static constexpr const uint TrackedDevice = 32u;
    // Get static field: static public UnityEngine.XR.InputDeviceCharacteristics TrackedDevice
    static ::UnityEngine::XR::InputDeviceCharacteristics _get_TrackedDevice();
    // Set static field: static public UnityEngine.XR.InputDeviceCharacteristics TrackedDevice
    static void _set_TrackedDevice(::UnityEngine::XR::InputDeviceCharacteristics value);
    // static field const value: static public UnityEngine.XR.InputDeviceCharacteristics Controller
    static constexpr const uint Controller = 64u;
    // Get static field: static public UnityEngine.XR.InputDeviceCharacteristics Controller
    static ::UnityEngine::XR::InputDeviceCharacteristics _get_Controller();
    // Set static field: static public UnityEngine.XR.InputDeviceCharacteristics Controller
    static void _set_Controller(::UnityEngine::XR::InputDeviceCharacteristics value);
    // static field const value: static public UnityEngine.XR.InputDeviceCharacteristics TrackingReference
    static constexpr const uint TrackingReference = 128u;
    // Get static field: static public UnityEngine.XR.InputDeviceCharacteristics TrackingReference
    static ::UnityEngine::XR::InputDeviceCharacteristics _get_TrackingReference();
    // Set static field: static public UnityEngine.XR.InputDeviceCharacteristics TrackingReference
    static void _set_TrackingReference(::UnityEngine::XR::InputDeviceCharacteristics value);
    // static field const value: static public UnityEngine.XR.InputDeviceCharacteristics Left
    static constexpr const uint Left = 256u;
    // Get static field: static public UnityEngine.XR.InputDeviceCharacteristics Left
    static ::UnityEngine::XR::InputDeviceCharacteristics _get_Left();
    // Set static field: static public UnityEngine.XR.InputDeviceCharacteristics Left
    static void _set_Left(::UnityEngine::XR::InputDeviceCharacteristics value);
    // static field const value: static public UnityEngine.XR.InputDeviceCharacteristics Right
    static constexpr const uint Right = 512u;
    // Get static field: static public UnityEngine.XR.InputDeviceCharacteristics Right
    static ::UnityEngine::XR::InputDeviceCharacteristics _get_Right();
    // Set static field: static public UnityEngine.XR.InputDeviceCharacteristics Right
    static void _set_Right(::UnityEngine::XR::InputDeviceCharacteristics value);
    // static field const value: static public UnityEngine.XR.InputDeviceCharacteristics Simulated6DOF
    static constexpr const uint Simulated6DOF = 1024u;
    // Get static field: static public UnityEngine.XR.InputDeviceCharacteristics Simulated6DOF
    static ::UnityEngine::XR::InputDeviceCharacteristics _get_Simulated6DOF();
    // Set static field: static public UnityEngine.XR.InputDeviceCharacteristics Simulated6DOF
    static void _set_Simulated6DOF(::UnityEngine::XR::InputDeviceCharacteristics value);
    // Get instance field reference: public System.UInt32 value__
    [[deprecated("Use field access instead!")]] uint& dyn_value__();
  }; // UnityEngine.XR.InputDeviceCharacteristics
  #pragma pack(pop)
  static check_size<sizeof(InputDeviceCharacteristics), 0 + sizeof(uint)> __UnityEngine_XR_InputDeviceCharacteristicsSizeCheck;
  static_assert(sizeof(InputDeviceCharacteristics) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
