// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: ScriptableObject
  class ScriptableObject;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::ScriptableObject);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::ScriptableObject*, "UnityEngine", "ScriptableObject");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.ScriptableObject
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeClassAttribute] Offset: 108E6B0
  // [ExtensionOfNativeClassAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 108E6B0
  // [RequiredByNativeCodeAttribute] Offset: 108E6B0
  class ScriptableObject : public ::UnityEngine::Object {
    public:
    // static public UnityEngine.ScriptableObject CreateInstance(System.Type type)
    // Offset: 0x2140F44
    static ::UnityEngine::ScriptableObject* CreateInstance(::System::Type* type);
    // static public T CreateInstance()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T CreateInstance() {
      static_assert(std::is_convertible_v<T, ::UnityEngine::ScriptableObject*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScriptableObject::CreateInstance");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ScriptableObject", "CreateInstance", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method);
    }
    // static private System.Void CreateScriptableObject(UnityEngine.ScriptableObject self)
    // Offset: 0x2140F04
    static void CreateScriptableObject(::UnityEngine::ScriptableObject* self);
    // static UnityEngine.ScriptableObject CreateScriptableObjectInstanceFromType(System.Type type, System.Boolean applyDefaultsAndReset)
    // Offset: 0x2140F88
    static ::UnityEngine::ScriptableObject* CreateScriptableObjectInstanceFromType(::System::Type* type, bool applyDefaultsAndReset);
    // public System.Void .ctor()
    // Offset: 0x213C708
    // Implemented from: UnityEngine.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ScriptableObject* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScriptableObject::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ScriptableObject*, creationType>()));
    }
  }; // UnityEngine.ScriptableObject
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::ScriptableObject::CreateInstance
// Il2CppName: CreateInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ScriptableObject* (*)(::System::Type*)>(&UnityEngine::ScriptableObject::CreateInstance)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ScriptableObject*), "CreateInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: UnityEngine::ScriptableObject::CreateInstance
// Il2CppName: CreateInstance
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::ScriptableObject::CreateScriptableObject
// Il2CppName: CreateScriptableObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::ScriptableObject*)>(&UnityEngine::ScriptableObject::CreateScriptableObject)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("UnityEngine", "ScriptableObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ScriptableObject*), "CreateScriptableObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self});
  }
};
// Writing MetadataGetter for method: UnityEngine::ScriptableObject::CreateScriptableObjectInstanceFromType
// Il2CppName: CreateScriptableObjectInstanceFromType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::ScriptableObject* (*)(::System::Type*, bool)>(&UnityEngine::ScriptableObject::CreateScriptableObjectInstanceFromType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* applyDefaultsAndReset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::ScriptableObject*), "CreateScriptableObjectInstanceFromType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, applyDefaultsAndReset});
  }
};
// Writing MetadataGetter for method: UnityEngine::ScriptableObject::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
