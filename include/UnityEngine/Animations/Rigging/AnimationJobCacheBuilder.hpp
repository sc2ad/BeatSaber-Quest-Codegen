// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::Animations::Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: CacheIndex
  struct CacheIndex;
  // Forward declaring type: AffineTransform
  struct AffineTransform;
  // Forward declaring type: AnimationJobCache
  struct AnimationJobCache;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: Vector3
  struct Vector3;
  // Forward declaring type: Vector4
  struct Vector4;
  // Forward declaring type: Quaternion
  struct Quaternion;
}
// Completed forward declares
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: AnimationJobCacheBuilder
  class AnimationJobCacheBuilder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Animations::Rigging::AnimationJobCacheBuilder);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::AnimationJobCacheBuilder*, "UnityEngine.Animations.Rigging", "AnimationJobCacheBuilder");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Animations.Rigging.AnimationJobCacheBuilder
  // [TokenAttribute] Offset: FFFFFFFF
  class AnimationJobCacheBuilder : public ::Il2CppObject {
    public:
    public:
    // private System.Collections.Generic.List`1<System.Single> m_Data
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<float>* m_Data;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<float>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Collections::Generic::List_1<float>*
    constexpr operator ::System::Collections::Generic::List_1<float>*() const noexcept {
      return m_Data;
    }
    // Get instance field reference: private System.Collections.Generic.List`1<System.Single> m_Data
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<float>*& dyn_m_Data();
    // public System.Void .ctor()
    // Offset: 0x11E5810
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AnimationJobCacheBuilder* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AnimationJobCacheBuilder*, creationType>()));
    }
    // public UnityEngine.Animations.Rigging.CacheIndex Add(System.Single v)
    // Offset: 0x11E5884
    ::UnityEngine::Animations::Rigging::CacheIndex Add(float v);
    // public UnityEngine.Animations.Rigging.CacheIndex Add(UnityEngine.Vector2 v)
    // Offset: 0x11E5900
    ::UnityEngine::Animations::Rigging::CacheIndex Add(::UnityEngine::Vector2 v);
    // public UnityEngine.Animations.Rigging.CacheIndex Add(UnityEngine.Vector3 v)
    // Offset: 0x11E5994
    ::UnityEngine::Animations::Rigging::CacheIndex Add(::UnityEngine::Vector3 v);
    // public UnityEngine.Animations.Rigging.CacheIndex Add(UnityEngine.Vector4 v)
    // Offset: 0x11E5A48
    ::UnityEngine::Animations::Rigging::CacheIndex Add(::UnityEngine::Vector4 v);
    // public UnityEngine.Animations.Rigging.CacheIndex Add(UnityEngine.Quaternion v)
    // Offset: 0x11E5B14
    ::UnityEngine::Animations::Rigging::CacheIndex Add(::UnityEngine::Quaternion v);
    // public UnityEngine.Animations.Rigging.CacheIndex Add(UnityEngine.Animations.Rigging.AffineTransform tx)
    // Offset: 0x11E5B5C
    ::UnityEngine::Animations::Rigging::CacheIndex Add(::UnityEngine::Animations::Rigging::AffineTransform tx);
    // public UnityEngine.Animations.Rigging.CacheIndex AllocateChunk(System.Int32 size)
    // Offset: 0x11E5BDC
    ::UnityEngine::Animations::Rigging::CacheIndex AllocateChunk(int size);
    // public System.Void SetValue(UnityEngine.Animations.Rigging.CacheIndex index, System.Int32 offset, System.Single value)
    // Offset: 0x11E5C70
    void SetValue(::UnityEngine::Animations::Rigging::CacheIndex index, int offset, float value);
    // public UnityEngine.Animations.Rigging.AnimationJobCache Build()
    // Offset: 0x11E5D0C
    ::UnityEngine::Animations::Rigging::AnimationJobCache Build();
  }; // UnityEngine.Animations.Rigging.AnimationJobCacheBuilder
  #pragma pack(pop)
  static check_size<sizeof(AnimationJobCacheBuilder), 16 + sizeof(::System::Collections::Generic::List_1<float>*)> __UnityEngine_Animations_Rigging_AnimationJobCacheBuilderSizeCheck;
  static_assert(sizeof(AnimationJobCacheBuilder) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Animations::Rigging::CacheIndex (UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::*)(float)>(&UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::Add)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::AnimationJobCacheBuilder*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Animations::Rigging::CacheIndex (UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::*)(::UnityEngine::Vector2)>(&UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::Add)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::AnimationJobCacheBuilder*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Animations::Rigging::CacheIndex (UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::*)(::UnityEngine::Vector3)>(&UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::Add)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::AnimationJobCacheBuilder*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Animations::Rigging::CacheIndex (UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::*)(::UnityEngine::Vector4)>(&UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::Add)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::AnimationJobCacheBuilder*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Animations::Rigging::CacheIndex (UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::*)(::UnityEngine::Quaternion)>(&UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::Add)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::AnimationJobCacheBuilder*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Animations::Rigging::CacheIndex (UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::*)(::UnityEngine::Animations::Rigging::AffineTransform)>(&UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::Add)> {
  static const MethodInfo* get() {
    static auto* tx = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "AffineTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::AnimationJobCacheBuilder*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tx});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::AllocateChunk
// Il2CppName: AllocateChunk
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Animations::Rigging::CacheIndex (UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::*)(int)>(&UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::AllocateChunk)> {
  static const MethodInfo* get() {
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::AnimationJobCacheBuilder*), "AllocateChunk", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{size});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::SetValue
// Il2CppName: SetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::*)(::UnityEngine::Animations::Rigging::CacheIndex, int, float)>(&UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::SetValue)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "CacheIndex")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::AnimationJobCacheBuilder*), "SetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, offset, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::Build
// Il2CppName: Build
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Animations::Rigging::AnimationJobCache (UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::*)()>(&UnityEngine::Animations::Rigging::AnimationJobCacheBuilder::Build)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::AnimationJobCacheBuilder*), "Build", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
