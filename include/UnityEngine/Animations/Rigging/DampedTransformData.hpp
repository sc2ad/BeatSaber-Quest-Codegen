// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Animations.Rigging.IAnimationJobData
#include "UnityEngine/Animations/Rigging/IAnimationJobData.hpp"
// Including type: UnityEngine.Animations.Rigging.IDampedTransformData
#include "UnityEngine/Animations/Rigging/IDampedTransformData.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: DampedTransformData
  struct DampedTransformData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::DampedTransformData, "UnityEngine.Animations.Rigging", "DampedTransformData");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Size: 0x19
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Animations.Rigging.DampedTransformData
  // [TokenAttribute] Offset: FFFFFFFF
  struct DampedTransformData/*, public ::System::ValueType, public ::UnityEngine::Animations::Rigging::IAnimationJobData, public ::UnityEngine::Animations::Rigging::IDampedTransformData*/ {
    public:
    public:
    // private UnityEngine.Transform m_ConstrainedObject
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Transform* m_ConstrainedObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // [SyncSceneToStreamAttribute] Offset: 0x97C1E8
    // private UnityEngine.Transform m_Source
    // Size: 0x8
    // Offset: 0x8
    ::UnityEngine::Transform* m_Source;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // [SyncSceneToStreamAttribute] Offset: 0x97C220
    // [RangeAttribute] Offset: 0x97C220
    // private System.Single m_DampPosition
    // Size: 0x4
    // Offset: 0x10
    float m_DampPosition;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [SyncSceneToStreamAttribute] Offset: 0x97C270
    // [RangeAttribute] Offset: 0x97C270
    // private System.Single m_DampRotation
    // Size: 0x4
    // Offset: 0x14
    float m_DampRotation;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean m_MaintainAim
    // Size: 0x1
    // Offset: 0x18
    bool m_MaintainAim;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: DampedTransformData
    constexpr DampedTransformData(::UnityEngine::Transform* m_ConstrainedObject_ = {}, ::UnityEngine::Transform* m_Source_ = {}, float m_DampPosition_ = {}, float m_DampRotation_ = {}, bool m_MaintainAim_ = {}) noexcept : m_ConstrainedObject{m_ConstrainedObject_}, m_Source{m_Source_}, m_DampPosition{m_DampPosition_}, m_DampRotation{m_DampRotation_}, m_MaintainAim{m_MaintainAim_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::Animations::Rigging::IAnimationJobData
    operator ::UnityEngine::Animations::Rigging::IAnimationJobData() noexcept {
      return *reinterpret_cast<::UnityEngine::Animations::Rigging::IAnimationJobData*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::Animations::Rigging::IDampedTransformData
    operator ::UnityEngine::Animations::Rigging::IDampedTransformData() noexcept {
      return *reinterpret_cast<::UnityEngine::Animations::Rigging::IDampedTransformData*>(this);
    }
    // Get instance field reference: private UnityEngine.Transform m_ConstrainedObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_m_ConstrainedObject();
    // Get instance field reference: private UnityEngine.Transform m_Source
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_m_Source();
    // Get instance field reference: private System.Single m_DampPosition
    [[deprecated("Use field access instead!")]] float& dyn_m_DampPosition();
    // Get instance field reference: private System.Single m_DampRotation
    [[deprecated("Use field access instead!")]] float& dyn_m_DampRotation();
    // Get instance field reference: private System.Boolean m_MaintainAim
    [[deprecated("Use field access instead!")]] bool& dyn_m_MaintainAim();
    // public UnityEngine.Transform get_constrainedObject()
    // Offset: 0xA5715C
    ::UnityEngine::Transform* get_constrainedObject();
    // public System.Void set_constrainedObject(UnityEngine.Transform value)
    // Offset: 0xA57164
    void set_constrainedObject(::UnityEngine::Transform* value);
    // public UnityEngine.Transform get_sourceObject()
    // Offset: 0xA5716C
    ::UnityEngine::Transform* get_sourceObject();
    // public System.Void set_sourceObject(UnityEngine.Transform value)
    // Offset: 0xA57174
    void set_sourceObject(::UnityEngine::Transform* value);
    // public System.Single get_dampPosition()
    // Offset: 0xA5717C
    float get_dampPosition();
    // public System.Void set_dampPosition(System.Single value)
    // Offset: 0xA57184
    void set_dampPosition(float value);
    // public System.Single get_dampRotation()
    // Offset: 0xA5718C
    float get_dampRotation();
    // public System.Void set_dampRotation(System.Single value)
    // Offset: 0xA57194
    void set_dampRotation(float value);
    // public System.Boolean get_maintainAim()
    // Offset: 0xA5719C
    bool get_maintainAim();
    // public System.Void set_maintainAim(System.Boolean value)
    // Offset: 0xA571A4
    void set_maintainAim(bool value);
    // private System.String UnityEngine.Animations.Rigging.IDampedTransformData.get_dampPositionFloatProperty()
    // Offset: 0xA571B0
    ::StringW UnityEngine_Animations_Rigging_IDampedTransformData_get_dampPositionFloatProperty();
    // private System.String UnityEngine.Animations.Rigging.IDampedTransformData.get_dampRotationFloatProperty()
    // Offset: 0xA571B4
    ::StringW UnityEngine_Animations_Rigging_IDampedTransformData_get_dampRotationFloatProperty();
    // private System.Boolean UnityEngine.Animations.Rigging.IAnimationJobData.IsValid()
    // Offset: 0xA571B8
    bool UnityEngine_Animations_Rigging_IAnimationJobData_IsValid();
    // private System.Void UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues()
    // Offset: 0xA571C0
    void UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues();
  }; // UnityEngine.Animations.Rigging.DampedTransformData
  #pragma pack(pop)
  static check_size<sizeof(DampedTransformData), 24 + sizeof(bool)> __UnityEngine_Animations_Rigging_DampedTransformDataSizeCheck;
  static_assert(sizeof(DampedTransformData) == 0x19);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::DampedTransformData::get_constrainedObject
// Il2CppName: get_constrainedObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::Animations::Rigging::DampedTransformData::*)()>(&UnityEngine::Animations::Rigging::DampedTransformData::get_constrainedObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::DampedTransformData), "get_constrainedObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::DampedTransformData::set_constrainedObject
// Il2CppName: set_constrainedObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::DampedTransformData::*)(::UnityEngine::Transform*)>(&UnityEngine::Animations::Rigging::DampedTransformData::set_constrainedObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::DampedTransformData), "set_constrainedObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::DampedTransformData::get_sourceObject
// Il2CppName: get_sourceObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::Animations::Rigging::DampedTransformData::*)()>(&UnityEngine::Animations::Rigging::DampedTransformData::get_sourceObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::DampedTransformData), "get_sourceObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::DampedTransformData::set_sourceObject
// Il2CppName: set_sourceObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::DampedTransformData::*)(::UnityEngine::Transform*)>(&UnityEngine::Animations::Rigging::DampedTransformData::set_sourceObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::DampedTransformData), "set_sourceObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::DampedTransformData::get_dampPosition
// Il2CppName: get_dampPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animations::Rigging::DampedTransformData::*)()>(&UnityEngine::Animations::Rigging::DampedTransformData::get_dampPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::DampedTransformData), "get_dampPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::DampedTransformData::set_dampPosition
// Il2CppName: set_dampPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::DampedTransformData::*)(float)>(&UnityEngine::Animations::Rigging::DampedTransformData::set_dampPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::DampedTransformData), "set_dampPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::DampedTransformData::get_dampRotation
// Il2CppName: get_dampRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animations::Rigging::DampedTransformData::*)()>(&UnityEngine::Animations::Rigging::DampedTransformData::get_dampRotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::DampedTransformData), "get_dampRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::DampedTransformData::set_dampRotation
// Il2CppName: set_dampRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::DampedTransformData::*)(float)>(&UnityEngine::Animations::Rigging::DampedTransformData::set_dampRotation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::DampedTransformData), "set_dampRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::DampedTransformData::get_maintainAim
// Il2CppName: get_maintainAim
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::DampedTransformData::*)()>(&UnityEngine::Animations::Rigging::DampedTransformData::get_maintainAim)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::DampedTransformData), "get_maintainAim", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::DampedTransformData::set_maintainAim
// Il2CppName: set_maintainAim
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::DampedTransformData::*)(bool)>(&UnityEngine::Animations::Rigging::DampedTransformData::set_maintainAim)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::DampedTransformData), "set_maintainAim", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine_Animations_Rigging_IDampedTransformData_get_dampPositionFloatProperty
// Il2CppName: UnityEngine.Animations.Rigging.IDampedTransformData.get_dampPositionFloatProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Animations::Rigging::DampedTransformData::*)()>(&UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine_Animations_Rigging_IDampedTransformData_get_dampPositionFloatProperty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::DampedTransformData), "UnityEngine.Animations.Rigging.IDampedTransformData.get_dampPositionFloatProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine_Animations_Rigging_IDampedTransformData_get_dampRotationFloatProperty
// Il2CppName: UnityEngine.Animations.Rigging.IDampedTransformData.get_dampRotationFloatProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Animations::Rigging::DampedTransformData::*)()>(&UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine_Animations_Rigging_IDampedTransformData_get_dampRotationFloatProperty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::DampedTransformData), "UnityEngine.Animations.Rigging.IDampedTransformData.get_dampRotationFloatProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid
// Il2CppName: UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::DampedTransformData::*)()>(&UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::DampedTransformData), "UnityEngine.Animations.Rigging.IAnimationJobData.IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues
// Il2CppName: UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::DampedTransformData::*)()>(&UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::DampedTransformData), "UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
