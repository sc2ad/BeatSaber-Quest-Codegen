// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Animations.Rigging.WeightedTransform
#include "UnityEngine/Animations/Rigging/WeightedTransform.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Animations::Rigging
namespace UnityEngine::Animations::Rigging {
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IEnumerator`1<T>
  template<typename T>
  class IEnumerator_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: WeightedTransformArray
  struct WeightedTransformArray;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::WeightedTransformArray, "UnityEngine.Animations.Rigging", "WeightedTransformArray");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Size: 0x84
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Animations.Rigging.WeightedTransformArray
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 97BC3C
  struct WeightedTransformArray/*, public ::System::ValueType, public ::System::Collections::Generic::IList_1<::UnityEngine::Animations::Rigging::WeightedTransform>, public ::System::Collections::IList*/ {
    public:
    // Nested type: ::UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator
    struct Enumerator;
    public:
    // private System.Int32 m_Length
    // Size: 0x4
    // Offset: 0x0
    int m_Length;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_Length and: m_Item0
    char __padding0[0x4] = {};
    // private UnityEngine.Animations.Rigging.WeightedTransform m_Item0
    // Size: 0xC
    // Offset: 0x8
    ::UnityEngine::Animations::Rigging::WeightedTransform m_Item0;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animations::Rigging::WeightedTransform) == 0xC);
    // Padding between fields: m_Item0 and: m_Item1
    char __padding1[0x4] = {};
    // private UnityEngine.Animations.Rigging.WeightedTransform m_Item1
    // Size: 0xC
    // Offset: 0x18
    ::UnityEngine::Animations::Rigging::WeightedTransform m_Item1;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animations::Rigging::WeightedTransform) == 0xC);
    // Padding between fields: m_Item1 and: m_Item2
    char __padding2[0x4] = {};
    // private UnityEngine.Animations.Rigging.WeightedTransform m_Item2
    // Size: 0xC
    // Offset: 0x28
    ::UnityEngine::Animations::Rigging::WeightedTransform m_Item2;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animations::Rigging::WeightedTransform) == 0xC);
    // Padding between fields: m_Item2 and: m_Item3
    char __padding3[0x4] = {};
    // private UnityEngine.Animations.Rigging.WeightedTransform m_Item3
    // Size: 0xC
    // Offset: 0x38
    ::UnityEngine::Animations::Rigging::WeightedTransform m_Item3;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animations::Rigging::WeightedTransform) == 0xC);
    // Padding between fields: m_Item3 and: m_Item4
    char __padding4[0x4] = {};
    // private UnityEngine.Animations.Rigging.WeightedTransform m_Item4
    // Size: 0xC
    // Offset: 0x48
    ::UnityEngine::Animations::Rigging::WeightedTransform m_Item4;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animations::Rigging::WeightedTransform) == 0xC);
    // Padding between fields: m_Item4 and: m_Item5
    char __padding5[0x4] = {};
    // private UnityEngine.Animations.Rigging.WeightedTransform m_Item5
    // Size: 0xC
    // Offset: 0x58
    ::UnityEngine::Animations::Rigging::WeightedTransform m_Item5;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animations::Rigging::WeightedTransform) == 0xC);
    // Padding between fields: m_Item5 and: m_Item6
    char __padding6[0x4] = {};
    // private UnityEngine.Animations.Rigging.WeightedTransform m_Item6
    // Size: 0xC
    // Offset: 0x68
    ::UnityEngine::Animations::Rigging::WeightedTransform m_Item6;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animations::Rigging::WeightedTransform) == 0xC);
    // Padding between fields: m_Item6 and: m_Item7
    char __padding7[0x4] = {};
    // private UnityEngine.Animations.Rigging.WeightedTransform m_Item7
    // Size: 0xC
    // Offset: 0x78
    ::UnityEngine::Animations::Rigging::WeightedTransform m_Item7;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animations::Rigging::WeightedTransform) == 0xC);
    public:
    // Creating value type constructor for type: WeightedTransformArray
    constexpr WeightedTransformArray(int m_Length_ = {}, ::UnityEngine::Animations::Rigging::WeightedTransform m_Item0_ = {}, ::UnityEngine::Animations::Rigging::WeightedTransform m_Item1_ = {}, ::UnityEngine::Animations::Rigging::WeightedTransform m_Item2_ = {}, ::UnityEngine::Animations::Rigging::WeightedTransform m_Item3_ = {}, ::UnityEngine::Animations::Rigging::WeightedTransform m_Item4_ = {}, ::UnityEngine::Animations::Rigging::WeightedTransform m_Item5_ = {}, ::UnityEngine::Animations::Rigging::WeightedTransform m_Item6_ = {}, ::UnityEngine::Animations::Rigging::WeightedTransform m_Item7_ = {}) noexcept : m_Length{m_Length_}, m_Item0{m_Item0_}, m_Item1{m_Item1_}, m_Item2{m_Item2_}, m_Item3{m_Item3_}, m_Item4{m_Item4_}, m_Item5{m_Item5_}, m_Item6{m_Item6_}, m_Item7{m_Item7_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::Collections::Generic::IList_1<::UnityEngine::Animations::Rigging::WeightedTransform>
    operator ::System::Collections::Generic::IList_1<::UnityEngine::Animations::Rigging::WeightedTransform>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IList_1<::UnityEngine::Animations::Rigging::WeightedTransform>*>(this);
    }
    // Creating interface conversion operator: operator ::System::Collections::IList
    operator ::System::Collections::IList() noexcept {
      return *reinterpret_cast<::System::Collections::IList*>(this);
    }
    // Get static field: static public readonly System.Int32 k_MaxLength
    static int _get_k_MaxLength();
    // Set static field: static public readonly System.Int32 k_MaxLength
    static void _set_k_MaxLength(int value);
    // Get instance field reference: private System.Int32 m_Length
    [[deprecated("Use field access instead!")]] int& dyn_m_Length();
    // Get instance field reference: private UnityEngine.Animations.Rigging.WeightedTransform m_Item0
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransform& dyn_m_Item0();
    // Get instance field reference: private UnityEngine.Animations.Rigging.WeightedTransform m_Item1
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransform& dyn_m_Item1();
    // Get instance field reference: private UnityEngine.Animations.Rigging.WeightedTransform m_Item2
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransform& dyn_m_Item2();
    // Get instance field reference: private UnityEngine.Animations.Rigging.WeightedTransform m_Item3
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransform& dyn_m_Item3();
    // Get instance field reference: private UnityEngine.Animations.Rigging.WeightedTransform m_Item4
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransform& dyn_m_Item4();
    // Get instance field reference: private UnityEngine.Animations.Rigging.WeightedTransform m_Item5
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransform& dyn_m_Item5();
    // Get instance field reference: private UnityEngine.Animations.Rigging.WeightedTransform m_Item6
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransform& dyn_m_Item6();
    // Get instance field reference: private UnityEngine.Animations.Rigging.WeightedTransform m_Item7
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransform& dyn_m_Item7();
    // private System.Object System.Collections.IList.get_Item(System.Int32 index)
    // Offset: 0xA7C544
    ::Il2CppObject* System_Collections_IList_get_Item(int index);
    // private System.Void System.Collections.IList.set_Item(System.Int32 index, System.Object value)
    // Offset: 0xA7C54C
    void System_Collections_IList_set_Item(int index, ::Il2CppObject* value);
    // public UnityEngine.Animations.Rigging.WeightedTransform get_Item(System.Int32 index)
    // Offset: 0xA7C554
    ::UnityEngine::Animations::Rigging::WeightedTransform get_Item(int index);
    // public System.Void set_Item(System.Int32 index, UnityEngine.Animations.Rigging.WeightedTransform value)
    // Offset: 0xA7C55C
    void set_Item(int index, ::UnityEngine::Animations::Rigging::WeightedTransform value);
    // public System.Int32 get_Count()
    // Offset: 0xA7C564
    int get_Count();
    // public System.Boolean get_IsReadOnly()
    // Offset: 0xA7C56C
    bool get_IsReadOnly();
    // public System.Boolean get_IsFixedSize()
    // Offset: 0xA7C574
    bool get_IsFixedSize();
    // private System.Boolean System.Collections.ICollection.get_IsSynchronized()
    // Offset: 0xA7C57C
    bool System_Collections_ICollection_get_IsSynchronized();
    // private System.Object System.Collections.ICollection.get_SyncRoot()
    // Offset: 0xA7C584
    ::Il2CppObject* System_Collections_ICollection_get_SyncRoot();
    // public System.Void .ctor(System.Int32 size)
    // Offset: 0xA7C3F0
    WeightedTransformArray(int size);
    // static private System.Void .cctor()
    // Offset: 0x1C08D24
    static void _cctor();
    // public System.Collections.Generic.IEnumerator`1<UnityEngine.Animations.Rigging.WeightedTransform> GetEnumerator()
    // Offset: 0xA7C3F8
    ::System::Collections::Generic::IEnumerator_1<::UnityEngine::Animations::Rigging::WeightedTransform>* GetEnumerator();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0xA7C400
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // private System.Int32 System.Collections.IList.Add(System.Object value)
    // Offset: 0xA7C408
    int System_Collections_IList_Add(::Il2CppObject* value);
    // public System.Void Add(UnityEngine.Animations.Rigging.WeightedTransform value)
    // Offset: 0xA7C410
    void Add(::UnityEngine::Animations::Rigging::WeightedTransform value);
    // public System.Void Clear()
    // Offset: 0xA7C418
    void Clear();
    // private System.Int32 System.Collections.IList.IndexOf(System.Object value)
    // Offset: 0xA7C420
    int System_Collections_IList_IndexOf(::Il2CppObject* value);
    // public System.Int32 IndexOf(UnityEngine.Animations.Rigging.WeightedTransform value)
    // Offset: 0xA7C428
    int IndexOf(::UnityEngine::Animations::Rigging::WeightedTransform value);
    // private System.Boolean System.Collections.IList.Contains(System.Object value)
    // Offset: 0xA7C430
    bool System_Collections_IList_Contains(::Il2CppObject* value);
    // public System.Boolean Contains(UnityEngine.Animations.Rigging.WeightedTransform value)
    // Offset: 0xA7C438
    bool Contains(::UnityEngine::Animations::Rigging::WeightedTransform value);
    // private System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 arrayIndex)
    // Offset: 0xA7C440
    void System_Collections_ICollection_CopyTo(::System::Array* array, int arrayIndex);
    // public System.Void CopyTo(UnityEngine.Animations.Rigging.WeightedTransform[] array, System.Int32 arrayIndex)
    // Offset: 0xA7C448
    void CopyTo(::ArrayW<::UnityEngine::Animations::Rigging::WeightedTransform> array, int arrayIndex);
    // private System.Void System.Collections.IList.Remove(System.Object value)
    // Offset: 0xA7C450
    void System_Collections_IList_Remove(::Il2CppObject* value);
    // public System.Boolean Remove(UnityEngine.Animations.Rigging.WeightedTransform value)
    // Offset: 0xA7C458
    bool Remove(::UnityEngine::Animations::Rigging::WeightedTransform value);
    // public System.Void RemoveAt(System.Int32 index)
    // Offset: 0xA7C460
    void RemoveAt(int index);
    // private System.Void System.Collections.IList.Insert(System.Int32 index, System.Object value)
    // Offset: 0xA7C468
    void System_Collections_IList_Insert(int index, ::Il2CppObject* value);
    // public System.Void Insert(System.Int32 index, UnityEngine.Animations.Rigging.WeightedTransform value)
    // Offset: 0xA7C470
    void Insert(int index, ::UnityEngine::Animations::Rigging::WeightedTransform value);
    // static private System.Int32 ClampSize(System.Int32 size)
    // Offset: 0x1C07C24
    static int ClampSize(int size);
    // private System.Void CheckOutOfRangeIndex(System.Int32 index)
    // Offset: 0xA7C478
    void CheckOutOfRangeIndex(int index);
    // private UnityEngine.Animations.Rigging.WeightedTransform Get(System.Int32 index)
    // Offset: 0xA7C480
    ::UnityEngine::Animations::Rigging::WeightedTransform Get(int index);
    // private System.Void Set(System.Int32 index, UnityEngine.Animations.Rigging.WeightedTransform value)
    // Offset: 0xA7C488
    void Set(int index, ::UnityEngine::Animations::Rigging::WeightedTransform value);
    // public System.Void SetWeight(System.Int32 index, System.Single weight)
    // Offset: 0xA7C490
    void SetWeight(int index, float weight);
    // public System.Single GetWeight(System.Int32 index)
    // Offset: 0xA7C4DC
    float GetWeight(int index);
    // public System.Void SetTransform(System.Int32 index, UnityEngine.Transform transform)
    // Offset: 0xA7C4F8
    void SetTransform(int index, ::UnityEngine::Transform* transform);
    // public UnityEngine.Transform GetTransform(System.Int32 index)
    // Offset: 0xA7C53C
    ::UnityEngine::Transform* GetTransform(int index);
  }; // UnityEngine.Animations.Rigging.WeightedTransformArray
  #pragma pack(pop)
  static check_size<sizeof(WeightedTransformArray), 120 + sizeof(::UnityEngine::Animations::Rigging::WeightedTransform)> __UnityEngine_Animations_Rigging_WeightedTransformArraySizeCheck;
  static_assert(sizeof(WeightedTransformArray) == 0x84);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_get_Item
// Il2CppName: System.Collections.IList.get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(int)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "System.Collections.IList.get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_set_Item
// Il2CppName: System.Collections.IList.set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(int, ::Il2CppObject*)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_set_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "System.Collections.IList.set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Animations::Rigging::WeightedTransform (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(int)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(int, ::UnityEngine::Animations::Rigging::WeightedTransform)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::set_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "WeightedTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animations::Rigging::WeightedTransformArray::*)()>(&UnityEngine::Animations::Rigging::WeightedTransformArray::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::get_IsReadOnly
// Il2CppName: get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::WeightedTransformArray::*)()>(&UnityEngine::Animations::Rigging::WeightedTransformArray::get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::get_IsFixedSize
// Il2CppName: get_IsFixedSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::WeightedTransformArray::*)()>(&UnityEngine::Animations::Rigging::WeightedTransformArray::get_IsFixedSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "get_IsFixedSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_ICollection_get_IsSynchronized
// Il2CppName: System.Collections.ICollection.get_IsSynchronized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::WeightedTransformArray::*)()>(&UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_ICollection_get_IsSynchronized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "System.Collections.ICollection.get_IsSynchronized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_ICollection_get_SyncRoot
// Il2CppName: System.Collections.ICollection.get_SyncRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityEngine::Animations::Rigging::WeightedTransformArray::*)()>(&UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_ICollection_get_SyncRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::WeightedTransformArray
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Animations::Rigging::WeightedTransformArray::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<::UnityEngine::Animations::Rigging::WeightedTransform>* (UnityEngine::Animations::Rigging::WeightedTransformArray::*)()>(&UnityEngine::Animations::Rigging::WeightedTransformArray::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (UnityEngine::Animations::Rigging::WeightedTransformArray::*)()>(&UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_Add
// Il2CppName: System.Collections.IList.Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(::Il2CppObject*)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_Add)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "System.Collections.IList.Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(::UnityEngine::Animations::Rigging::WeightedTransform)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::Add)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "WeightedTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::WeightedTransformArray::*)()>(&UnityEngine::Animations::Rigging::WeightedTransformArray::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_IndexOf
// Il2CppName: System.Collections.IList.IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(::Il2CppObject*)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_IndexOf)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(::UnityEngine::Animations::Rigging::WeightedTransform)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::IndexOf)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "WeightedTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_Contains
// Il2CppName: System.Collections.IList.Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(::Il2CppObject*)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_Contains)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "System.Collections.IList.Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(::UnityEngine::Animations::Rigging::WeightedTransform)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::Contains)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "WeightedTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_ICollection_CopyTo
// Il2CppName: System.Collections.ICollection.CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(::System::Array*, int)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_ICollection_CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* arrayIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, arrayIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(::ArrayW<::UnityEngine::Animations::Rigging::WeightedTransform>, int)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "WeightedTransform"), 1)->byval_arg;
    static auto* arrayIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, arrayIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_Remove
// Il2CppName: System.Collections.IList.Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(::Il2CppObject*)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_Remove)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "System.Collections.IList.Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(::UnityEngine::Animations::Rigging::WeightedTransform)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::Remove)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "WeightedTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::RemoveAt
// Il2CppName: RemoveAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(int)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::RemoveAt)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "RemoveAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_Insert
// Il2CppName: System.Collections.IList.Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(int, ::Il2CppObject*)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "System.Collections.IList.Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(int, ::UnityEngine::Animations::Rigging::WeightedTransform)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "WeightedTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::ClampSize
// Il2CppName: ClampSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::ClampSize)> {
  static const MethodInfo* get() {
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "ClampSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{size});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::CheckOutOfRangeIndex
// Il2CppName: CheckOutOfRangeIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(int)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::CheckOutOfRangeIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "CheckOutOfRangeIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Animations::Rigging::WeightedTransform (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(int)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::Get)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(int, ::UnityEngine::Animations::Rigging::WeightedTransform)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::Set)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "WeightedTransform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::SetWeight
// Il2CppName: SetWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(int, float)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::SetWeight)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* weight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "SetWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, weight});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::GetWeight
// Il2CppName: GetWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(int)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::GetWeight)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "GetWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::SetTransform
// Il2CppName: SetTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(int, ::UnityEngine::Transform*)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::SetTransform)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* transform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "SetTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, transform});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArray::GetTransform
// Il2CppName: GetTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::Animations::Rigging::WeightedTransformArray::*)(int)>(&UnityEngine::Animations::Rigging::WeightedTransformArray::GetTransform)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArray), "GetTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
