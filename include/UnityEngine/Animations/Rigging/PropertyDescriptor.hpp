// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Animations.Rigging.PropertyType
#include "UnityEngine/Animations/Rigging/PropertyType.hpp"
// Completed includes
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: PropertyDescriptor
  struct PropertyDescriptor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::PropertyDescriptor, "UnityEngine.Animations.Rigging", "PropertyDescriptor");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Size: 0x5
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Animations.Rigging.PropertyDescriptor
  // [TokenAttribute] Offset: FFFFFFFF
  struct PropertyDescriptor/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Int32 size
    // Size: 0x4
    // Offset: 0x0
    int size;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public UnityEngine.Animations.Rigging.PropertyType type
    // Size: 0x1
    // Offset: 0x4
    ::UnityEngine::Animations::Rigging::PropertyType type;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animations::Rigging::PropertyType) == 0x1);
    public:
    // Creating value type constructor for type: PropertyDescriptor
    constexpr PropertyDescriptor(int size_ = {}, ::UnityEngine::Animations::Rigging::PropertyType type_ = {}) noexcept : size{size_}, type{type_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Int32 size
    [[deprecated("Use field access instead!")]] int& dyn_size();
    // Get instance field reference: public UnityEngine.Animations.Rigging.PropertyType type
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::PropertyType& dyn_type();
  }; // UnityEngine.Animations.Rigging.PropertyDescriptor
  #pragma pack(pop)
  static check_size<sizeof(PropertyDescriptor), 4 + sizeof(::UnityEngine::Animations::Rigging::PropertyType)> __UnityEngine_Animations_Rigging_PropertyDescriptorSizeCheck;
  static_assert(sizeof(PropertyDescriptor) == 0x5);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
