// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Animations.Rigging.IAnimationJobData
#include "UnityEngine/Animations/Rigging/IAnimationJobData.hpp"
// Including type: UnityEngine.Animations.Rigging.IBlendConstraintData
#include "UnityEngine/Animations/Rigging/IBlendConstraintData.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: BlendConstraintData
  struct BlendConstraintData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::BlendConstraintData, "UnityEngine.Animations.Rigging", "BlendConstraintData");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Size: 0x26
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Animations.Rigging.BlendConstraintData
  // [TokenAttribute] Offset: FFFFFFFF
  struct BlendConstraintData/*, public ::System::ValueType, public ::UnityEngine::Animations::Rigging::IAnimationJobData, public ::UnityEngine::Animations::Rigging::IBlendConstraintData*/ {
    public:
    public:
    // private UnityEngine.Transform m_ConstrainedObject
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Transform* m_ConstrainedObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // [SyncSceneToStreamAttribute] Offset: 0x97BDD8
    // private UnityEngine.Transform m_SourceA
    // Size: 0x8
    // Offset: 0x8
    ::UnityEngine::Transform* m_SourceA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // [SyncSceneToStreamAttribute] Offset: 0x97BE10
    // private UnityEngine.Transform m_SourceB
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Transform* m_SourceB;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // [SyncSceneToStreamAttribute] Offset: 0x97BE48
    // private System.Boolean m_BlendPosition
    // Size: 0x1
    // Offset: 0x18
    bool m_BlendPosition;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [SyncSceneToStreamAttribute] Offset: 0x97BE80
    // private System.Boolean m_BlendRotation
    // Size: 0x1
    // Offset: 0x19
    bool m_BlendRotation;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_BlendRotation and: m_PositionWeight
    char __padding4[0x2] = {};
    // [SyncSceneToStreamAttribute] Offset: 0x97BEB8
    // [RangeAttribute] Offset: 0x97BEB8
    // private System.Single m_PositionWeight
    // Size: 0x4
    // Offset: 0x1C
    float m_PositionWeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [SyncSceneToStreamAttribute] Offset: 0x97BF08
    // [RangeAttribute] Offset: 0x97BF08
    // private System.Single m_RotationWeight
    // Size: 0x4
    // Offset: 0x20
    float m_RotationWeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean m_MaintainPositionOffsets
    // Size: 0x1
    // Offset: 0x24
    bool m_MaintainPositionOffsets;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_MaintainRotationOffsets
    // Size: 0x1
    // Offset: 0x25
    bool m_MaintainRotationOffsets;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: BlendConstraintData
    constexpr BlendConstraintData(::UnityEngine::Transform* m_ConstrainedObject_ = {}, ::UnityEngine::Transform* m_SourceA_ = {}, ::UnityEngine::Transform* m_SourceB_ = {}, bool m_BlendPosition_ = {}, bool m_BlendRotation_ = {}, float m_PositionWeight_ = {}, float m_RotationWeight_ = {}, bool m_MaintainPositionOffsets_ = {}, bool m_MaintainRotationOffsets_ = {}) noexcept : m_ConstrainedObject{m_ConstrainedObject_}, m_SourceA{m_SourceA_}, m_SourceB{m_SourceB_}, m_BlendPosition{m_BlendPosition_}, m_BlendRotation{m_BlendRotation_}, m_PositionWeight{m_PositionWeight_}, m_RotationWeight{m_RotationWeight_}, m_MaintainPositionOffsets{m_MaintainPositionOffsets_}, m_MaintainRotationOffsets{m_MaintainRotationOffsets_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::Animations::Rigging::IAnimationJobData
    operator ::UnityEngine::Animations::Rigging::IAnimationJobData() noexcept {
      return *reinterpret_cast<::UnityEngine::Animations::Rigging::IAnimationJobData*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::Animations::Rigging::IBlendConstraintData
    operator ::UnityEngine::Animations::Rigging::IBlendConstraintData() noexcept {
      return *reinterpret_cast<::UnityEngine::Animations::Rigging::IBlendConstraintData*>(this);
    }
    // Get instance field reference: private UnityEngine.Transform m_ConstrainedObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_m_ConstrainedObject();
    // Get instance field reference: private UnityEngine.Transform m_SourceA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_m_SourceA();
    // Get instance field reference: private UnityEngine.Transform m_SourceB
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_m_SourceB();
    // Get instance field reference: private System.Boolean m_BlendPosition
    [[deprecated("Use field access instead!")]] bool& dyn_m_BlendPosition();
    // Get instance field reference: private System.Boolean m_BlendRotation
    [[deprecated("Use field access instead!")]] bool& dyn_m_BlendRotation();
    // Get instance field reference: private System.Single m_PositionWeight
    [[deprecated("Use field access instead!")]] float& dyn_m_PositionWeight();
    // Get instance field reference: private System.Single m_RotationWeight
    [[deprecated("Use field access instead!")]] float& dyn_m_RotationWeight();
    // Get instance field reference: private System.Boolean m_MaintainPositionOffsets
    [[deprecated("Use field access instead!")]] bool& dyn_m_MaintainPositionOffsets();
    // Get instance field reference: private System.Boolean m_MaintainRotationOffsets
    [[deprecated("Use field access instead!")]] bool& dyn_m_MaintainRotationOffsets();
    // public UnityEngine.Transform get_constrainedObject()
    // Offset: 0xA56DD8
    ::UnityEngine::Transform* get_constrainedObject();
    // public System.Void set_constrainedObject(UnityEngine.Transform value)
    // Offset: 0xA56DE0
    void set_constrainedObject(::UnityEngine::Transform* value);
    // public UnityEngine.Transform get_sourceObjectA()
    // Offset: 0xA56DE8
    ::UnityEngine::Transform* get_sourceObjectA();
    // public System.Void set_sourceObjectA(UnityEngine.Transform value)
    // Offset: 0xA56DF0
    void set_sourceObjectA(::UnityEngine::Transform* value);
    // public UnityEngine.Transform get_sourceObjectB()
    // Offset: 0xA56DF8
    ::UnityEngine::Transform* get_sourceObjectB();
    // public System.Void set_sourceObjectB(UnityEngine.Transform value)
    // Offset: 0xA56E00
    void set_sourceObjectB(::UnityEngine::Transform* value);
    // public System.Boolean get_blendPosition()
    // Offset: 0xA56E08
    bool get_blendPosition();
    // public System.Void set_blendPosition(System.Boolean value)
    // Offset: 0xA56E10
    void set_blendPosition(bool value);
    // public System.Boolean get_blendRotation()
    // Offset: 0xA56E1C
    bool get_blendRotation();
    // public System.Void set_blendRotation(System.Boolean value)
    // Offset: 0xA56E24
    void set_blendRotation(bool value);
    // public System.Single get_positionWeight()
    // Offset: 0xA56E30
    float get_positionWeight();
    // public System.Void set_positionWeight(System.Single value)
    // Offset: 0xA56E38
    void set_positionWeight(float value);
    // public System.Single get_rotationWeight()
    // Offset: 0xA56E40
    float get_rotationWeight();
    // public System.Void set_rotationWeight(System.Single value)
    // Offset: 0xA56E48
    void set_rotationWeight(float value);
    // public System.Boolean get_maintainPositionOffsets()
    // Offset: 0xA56E50
    bool get_maintainPositionOffsets();
    // public System.Void set_maintainPositionOffsets(System.Boolean value)
    // Offset: 0xA56E58
    void set_maintainPositionOffsets(bool value);
    // public System.Boolean get_maintainRotationOffsets()
    // Offset: 0xA56E64
    bool get_maintainRotationOffsets();
    // public System.Void set_maintainRotationOffsets(System.Boolean value)
    // Offset: 0xA56E6C
    void set_maintainRotationOffsets(bool value);
    // private System.String UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendPositionBoolProperty()
    // Offset: 0xA56E78
    ::StringW UnityEngine_Animations_Rigging_IBlendConstraintData_get_blendPositionBoolProperty();
    // private System.String UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendRotationBoolProperty()
    // Offset: 0xA56E7C
    ::StringW UnityEngine_Animations_Rigging_IBlendConstraintData_get_blendRotationBoolProperty();
    // private System.String UnityEngine.Animations.Rigging.IBlendConstraintData.get_positionWeightFloatProperty()
    // Offset: 0xA56E80
    ::StringW UnityEngine_Animations_Rigging_IBlendConstraintData_get_positionWeightFloatProperty();
    // private System.String UnityEngine.Animations.Rigging.IBlendConstraintData.get_rotationWeightFloatProperty()
    // Offset: 0xA56E84
    ::StringW UnityEngine_Animations_Rigging_IBlendConstraintData_get_rotationWeightFloatProperty();
    // private System.Boolean UnityEngine.Animations.Rigging.IAnimationJobData.IsValid()
    // Offset: 0xA56E88
    bool UnityEngine_Animations_Rigging_IAnimationJobData_IsValid();
    // private System.Void UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues()
    // Offset: 0xA56E90
    void UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues();
  }; // UnityEngine.Animations.Rigging.BlendConstraintData
  #pragma pack(pop)
  static check_size<sizeof(BlendConstraintData), 37 + sizeof(bool)> __UnityEngine_Animations_Rigging_BlendConstraintDataSizeCheck;
  static_assert(sizeof(BlendConstraintData) == 0x26);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::get_constrainedObject
// Il2CppName: get_constrainedObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::Animations::Rigging::BlendConstraintData::*)()>(&UnityEngine::Animations::Rigging::BlendConstraintData::get_constrainedObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "get_constrainedObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::set_constrainedObject
// Il2CppName: set_constrainedObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::BlendConstraintData::*)(::UnityEngine::Transform*)>(&UnityEngine::Animations::Rigging::BlendConstraintData::set_constrainedObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "set_constrainedObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::get_sourceObjectA
// Il2CppName: get_sourceObjectA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::Animations::Rigging::BlendConstraintData::*)()>(&UnityEngine::Animations::Rigging::BlendConstraintData::get_sourceObjectA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "get_sourceObjectA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::set_sourceObjectA
// Il2CppName: set_sourceObjectA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::BlendConstraintData::*)(::UnityEngine::Transform*)>(&UnityEngine::Animations::Rigging::BlendConstraintData::set_sourceObjectA)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "set_sourceObjectA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::get_sourceObjectB
// Il2CppName: get_sourceObjectB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::Animations::Rigging::BlendConstraintData::*)()>(&UnityEngine::Animations::Rigging::BlendConstraintData::get_sourceObjectB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "get_sourceObjectB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::set_sourceObjectB
// Il2CppName: set_sourceObjectB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::BlendConstraintData::*)(::UnityEngine::Transform*)>(&UnityEngine::Animations::Rigging::BlendConstraintData::set_sourceObjectB)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "set_sourceObjectB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::get_blendPosition
// Il2CppName: get_blendPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::BlendConstraintData::*)()>(&UnityEngine::Animations::Rigging::BlendConstraintData::get_blendPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "get_blendPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::set_blendPosition
// Il2CppName: set_blendPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::BlendConstraintData::*)(bool)>(&UnityEngine::Animations::Rigging::BlendConstraintData::set_blendPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "set_blendPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::get_blendRotation
// Il2CppName: get_blendRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::BlendConstraintData::*)()>(&UnityEngine::Animations::Rigging::BlendConstraintData::get_blendRotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "get_blendRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::set_blendRotation
// Il2CppName: set_blendRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::BlendConstraintData::*)(bool)>(&UnityEngine::Animations::Rigging::BlendConstraintData::set_blendRotation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "set_blendRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::get_positionWeight
// Il2CppName: get_positionWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animations::Rigging::BlendConstraintData::*)()>(&UnityEngine::Animations::Rigging::BlendConstraintData::get_positionWeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "get_positionWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::set_positionWeight
// Il2CppName: set_positionWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::BlendConstraintData::*)(float)>(&UnityEngine::Animations::Rigging::BlendConstraintData::set_positionWeight)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "set_positionWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::get_rotationWeight
// Il2CppName: get_rotationWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animations::Rigging::BlendConstraintData::*)()>(&UnityEngine::Animations::Rigging::BlendConstraintData::get_rotationWeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "get_rotationWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::set_rotationWeight
// Il2CppName: set_rotationWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::BlendConstraintData::*)(float)>(&UnityEngine::Animations::Rigging::BlendConstraintData::set_rotationWeight)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "set_rotationWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::get_maintainPositionOffsets
// Il2CppName: get_maintainPositionOffsets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::BlendConstraintData::*)()>(&UnityEngine::Animations::Rigging::BlendConstraintData::get_maintainPositionOffsets)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "get_maintainPositionOffsets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::set_maintainPositionOffsets
// Il2CppName: set_maintainPositionOffsets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::BlendConstraintData::*)(bool)>(&UnityEngine::Animations::Rigging::BlendConstraintData::set_maintainPositionOffsets)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "set_maintainPositionOffsets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::get_maintainRotationOffsets
// Il2CppName: get_maintainRotationOffsets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::BlendConstraintData::*)()>(&UnityEngine::Animations::Rigging::BlendConstraintData::get_maintainRotationOffsets)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "get_maintainRotationOffsets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::set_maintainRotationOffsets
// Il2CppName: set_maintainRotationOffsets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::BlendConstraintData::*)(bool)>(&UnityEngine::Animations::Rigging::BlendConstraintData::set_maintainRotationOffsets)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "set_maintainRotationOffsets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IBlendConstraintData_get_blendPositionBoolProperty
// Il2CppName: UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendPositionBoolProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Animations::Rigging::BlendConstraintData::*)()>(&UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IBlendConstraintData_get_blendPositionBoolProperty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendPositionBoolProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IBlendConstraintData_get_blendRotationBoolProperty
// Il2CppName: UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendRotationBoolProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Animations::Rigging::BlendConstraintData::*)()>(&UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IBlendConstraintData_get_blendRotationBoolProperty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendRotationBoolProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IBlendConstraintData_get_positionWeightFloatProperty
// Il2CppName: UnityEngine.Animations.Rigging.IBlendConstraintData.get_positionWeightFloatProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Animations::Rigging::BlendConstraintData::*)()>(&UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IBlendConstraintData_get_positionWeightFloatProperty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "UnityEngine.Animations.Rigging.IBlendConstraintData.get_positionWeightFloatProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IBlendConstraintData_get_rotationWeightFloatProperty
// Il2CppName: UnityEngine.Animations.Rigging.IBlendConstraintData.get_rotationWeightFloatProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Animations::Rigging::BlendConstraintData::*)()>(&UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IBlendConstraintData_get_rotationWeightFloatProperty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "UnityEngine.Animations.Rigging.IBlendConstraintData.get_rotationWeightFloatProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid
// Il2CppName: UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::BlendConstraintData::*)()>(&UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "UnityEngine.Animations.Rigging.IAnimationJobData.IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues
// Il2CppName: UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::BlendConstraintData::*)()>(&UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::BlendConstraintData), "UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
