// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: IAnimatableProperty`1<T>
  template<typename T>
  class IAnimatableProperty_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::UnityEngine::Animations::Rigging::IAnimatableProperty_1, "UnityEngine.Animations.Rigging", "IAnimatableProperty`1");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Animations.Rigging.IAnimatableProperty`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class IAnimatableProperty_1 {
    public:
    // public T Get(UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xFFFFFFFFFFFFFFFF
    T Get(::UnityEngine::Animations::AnimationStream stream) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IAnimatableProperty_1::Get");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IAnimatableProperty_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method, stream);
    }
    // public System.Void Set(UnityEngine.Animations.AnimationStream stream, T value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Set(::UnityEngine::Animations::AnimationStream stream, T value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IAnimatableProperty_1::Set");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IAnimatableProperty_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, value);
    }
  }; // UnityEngine.Animations.Rigging.IAnimatableProperty`1
  // Could not write size check! Type: UnityEngine.Animations.Rigging.IAnimatableProperty`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
