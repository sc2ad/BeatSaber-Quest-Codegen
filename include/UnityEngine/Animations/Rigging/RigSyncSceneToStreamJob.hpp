// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Animations.IAnimationJob
#include "UnityEngine/Animations/IAnimationJob.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
// Including type: UnityEngine.Animations.PropertyStreamHandle
#include "UnityEngine/Animations/PropertyStreamHandle.hpp"
// Including type: UnityEngine.Animations.TransformSceneHandle
#include "UnityEngine/Animations/TransformSceneHandle.hpp"
// Including type: UnityEngine.Animations.TransformStreamHandle
#include "UnityEngine/Animations/TransformStreamHandle.hpp"
// Including type: UnityEngine.Animations.PropertySceneHandle
#include "UnityEngine/Animations/PropertySceneHandle.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Animations
namespace UnityEngine::Animations {
  // Forward declaring type: AnimationStream
  struct AnimationStream;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Animator
  class Animator;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Component
  class Component;
}
// Completed forward declares
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: RigSyncSceneToStreamJob
  struct RigSyncSceneToStreamJob;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob, "UnityEngine.Animations.Rigging", "RigSyncSceneToStreamJob");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob
  // [TokenAttribute] Offset: FFFFFFFF
  // [BurstCompileAttribute] Offset: FFFFFFFF
  struct RigSyncSceneToStreamJob/*, public ::System::ValueType, public ::UnityEngine::Animations::IAnimationJob*/ {
    public:
    // Nested type: ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer
    struct TransformSyncer;
    // Nested type: ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer
    struct PropertySyncer;
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/UnityEngine.Animations.Rigging.TransformSyncer
    // [TokenAttribute] Offset: FFFFFFFF
    struct TransformSyncer/*, public ::System::ValueType, public ::System::IDisposable*/ {
      public:
      public:
      // public Unity.Collections.NativeArray`1<UnityEngine.Animations.TransformSceneHandle> sceneHandles
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::TransformSceneHandle> sceneHandles;
      // public Unity.Collections.NativeArray`1<UnityEngine.Animations.TransformStreamHandle> streamHandles
      // Size: 0xFFFFFFFF
      // Offset: 0x10
      ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::TransformStreamHandle> streamHandles;
      public:
      // Creating value type constructor for type: TransformSyncer
      constexpr TransformSyncer(::Unity::Collections::NativeArray_1<::UnityEngine::Animations::TransformSceneHandle> sceneHandles_ = {}, ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::TransformStreamHandle> streamHandles_ = {}) noexcept : sceneHandles{sceneHandles_}, streamHandles{streamHandles_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Creating interface conversion operator: operator ::System::IDisposable
      operator ::System::IDisposable() noexcept {
        return *reinterpret_cast<::System::IDisposable*>(this);
      }
      // Get instance field reference: public Unity.Collections.NativeArray`1<UnityEngine.Animations.TransformSceneHandle> sceneHandles
      [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::TransformSceneHandle>& dyn_sceneHandles();
      // Get instance field reference: public Unity.Collections.NativeArray`1<UnityEngine.Animations.TransformStreamHandle> streamHandles
      [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::TransformStreamHandle>& dyn_streamHandles();
      // static public UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/UnityEngine.Animations.Rigging.TransformSyncer Create(System.Int32 size)
      // Offset: 0x11F3634
      static ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer Create(int size);
      // public System.Void Dispose()
      // Offset: 0xA584FC
      void Dispose();
      // public System.Void BindAt(System.Int32 index, UnityEngine.Animator animator, UnityEngine.Transform transform)
      // Offset: 0xA58504
      void BindAt(int index, ::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform);
      // public System.Void Sync(ref UnityEngine.Animations.AnimationStream stream)
      // Offset: 0xA5850C
      void Sync(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    }; // UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/UnityEngine.Animations.Rigging.TransformSyncer
    // WARNING Not writing size check since size may be invalid!
    // WARNING Size may be invalid!
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/UnityEngine.Animations.Rigging.PropertySyncer
    // [TokenAttribute] Offset: FFFFFFFF
    struct PropertySyncer/*, public ::System::ValueType, public ::System::IDisposable*/ {
      public:
      public:
      // public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertySceneHandle> sceneHandles
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertySceneHandle> sceneHandles;
      // public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertyStreamHandle> streamHandles
      // Size: 0xFFFFFFFF
      // Offset: 0x10
      ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle> streamHandles;
      // public Unity.Collections.NativeArray`1<System.Single> buffer
      // Size: 0xFFFFFFFF
      // Offset: 0x20
      ::Unity::Collections::NativeArray_1<float> buffer;
      public:
      // Creating value type constructor for type: PropertySyncer
      constexpr PropertySyncer(::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertySceneHandle> sceneHandles_ = {}, ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle> streamHandles_ = {}, ::Unity::Collections::NativeArray_1<float> buffer_ = {}) noexcept : sceneHandles{sceneHandles_}, streamHandles{streamHandles_}, buffer{buffer_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Creating interface conversion operator: operator ::System::IDisposable
      operator ::System::IDisposable() noexcept {
        return *reinterpret_cast<::System::IDisposable*>(this);
      }
      // Get instance field reference: public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertySceneHandle> sceneHandles
      [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertySceneHandle>& dyn_sceneHandles();
      // Get instance field reference: public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertyStreamHandle> streamHandles
      [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>& dyn_streamHandles();
      // Get instance field reference: public Unity.Collections.NativeArray`1<System.Single> buffer
      [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<float>& dyn_buffer();
      // static public UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/UnityEngine.Animations.Rigging.PropertySyncer Create(System.Int32 size)
      // Offset: 0x11F33C0
      static ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer Create(int size);
      // public System.Void Dispose()
      // Offset: 0xA584DC
      void Dispose();
      // public System.Void BindAt(System.Int32 index, UnityEngine.Animator animator, UnityEngine.Component component, System.String property)
      // Offset: 0xA584E4
      void BindAt(int index, ::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::StringW property);
      // public System.Void Sync(ref UnityEngine.Animations.AnimationStream stream)
      // Offset: 0xA584EC
      void Sync(ByRef<::UnityEngine::Animations::AnimationStream> stream);
      // public Unity.Collections.NativeArray`1<System.Single> StreamValues(ref UnityEngine.Animations.AnimationStream stream)
      // Offset: 0xA584F4
      ::Unity::Collections::NativeArray_1<float> StreamValues(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    }; // UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/UnityEngine.Animations.Rigging.PropertySyncer
    // WARNING Not writing size check since size may be invalid!
    public:
    // public UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/UnityEngine.Animations.Rigging.TransformSyncer transformSyncer
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer transformSyncer;
    // public UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/UnityEngine.Animations.Rigging.PropertySyncer propertySyncer
    // Size: 0xFFFFFFFF
    // Offset: 0x20
    ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer propertySyncer;
    // public UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/UnityEngine.Animations.Rigging.PropertySyncer rigWeightSyncer
    // Size: 0xFFFFFFFF
    // Offset: 0x50
    ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer rigWeightSyncer;
    // public UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/UnityEngine.Animations.Rigging.PropertySyncer constraintWeightSyncer
    // Size: 0xFFFFFFFF
    // Offset: 0x80
    ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer constraintWeightSyncer;
    // public Unity.Collections.NativeArray`1<System.Single> rigStates
    // Size: 0xFFFFFFFF
    // Offset: 0xB0
    ::Unity::Collections::NativeArray_1<float> rigStates;
    // public Unity.Collections.NativeArray`1<System.Int32> rigConstraintEndIdx
    // Size: 0xFFFFFFFF
    // Offset: 0xC0
    ::Unity::Collections::NativeArray_1<int> rigConstraintEndIdx;
    // public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertyStreamHandle> modulatedConstraintWeights
    // Size: 0xFFFFFFFF
    // Offset: 0xD0
    ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle> modulatedConstraintWeights;
    public:
    // Creating value type constructor for type: RigSyncSceneToStreamJob
    constexpr RigSyncSceneToStreamJob(::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer transformSyncer_ = {}, ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer propertySyncer_ = {}, ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer rigWeightSyncer_ = {}, ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer constraintWeightSyncer_ = {}, ::Unity::Collections::NativeArray_1<float> rigStates_ = {}, ::Unity::Collections::NativeArray_1<int> rigConstraintEndIdx_ = {}, ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle> modulatedConstraintWeights_ = {}) noexcept : transformSyncer{transformSyncer_}, propertySyncer{propertySyncer_}, rigWeightSyncer{rigWeightSyncer_}, constraintWeightSyncer{constraintWeightSyncer_}, rigStates{rigStates_}, rigConstraintEndIdx{rigConstraintEndIdx_}, modulatedConstraintWeights{modulatedConstraintWeights_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::Animations::IAnimationJob
    operator ::UnityEngine::Animations::IAnimationJob() noexcept {
      return *reinterpret_cast<::UnityEngine::Animations::IAnimationJob*>(this);
    }
    // Get instance field reference: public UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/UnityEngine.Animations.Rigging.TransformSyncer transformSyncer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer& dyn_transformSyncer();
    // Get instance field reference: public UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/UnityEngine.Animations.Rigging.PropertySyncer propertySyncer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer& dyn_propertySyncer();
    // Get instance field reference: public UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/UnityEngine.Animations.Rigging.PropertySyncer rigWeightSyncer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer& dyn_rigWeightSyncer();
    // Get instance field reference: public UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/UnityEngine.Animations.Rigging.PropertySyncer constraintWeightSyncer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer& dyn_constraintWeightSyncer();
    // Get instance field reference: public Unity.Collections.NativeArray`1<System.Single> rigStates
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<float>& dyn_rigStates();
    // Get instance field reference: public Unity.Collections.NativeArray`1<System.Int32> rigConstraintEndIdx
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<int>& dyn_rigConstraintEndIdx();
    // Get instance field reference: public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertyStreamHandle> modulatedConstraintWeights
    [[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>& dyn_modulatedConstraintWeights();
    // public System.Void ProcessRootMotion(UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA5849C
    void ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream);
    // public System.Void ProcessAnimation(UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA584A0
    void ProcessAnimation(::UnityEngine::Animations::AnimationStream stream);
  }; // UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer, "UnityEngine.Animations.Rigging", "RigSyncSceneToStreamJob/PropertySyncer");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer, "UnityEngine.Animations.Rigging", "RigSyncSceneToStreamJob/TransformSyncer");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::ProcessRootMotion
// Il2CppName: ProcessRootMotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::*)(::UnityEngine::Animations::AnimationStream)>(&UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::ProcessRootMotion)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob), "ProcessRootMotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::ProcessAnimation
// Il2CppName: ProcessAnimation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::*)(::UnityEngine::Animations::AnimationStream)>(&UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::ProcessAnimation)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob), "ProcessAnimation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
