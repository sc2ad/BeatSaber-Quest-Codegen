// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle
#include "UnityEngine/Animations/Rigging/ReadOnlyTransformHandle.hpp"
// Including type: UnityEngine.Animations.Rigging.ReadWriteTransformHandle
#include "UnityEngine/Animations/Rigging/ReadWriteTransformHandle.hpp"
// Including type: UnityEngine.Animations.PropertyStreamHandle
#include "UnityEngine/Animations/PropertyStreamHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Animator
  class Animator;
  // Forward declaring type: Component
  class Component;
}
// Forward declaring namespace: UnityEngine::Animations::Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: WeightedTransformArray
  struct WeightedTransformArray;
}
// Forward declaring namespace: Unity::Collections
namespace Unity::Collections {
  // Forward declaring type: NativeArray`1<T>
  template<typename T>
  struct NativeArray_1;
}
// Completed forward declares
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: WeightedTransformArrayBinder
  class WeightedTransformArrayBinder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Animations::Rigging::WeightedTransformArrayBinder);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::WeightedTransformArrayBinder*, "UnityEngine.Animations.Rigging", "WeightedTransformArrayBinder");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Animations.Rigging.WeightedTransformArrayBinder
  // [TokenAttribute] Offset: FFFFFFFF
  class WeightedTransformArrayBinder : public ::Il2CppObject {
    public:
    // public System.Void .ctor()
    // Offset: 0x1C09224
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WeightedTransformArrayBinder* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WeightedTransformArrayBinder*, creationType>()));
    }
    // static public System.Void BindReadOnlyTransforms(UnityEngine.Animator animator, UnityEngine.Component component, UnityEngine.Animations.Rigging.WeightedTransformArray weightedTransformArray, out Unity.Collections.NativeArray`1<UnityEngine.Animations.Rigging.ReadOnlyTransformHandle> transforms)
    // Offset: 0x1C08E20
    static void BindReadOnlyTransforms(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::UnityEngine::Animations::Rigging::WeightedTransformArray weightedTransformArray, ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle>> transforms);
    // static public System.Void BindReadWriteTransforms(UnityEngine.Animator animator, UnityEngine.Component component, UnityEngine.Animations.Rigging.WeightedTransformArray weightedTransformArray, out Unity.Collections.NativeArray`1<UnityEngine.Animations.Rigging.ReadWriteTransformHandle> transforms)
    // Offset: 0x1C08F0C
    static void BindReadWriteTransforms(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::UnityEngine::Animations::Rigging::WeightedTransformArray weightedTransformArray, ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle>> transforms);
    // static public System.Void BindWeights(UnityEngine.Animator animator, UnityEngine.Component component, UnityEngine.Animations.Rigging.WeightedTransformArray weightedTransformArray, System.String name, out Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertyStreamHandle> weights)
    // Offset: 0x1C08FEC
    static void BindWeights(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::UnityEngine::Animations::Rigging::WeightedTransformArray weightedTransformArray, ::StringW name, ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>> weights);
  }; // UnityEngine.Animations.Rigging.WeightedTransformArrayBinder
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindReadOnlyTransforms
// Il2CppName: BindReadOnlyTransforms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Animator*, ::UnityEngine::Component*, ::UnityEngine::Animations::Rigging::WeightedTransformArray, ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle>>)>(&UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindReadOnlyTransforms)> {
  static const MethodInfo* get() {
    static auto* animator = &::il2cpp_utils::GetClassFromName("UnityEngine", "Animator")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    static auto* weightedTransformArray = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "WeightedTransformArray")->byval_arg;
    static auto* transforms = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeArray`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "ReadOnlyTransformHandle")})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArrayBinder*), "BindReadOnlyTransforms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{animator, component, weightedTransformArray, transforms});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindReadWriteTransforms
// Il2CppName: BindReadWriteTransforms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Animator*, ::UnityEngine::Component*, ::UnityEngine::Animations::Rigging::WeightedTransformArray, ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle>>)>(&UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindReadWriteTransforms)> {
  static const MethodInfo* get() {
    static auto* animator = &::il2cpp_utils::GetClassFromName("UnityEngine", "Animator")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    static auto* weightedTransformArray = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "WeightedTransformArray")->byval_arg;
    static auto* transforms = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeArray`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "ReadWriteTransformHandle")})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArrayBinder*), "BindReadWriteTransforms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{animator, component, weightedTransformArray, transforms});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindWeights
// Il2CppName: BindWeights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Animator*, ::UnityEngine::Component*, ::UnityEngine::Animations::Rigging::WeightedTransformArray, ::StringW, ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>>)>(&UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindWeights)> {
  static const MethodInfo* get() {
    static auto* animator = &::il2cpp_utils::GetClassFromName("UnityEngine", "Animator")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    static auto* weightedTransformArray = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "WeightedTransformArray")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* weights = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeArray`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "PropertyStreamHandle")})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::WeightedTransformArrayBinder*), "BindWeights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{animator, component, weightedTransformArray, name, weights});
  }
};
