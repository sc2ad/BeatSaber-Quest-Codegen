// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Animations.Rigging.IAnimationJobData
#include "UnityEngine/Animations/Rigging/IAnimationJobData.hpp"
// Including type: UnityEngine.Animations.Rigging.IMultiReferentialConstraintData
#include "UnityEngine/Animations/Rigging/IMultiReferentialConstraintData.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: MultiReferentialConstraintData
  struct MultiReferentialConstraintData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::MultiReferentialConstraintData, "UnityEngine.Animations.Rigging", "MultiReferentialConstraintData");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Animations.Rigging.MultiReferentialConstraintData
  // [TokenAttribute] Offset: FFFFFFFF
  struct MultiReferentialConstraintData/*, public ::System::ValueType, public ::UnityEngine::Animations::Rigging::IAnimationJobData, public ::UnityEngine::Animations::Rigging::IMultiReferentialConstraintData*/ {
    public:
    public:
    // [SyncSceneToStreamAttribute] Offset: 0x97C730
    // private System.Int32 m_Driver
    // Size: 0x4
    // Offset: 0x0
    int m_Driver;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_Driver and: m_SourceObjects
    char __padding0[0x4] = {};
    // [SyncSceneToStreamAttribute] Offset: 0x97C768
    // private System.Collections.Generic.List`1<UnityEngine.Transform> m_SourceObjects
    // Size: 0x8
    // Offset: 0x8
    ::System::Collections::Generic::List_1<::UnityEngine::Transform*>* m_SourceObjects;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Transform*>*) == 0x8);
    public:
    // Creating value type constructor for type: MultiReferentialConstraintData
    constexpr MultiReferentialConstraintData(int m_Driver_ = {}, ::System::Collections::Generic::List_1<::UnityEngine::Transform*>* m_SourceObjects_ = {}) noexcept : m_Driver{m_Driver_}, m_SourceObjects{m_SourceObjects_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::Animations::Rigging::IAnimationJobData
    operator ::UnityEngine::Animations::Rigging::IAnimationJobData() noexcept {
      return *reinterpret_cast<::UnityEngine::Animations::Rigging::IAnimationJobData*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::Animations::Rigging::IMultiReferentialConstraintData
    operator ::UnityEngine::Animations::Rigging::IMultiReferentialConstraintData() noexcept {
      return *reinterpret_cast<::UnityEngine::Animations::Rigging::IMultiReferentialConstraintData*>(this);
    }
    // Get instance field reference: private System.Int32 m_Driver
    [[deprecated("Use field access instead!")]] int& dyn_m_Driver();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Transform> m_SourceObjects
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& dyn_m_SourceObjects();
    // public System.Int32 get_driver()
    // Offset: 0xA577C8
    int get_driver();
    // public System.Void set_driver(System.Int32 value)
    // Offset: 0xA577D0
    void set_driver(int value);
    // public System.Collections.Generic.List`1<UnityEngine.Transform> get_sourceObjects()
    // Offset: 0xA577D8
    ::System::Collections::Generic::List_1<::UnityEngine::Transform*>* get_sourceObjects();
    // public System.Void set_sourceObjects(System.Collections.Generic.List`1<UnityEngine.Transform> value)
    // Offset: 0xA577E0
    void set_sourceObjects(::System::Collections::Generic::List_1<::UnityEngine::Transform*>* value);
    // private UnityEngine.Transform[] UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_sourceObjects()
    // Offset: 0xA577E8
    ::ArrayW<::UnityEngine::Transform*> UnityEngine_Animations_Rigging_IMultiReferentialConstraintData_get_sourceObjects();
    // private System.Int32 UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverValue()
    // Offset: 0xA577F0
    int UnityEngine_Animations_Rigging_IMultiReferentialConstraintData_get_driverValue();
    // private System.String UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverIntProperty()
    // Offset: 0xA577F8
    ::StringW UnityEngine_Animations_Rigging_IMultiReferentialConstraintData_get_driverIntProperty();
    // private System.Boolean UnityEngine.Animations.Rigging.IAnimationJobData.IsValid()
    // Offset: 0xA577FC
    bool UnityEngine_Animations_Rigging_IAnimationJobData_IsValid();
    // private System.Void UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues()
    // Offset: 0xA57804
    void UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues();
    // public System.Void UpdateDriver()
    // Offset: 0xA5780C
    void UpdateDriver();
  }; // UnityEngine.Animations.Rigging.MultiReferentialConstraintData
  #pragma pack(pop)
  static check_size<sizeof(MultiReferentialConstraintData), 8 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::Transform*>*)> __UnityEngine_Animations_Rigging_MultiReferentialConstraintDataSizeCheck;
  static_assert(sizeof(MultiReferentialConstraintData) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::MultiReferentialConstraintData::get_driver
// Il2CppName: get_driver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animations::Rigging::MultiReferentialConstraintData::*)()>(&UnityEngine::Animations::Rigging::MultiReferentialConstraintData::get_driver)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::MultiReferentialConstraintData), "get_driver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::MultiReferentialConstraintData::set_driver
// Il2CppName: set_driver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::MultiReferentialConstraintData::*)(int)>(&UnityEngine::Animations::Rigging::MultiReferentialConstraintData::set_driver)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::MultiReferentialConstraintData), "set_driver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::MultiReferentialConstraintData::get_sourceObjects
// Il2CppName: get_sourceObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::Transform*>* (UnityEngine::Animations::Rigging::MultiReferentialConstraintData::*)()>(&UnityEngine::Animations::Rigging::MultiReferentialConstraintData::get_sourceObjects)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::MultiReferentialConstraintData), "get_sourceObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::MultiReferentialConstraintData::set_sourceObjects
// Il2CppName: set_sourceObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::MultiReferentialConstraintData::*)(::System::Collections::Generic::List_1<::UnityEngine::Transform*>*)>(&UnityEngine::Animations::Rigging::MultiReferentialConstraintData::set_sourceObjects)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::MultiReferentialConstraintData), "set_sourceObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IMultiReferentialConstraintData_get_sourceObjects
// Il2CppName: UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_sourceObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Transform*> (UnityEngine::Animations::Rigging::MultiReferentialConstraintData::*)()>(&UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IMultiReferentialConstraintData_get_sourceObjects)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::MultiReferentialConstraintData), "UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_sourceObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IMultiReferentialConstraintData_get_driverValue
// Il2CppName: UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animations::Rigging::MultiReferentialConstraintData::*)()>(&UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IMultiReferentialConstraintData_get_driverValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::MultiReferentialConstraintData), "UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IMultiReferentialConstraintData_get_driverIntProperty
// Il2CppName: UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverIntProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Animations::Rigging::MultiReferentialConstraintData::*)()>(&UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IMultiReferentialConstraintData_get_driverIntProperty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::MultiReferentialConstraintData), "UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverIntProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid
// Il2CppName: UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::MultiReferentialConstraintData::*)()>(&UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::MultiReferentialConstraintData), "UnityEngine.Animations.Rigging.IAnimationJobData.IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues
// Il2CppName: UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::MultiReferentialConstraintData::*)()>(&UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::MultiReferentialConstraintData), "UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UpdateDriver
// Il2CppName: UpdateDriver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::MultiReferentialConstraintData::*)()>(&UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UpdateDriver)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::MultiReferentialConstraintData), "UpdateDriver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
