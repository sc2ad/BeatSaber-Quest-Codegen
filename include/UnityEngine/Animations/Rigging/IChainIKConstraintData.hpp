// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: IChainIKConstraintData
  class IChainIKConstraintData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Animations::Rigging::IChainIKConstraintData);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::IChainIKConstraintData*, "UnityEngine.Animations.Rigging", "IChainIKConstraintData");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Animations.Rigging.IChainIKConstraintData
  // [TokenAttribute] Offset: FFFFFFFF
  class IChainIKConstraintData {
    public:
    // public UnityEngine.Transform get_root()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Transform* get_root();
    // public UnityEngine.Transform get_tip()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Transform* get_tip();
    // public UnityEngine.Transform get_target()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Transform* get_target();
    // public System.Int32 get_maxIterations()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_maxIterations();
    // public System.Single get_tolerance()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_tolerance();
    // public System.Boolean get_maintainTargetPositionOffset()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_maintainTargetPositionOffset();
    // public System.Boolean get_maintainTargetRotationOffset()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_maintainTargetRotationOffset();
    // public System.String get_chainRotationWeightFloatProperty()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_chainRotationWeightFloatProperty();
    // public System.String get_tipRotationWeightFloatProperty()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_tipRotationWeightFloatProperty();
  }; // UnityEngine.Animations.Rigging.IChainIKConstraintData
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::IChainIKConstraintData::get_root
// Il2CppName: get_root
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::Animations::Rigging::IChainIKConstraintData::*)()>(&UnityEngine::Animations::Rigging::IChainIKConstraintData::get_root)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::IChainIKConstraintData*), "get_root", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::IChainIKConstraintData::get_tip
// Il2CppName: get_tip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::Animations::Rigging::IChainIKConstraintData::*)()>(&UnityEngine::Animations::Rigging::IChainIKConstraintData::get_tip)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::IChainIKConstraintData*), "get_tip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::IChainIKConstraintData::get_target
// Il2CppName: get_target
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::Animations::Rigging::IChainIKConstraintData::*)()>(&UnityEngine::Animations::Rigging::IChainIKConstraintData::get_target)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::IChainIKConstraintData*), "get_target", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::IChainIKConstraintData::get_maxIterations
// Il2CppName: get_maxIterations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animations::Rigging::IChainIKConstraintData::*)()>(&UnityEngine::Animations::Rigging::IChainIKConstraintData::get_maxIterations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::IChainIKConstraintData*), "get_maxIterations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::IChainIKConstraintData::get_tolerance
// Il2CppName: get_tolerance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animations::Rigging::IChainIKConstraintData::*)()>(&UnityEngine::Animations::Rigging::IChainIKConstraintData::get_tolerance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::IChainIKConstraintData*), "get_tolerance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::IChainIKConstraintData::get_maintainTargetPositionOffset
// Il2CppName: get_maintainTargetPositionOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::IChainIKConstraintData::*)()>(&UnityEngine::Animations::Rigging::IChainIKConstraintData::get_maintainTargetPositionOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::IChainIKConstraintData*), "get_maintainTargetPositionOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::IChainIKConstraintData::get_maintainTargetRotationOffset
// Il2CppName: get_maintainTargetRotationOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::IChainIKConstraintData::*)()>(&UnityEngine::Animations::Rigging::IChainIKConstraintData::get_maintainTargetRotationOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::IChainIKConstraintData*), "get_maintainTargetRotationOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::IChainIKConstraintData::get_chainRotationWeightFloatProperty
// Il2CppName: get_chainRotationWeightFloatProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Animations::Rigging::IChainIKConstraintData::*)()>(&UnityEngine::Animations::Rigging::IChainIKConstraintData::get_chainRotationWeightFloatProperty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::IChainIKConstraintData*), "get_chainRotationWeightFloatProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::IChainIKConstraintData::get_tipRotationWeightFloatProperty
// Il2CppName: get_tipRotationWeightFloatProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Animations::Rigging::IChainIKConstraintData::*)()>(&UnityEngine::Animations::Rigging::IChainIKConstraintData::get_tipRotationWeightFloatProperty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::IChainIKConstraintData*), "get_tipRotationWeightFloatProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
