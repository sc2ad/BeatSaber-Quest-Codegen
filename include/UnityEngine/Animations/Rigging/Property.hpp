// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Animations.Rigging.PropertyDescriptor
#include "UnityEngine/Animations/Rigging/PropertyDescriptor.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: Property
  struct Property;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::Property, "UnityEngine.Animations.Rigging", "Property");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Size: 0xD
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Animations.Rigging.Property
  // [TokenAttribute] Offset: FFFFFFFF
  struct Property/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.String name
    // Size: 0x8
    // Offset: 0x0
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.Animations.Rigging.PropertyDescriptor descriptor
    // Size: 0x5
    // Offset: 0x8
    ::UnityEngine::Animations::Rigging::PropertyDescriptor descriptor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animations::Rigging::PropertyDescriptor) == 0x5);
    public:
    // Creating value type constructor for type: Property
    constexpr Property(::StringW name_ = {}, ::UnityEngine::Animations::Rigging::PropertyDescriptor descriptor_ = {}) noexcept : name{name_}, descriptor{descriptor_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.String name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_name();
    // Get instance field reference: public UnityEngine.Animations.Rigging.PropertyDescriptor descriptor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::PropertyDescriptor& dyn_descriptor();
  }; // UnityEngine.Animations.Rigging.Property
  #pragma pack(pop)
  static check_size<sizeof(Property), 8 + sizeof(::UnityEngine::Animations::Rigging::PropertyDescriptor)> __UnityEngine_Animations_Rigging_PropertySizeCheck;
  static_assert(sizeof(Property) == 0xD);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
