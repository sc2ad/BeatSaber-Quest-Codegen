// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Animations.Rigging.RigProperties
#include "UnityEngine/Animations/Rigging/RigProperties.hpp"
// Including type: UnityEngine.Animations.Rigging.ConstraintProperties
#include "UnityEngine/Animations/Rigging/ConstraintProperties.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: SyncableProperties
  struct SyncableProperties;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::SyncableProperties, "UnityEngine.Animations.Rigging", "SyncableProperties");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Animations.Rigging.SyncableProperties
  // [TokenAttribute] Offset: FFFFFFFF
  struct SyncableProperties/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.Animations.Rigging.RigProperties rig
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Animations::Rigging::RigProperties rig;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animations::Rigging::RigProperties) == 0x8);
    // public UnityEngine.Animations.Rigging.ConstraintProperties[] constraints
    // Size: 0x8
    // Offset: 0x8
    ::ArrayW<::UnityEngine::Animations::Rigging::ConstraintProperties> constraints;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Animations::Rigging::ConstraintProperties>) == 0x8);
    public:
    // Creating value type constructor for type: SyncableProperties
    constexpr SyncableProperties(::UnityEngine::Animations::Rigging::RigProperties rig_ = {}, ::ArrayW<::UnityEngine::Animations::Rigging::ConstraintProperties> constraints_ = ::ArrayW<::UnityEngine::Animations::Rigging::ConstraintProperties>(static_cast<void*>(nullptr))) noexcept : rig{rig_}, constraints{constraints_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public UnityEngine.Animations.Rigging.RigProperties rig
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::RigProperties& dyn_rig();
    // Get instance field reference: public UnityEngine.Animations.Rigging.ConstraintProperties[] constraints
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Animations::Rigging::ConstraintProperties>& dyn_constraints();
  }; // UnityEngine.Animations.Rigging.SyncableProperties
  #pragma pack(pop)
  static check_size<sizeof(SyncableProperties), 8 + sizeof(::ArrayW<::UnityEngine::Animations::Rigging::ConstraintProperties>)> __UnityEngine_Animations_Rigging_SyncablePropertiesSizeCheck;
  static_assert(sizeof(SyncableProperties) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
