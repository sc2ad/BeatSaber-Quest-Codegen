// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Animations.Rigging.IAnimationJobData
#include "UnityEngine/Animations/Rigging/IAnimationJobData.hpp"
// Including type: UnityEngine.Animations.Rigging.ITwistCorrectionData
#include "UnityEngine/Animations/Rigging/ITwistCorrectionData.hpp"
// Including type: UnityEngine.Animations.Rigging.WeightedTransformArray
#include "UnityEngine/Animations/Rigging/WeightedTransformArray.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Animations::Rigging
namespace UnityEngine::Animations::Rigging {
  // Skipping declaration: Axis because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Forward declaring type: TwistCorrectionData
  struct TwistCorrectionData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::TwistCorrectionData, "UnityEngine.Animations.Rigging", "TwistCorrectionData");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Size: 0x94
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Animations.Rigging.TwistCorrectionData
  // [TokenAttribute] Offset: FFFFFFFF
  struct TwistCorrectionData/*, public ::System::ValueType, public ::UnityEngine::Animations::Rigging::IAnimationJobData, public ::UnityEngine::Animations::Rigging::ITwistCorrectionData*/ {
    public:
    // Nested type: ::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis
    struct Axis;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.Animations.Rigging.TwistCorrectionData/UnityEngine.Animations.Rigging.Axis
    // [TokenAttribute] Offset: FFFFFFFF
    struct Axis/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: Axis
      constexpr Axis(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.Animations.Rigging.TwistCorrectionData/UnityEngine.Animations.Rigging.Axis X
      static constexpr const int X = 0;
      // Get static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/UnityEngine.Animations.Rigging.Axis X
      static ::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis _get_X();
      // Set static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/UnityEngine.Animations.Rigging.Axis X
      static void _set_X(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis value);
      // static field const value: static public UnityEngine.Animations.Rigging.TwistCorrectionData/UnityEngine.Animations.Rigging.Axis Y
      static constexpr const int Y = 1;
      // Get static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/UnityEngine.Animations.Rigging.Axis Y
      static ::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis _get_Y();
      // Set static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/UnityEngine.Animations.Rigging.Axis Y
      static void _set_Y(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis value);
      // static field const value: static public UnityEngine.Animations.Rigging.TwistCorrectionData/UnityEngine.Animations.Rigging.Axis Z
      static constexpr const int Z = 2;
      // Get static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/UnityEngine.Animations.Rigging.Axis Z
      static ::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis _get_Z();
      // Set static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/UnityEngine.Animations.Rigging.Axis Z
      static void _set_Z(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.Animations.Rigging.TwistCorrectionData/UnityEngine.Animations.Rigging.Axis
    #pragma pack(pop)
    static check_size<sizeof(TwistCorrectionData::Axis), 0 + sizeof(int)> __UnityEngine_Animations_Rigging_TwistCorrectionData_AxisSizeCheck;
    static_assert(sizeof(TwistCorrectionData::Axis) == 0x4);
    public:
    // [SyncSceneToStreamAttribute] Offset: 0x97CA38
    // private UnityEngine.Transform m_Source
    // Size: 0x8
    // Offset: 0x0
    ::UnityEngine::Transform* m_Source;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Animations.Rigging.TwistCorrectionData/UnityEngine.Animations.Rigging.Axis m_TwistAxis
    // Size: 0x4
    // Offset: 0x8
    ::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis m_TwistAxis;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis) == 0x4);
    // Padding between fields: m_TwistAxis and: m_TwistNodes
    char __padding1[0x4] = {};
    // [SyncSceneToStreamAttribute] Offset: 0x97CAA8
    // [RangeAttribute] Offset: 0x97CAA8
    // private UnityEngine.Animations.Rigging.WeightedTransformArray m_TwistNodes
    // Size: 0x84
    // Offset: 0x10
    ::UnityEngine::Animations::Rigging::WeightedTransformArray m_TwistNodes;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animations::Rigging::WeightedTransformArray) == 0x84);
    public:
    // Creating value type constructor for type: TwistCorrectionData
    constexpr TwistCorrectionData(::UnityEngine::Transform* m_Source_ = {}, ::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis m_TwistAxis_ = {}, ::UnityEngine::Animations::Rigging::WeightedTransformArray m_TwistNodes_ = {}) noexcept : m_Source{m_Source_}, m_TwistAxis{m_TwistAxis_}, m_TwistNodes{m_TwistNodes_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::Animations::Rigging::IAnimationJobData
    operator ::UnityEngine::Animations::Rigging::IAnimationJobData() noexcept {
      return *reinterpret_cast<::UnityEngine::Animations::Rigging::IAnimationJobData*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::Animations::Rigging::ITwistCorrectionData
    operator ::UnityEngine::Animations::Rigging::ITwistCorrectionData() noexcept {
      return *reinterpret_cast<::UnityEngine::Animations::Rigging::ITwistCorrectionData*>(this);
    }
    // Get instance field reference: private UnityEngine.Transform m_Source
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_m_Source();
    // Get instance field reference: private UnityEngine.Animations.Rigging.TwistCorrectionData/UnityEngine.Animations.Rigging.Axis m_TwistAxis
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis& dyn_m_TwistAxis();
    // Get instance field reference: private UnityEngine.Animations.Rigging.WeightedTransformArray m_TwistNodes
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransformArray& dyn_m_TwistNodes();
    // public UnityEngine.Transform get_sourceObject()
    // Offset: 0xA58614
    ::UnityEngine::Transform* get_sourceObject();
    // public System.Void set_sourceObject(UnityEngine.Transform value)
    // Offset: 0xA5861C
    void set_sourceObject(::UnityEngine::Transform* value);
    // public UnityEngine.Animations.Rigging.WeightedTransformArray get_twistNodes()
    // Offset: 0xA58624
    ::UnityEngine::Animations::Rigging::WeightedTransformArray get_twistNodes();
    // public System.Void set_twistNodes(UnityEngine.Animations.Rigging.WeightedTransformArray value)
    // Offset: 0xA58634
    void set_twistNodes(::UnityEngine::Animations::Rigging::WeightedTransformArray value);
    // public UnityEngine.Animations.Rigging.TwistCorrectionData/UnityEngine.Animations.Rigging.Axis get_twistAxis()
    // Offset: 0xA58650
    ::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis get_twistAxis();
    // public System.Void set_twistAxis(UnityEngine.Animations.Rigging.TwistCorrectionData/UnityEngine.Animations.Rigging.Axis value)
    // Offset: 0xA58658
    void set_twistAxis(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis value);
    // private UnityEngine.Transform UnityEngine.Animations.Rigging.ITwistCorrectionData.get_source()
    // Offset: 0xA58660
    ::UnityEngine::Transform* UnityEngine_Animations_Rigging_ITwistCorrectionData_get_source();
    // private UnityEngine.Vector3 UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistAxis()
    // Offset: 0xA5867C
    ::UnityEngine::Vector3 UnityEngine_Animations_Rigging_ITwistCorrectionData_get_twistAxis();
    // private System.String UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistNodesProperty()
    // Offset: 0xA58684
    ::StringW UnityEngine_Animations_Rigging_ITwistCorrectionData_get_twistNodesProperty();
    // static private UnityEngine.Vector3 Convert(UnityEngine.Animations.Rigging.TwistCorrectionData/UnityEngine.Animations.Rigging.Axis axis)
    // Offset: 0x11F5530
    static ::UnityEngine::Vector3 Convert(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis axis);
    // private System.Boolean UnityEngine.Animations.Rigging.IAnimationJobData.IsValid()
    // Offset: 0xA58688
    bool UnityEngine_Animations_Rigging_IAnimationJobData_IsValid();
    // private System.Void UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues()
    // Offset: 0xA58690
    void UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues();
  }; // UnityEngine.Animations.Rigging.TwistCorrectionData
  #pragma pack(pop)
  static check_size<sizeof(TwistCorrectionData), 16 + sizeof(::UnityEngine::Animations::Rigging::WeightedTransformArray)> __UnityEngine_Animations_Rigging_TwistCorrectionDataSizeCheck;
  static_assert(sizeof(TwistCorrectionData) == 0x94);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis, "UnityEngine.Animations.Rigging", "TwistCorrectionData/Axis");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::TwistCorrectionData::get_sourceObject
// Il2CppName: get_sourceObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::Animations::Rigging::TwistCorrectionData::*)()>(&UnityEngine::Animations::Rigging::TwistCorrectionData::get_sourceObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::TwistCorrectionData), "get_sourceObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::TwistCorrectionData::set_sourceObject
// Il2CppName: set_sourceObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::TwistCorrectionData::*)(::UnityEngine::Transform*)>(&UnityEngine::Animations::Rigging::TwistCorrectionData::set_sourceObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::TwistCorrectionData), "set_sourceObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::TwistCorrectionData::get_twistNodes
// Il2CppName: get_twistNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Animations::Rigging::WeightedTransformArray (UnityEngine::Animations::Rigging::TwistCorrectionData::*)()>(&UnityEngine::Animations::Rigging::TwistCorrectionData::get_twistNodes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::TwistCorrectionData), "get_twistNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::TwistCorrectionData::set_twistNodes
// Il2CppName: set_twistNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::TwistCorrectionData::*)(::UnityEngine::Animations::Rigging::WeightedTransformArray)>(&UnityEngine::Animations::Rigging::TwistCorrectionData::set_twistNodes)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "WeightedTransformArray")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::TwistCorrectionData), "set_twistNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::TwistCorrectionData::get_twistAxis
// Il2CppName: get_twistAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis (UnityEngine::Animations::Rigging::TwistCorrectionData::*)()>(&UnityEngine::Animations::Rigging::TwistCorrectionData::get_twistAxis)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::TwistCorrectionData), "get_twistAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::TwistCorrectionData::set_twistAxis
// Il2CppName: set_twistAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::TwistCorrectionData::*)(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis)>(&UnityEngine::Animations::Rigging::TwistCorrectionData::set_twistAxis)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "TwistCorrectionData/Axis")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::TwistCorrectionData), "set_twistAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_ITwistCorrectionData_get_source
// Il2CppName: UnityEngine.Animations.Rigging.ITwistCorrectionData.get_source
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (UnityEngine::Animations::Rigging::TwistCorrectionData::*)()>(&UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_ITwistCorrectionData_get_source)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::TwistCorrectionData), "UnityEngine.Animations.Rigging.ITwistCorrectionData.get_source", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_ITwistCorrectionData_get_twistAxis
// Il2CppName: UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Animations::Rigging::TwistCorrectionData::*)()>(&UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_ITwistCorrectionData_get_twistAxis)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::TwistCorrectionData), "UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_ITwistCorrectionData_get_twistNodesProperty
// Il2CppName: UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistNodesProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Animations::Rigging::TwistCorrectionData::*)()>(&UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_ITwistCorrectionData_get_twistNodesProperty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::TwistCorrectionData), "UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistNodesProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::TwistCorrectionData::Convert
// Il2CppName: Convert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis)>(&UnityEngine::Animations::Rigging::TwistCorrectionData::Convert)> {
  static const MethodInfo* get() {
    static auto* axis = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "TwistCorrectionData/Axis")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::TwistCorrectionData), "Convert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{axis});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid
// Il2CppName: UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::TwistCorrectionData::*)()>(&UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::TwistCorrectionData), "UnityEngine.Animations.Rigging.IAnimationJobData.IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues
// Il2CppName: UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::TwistCorrectionData::*)()>(&UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::TwistCorrectionData), "UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
