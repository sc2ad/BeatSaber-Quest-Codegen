// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Animations.Rigging.RigUtils
#include "UnityEngine/Animations/Rigging/RigUtils.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Animations.Rigging.IAnimationJobData
#include "UnityEngine/Animations/Rigging/IAnimationJobData.hpp"
// Including type: UnityEngine.Animations.Rigging.IRigSyncSceneToStreamData
#include "UnityEngine/Animations/Rigging/IRigSyncSceneToStreamData.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData, "UnityEngine.Animations.Rigging", "RigUtils/RigSyncSceneToStreamData");
// Type namespace: UnityEngine.Animations.Rigging
namespace UnityEngine::Animations::Rigging {
  // Size: 0x19
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Animations.Rigging.RigUtils/UnityEngine.Animations.Rigging.RigSyncSceneToStreamData
  // [TokenAttribute] Offset: FFFFFFFF
  struct RigUtils::RigSyncSceneToStreamData/*, public ::System::ValueType, public ::UnityEngine::Animations::Rigging::IAnimationJobData, public ::UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData*/ {
    public:
    public:
    // private UnityEngine.Transform[] <syncableTransforms>k__BackingField
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<::UnityEngine::Transform*> syncableTransforms;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Transform*>) == 0x8);
    // private UnityEngine.Animations.Rigging.SyncableProperties[] <syncableProperties>k__BackingField
    // Size: 0x8
    // Offset: 0x8
    ::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties> syncableProperties;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties>) == 0x8);
    // private System.Boolean[] <rigStates>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<bool> rigStates;
    // Field size check
    static_assert(sizeof(::ArrayW<bool>) == 0x8);
    // private readonly System.Boolean m_IsValid
    // Size: 0x1
    // Offset: 0x18
    bool m_IsValid;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: RigSyncSceneToStreamData
    constexpr RigSyncSceneToStreamData(::ArrayW<::UnityEngine::Transform*> syncableTransforms_ = ::ArrayW<::UnityEngine::Transform*>(static_cast<void*>(nullptr)), ::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties> syncableProperties_ = ::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties>(static_cast<void*>(nullptr)), ::ArrayW<bool> rigStates_ = ::ArrayW<bool>(static_cast<void*>(nullptr)), bool m_IsValid_ = {}) noexcept : syncableTransforms{syncableTransforms_}, syncableProperties{syncableProperties_}, rigStates{rigStates_}, m_IsValid{m_IsValid_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::Animations::Rigging::IAnimationJobData
    operator ::UnityEngine::Animations::Rigging::IAnimationJobData() noexcept {
      return *reinterpret_cast<::UnityEngine::Animations::Rigging::IAnimationJobData*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData
    operator ::UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData() noexcept {
      return *reinterpret_cast<::UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData*>(this);
    }
    // Get instance field reference: private UnityEngine.Transform[] <syncableTransforms>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& dyn_$syncableTransforms$k__BackingField();
    // Get instance field reference: private UnityEngine.Animations.Rigging.SyncableProperties[] <syncableProperties>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties>& dyn_$syncableProperties$k__BackingField();
    // Get instance field reference: private System.Boolean[] <rigStates>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<bool>& dyn_$rigStates$k__BackingField();
    // Get instance field reference: private readonly System.Boolean m_IsValid
    [[deprecated("Use field access instead!")]] bool& dyn_m_IsValid();
    // public UnityEngine.Transform[] get_syncableTransforms()
    // Offset: 0xA58558
    ::ArrayW<::UnityEngine::Transform*> get_syncableTransforms();
    // private System.Void set_syncableTransforms(UnityEngine.Transform[] value)
    // Offset: 0xA58560
    void set_syncableTransforms(::ArrayW<::UnityEngine::Transform*> value);
    // public UnityEngine.Animations.Rigging.SyncableProperties[] get_syncableProperties()
    // Offset: 0xA58568
    ::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties> get_syncableProperties();
    // private System.Void set_syncableProperties(UnityEngine.Animations.Rigging.SyncableProperties[] value)
    // Offset: 0xA58570
    void set_syncableProperties(::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties> value);
    // public System.Boolean[] get_rigStates()
    // Offset: 0xA58578
    ::ArrayW<bool> get_rigStates();
    // public System.Void set_rigStates(System.Boolean[] value)
    // Offset: 0xA58580
    void set_rigStates(::ArrayW<bool> value);
    // public System.Void .ctor(UnityEngine.Transform[] transforms, UnityEngine.Animations.Rigging.SyncableProperties[] properties, System.Int32 rigCount)
    // Offset: 0xA58550
    RigSyncSceneToStreamData(::ArrayW<::UnityEngine::Transform*> transforms, ::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties> properties, int rigCount);
    // static private System.Int32[] UniqueTransformIndices(UnityEngine.Transform[] transforms)
    // Offset: 0x11F5298
    static ::ArrayW<int> UniqueTransformIndices(::ArrayW<::UnityEngine::Transform*> transforms);
    // private System.Boolean UnityEngine.Animations.Rigging.IAnimationJobData.IsValid()
    // Offset: 0xA58588
    bool UnityEngine_Animations_Rigging_IAnimationJobData_IsValid();
    // private System.Void UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues()
    // Offset: 0xA58590
    void UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues();
  }; // UnityEngine.Animations.Rigging.RigUtils/UnityEngine.Animations.Rigging.RigSyncSceneToStreamData
  #pragma pack(pop)
  static check_size<sizeof(RigUtils::RigSyncSceneToStreamData), 24 + sizeof(bool)> __UnityEngine_Animations_Rigging_RigUtils_RigSyncSceneToStreamDataSizeCheck;
  static_assert(sizeof(RigUtils::RigSyncSceneToStreamData) == 0x19);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::get_syncableTransforms
// Il2CppName: get_syncableTransforms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Transform*> (UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::*)()>(&UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::get_syncableTransforms)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData), "get_syncableTransforms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::set_syncableTransforms
// Il2CppName: set_syncableTransforms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::*)(::ArrayW<::UnityEngine::Transform*>)>(&UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::set_syncableTransforms)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Transform"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData), "set_syncableTransforms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::get_syncableProperties
// Il2CppName: get_syncableProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties> (UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::*)()>(&UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::get_syncableProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData), "get_syncableProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::set_syncableProperties
// Il2CppName: set_syncableProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::*)(::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties>)>(&UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::set_syncableProperties)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine.Animations.Rigging", "SyncableProperties"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData), "set_syncableProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::get_rigStates
// Il2CppName: get_rigStates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<bool> (UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::*)()>(&UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::get_rigStates)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData), "get_rigStates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::set_rigStates
// Il2CppName: set_rigStates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::*)(::ArrayW<bool>)>(&UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::set_rigStates)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Boolean"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData), "set_rigStates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::RigSyncSceneToStreamData
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::UniqueTransformIndices
// Il2CppName: UniqueTransformIndices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (*)(::ArrayW<::UnityEngine::Transform*>)>(&UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::UniqueTransformIndices)> {
  static const MethodInfo* get() {
    static auto* transforms = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Transform"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData), "UniqueTransformIndices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transforms});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid
// Il2CppName: UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::*)()>(&UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData), "UnityEngine.Animations.Rigging.IAnimationJobData.IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues
// Il2CppName: UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::*)()>(&UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData), "UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
