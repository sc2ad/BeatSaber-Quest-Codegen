// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Animations.PropertySceneHandle
#include "UnityEngine/Animations/PropertySceneHandle.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: ValueType because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine.Animations
namespace UnityEngine::Animations {
  // Forward declaring type: AnimationSceneHandleUtility
  class AnimationSceneHandleUtility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Animations::AnimationSceneHandleUtility);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::AnimationSceneHandleUtility*, "UnityEngine.Animations", "AnimationSceneHandleUtility");
// Type namespace: UnityEngine.Animations
namespace UnityEngine::Animations {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Animations.AnimationSceneHandleUtility
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 932534
  // [MovedFromAttribute] Offset: 932534
  class AnimationSceneHandleUtility : public ::Il2CppObject {
    public:
    // static public System.Void ReadFloats(UnityEngine.Animations.AnimationStream stream, Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertySceneHandle> handles, Unity.Collections.NativeArray`1<System.Single> buffer)
    // Offset: 0x1B880F8
    static void ReadFloats(::UnityEngine::Animations::AnimationStream stream, ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertySceneHandle> handles, ::Unity::Collections::NativeArray_1<float> buffer);
    // static System.Int32 ValidateAndGetArrayCount(ref UnityEngine.Animations.AnimationStream stream, Unity.Collections.NativeArray`1<T0> handles, Unity.Collections.NativeArray`1<T1> buffer)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T0, class T1>
    static int ValidateAndGetArrayCount(ByRef<::UnityEngine::Animations::AnimationStream> stream, ::Unity::Collections::NativeArray_1<T0> handles, ::Unity::Collections::NativeArray_1<T1> buffer) {
      static_assert(std::is_convertible_v<T0, ::System::ValueType*>);
      static_assert(std::is_convertible_v<T1, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationSceneHandleUtility::ValidateAndGetArrayCount");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationSceneHandleUtility", "ValidateAndGetArrayCount", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T0>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(handles), ::il2cpp_utils::ExtractType(buffer)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T0>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get()})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, byref(stream), handles, buffer);
    }
    // static private System.Void ReadSceneFloatsInternal(ref UnityEngine.Animations.AnimationStream stream, System.Void* propertySceneHandles, System.Void* floatBuffer, System.Int32 count)
    // Offset: 0x1B88200
    static void ReadSceneFloatsInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, void* propertySceneHandles, void* floatBuffer, int count);
  }; // UnityEngine.Animations.AnimationSceneHandleUtility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::AnimationSceneHandleUtility::ReadFloats
// Il2CppName: ReadFloats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Animations::AnimationStream, ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertySceneHandle>, ::Unity::Collections::NativeArray_1<float>)>(&UnityEngine::Animations::AnimationSceneHandleUtility::ReadFloats)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    static auto* handles = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeArray`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "PropertySceneHandle")})->byval_arg;
    static auto* buffer = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Unity.Collections", "NativeArray`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::AnimationSceneHandleUtility*), "ReadFloats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, handles, buffer});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::AnimationSceneHandleUtility::ValidateAndGetArrayCount
// Il2CppName: ValidateAndGetArrayCount
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: UnityEngine::Animations::AnimationSceneHandleUtility::ReadSceneFloatsInternal
// Il2CppName: ReadSceneFloatsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::AnimationStream>, void*, void*, int)>(&UnityEngine::Animations::AnimationSceneHandleUtility::ReadSceneFloatsInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* propertySceneHandles = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* floatBuffer = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::AnimationSceneHandleUtility*), "ReadSceneFloatsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, propertySceneHandles, floatBuffer, count});
  }
};
