// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Animations
namespace UnityEngine::Animations {
  // Forward declaring type: AnimationStream
  struct AnimationStream;
}
// Completed forward declares
// Type namespace: UnityEngine.Animations
namespace UnityEngine::Animations {
  // Forward declaring type: PropertyStreamHandle
  struct PropertyStreamHandle;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::PropertyStreamHandle, "UnityEngine.Animations", "PropertyStreamHandle");
// Type namespace: UnityEngine.Animations
namespace UnityEngine::Animations {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Animations.PropertyStreamHandle
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 9323F0
  // [MovedFromAttribute] Offset: 9323F0
  struct PropertyStreamHandle/*, public ::System::ValueType*/ {
    public:
    public:
    // private System.UInt32 m_AnimatorBindingsVersion
    // Size: 0x4
    // Offset: 0x0
    uint m_AnimatorBindingsVersion;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.Int32 handleIndex
    // Size: 0x4
    // Offset: 0x4
    int handleIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 valueArrayIndex
    // Size: 0x4
    // Offset: 0x8
    int valueArrayIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 bindType
    // Size: 0x4
    // Offset: 0xC
    int bindType;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: PropertyStreamHandle
    constexpr PropertyStreamHandle(uint m_AnimatorBindingsVersion_ = {}, int handleIndex_ = {}, int valueArrayIndex_ = {}, int bindType_ = {}) noexcept : m_AnimatorBindingsVersion{m_AnimatorBindingsVersion_}, handleIndex{handleIndex_}, valueArrayIndex{valueArrayIndex_}, bindType{bindType_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private System.UInt32 m_AnimatorBindingsVersion
    [[deprecated("Use field access instead!")]] uint& dyn_m_AnimatorBindingsVersion();
    // Get instance field reference: private System.Int32 handleIndex
    [[deprecated("Use field access instead!")]] int& dyn_handleIndex();
    // Get instance field reference: private System.Int32 valueArrayIndex
    [[deprecated("Use field access instead!")]] int& dyn_valueArrayIndex();
    // Get instance field reference: private System.Int32 bindType
    [[deprecated("Use field access instead!")]] int& dyn_bindType();
    // private System.Boolean get_createdByNative()
    // Offset: 0xA790C4
    bool get_createdByNative();
    // private System.Boolean get_hasHandleIndex()
    // Offset: 0xA790E8
    bool get_hasHandleIndex();
    // private System.Boolean get_hasValueArrayIndex()
    // Offset: 0xA790F8
    bool get_hasValueArrayIndex();
    // private System.Boolean get_hasBindType()
    // Offset: 0xA79108
    bool get_hasBindType();
    // System.UInt32 get_animatorBindingsVersion()
    // Offset: 0xA79118
    uint get_animatorBindingsVersion();
    // private System.Boolean IsValidInternal(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA79074
    bool IsValidInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // private System.Boolean IsSameVersionAsStream(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA790D4
    bool IsSameVersionAsStream(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // private System.Boolean IsResolvedInternal(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA79120
    bool IsResolvedInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // private System.Void CheckIsValidAndResolve(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA79128
    void CheckIsValidAndResolve(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // public System.Single GetFloat(UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA79130
    float GetFloat(::UnityEngine::Animations::AnimationStream stream);
    // public System.Void SetFloat(UnityEngine.Animations.AnimationStream stream, System.Single value)
    // Offset: 0xA7916C
    void SetFloat(::UnityEngine::Animations::AnimationStream stream, float value);
    // public System.Int32 GetInt(UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA791A8
    int GetInt(::UnityEngine::Animations::AnimationStream stream);
    // public System.Void SetInt(UnityEngine.Animations.AnimationStream stream, System.Int32 value)
    // Offset: 0xA791E4
    void SetInt(::UnityEngine::Animations::AnimationStream stream, int value);
    // public System.Boolean GetBool(UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA79220
    bool GetBool(::UnityEngine::Animations::AnimationStream stream);
    // public System.Void SetBool(UnityEngine.Animations.AnimationStream stream, System.Boolean value)
    // Offset: 0xA79260
    void SetBool(::UnityEngine::Animations::AnimationStream stream, bool value);
    // private System.Void ResolveInternal(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA792A0
    void ResolveInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // private System.Single GetFloatInternal(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA792F0
    float GetFloatInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // private System.Void SetFloatInternal(ref UnityEngine.Animations.AnimationStream stream, System.Single value)
    // Offset: 0xA79340
    void SetFloatInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, float value);
    // private System.Int32 GetIntInternal(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA793A0
    int GetIntInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // private System.Void SetIntInternal(ref UnityEngine.Animations.AnimationStream stream, System.Int32 value)
    // Offset: 0xA793F0
    void SetIntInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, int value);
    // private System.Boolean GetBoolInternal(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA79448
    bool GetBoolInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // private System.Void SetBoolInternal(ref UnityEngine.Animations.AnimationStream stream, System.Boolean value)
    // Offset: 0xA79498
    void SetBoolInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, bool value);
    // static private System.Void ResolveInternal_Injected(ref UnityEngine.Animations.PropertyStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0x1B89BC0
    static void ResolveInternal_Injected(ByRef<::UnityEngine::Animations::PropertyStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // static private System.Single GetFloatInternal_Injected(ref UnityEngine.Animations.PropertyStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0x1B89C10
    static float GetFloatInternal_Injected(ByRef<::UnityEngine::Animations::PropertyStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // static private System.Void SetFloatInternal_Injected(ref UnityEngine.Animations.PropertyStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, System.Single value)
    // Offset: 0x1B89C60
    static void SetFloatInternal_Injected(ByRef<::UnityEngine::Animations::PropertyStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, float value);
    // static private System.Int32 GetIntInternal_Injected(ref UnityEngine.Animations.PropertyStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0x1B89CC0
    static int GetIntInternal_Injected(ByRef<::UnityEngine::Animations::PropertyStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // static private System.Void SetIntInternal_Injected(ref UnityEngine.Animations.PropertyStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, System.Int32 value)
    // Offset: 0x1B89D10
    static void SetIntInternal_Injected(ByRef<::UnityEngine::Animations::PropertyStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, int value);
    // static private System.Boolean GetBoolInternal_Injected(ref UnityEngine.Animations.PropertyStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0x1B89D68
    static bool GetBoolInternal_Injected(ByRef<::UnityEngine::Animations::PropertyStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // static private System.Void SetBoolInternal_Injected(ref UnityEngine.Animations.PropertyStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, System.Boolean value)
    // Offset: 0x1B89DB8
    static void SetBoolInternal_Injected(ByRef<::UnityEngine::Animations::PropertyStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, bool value);
  }; // UnityEngine.Animations.PropertyStreamHandle
  #pragma pack(pop)
  static check_size<sizeof(PropertyStreamHandle), 12 + sizeof(int)> __UnityEngine_Animations_PropertyStreamHandleSizeCheck;
  static_assert(sizeof(PropertyStreamHandle) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::get_createdByNative
// Il2CppName: get_createdByNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::PropertyStreamHandle::*)()>(&UnityEngine::Animations::PropertyStreamHandle::get_createdByNative)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "get_createdByNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::get_hasHandleIndex
// Il2CppName: get_hasHandleIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::PropertyStreamHandle::*)()>(&UnityEngine::Animations::PropertyStreamHandle::get_hasHandleIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "get_hasHandleIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::get_hasValueArrayIndex
// Il2CppName: get_hasValueArrayIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::PropertyStreamHandle::*)()>(&UnityEngine::Animations::PropertyStreamHandle::get_hasValueArrayIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "get_hasValueArrayIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::get_hasBindType
// Il2CppName: get_hasBindType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::PropertyStreamHandle::*)()>(&UnityEngine::Animations::PropertyStreamHandle::get_hasBindType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "get_hasBindType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::get_animatorBindingsVersion
// Il2CppName: get_animatorBindingsVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (UnityEngine::Animations::PropertyStreamHandle::*)()>(&UnityEngine::Animations::PropertyStreamHandle::get_animatorBindingsVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "get_animatorBindingsVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::IsValidInternal
// Il2CppName: IsValidInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::PropertyStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::PropertyStreamHandle::IsValidInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "IsValidInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::IsSameVersionAsStream
// Il2CppName: IsSameVersionAsStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::PropertyStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::PropertyStreamHandle::IsSameVersionAsStream)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "IsSameVersionAsStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::IsResolvedInternal
// Il2CppName: IsResolvedInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::PropertyStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::PropertyStreamHandle::IsResolvedInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "IsResolvedInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::CheckIsValidAndResolve
// Il2CppName: CheckIsValidAndResolve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::PropertyStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::PropertyStreamHandle::CheckIsValidAndResolve)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "CheckIsValidAndResolve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::GetFloat
// Il2CppName: GetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animations::PropertyStreamHandle::*)(::UnityEngine::Animations::AnimationStream)>(&UnityEngine::Animations::PropertyStreamHandle::GetFloat)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "GetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::SetFloat
// Il2CppName: SetFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::PropertyStreamHandle::*)(::UnityEngine::Animations::AnimationStream, float)>(&UnityEngine::Animations::PropertyStreamHandle::SetFloat)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "SetFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::GetInt
// Il2CppName: GetInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animations::PropertyStreamHandle::*)(::UnityEngine::Animations::AnimationStream)>(&UnityEngine::Animations::PropertyStreamHandle::GetInt)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "GetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::SetInt
// Il2CppName: SetInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::PropertyStreamHandle::*)(::UnityEngine::Animations::AnimationStream, int)>(&UnityEngine::Animations::PropertyStreamHandle::SetInt)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "SetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::GetBool
// Il2CppName: GetBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::PropertyStreamHandle::*)(::UnityEngine::Animations::AnimationStream)>(&UnityEngine::Animations::PropertyStreamHandle::GetBool)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "GetBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::SetBool
// Il2CppName: SetBool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::PropertyStreamHandle::*)(::UnityEngine::Animations::AnimationStream, bool)>(&UnityEngine::Animations::PropertyStreamHandle::SetBool)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "SetBool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::ResolveInternal
// Il2CppName: ResolveInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::PropertyStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::PropertyStreamHandle::ResolveInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "ResolveInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::GetFloatInternal
// Il2CppName: GetFloatInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Animations::PropertyStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::PropertyStreamHandle::GetFloatInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "GetFloatInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::SetFloatInternal
// Il2CppName: SetFloatInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::PropertyStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>, float)>(&UnityEngine::Animations::PropertyStreamHandle::SetFloatInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "SetFloatInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::GetIntInternal
// Il2CppName: GetIntInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Animations::PropertyStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::PropertyStreamHandle::GetIntInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "GetIntInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::SetIntInternal
// Il2CppName: SetIntInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::PropertyStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>, int)>(&UnityEngine::Animations::PropertyStreamHandle::SetIntInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "SetIntInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::GetBoolInternal
// Il2CppName: GetBoolInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::PropertyStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::PropertyStreamHandle::GetBoolInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "GetBoolInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::SetBoolInternal
// Il2CppName: SetBoolInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::PropertyStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>, bool)>(&UnityEngine::Animations::PropertyStreamHandle::SetBoolInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "SetBoolInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::ResolveInternal_Injected
// Il2CppName: ResolveInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::PropertyStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::PropertyStreamHandle::ResolveInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "PropertyStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "ResolveInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::GetFloatInternal_Injected
// Il2CppName: GetFloatInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(ByRef<::UnityEngine::Animations::PropertyStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::PropertyStreamHandle::GetFloatInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "PropertyStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "GetFloatInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::SetFloatInternal_Injected
// Il2CppName: SetFloatInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::PropertyStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, float)>(&UnityEngine::Animations::PropertyStreamHandle::SetFloatInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "PropertyStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "SetFloatInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::GetIntInternal_Injected
// Il2CppName: GetIntInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<::UnityEngine::Animations::PropertyStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::PropertyStreamHandle::GetIntInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "PropertyStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "GetIntInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::SetIntInternal_Injected
// Il2CppName: SetIntInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::PropertyStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, int)>(&UnityEngine::Animations::PropertyStreamHandle::SetIntInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "PropertyStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "SetIntInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::GetBoolInternal_Injected
// Il2CppName: GetBoolInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::UnityEngine::Animations::PropertyStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::PropertyStreamHandle::GetBoolInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "PropertyStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "GetBoolInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::PropertyStreamHandle::SetBoolInternal_Injected
// Il2CppName: SetBoolInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::PropertyStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, bool)>(&UnityEngine::Animations::PropertyStreamHandle::SetBoolInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "PropertyStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::PropertyStreamHandle), "SetBoolInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, value});
  }
};
