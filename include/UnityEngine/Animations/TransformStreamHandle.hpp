// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Animations
namespace UnityEngine::Animations {
  // Forward declaring type: AnimationStream
  struct AnimationStream;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
  // Forward declaring type: Quaternion
  struct Quaternion;
}
// Completed forward declares
// Type namespace: UnityEngine.Animations
namespace UnityEngine::Animations {
  // Forward declaring type: TransformStreamHandle
  struct TransformStreamHandle;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Animations::TransformStreamHandle, "UnityEngine.Animations", "TransformStreamHandle");
// Type namespace: UnityEngine.Animations
namespace UnityEngine::Animations {
  // Size: 0xC
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Animations.TransformStreamHandle
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 93236C
  // [NativeHeaderAttribute] Offset: 93236C
  // [MovedFromAttribute] Offset: 93236C
  struct TransformStreamHandle/*, public ::System::ValueType*/ {
    public:
    public:
    // private System.UInt32 m_AnimatorBindingsVersion
    // Size: 0x4
    // Offset: 0x0
    uint m_AnimatorBindingsVersion;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.Int32 handleIndex
    // Size: 0x4
    // Offset: 0x4
    int handleIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 skeletonIndex
    // Size: 0x4
    // Offset: 0x8
    int skeletonIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: TransformStreamHandle
    constexpr TransformStreamHandle(uint m_AnimatorBindingsVersion_ = {}, int handleIndex_ = {}, int skeletonIndex_ = {}) noexcept : m_AnimatorBindingsVersion{m_AnimatorBindingsVersion_}, handleIndex{handleIndex_}, skeletonIndex{skeletonIndex_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private System.UInt32 m_AnimatorBindingsVersion
    [[deprecated("Use field access instead!")]] uint& dyn_m_AnimatorBindingsVersion();
    // Get instance field reference: private System.Int32 handleIndex
    [[deprecated("Use field access instead!")]] int& dyn_handleIndex();
    // Get instance field reference: private System.Int32 skeletonIndex
    [[deprecated("Use field access instead!")]] int& dyn_skeletonIndex();
    // private System.Boolean get_createdByNative()
    // Offset: 0xA7996C
    bool get_createdByNative();
    // private System.Boolean get_hasHandleIndex()
    // Offset: 0xA79990
    bool get_hasHandleIndex();
    // private System.Boolean get_hasSkeletonIndex()
    // Offset: 0xA799A0
    bool get_hasSkeletonIndex();
    // System.UInt32 get_animatorBindingsVersion()
    // Offset: 0xA799B0
    uint get_animatorBindingsVersion();
    // public System.Boolean IsValid(UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA798C4
    bool IsValid(::UnityEngine::Animations::AnimationStream stream);
    // private System.Boolean IsValidInternal(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA79928
    bool IsValidInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // private System.Boolean IsSameVersionAsStream(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA7997C
    bool IsSameVersionAsStream(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // public System.Void Resolve(UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA799B8
    void Resolve(::UnityEngine::Animations::AnimationStream stream);
    // public System.Boolean IsResolved(UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA799F4
    bool IsResolved(::UnityEngine::Animations::AnimationStream stream);
    // private System.Boolean IsResolvedInternal(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA79A34
    bool IsResolvedInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // private System.Void CheckIsValidAndResolve(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA79A3C
    void CheckIsValidAndResolve(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // public UnityEngine.Vector3 GetPosition(UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA79A44
    ::UnityEngine::Vector3 GetPosition(::UnityEngine::Animations::AnimationStream stream);
    // public System.Void SetPosition(UnityEngine.Animations.AnimationStream stream, UnityEngine.Vector3 position)
    // Offset: 0xA79A98
    void SetPosition(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 position);
    // public UnityEngine.Quaternion GetRotation(UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA79B14
    ::UnityEngine::Quaternion GetRotation(::UnityEngine::Animations::AnimationStream stream);
    // public System.Void SetRotation(UnityEngine.Animations.AnimationStream stream, UnityEngine.Quaternion rotation)
    // Offset: 0xA79B68
    void SetRotation(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Quaternion rotation);
    // public UnityEngine.Vector3 GetLocalPosition(UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA79BEC
    ::UnityEngine::Vector3 GetLocalPosition(::UnityEngine::Animations::AnimationStream stream);
    // public System.Void SetLocalPosition(UnityEngine.Animations.AnimationStream stream, UnityEngine.Vector3 position)
    // Offset: 0xA79C40
    void SetLocalPosition(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 position);
    // public UnityEngine.Quaternion GetLocalRotation(UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA79CBC
    ::UnityEngine::Quaternion GetLocalRotation(::UnityEngine::Animations::AnimationStream stream);
    // public System.Void SetLocalRotation(UnityEngine.Animations.AnimationStream stream, UnityEngine.Quaternion rotation)
    // Offset: 0xA79D10
    void SetLocalRotation(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Quaternion rotation);
    // public UnityEngine.Vector3 GetLocalScale(UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA79D94
    ::UnityEngine::Vector3 GetLocalScale(::UnityEngine::Animations::AnimationStream stream);
    // public System.Void SetLocalScale(UnityEngine.Animations.AnimationStream stream, UnityEngine.Vector3 scale)
    // Offset: 0xA79DE8
    void SetLocalScale(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 scale);
    // public System.Void GetLocalTRS(UnityEngine.Animations.AnimationStream stream, out UnityEngine.Vector3 position, out UnityEngine.Quaternion rotation, out UnityEngine.Vector3 scale)
    // Offset: 0xA79E64
    void GetLocalTRS(::UnityEngine::Animations::AnimationStream stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> scale);
    // public System.Void SetLocalTRS(UnityEngine.Animations.AnimationStream stream, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Vector3 scale, System.Boolean useMask)
    // Offset: 0xA79EA0
    void SetLocalTRS(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, bool useMask);
    // public System.Void GetGlobalTR(UnityEngine.Animations.AnimationStream stream, out UnityEngine.Vector3 position, out UnityEngine.Quaternion rotation)
    // Offset: 0xA79F6C
    void GetGlobalTR(::UnityEngine::Animations::AnimationStream stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation);
    // public System.Void SetGlobalTR(UnityEngine.Animations.AnimationStream stream, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Boolean useMask)
    // Offset: 0xA79FA8
    void SetGlobalTR(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, bool useMask);
    // private System.Void ResolveInternal(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA7A05C
    void ResolveInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // private UnityEngine.Vector3 GetPositionInternal(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA7A0AC
    ::UnityEngine::Vector3 GetPositionInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // private System.Void SetPositionInternal(ref UnityEngine.Animations.AnimationStream stream, UnityEngine.Vector3 position)
    // Offset: 0xA7A0B4
    void SetPositionInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ::UnityEngine::Vector3 position);
    // private UnityEngine.Quaternion GetRotationInternal(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA7A0BC
    ::UnityEngine::Quaternion GetRotationInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // private System.Void SetRotationInternal(ref UnityEngine.Animations.AnimationStream stream, UnityEngine.Quaternion rotation)
    // Offset: 0xA7A0C4
    void SetRotationInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ::UnityEngine::Quaternion rotation);
    // private UnityEngine.Vector3 GetLocalPositionInternal(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA7A0CC
    ::UnityEngine::Vector3 GetLocalPositionInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // private System.Void SetLocalPositionInternal(ref UnityEngine.Animations.AnimationStream stream, UnityEngine.Vector3 position)
    // Offset: 0xA7A0D4
    void SetLocalPositionInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ::UnityEngine::Vector3 position);
    // private UnityEngine.Quaternion GetLocalRotationInternal(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA7A0DC
    ::UnityEngine::Quaternion GetLocalRotationInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // private System.Void SetLocalRotationInternal(ref UnityEngine.Animations.AnimationStream stream, UnityEngine.Quaternion rotation)
    // Offset: 0xA7A0E4
    void SetLocalRotationInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ::UnityEngine::Quaternion rotation);
    // private UnityEngine.Vector3 GetLocalScaleInternal(ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0xA7A0EC
    ::UnityEngine::Vector3 GetLocalScaleInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // private System.Void SetLocalScaleInternal(ref UnityEngine.Animations.AnimationStream stream, UnityEngine.Vector3 scale)
    // Offset: 0xA7A0F4
    void SetLocalScaleInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ::UnityEngine::Vector3 scale);
    // private System.Void GetLocalTRSInternal(ref UnityEngine.Animations.AnimationStream stream, out UnityEngine.Vector3 position, out UnityEngine.Quaternion rotation, out UnityEngine.Vector3 scale)
    // Offset: 0xA7A0FC
    void GetLocalTRSInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> scale);
    // private System.Void SetLocalTRSInternal(ref UnityEngine.Animations.AnimationStream stream, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Vector3 scale, System.Boolean useMask)
    // Offset: 0xA7A16C
    void SetLocalTRSInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, bool useMask);
    // private System.Void GetGlobalTRInternal(ref UnityEngine.Animations.AnimationStream stream, out UnityEngine.Vector3 position, out UnityEngine.Quaternion rotation)
    // Offset: 0xA7A188
    void GetGlobalTRInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation);
    // private System.Void SetGlobalTRInternal(ref UnityEngine.Animations.AnimationStream stream, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Boolean useMask)
    // Offset: 0xA7A1F0
    void SetGlobalTRInternal(ByRef<::UnityEngine::Animations::AnimationStream> stream, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, bool useMask);
    // static private System.Void ResolveInternal_Injected(ref UnityEngine.Animations.TransformStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream)
    // Offset: 0x1B8B50C
    static void ResolveInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream);
    // static private System.Void GetPositionInternal_Injected(ref UnityEngine.Animations.TransformStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, out UnityEngine.Vector3 ret)
    // Offset: 0x1B8B55C
    static void GetPositionInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> ret);
    // static private System.Void SetPositionInternal_Injected(ref UnityEngine.Animations.TransformStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, ref UnityEngine.Vector3 position)
    // Offset: 0x1B8B5B4
    static void SetPositionInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position);
    // static private System.Void GetRotationInternal_Injected(ref UnityEngine.Animations.TransformStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, out UnityEngine.Quaternion ret)
    // Offset: 0x1B8B60C
    static void GetRotationInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Quaternion> ret);
    // static private System.Void SetRotationInternal_Injected(ref UnityEngine.Animations.TransformStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, ref UnityEngine.Quaternion rotation)
    // Offset: 0x1B8B664
    static void SetRotationInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Quaternion> rotation);
    // static private System.Void GetLocalPositionInternal_Injected(ref UnityEngine.Animations.TransformStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, out UnityEngine.Vector3 ret)
    // Offset: 0x1B8B6BC
    static void GetLocalPositionInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> ret);
    // static private System.Void SetLocalPositionInternal_Injected(ref UnityEngine.Animations.TransformStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, ref UnityEngine.Vector3 position)
    // Offset: 0x1B8B714
    static void SetLocalPositionInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position);
    // static private System.Void GetLocalRotationInternal_Injected(ref UnityEngine.Animations.TransformStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, out UnityEngine.Quaternion ret)
    // Offset: 0x1B8B76C
    static void GetLocalRotationInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Quaternion> ret);
    // static private System.Void SetLocalRotationInternal_Injected(ref UnityEngine.Animations.TransformStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, ref UnityEngine.Quaternion rotation)
    // Offset: 0x1B8B7C4
    static void SetLocalRotationInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Quaternion> rotation);
    // static private System.Void GetLocalScaleInternal_Injected(ref UnityEngine.Animations.TransformStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, out UnityEngine.Vector3 ret)
    // Offset: 0x1B8B81C
    static void GetLocalScaleInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> ret);
    // static private System.Void SetLocalScaleInternal_Injected(ref UnityEngine.Animations.TransformStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, ref UnityEngine.Vector3 scale)
    // Offset: 0x1B8B874
    static void SetLocalScaleInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> scale);
    // static private System.Void GetLocalTRSInternal_Injected(ref UnityEngine.Animations.TransformStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, out UnityEngine.Vector3 position, out UnityEngine.Quaternion rotation, out UnityEngine.Vector3 scale)
    // Offset: 0x1B8B8CC
    static void GetLocalTRSInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> scale);
    // static private System.Void SetLocalTRSInternal_Injected(ref UnityEngine.Animations.TransformStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, ref UnityEngine.Vector3 position, ref UnityEngine.Quaternion rotation, ref UnityEngine.Vector3 scale, System.Boolean useMask)
    // Offset: 0x1B8B93C
    static void SetLocalTRSInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> scale, bool useMask);
    // static private System.Void GetGlobalTRInternal_Injected(ref UnityEngine.Animations.TransformStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, out UnityEngine.Vector3 position, out UnityEngine.Quaternion rotation)
    // Offset: 0x1B8B9BC
    static void GetGlobalTRInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation);
    // static private System.Void SetGlobalTRInternal_Injected(ref UnityEngine.Animations.TransformStreamHandle _unity_self, ref UnityEngine.Animations.AnimationStream stream, ref UnityEngine.Vector3 position, ref UnityEngine.Quaternion rotation, System.Boolean useMask)
    // Offset: 0x1B8BA24
    static void SetGlobalTRInternal_Injected(ByRef<::UnityEngine::Animations::TransformStreamHandle> _unity_self, ByRef<::UnityEngine::Animations::AnimationStream> stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, bool useMask);
  }; // UnityEngine.Animations.TransformStreamHandle
  #pragma pack(pop)
  static check_size<sizeof(TransformStreamHandle), 8 + sizeof(int)> __UnityEngine_Animations_TransformStreamHandleSizeCheck;
  static_assert(sizeof(TransformStreamHandle) == 0xC);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::get_createdByNative
// Il2CppName: get_createdByNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::TransformStreamHandle::*)()>(&UnityEngine::Animations::TransformStreamHandle::get_createdByNative)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "get_createdByNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::get_hasHandleIndex
// Il2CppName: get_hasHandleIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::TransformStreamHandle::*)()>(&UnityEngine::Animations::TransformStreamHandle::get_hasHandleIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "get_hasHandleIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::get_hasSkeletonIndex
// Il2CppName: get_hasSkeletonIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::TransformStreamHandle::*)()>(&UnityEngine::Animations::TransformStreamHandle::get_hasSkeletonIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "get_hasSkeletonIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::get_animatorBindingsVersion
// Il2CppName: get_animatorBindingsVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (UnityEngine::Animations::TransformStreamHandle::*)()>(&UnityEngine::Animations::TransformStreamHandle::get_animatorBindingsVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "get_animatorBindingsVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::IsValid
// Il2CppName: IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream)>(&UnityEngine::Animations::TransformStreamHandle::IsValid)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::IsValidInternal
// Il2CppName: IsValidInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::TransformStreamHandle::IsValidInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "IsValidInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::IsSameVersionAsStream
// Il2CppName: IsSameVersionAsStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::TransformStreamHandle::IsSameVersionAsStream)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "IsSameVersionAsStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::Resolve
// Il2CppName: Resolve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream)>(&UnityEngine::Animations::TransformStreamHandle::Resolve)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "Resolve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::IsResolved
// Il2CppName: IsResolved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream)>(&UnityEngine::Animations::TransformStreamHandle::IsResolved)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "IsResolved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::IsResolvedInternal
// Il2CppName: IsResolvedInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::TransformStreamHandle::IsResolvedInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "IsResolvedInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::CheckIsValidAndResolve
// Il2CppName: CheckIsValidAndResolve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::TransformStreamHandle::CheckIsValidAndResolve)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "CheckIsValidAndResolve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetPosition
// Il2CppName: GetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream)>(&UnityEngine::Animations::TransformStreamHandle::GetPosition)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetPosition
// Il2CppName: SetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream, ::UnityEngine::Vector3)>(&UnityEngine::Animations::TransformStreamHandle::SetPosition)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, position});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetRotation
// Il2CppName: GetRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream)>(&UnityEngine::Animations::TransformStreamHandle::GetRotation)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetRotation
// Il2CppName: SetRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream, ::UnityEngine::Quaternion)>(&UnityEngine::Animations::TransformStreamHandle::SetRotation)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, rotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetLocalPosition
// Il2CppName: GetLocalPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream)>(&UnityEngine::Animations::TransformStreamHandle::GetLocalPosition)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetLocalPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetLocalPosition
// Il2CppName: SetLocalPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream, ::UnityEngine::Vector3)>(&UnityEngine::Animations::TransformStreamHandle::SetLocalPosition)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetLocalPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, position});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetLocalRotation
// Il2CppName: GetLocalRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream)>(&UnityEngine::Animations::TransformStreamHandle::GetLocalRotation)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetLocalRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetLocalRotation
// Il2CppName: SetLocalRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream, ::UnityEngine::Quaternion)>(&UnityEngine::Animations::TransformStreamHandle::SetLocalRotation)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetLocalRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, rotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetLocalScale
// Il2CppName: GetLocalScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream)>(&UnityEngine::Animations::TransformStreamHandle::GetLocalScale)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetLocalScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetLocalScale
// Il2CppName: SetLocalScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream, ::UnityEngine::Vector3)>(&UnityEngine::Animations::TransformStreamHandle::SetLocalScale)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetLocalScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, scale});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetLocalTRS
// Il2CppName: GetLocalTRS
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream, ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Quaternion>, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Animations::TransformStreamHandle::GetLocalTRS)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetLocalTRS", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, position, rotation, scale});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetLocalTRS
// Il2CppName: SetLocalTRS
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream, ::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3, bool)>(&UnityEngine::Animations::TransformStreamHandle::SetLocalTRS)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* useMask = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetLocalTRS", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, position, rotation, scale, useMask});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetGlobalTR
// Il2CppName: GetGlobalTR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream, ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Quaternion>)>(&UnityEngine::Animations::TransformStreamHandle::GetGlobalTR)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetGlobalTR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, position, rotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetGlobalTR
// Il2CppName: SetGlobalTR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(::UnityEngine::Animations::AnimationStream, ::UnityEngine::Vector3, ::UnityEngine::Quaternion, bool)>(&UnityEngine::Animations::TransformStreamHandle::SetGlobalTR)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* useMask = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetGlobalTR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, position, rotation, useMask});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::ResolveInternal
// Il2CppName: ResolveInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::TransformStreamHandle::ResolveInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "ResolveInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetPositionInternal
// Il2CppName: GetPositionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::TransformStreamHandle::GetPositionInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetPositionInternal
// Il2CppName: SetPositionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>, ::UnityEngine::Vector3)>(&UnityEngine::Animations::TransformStreamHandle::SetPositionInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, position});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetRotationInternal
// Il2CppName: GetRotationInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::TransformStreamHandle::GetRotationInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetRotationInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetRotationInternal
// Il2CppName: SetRotationInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>, ::UnityEngine::Quaternion)>(&UnityEngine::Animations::TransformStreamHandle::SetRotationInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetRotationInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, rotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetLocalPositionInternal
// Il2CppName: GetLocalPositionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::TransformStreamHandle::GetLocalPositionInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetLocalPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetLocalPositionInternal
// Il2CppName: SetLocalPositionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>, ::UnityEngine::Vector3)>(&UnityEngine::Animations::TransformStreamHandle::SetLocalPositionInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetLocalPositionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, position});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetLocalRotationInternal
// Il2CppName: GetLocalRotationInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::TransformStreamHandle::GetLocalRotationInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetLocalRotationInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetLocalRotationInternal
// Il2CppName: SetLocalRotationInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>, ::UnityEngine::Quaternion)>(&UnityEngine::Animations::TransformStreamHandle::SetLocalRotationInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetLocalRotationInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, rotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetLocalScaleInternal
// Il2CppName: GetLocalScaleInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::TransformStreamHandle::GetLocalScaleInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetLocalScaleInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetLocalScaleInternal
// Il2CppName: SetLocalScaleInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>, ::UnityEngine::Vector3)>(&UnityEngine::Animations::TransformStreamHandle::SetLocalScaleInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetLocalScaleInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, scale});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetLocalTRSInternal
// Il2CppName: GetLocalTRSInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>, ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Quaternion>, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Animations::TransformStreamHandle::GetLocalTRSInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetLocalTRSInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, position, rotation, scale});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetLocalTRSInternal
// Il2CppName: SetLocalTRSInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>, ::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3, bool)>(&UnityEngine::Animations::TransformStreamHandle::SetLocalTRSInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* useMask = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetLocalTRSInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, position, rotation, scale, useMask});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetGlobalTRInternal
// Il2CppName: GetGlobalTRInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>, ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Quaternion>)>(&UnityEngine::Animations::TransformStreamHandle::GetGlobalTRInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetGlobalTRInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, position, rotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetGlobalTRInternal
// Il2CppName: SetGlobalTRInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Animations::TransformStreamHandle::*)(ByRef<::UnityEngine::Animations::AnimationStream>, ::UnityEngine::Vector3, ::UnityEngine::Quaternion, bool)>(&UnityEngine::Animations::TransformStreamHandle::SetGlobalTRInternal)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* useMask = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetGlobalTRInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, position, rotation, useMask});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::ResolveInternal_Injected
// Il2CppName: ResolveInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::TransformStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>)>(&UnityEngine::Animations::TransformStreamHandle::ResolveInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "TransformStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "ResolveInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetPositionInternal_Injected
// Il2CppName: GetPositionInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::TransformStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Animations::TransformStreamHandle::GetPositionInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "TransformStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetPositionInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetPositionInternal_Injected
// Il2CppName: SetPositionInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::TransformStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Animations::TransformStreamHandle::SetPositionInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "TransformStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetPositionInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, position});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetRotationInternal_Injected
// Il2CppName: GetRotationInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::TransformStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, ByRef<::UnityEngine::Quaternion>)>(&UnityEngine::Animations::TransformStreamHandle::GetRotationInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "TransformStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetRotationInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetRotationInternal_Injected
// Il2CppName: SetRotationInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::TransformStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, ByRef<::UnityEngine::Quaternion>)>(&UnityEngine::Animations::TransformStreamHandle::SetRotationInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "TransformStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetRotationInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, rotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetLocalPositionInternal_Injected
// Il2CppName: GetLocalPositionInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::TransformStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Animations::TransformStreamHandle::GetLocalPositionInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "TransformStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetLocalPositionInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetLocalPositionInternal_Injected
// Il2CppName: SetLocalPositionInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::TransformStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Animations::TransformStreamHandle::SetLocalPositionInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "TransformStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetLocalPositionInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, position});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetLocalRotationInternal_Injected
// Il2CppName: GetLocalRotationInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::TransformStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, ByRef<::UnityEngine::Quaternion>)>(&UnityEngine::Animations::TransformStreamHandle::GetLocalRotationInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "TransformStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetLocalRotationInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetLocalRotationInternal_Injected
// Il2CppName: SetLocalRotationInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::TransformStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, ByRef<::UnityEngine::Quaternion>)>(&UnityEngine::Animations::TransformStreamHandle::SetLocalRotationInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "TransformStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetLocalRotationInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, rotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetLocalScaleInternal_Injected
// Il2CppName: GetLocalScaleInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::TransformStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Animations::TransformStreamHandle::GetLocalScaleInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "TransformStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetLocalScaleInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, ret});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetLocalScaleInternal_Injected
// Il2CppName: SetLocalScaleInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::TransformStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Animations::TransformStreamHandle::SetLocalScaleInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "TransformStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetLocalScaleInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, scale});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetLocalTRSInternal_Injected
// Il2CppName: GetLocalTRSInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::TransformStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Quaternion>, ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Animations::TransformStreamHandle::GetLocalTRSInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "TransformStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetLocalTRSInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, position, rotation, scale});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetLocalTRSInternal_Injected
// Il2CppName: SetLocalTRSInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::TransformStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Quaternion>, ByRef<::UnityEngine::Vector3>, bool)>(&UnityEngine::Animations::TransformStreamHandle::SetLocalTRSInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "TransformStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    static auto* scale = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* useMask = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetLocalTRSInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, position, rotation, scale, useMask});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::GetGlobalTRInternal_Injected
// Il2CppName: GetGlobalTRInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::TransformStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Quaternion>)>(&UnityEngine::Animations::TransformStreamHandle::GetGlobalTRInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "TransformStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "GetGlobalTRInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, position, rotation});
  }
};
// Writing MetadataGetter for method: UnityEngine::Animations::TransformStreamHandle::SetGlobalTRInternal_Injected
// Il2CppName: SetGlobalTRInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::UnityEngine::Animations::TransformStreamHandle>, ByRef<::UnityEngine::Animations::AnimationStream>, ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Quaternion>, bool)>(&UnityEngine::Animations::TransformStreamHandle::SetGlobalTRInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* _unity_self = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "TransformStreamHandle")->this_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("UnityEngine.Animations", "AnimationStream")->this_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    static auto* useMask = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Animations::TransformStreamHandle), "SetGlobalTRInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_unity_self, stream, position, rotation, useMask});
  }
};
