// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: DblClickSnapping because it is already included!
  // Forward declaring type: TouchScreenKeyboard
  class TouchScreenKeyboard;
  // Forward declaring type: GUIStyle
  class GUIStyle;
  // Forward declaring type: GUIContent
  class GUIContent;
  // Forward declaring type: Event
  class Event;
  // Skipping declaration: TextEditOp because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: TextEditor
  class TextEditor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::TextEditor);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextEditor*, "UnityEngine", "TextEditor");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.TextEditor
  // [TokenAttribute] Offset: FFFFFFFF
  class TextEditor : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::TextEditor::DblClickSnapping
    struct DblClickSnapping;
    // Nested type: ::UnityEngine::TextEditor::CharacterType
    struct CharacterType;
    // Nested type: ::UnityEngine::TextEditor::Direction
    struct Direction;
    // Nested type: ::UnityEngine::TextEditor::TextEditOp
    struct TextEditOp;
    // Size: 0x1
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.TextEditor/UnityEngine.DblClickSnapping
    // [TokenAttribute] Offset: FFFFFFFF
    struct DblClickSnapping/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Byte value__
      // Size: 0x1
      // Offset: 0x0
      uint8_t value;
      // Field size check
      static_assert(sizeof(uint8_t) == 0x1);
      public:
      // Creating value type constructor for type: DblClickSnapping
      constexpr DblClickSnapping(uint8_t value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator uint8_t
      constexpr operator uint8_t() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.DblClickSnapping WORDS
      static constexpr const uint8_t WORDS = 0u;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.DblClickSnapping WORDS
      static ::UnityEngine::TextEditor::DblClickSnapping _get_WORDS();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.DblClickSnapping WORDS
      static void _set_WORDS(::UnityEngine::TextEditor::DblClickSnapping value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.DblClickSnapping PARAGRAPHS
      static constexpr const uint8_t PARAGRAPHS = 1u;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.DblClickSnapping PARAGRAPHS
      static ::UnityEngine::TextEditor::DblClickSnapping _get_PARAGRAPHS();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.DblClickSnapping PARAGRAPHS
      static void _set_PARAGRAPHS(::UnityEngine::TextEditor::DblClickSnapping value);
      // Get instance field reference: public System.Byte value__
      [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
    }; // UnityEngine.TextEditor/UnityEngine.DblClickSnapping
    #pragma pack(pop)
    static check_size<sizeof(TextEditor::DblClickSnapping), 0 + sizeof(uint8_t)> __UnityEngine_TextEditor_DblClickSnappingSizeCheck;
    static_assert(sizeof(TextEditor::DblClickSnapping) == 0x1);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: UnityEngine.TextEditor/UnityEngine.TextEditOp
    // [TokenAttribute] Offset: FFFFFFFF
    struct TextEditOp/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: TextEditOp
      constexpr TextEditOp(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveLeft
      static constexpr const int MoveLeft = 0;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveLeft
      static ::UnityEngine::TextEditor::TextEditOp _get_MoveLeft();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveLeft
      static void _set_MoveLeft(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveRight
      static constexpr const int MoveRight = 1;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveRight
      static ::UnityEngine::TextEditor::TextEditOp _get_MoveRight();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveRight
      static void _set_MoveRight(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveUp
      static constexpr const int MoveUp = 2;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveUp
      static ::UnityEngine::TextEditor::TextEditOp _get_MoveUp();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveUp
      static void _set_MoveUp(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveDown
      static constexpr const int MoveDown = 3;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveDown
      static ::UnityEngine::TextEditor::TextEditOp _get_MoveDown();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveDown
      static void _set_MoveDown(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveLineStart
      static constexpr const int MoveLineStart = 4;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveLineStart
      static ::UnityEngine::TextEditor::TextEditOp _get_MoveLineStart();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveLineStart
      static void _set_MoveLineStart(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveLineEnd
      static constexpr const int MoveLineEnd = 5;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveLineEnd
      static ::UnityEngine::TextEditor::TextEditOp _get_MoveLineEnd();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveLineEnd
      static void _set_MoveLineEnd(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveTextStart
      static constexpr const int MoveTextStart = 6;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveTextStart
      static ::UnityEngine::TextEditor::TextEditOp _get_MoveTextStart();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveTextStart
      static void _set_MoveTextStart(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveTextEnd
      static constexpr const int MoveTextEnd = 7;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveTextEnd
      static ::UnityEngine::TextEditor::TextEditOp _get_MoveTextEnd();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveTextEnd
      static void _set_MoveTextEnd(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MovePageUp
      static constexpr const int MovePageUp = 8;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MovePageUp
      static ::UnityEngine::TextEditor::TextEditOp _get_MovePageUp();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MovePageUp
      static void _set_MovePageUp(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MovePageDown
      static constexpr const int MovePageDown = 9;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MovePageDown
      static ::UnityEngine::TextEditor::TextEditOp _get_MovePageDown();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MovePageDown
      static void _set_MovePageDown(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveGraphicalLineStart
      static constexpr const int MoveGraphicalLineStart = 10;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveGraphicalLineStart
      static ::UnityEngine::TextEditor::TextEditOp _get_MoveGraphicalLineStart();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveGraphicalLineStart
      static void _set_MoveGraphicalLineStart(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveGraphicalLineEnd
      static constexpr const int MoveGraphicalLineEnd = 11;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveGraphicalLineEnd
      static ::UnityEngine::TextEditor::TextEditOp _get_MoveGraphicalLineEnd();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveGraphicalLineEnd
      static void _set_MoveGraphicalLineEnd(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveWordLeft
      static constexpr const int MoveWordLeft = 12;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveWordLeft
      static ::UnityEngine::TextEditor::TextEditOp _get_MoveWordLeft();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveWordLeft
      static void _set_MoveWordLeft(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveWordRight
      static constexpr const int MoveWordRight = 13;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveWordRight
      static ::UnityEngine::TextEditor::TextEditOp _get_MoveWordRight();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveWordRight
      static void _set_MoveWordRight(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveParagraphForward
      static constexpr const int MoveParagraphForward = 14;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveParagraphForward
      static ::UnityEngine::TextEditor::TextEditOp _get_MoveParagraphForward();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveParagraphForward
      static void _set_MoveParagraphForward(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveParagraphBackward
      static constexpr const int MoveParagraphBackward = 15;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveParagraphBackward
      static ::UnityEngine::TextEditor::TextEditOp _get_MoveParagraphBackward();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveParagraphBackward
      static void _set_MoveParagraphBackward(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveToStartOfNextWord
      static constexpr const int MoveToStartOfNextWord = 16;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveToStartOfNextWord
      static ::UnityEngine::TextEditor::TextEditOp _get_MoveToStartOfNextWord();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveToStartOfNextWord
      static void _set_MoveToStartOfNextWord(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveToEndOfPreviousWord
      static constexpr const int MoveToEndOfPreviousWord = 17;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveToEndOfPreviousWord
      static ::UnityEngine::TextEditor::TextEditOp _get_MoveToEndOfPreviousWord();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp MoveToEndOfPreviousWord
      static void _set_MoveToEndOfPreviousWord(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectLeft
      static constexpr const int SelectLeft = 18;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectLeft
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectLeft();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectLeft
      static void _set_SelectLeft(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectRight
      static constexpr const int SelectRight = 19;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectRight
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectRight();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectRight
      static void _set_SelectRight(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectUp
      static constexpr const int SelectUp = 20;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectUp
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectUp();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectUp
      static void _set_SelectUp(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectDown
      static constexpr const int SelectDown = 21;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectDown
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectDown();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectDown
      static void _set_SelectDown(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectTextStart
      static constexpr const int SelectTextStart = 22;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectTextStart
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectTextStart();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectTextStart
      static void _set_SelectTextStart(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectTextEnd
      static constexpr const int SelectTextEnd = 23;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectTextEnd
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectTextEnd();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectTextEnd
      static void _set_SelectTextEnd(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectPageUp
      static constexpr const int SelectPageUp = 24;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectPageUp
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectPageUp();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectPageUp
      static void _set_SelectPageUp(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectPageDown
      static constexpr const int SelectPageDown = 25;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectPageDown
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectPageDown();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectPageDown
      static void _set_SelectPageDown(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ExpandSelectGraphicalLineStart
      static constexpr const int ExpandSelectGraphicalLineStart = 26;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ExpandSelectGraphicalLineStart
      static ::UnityEngine::TextEditor::TextEditOp _get_ExpandSelectGraphicalLineStart();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ExpandSelectGraphicalLineStart
      static void _set_ExpandSelectGraphicalLineStart(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ExpandSelectGraphicalLineEnd
      static constexpr const int ExpandSelectGraphicalLineEnd = 27;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ExpandSelectGraphicalLineEnd
      static ::UnityEngine::TextEditor::TextEditOp _get_ExpandSelectGraphicalLineEnd();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ExpandSelectGraphicalLineEnd
      static void _set_ExpandSelectGraphicalLineEnd(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectGraphicalLineStart
      static constexpr const int SelectGraphicalLineStart = 28;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectGraphicalLineStart
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectGraphicalLineStart();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectGraphicalLineStart
      static void _set_SelectGraphicalLineStart(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectGraphicalLineEnd
      static constexpr const int SelectGraphicalLineEnd = 29;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectGraphicalLineEnd
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectGraphicalLineEnd();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectGraphicalLineEnd
      static void _set_SelectGraphicalLineEnd(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectWordLeft
      static constexpr const int SelectWordLeft = 30;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectWordLeft
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectWordLeft();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectWordLeft
      static void _set_SelectWordLeft(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectWordRight
      static constexpr const int SelectWordRight = 31;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectWordRight
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectWordRight();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectWordRight
      static void _set_SelectWordRight(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectToEndOfPreviousWord
      static constexpr const int SelectToEndOfPreviousWord = 32;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectToEndOfPreviousWord
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectToEndOfPreviousWord();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectToEndOfPreviousWord
      static void _set_SelectToEndOfPreviousWord(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectToStartOfNextWord
      static constexpr const int SelectToStartOfNextWord = 33;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectToStartOfNextWord
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectToStartOfNextWord();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectToStartOfNextWord
      static void _set_SelectToStartOfNextWord(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectParagraphBackward
      static constexpr const int SelectParagraphBackward = 34;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectParagraphBackward
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectParagraphBackward();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectParagraphBackward
      static void _set_SelectParagraphBackward(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectParagraphForward
      static constexpr const int SelectParagraphForward = 35;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectParagraphForward
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectParagraphForward();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectParagraphForward
      static void _set_SelectParagraphForward(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp Delete
      static constexpr const int Delete = 36;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp Delete
      static ::UnityEngine::TextEditor::TextEditOp _get_Delete();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp Delete
      static void _set_Delete(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp Backspace
      static constexpr const int Backspace = 37;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp Backspace
      static ::UnityEngine::TextEditor::TextEditOp _get_Backspace();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp Backspace
      static void _set_Backspace(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp DeleteWordBack
      static constexpr const int DeleteWordBack = 38;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp DeleteWordBack
      static ::UnityEngine::TextEditor::TextEditOp _get_DeleteWordBack();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp DeleteWordBack
      static void _set_DeleteWordBack(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp DeleteWordForward
      static constexpr const int DeleteWordForward = 39;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp DeleteWordForward
      static ::UnityEngine::TextEditor::TextEditOp _get_DeleteWordForward();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp DeleteWordForward
      static void _set_DeleteWordForward(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp DeleteLineBack
      static constexpr const int DeleteLineBack = 40;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp DeleteLineBack
      static ::UnityEngine::TextEditor::TextEditOp _get_DeleteLineBack();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp DeleteLineBack
      static void _set_DeleteLineBack(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp Cut
      static constexpr const int Cut = 41;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp Cut
      static ::UnityEngine::TextEditor::TextEditOp _get_Cut();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp Cut
      static void _set_Cut(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp Copy
      static constexpr const int Copy = 42;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp Copy
      static ::UnityEngine::TextEditor::TextEditOp _get_Copy();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp Copy
      static void _set_Copy(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp Paste
      static constexpr const int Paste = 43;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp Paste
      static ::UnityEngine::TextEditor::TextEditOp _get_Paste();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp Paste
      static void _set_Paste(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectAll
      static constexpr const int SelectAll = 44;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectAll
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectAll();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectAll
      static void _set_SelectAll(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectNone
      static constexpr const int SelectNone = 45;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectNone
      static ::UnityEngine::TextEditor::TextEditOp _get_SelectNone();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp SelectNone
      static void _set_SelectNone(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ScrollStart
      static constexpr const int ScrollStart = 46;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ScrollStart
      static ::UnityEngine::TextEditor::TextEditOp _get_ScrollStart();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ScrollStart
      static void _set_ScrollStart(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ScrollEnd
      static constexpr const int ScrollEnd = 47;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ScrollEnd
      static ::UnityEngine::TextEditor::TextEditOp _get_ScrollEnd();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ScrollEnd
      static void _set_ScrollEnd(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ScrollPageUp
      static constexpr const int ScrollPageUp = 48;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ScrollPageUp
      static ::UnityEngine::TextEditor::TextEditOp _get_ScrollPageUp();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ScrollPageUp
      static void _set_ScrollPageUp(::UnityEngine::TextEditor::TextEditOp value);
      // static field const value: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ScrollPageDown
      static constexpr const int ScrollPageDown = 49;
      // Get static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ScrollPageDown
      static ::UnityEngine::TextEditor::TextEditOp _get_ScrollPageDown();
      // Set static field: static public UnityEngine.TextEditor/UnityEngine.TextEditOp ScrollPageDown
      static void _set_ScrollPageDown(::UnityEngine::TextEditor::TextEditOp value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // UnityEngine.TextEditor/UnityEngine.TextEditOp
    #pragma pack(pop)
    static check_size<sizeof(TextEditor::TextEditOp), 0 + sizeof(int)> __UnityEngine_TextEditor_TextEditOpSizeCheck;
    static_assert(sizeof(TextEditor::TextEditOp) == 0x4);
    public:
    // public UnityEngine.TouchScreenKeyboard keyboardOnScreen
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::TouchScreenKeyboard* keyboardOnScreen;
    // Field size check
    static_assert(sizeof(::UnityEngine::TouchScreenKeyboard*) == 0x8);
    // public System.Int32 controlID
    // Size: 0x4
    // Offset: 0x18
    int controlID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: controlID and: style
    char __padding1[0x4] = {};
    // public UnityEngine.GUIStyle style
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GUIStyle* style;
    // Field size check
    static_assert(sizeof(::UnityEngine::GUIStyle*) == 0x8);
    // public System.Boolean multiline
    // Size: 0x1
    // Offset: 0x28
    bool multiline;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean hasHorizontalCursorPos
    // Size: 0x1
    // Offset: 0x29
    bool hasHorizontalCursorPos;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean isPasswordField
    // Size: 0x1
    // Offset: 0x2A
    bool isPasswordField;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean m_HasFocus
    // Size: 0x1
    // Offset: 0x2B
    bool m_HasFocus;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public UnityEngine.Vector2 scrollOffset
    // Size: 0x8
    // Offset: 0x2C
    ::UnityEngine::Vector2 scrollOffset;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // Padding between fields: scrollOffset and: m_Content
    char __padding7[0x4] = {};
    // private UnityEngine.GUIContent m_Content
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GUIContent* m_Content;
    // Field size check
    static_assert(sizeof(::UnityEngine::GUIContent*) == 0x8);
    // private UnityEngine.Rect m_Position
    // Size: 0x10
    // Offset: 0x40
    ::UnityEngine::Rect m_Position;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rect) == 0x10);
    // private System.Int32 m_CursorIndex
    // Size: 0x4
    // Offset: 0x50
    int m_CursorIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_SelectIndex
    // Size: 0x4
    // Offset: 0x54
    int m_SelectIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean m_RevealCursor
    // Size: 0x1
    // Offset: 0x58
    bool m_RevealCursor;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_RevealCursor and: graphicalCursorPos
    char __padding12[0x3] = {};
    // public UnityEngine.Vector2 graphicalCursorPos
    // Size: 0x8
    // Offset: 0x5C
    ::UnityEngine::Vector2 graphicalCursorPos;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // public UnityEngine.Vector2 graphicalSelectCursorPos
    // Size: 0x8
    // Offset: 0x64
    ::UnityEngine::Vector2 graphicalSelectCursorPos;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    // private System.Boolean m_MouseDragSelectsWholeWords
    // Size: 0x1
    // Offset: 0x6C
    bool m_MouseDragSelectsWholeWords;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_MouseDragSelectsWholeWords and: m_DblClickInitPos
    char __padding15[0x3] = {};
    // private System.Int32 m_DblClickInitPos
    // Size: 0x4
    // Offset: 0x70
    int m_DblClickInitPos;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.TextEditor/UnityEngine.DblClickSnapping m_DblClickSnap
    // Size: 0x1
    // Offset: 0x74
    ::UnityEngine::TextEditor::DblClickSnapping m_DblClickSnap;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextEditor::DblClickSnapping) == 0x1);
    // private System.Boolean m_bJustSelected
    // Size: 0x1
    // Offset: 0x75
    bool m_bJustSelected;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_bJustSelected and: m_iAltCursorPos
    char __padding18[0x2] = {};
    // private System.Int32 m_iAltCursorPos
    // Size: 0x4
    // Offset: 0x78
    int m_iAltCursorPos;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_iAltCursorPos and: oldText
    char __padding19[0x4] = {};
    // private System.String oldText
    // Size: 0x8
    // Offset: 0x80
    ::StringW oldText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Int32 oldPos
    // Size: 0x4
    // Offset: 0x88
    int oldPos;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 oldSelectPos
    // Size: 0x4
    // Offset: 0x8C
    int oldSelectPos;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Event,UnityEngine.TextEditor/UnityEngine.TextEditOp> s_Keyactions
    static ::System::Collections::Generic::Dictionary_2<::UnityEngine::Event*, ::UnityEngine::TextEditor::TextEditOp>* _get_s_Keyactions();
    // Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Event,UnityEngine.TextEditor/UnityEngine.TextEditOp> s_Keyactions
    static void _set_s_Keyactions(::System::Collections::Generic::Dictionary_2<::UnityEngine::Event*, ::UnityEngine::TextEditor::TextEditOp>* value);
    // Get instance field reference: public UnityEngine.TouchScreenKeyboard keyboardOnScreen
    [[deprecated("Use field access instead!")]] ::UnityEngine::TouchScreenKeyboard*& dyn_keyboardOnScreen();
    // Get instance field reference: public System.Int32 controlID
    [[deprecated("Use field access instead!")]] int& dyn_controlID();
    // Get instance field reference: public UnityEngine.GUIStyle style
    [[deprecated("Use field access instead!")]] ::UnityEngine::GUIStyle*& dyn_style();
    // Get instance field reference: public System.Boolean multiline
    [[deprecated("Use field access instead!")]] bool& dyn_multiline();
    // Get instance field reference: public System.Boolean hasHorizontalCursorPos
    [[deprecated("Use field access instead!")]] bool& dyn_hasHorizontalCursorPos();
    // Get instance field reference: public System.Boolean isPasswordField
    [[deprecated("Use field access instead!")]] bool& dyn_isPasswordField();
    // Get instance field reference: System.Boolean m_HasFocus
    [[deprecated("Use field access instead!")]] bool& dyn_m_HasFocus();
    // Get instance field reference: public UnityEngine.Vector2 scrollOffset
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_scrollOffset();
    // Get instance field reference: private UnityEngine.GUIContent m_Content
    [[deprecated("Use field access instead!")]] ::UnityEngine::GUIContent*& dyn_m_Content();
    // Get instance field reference: private UnityEngine.Rect m_Position
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rect& dyn_m_Position();
    // Get instance field reference: private System.Int32 m_CursorIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_CursorIndex();
    // Get instance field reference: private System.Int32 m_SelectIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_SelectIndex();
    // Get instance field reference: private System.Boolean m_RevealCursor
    [[deprecated("Use field access instead!")]] bool& dyn_m_RevealCursor();
    // Get instance field reference: public UnityEngine.Vector2 graphicalCursorPos
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_graphicalCursorPos();
    // Get instance field reference: public UnityEngine.Vector2 graphicalSelectCursorPos
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_graphicalSelectCursorPos();
    // Get instance field reference: private System.Boolean m_MouseDragSelectsWholeWords
    [[deprecated("Use field access instead!")]] bool& dyn_m_MouseDragSelectsWholeWords();
    // Get instance field reference: private System.Int32 m_DblClickInitPos
    [[deprecated("Use field access instead!")]] int& dyn_m_DblClickInitPos();
    // Get instance field reference: private UnityEngine.TextEditor/UnityEngine.DblClickSnapping m_DblClickSnap
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextEditor::DblClickSnapping& dyn_m_DblClickSnap();
    // Get instance field reference: private System.Boolean m_bJustSelected
    [[deprecated("Use field access instead!")]] bool& dyn_m_bJustSelected();
    // Get instance field reference: private System.Int32 m_iAltCursorPos
    [[deprecated("Use field access instead!")]] int& dyn_m_iAltCursorPos();
    // Get instance field reference: private System.String oldText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_oldText();
    // Get instance field reference: private System.Int32 oldPos
    [[deprecated("Use field access instead!")]] int& dyn_oldPos();
    // Get instance field reference: private System.Int32 oldSelectPos
    [[deprecated("Use field access instead!")]] int& dyn_oldSelectPos();
    // public System.String get_text()
    // Offset: 0x1FDBF78
    ::StringW get_text();
    // public System.Void set_text(System.String value)
    // Offset: 0x1FDAABC
    void set_text(::StringW value);
    // public UnityEngine.Rect get_position()
    // Offset: 0x1FEEC08
    ::UnityEngine::Rect get_position();
    // public System.Void set_position(UnityEngine.Rect value)
    // Offset: 0x1FDAB68
    void set_position(::UnityEngine::Rect value);
    // UnityEngine.Rect get_localPosition()
    // Offset: 0x1FEEFEC
    ::UnityEngine::Rect get_localPosition();
    // public System.Int32 get_cursorIndex()
    // Offset: 0x1FEEFF8
    int get_cursorIndex();
    // public System.Void set_cursorIndex(System.Int32 value)
    // Offset: 0x1FEF000
    void set_cursorIndex(int value);
    // public System.Int32 get_selectIndex()
    // Offset: 0x1FEF068
    int get_selectIndex();
    // public System.Void set_selectIndex(System.Int32 value)
    // Offset: 0x1FEF070
    void set_selectIndex(int value);
    // public System.Boolean get_hasSelection()
    // Offset: 0x1FEFFDC
    bool get_hasSelection();
    // public System.Void .ctor()
    // Offset: 0x1FEF0E0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextEditor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextEditor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextEditor*, creationType>()));
    }
    // private System.Void ClearCursorPos()
    // Offset: 0x1FEF0D0
    void ClearCursorPos();
    // public System.Void OnFocus()
    // Offset: 0x1FEF1C4
    void OnFocus();
    // public System.Void OnLostFocus()
    // Offset: 0x1FEF264
    void OnLostFocus();
    // private System.Void GrabGraphicalCursorPos()
    // Offset: 0x1FEF2D4
    void GrabGraphicalCursorPos();
    // public System.Boolean HandleKeyEvent(UnityEngine.Event e)
    // Offset: 0x1FDBF70
    bool HandleKeyEvent(::UnityEngine::Event* e);
    // System.Boolean HandleKeyEvent(UnityEngine.Event e, System.Boolean textIsReadOnly)
    // Offset: 0x1FEF354
    bool HandleKeyEvent(::UnityEngine::Event* e, bool textIsReadOnly);
    // public System.Boolean DeleteLineBack()
    // Offset: 0x1FEFF18
    bool DeleteLineBack();
    // public System.Boolean DeleteWordBack()
    // Offset: 0x1FF0104
    bool DeleteWordBack();
    // public System.Boolean DeleteWordForward()
    // Offset: 0x1FF0274
    bool DeleteWordForward();
    // public System.Boolean Delete()
    // Offset: 0x1FF04A8
    bool Delete();
    // public System.Boolean Backspace()
    // Offset: 0x1FF060C
    bool Backspace();
    // public System.Void SelectAll()
    // Offset: 0x1FEF214
    void SelectAll();
    // public System.Void SelectNone()
    // Offset: 0x1FF0788
    void SelectNone();
    // public System.Boolean DeleteSelection()
    // Offset: 0x1FEFFEC
    bool DeleteSelection();
    // public System.Void ReplaceSelection(System.String replace)
    // Offset: 0x1FDC048
    void ReplaceSelection(::StringW replace);
    // public System.Void Insert(System.Char c)
    // Offset: 0x1FDBFDC
    void Insert(::Il2CppChar c);
    // public System.Void MoveRight()
    // Offset: 0x1FF07B8
    void MoveRight();
    // public System.Void MoveLeft()
    // Offset: 0x1FF0834
    void MoveLeft();
    // public System.Void MoveUp()
    // Offset: 0x1FF0898
    void MoveUp();
    // public System.Void MoveDown()
    // Offset: 0x1FF0948
    void MoveDown();
    // public System.Void MoveLineStart()
    // Offset: 0x1FF0A24
    void MoveLineStart();
    // public System.Void MoveLineEnd()
    // Offset: 0x1FF0AB4
    void MoveLineEnd();
    // public System.Void MoveGraphicalLineStart()
    // Offset: 0x1FF0B64
    void MoveGraphicalLineStart();
    // public System.Void MoveGraphicalLineEnd()
    // Offset: 0x1FF0CA4
    void MoveGraphicalLineEnd();
    // public System.Void MoveTextStart()
    // Offset: 0x1FF0DB8
    void MoveTextStart();
    // public System.Void MoveTextEnd()
    // Offset: 0x1FF0DE4
    void MoveTextEnd();
    // private System.Int32 IndexOfEndOfLine(System.Int32 startIndex)
    // Offset: 0x1FF0E28
    int IndexOfEndOfLine(int startIndex);
    // public System.Void MoveParagraphForward()
    // Offset: 0x1FF0E84
    void MoveParagraphForward();
    // public System.Void MoveParagraphBackward()
    // Offset: 0x1FF0F08
    void MoveParagraphBackward();
    // public System.Void MoveCursorToPosition(UnityEngine.Vector2 cursorPosition)
    // Offset: 0x1FDB9D8
    void MoveCursorToPosition(::UnityEngine::Vector2 cursorPosition);
    // protected internal System.Void MoveCursorToPosition_Internal(UnityEngine.Vector2 cursorPosition, System.Boolean shift)
    // Offset: 0x1FF0F94
    void MoveCursorToPosition_Internal(::UnityEngine::Vector2 cursorPosition, bool shift);
    // public System.Void SelectToPosition(UnityEngine.Vector2 cursorPosition)
    // Offset: 0x1FDBBF4
    void SelectToPosition(::UnityEngine::Vector2 cursorPosition);
    // public System.Void SelectLeft()
    // Offset: 0x1FF11D8
    void SelectLeft();
    // public System.Void SelectRight()
    // Offset: 0x1FF1234
    void SelectRight();
    // public System.Void SelectUp()
    // Offset: 0x1FF1290
    void SelectUp();
    // public System.Void SelectDown()
    // Offset: 0x1FF12F4
    void SelectDown();
    // public System.Void SelectTextEnd()
    // Offset: 0x1FF1370
    void SelectTextEnd();
    // public System.Void SelectTextStart()
    // Offset: 0x1FF1398
    void SelectTextStart();
    // public System.Void MouseDragSelectsWholeWords(System.Boolean on)
    // Offset: 0x1FDBB3C
    void MouseDragSelectsWholeWords(bool on);
    // public System.Void DblClickSnap(UnityEngine.TextEditor/UnityEngine.DblClickSnapping snapping)
    // Offset: 0x1FDBB34
    void DblClickSnap(::UnityEngine::TextEditor::DblClickSnapping snapping);
    // private System.Int32 GetGraphicalLineStart(System.Int32 p)
    // Offset: 0x1FF0BB0
    int GetGraphicalLineStart(int p);
    // private System.Int32 GetGraphicalLineEnd(System.Int32 p)
    // Offset: 0x1FF0CF0
    int GetGraphicalLineEnd(int p);
    // private System.Int32 FindNextSeperator(System.Int32 startPos)
    // Offset: 0x1FF13A0
    int FindNextSeperator(int startPos);
    // private System.Int32 FindPrevSeperator(System.Int32 startPos)
    // Offset: 0x1FF1544
    int FindPrevSeperator(int startPos);
    // public System.Void MoveWordRight()
    // Offset: 0x1FF15E4
    void MoveWordRight();
    // public System.Void MoveToStartOfNextWord()
    // Offset: 0x1FF164C
    void MoveToStartOfNextWord();
    // public System.Void MoveToEndOfPreviousWord()
    // Offset: 0x1FF16B0
    void MoveToEndOfPreviousWord();
    // public System.Void SelectToStartOfNextWord()
    // Offset: 0x1FF1714
    void SelectToStartOfNextWord();
    // public System.Void SelectToEndOfPreviousWord()
    // Offset: 0x1FF174C
    void SelectToEndOfPreviousWord();
    // private UnityEngine.TextEditor/UnityEngine.CharacterType ClassifyChar(System.Int32 index)
    // Offset: 0x1FF1444
    ::UnityEngine::TextEditor::CharacterType ClassifyChar(int index);
    // public System.Int32 FindStartOfNextWord(System.Int32 p)
    // Offset: 0x1FF02F4
    int FindStartOfNextWord(int p);
    // private System.Int32 FindEndOfPreviousWord(System.Int32 p)
    // Offset: 0x1FF01A0
    int FindEndOfPreviousWord(int p);
    // public System.Void MoveWordLeft()
    // Offset: 0x1FF1784
    void MoveWordLeft();
    // public System.Void SelectWordRight()
    // Offset: 0x1FF17D8
    void SelectWordRight();
    // public System.Void SelectWordLeft()
    // Offset: 0x1FF1850
    void SelectWordLeft();
    // public System.Void ExpandSelectGraphicalLineStart()
    // Offset: 0x1FF18C8
    void ExpandSelectGraphicalLineStart();
    // public System.Void ExpandSelectGraphicalLineEnd()
    // Offset: 0x1FF1930
    void ExpandSelectGraphicalLineEnd();
    // public System.Void SelectGraphicalLineStart()
    // Offset: 0x1FF1998
    void SelectGraphicalLineStart();
    // public System.Void SelectGraphicalLineEnd()
    // Offset: 0x1FF19D0
    void SelectGraphicalLineEnd();
    // public System.Void SelectParagraphForward()
    // Offset: 0x1FF1A08
    void SelectParagraphForward();
    // public System.Void SelectParagraphBackward()
    // Offset: 0x1FF1AA0
    void SelectParagraphBackward();
    // public System.Void SelectCurrentWord()
    // Offset: 0x1FDBA94
    void SelectCurrentWord();
    // private System.Int32 FindEndOfClassification(System.Int32 p, UnityEngine.TextEditor/UnityEngine.Direction dir)
    // Offset: 0x1FF10C0
    int FindEndOfClassification(int p, ::UnityEngine::TextEditor::Direction dir);
    // public System.Void SelectCurrentParagraph()
    // Offset: 0x1FDBB58
    void SelectCurrentParagraph();
    // public System.Void UpdateScrollOffsetIfNeeded(UnityEngine.Event evt)
    // Offset: 0x1FDB8B0
    void UpdateScrollOffsetIfNeeded(::UnityEngine::Event* evt);
    // System.Void UpdateScrollOffset()
    // Offset: 0x1FEEC14
    void UpdateScrollOffset();
    // public System.Void DrawCursor(System.String newText)
    // Offset: 0x1FDC0D0
    void DrawCursor(::StringW newText);
    // private System.Boolean PerformOperation(UnityEngine.TextEditor/UnityEngine.TextEditOp operation, System.Boolean textIsReadOnly)
    // Offset: 0x1FEFB58
    bool PerformOperation(::UnityEngine::TextEditor::TextEditOp operation, bool textIsReadOnly);
    // public System.Void SaveBackup()
    // Offset: 0x1FDAB44
    void SaveBackup();
    // public System.Boolean Cut()
    // Offset: 0x1FF1B58
    bool Cut();
    // public System.Void Copy()
    // Offset: 0x1FF1B8C
    void Copy();
    // static private System.String ReplaceNewlinesWithSpaces(System.String value)
    // Offset: 0x1FF1CC8
    static ::StringW ReplaceNewlinesWithSpaces(::StringW value);
    // public System.Boolean Paste()
    // Offset: 0x1FF1C1C
    bool Paste();
    // static private System.Void MapKey(System.String key, UnityEngine.TextEditor/UnityEngine.TextEditOp action)
    // Offset: 0x1FF1D58
    static void MapKey(::StringW key, ::UnityEngine::TextEditor::TextEditOp action);
    // private System.Void InitKeyActions()
    // Offset: 0x1FEF4F8
    void InitKeyActions();
    // public System.Void DetectFocusChange()
    // Offset: 0x1FDAC38
    void DetectFocusChange();
    // System.Void OnDetectFocusChange()
    // Offset: 0x1FF1DE0
    void OnDetectFocusChange();
    // System.Void OnCursorIndexChange()
    // Offset: 0x1FF1E90
    void OnCursorIndexChange();
    // System.Void OnSelectIndexChange()
    // Offset: 0x1FF1E94
    void OnSelectIndexChange();
    // private System.Void ClampTextIndex(ref System.Int32 index)
    // Offset: 0x1FF1E98
    void ClampTextIndex(ByRef<int> index);
    // private System.Void EnsureValidCodePointIndex(ref System.Int32 index)
    // Offset: 0x1FEEBC4
    void EnsureValidCodePointIndex(ByRef<int> index);
    // private System.Boolean IsValidCodePointIndex(System.Int32 index)
    // Offset: 0x1FF1F38
    bool IsValidCodePointIndex(int index);
    // private System.Int32 PreviousCodePointIndex(System.Int32 index)
    // Offset: 0x1FF06B8
    int PreviousCodePointIndex(int index);
    // private System.Int32 NextCodePointIndex(System.Int32 index)
    // Offset: 0x1FF0538
    int NextCodePointIndex(int index);
  }; // UnityEngine.TextEditor
  #pragma pack(pop)
  static check_size<sizeof(TextEditor), 140 + sizeof(int)> __UnityEngine_TextEditorSizeCheck;
  static_assert(sizeof(TextEditor) == 0x90);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextEditor::TextEditOp, "UnityEngine", "TextEditor/TextEditOp");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::TextEditor::DblClickSnapping, "UnityEngine", "TextEditor/DblClickSnapping");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::TextEditor::get_text
// Il2CppName: get_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::get_text)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "get_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::set_text
// Il2CppName: set_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)(::StringW)>(&UnityEngine::TextEditor::set_text)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "set_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::get_position
// Il2CppName: get_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::get_position)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "get_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::set_position
// Il2CppName: set_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)(::UnityEngine::Rect)>(&UnityEngine::TextEditor::set_position)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "set_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::get_localPosition
// Il2CppName: get_localPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::get_localPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "get_localPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::get_cursorIndex
// Il2CppName: get_cursorIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::get_cursorIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "get_cursorIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::set_cursorIndex
// Il2CppName: set_cursorIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)(int)>(&UnityEngine::TextEditor::set_cursorIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "set_cursorIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::get_selectIndex
// Il2CppName: get_selectIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::get_selectIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "get_selectIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::set_selectIndex
// Il2CppName: set_selectIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)(int)>(&UnityEngine::TextEditor::set_selectIndex)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "set_selectIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::get_hasSelection
// Il2CppName: get_hasSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::get_hasSelection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "get_hasSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::TextEditor::ClearCursorPos
// Il2CppName: ClearCursorPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::ClearCursorPos)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "ClearCursorPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::OnFocus
// Il2CppName: OnFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::OnFocus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "OnFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::OnLostFocus
// Il2CppName: OnLostFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::OnLostFocus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "OnLostFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::GrabGraphicalCursorPos
// Il2CppName: GrabGraphicalCursorPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::GrabGraphicalCursorPos)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "GrabGraphicalCursorPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::HandleKeyEvent
// Il2CppName: HandleKeyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextEditor::*)(::UnityEngine::Event*)>(&UnityEngine::TextEditor::HandleKeyEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "HandleKeyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::HandleKeyEvent
// Il2CppName: HandleKeyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextEditor::*)(::UnityEngine::Event*, bool)>(&UnityEngine::TextEditor::HandleKeyEvent)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    static auto* textIsReadOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "HandleKeyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e, textIsReadOnly});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::DeleteLineBack
// Il2CppName: DeleteLineBack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::DeleteLineBack)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "DeleteLineBack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::DeleteWordBack
// Il2CppName: DeleteWordBack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::DeleteWordBack)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "DeleteWordBack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::DeleteWordForward
// Il2CppName: DeleteWordForward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::DeleteWordForward)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "DeleteWordForward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::Delete
// Il2CppName: Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::Delete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::Backspace
// Il2CppName: Backspace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::Backspace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "Backspace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectAll
// Il2CppName: SelectAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectNone
// Il2CppName: SelectNone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectNone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectNone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::DeleteSelection
// Il2CppName: DeleteSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::DeleteSelection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "DeleteSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::ReplaceSelection
// Il2CppName: ReplaceSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)(::StringW)>(&UnityEngine::TextEditor::ReplaceSelection)> {
  static const MethodInfo* get() {
    static auto* replace = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "ReplaceSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{replace});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)(::Il2CppChar)>(&UnityEngine::TextEditor::Insert)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveRight
// Il2CppName: MoveRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::MoveRight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveLeft
// Il2CppName: MoveLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::MoveLeft)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveUp
// Il2CppName: MoveUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::MoveUp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveDown
// Il2CppName: MoveDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::MoveDown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveLineStart
// Il2CppName: MoveLineStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::MoveLineStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveLineStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveLineEnd
// Il2CppName: MoveLineEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::MoveLineEnd)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveLineEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveGraphicalLineStart
// Il2CppName: MoveGraphicalLineStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::MoveGraphicalLineStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveGraphicalLineStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveGraphicalLineEnd
// Il2CppName: MoveGraphicalLineEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::MoveGraphicalLineEnd)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveGraphicalLineEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveTextStart
// Il2CppName: MoveTextStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::MoveTextStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveTextStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveTextEnd
// Il2CppName: MoveTextEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::MoveTextEnd)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveTextEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::IndexOfEndOfLine
// Il2CppName: IndexOfEndOfLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextEditor::*)(int)>(&UnityEngine::TextEditor::IndexOfEndOfLine)> {
  static const MethodInfo* get() {
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "IndexOfEndOfLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveParagraphForward
// Il2CppName: MoveParagraphForward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::MoveParagraphForward)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveParagraphForward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveParagraphBackward
// Il2CppName: MoveParagraphBackward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::MoveParagraphBackward)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveParagraphBackward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveCursorToPosition
// Il2CppName: MoveCursorToPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)(::UnityEngine::Vector2)>(&UnityEngine::TextEditor::MoveCursorToPosition)> {
  static const MethodInfo* get() {
    static auto* cursorPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveCursorToPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cursorPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveCursorToPosition_Internal
// Il2CppName: MoveCursorToPosition_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)(::UnityEngine::Vector2, bool)>(&UnityEngine::TextEditor::MoveCursorToPosition_Internal)> {
  static const MethodInfo* get() {
    static auto* cursorPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* shift = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveCursorToPosition_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cursorPosition, shift});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectToPosition
// Il2CppName: SelectToPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)(::UnityEngine::Vector2)>(&UnityEngine::TextEditor::SelectToPosition)> {
  static const MethodInfo* get() {
    static auto* cursorPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectToPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cursorPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectLeft
// Il2CppName: SelectLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectLeft)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectRight
// Il2CppName: SelectRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectRight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectUp
// Il2CppName: SelectUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectUp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectDown
// Il2CppName: SelectDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectDown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectTextEnd
// Il2CppName: SelectTextEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectTextEnd)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectTextEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectTextStart
// Il2CppName: SelectTextStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectTextStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectTextStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MouseDragSelectsWholeWords
// Il2CppName: MouseDragSelectsWholeWords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)(bool)>(&UnityEngine::TextEditor::MouseDragSelectsWholeWords)> {
  static const MethodInfo* get() {
    static auto* on = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MouseDragSelectsWholeWords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{on});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::DblClickSnap
// Il2CppName: DblClickSnap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)(::UnityEngine::TextEditor::DblClickSnapping)>(&UnityEngine::TextEditor::DblClickSnap)> {
  static const MethodInfo* get() {
    static auto* snapping = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextEditor/DblClickSnapping")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "DblClickSnap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{snapping});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::GetGraphicalLineStart
// Il2CppName: GetGraphicalLineStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextEditor::*)(int)>(&UnityEngine::TextEditor::GetGraphicalLineStart)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "GetGraphicalLineStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::GetGraphicalLineEnd
// Il2CppName: GetGraphicalLineEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextEditor::*)(int)>(&UnityEngine::TextEditor::GetGraphicalLineEnd)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "GetGraphicalLineEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::FindNextSeperator
// Il2CppName: FindNextSeperator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextEditor::*)(int)>(&UnityEngine::TextEditor::FindNextSeperator)> {
  static const MethodInfo* get() {
    static auto* startPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "FindNextSeperator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startPos});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::FindPrevSeperator
// Il2CppName: FindPrevSeperator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextEditor::*)(int)>(&UnityEngine::TextEditor::FindPrevSeperator)> {
  static const MethodInfo* get() {
    static auto* startPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "FindPrevSeperator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startPos});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveWordRight
// Il2CppName: MoveWordRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::MoveWordRight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveWordRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveToStartOfNextWord
// Il2CppName: MoveToStartOfNextWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::MoveToStartOfNextWord)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveToStartOfNextWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveToEndOfPreviousWord
// Il2CppName: MoveToEndOfPreviousWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::MoveToEndOfPreviousWord)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveToEndOfPreviousWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectToStartOfNextWord
// Il2CppName: SelectToStartOfNextWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectToStartOfNextWord)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectToStartOfNextWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectToEndOfPreviousWord
// Il2CppName: SelectToEndOfPreviousWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectToEndOfPreviousWord)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectToEndOfPreviousWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::ClassifyChar
// Il2CppName: ClassifyChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TextEditor::CharacterType (UnityEngine::TextEditor::*)(int)>(&UnityEngine::TextEditor::ClassifyChar)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "ClassifyChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::FindStartOfNextWord
// Il2CppName: FindStartOfNextWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextEditor::*)(int)>(&UnityEngine::TextEditor::FindStartOfNextWord)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "FindStartOfNextWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::FindEndOfPreviousWord
// Il2CppName: FindEndOfPreviousWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextEditor::*)(int)>(&UnityEngine::TextEditor::FindEndOfPreviousWord)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "FindEndOfPreviousWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MoveWordLeft
// Il2CppName: MoveWordLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::MoveWordLeft)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MoveWordLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectWordRight
// Il2CppName: SelectWordRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectWordRight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectWordRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectWordLeft
// Il2CppName: SelectWordLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectWordLeft)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectWordLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::ExpandSelectGraphicalLineStart
// Il2CppName: ExpandSelectGraphicalLineStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::ExpandSelectGraphicalLineStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "ExpandSelectGraphicalLineStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::ExpandSelectGraphicalLineEnd
// Il2CppName: ExpandSelectGraphicalLineEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::ExpandSelectGraphicalLineEnd)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "ExpandSelectGraphicalLineEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectGraphicalLineStart
// Il2CppName: SelectGraphicalLineStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectGraphicalLineStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectGraphicalLineStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectGraphicalLineEnd
// Il2CppName: SelectGraphicalLineEnd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectGraphicalLineEnd)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectGraphicalLineEnd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectParagraphForward
// Il2CppName: SelectParagraphForward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectParagraphForward)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectParagraphForward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectParagraphBackward
// Il2CppName: SelectParagraphBackward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectParagraphBackward)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectParagraphBackward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectCurrentWord
// Il2CppName: SelectCurrentWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectCurrentWord)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectCurrentWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::FindEndOfClassification
// Il2CppName: FindEndOfClassification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextEditor::*)(int, ::UnityEngine::TextEditor::Direction)>(&UnityEngine::TextEditor::FindEndOfClassification)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* dir = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextEditor/Direction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "FindEndOfClassification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p, dir});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SelectCurrentParagraph
// Il2CppName: SelectCurrentParagraph
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SelectCurrentParagraph)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SelectCurrentParagraph", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::UpdateScrollOffsetIfNeeded
// Il2CppName: UpdateScrollOffsetIfNeeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)(::UnityEngine::Event*)>(&UnityEngine::TextEditor::UpdateScrollOffsetIfNeeded)> {
  static const MethodInfo* get() {
    static auto* evt = &::il2cpp_utils::GetClassFromName("UnityEngine", "Event")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "UpdateScrollOffsetIfNeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{evt});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::UpdateScrollOffset
// Il2CppName: UpdateScrollOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::UpdateScrollOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "UpdateScrollOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::DrawCursor
// Il2CppName: DrawCursor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)(::StringW)>(&UnityEngine::TextEditor::DrawCursor)> {
  static const MethodInfo* get() {
    static auto* newText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "DrawCursor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newText});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::PerformOperation
// Il2CppName: PerformOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextEditor::*)(::UnityEngine::TextEditor::TextEditOp, bool)>(&UnityEngine::TextEditor::PerformOperation)> {
  static const MethodInfo* get() {
    static auto* operation = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextEditor/TextEditOp")->byval_arg;
    static auto* textIsReadOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "PerformOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{operation, textIsReadOnly});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::SaveBackup
// Il2CppName: SaveBackup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::SaveBackup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "SaveBackup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::Cut
// Il2CppName: Cut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::Cut)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "Cut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::Copy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::ReplaceNewlinesWithSpaces
// Il2CppName: ReplaceNewlinesWithSpaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&UnityEngine::TextEditor::ReplaceNewlinesWithSpaces)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "ReplaceNewlinesWithSpaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::Paste
// Il2CppName: Paste
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::Paste)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "Paste", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::MapKey
// Il2CppName: MapKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityEngine::TextEditor::TextEditOp)>(&UnityEngine::TextEditor::MapKey)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* action = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextEditor/TextEditOp")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "MapKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, action});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::InitKeyActions
// Il2CppName: InitKeyActions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::InitKeyActions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "InitKeyActions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::DetectFocusChange
// Il2CppName: DetectFocusChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::DetectFocusChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "DetectFocusChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::OnDetectFocusChange
// Il2CppName: OnDetectFocusChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::OnDetectFocusChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "OnDetectFocusChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::OnCursorIndexChange
// Il2CppName: OnCursorIndexChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::OnCursorIndexChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "OnCursorIndexChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::OnSelectIndexChange
// Il2CppName: OnSelectIndexChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)()>(&UnityEngine::TextEditor::OnSelectIndexChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "OnSelectIndexChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::ClampTextIndex
// Il2CppName: ClampTextIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)(ByRef<int>)>(&UnityEngine::TextEditor::ClampTextIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "ClampTextIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::EnsureValidCodePointIndex
// Il2CppName: EnsureValidCodePointIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::TextEditor::*)(ByRef<int>)>(&UnityEngine::TextEditor::EnsureValidCodePointIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "EnsureValidCodePointIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::IsValidCodePointIndex
// Il2CppName: IsValidCodePointIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::TextEditor::*)(int)>(&UnityEngine::TextEditor::IsValidCodePointIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "IsValidCodePointIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::PreviousCodePointIndex
// Il2CppName: PreviousCodePointIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextEditor::*)(int)>(&UnityEngine::TextEditor::PreviousCodePointIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "PreviousCodePointIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: UnityEngine::TextEditor::NextCodePointIndex
// Il2CppName: NextCodePointIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::TextEditor::*)(int)>(&UnityEngine::TextEditor::NextCodePointIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::TextEditor*), "NextCodePointIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
