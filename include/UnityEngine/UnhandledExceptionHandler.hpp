// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: UnhandledExceptionHandler
  class UnhandledExceptionHandler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::UnhandledExceptionHandler);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::UnhandledExceptionHandler*, "UnityEngine", "UnhandledExceptionHandler");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.UnhandledExceptionHandler
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 1051724
  class UnhandledExceptionHandler : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::UnhandledExceptionHandler::$$c
    class $$c;
    // static private System.Void RegisterUECatcher()
    // Offset: 0x27D3E88
    static void RegisterUECatcher();
  }; // UnityEngine.UnhandledExceptionHandler
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::UnhandledExceptionHandler::RegisterUECatcher
// Il2CppName: RegisterUECatcher
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::UnhandledExceptionHandler::RegisterUECatcher)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::UnhandledExceptionHandler*), "RegisterUECatcher", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
