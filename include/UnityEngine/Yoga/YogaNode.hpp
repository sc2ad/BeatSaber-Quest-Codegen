// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Yoga
namespace UnityEngine::Yoga {
  // Forward declaring type: MeasureFunction
  class MeasureFunction;
  // Forward declaring type: BaselineFunction
  class BaselineFunction;
  // Forward declaring type: YogaSize
  struct YogaSize;
  // Forward declaring type: YogaMeasureMode
  struct YogaMeasureMode;
}
// Completed forward declares
// Type namespace: UnityEngine.Yoga
namespace UnityEngine::Yoga {
  // Forward declaring type: YogaNode
  class YogaNode;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Yoga::YogaNode);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Yoga::YogaNode*, "UnityEngine.Yoga", "YogaNode");
// Type namespace: UnityEngine.Yoga
namespace UnityEngine::Yoga {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Yoga.YogaNode
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 93FF94
  class YogaNode : public ::Il2CppObject {
    public:
    public:
    // System.IntPtr _ygNode
    // Size: 0x8
    // Offset: 0x10
    ::System::IntPtr ygNode;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // private UnityEngine.Yoga.MeasureFunction _measureFunction
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Yoga::MeasureFunction* measureFunction;
    // Field size check
    static_assert(sizeof(::UnityEngine::Yoga::MeasureFunction*) == 0x8);
    // private UnityEngine.Yoga.BaselineFunction _baselineFunction
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Yoga::BaselineFunction* baselineFunction;
    // Field size check
    static_assert(sizeof(::UnityEngine::Yoga::BaselineFunction*) == 0x8);
    public:
    // Get instance field reference: System.IntPtr _ygNode
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn__ygNode();
    // Get instance field reference: private UnityEngine.Yoga.MeasureFunction _measureFunction
    [[deprecated("Use field access instead!")]] ::UnityEngine::Yoga::MeasureFunction*& dyn__measureFunction();
    // Get instance field reference: private UnityEngine.Yoga.BaselineFunction _baselineFunction
    [[deprecated("Use field access instead!")]] ::UnityEngine::Yoga::BaselineFunction*& dyn__baselineFunction();
    // public System.Single get_LayoutX()
    // Offset: 0x1C0E590
    float get_LayoutX();
    // public System.Single get_LayoutY()
    // Offset: 0x1C0E5D0
    float get_LayoutY();
    // public System.Single get_LayoutWidth()
    // Offset: 0x1C0E610
    float get_LayoutWidth();
    // public System.Single get_LayoutHeight()
    // Offset: 0x1C0E650
    float get_LayoutHeight();
    // static public UnityEngine.Yoga.YogaSize MeasureInternal(UnityEngine.Yoga.YogaNode node, System.Single width, UnityEngine.Yoga.YogaMeasureMode widthMode, System.Single height, UnityEngine.Yoga.YogaMeasureMode heightMode)
    // Offset: 0x1C0E2E0
    static ::UnityEngine::Yoga::YogaSize MeasureInternal(::UnityEngine::Yoga::YogaNode* node, float width, ::UnityEngine::Yoga::YogaMeasureMode widthMode, float height, ::UnityEngine::Yoga::YogaMeasureMode heightMode);
    // static public System.Single BaselineInternal(UnityEngine.Yoga.YogaNode node, System.Single width, System.Single height)
    // Offset: 0x1C0E3EC
    static float BaselineInternal(::UnityEngine::Yoga::YogaNode* node, float width, float height);
  }; // UnityEngine.Yoga.YogaNode
  #pragma pack(pop)
  static check_size<sizeof(YogaNode), 32 + sizeof(::UnityEngine::Yoga::BaselineFunction*)> __UnityEngine_Yoga_YogaNodeSizeCheck;
  static_assert(sizeof(YogaNode) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Yoga::YogaNode::get_LayoutX
// Il2CppName: get_LayoutX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Yoga::YogaNode::*)()>(&UnityEngine::Yoga::YogaNode::get_LayoutX)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Yoga::YogaNode*), "get_LayoutX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Yoga::YogaNode::get_LayoutY
// Il2CppName: get_LayoutY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Yoga::YogaNode::*)()>(&UnityEngine::Yoga::YogaNode::get_LayoutY)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Yoga::YogaNode*), "get_LayoutY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Yoga::YogaNode::get_LayoutWidth
// Il2CppName: get_LayoutWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Yoga::YogaNode::*)()>(&UnityEngine::Yoga::YogaNode::get_LayoutWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Yoga::YogaNode*), "get_LayoutWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Yoga::YogaNode::get_LayoutHeight
// Il2CppName: get_LayoutHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Yoga::YogaNode::*)()>(&UnityEngine::Yoga::YogaNode::get_LayoutHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Yoga::YogaNode*), "get_LayoutHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Yoga::YogaNode::MeasureInternal
// Il2CppName: MeasureInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Yoga::YogaSize (*)(::UnityEngine::Yoga::YogaNode*, float, ::UnityEngine::Yoga::YogaMeasureMode, float, ::UnityEngine::Yoga::YogaMeasureMode)>(&UnityEngine::Yoga::YogaNode::MeasureInternal)> {
  static const MethodInfo* get() {
    static auto* node = &::il2cpp_utils::GetClassFromName("UnityEngine.Yoga", "YogaNode")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* widthMode = &::il2cpp_utils::GetClassFromName("UnityEngine.Yoga", "YogaMeasureMode")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* heightMode = &::il2cpp_utils::GetClassFromName("UnityEngine.Yoga", "YogaMeasureMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Yoga::YogaNode*), "MeasureInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{node, width, widthMode, height, heightMode});
  }
};
// Writing MetadataGetter for method: UnityEngine::Yoga::YogaNode::BaselineInternal
// Il2CppName: BaselineInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::UnityEngine::Yoga::YogaNode*, float, float)>(&UnityEngine::Yoga::YogaNode::BaselineInternal)> {
  static const MethodInfo* get() {
    static auto* node = &::il2cpp_utils::GetClassFromName("UnityEngine.Yoga", "YogaNode")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Yoga::YogaNode*), "BaselineInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{node, width, height});
  }
};
