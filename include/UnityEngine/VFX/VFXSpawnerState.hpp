// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.VFX
namespace UnityEngine::VFX {
  // Forward declaring type: VFXSpawnerState
  class VFXSpawnerState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::VFX::VFXSpawnerState);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::VFX::VFXSpawnerState*, "UnityEngine.VFX", "VFXSpawnerState");
// Type namespace: UnityEngine.VFX
namespace UnityEngine::VFX {
  // Size: 0x19
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.VFX.VFXSpawnerState
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeTypeAttribute] Offset: 947B60
  // [RequiredByNativeCodeAttribute] Offset: 947B60
  class VFXSpawnerState : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // private System.IntPtr m_Ptr
    // Size: 0x8
    // Offset: 0x10
    ::System::IntPtr m_Ptr;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // private System.Boolean m_Owner
    // Size: 0x1
    // Offset: 0x18
    bool m_Owner;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private System.IntPtr m_Ptr
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_m_Ptr();
    // Get instance field reference: private System.Boolean m_Owner
    [[deprecated("Use field access instead!")]] bool& dyn_m_Owner();
    // System.Void .ctor(System.IntPtr ptr, System.Boolean owner)
    // Offset: 0x1C27180
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VFXSpawnerState* New_ctor(::System::IntPtr ptr, bool owner) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::VFX::VFXSpawnerState::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VFXSpawnerState*, creationType>(ptr, owner)));
    }
    // static UnityEngine.VFX.VFXSpawnerState CreateSpawnerStateWrapper()
    // Offset: 0x1C271C0
    static ::UnityEngine::VFX::VFXSpawnerState* CreateSpawnerStateWrapper();
    // System.Void SetWrapValue(System.IntPtr ptr)
    // Offset: 0x1C27224
    void SetWrapValue(::System::IntPtr ptr);
    // private System.Void Release()
    // Offset: 0x1C272B8
    void Release();
    // public System.Void Dispose()
    // Offset: 0x1C273F4
    void Dispose();
    // static private System.Void Internal_Destroy(System.IntPtr ptr)
    // Offset: 0x1C2734C
    static void Internal_Destroy(::System::IntPtr ptr);
    // protected override System.Void Finalize()
    // Offset: 0x1C2738C
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // UnityEngine.VFX.VFXSpawnerState
  #pragma pack(pop)
  static check_size<sizeof(VFXSpawnerState), 24 + sizeof(bool)> __UnityEngine_VFX_VFXSpawnerStateSizeCheck;
  static_assert(sizeof(VFXSpawnerState) == 0x19);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::VFX::VFXSpawnerState::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::VFX::VFXSpawnerState::CreateSpawnerStateWrapper
// Il2CppName: CreateSpawnerStateWrapper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::VFX::VFXSpawnerState* (*)()>(&UnityEngine::VFX::VFXSpawnerState::CreateSpawnerStateWrapper)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::VFX::VFXSpawnerState*), "CreateSpawnerStateWrapper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::VFX::VFXSpawnerState::SetWrapValue
// Il2CppName: SetWrapValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::VFX::VFXSpawnerState::*)(::System::IntPtr)>(&UnityEngine::VFX::VFXSpawnerState::SetWrapValue)> {
  static const MethodInfo* get() {
    static auto* ptr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::VFX::VFXSpawnerState*), "SetWrapValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: UnityEngine::VFX::VFXSpawnerState::Release
// Il2CppName: Release
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::VFX::VFXSpawnerState::*)()>(&UnityEngine::VFX::VFXSpawnerState::Release)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::VFX::VFXSpawnerState*), "Release", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::VFX::VFXSpawnerState::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::VFX::VFXSpawnerState::*)()>(&UnityEngine::VFX::VFXSpawnerState::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::VFX::VFXSpawnerState*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::VFX::VFXSpawnerState::Internal_Destroy
// Il2CppName: Internal_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&UnityEngine::VFX::VFXSpawnerState::Internal_Destroy)> {
  static const MethodInfo* get() {
    static auto* ptr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::VFX::VFXSpawnerState*), "Internal_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ptr});
  }
};
// Writing MetadataGetter for method: UnityEngine::VFX::VFXSpawnerState::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::VFX::VFXSpawnerState::*)()>(&UnityEngine::VFX::VFXSpawnerState::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::VFX::VFXSpawnerState*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
