// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Networking
namespace UnityEngine::Networking {
  // Forward declaring type: DownloadHandler
  class DownloadHandler;
  // Forward declaring type: UploadHandler
  class UploadHandler;
  // Forward declaring type: CertificateHandler
  class CertificateHandler;
  // Forward declaring type: UnityWebRequestAsyncOperation
  class UnityWebRequestAsyncOperation;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Uri
  class Uri;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
// Completed forward declares
// Type namespace: UnityEngine.Networking
namespace UnityEngine::Networking {
  // Forward declaring type: UnityWebRequest
  class UnityWebRequest;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Networking::UnityWebRequest);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Networking::UnityWebRequest*, "UnityEngine.Networking", "UnityWebRequest");
// Type namespace: UnityEngine.Networking
namespace UnityEngine::Networking {
  // Size: 0x3B
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Networking.UnityWebRequest
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: 108DE10
  class UnityWebRequest : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    // Nested type: ::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod
    struct UnityWebRequestMethod;
    // Nested type: ::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError
    struct UnityWebRequestError;
    public:
    // System.IntPtr m_Ptr
    // Size: 0x8
    // Offset: 0x10
    ::System::IntPtr m_Ptr;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // UnityEngine.Networking.DownloadHandler m_DownloadHandler
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Networking::DownloadHandler* m_DownloadHandler;
    // Field size check
    static_assert(sizeof(::UnityEngine::Networking::DownloadHandler*) == 0x8);
    // UnityEngine.Networking.UploadHandler m_UploadHandler
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Networking::UploadHandler* m_UploadHandler;
    // Field size check
    static_assert(sizeof(::UnityEngine::Networking::UploadHandler*) == 0x8);
    // UnityEngine.Networking.CertificateHandler m_CertificateHandler
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Networking::CertificateHandler* m_CertificateHandler;
    // Field size check
    static_assert(sizeof(::UnityEngine::Networking::CertificateHandler*) == 0x8);
    // System.Uri m_Uri
    // Size: 0x8
    // Offset: 0x30
    ::System::Uri* m_Uri;
    // Field size check
    static_assert(sizeof(::System::Uri*) == 0x8);
    // [DebuggerBrowsableAttribute] Offset: 0x108DF9C
    // private System.Boolean <disposeCertificateHandlerOnDispose>k__BackingField
    // Size: 0x1
    // Offset: 0x38
    bool disposeCertificateHandlerOnDispose;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [DebuggerBrowsableAttribute] Offset: 0x108DFD8
    // private System.Boolean <disposeDownloadHandlerOnDispose>k__BackingField
    // Size: 0x1
    // Offset: 0x39
    bool disposeDownloadHandlerOnDispose;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [DebuggerBrowsableAttribute] Offset: 0x108E014
    // private System.Boolean <disposeUploadHandlerOnDispose>k__BackingField
    // Size: 0x1
    // Offset: 0x3A
    bool disposeUploadHandlerOnDispose;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Creating interface conversion operator: i_IDisposable
    inline ::System::IDisposable* i_IDisposable() noexcept {
      return reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: System.IntPtr m_Ptr
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_m_Ptr();
    // Get instance field reference: UnityEngine.Networking.DownloadHandler m_DownloadHandler
    [[deprecated("Use field access instead!")]] ::UnityEngine::Networking::DownloadHandler*& dyn_m_DownloadHandler();
    // Get instance field reference: UnityEngine.Networking.UploadHandler m_UploadHandler
    [[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UploadHandler*& dyn_m_UploadHandler();
    // Get instance field reference: UnityEngine.Networking.CertificateHandler m_CertificateHandler
    [[deprecated("Use field access instead!")]] ::UnityEngine::Networking::CertificateHandler*& dyn_m_CertificateHandler();
    // Get instance field reference: System.Uri m_Uri
    [[deprecated("Use field access instead!")]] ::System::Uri*& dyn_m_Uri();
    // Get instance field reference: private System.Boolean <disposeCertificateHandlerOnDispose>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$disposeCertificateHandlerOnDispose$k__BackingField();
    // Get instance field reference: private System.Boolean <disposeDownloadHandlerOnDispose>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$disposeDownloadHandlerOnDispose$k__BackingField();
    // Get instance field reference: private System.Boolean <disposeUploadHandlerOnDispose>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$disposeUploadHandlerOnDispose$k__BackingField();
    // public System.Boolean get_disposeCertificateHandlerOnDispose()
    // Offset: 0x2AD06DC
    bool get_disposeCertificateHandlerOnDispose();
    // public System.Void set_disposeCertificateHandlerOnDispose(System.Boolean value)
    // Offset: 0x2AD06E4
    void set_disposeCertificateHandlerOnDispose(bool value);
    // public System.Boolean get_disposeDownloadHandlerOnDispose()
    // Offset: 0x2AD06F0
    bool get_disposeDownloadHandlerOnDispose();
    // public System.Void set_disposeDownloadHandlerOnDispose(System.Boolean value)
    // Offset: 0x2AD06F8
    void set_disposeDownloadHandlerOnDispose(bool value);
    // public System.Boolean get_disposeUploadHandlerOnDispose()
    // Offset: 0x2AD0704
    bool get_disposeUploadHandlerOnDispose();
    // public System.Void set_disposeUploadHandlerOnDispose(System.Boolean value)
    // Offset: 0x2AD070C
    void set_disposeUploadHandlerOnDispose(bool value);
    // public System.Void set_method(System.String value)
    // Offset: 0x2AD0994
    void set_method(::StringW value);
    // public System.String get_error()
    // Offset: 0x2AD13C4
    ::StringW get_error();
    // public System.String get_url()
    // Offset: 0x2AD167C
    ::StringW get_url();
    // public System.Void set_url(System.String value)
    // Offset: 0x2AD0908
    void set_url(::StringW value);
    // public System.Int64 get_responseCode()
    // Offset: 0x2AD163C
    int64_t get_responseCode();
    // public System.Boolean get_isModifiable()
    // Offset: 0x2AD11D0
    bool get_isModifiable();
    // public System.Boolean get_isDone()
    // Offset: 0x2AD1C38
    bool get_isDone();
    // public System.Boolean get_isNetworkError()
    // Offset: 0x2AD15BC
    bool get_isNetworkError();
    // public System.Boolean get_isHttpError()
    // Offset: 0x2AD15FC
    bool get_isHttpError();
    // public System.Single get_downloadProgress()
    // Offset: 0x2AD1CB8
    float get_downloadProgress();
    // public System.UInt64 get_downloadedBytes()
    // Offset: 0x2AD1D60
    uint64_t get_downloadedBytes();
    // public System.Void set_redirectLimit(System.Int32 value)
    // Offset: 0x2AD1DF0
    void set_redirectLimit(int value);
    // public UnityEngine.Networking.UploadHandler get_uploadHandler()
    // Offset: 0x2AD0F40
    ::UnityEngine::Networking::UploadHandler* get_uploadHandler();
    // public System.Void set_uploadHandler(UnityEngine.Networking.UploadHandler value)
    // Offset: 0x2AD0CC8
    void set_uploadHandler(::UnityEngine::Networking::UploadHandler* value);
    // public UnityEngine.Networking.DownloadHandler get_downloadHandler()
    // Offset: 0x2AD0F38
    ::UnityEngine::Networking::DownloadHandler* get_downloadHandler();
    // public System.Void set_downloadHandler(UnityEngine.Networking.DownloadHandler value)
    // Offset: 0x2AD0BA0
    void set_downloadHandler(::UnityEngine::Networking::DownloadHandler* value);
    // public UnityEngine.Networking.CertificateHandler get_certificateHandler()
    // Offset: 0x2AD0FC8
    ::UnityEngine::Networking::CertificateHandler* get_certificateHandler();
    // public System.Void set_certificateHandler(UnityEngine.Networking.CertificateHandler value)
    // Offset: 0x2AD2110
    void set_certificateHandler(::UnityEngine::Networking::CertificateHandler* value);
    // public System.Void set_timeout(System.Int32 value)
    // Offset: 0x2AD2288
    void set_timeout(int value);
    // public System.Void .ctor(System.String url, System.String method)
    // Offset: 0x2AD0888
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UnityWebRequest* New_ctor(::StringW url, ::StringW method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UnityWebRequest*, creationType>(url, method)));
    }
    // public System.Void .ctor(System.String url, System.String method, UnityEngine.Networking.DownloadHandler downloadHandler, UnityEngine.Networking.UploadHandler uploadHandler)
    // Offset: 0x2AD0AF8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UnityWebRequest* New_ctor(::StringW url, ::StringW method, ::UnityEngine::Networking::DownloadHandler* downloadHandler, ::UnityEngine::Networking::UploadHandler* uploadHandler) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::UnityWebRequest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UnityWebRequest*, creationType>(url, method, downloadHandler, uploadHandler)));
    }
    // static private System.String GetWebErrorString(UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError err)
    // Offset: 0x2AD065C
    static ::StringW GetWebErrorString(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError err);
    // static System.String GetHTTPStatusString(System.Int64 responseCode)
    // Offset: 0x2AD069C
    static ::StringW GetHTTPStatusString(int64_t responseCode);
    // static System.IntPtr Create()
    // Offset: 0x2AD0718
    static ::System::IntPtr Create();
    // private System.Void Release()
    // Offset: 0x2AD074C
    void Release();
    // System.Void InternalDestroy()
    // Offset: 0x2AD078C
    void InternalDestroy();
    // private System.Void InternalSetDefaults()
    // Offset: 0x2AD0874
    void InternalSetDefaults();
    // public System.Void Dispose()
    // Offset: 0x2AD0EC0
    void Dispose();
    // private System.Void DisposeHandlers()
    // Offset: 0x2AD0E60
    void DisposeHandlers();
    // UnityEngine.Networking.UnityWebRequestAsyncOperation BeginWebRequest()
    // Offset: 0x2AD0FD0
    ::UnityEngine::Networking::UnityWebRequestAsyncOperation* BeginWebRequest();
    // public UnityEngine.Networking.UnityWebRequestAsyncOperation SendWebRequest()
    // Offset: 0x2AD1010
    ::UnityEngine::Networking::UnityWebRequestAsyncOperation* SendWebRequest();
    // public System.Void Abort()
    // Offset: 0x2AD0834
    void Abort();
    // private UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SetMethod(UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestMethod methodType)
    // Offset: 0x2AD105C
    ::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError SetMethod(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod methodType);
    // System.Void InternalSetMethod(UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestMethod methodType)
    // Offset: 0x2AD10AC
    void InternalSetMethod(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod methodType);
    // private UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SetCustomMethod(System.String customMethodName)
    // Offset: 0x2AD1210
    ::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError SetCustomMethod(::StringW customMethodName);
    // System.Void InternalSetCustomMethod(System.String customMethodName)
    // Offset: 0x2AD1260
    void InternalSetCustomMethod(::StringW customMethodName);
    // private UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError GetError()
    // Offset: 0x2AD1384
    ::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError GetError();
    // private System.String GetUrl()
    // Offset: 0x2AD16BC
    ::StringW GetUrl();
    // private UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SetUrl(System.String url)
    // Offset: 0x2AD1BA8
    ::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError SetUrl(::StringW url);
    // private System.Void InternalSetUrl(System.String url)
    // Offset: 0x2AD1A84
    void InternalSetUrl(::StringW url);
    // private System.Boolean IsExecuting()
    // Offset: 0x2AD1BF8
    bool IsExecuting();
    // private System.Single GetDownloadProgress()
    // Offset: 0x2AD1C78
    float GetDownloadProgress();
    // private System.Void SetRedirectLimitFromScripting(System.Int32 limit)
    // Offset: 0x2AD1DA0
    void SetRedirectLimitFromScripting(int limit);
    // UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError InternalSetRequestHeader(System.String name, System.String value)
    // Offset: 0x2AD1E40
    ::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError InternalSetRequestHeader(::StringW name, ::StringW value);
    // public System.Void SetRequestHeader(System.String name, System.String value)
    // Offset: 0x2AD1E98
    void SetRequestHeader(::StringW name, ::StringW value);
    // private UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SetUploadHandler(UnityEngine.Networking.UploadHandler uh)
    // Offset: 0x2AD2020
    ::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError SetUploadHandler(::UnityEngine::Networking::UploadHandler* uh);
    // private UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SetDownloadHandler(UnityEngine.Networking.DownloadHandler dh)
    // Offset: 0x2AD2070
    ::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError SetDownloadHandler(::UnityEngine::Networking::DownloadHandler* dh);
    // private UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SetCertificateHandler(UnityEngine.Networking.CertificateHandler ch)
    // Offset: 0x2AD20C0
    ::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError SetCertificateHandler(::UnityEngine::Networking::CertificateHandler* ch);
    // private UnityEngine.Networking.UnityWebRequest/UnityEngine.Networking.UnityWebRequestError SetTimeoutMsec(System.Int32 timeout)
    // Offset: 0x2AD2238
    ::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError SetTimeoutMsec(int timeout);
    // static public UnityEngine.Networking.UnityWebRequest Get(System.String uri)
    // Offset: 0x2AD23E4
    static ::UnityEngine::Networking::UnityWebRequest* Get(::StringW uri);
    // static public System.String EscapeURL(System.String s)
    // Offset: 0x2AD2478
    static ::StringW EscapeURL(::StringW s);
    // static public System.String EscapeURL(System.String s, System.Text.Encoding e)
    // Offset: 0x2AD24A4
    static ::StringW EscapeURL(::StringW s, ::System::Text::Encoding* e);
    // protected override System.Void Finalize()
    // Offset: 0x2AD0DF0
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // UnityEngine.Networking.UnityWebRequest
  #pragma pack(pop)
  static check_size<sizeof(UnityWebRequest), 58 + sizeof(bool)> __UnityEngine_Networking_UnityWebRequestSizeCheck;
  static_assert(sizeof(UnityWebRequest) == 0x3B);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::get_disposeCertificateHandlerOnDispose
// Il2CppName: get_disposeCertificateHandlerOnDispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::get_disposeCertificateHandlerOnDispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "get_disposeCertificateHandlerOnDispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::set_disposeCertificateHandlerOnDispose
// Il2CppName: set_disposeCertificateHandlerOnDispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)(bool)>(&UnityEngine::Networking::UnityWebRequest::set_disposeCertificateHandlerOnDispose)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "set_disposeCertificateHandlerOnDispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::get_disposeDownloadHandlerOnDispose
// Il2CppName: get_disposeDownloadHandlerOnDispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::get_disposeDownloadHandlerOnDispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "get_disposeDownloadHandlerOnDispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::set_disposeDownloadHandlerOnDispose
// Il2CppName: set_disposeDownloadHandlerOnDispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)(bool)>(&UnityEngine::Networking::UnityWebRequest::set_disposeDownloadHandlerOnDispose)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "set_disposeDownloadHandlerOnDispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::get_disposeUploadHandlerOnDispose
// Il2CppName: get_disposeUploadHandlerOnDispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::get_disposeUploadHandlerOnDispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "get_disposeUploadHandlerOnDispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::set_disposeUploadHandlerOnDispose
// Il2CppName: set_disposeUploadHandlerOnDispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)(bool)>(&UnityEngine::Networking::UnityWebRequest::set_disposeUploadHandlerOnDispose)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "set_disposeUploadHandlerOnDispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::set_method
// Il2CppName: set_method
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)(::StringW)>(&UnityEngine::Networking::UnityWebRequest::set_method)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "set_method", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::get_error
// Il2CppName: get_error
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::get_error)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "get_error", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::get_url
// Il2CppName: get_url
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::get_url)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "get_url", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::set_url
// Il2CppName: set_url
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)(::StringW)>(&UnityEngine::Networking::UnityWebRequest::set_url)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "set_url", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::get_responseCode
// Il2CppName: get_responseCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::get_responseCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "get_responseCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::get_isModifiable
// Il2CppName: get_isModifiable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::get_isModifiable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "get_isModifiable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::get_isDone
// Il2CppName: get_isDone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::get_isDone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "get_isDone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::get_isNetworkError
// Il2CppName: get_isNetworkError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::get_isNetworkError)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "get_isNetworkError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::get_isHttpError
// Il2CppName: get_isHttpError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::get_isHttpError)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "get_isHttpError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::get_downloadProgress
// Il2CppName: get_downloadProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::get_downloadProgress)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "get_downloadProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::get_downloadedBytes
// Il2CppName: get_downloadedBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::get_downloadedBytes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "get_downloadedBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::set_redirectLimit
// Il2CppName: set_redirectLimit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)(int)>(&UnityEngine::Networking::UnityWebRequest::set_redirectLimit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "set_redirectLimit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::get_uploadHandler
// Il2CppName: get_uploadHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::UploadHandler* (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::get_uploadHandler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "get_uploadHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::set_uploadHandler
// Il2CppName: set_uploadHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)(::UnityEngine::Networking::UploadHandler*)>(&UnityEngine::Networking::UnityWebRequest::set_uploadHandler)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Networking", "UploadHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "set_uploadHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::get_downloadHandler
// Il2CppName: get_downloadHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::DownloadHandler* (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::get_downloadHandler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "get_downloadHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::set_downloadHandler
// Il2CppName: set_downloadHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)(::UnityEngine::Networking::DownloadHandler*)>(&UnityEngine::Networking::UnityWebRequest::set_downloadHandler)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Networking", "DownloadHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "set_downloadHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::get_certificateHandler
// Il2CppName: get_certificateHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::CertificateHandler* (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::get_certificateHandler)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "get_certificateHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::set_certificateHandler
// Il2CppName: set_certificateHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)(::UnityEngine::Networking::CertificateHandler*)>(&UnityEngine::Networking::UnityWebRequest::set_certificateHandler)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.Networking", "CertificateHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "set_certificateHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::set_timeout
// Il2CppName: set_timeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)(int)>(&UnityEngine::Networking::UnityWebRequest::set_timeout)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "set_timeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::GetWebErrorString
// Il2CppName: GetWebErrorString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError)>(&UnityEngine::Networking::UnityWebRequest::GetWebErrorString)> {
  static const MethodInfo* get() {
    static auto* err = &::il2cpp_utils::GetClassFromName("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "GetWebErrorString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{err});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::GetHTTPStatusString
// Il2CppName: GetHTTPStatusString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int64_t)>(&UnityEngine::Networking::UnityWebRequest::GetHTTPStatusString)> {
  static const MethodInfo* get() {
    static auto* responseCode = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "GetHTTPStatusString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{responseCode});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&UnityEngine::Networking::UnityWebRequest::Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::Release
// Il2CppName: Release
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::Release)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "Release", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::InternalDestroy
// Il2CppName: InternalDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::InternalDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "InternalDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::InternalSetDefaults
// Il2CppName: InternalSetDefaults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::InternalSetDefaults)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "InternalSetDefaults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::DisposeHandlers
// Il2CppName: DisposeHandlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::DisposeHandlers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "DisposeHandlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::BeginWebRequest
// Il2CppName: BeginWebRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::UnityWebRequestAsyncOperation* (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::BeginWebRequest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "BeginWebRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::SendWebRequest
// Il2CppName: SendWebRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::UnityWebRequestAsyncOperation* (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::SendWebRequest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "SendWebRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::Abort
// Il2CppName: Abort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::Abort)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "Abort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::SetMethod
// Il2CppName: SetMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityEngine::Networking::UnityWebRequest::*)(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod)>(&UnityEngine::Networking::UnityWebRequest::SetMethod)> {
  static const MethodInfo* get() {
    static auto* methodType = &::il2cpp_utils::GetClassFromName("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "SetMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{methodType});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::InternalSetMethod
// Il2CppName: InternalSetMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)(::UnityEngine::Networking::UnityWebRequest::UnityWebRequestMethod)>(&UnityEngine::Networking::UnityWebRequest::InternalSetMethod)> {
  static const MethodInfo* get() {
    static auto* methodType = &::il2cpp_utils::GetClassFromName("UnityEngine.Networking", "UnityWebRequest/UnityWebRequestMethod")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "InternalSetMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{methodType});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::SetCustomMethod
// Il2CppName: SetCustomMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityEngine::Networking::UnityWebRequest::*)(::StringW)>(&UnityEngine::Networking::UnityWebRequest::SetCustomMethod)> {
  static const MethodInfo* get() {
    static auto* customMethodName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "SetCustomMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{customMethodName});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::InternalSetCustomMethod
// Il2CppName: InternalSetCustomMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)(::StringW)>(&UnityEngine::Networking::UnityWebRequest::InternalSetCustomMethod)> {
  static const MethodInfo* get() {
    static auto* customMethodName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "InternalSetCustomMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{customMethodName});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::GetError
// Il2CppName: GetError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::GetError)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "GetError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::GetUrl
// Il2CppName: GetUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::GetUrl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "GetUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::SetUrl
// Il2CppName: SetUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityEngine::Networking::UnityWebRequest::*)(::StringW)>(&UnityEngine::Networking::UnityWebRequest::SetUrl)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "SetUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::InternalSetUrl
// Il2CppName: InternalSetUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)(::StringW)>(&UnityEngine::Networking::UnityWebRequest::InternalSetUrl)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "InternalSetUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::IsExecuting
// Il2CppName: IsExecuting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::IsExecuting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "IsExecuting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::GetDownloadProgress
// Il2CppName: GetDownloadProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::GetDownloadProgress)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "GetDownloadProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::SetRedirectLimitFromScripting
// Il2CppName: SetRedirectLimitFromScripting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)(int)>(&UnityEngine::Networking::UnityWebRequest::SetRedirectLimitFromScripting)> {
  static const MethodInfo* get() {
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "SetRedirectLimitFromScripting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{limit});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::InternalSetRequestHeader
// Il2CppName: InternalSetRequestHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityEngine::Networking::UnityWebRequest::*)(::StringW, ::StringW)>(&UnityEngine::Networking::UnityWebRequest::InternalSetRequestHeader)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "InternalSetRequestHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::SetRequestHeader
// Il2CppName: SetRequestHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)(::StringW, ::StringW)>(&UnityEngine::Networking::UnityWebRequest::SetRequestHeader)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "SetRequestHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::SetUploadHandler
// Il2CppName: SetUploadHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityEngine::Networking::UnityWebRequest::*)(::UnityEngine::Networking::UploadHandler*)>(&UnityEngine::Networking::UnityWebRequest::SetUploadHandler)> {
  static const MethodInfo* get() {
    static auto* uh = &::il2cpp_utils::GetClassFromName("UnityEngine.Networking", "UploadHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "SetUploadHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uh});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::SetDownloadHandler
// Il2CppName: SetDownloadHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityEngine::Networking::UnityWebRequest::*)(::UnityEngine::Networking::DownloadHandler*)>(&UnityEngine::Networking::UnityWebRequest::SetDownloadHandler)> {
  static const MethodInfo* get() {
    static auto* dh = &::il2cpp_utils::GetClassFromName("UnityEngine.Networking", "DownloadHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "SetDownloadHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dh});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::SetCertificateHandler
// Il2CppName: SetCertificateHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityEngine::Networking::UnityWebRequest::*)(::UnityEngine::Networking::CertificateHandler*)>(&UnityEngine::Networking::UnityWebRequest::SetCertificateHandler)> {
  static const MethodInfo* get() {
    static auto* ch = &::il2cpp_utils::GetClassFromName("UnityEngine.Networking", "CertificateHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "SetCertificateHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ch});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::SetTimeoutMsec
// Il2CppName: SetTimeoutMsec
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::UnityWebRequest::UnityWebRequestError (UnityEngine::Networking::UnityWebRequest::*)(int)>(&UnityEngine::Networking::UnityWebRequest::SetTimeoutMsec)> {
  static const MethodInfo* get() {
    static auto* timeout = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "SetTimeoutMsec", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{timeout});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::UnityWebRequest* (*)(::StringW)>(&UnityEngine::Networking::UnityWebRequest::Get)> {
  static const MethodInfo* get() {
    static auto* uri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uri});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::EscapeURL
// Il2CppName: EscapeURL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&UnityEngine::Networking::UnityWebRequest::EscapeURL)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "EscapeURL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::EscapeURL
// Il2CppName: EscapeURL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::System::Text::Encoding*)>(&UnityEngine::Networking::UnityWebRequest::EscapeURL)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Text", "Encoding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "EscapeURL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, e});
  }
};
// Writing MetadataGetter for method: UnityEngine::Networking::UnityWebRequest::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Networking::UnityWebRequest::*)()>(&UnityEngine::Networking::UnityWebRequest::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::UnityWebRequest*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
