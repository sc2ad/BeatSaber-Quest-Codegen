// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: OnDemandRendering
  class OnDemandRendering;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Rendering::OnDemandRendering);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Rendering::OnDemandRendering*, "UnityEngine.Rendering", "OnDemandRendering");
// Type namespace: UnityEngine.Rendering
namespace UnityEngine::Rendering {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Rendering.OnDemandRendering
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequiredByNativeCodeAttribute] Offset: 108FF20
  class OnDemandRendering : public ::Il2CppObject {
    public:
    // Get static field: static private System.Int32 m_RenderFrameInterval
    static int _get_m_RenderFrameInterval();
    // Set static field: static private System.Int32 m_RenderFrameInterval
    static void _set_m_RenderFrameInterval(int value);
    // static public System.Int32 get_renderFrameInterval()
    // Offset: 0x213BB48
    static int get_renderFrameInterval();
    // static private System.Void .cctor()
    // Offset: 0x213BC18
    static void _cctor();
    // static System.Void GetRenderFrameInterval(out System.Int32 frameInterval)
    // Offset: 0x213BBB0
    static void GetRenderFrameInterval(ByRef<int> frameInterval);
  }; // UnityEngine.Rendering.OnDemandRendering
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Rendering::OnDemandRendering::get_renderFrameInterval
// Il2CppName: get_renderFrameInterval
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&UnityEngine::Rendering::OnDemandRendering::get_renderFrameInterval)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::OnDemandRendering*), "get_renderFrameInterval", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::OnDemandRendering::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::Rendering::OnDemandRendering::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::OnDemandRendering*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Rendering::OnDemandRendering::GetRenderFrameInterval
// Il2CppName: GetRenderFrameInterval
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<int>)>(&UnityEngine::Rendering::OnDemandRendering::GetRenderFrameInterval)> {
  static const MethodInfo* get() {
    static auto* frameInterval = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Rendering::OnDemandRendering*), "GetRenderFrameInterval", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{frameInterval});
  }
};
