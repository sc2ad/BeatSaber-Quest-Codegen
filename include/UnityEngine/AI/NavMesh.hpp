// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::AI
namespace UnityEngine::AI {
  // Forward declaring type: NavMeshPath
  class NavMeshPath;
  // Forward declaring type: NavMeshHit
  struct NavMeshHit;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
// Type namespace: UnityEngine.AI
namespace UnityEngine::AI {
  // Forward declaring type: NavMesh
  class NavMesh;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::AI::NavMesh);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::AI::NavMesh*, "UnityEngine.AI", "NavMesh");
// Type namespace: UnityEngine.AI
namespace UnityEngine::AI {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.AI.NavMesh
  // [TokenAttribute] Offset: FFFFFFFF
  // [StaticAccessorAttribute] Offset: 109E908
  // [MovedFromAttribute] Offset: 109E908
  // [NativeHeaderAttribute] Offset: 109E908
  // [NativeHeaderAttribute] Offset: 109E908
  class NavMesh : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::AI::NavMesh::OnNavMeshPreUpdate
    class OnNavMeshPreUpdate;
    // Get static field: static public UnityEngine.AI.NavMesh/UnityEngine.AI.OnNavMeshPreUpdate onPreUpdate
    static ::UnityEngine::AI::NavMesh::OnNavMeshPreUpdate* _get_onPreUpdate();
    // Set static field: static public UnityEngine.AI.NavMesh/UnityEngine.AI.OnNavMeshPreUpdate onPreUpdate
    static void _set_onPreUpdate(::UnityEngine::AI::NavMesh::OnNavMeshPreUpdate* value);
    // static private System.Void Internal_CallOnNavMeshPreUpdate()
    // Offset: 0x2AFD468
    static void Internal_CallOnNavMeshPreUpdate();
    // static public System.Boolean CalculatePath(UnityEngine.Vector3 sourcePosition, UnityEngine.Vector3 targetPosition, System.Int32 areaMask, UnityEngine.AI.NavMeshPath path)
    // Offset: 0x2AFD6D4
    static bool CalculatePath(::UnityEngine::Vector3 sourcePosition, ::UnityEngine::Vector3 targetPosition, int areaMask, ::UnityEngine::AI::NavMeshPath* path);
    // static private System.Boolean CalculatePathInternal(UnityEngine.Vector3 sourcePosition, UnityEngine.Vector3 targetPosition, System.Int32 areaMask, UnityEngine.AI.NavMeshPath path)
    // Offset: 0x2AFD7C8
    static bool CalculatePathInternal(::UnityEngine::Vector3 sourcePosition, ::UnityEngine::Vector3 targetPosition, int areaMask, ::UnityEngine::AI::NavMeshPath* path);
    // static public System.Boolean SamplePosition(UnityEngine.Vector3 sourcePosition, out UnityEngine.AI.NavMeshHit hit, System.Single maxDistance, System.Int32 areaMask)
    // Offset: 0x2AFD8A8
    static bool SamplePosition(::UnityEngine::Vector3 sourcePosition, ByRef<::UnityEngine::AI::NavMeshHit> hit, float maxDistance, int areaMask);
    // static private System.Boolean CalculatePathInternal_Injected(ref UnityEngine.Vector3 sourcePosition, ref UnityEngine.Vector3 targetPosition, System.Int32 areaMask, UnityEngine.AI.NavMeshPath path)
    // Offset: 0x2AFD840
    static bool CalculatePathInternal_Injected(ByRef<::UnityEngine::Vector3> sourcePosition, ByRef<::UnityEngine::Vector3> targetPosition, int areaMask, ::UnityEngine::AI::NavMeshPath* path);
    // static private System.Boolean SamplePosition_Injected(ref UnityEngine.Vector3 sourcePosition, out UnityEngine.AI.NavMeshHit hit, System.Single maxDistance, System.Int32 areaMask)
    // Offset: 0x2AFD924
    static bool SamplePosition_Injected(ByRef<::UnityEngine::Vector3> sourcePosition, ByRef<::UnityEngine::AI::NavMeshHit> hit, float maxDistance, int areaMask);
  }; // UnityEngine.AI.NavMesh
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::AI::NavMesh::Internal_CallOnNavMeshPreUpdate
// Il2CppName: Internal_CallOnNavMeshPreUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityEngine::AI::NavMesh::Internal_CallOnNavMeshPreUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMesh*), "Internal_CallOnNavMeshPreUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMesh::CalculatePath
// Il2CppName: CalculatePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, int, ::UnityEngine::AI::NavMeshPath*)>(&UnityEngine::AI::NavMesh::CalculatePath)> {
  static const MethodInfo* get() {
    static auto* sourcePosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* targetPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* areaMask = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshPath")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMesh*), "CalculatePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sourcePosition, targetPosition, areaMask, path});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMesh::CalculatePathInternal
// Il2CppName: CalculatePathInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, int, ::UnityEngine::AI::NavMeshPath*)>(&UnityEngine::AI::NavMesh::CalculatePathInternal)> {
  static const MethodInfo* get() {
    static auto* sourcePosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* targetPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* areaMask = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshPath")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMesh*), "CalculatePathInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sourcePosition, targetPosition, areaMask, path});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMesh::SamplePosition
// Il2CppName: SamplePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Vector3, ByRef<::UnityEngine::AI::NavMeshHit>, float, int)>(&UnityEngine::AI::NavMesh::SamplePosition)> {
  static const MethodInfo* get() {
    static auto* sourcePosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* hit = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshHit")->this_arg;
    static auto* maxDistance = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* areaMask = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMesh*), "SamplePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sourcePosition, hit, maxDistance, areaMask});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMesh::CalculatePathInternal_Injected
// Il2CppName: CalculatePathInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Vector3>, int, ::UnityEngine::AI::NavMeshPath*)>(&UnityEngine::AI::NavMesh::CalculatePathInternal_Injected)> {
  static const MethodInfo* get() {
    static auto* sourcePosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* targetPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* areaMask = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshPath")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMesh*), "CalculatePathInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sourcePosition, targetPosition, areaMask, path});
  }
};
// Writing MetadataGetter for method: UnityEngine::AI::NavMesh::SamplePosition_Injected
// Il2CppName: SamplePosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::AI::NavMeshHit>, float, int)>(&UnityEngine::AI::NavMesh::SamplePosition_Injected)> {
  static const MethodInfo* get() {
    static auto* sourcePosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* hit = &::il2cpp_utils::GetClassFromName("UnityEngine.AI", "NavMeshHit")->this_arg;
    static auto* maxDistance = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* areaMask = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AI::NavMesh*), "SamplePosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sourcePosition, hit, maxDistance, areaMask});
  }
};
