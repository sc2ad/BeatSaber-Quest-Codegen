// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
// Type namespace: Mono
namespace Mono {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Runtime
  // [TokenAttribute] Offset: FFFFFFFF
  class Runtime : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: Runtime
    Runtime() noexcept {}
    // static private System.Void mono_runtime_install_handlers()
    // Offset: 0x1C3F66C
    static void mono_runtime_install_handlers();
    // static public System.Void InstallSignalHandlers()
    // Offset: 0x1C3F670
    static void InstallSignalHandlers();
    // static private System.Void mono_runtime_cleanup_handlers()
    // Offset: 0x1C3F674
    static void mono_runtime_cleanup_handlers();
    // static public System.Void RemoveSignalHandlers()
    // Offset: 0x1C3F6A8
    static void RemoveSignalHandlers();
    // static public System.String GetDisplayName()
    // Offset: 0x1C3F6DC
    static ::Il2CppString* GetDisplayName();
    // static private System.String GetNativeStackTrace(System.Exception exception)
    // Offset: 0x1C3F6E0
    static ::Il2CppString* GetNativeStackTrace(System::Exception* exception);
    // static public System.Boolean SetGCAllowSynchronousMajor(System.Boolean flag)
    // Offset: 0x1C3F6E4
    static bool SetGCAllowSynchronousMajor(bool flag);
  }; // Mono.Runtime
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Mono::Runtime*, "Mono", "Runtime");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Mono::Runtime::mono_runtime_install_handlers
// Il2CppName: mono_runtime_install_handlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Mono::Runtime::mono_runtime_install_handlers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Runtime*), "mono_runtime_install_handlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mono::Runtime::InstallSignalHandlers
// Il2CppName: InstallSignalHandlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Mono::Runtime::InstallSignalHandlers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Runtime*), "InstallSignalHandlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mono::Runtime::mono_runtime_cleanup_handlers
// Il2CppName: mono_runtime_cleanup_handlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Mono::Runtime::mono_runtime_cleanup_handlers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Runtime*), "mono_runtime_cleanup_handlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mono::Runtime::RemoveSignalHandlers
// Il2CppName: RemoveSignalHandlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Mono::Runtime::RemoveSignalHandlers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Runtime*), "RemoveSignalHandlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mono::Runtime::GetDisplayName
// Il2CppName: GetDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&Mono::Runtime::GetDisplayName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Runtime*), "GetDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mono::Runtime::GetNativeStackTrace
// Il2CppName: GetNativeStackTrace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::Exception*)>(&Mono::Runtime::GetNativeStackTrace)> {
  static const MethodInfo* get() {
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Runtime*), "GetNativeStackTrace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{exception});
  }
};
// Writing MetadataGetter for method: Mono::Runtime::SetGCAllowSynchronousMajor
// Il2CppName: SetGCAllowSynchronousMajor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(bool)>(&Mono::Runtime::SetGCAllowSynchronousMajor)> {
  static const MethodInfo* get() {
    static auto* flag = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Runtime*), "SetGCAllowSynchronousMajor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{flag});
  }
};
