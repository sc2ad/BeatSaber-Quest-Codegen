// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Mono.Security.X509.Extensions
namespace Mono::Security::X509::Extensions {
  // Forward declaring type: KeyUsages
  struct KeyUsages;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Mono::Security::X509::Extensions::KeyUsages, "Mono.Security.X509.Extensions", "KeyUsages");
// Type namespace: Mono.Security.X509.Extensions
namespace Mono::Security::X509::Extensions {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Security.X509.Extensions.KeyUsages
  // [TokenAttribute] Offset: FFFFFFFF
  // [FlagsAttribute] Offset: FFFFFFFF
  struct KeyUsages/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: KeyUsages
    constexpr KeyUsages(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Mono.Security.X509.Extensions.KeyUsages digitalSignature
    static constexpr const int digitalSignature = 128;
    // Get static field: static public Mono.Security.X509.Extensions.KeyUsages digitalSignature
    static ::Mono::Security::X509::Extensions::KeyUsages _get_digitalSignature();
    // Set static field: static public Mono.Security.X509.Extensions.KeyUsages digitalSignature
    static void _set_digitalSignature(::Mono::Security::X509::Extensions::KeyUsages value);
    // static field const value: static public Mono.Security.X509.Extensions.KeyUsages nonRepudiation
    static constexpr const int nonRepudiation = 64;
    // Get static field: static public Mono.Security.X509.Extensions.KeyUsages nonRepudiation
    static ::Mono::Security::X509::Extensions::KeyUsages _get_nonRepudiation();
    // Set static field: static public Mono.Security.X509.Extensions.KeyUsages nonRepudiation
    static void _set_nonRepudiation(::Mono::Security::X509::Extensions::KeyUsages value);
    // static field const value: static public Mono.Security.X509.Extensions.KeyUsages keyEncipherment
    static constexpr const int keyEncipherment = 32;
    // Get static field: static public Mono.Security.X509.Extensions.KeyUsages keyEncipherment
    static ::Mono::Security::X509::Extensions::KeyUsages _get_keyEncipherment();
    // Set static field: static public Mono.Security.X509.Extensions.KeyUsages keyEncipherment
    static void _set_keyEncipherment(::Mono::Security::X509::Extensions::KeyUsages value);
    // static field const value: static public Mono.Security.X509.Extensions.KeyUsages dataEncipherment
    static constexpr const int dataEncipherment = 16;
    // Get static field: static public Mono.Security.X509.Extensions.KeyUsages dataEncipherment
    static ::Mono::Security::X509::Extensions::KeyUsages _get_dataEncipherment();
    // Set static field: static public Mono.Security.X509.Extensions.KeyUsages dataEncipherment
    static void _set_dataEncipherment(::Mono::Security::X509::Extensions::KeyUsages value);
    // static field const value: static public Mono.Security.X509.Extensions.KeyUsages keyAgreement
    static constexpr const int keyAgreement = 8;
    // Get static field: static public Mono.Security.X509.Extensions.KeyUsages keyAgreement
    static ::Mono::Security::X509::Extensions::KeyUsages _get_keyAgreement();
    // Set static field: static public Mono.Security.X509.Extensions.KeyUsages keyAgreement
    static void _set_keyAgreement(::Mono::Security::X509::Extensions::KeyUsages value);
    // static field const value: static public Mono.Security.X509.Extensions.KeyUsages keyCertSign
    static constexpr const int keyCertSign = 4;
    // Get static field: static public Mono.Security.X509.Extensions.KeyUsages keyCertSign
    static ::Mono::Security::X509::Extensions::KeyUsages _get_keyCertSign();
    // Set static field: static public Mono.Security.X509.Extensions.KeyUsages keyCertSign
    static void _set_keyCertSign(::Mono::Security::X509::Extensions::KeyUsages value);
    // static field const value: static public Mono.Security.X509.Extensions.KeyUsages cRLSign
    static constexpr const int cRLSign = 2;
    // Get static field: static public Mono.Security.X509.Extensions.KeyUsages cRLSign
    static ::Mono::Security::X509::Extensions::KeyUsages _get_cRLSign();
    // Set static field: static public Mono.Security.X509.Extensions.KeyUsages cRLSign
    static void _set_cRLSign(::Mono::Security::X509::Extensions::KeyUsages value);
    // static field const value: static public Mono.Security.X509.Extensions.KeyUsages encipherOnly
    static constexpr const int encipherOnly = 1;
    // Get static field: static public Mono.Security.X509.Extensions.KeyUsages encipherOnly
    static ::Mono::Security::X509::Extensions::KeyUsages _get_encipherOnly();
    // Set static field: static public Mono.Security.X509.Extensions.KeyUsages encipherOnly
    static void _set_encipherOnly(::Mono::Security::X509::Extensions::KeyUsages value);
    // static field const value: static public Mono.Security.X509.Extensions.KeyUsages decipherOnly
    static constexpr const int decipherOnly = 2048;
    // Get static field: static public Mono.Security.X509.Extensions.KeyUsages decipherOnly
    static ::Mono::Security::X509::Extensions::KeyUsages _get_decipherOnly();
    // Set static field: static public Mono.Security.X509.Extensions.KeyUsages decipherOnly
    static void _set_decipherOnly(::Mono::Security::X509::Extensions::KeyUsages value);
    // static field const value: static public Mono.Security.X509.Extensions.KeyUsages none
    static constexpr const int none = 0;
    // Get static field: static public Mono.Security.X509.Extensions.KeyUsages none
    static ::Mono::Security::X509::Extensions::KeyUsages _get_none();
    // Set static field: static public Mono.Security.X509.Extensions.KeyUsages none
    static void _set_none(::Mono::Security::X509::Extensions::KeyUsages value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Mono.Security.X509.Extensions.KeyUsages
  #pragma pack(pop)
  static check_size<sizeof(KeyUsages), 0 + sizeof(int)> __Mono_Security_X509_Extensions_KeyUsagesSizeCheck;
  static_assert(sizeof(KeyUsages) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
