// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes
#include "Mono/Security/X509/PKCS12_DeriveBytes.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Mono::Security::X509::PKCS12::DeriveBytes::Purpose, "Mono.Security.X509", "PKCS12/DeriveBytes/Purpose");
// Type namespace: Mono.Security.X509
namespace Mono::Security::X509 {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes/Mono.Security.X509.Purpose
  // [TokenAttribute] Offset: FFFFFFFF
  struct PKCS12::DeriveBytes::Purpose/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: Purpose
    constexpr Purpose(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes/Mono.Security.X509.Purpose Key
    static constexpr const int Key = 0;
    // Get static field: static public Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes/Mono.Security.X509.Purpose Key
    static ::Mono::Security::X509::PKCS12::DeriveBytes::Purpose _get_Key();
    // Set static field: static public Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes/Mono.Security.X509.Purpose Key
    static void _set_Key(::Mono::Security::X509::PKCS12::DeriveBytes::Purpose value);
    // static field const value: static public Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes/Mono.Security.X509.Purpose IV
    static constexpr const int IV = 1;
    // Get static field: static public Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes/Mono.Security.X509.Purpose IV
    static ::Mono::Security::X509::PKCS12::DeriveBytes::Purpose _get_IV();
    // Set static field: static public Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes/Mono.Security.X509.Purpose IV
    static void _set_IV(::Mono::Security::X509::PKCS12::DeriveBytes::Purpose value);
    // static field const value: static public Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes/Mono.Security.X509.Purpose MAC
    static constexpr const int MAC = 2;
    // Get static field: static public Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes/Mono.Security.X509.Purpose MAC
    static ::Mono::Security::X509::PKCS12::DeriveBytes::Purpose _get_MAC();
    // Set static field: static public Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes/Mono.Security.X509.Purpose MAC
    static void _set_MAC(::Mono::Security::X509::PKCS12::DeriveBytes::Purpose value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes/Mono.Security.X509.Purpose
  #pragma pack(pop)
  static check_size<sizeof(PKCS12::DeriveBytes::Purpose), 0 + sizeof(int)> __Mono_Security_X509_PKCS12_DeriveBytes_PurposeSizeCheck;
  static_assert(sizeof(PKCS12::DeriveBytes::Purpose) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
