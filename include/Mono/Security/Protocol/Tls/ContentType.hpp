// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Mono.Security.Protocol.Tls
namespace Mono::Security::Protocol::Tls {
  // Forward declaring type: ContentType
  struct ContentType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Mono::Security::Protocol::Tls::ContentType, "Mono.Security.Protocol.Tls", "ContentType");
// Type namespace: Mono.Security.Protocol.Tls
namespace Mono::Security::Protocol::Tls {
  // Size: 0x1
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Security.Protocol.Tls.ContentType
  // [TokenAttribute] Offset: FFFFFFFF
  struct ContentType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Byte value__
    // Size: 0x1
    // Offset: 0x0
    uint8_t value;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Creating value type constructor for type: ContentType
    constexpr ContentType(uint8_t value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint8_t
    constexpr operator uint8_t() const noexcept {
      return value;
    }
    // static field const value: static public Mono.Security.Protocol.Tls.ContentType ChangeCipherSpec
    static constexpr const uint8_t ChangeCipherSpec = 20u;
    // Get static field: static public Mono.Security.Protocol.Tls.ContentType ChangeCipherSpec
    static ::Mono::Security::Protocol::Tls::ContentType _get_ChangeCipherSpec();
    // Set static field: static public Mono.Security.Protocol.Tls.ContentType ChangeCipherSpec
    static void _set_ChangeCipherSpec(::Mono::Security::Protocol::Tls::ContentType value);
    // static field const value: static public Mono.Security.Protocol.Tls.ContentType Alert
    static constexpr const uint8_t Alert = 21u;
    // Get static field: static public Mono.Security.Protocol.Tls.ContentType Alert
    static ::Mono::Security::Protocol::Tls::ContentType _get_Alert();
    // Set static field: static public Mono.Security.Protocol.Tls.ContentType Alert
    static void _set_Alert(::Mono::Security::Protocol::Tls::ContentType value);
    // static field const value: static public Mono.Security.Protocol.Tls.ContentType Handshake
    static constexpr const uint8_t Handshake = 22u;
    // Get static field: static public Mono.Security.Protocol.Tls.ContentType Handshake
    static ::Mono::Security::Protocol::Tls::ContentType _get_Handshake();
    // Set static field: static public Mono.Security.Protocol.Tls.ContentType Handshake
    static void _set_Handshake(::Mono::Security::Protocol::Tls::ContentType value);
    // static field const value: static public Mono.Security.Protocol.Tls.ContentType ApplicationData
    static constexpr const uint8_t ApplicationData = 23u;
    // Get static field: static public Mono.Security.Protocol.Tls.ContentType ApplicationData
    static ::Mono::Security::Protocol::Tls::ContentType _get_ApplicationData();
    // Set static field: static public Mono.Security.Protocol.Tls.ContentType ApplicationData
    static void _set_ApplicationData(::Mono::Security::Protocol::Tls::ContentType value);
    // Get instance field reference: public System.Byte value__
    [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
  }; // Mono.Security.Protocol.Tls.ContentType
  #pragma pack(pop)
  static check_size<sizeof(ContentType), 0 + sizeof(uint8_t)> __Mono_Security_Protocol_Tls_ContentTypeSizeCheck;
  static_assert(sizeof(ContentType) == 0x1);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
