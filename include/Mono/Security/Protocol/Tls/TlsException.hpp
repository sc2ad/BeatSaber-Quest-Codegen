// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Mono.Security.Protocol.Tls.AlertLevel
#include "Mono/Security/Protocol/Tls/AlertLevel.hpp"
// Including type: Mono.Security.Protocol.Tls.AlertDescription
#include "Mono/Security/Protocol/Tls/AlertDescription.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Mono::Security::Protocol::Tls
namespace Mono::Security::Protocol::Tls {
  // Forward declaring type: Alert
  class Alert;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: Mono.Security.Protocol.Tls
namespace Mono::Security::Protocol::Tls {
  // Forward declaring type: TlsException
  class TlsException;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Mono::Security::Protocol::Tls::TlsException);
DEFINE_IL2CPP_ARG_TYPE(::Mono::Security::Protocol::Tls::TlsException*, "Mono.Security.Protocol.Tls", "TlsException");
// Type namespace: Mono.Security.Protocol.Tls
namespace Mono::Security::Protocol::Tls {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Security.Protocol.Tls.TlsException
  // [TokenAttribute] Offset: FFFFFFFF
  class TlsException : public ::System::Exception {
    public:
    public:
    // private Mono.Security.Protocol.Tls.Alert alert
    // Size: 0x8
    // Offset: 0x88
    ::Mono::Security::Protocol::Tls::Alert* alert;
    // Field size check
    static_assert(sizeof(::Mono::Security::Protocol::Tls::Alert*) == 0x8);
    public:
    // Creating conversion operator: operator ::Mono::Security::Protocol::Tls::Alert*
    constexpr operator ::Mono::Security::Protocol::Tls::Alert*() const noexcept {
      return alert;
    }
    // Get instance field reference: private Mono.Security.Protocol.Tls.Alert alert
    [[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::Alert*& dyn_alert();
    // public Mono.Security.Protocol.Tls.Alert get_Alert()
    // Offset: 0x169D004
    ::Mono::Security::Protocol::Tls::Alert* get_Alert();
    // System.Void .ctor(System.String message)
    // Offset: 0x169D00C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TlsException* New_ctor(::StringW message) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TlsException*, creationType>(message)));
    }
    // System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x169D084
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TlsException* New_ctor(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TlsException*, creationType>(info, context)));
    }
    // System.Void .ctor(System.String message, System.Exception ex)
    // Offset: 0x169D114
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TlsException* New_ctor(::StringW message, ::System::Exception* ex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TlsException*, creationType>(message, ex)));
    }
    // System.Void .ctor(Mono.Security.Protocol.Tls.AlertLevel level, Mono.Security.Protocol.Tls.AlertDescription description)
    // Offset: 0x169D194
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TlsException* New_ctor(::Mono::Security::Protocol::Tls::AlertLevel level, ::Mono::Security::Protocol::Tls::AlertDescription description) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TlsException*, creationType>(level, description)));
    }
    // System.Void .ctor(Mono.Security.Protocol.Tls.AlertLevel level, Mono.Security.Protocol.Tls.AlertDescription description, System.String message)
    // Offset: 0x169D1DC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TlsException* New_ctor(::Mono::Security::Protocol::Tls::AlertLevel level, ::Mono::Security::Protocol::Tls::AlertDescription description, ::StringW message) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TlsException*, creationType>(level, description, message)));
    }
    // System.Void .ctor(Mono.Security.Protocol.Tls.AlertDescription description)
    // Offset: 0x169D290
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TlsException* New_ctor(::Mono::Security::Protocol::Tls::AlertDescription description) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TlsException*, creationType>(description)));
    }
    // System.Void .ctor(Mono.Security.Protocol.Tls.AlertDescription description, System.String message)
    // Offset: 0x169D2C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TlsException* New_ctor(::Mono::Security::Protocol::Tls::AlertDescription description, ::StringW message) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::TlsException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TlsException*, creationType>(description, message)));
    }
  }; // Mono.Security.Protocol.Tls.TlsException
  #pragma pack(pop)
  static check_size<sizeof(TlsException), 136 + sizeof(::Mono::Security::Protocol::Tls::Alert*)> __Mono_Security_Protocol_Tls_TlsExceptionSizeCheck;
  static_assert(sizeof(TlsException) == 0x90);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::TlsException::get_Alert
// Il2CppName: get_Alert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Mono::Security::Protocol::Tls::Alert* (Mono::Security::Protocol::Tls::TlsException::*)()>(&Mono::Security::Protocol::Tls::TlsException::get_Alert)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::TlsException*), "get_Alert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::TlsException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::TlsException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::TlsException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::TlsException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::TlsException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::TlsException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::TlsException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
