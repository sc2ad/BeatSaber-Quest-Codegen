// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Security.Cryptography.AsymmetricSignatureDeformatter
#include "System/Security/Cryptography/AsymmetricSignatureDeformatter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security::Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: RSA
  class RSA;
  // Forward declaring type: HashAlgorithm
  class HashAlgorithm;
  // Forward declaring type: AsymmetricAlgorithm
  class AsymmetricAlgorithm;
}
// Completed forward declares
// Type namespace: Mono.Security.Protocol.Tls
namespace Mono::Security::Protocol::Tls {
  // Forward declaring type: RSASslSignatureDeformatter
  class RSASslSignatureDeformatter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Mono::Security::Protocol::Tls::RSASslSignatureDeformatter);
DEFINE_IL2CPP_ARG_TYPE(::Mono::Security::Protocol::Tls::RSASslSignatureDeformatter*, "Mono.Security.Protocol.Tls", "RSASslSignatureDeformatter");
// Type namespace: Mono.Security.Protocol.Tls
namespace Mono::Security::Protocol::Tls {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Security.Protocol.Tls.RSASslSignatureDeformatter
  // [TokenAttribute] Offset: FFFFFFFF
  class RSASslSignatureDeformatter : public ::System::Security::Cryptography::AsymmetricSignatureDeformatter {
    public:
    public:
    // private System.Security.Cryptography.RSA key
    // Size: 0x8
    // Offset: 0x10
    ::System::Security::Cryptography::RSA* key;
    // Field size check
    static_assert(sizeof(::System::Security::Cryptography::RSA*) == 0x8);
    // private System.Security.Cryptography.HashAlgorithm hash
    // Size: 0x8
    // Offset: 0x18
    ::System::Security::Cryptography::HashAlgorithm* hash;
    // Field size check
    static_assert(sizeof(::System::Security::Cryptography::HashAlgorithm*) == 0x8);
    public:
    // Get instance field reference: private System.Security.Cryptography.RSA key
    [[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSA*& dyn_key();
    // Get instance field reference: private System.Security.Cryptography.HashAlgorithm hash
    [[deprecated("Use field access instead!")]] ::System::Security::Cryptography::HashAlgorithm*& dyn_hash();
    // public System.Void .ctor()
    // Offset: 0x110D234
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RSASslSignatureDeformatter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RSASslSignatureDeformatter*, creationType>()));
    }
    // public System.Void .ctor(System.Security.Cryptography.AsymmetricAlgorithm key)
    // Offset: 0x110D23C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RSASslSignatureDeformatter* New_ctor(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RSASslSignatureDeformatter*, creationType>(key)));
    }
    // public override System.Boolean VerifySignature(System.Byte[] rgbHash, System.Byte[] rgbSignature)
    // Offset: 0x110D274
    // Implemented from: System.Security.Cryptography.AsymmetricSignatureDeformatter
    // Base method: System.Boolean AsymmetricSignatureDeformatter::VerifySignature(System.Byte[] rgbHash, System.Byte[] rgbSignature)
    bool VerifySignature(::ArrayW<uint8_t> rgbHash, ::ArrayW<uint8_t> rgbSignature);
    // public override System.Void SetHashAlgorithm(System.String strName)
    // Offset: 0x110D390
    // Implemented from: System.Security.Cryptography.AsymmetricSignatureDeformatter
    // Base method: System.Void AsymmetricSignatureDeformatter::SetHashAlgorithm(System.String strName)
    void SetHashAlgorithm(::StringW strName);
    // public override System.Void SetKey(System.Security.Cryptography.AsymmetricAlgorithm key)
    // Offset: 0x110D42C
    // Implemented from: System.Security.Cryptography.AsymmetricSignatureDeformatter
    // Base method: System.Void AsymmetricSignatureDeformatter::SetKey(System.Security.Cryptography.AsymmetricAlgorithm key)
    void SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key);
  }; // Mono.Security.Protocol.Tls.RSASslSignatureDeformatter
  #pragma pack(pop)
  static check_size<sizeof(RSASslSignatureDeformatter), 24 + sizeof(::System::Security::Cryptography::HashAlgorithm*)> __Mono_Security_Protocol_Tls_RSASslSignatureDeformatterSizeCheck;
  static_assert(sizeof(RSASslSignatureDeformatter) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::VerifySignature
// Il2CppName: VerifySignature
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::*)(::ArrayW<uint8_t>, ::ArrayW<uint8_t>)>(&Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::VerifySignature)> {
  static const MethodInfo* get() {
    static auto* rgbHash = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* rgbSignature = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::RSASslSignatureDeformatter*), "VerifySignature", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rgbHash, rgbSignature});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::SetHashAlgorithm
// Il2CppName: SetHashAlgorithm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::*)(::StringW)>(&Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::SetHashAlgorithm)> {
  static const MethodInfo* get() {
    static auto* strName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::RSASslSignatureDeformatter*), "SetHashAlgorithm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{strName});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::*)(::System::Security::Cryptography::AsymmetricAlgorithm*)>(&Mono::Security::Protocol::Tls::RSASslSignatureDeformatter::SetKey)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography", "AsymmetricAlgorithm")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::RSASslSignatureDeformatter*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
