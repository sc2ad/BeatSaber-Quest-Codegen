// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage
#include "Mono/Security/Protocol/Tls/Handshake/HandshakeMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Mono::Security::Protocol::Tls
namespace Mono::Security::Protocol::Tls {
  // Forward declaring type: Context
  class Context;
}
// Forward declaring namespace: System::Security::Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: RSA
  class RSA;
}
// Completed forward declares
// Type namespace: Mono.Security.Protocol.Tls.Handshake.Client
namespace Mono::Security::Protocol::Tls::Handshake::Client {
  // Forward declaring type: TlsClientCertificateVerify
  class TlsClientCertificateVerify;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify);
DEFINE_IL2CPP_ARG_TYPE(::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify*, "Mono.Security.Protocol.Tls.Handshake.Client", "TlsClientCertificateVerify");
// Type namespace: Mono.Security.Protocol.Tls.Handshake.Client
namespace Mono::Security::Protocol::Tls::Handshake::Client {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Security.Protocol.Tls.Handshake.Client.TlsClientCertificateVerify
  // [TokenAttribute] Offset: FFFFFFFF
  class TlsClientCertificateVerify : public ::Mono::Security::Protocol::Tls::Handshake::HandshakeMessage {
    public:
    // public System.Void .ctor(Mono.Security.Protocol.Tls.Context context)
    // Offset: 0x11042C4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TlsClientCertificateVerify* New_ctor(::Mono::Security::Protocol::Tls::Context* context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TlsClientCertificateVerify*, creationType>(context)));
    }
    // private System.Security.Cryptography.RSA getClientCertRSA(System.Security.Cryptography.RSA privKey)
    // Offset: 0x1106B90
    ::System::Security::Cryptography::RSA* getClientCertRSA(::System::Security::Cryptography::RSA* privKey);
    // private System.Byte[] getUnsignedBigInteger(System.Byte[] integer)
    // Offset: 0x1107024
    ::ArrayW<uint8_t> getUnsignedBigInteger(::ArrayW<uint8_t> integer);
    // public override System.Void Update()
    // Offset: 0x11066F0
    // Implemented from: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage
    // Base method: System.Void HandshakeMessage::Update()
    void Update();
    // protected override System.Void ProcessAsSsl3()
    // Offset: 0x1106718
    // Implemented from: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage
    // Base method: System.Void HandshakeMessage::ProcessAsSsl3()
    void ProcessAsSsl3();
    // protected override System.Void ProcessAsTls1()
    // Offset: 0x1106D5C
    // Implemented from: Mono.Security.Protocol.Tls.Handshake.HandshakeMessage
    // Base method: System.Void HandshakeMessage::ProcessAsTls1()
    void ProcessAsTls1();
  }; // Mono.Security.Protocol.Tls.Handshake.Client.TlsClientCertificateVerify
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::getClientCertRSA
// Il2CppName: getClientCertRSA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::RSA* (Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::*)(::System::Security::Cryptography::RSA*)>(&Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::getClientCertRSA)> {
  static const MethodInfo* get() {
    static auto* privKey = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography", "RSA")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify*), "getClientCertRSA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{privKey});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::getUnsignedBigInteger
// Il2CppName: getUnsignedBigInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::*)(::ArrayW<uint8_t>)>(&Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::getUnsignedBigInteger)> {
  static const MethodInfo* get() {
    static auto* integer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify*), "getUnsignedBigInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{integer});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::*)()>(&Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::ProcessAsSsl3
// Il2CppName: ProcessAsSsl3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::*)()>(&Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::ProcessAsSsl3)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify*), "ProcessAsSsl3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::ProcessAsTls1
// Il2CppName: ProcessAsTls1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::*)()>(&Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify::ProcessAsTls1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::Handshake::Client::TlsClientCertificateVerify*), "ProcessAsTls1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
