// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Mono::Security::Protocol::Tls
namespace Mono::Security::Protocol::Tls {
  // Forward declaring type: CipherSuite
  class CipherSuite;
}
// Completed forward declares
// Type namespace: Mono.Security.Protocol.Tls
namespace Mono::Security::Protocol::Tls {
  // Forward declaring type: SecurityParameters
  class SecurityParameters;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Mono::Security::Protocol::Tls::SecurityParameters);
DEFINE_IL2CPP_ARG_TYPE(::Mono::Security::Protocol::Tls::SecurityParameters*, "Mono.Security.Protocol.Tls", "SecurityParameters");
// Type namespace: Mono.Security.Protocol.Tls
namespace Mono::Security::Protocol::Tls {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Security.Protocol.Tls.SecurityParameters
  // [TokenAttribute] Offset: FFFFFFFF
  class SecurityParameters : public ::Il2CppObject {
    public:
    public:
    // private Mono.Security.Protocol.Tls.CipherSuite cipher
    // Size: 0x8
    // Offset: 0x10
    ::Mono::Security::Protocol::Tls::CipherSuite* cipher;
    // Field size check
    static_assert(sizeof(::Mono::Security::Protocol::Tls::CipherSuite*) == 0x8);
    // private System.Byte[] clientWriteMAC
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<uint8_t> clientWriteMAC;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private System.Byte[] serverWriteMAC
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<uint8_t> serverWriteMAC;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    public:
    // Get instance field reference: private Mono.Security.Protocol.Tls.CipherSuite cipher
    [[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::CipherSuite*& dyn_cipher();
    // Get instance field reference: private System.Byte[] clientWriteMAC
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_clientWriteMAC();
    // Get instance field reference: private System.Byte[] serverWriteMAC
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_serverWriteMAC();
    // public Mono.Security.Protocol.Tls.CipherSuite get_Cipher()
    // Offset: 0x1110090
    ::Mono::Security::Protocol::Tls::CipherSuite* get_Cipher();
    // public System.Void set_Cipher(Mono.Security.Protocol.Tls.CipherSuite value)
    // Offset: 0x1110098
    void set_Cipher(::Mono::Security::Protocol::Tls::CipherSuite* value);
    // public System.Byte[] get_ClientWriteMAC()
    // Offset: 0x11100A0
    ::ArrayW<uint8_t> get_ClientWriteMAC();
    // public System.Void set_ClientWriteMAC(System.Byte[] value)
    // Offset: 0x11100A8
    void set_ClientWriteMAC(::ArrayW<uint8_t> value);
    // public System.Byte[] get_ServerWriteMAC()
    // Offset: 0x11100B0
    ::ArrayW<uint8_t> get_ServerWriteMAC();
    // public System.Void set_ServerWriteMAC(System.Byte[] value)
    // Offset: 0x11100B8
    void set_ServerWriteMAC(::ArrayW<uint8_t> value);
    // public System.Void .ctor()
    // Offset: 0x1105E28
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SecurityParameters* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::SecurityParameters::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SecurityParameters*, creationType>()));
    }
    // public System.Void Clear()
    // Offset: 0x1105EA4
    void Clear();
  }; // Mono.Security.Protocol.Tls.SecurityParameters
  #pragma pack(pop)
  static check_size<sizeof(SecurityParameters), 32 + sizeof(::ArrayW<uint8_t>)> __Mono_Security_Protocol_Tls_SecurityParametersSizeCheck;
  static_assert(sizeof(SecurityParameters) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::SecurityParameters::get_Cipher
// Il2CppName: get_Cipher
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Mono::Security::Protocol::Tls::CipherSuite* (Mono::Security::Protocol::Tls::SecurityParameters::*)()>(&Mono::Security::Protocol::Tls::SecurityParameters::get_Cipher)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::SecurityParameters*), "get_Cipher", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::SecurityParameters::set_Cipher
// Il2CppName: set_Cipher
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Security::Protocol::Tls::SecurityParameters::*)(::Mono::Security::Protocol::Tls::CipherSuite*)>(&Mono::Security::Protocol::Tls::SecurityParameters::set_Cipher)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Mono.Security.Protocol.Tls", "CipherSuite")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::SecurityParameters*), "set_Cipher", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::SecurityParameters::get_ClientWriteMAC
// Il2CppName: get_ClientWriteMAC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (Mono::Security::Protocol::Tls::SecurityParameters::*)()>(&Mono::Security::Protocol::Tls::SecurityParameters::get_ClientWriteMAC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::SecurityParameters*), "get_ClientWriteMAC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::SecurityParameters::set_ClientWriteMAC
// Il2CppName: set_ClientWriteMAC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Security::Protocol::Tls::SecurityParameters::*)(::ArrayW<uint8_t>)>(&Mono::Security::Protocol::Tls::SecurityParameters::set_ClientWriteMAC)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::SecurityParameters*), "set_ClientWriteMAC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::SecurityParameters::get_ServerWriteMAC
// Il2CppName: get_ServerWriteMAC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (Mono::Security::Protocol::Tls::SecurityParameters::*)()>(&Mono::Security::Protocol::Tls::SecurityParameters::get_ServerWriteMAC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::SecurityParameters*), "get_ServerWriteMAC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::SecurityParameters::set_ServerWriteMAC
// Il2CppName: set_ServerWriteMAC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Security::Protocol::Tls::SecurityParameters::*)(::ArrayW<uint8_t>)>(&Mono::Security::Protocol::Tls::SecurityParameters::set_ServerWriteMAC)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::SecurityParameters*), "set_ServerWriteMAC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::SecurityParameters::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::SecurityParameters::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Security::Protocol::Tls::SecurityParameters::*)()>(&Mono::Security::Protocol::Tls::SecurityParameters::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::SecurityParameters*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
