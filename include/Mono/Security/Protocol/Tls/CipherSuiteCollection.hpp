// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Mono.Security.Protocol.Tls.SecurityProtocolType
#include "Mono/Security/Protocol/Tls/SecurityProtocolType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Mono::Security::Protocol::Tls
namespace Mono::Security::Protocol::Tls {
  // Forward declaring type: CipherSuite
  class CipherSuite;
  // Forward declaring type: CipherAlgorithmType
  struct CipherAlgorithmType;
  // Forward declaring type: HashAlgorithmType
  struct HashAlgorithmType;
  // Forward declaring type: ExchangeAlgorithmType
  struct ExchangeAlgorithmType;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Skipping declaration: IList`1 because it is already included!
}
// Completed forward declares
// Type namespace: Mono.Security.Protocol.Tls
namespace Mono::Security::Protocol::Tls {
  // Forward declaring type: CipherSuiteCollection
  class CipherSuiteCollection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Mono::Security::Protocol::Tls::CipherSuiteCollection);
DEFINE_IL2CPP_ARG_TYPE(::Mono::Security::Protocol::Tls::CipherSuiteCollection*, "Mono.Security.Protocol.Tls", "CipherSuiteCollection");
// Type namespace: Mono.Security.Protocol.Tls
namespace Mono::Security::Protocol::Tls {
  // WARNING Size may be invalid!
  // Autogenerated type: Mono.Security.Protocol.Tls.CipherSuiteCollection
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 8FD518
  class CipherSuiteCollection : public ::System::Collections::Generic::List_1<::Mono::Security::Protocol::Tls::CipherSuite*> {
    public:
    public:
    // private Mono.Security.Protocol.Tls.SecurityProtocolType protocol
    // Size: 0x4
    // Offset: 0x28
    ::Mono::Security::Protocol::Tls::SecurityProtocolType protocol;
    // Field size check
    static_assert(sizeof(::Mono::Security::Protocol::Tls::SecurityProtocolType) == 0x4);
    public:
    // Creating conversion operator: operator ::Mono::Security::Protocol::Tls::SecurityProtocolType
    constexpr operator ::Mono::Security::Protocol::Tls::SecurityProtocolType() const noexcept {
      return protocol;
    }
    // Get instance field reference: private Mono.Security.Protocol.Tls.SecurityProtocolType protocol
    [[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Tls::SecurityProtocolType& dyn_protocol();
    // public Mono.Security.Protocol.Tls.CipherSuite get_Item(System.String name)
    // Offset: 0x1102A00
    ::Mono::Security::Protocol::Tls::CipherSuite* get_Item(::StringW name);
    // public Mono.Security.Protocol.Tls.CipherSuite get_Item(System.Int16 code)
    // Offset: 0x1102BAC
    ::Mono::Security::Protocol::Tls::CipherSuite* get_Item(int16_t code);
    // public System.Void .ctor(Mono.Security.Protocol.Tls.SecurityProtocolType protocol)
    // Offset: 0x1102D4C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CipherSuiteCollection* New_ctor(::Mono::Security::Protocol::Tls::SecurityProtocolType protocol) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Tls::CipherSuiteCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CipherSuiteCollection*, creationType>(protocol)));
    }
    // public System.Int32 IndexOf(System.String name)
    // Offset: 0x1102A8C
    int IndexOf(::StringW name);
    // public System.Int32 IndexOf(System.Int16 code)
    // Offset: 0x1102C38
    int IndexOf(int16_t code);
    // public System.Void Add(System.Int16 code, System.String name, Mono.Security.Protocol.Tls.CipherAlgorithmType cipherType, Mono.Security.Protocol.Tls.HashAlgorithmType hashType, Mono.Security.Protocol.Tls.ExchangeAlgorithmType exchangeType, System.Boolean exportable, System.Boolean blockMode, System.Byte keyMaterialSize, System.Byte expandedKeyMaterialSize, System.Int16 effectiveKeyBytes, System.Byte ivSize, System.Byte blockSize)
    // Offset: 0x1102E34
    void Add(int16_t code, ::StringW name, ::Mono::Security::Protocol::Tls::CipherAlgorithmType cipherType, ::Mono::Security::Protocol::Tls::HashAlgorithmType hashType, ::Mono::Security::Protocol::Tls::ExchangeAlgorithmType exchangeType, bool exportable, bool blockMode, uint8_t keyMaterialSize, uint8_t expandedKeyMaterialSize, int16_t effectiveKeyBytes, uint8_t ivSize, uint8_t blockSize);
    // public System.Collections.Generic.IList`1<System.String> GetNames()
    // Offset: 0x110314C
    ::System::Collections::Generic::IList_1<::StringW>* GetNames();
  }; // Mono.Security.Protocol.Tls.CipherSuiteCollection
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::CipherSuiteCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Mono::Security::Protocol::Tls::CipherSuite* (Mono::Security::Protocol::Tls::CipherSuiteCollection::*)(::StringW)>(&Mono::Security::Protocol::Tls::CipherSuiteCollection::get_Item)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::CipherSuiteCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::CipherSuiteCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Mono::Security::Protocol::Tls::CipherSuite* (Mono::Security::Protocol::Tls::CipherSuiteCollection::*)(int16_t)>(&Mono::Security::Protocol::Tls::CipherSuiteCollection::get_Item)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::CipherSuiteCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::CipherSuiteCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::CipherSuiteCollection::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Security::Protocol::Tls::CipherSuiteCollection::*)(::StringW)>(&Mono::Security::Protocol::Tls::CipherSuiteCollection::IndexOf)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::CipherSuiteCollection*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::CipherSuiteCollection::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Security::Protocol::Tls::CipherSuiteCollection::*)(int16_t)>(&Mono::Security::Protocol::Tls::CipherSuiteCollection::IndexOf)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::CipherSuiteCollection*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::CipherSuiteCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Security::Protocol::Tls::CipherSuiteCollection::*)(int16_t, ::StringW, ::Mono::Security::Protocol::Tls::CipherAlgorithmType, ::Mono::Security::Protocol::Tls::HashAlgorithmType, ::Mono::Security::Protocol::Tls::ExchangeAlgorithmType, bool, bool, uint8_t, uint8_t, int16_t, uint8_t, uint8_t)>(&Mono::Security::Protocol::Tls::CipherSuiteCollection::Add)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* cipherType = &::il2cpp_utils::GetClassFromName("Mono.Security.Protocol.Tls", "CipherAlgorithmType")->byval_arg;
    static auto* hashType = &::il2cpp_utils::GetClassFromName("Mono.Security.Protocol.Tls", "HashAlgorithmType")->byval_arg;
    static auto* exchangeType = &::il2cpp_utils::GetClassFromName("Mono.Security.Protocol.Tls", "ExchangeAlgorithmType")->byval_arg;
    static auto* exportable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* blockMode = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* keyMaterialSize = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* expandedKeyMaterialSize = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* effectiveKeyBytes = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* ivSize = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* blockSize = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::CipherSuiteCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code, name, cipherType, hashType, exchangeType, exportable, blockMode, keyMaterialSize, expandedKeyMaterialSize, effectiveKeyBytes, ivSize, blockSize});
  }
};
// Writing MetadataGetter for method: Mono::Security::Protocol::Tls::CipherSuiteCollection::GetNames
// Il2CppName: GetNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::StringW>* (Mono::Security::Protocol::Tls::CipherSuiteCollection::*)()>(&Mono::Security::Protocol::Tls::CipherSuiteCollection::GetNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Security::Protocol::Tls::CipherSuiteCollection*), "GetNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
