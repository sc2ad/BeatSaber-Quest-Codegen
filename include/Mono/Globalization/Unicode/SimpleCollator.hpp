// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Mono::Globalization::Unicode
namespace Mono::Globalization::Unicode {
  // Forward declaring type: CodePointIndexer
  class CodePointIndexer;
  // Forward declaring type: Contraction
  class Contraction;
  // Forward declaring type: Level2Map
  class Level2Map;
  // Forward declaring type: SortKeyBuffer
  class SortKeyBuffer;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: TextInfo
  class TextInfo;
  // Forward declaring type: CultureInfo
  class CultureInfo;
  // Forward declaring type: CompareOptions
  struct CompareOptions;
  // Forward declaring type: SortKey
  class SortKey;
}
// Completed forward declares
// Type namespace: Mono.Globalization.Unicode
namespace Mono::Globalization::Unicode {
  // Forward declaring type: SimpleCollator
  class SimpleCollator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Mono::Globalization::Unicode::SimpleCollator);
DEFINE_IL2CPP_ARG_TYPE(::Mono::Globalization::Unicode::SimpleCollator*, "Mono.Globalization.Unicode", "SimpleCollator");
// Type namespace: Mono.Globalization.Unicode
namespace Mono::Globalization::Unicode {
  // Size: 0x5D
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Globalization.Unicode.SimpleCollator
  // [TokenAttribute] Offset: FFFFFFFF
  class SimpleCollator : public ::Il2CppObject {
    public:
    // Nested type: ::Mono::Globalization::Unicode::SimpleCollator::Context
    struct Context;
    // Nested type: ::Mono::Globalization::Unicode::SimpleCollator::PreviousInfo
    struct PreviousInfo;
    // Nested type: ::Mono::Globalization::Unicode::SimpleCollator::Escape
    struct Escape;
    // Nested type: ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType
    struct ExtenderType;
    public:
    // private readonly System.Globalization.TextInfo textInfo
    // Size: 0x8
    // Offset: 0x10
    ::System::Globalization::TextInfo* textInfo;
    // Field size check
    static_assert(sizeof(::System::Globalization::TextInfo*) == 0x8);
    // private readonly Mono.Globalization.Unicode.CodePointIndexer cjkIndexer
    // Size: 0x8
    // Offset: 0x18
    ::Mono::Globalization::Unicode::CodePointIndexer* cjkIndexer;
    // Field size check
    static_assert(sizeof(::Mono::Globalization::Unicode::CodePointIndexer*) == 0x8);
    // private readonly Mono.Globalization.Unicode.Contraction[] contractions
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::Mono::Globalization::Unicode::Contraction*> contractions;
    // Field size check
    static_assert(sizeof(::ArrayW<::Mono::Globalization::Unicode::Contraction*>) == 0x8);
    // private readonly Mono.Globalization.Unicode.Level2Map[] level2Maps
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::Mono::Globalization::Unicode::Level2Map*> level2Maps;
    // Field size check
    static_assert(sizeof(::ArrayW<::Mono::Globalization::Unicode::Level2Map*>) == 0x8);
    // private readonly System.Byte[] unsafeFlags
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<uint8_t> unsafeFlags;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private readonly System.Byte* cjkCatTable
    // Size: 0x8
    // Offset: 0x38
    uint8_t* cjkCatTable;
    // Field size check
    static_assert(sizeof(uint8_t*) == 0x8);
    // private readonly System.Byte* cjkLv1Table
    // Size: 0x8
    // Offset: 0x40
    uint8_t* cjkLv1Table;
    // Field size check
    static_assert(sizeof(uint8_t*) == 0x8);
    // private readonly System.Byte* cjkLv2Table
    // Size: 0x8
    // Offset: 0x48
    uint8_t* cjkLv2Table;
    // Field size check
    static_assert(sizeof(uint8_t*) == 0x8);
    // private readonly Mono.Globalization.Unicode.CodePointIndexer cjkLv2Indexer
    // Size: 0x8
    // Offset: 0x50
    ::Mono::Globalization::Unicode::CodePointIndexer* cjkLv2Indexer;
    // Field size check
    static_assert(sizeof(::Mono::Globalization::Unicode::CodePointIndexer*) == 0x8);
    // private readonly System.Int32 lcid
    // Size: 0x4
    // Offset: 0x58
    int lcid;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private readonly System.Boolean frenchSort
    // Size: 0x1
    // Offset: 0x5C
    bool frenchSort;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get static field: static private System.Boolean QuickCheckDisabled
    static bool _get_QuickCheckDisabled();
    // Set static field: static private System.Boolean QuickCheckDisabled
    static void _set_QuickCheckDisabled(bool value);
    // Get static field: static private Mono.Globalization.Unicode.SimpleCollator invariant
    static ::Mono::Globalization::Unicode::SimpleCollator* _get_invariant();
    // Set static field: static private Mono.Globalization.Unicode.SimpleCollator invariant
    static void _set_invariant(::Mono::Globalization::Unicode::SimpleCollator* value);
    // static field const value: static private System.Int32 UnsafeFlagLength
    static constexpr const int UnsafeFlagLength = 96;
    // Get static field: static private System.Int32 UnsafeFlagLength
    static int _get_UnsafeFlagLength();
    // Set static field: static private System.Int32 UnsafeFlagLength
    static void _set_UnsafeFlagLength(int value);
    // Get instance field reference: private readonly System.Globalization.TextInfo textInfo
    [[deprecated("Use field access instead!")]] ::System::Globalization::TextInfo*& dyn_textInfo();
    // Get instance field reference: private readonly Mono.Globalization.Unicode.CodePointIndexer cjkIndexer
    [[deprecated("Use field access instead!")]] ::Mono::Globalization::Unicode::CodePointIndexer*& dyn_cjkIndexer();
    // Get instance field reference: private readonly Mono.Globalization.Unicode.Contraction[] contractions
    [[deprecated("Use field access instead!")]] ::ArrayW<::Mono::Globalization::Unicode::Contraction*>& dyn_contractions();
    // Get instance field reference: private readonly Mono.Globalization.Unicode.Level2Map[] level2Maps
    [[deprecated("Use field access instead!")]] ::ArrayW<::Mono::Globalization::Unicode::Level2Map*>& dyn_level2Maps();
    // Get instance field reference: private readonly System.Byte[] unsafeFlags
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_unsafeFlags();
    // Get instance field reference: private readonly System.Byte* cjkCatTable
    [[deprecated("Use field access instead!")]] uint8_t*& dyn_cjkCatTable();
    // Get instance field reference: private readonly System.Byte* cjkLv1Table
    [[deprecated("Use field access instead!")]] uint8_t*& dyn_cjkLv1Table();
    // Get instance field reference: private readonly System.Byte* cjkLv2Table
    [[deprecated("Use field access instead!")]] uint8_t*& dyn_cjkLv2Table();
    // Get instance field reference: private readonly Mono.Globalization.Unicode.CodePointIndexer cjkLv2Indexer
    [[deprecated("Use field access instead!")]] ::Mono::Globalization::Unicode::CodePointIndexer*& dyn_cjkLv2Indexer();
    // Get instance field reference: private readonly System.Int32 lcid
    [[deprecated("Use field access instead!")]] int& dyn_lcid();
    // Get instance field reference: private readonly System.Boolean frenchSort
    [[deprecated("Use field access instead!")]] bool& dyn_frenchSort();
    // public System.Void .ctor(System.Globalization.CultureInfo culture)
    // Offset: 0x1F4BBA0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SimpleCollator* New_ctor(::System::Globalization::CultureInfo* culture) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SimpleCollator*, creationType>(culture)));
    }
    // static private System.Void .cctor()
    // Offset: 0x1F5149C
    static void _cctor();
    // private System.Void SetCJKTable(System.Globalization.CultureInfo culture, ref Mono.Globalization.Unicode.CodePointIndexer cjkIndexer, ref System.Byte* catTable, ref System.Byte* lv1Table, ref Mono.Globalization.Unicode.CodePointIndexer lv2Indexer, ref System.Byte* lv2Table)
    // Offset: 0x1F4BEE4
    void SetCJKTable(::System::Globalization::CultureInfo* culture, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> cjkIndexer, ByRef<uint8_t*> catTable, ByRef<uint8_t*> lv1Table, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> lv2Indexer, ByRef<uint8_t*> lv2Table);
    // static private System.Globalization.CultureInfo GetNeutralCulture(System.Globalization.CultureInfo info)
    // Offset: 0x1F4BFCC
    static ::System::Globalization::CultureInfo* GetNeutralCulture(::System::Globalization::CultureInfo* info);
    // private System.Byte Category(System.Int32 cp)
    // Offset: 0x1F4C048
    uint8_t Category(int cp);
    // private System.Byte Level1(System.Int32 cp)
    // Offset: 0x1F4C0F8
    uint8_t Level1(int cp);
    // private System.Byte Level2(System.Int32 cp, Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType ext)
    // Offset: 0x1F4C1A8
    uint8_t Level2(int cp, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext);
    // static private System.Boolean IsHalfKana(System.Int32 cp, System.Globalization.CompareOptions opt)
    // Offset: 0x1F4C2F8
    static bool IsHalfKana(int cp, ::System::Globalization::CompareOptions opt);
    // private Mono.Globalization.Unicode.Contraction GetContraction(System.String s, System.Int32 start, System.Int32 end)
    // Offset: 0x1F4C380
    ::Mono::Globalization::Unicode::Contraction* GetContraction(::StringW s, int start, int end);
    // private Mono.Globalization.Unicode.Contraction GetContraction(System.String s, System.Int32 start, System.Int32 end, Mono.Globalization.Unicode.Contraction[] clist)
    // Offset: 0x1F4C45C
    ::Mono::Globalization::Unicode::Contraction* GetContraction(::StringW s, int start, int end, ::ArrayW<::Mono::Globalization::Unicode::Contraction*> clist);
    // private Mono.Globalization.Unicode.Contraction GetTailContraction(System.String s, System.Int32 start, System.Int32 end)
    // Offset: 0x1F4C590
    ::Mono::Globalization::Unicode::Contraction* GetTailContraction(::StringW s, int start, int end);
    // private Mono.Globalization.Unicode.Contraction GetTailContraction(System.String s, System.Int32 start, System.Int32 end, Mono.Globalization.Unicode.Contraction[] clist)
    // Offset: 0x1F4C66C
    ::Mono::Globalization::Unicode::Contraction* GetTailContraction(::StringW s, int start, int end, ::ArrayW<::Mono::Globalization::Unicode::Contraction*> clist);
    // private System.Int32 FilterOptions(System.Int32 i, System.Globalization.CompareOptions opt)
    // Offset: 0x1F4C880
    int FilterOptions(int i, ::System::Globalization::CompareOptions opt);
    // private Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType GetExtenderType(System.Int32 i)
    // Offset: 0x1F4C9A0
    ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType GetExtenderType(int i);
    // static private System.Byte ToDashTypeValue(Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType ext, System.Globalization.CompareOptions opt)
    // Offset: 0x1F4CAAC
    static uint8_t ToDashTypeValue(::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, ::System::Globalization::CompareOptions opt);
    // private System.Int32 FilterExtender(System.Int32 i, Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType ext, System.Globalization.CompareOptions opt)
    // Offset: 0x1F4CACC
    int FilterExtender(int i, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, ::System::Globalization::CompareOptions opt);
    // static private System.Boolean IsIgnorable(System.Int32 i, System.Globalization.CompareOptions opt)
    // Offset: 0x1F4CD00
    static bool IsIgnorable(int i, ::System::Globalization::CompareOptions opt);
    // private System.Boolean IsSafe(System.Int32 i)
    // Offset: 0x1F4CD94
    bool IsSafe(int i);
    // public System.Globalization.SortKey GetSortKey(System.String s, System.Globalization.CompareOptions options)
    // Offset: 0x1F4CE00
    ::System::Globalization::SortKey* GetSortKey(::StringW s, ::System::Globalization::CompareOptions options);
    // public System.Globalization.SortKey GetSortKey(System.String s, System.Int32 start, System.Int32 length, System.Globalization.CompareOptions options)
    // Offset: 0x1F4CE20
    ::System::Globalization::SortKey* GetSortKey(::StringW s, int start, int length, ::System::Globalization::CompareOptions options);
    // private System.Void GetSortKey(System.String s, System.Int32 start, System.Int32 end, Mono.Globalization.Unicode.SortKeyBuffer buf, System.Globalization.CompareOptions opt)
    // Offset: 0x1F4D0AC
    void GetSortKey(::StringW s, int start, int end, ::Mono::Globalization::Unicode::SortKeyBuffer* buf, ::System::Globalization::CompareOptions opt);
    // private System.Void FillSortKeyRaw(System.Int32 i, Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType ext, Mono.Globalization.Unicode.SortKeyBuffer buf, System.Globalization.CompareOptions opt)
    // Offset: 0x1F4D4AC
    void FillSortKeyRaw(int i, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, ::Mono::Globalization::Unicode::SortKeyBuffer* buf, ::System::Globalization::CompareOptions opt);
    // private System.Void FillSurrogateSortKeyRaw(System.Int32 i, Mono.Globalization.Unicode.SortKeyBuffer buf)
    // Offset: 0x1F4DA60
    void FillSurrogateSortKeyRaw(int i, ::Mono::Globalization::Unicode::SortKeyBuffer* buf);
    // System.Int32 Compare(System.String s1, System.Int32 idx1, System.Int32 len1, System.String s2, System.Int32 idx2, System.Int32 len2, System.Globalization.CompareOptions options)
    // Offset: 0x1F4DBB0
    int Compare(::StringW s1, int idx1, int len1, ::StringW s2, int idx2, int len2, ::System::Globalization::CompareOptions options);
    // private System.Void ClearBuffer(System.Byte* buffer, System.Int32 size)
    // Offset: 0x1F4D474
    void ClearBuffer(uint8_t* buffer, int size);
    // private System.Int32 CompareInternal(System.String s1, System.Int32 idx1, System.Int32 len1, System.String s2, System.Int32 idx2, System.Int32 len2, out System.Boolean targetConsumed, out System.Boolean sourceConsumed, System.Boolean skipHeadingExtenders, System.Boolean immediateBreakup, ref Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.Context ctx)
    // Offset: 0x1F4DC70
    int CompareInternal(::StringW s1, int idx1, int len1, ::StringW s2, int idx2, int len2, ByRef<bool> targetConsumed, ByRef<bool> sourceConsumed, bool skipHeadingExtenders, bool immediateBreakup, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx);
    // private System.Int32 CompareFlagPair(System.Boolean b1, System.Boolean b2)
    // Offset: 0x1F4F124
    int CompareFlagPair(bool b1, bool b2);
    // public System.Boolean IsPrefix(System.String src, System.String target, System.Globalization.CompareOptions opt)
    // Offset: 0x1F4F144
    bool IsPrefix(::StringW src, ::StringW target, ::System::Globalization::CompareOptions opt);
    // public System.Boolean IsPrefix(System.String s, System.String target, System.Int32 start, System.Int32 length, System.Globalization.CompareOptions opt)
    // Offset: 0x1F4F164
    bool IsPrefix(::StringW s, ::StringW target, int start, int length, ::System::Globalization::CompareOptions opt);
    // private System.Boolean IsPrefix(System.String s, System.String target, System.Int32 start, System.Int32 length, System.Boolean skipHeadingExtenders, ref Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.Context ctx)
    // Offset: 0x1F4F218
    bool IsPrefix(::StringW s, ::StringW target, int start, int length, bool skipHeadingExtenders, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx);
    // public System.Boolean IsSuffix(System.String src, System.String target, System.Globalization.CompareOptions opt)
    // Offset: 0x1F4F284
    bool IsSuffix(::StringW src, ::StringW target, ::System::Globalization::CompareOptions opt);
    // public System.Boolean IsSuffix(System.String s, System.String target, System.Int32 start, System.Int32 length, System.Globalization.CompareOptions opt)
    // Offset: 0x1F4F2A4
    bool IsSuffix(::StringW s, ::StringW target, int start, int length, ::System::Globalization::CompareOptions opt);
    // private System.Int32 QuickIndexOf(System.String s, System.String target, System.Int32 start, System.Int32 length, out System.Boolean testWasUnable)
    // Offset: 0x1F4F51C
    int QuickIndexOf(::StringW s, ::StringW target, int start, int length, ByRef<bool> testWasUnable);
    // public System.Int32 IndexOf(System.String s, System.String target, System.Int32 start, System.Int32 length, System.Globalization.CompareOptions opt)
    // Offset: 0x1F4F690
    int IndexOf(::StringW s, ::StringW target, int start, int length, ::System::Globalization::CompareOptions opt);
    // private System.Int32 IndexOfOrdinal(System.String s, System.String target, System.Int32 start, System.Int32 length)
    // Offset: 0x1F4FD50
    int IndexOfOrdinal(::StringW s, ::StringW target, int start, int length);
    // private System.Int32 IndexOfOrdinal(System.String s, System.Char target, System.Int32 start, System.Int32 length)
    // Offset: 0x1F4FE2C
    int IndexOfOrdinal(::StringW s, ::Il2CppChar target, int start, int length);
    // private System.Int32 IndexOfSortKey(System.String s, System.Int32 start, System.Int32 length, System.Byte* sortkey, System.Char target, System.Int32 ti, System.Boolean noLv4, ref Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.Context ctx)
    // Offset: 0x1F4FE9C
    int IndexOfSortKey(::StringW s, int start, int length, uint8_t* sortkey, ::Il2CppChar target, int ti, bool noLv4, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx);
    // private System.Int32 IndexOf(System.String s, System.String target, System.Int32 start, System.Int32 length, System.Byte* targetSortKey, ref Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.Context ctx)
    // Offset: 0x1F4F87C
    int IndexOf(::StringW s, ::StringW target, int start, int length, uint8_t* targetSortKey, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx);
    // public System.Int32 LastIndexOf(System.String s, System.String target, System.Int32 start, System.Int32 length, System.Globalization.CompareOptions opt)
    // Offset: 0x1F4F340
    int LastIndexOf(::StringW s, ::StringW target, int start, int length, ::System::Globalization::CompareOptions opt);
    // private System.Int32 LastIndexOfOrdinal(System.String s, System.String target, System.Int32 start, System.Int32 length)
    // Offset: 0x1F500FC
    int LastIndexOfOrdinal(::StringW s, ::StringW target, int start, int length);
    // private System.Int32 LastIndexOfSortKey(System.String s, System.Int32 start, System.Int32 orgStart, System.Int32 length, System.Byte* sortkey, System.Int32 ti, System.Boolean noLv4, ref Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.Context ctx)
    // Offset: 0x1F50778
    int LastIndexOfSortKey(::StringW s, int start, int orgStart, int length, uint8_t* sortkey, int ti, bool noLv4, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx);
    // private System.Int32 LastIndexOf(System.String s, System.String target, System.Int32 start, System.Int32 length, System.Byte* targetSortKey, ref Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.Context ctx)
    // Offset: 0x1F5022C
    int LastIndexOf(::StringW s, ::StringW target, int start, int length, uint8_t* targetSortKey, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx);
    // private System.Boolean MatchesForward(System.String s, ref System.Int32 idx, System.Int32 end, System.Int32 ti, System.Byte* sortkey, System.Boolean noLv4, ref Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.Context ctx)
    // Offset: 0x1F4FF3C
    bool MatchesForward(::StringW s, ByRef<int> idx, int end, int ti, uint8_t* sortkey, bool noLv4, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx);
    // private System.Boolean MatchesForwardCore(System.String s, ref System.Int32 idx, System.Int32 end, System.Int32 ti, System.Byte* sortkey, System.Boolean noLv4, Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType ext, ref Mono.Globalization.Unicode.Contraction ct, ref Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.Context ctx)
    // Offset: 0x1F509F0
    bool MatchesForwardCore(::StringW s, ByRef<int> idx, int end, int ti, uint8_t* sortkey, bool noLv4, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, ByRef<::Mono::Globalization::Unicode::Contraction*> ct, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx);
    // private System.Boolean MatchesPrimitive(System.Globalization.CompareOptions opt, System.Byte* source, System.Int32 si, Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType ext, System.Byte* target, System.Int32 ti, System.Boolean noLv4)
    // Offset: 0x1F50D60
    bool MatchesPrimitive(::System::Globalization::CompareOptions opt, uint8_t* source, int si, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, uint8_t* target, int ti, bool noLv4);
    // private System.Boolean MatchesBackward(System.String s, ref System.Int32 idx, System.Int32 end, System.Int32 orgStart, System.Int32 ti, System.Byte* sortkey, System.Boolean noLv4, ref Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.Context ctx)
    // Offset: 0x1F50828
    bool MatchesBackward(::StringW s, ByRef<int> idx, int end, int orgStart, int ti, uint8_t* sortkey, bool noLv4, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx);
    // private System.Boolean MatchesBackwardCore(System.String s, ref System.Int32 idx, System.Int32 end, System.Int32 orgStart, System.Int32 ti, System.Byte* sortkey, System.Boolean noLv4, Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType ext, ref Mono.Globalization.Unicode.Contraction ct, ref Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.Context ctx)
    // Offset: 0x1F50FBC
    bool MatchesBackwardCore(::StringW s, ByRef<int> idx, int end, int orgStart, int ti, uint8_t* sortkey, bool noLv4, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, ByRef<::Mono::Globalization::Unicode::Contraction*> ct, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx);
  }; // Mono.Globalization.Unicode.SimpleCollator
  #pragma pack(pop)
  static check_size<sizeof(SimpleCollator), 92 + sizeof(bool)> __Mono_Globalization_Unicode_SimpleCollatorSizeCheck;
  static_assert(sizeof(SimpleCollator) == 0x5D);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Mono::Globalization::Unicode::SimpleCollator::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::SetCJKTable
// Il2CppName: SetCJKTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Globalization::Unicode::SimpleCollator::*)(::System::Globalization::CultureInfo*, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*>, ByRef<uint8_t*>, ByRef<uint8_t*>, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*>, ByRef<uint8_t*>)>(&Mono::Globalization::Unicode::SimpleCollator::SetCJKTable)> {
  static const MethodInfo* get() {
    static auto* culture = &::il2cpp_utils::GetClassFromName("System.Globalization", "CultureInfo")->byval_arg;
    static auto* cjkIndexer = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "CodePointIndexer")->this_arg;
    static auto* catTable = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->this_arg;
    static auto* lv1Table = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->this_arg;
    static auto* lv2Indexer = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "CodePointIndexer")->this_arg;
    static auto* lv2Table = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "SetCJKTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{culture, cjkIndexer, catTable, lv1Table, lv2Indexer, lv2Table});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::GetNeutralCulture
// Il2CppName: GetNeutralCulture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::CultureInfo* (*)(::System::Globalization::CultureInfo*)>(&Mono::Globalization::Unicode::SimpleCollator::GetNeutralCulture)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "CultureInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "GetNeutralCulture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::Category
// Il2CppName: Category
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (Mono::Globalization::Unicode::SimpleCollator::*)(int)>(&Mono::Globalization::Unicode::SimpleCollator::Category)> {
  static const MethodInfo* get() {
    static auto* cp = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "Category", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cp});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::Level1
// Il2CppName: Level1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (Mono::Globalization::Unicode::SimpleCollator::*)(int)>(&Mono::Globalization::Unicode::SimpleCollator::Level1)> {
  static const MethodInfo* get() {
    static auto* cp = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "Level1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cp});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::Level2
// Il2CppName: Level2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (Mono::Globalization::Unicode::SimpleCollator::*)(int, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType)>(&Mono::Globalization::Unicode::SimpleCollator::Level2)> {
  static const MethodInfo* get() {
    static auto* cp = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ext = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "Level2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cp, ext});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::IsHalfKana
// Il2CppName: IsHalfKana
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int, ::System::Globalization::CompareOptions)>(&Mono::Globalization::Unicode::SimpleCollator::IsHalfKana)> {
  static const MethodInfo* get() {
    static auto* cp = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "IsHalfKana", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cp, opt});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::GetContraction
// Il2CppName: GetContraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Mono::Globalization::Unicode::Contraction* (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, int, int)>(&Mono::Globalization::Unicode::SimpleCollator::GetContraction)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "GetContraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, start, end});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::GetContraction
// Il2CppName: GetContraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Mono::Globalization::Unicode::Contraction* (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, int, int, ::ArrayW<::Mono::Globalization::Unicode::Contraction*>)>(&Mono::Globalization::Unicode::SimpleCollator::GetContraction)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* clist = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "Contraction"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "GetContraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, start, end, clist});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::GetTailContraction
// Il2CppName: GetTailContraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Mono::Globalization::Unicode::Contraction* (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, int, int)>(&Mono::Globalization::Unicode::SimpleCollator::GetTailContraction)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "GetTailContraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, start, end});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::GetTailContraction
// Il2CppName: GetTailContraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Mono::Globalization::Unicode::Contraction* (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, int, int, ::ArrayW<::Mono::Globalization::Unicode::Contraction*>)>(&Mono::Globalization::Unicode::SimpleCollator::GetTailContraction)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* clist = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "Contraction"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "GetTailContraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, start, end, clist});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::FilterOptions
// Il2CppName: FilterOptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Globalization::Unicode::SimpleCollator::*)(int, ::System::Globalization::CompareOptions)>(&Mono::Globalization::Unicode::SimpleCollator::FilterOptions)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "FilterOptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i, opt});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::GetExtenderType
// Il2CppName: GetExtenderType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Mono::Globalization::Unicode::SimpleCollator::ExtenderType (Mono::Globalization::Unicode::SimpleCollator::*)(int)>(&Mono::Globalization::Unicode::SimpleCollator::GetExtenderType)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "GetExtenderType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::ToDashTypeValue
// Il2CppName: ToDashTypeValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (*)(::Mono::Globalization::Unicode::SimpleCollator::ExtenderType, ::System::Globalization::CompareOptions)>(&Mono::Globalization::Unicode::SimpleCollator::ToDashTypeValue)> {
  static const MethodInfo* get() {
    static auto* ext = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "ToDashTypeValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ext, opt});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::FilterExtender
// Il2CppName: FilterExtender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Globalization::Unicode::SimpleCollator::*)(int, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType, ::System::Globalization::CompareOptions)>(&Mono::Globalization::Unicode::SimpleCollator::FilterExtender)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ext = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "FilterExtender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i, ext, opt});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::IsIgnorable
// Il2CppName: IsIgnorable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int, ::System::Globalization::CompareOptions)>(&Mono::Globalization::Unicode::SimpleCollator::IsIgnorable)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "IsIgnorable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i, opt});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::IsSafe
// Il2CppName: IsSafe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mono::Globalization::Unicode::SimpleCollator::*)(int)>(&Mono::Globalization::Unicode::SimpleCollator::IsSafe)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "IsSafe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::GetSortKey
// Il2CppName: GetSortKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::SortKey* (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ::System::Globalization::CompareOptions)>(&Mono::Globalization::Unicode::SimpleCollator::GetSortKey)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "GetSortKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, options});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::GetSortKey
// Il2CppName: GetSortKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::SortKey* (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, int, int, ::System::Globalization::CompareOptions)>(&Mono::Globalization::Unicode::SimpleCollator::GetSortKey)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "GetSortKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, start, length, options});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::GetSortKey
// Il2CppName: GetSortKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, int, int, ::Mono::Globalization::Unicode::SortKeyBuffer*, ::System::Globalization::CompareOptions)>(&Mono::Globalization::Unicode::SimpleCollator::GetSortKey)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* buf = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SortKeyBuffer")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "GetSortKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, start, end, buf, opt});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::FillSortKeyRaw
// Il2CppName: FillSortKeyRaw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Globalization::Unicode::SimpleCollator::*)(int, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType, ::Mono::Globalization::Unicode::SortKeyBuffer*, ::System::Globalization::CompareOptions)>(&Mono::Globalization::Unicode::SimpleCollator::FillSortKeyRaw)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ext = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType")->byval_arg;
    static auto* buf = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SortKeyBuffer")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "FillSortKeyRaw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i, ext, buf, opt});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::FillSurrogateSortKeyRaw
// Il2CppName: FillSurrogateSortKeyRaw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Globalization::Unicode::SimpleCollator::*)(int, ::Mono::Globalization::Unicode::SortKeyBuffer*)>(&Mono::Globalization::Unicode::SimpleCollator::FillSurrogateSortKeyRaw)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* buf = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SortKeyBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "FillSurrogateSortKeyRaw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i, buf});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, int, int, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&Mono::Globalization::Unicode::SimpleCollator::Compare)> {
  static const MethodInfo* get() {
    static auto* s1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* idx1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* len1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* s2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* idx2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* len2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s1, idx1, len1, s2, idx2, len2, options});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::ClearBuffer
// Il2CppName: ClearBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Globalization::Unicode::SimpleCollator::*)(uint8_t*, int)>(&Mono::Globalization::Unicode::SimpleCollator::ClearBuffer)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "ClearBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, size});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::CompareInternal
// Il2CppName: CompareInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, int, int, ::StringW, int, int, ByRef<bool>, ByRef<bool>, bool, bool, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context>)>(&Mono::Globalization::Unicode::SimpleCollator::CompareInternal)> {
  static const MethodInfo* get() {
    static auto* s1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* idx1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* len1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* s2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* idx2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* len2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* targetConsumed = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    static auto* sourceConsumed = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    static auto* skipHeadingExtenders = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* immediateBreakup = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/Context")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "CompareInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s1, idx1, len1, s2, idx2, len2, targetConsumed, sourceConsumed, skipHeadingExtenders, immediateBreakup, ctx});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::CompareFlagPair
// Il2CppName: CompareFlagPair
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Globalization::Unicode::SimpleCollator::*)(bool, bool)>(&Mono::Globalization::Unicode::SimpleCollator::CompareFlagPair)> {
  static const MethodInfo* get() {
    static auto* b1 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* b2 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "CompareFlagPair", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{b1, b2});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::IsPrefix
// Il2CppName: IsPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ::StringW, ::System::Globalization::CompareOptions)>(&Mono::Globalization::Unicode::SimpleCollator::IsPrefix)> {
  static const MethodInfo* get() {
    static auto* src = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "IsPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{src, target, opt});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::IsPrefix
// Il2CppName: IsPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&Mono::Globalization::Unicode::SimpleCollator::IsPrefix)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "IsPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, target, start, length, opt});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::IsPrefix
// Il2CppName: IsPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ::StringW, int, int, bool, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context>)>(&Mono::Globalization::Unicode::SimpleCollator::IsPrefix)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* skipHeadingExtenders = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/Context")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "IsPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, target, start, length, skipHeadingExtenders, ctx});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::IsSuffix
// Il2CppName: IsSuffix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ::StringW, ::System::Globalization::CompareOptions)>(&Mono::Globalization::Unicode::SimpleCollator::IsSuffix)> {
  static const MethodInfo* get() {
    static auto* src = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "IsSuffix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{src, target, opt});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::IsSuffix
// Il2CppName: IsSuffix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&Mono::Globalization::Unicode::SimpleCollator::IsSuffix)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "IsSuffix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, target, start, length, opt});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::QuickIndexOf
// Il2CppName: QuickIndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ::StringW, int, int, ByRef<bool>)>(&Mono::Globalization::Unicode::SimpleCollator::QuickIndexOf)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* testWasUnable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "QuickIndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, target, start, length, testWasUnable});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&Mono::Globalization::Unicode::SimpleCollator::IndexOf)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, target, start, length, opt});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::IndexOfOrdinal
// Il2CppName: IndexOfOrdinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ::StringW, int, int)>(&Mono::Globalization::Unicode::SimpleCollator::IndexOfOrdinal)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "IndexOfOrdinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, target, start, length});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::IndexOfOrdinal
// Il2CppName: IndexOfOrdinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ::Il2CppChar, int, int)>(&Mono::Globalization::Unicode::SimpleCollator::IndexOfOrdinal)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "IndexOfOrdinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, target, start, length});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::IndexOfSortKey
// Il2CppName: IndexOfSortKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, int, int, uint8_t*, ::Il2CppChar, int, bool, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context>)>(&Mono::Globalization::Unicode::SimpleCollator::IndexOfSortKey)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* sortkey = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* ti = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* noLv4 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/Context")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "IndexOfSortKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, start, length, sortkey, target, ti, noLv4, ctx});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ::StringW, int, int, uint8_t*, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context>)>(&Mono::Globalization::Unicode::SimpleCollator::IndexOf)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* targetSortKey = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/Context")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, target, start, length, targetSortKey, ctx});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::LastIndexOf
// Il2CppName: LastIndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&Mono::Globalization::Unicode::SimpleCollator::LastIndexOf)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "LastIndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, target, start, length, opt});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::LastIndexOfOrdinal
// Il2CppName: LastIndexOfOrdinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ::StringW, int, int)>(&Mono::Globalization::Unicode::SimpleCollator::LastIndexOfOrdinal)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "LastIndexOfOrdinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, target, start, length});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::LastIndexOfSortKey
// Il2CppName: LastIndexOfSortKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, int, int, int, uint8_t*, int, bool, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context>)>(&Mono::Globalization::Unicode::SimpleCollator::LastIndexOfSortKey)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* orgStart = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* sortkey = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* ti = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* noLv4 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/Context")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "LastIndexOfSortKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, start, orgStart, length, sortkey, ti, noLv4, ctx});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::LastIndexOf
// Il2CppName: LastIndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ::StringW, int, int, uint8_t*, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context>)>(&Mono::Globalization::Unicode::SimpleCollator::LastIndexOf)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* start = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* targetSortKey = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/Context")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "LastIndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, target, start, length, targetSortKey, ctx});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::MatchesForward
// Il2CppName: MatchesForward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ByRef<int>, int, int, uint8_t*, bool, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context>)>(&Mono::Globalization::Unicode::SimpleCollator::MatchesForward)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ti = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* sortkey = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* noLv4 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/Context")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "MatchesForward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, idx, end, ti, sortkey, noLv4, ctx});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::MatchesForwardCore
// Il2CppName: MatchesForwardCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ByRef<int>, int, int, uint8_t*, bool, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType, ByRef<::Mono::Globalization::Unicode::Contraction*>, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context>)>(&Mono::Globalization::Unicode::SimpleCollator::MatchesForwardCore)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ti = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* sortkey = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* noLv4 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* ext = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType")->byval_arg;
    static auto* ct = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "Contraction")->this_arg;
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/Context")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "MatchesForwardCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, idx, end, ti, sortkey, noLv4, ext, ct, ctx});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::MatchesPrimitive
// Il2CppName: MatchesPrimitive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mono::Globalization::Unicode::SimpleCollator::*)(::System::Globalization::CompareOptions, uint8_t*, int, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType, uint8_t*, int, bool)>(&Mono::Globalization::Unicode::SimpleCollator::MatchesPrimitive)> {
  static const MethodInfo* get() {
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    static auto* source = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* si = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ext = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType")->byval_arg;
    static auto* target = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* ti = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* noLv4 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "MatchesPrimitive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{opt, source, si, ext, target, ti, noLv4});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::MatchesBackward
// Il2CppName: MatchesBackward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ByRef<int>, int, int, int, uint8_t*, bool, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context>)>(&Mono::Globalization::Unicode::SimpleCollator::MatchesBackward)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* orgStart = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ti = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* sortkey = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* noLv4 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/Context")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "MatchesBackward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, idx, end, orgStart, ti, sortkey, noLv4, ctx});
  }
};
// Writing MetadataGetter for method: Mono::Globalization::Unicode::SimpleCollator::MatchesBackwardCore
// Il2CppName: MatchesBackwardCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Mono::Globalization::Unicode::SimpleCollator::*)(::StringW, ByRef<int>, int, int, int, uint8_t*, bool, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType, ByRef<::Mono::Globalization::Unicode::Contraction*>, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context>)>(&Mono::Globalization::Unicode::SimpleCollator::MatchesBackwardCore)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* end = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* orgStart = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ti = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* sortkey = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* noLv4 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* ext = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType")->byval_arg;
    static auto* ct = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "Contraction")->this_arg;
    static auto* ctx = &::il2cpp_utils::GetClassFromName("Mono.Globalization.Unicode", "SimpleCollator/Context")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Globalization::Unicode::SimpleCollator*), "MatchesBackwardCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, idx, end, orgStart, ti, sortkey, noLv4, ext, ct, ctx});
  }
};
