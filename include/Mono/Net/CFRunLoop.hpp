// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Mono.Net.CFObject
#include "Mono/Net/CFObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Mono::Net
namespace Mono::Net {
  // Forward declaring type: CFString
  class CFString;
}
// Completed forward declares
// Type namespace: Mono.Net
namespace Mono::Net {
  // Forward declaring type: CFRunLoop
  class CFRunLoop;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Mono::Net::CFRunLoop);
DEFINE_IL2CPP_ARG_TYPE(::Mono::Net::CFRunLoop*, "Mono.Net", "CFRunLoop");
// Type namespace: Mono.Net
namespace Mono::Net {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Mono.Net.CFRunLoop
  // [TokenAttribute] Offset: FFFFFFFF
  class CFRunLoop : public ::Mono::Net::CFObject {
    public:
    // static public Mono.Net.CFRunLoop get_CurrentRunLoop()
    // Offset: 0x1AFC534
    static ::Mono::Net::CFRunLoop* get_CurrentRunLoop();
    // static private System.Void CFRunLoopAddSource(System.IntPtr rl, System.IntPtr source, System.IntPtr mode)
    // Offset: 0x1AFEAB8
    static void CFRunLoopAddSource(::System::IntPtr rl, ::System::IntPtr source, ::System::IntPtr mode);
    // static private System.Void CFRunLoopRemoveSource(System.IntPtr rl, System.IntPtr source, System.IntPtr mode)
    // Offset: 0x1AFEB50
    static void CFRunLoopRemoveSource(::System::IntPtr rl, ::System::IntPtr source, ::System::IntPtr mode);
    // static private System.Int32 CFRunLoopRunInMode(System.IntPtr mode, System.Double seconds, System.Boolean returnAfterSourceHandled)
    // Offset: 0x1AFEBE8
    static int CFRunLoopRunInMode(::System::IntPtr mode, double seconds, bool returnAfterSourceHandled);
    // static private System.IntPtr CFRunLoopGetCurrent()
    // Offset: 0x1AFEC88
    static ::System::IntPtr CFRunLoopGetCurrent();
    // static private System.Void CFRunLoopStop(System.IntPtr rl)
    // Offset: 0x1AFECFC
    static void CFRunLoopStop(::System::IntPtr rl);
    // public System.Void AddSource(System.IntPtr source, Mono.Net.CFString mode)
    // Offset: 0x1AFC680
    void AddSource(::System::IntPtr source, ::Mono::Net::CFString* mode);
    // public System.Void RemoveSource(System.IntPtr source, Mono.Net.CFString mode)
    // Offset: 0x1AFC6B8
    void RemoveSource(::System::IntPtr source, ::Mono::Net::CFString* mode);
    // public System.Int32 RunInMode(Mono.Net.CFString mode, System.Double seconds, System.Boolean returnAfterSourceHandled)
    // Offset: 0x1AFC69C
    int RunInMode(::Mono::Net::CFString* mode, double seconds, bool returnAfterSourceHandled);
    // public System.Void Stop()
    // Offset: 0x1AFCF28
    void Stop();
    // public System.Void .ctor(System.IntPtr handle, System.Boolean own)
    // Offset: 0x1AFED7C
    // Implemented from: Mono.Net.CFObject
    // Base method: System.Void CFObject::.ctor(System.IntPtr handle, System.Boolean own)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CFRunLoop* New_ctor(::System::IntPtr handle, bool own) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CFRunLoop*, creationType>(handle, own)));
    }
  }; // Mono.Net.CFRunLoop
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Mono::Net::CFRunLoop::get_CurrentRunLoop
// Il2CppName: get_CurrentRunLoop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Mono::Net::CFRunLoop* (*)()>(&Mono::Net::CFRunLoop::get_CurrentRunLoop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Net::CFRunLoop*), "get_CurrentRunLoop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mono::Net::CFRunLoop::CFRunLoopAddSource
// Il2CppName: CFRunLoopAddSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr, ::System::IntPtr)>(&Mono::Net::CFRunLoop::CFRunLoopAddSource)> {
  static const MethodInfo* get() {
    static auto* rl = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Net::CFRunLoop*), "CFRunLoopAddSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rl, source, mode});
  }
};
// Writing MetadataGetter for method: Mono::Net::CFRunLoop::CFRunLoopRemoveSource
// Il2CppName: CFRunLoopRemoveSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr, ::System::IntPtr)>(&Mono::Net::CFRunLoop::CFRunLoopRemoveSource)> {
  static const MethodInfo* get() {
    static auto* rl = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Net::CFRunLoop*), "CFRunLoopRemoveSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rl, source, mode});
  }
};
// Writing MetadataGetter for method: Mono::Net::CFRunLoop::CFRunLoopRunInMode
// Il2CppName: CFRunLoopRunInMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr, double, bool)>(&Mono::Net::CFRunLoop::CFRunLoopRunInMode)> {
  static const MethodInfo* get() {
    static auto* mode = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* seconds = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* returnAfterSourceHandled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Net::CFRunLoop*), "CFRunLoopRunInMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mode, seconds, returnAfterSourceHandled});
  }
};
// Writing MetadataGetter for method: Mono::Net::CFRunLoop::CFRunLoopGetCurrent
// Il2CppName: CFRunLoopGetCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Mono::Net::CFRunLoop::CFRunLoopGetCurrent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Net::CFRunLoop*), "CFRunLoopGetCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mono::Net::CFRunLoop::CFRunLoopStop
// Il2CppName: CFRunLoopStop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Mono::Net::CFRunLoop::CFRunLoopStop)> {
  static const MethodInfo* get() {
    static auto* rl = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Net::CFRunLoop*), "CFRunLoopStop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rl});
  }
};
// Writing MetadataGetter for method: Mono::Net::CFRunLoop::AddSource
// Il2CppName: AddSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Net::CFRunLoop::*)(::System::IntPtr, ::Mono::Net::CFString*)>(&Mono::Net::CFRunLoop::AddSource)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("Mono.Net", "CFString")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Net::CFRunLoop*), "AddSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, mode});
  }
};
// Writing MetadataGetter for method: Mono::Net::CFRunLoop::RemoveSource
// Il2CppName: RemoveSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Net::CFRunLoop::*)(::System::IntPtr, ::Mono::Net::CFString*)>(&Mono::Net::CFRunLoop::RemoveSource)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("Mono.Net", "CFString")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Net::CFRunLoop*), "RemoveSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, mode});
  }
};
// Writing MetadataGetter for method: Mono::Net::CFRunLoop::RunInMode
// Il2CppName: RunInMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Mono::Net::CFRunLoop::*)(::Mono::Net::CFString*, double, bool)>(&Mono::Net::CFRunLoop::RunInMode)> {
  static const MethodInfo* get() {
    static auto* mode = &::il2cpp_utils::GetClassFromName("Mono.Net", "CFString")->byval_arg;
    static auto* seconds = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* returnAfterSourceHandled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Mono::Net::CFRunLoop*), "RunInMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mode, seconds, returnAfterSourceHandled});
  }
};
// Writing MetadataGetter for method: Mono::Net::CFRunLoop::Stop
// Il2CppName: Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Mono::Net::CFRunLoop::*)()>(&Mono::Net::CFRunLoop::Stop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Mono::Net::CFRunLoop*), "Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Mono::Net::CFRunLoop::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
