// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: HoudiniEngineUnity.HAPI_AttributeOwner
#include "HoudiniEngineUnity/HAPI_AttributeOwner.hpp"
// Including type: HoudiniEngineUnity.HAPI_StorageType
#include "HoudiniEngineUnity/HAPI_StorageType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: HoudiniEngineUnity.HEU_OutputAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  class HEU_OutputAttribute : public ::Il2CppObject {
    public:
    // public System.String _name
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* name;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // public HoudiniEngineUnity.HAPI_AttributeOwner _class
    // Size: 0x4
    // Offset: 0x18
    HoudiniEngineUnity::HAPI_AttributeOwner _class;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HAPI_AttributeOwner) == 0x4);
    // public HoudiniEngineUnity.HAPI_StorageType _type
    // Size: 0x4
    // Offset: 0x1C
    HoudiniEngineUnity::HAPI_StorageType type;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HAPI_StorageType) == 0x4);
    // public System.Int32 _count
    // Size: 0x4
    // Offset: 0x20
    int count;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 _tupleSize
    // Size: 0x4
    // Offset: 0x24
    int tupleSize;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32[] _intValues
    // Size: 0x8
    // Offset: 0x28
    ::Array<int>* intValues;
    // Field size check
    static_assert(sizeof(::Array<int>*) == 0x8);
    // public System.Single[] _floatValues
    // Size: 0x8
    // Offset: 0x30
    ::Array<float>* floatValues;
    // Field size check
    static_assert(sizeof(::Array<float>*) == 0x8);
    // public System.String[] _stringValues
    // Size: 0x8
    // Offset: 0x38
    ::Array<::Il2CppString*>* stringValues;
    // Field size check
    static_assert(sizeof(::Array<::Il2CppString*>*) == 0x8);
    // Creating value type constructor for type: HEU_OutputAttribute
    HEU_OutputAttribute(::Il2CppString* name_ = {}, HoudiniEngineUnity::HAPI_AttributeOwner _class_ = {}, HoudiniEngineUnity::HAPI_StorageType type_ = {}, int count_ = {}, int tupleSize_ = {}, ::Array<int>* intValues_ = {}, ::Array<float>* floatValues_ = {}, ::Array<::Il2CppString*>* stringValues_ = {}) noexcept : name{name_}, _class{_class_}, type{type_}, count{count_}, tupleSize{tupleSize_}, intValues{intValues_}, floatValues{floatValues_}, stringValues{stringValues_} {}
    // Get instance field reference: public System.String _name
    ::Il2CppString*& dyn__name();
    // Get instance field reference: public HoudiniEngineUnity.HAPI_AttributeOwner _class
    HoudiniEngineUnity::HAPI_AttributeOwner& dyn__class();
    // Get instance field reference: public HoudiniEngineUnity.HAPI_StorageType _type
    HoudiniEngineUnity::HAPI_StorageType& dyn__type();
    // Get instance field reference: public System.Int32 _count
    int& dyn__count();
    // Get instance field reference: public System.Int32 _tupleSize
    int& dyn__tupleSize();
    // Get instance field reference: public System.Int32[] _intValues
    ::Array<int>*& dyn__intValues();
    // Get instance field reference: public System.Single[] _floatValues
    ::Array<float>*& dyn__floatValues();
    // Get instance field reference: public System.String[] _stringValues
    ::Array<::Il2CppString*>*& dyn__stringValues();
    // public System.Void .ctor()
    // Offset: 0x17A07A4
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HEU_OutputAttribute* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_OutputAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HEU_OutputAttribute*, creationType>()));
    }
  }; // HoudiniEngineUnity.HEU_OutputAttribute
  #pragma pack(pop)
  static check_size<sizeof(HEU_OutputAttribute), 56 + sizeof(::Array<::Il2CppString*>*)> __HoudiniEngineUnity_HEU_OutputAttributeSizeCheck;
  static_assert(sizeof(HEU_OutputAttribute) == 0x40);
}
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HEU_OutputAttribute*, "HoudiniEngineUnity", "HEU_OutputAttribute");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_OutputAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
