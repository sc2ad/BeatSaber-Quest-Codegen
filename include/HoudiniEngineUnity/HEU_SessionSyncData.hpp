// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: HoudiniEngineUnity.HAPI_Viewport
#include "HoudiniEngineUnity/HAPI_Viewport.hpp"
// Including type: HoudiniEngineUnity.HAPI_SessionSyncInfo
#include "HoudiniEngineUnity/HAPI_SessionSyncInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
}
// Completed forward declares
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Forward declaring type: HEU_SessionSyncData
  class HEU_SessionSyncData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::HoudiniEngineUnity::HEU_SessionSyncData);
DEFINE_IL2CPP_ARG_TYPE(::HoudiniEngineUnity::HEU_SessionSyncData*, "HoudiniEngineUnity", "HEU_SessionSyncData");
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Size: 0x63
  #pragma pack(push, 1)
  // Autogenerated type: HoudiniEngineUnity.HEU_SessionSyncData
  // [TokenAttribute] Offset: FFFFFFFF
  class HEU_SessionSyncData : public ::Il2CppObject {
    public:
    // Nested type: ::HoudiniEngineUnity::HEU_SessionSyncData::Status
    struct Status;
    public:
    // private System.Int32 _status
    // Size: 0x4
    // Offset: 0x10
    int status;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Single _timeLastUpdate
    // Size: 0x4
    // Offset: 0x14
    float timeLastUpdate;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single _timeStartConnection
    // Size: 0x4
    // Offset: 0x18
    float timeStartConnection;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: timeStartConnection and: newNodeName
    char __padding2[0x4] = {};
    // public System.String _newNodeName
    // Size: 0x8
    // Offset: 0x20
    ::StringW newNodeName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Int32 _nodeTypeIndex
    // Size: 0x4
    // Offset: 0x28
    int nodeTypeIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean _validForConnection
    // Size: 0x1
    // Offset: 0x2C
    bool validForConnection;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: validForConnection and: viewportHAPI
    char __padding5[0x3] = {};
    // public HoudiniEngineUnity.HAPI_Viewport _viewportHAPI
    // Size: 0x14
    // Offset: 0x30
    ::HoudiniEngineUnity::HAPI_Viewport viewportHAPI;
    // Field size check
    static_assert(sizeof(::HoudiniEngineUnity::HAPI_Viewport) == 0x14);
    // Padding between fields: viewportHAPI and: viewportLocal
    char __padding6[0x4] = {};
    // public HoudiniEngineUnity.HAPI_Viewport _viewportLocal
    // Size: 0x14
    // Offset: 0x48
    ::HoudiniEngineUnity::HAPI_Viewport viewportLocal;
    // Field size check
    static_assert(sizeof(::HoudiniEngineUnity::HAPI_Viewport) == 0x14);
    // Padding between fields: viewportLocal and: viewportJustUpdated
    char __padding7[0x4] = {};
    // public System.Boolean _viewportJustUpdated
    // Size: 0x1
    // Offset: 0x60
    bool viewportJustUpdated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public HoudiniEngineUnity.HAPI_SessionSyncInfo _syncInfo
    // Size: 0x2
    // Offset: 0x61
    ::HoudiniEngineUnity::HAPI_SessionSyncInfo syncInfo;
    // Field size check
    static_assert(sizeof(::HoudiniEngineUnity::HAPI_SessionSyncInfo) == 0x2);
    public:
    // Get instance field reference: private System.Int32 _status
    [[deprecated("Use field access instead!")]] int& dyn__status();
    // Get instance field reference: public System.Single _timeLastUpdate
    [[deprecated("Use field access instead!")]] float& dyn__timeLastUpdate();
    // Get instance field reference: public System.Single _timeStartConnection
    [[deprecated("Use field access instead!")]] float& dyn__timeStartConnection();
    // Get instance field reference: public System.String _newNodeName
    [[deprecated("Use field access instead!")]] ::StringW& dyn__newNodeName();
    // Get instance field reference: public System.Int32 _nodeTypeIndex
    [[deprecated("Use field access instead!")]] int& dyn__nodeTypeIndex();
    // Get instance field reference: public System.Boolean _validForConnection
    [[deprecated("Use field access instead!")]] bool& dyn__validForConnection();
    // Get instance field reference: public HoudiniEngineUnity.HAPI_Viewport _viewportHAPI
    [[deprecated("Use field access instead!")]] ::HoudiniEngineUnity::HAPI_Viewport& dyn__viewportHAPI();
    // Get instance field reference: public HoudiniEngineUnity.HAPI_Viewport _viewportLocal
    [[deprecated("Use field access instead!")]] ::HoudiniEngineUnity::HAPI_Viewport& dyn__viewportLocal();
    // Get instance field reference: public System.Boolean _viewportJustUpdated
    [[deprecated("Use field access instead!")]] bool& dyn__viewportJustUpdated();
    // Get instance field reference: public HoudiniEngineUnity.HAPI_SessionSyncInfo _syncInfo
    [[deprecated("Use field access instead!")]] ::HoudiniEngineUnity::HAPI_SessionSyncInfo& dyn__syncInfo();
    // public HoudiniEngineUnity.HEU_SessionSyncData/HoudiniEngineUnity.Status get_SyncStatus()
    // Offset: 0x1B0BB50
    ::HoudiniEngineUnity::HEU_SessionSyncData::Status get_SyncStatus();
    // public System.Void set_SyncStatus(HoudiniEngineUnity.HEU_SessionSyncData/HoudiniEngineUnity.Status value)
    // Offset: 0x1B0BB64
    void set_SyncStatus(::HoudiniEngineUnity::HEU_SessionSyncData::Status value);
    // public System.Void .ctor()
    // Offset: 0x1B08870
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HEU_SessionSyncData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_SessionSyncData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HEU_SessionSyncData*, creationType>()));
    }
  }; // HoudiniEngineUnity.HEU_SessionSyncData
  #pragma pack(pop)
  static check_size<sizeof(HEU_SessionSyncData), 97 + sizeof(::HoudiniEngineUnity::HAPI_SessionSyncInfo)> __HoudiniEngineUnity_HEU_SessionSyncDataSizeCheck;
  static_assert(sizeof(HEU_SessionSyncData) == 0x63);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_SessionSyncData::get_SyncStatus
// Il2CppName: get_SyncStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::HoudiniEngineUnity::HEU_SessionSyncData::Status (HoudiniEngineUnity::HEU_SessionSyncData::*)()>(&HoudiniEngineUnity::HEU_SessionSyncData::get_SyncStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_SessionSyncData*), "get_SyncStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_SessionSyncData::set_SyncStatus
// Il2CppName: set_SyncStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_SessionSyncData::*)(::HoudiniEngineUnity::HEU_SessionSyncData::Status)>(&HoudiniEngineUnity::HEU_SessionSyncData::set_SyncStatus)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionSyncData/Status")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_SessionSyncData*), "set_SyncStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_SessionSyncData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
