// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: HoudiniEngineUnity.HEU_GenerateOptions
#include "HoudiniEngineUnity/HEU_GenerateOptions.hpp"
// Including type: HoudiniEngineUnity.HEU_ThreadedTaskLoadGeo
#include "HoudiniEngineUnity/HEU_ThreadedTaskLoadGeo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Forward declaring type: HEU_GeneratedOutput
  class HEU_GeneratedOutput;
  // Forward declaring type: HEU_LoadBufferVolume
  class HEU_LoadBufferVolume;
  // Forward declaring type: HEU_SessionBase
  class HEU_SessionBase;
  // Forward declaring type: HEU_LoadBufferMesh
  class HEU_LoadBufferMesh;
  // Forward declaring type: HEU_LoadBufferInstancer
  class HEU_LoadBufferInstancer;
  // Forward declaring type: HEU_LoadBufferBase
  class HEU_LoadBufferBase;
  // Forward declaring type: HAPI_Transform
  struct HAPI_Transform;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Forward declaring type: HEU_BaseSync
  class HEU_BaseSync;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::HoudiniEngineUnity::HEU_BaseSync);
DEFINE_IL2CPP_ARG_TYPE(::HoudiniEngineUnity::HEU_BaseSync*, "HoudiniEngineUnity", "HEU_BaseSync");
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Size: 0x7D
  #pragma pack(push, 1)
  // Autogenerated type: HoudiniEngineUnity.HEU_BaseSync
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExecuteInEditMode] Offset: FFFFFFFF
  class HEU_BaseSync : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.Int32 _cookNodeID
    // Size: 0x4
    // Offset: 0x18
    int cookNodeID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: cookNodeID and: sessionID
    char __padding0[0x4] = {};
    // public System.Int64 _sessionID
    // Size: 0x8
    // Offset: 0x20
    int64_t sessionID;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // public System.String _nodeName
    // Size: 0x8
    // Offset: 0x28
    ::StringW nodeName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean _initialized
    // Size: 0x1
    // Offset: 0x30
    bool initialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean _syncing
    // Size: 0x1
    // Offset: 0x31
    bool syncing;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean _deleteParent
    // Size: 0x1
    // Offset: 0x32
    bool deleteParent;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: deleteParent and: generatedOutputs
    char __padding5[0x5] = {};
    // public System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_GeneratedOutput> _generatedOutputs
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HEU_GeneratedOutput*>* generatedOutputs;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::HoudiniEngineUnity::HEU_GeneratedOutput*>*) == 0x8);
    // public System.String _outputCacheDirectory
    // Size: 0x8
    // Offset: 0x40
    ::StringW outputCacheDirectory;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Collections.Generic.List`1<System.String> _outputCacheFilePaths
    // Size: 0x8
    // Offset: 0x48
    ::System::Collections::Generic::List_1<::StringW>* outputCacheFilePaths;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // public HoudiniEngineUnity.HEU_GenerateOptions _generateOptions
    // Size: 0x5
    // Offset: 0x50
    ::HoudiniEngineUnity::HEU_GenerateOptions generateOptions;
    // Field size check
    static_assert(sizeof(::HoudiniEngineUnity::HEU_GenerateOptions) == 0x5);
    // Padding between fields: generateOptions and: log
    char __padding9[0x3] = {};
    // public System.Text.StringBuilder _log
    // Size: 0x8
    // Offset: 0x58
    ::System::Text::StringBuilder* log;
    // Field size check
    static_assert(sizeof(::System::Text::StringBuilder*) == 0x8);
    // public System.Text.StringBuilder _error
    // Size: 0x8
    // Offset: 0x60
    ::System::Text::StringBuilder* error;
    // Field size check
    static_assert(sizeof(::System::Text::StringBuilder*) == 0x8);
    // public System.Boolean _sessionSyncAutoCook
    // Size: 0x1
    // Offset: 0x68
    bool sessionSyncAutoCook;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: sessionSyncAutoCook and: loadTask
    char __padding12[0x7] = {};
    // protected HoudiniEngineUnity.HEU_ThreadedTaskLoadGeo _loadTask
    // Size: 0x8
    // Offset: 0x70
    ::HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo* loadTask;
    // Field size check
    static_assert(sizeof(::HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo*) == 0x8);
    // protected System.Int32 _totalCookCount
    // Size: 0x4
    // Offset: 0x78
    int totalCookCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // protected System.Boolean _firstSyncComplete
    // Size: 0x1
    // Offset: 0x7C
    bool firstSyncComplete;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.Int32 _cookNodeID
    [[deprecated("Use field access instead!")]] int& dyn__cookNodeID();
    // Get instance field reference: public System.Int64 _sessionID
    [[deprecated("Use field access instead!")]] int64_t& dyn__sessionID();
    // Get instance field reference: public System.String _nodeName
    [[deprecated("Use field access instead!")]] ::StringW& dyn__nodeName();
    // Get instance field reference: public System.Boolean _initialized
    [[deprecated("Use field access instead!")]] bool& dyn__initialized();
    // Get instance field reference: public System.Boolean _syncing
    [[deprecated("Use field access instead!")]] bool& dyn__syncing();
    // Get instance field reference: public System.Boolean _deleteParent
    [[deprecated("Use field access instead!")]] bool& dyn__deleteParent();
    // Get instance field reference: public System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_GeneratedOutput> _generatedOutputs
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HEU_GeneratedOutput*>*& dyn__generatedOutputs();
    // Get instance field reference: public System.String _outputCacheDirectory
    [[deprecated("Use field access instead!")]] ::StringW& dyn__outputCacheDirectory();
    // Get instance field reference: public System.Collections.Generic.List`1<System.String> _outputCacheFilePaths
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn__outputCacheFilePaths();
    // Get instance field reference: public HoudiniEngineUnity.HEU_GenerateOptions _generateOptions
    [[deprecated("Use field access instead!")]] ::HoudiniEngineUnity::HEU_GenerateOptions& dyn__generateOptions();
    // Get instance field reference: public System.Text.StringBuilder _log
    [[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& dyn__log();
    // Get instance field reference: public System.Text.StringBuilder _error
    [[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& dyn__error();
    // Get instance field reference: public System.Boolean _sessionSyncAutoCook
    [[deprecated("Use field access instead!")]] bool& dyn__sessionSyncAutoCook();
    // Get instance field reference: protected HoudiniEngineUnity.HEU_ThreadedTaskLoadGeo _loadTask
    [[deprecated("Use field access instead!")]] ::HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo*& dyn__loadTask();
    // Get instance field reference: protected System.Int32 _totalCookCount
    [[deprecated("Use field access instead!")]] int& dyn__totalCookCount();
    // Get instance field reference: protected System.Boolean _firstSyncComplete
    [[deprecated("Use field access instead!")]] bool& dyn__firstSyncComplete();
    // public System.Void .ctor()
    // Offset: 0x1705FEC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HEU_BaseSync* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_BaseSync::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HEU_BaseSync*, creationType>()));
    }
    // private System.Void Awake()
    // Offset: 0x170B904
    void Awake();
    // private System.Void OnDestroy()
    // Offset: 0x170B908
    void OnDestroy();
    // public System.Void DeleteSessionData()
    // Offset: 0x170B914
    void DeleteSessionData();
    // public System.Void DestroyGeneratedData()
    // Offset: 0x170B9FC
    void DestroyGeneratedData();
    // protected System.Void Initialize()
    // Offset: 0x170BB90
    void Initialize();
    // public HoudiniEngineUnity.HEU_SessionBase GetHoudiniSession(System.Boolean bCreateIfNotFound)
    // Offset: 0x170BBAC
    ::HoudiniEngineUnity::HEU_SessionBase* GetHoudiniSession(bool bCreateIfNotFound);
    // private System.Int32 GetParentNodeID(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x170B990
    int GetParentNodeID(::HoudiniEngineUnity::HEU_SessionBase* session);
    // public System.Void Log(System.String msg)
    // Offset: 0x170BD38
    void Log(::StringW msg);
    // public System.Void ClearLog()
    // Offset: 0x170BDD8
    void ClearLog();
    // public System.Void Error(System.String error)
    // Offset: 0x170BEA8
    void Error(::StringW error);
    // public System.Boolean IsLoaded()
    // Offset: 0x170BEC4
    bool IsLoaded();
    // public System.Void StartSync()
    // Offset: 0x170BEE8
    void StartSync();
    // protected System.Void SetupLoadTask(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x170C028
    void SetupLoadTask(::HoudiniEngineUnity::HEU_SessionBase* session);
    // public System.Void StopSync()
    // Offset: 0x170C02C
    void StopSync();
    // public System.Void Resync()
    // Offset: 0x170C0A8
    void Resync();
    // public System.Void Bake()
    // Offset: 0x170C0EC
    void Bake();
    // public System.Void Unload()
    // Offset: 0x170C3F8
    void Unload();
    // public System.Void Reset()
    // Offset: 0x170C494
    void Reset();
    // public System.Void OnLoadComplete(HoudiniEngineUnity.HEU_ThreadedTaskLoadGeo/HoudiniEngineUnity.HEU_LoadData loadData)
    // Offset: 0x1705B8C
    void OnLoadComplete(::HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadData* loadData);
    // public System.Void GenerateObjects(HoudiniEngineUnity.HEU_ThreadedTaskLoadGeo/HoudiniEngineUnity.HEU_LoadData loadData)
    // Offset: 0x170C558
    void GenerateObjects(::HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadData* loadData);
    // public System.Void GenerateGeometry(HoudiniEngineUnity.HEU_ThreadedTaskLoadGeo/HoudiniEngineUnity.HEU_LoadData loadData, System.Int32 objIndex)
    // Offset: 0x170C5EC
    void GenerateGeometry(::HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadData* loadData, int objIndex);
    // public System.Void OnStopped(HoudiniEngineUnity.HEU_ThreadedTaskLoadGeo/HoudiniEngineUnity.HEU_LoadData loadData)
    // Offset: 0x170E3E8
    void OnStopped(::HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadData* loadData);
    // private System.Void GenerateTerrain(System.Int32 cookNodeId, System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_LoadBufferVolume> terrainBuffers)
    // Offset: 0x170CD98
    void GenerateTerrain(int cookNodeId, ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HEU_LoadBufferVolume*>* terrainBuffers);
    // private System.Void GenerateMesh(System.Int32 cookNodeId, System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_LoadBufferMesh> meshBuffers)
    // Offset: 0x170C6E0
    void GenerateMesh(int cookNodeId, ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HEU_LoadBufferMesh*>* meshBuffers);
    // private System.Void GenerateAllInstancers(System.Int32 cookNodeId, System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_LoadBufferInstancer> instancerBuffers, HoudiniEngineUnity.HEU_ThreadedTaskLoadGeo/HoudiniEngineUnity.HEU_LoadData loadData)
    // Offset: 0x170E32C
    void GenerateAllInstancers(int cookNodeId, ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HEU_LoadBufferInstancer*>* instancerBuffers, ::HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadData* loadData);
    // private System.Void GenerateInstancer(System.Int32 cookNodeId, HoudiniEngineUnity.HEU_LoadBufferInstancer instancerBuffer, System.Collections.Generic.Dictionary`2<System.Int32,HoudiniEngineUnity.HEU_LoadBufferBase> idBuffersMap)
    // Offset: 0x170E744
    void GenerateInstancer(int cookNodeId, ::HoudiniEngineUnity::HEU_LoadBufferInstancer* instancerBuffer, ::System::Collections::Generic::Dictionary_2<int, ::HoudiniEngineUnity::HEU_LoadBufferBase*>* idBuffersMap);
    // private System.Void GenerateInstancesFromNodeIDs(System.Int32 cookNodeId, HoudiniEngineUnity.HEU_LoadBufferInstancer instancerBuffer, System.Collections.Generic.Dictionary`2<System.Int32,HoudiniEngineUnity.HEU_LoadBufferBase> idBuffersMap, UnityEngine.Transform instanceRootTransform)
    // Offset: 0x170E9A8
    void GenerateInstancesFromNodeIDs(int cookNodeId, ::HoudiniEngineUnity::HEU_LoadBufferInstancer* instancerBuffer, ::System::Collections::Generic::Dictionary_2<int, ::HoudiniEngineUnity::HEU_LoadBufferBase*>* idBuffersMap, ::UnityEngine::Transform* instanceRootTransform);
    // private System.Void GenerateInstancesFromAssetPaths(HoudiniEngineUnity.HEU_LoadBufferInstancer instancerBuffer, UnityEngine.Transform instanceRootTransform)
    // Offset: 0x170F000
    void GenerateInstancesFromAssetPaths(::HoudiniEngineUnity::HEU_LoadBufferInstancer* instancerBuffer, ::UnityEngine::Transform* instanceRootTransform);
    // private System.Void CreateNewInstanceFromObject(UnityEngine.GameObject assetSourceGO, System.Int32 instanceIndex, UnityEngine.Transform parentTransform, ref HoudiniEngineUnity.HAPI_Transform hapiTransform, System.String[] instancePrefixes, System.String instanceName, UnityEngine.GameObject collisionSourceGO)
    // Offset: 0x170F848
    void CreateNewInstanceFromObject(::UnityEngine::GameObject* assetSourceGO, int instanceIndex, ::UnityEngine::Transform* parentTransform, ByRef<::HoudiniEngineUnity::HAPI_Transform> hapiTransform, ::ArrayW<::StringW> instancePrefixes, ::StringW instanceName, ::UnityEngine::GameObject* collisionSourceGO);
    // private System.Void ApplyAttributeModifiersOnGameObjectOutput(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, System.Int32 partId, ref UnityEngine.GameObject go)
    // Offset: 0x170E540
    void ApplyAttributeModifiersOnGameObjectOutput(::HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partId, ByRef<::UnityEngine::GameObject*> go);
    // private System.Void DestroyOutputs()
    // Offset: 0x170BA00
    void DestroyOutputs();
    // private System.Void SetOutputVisiblity(HoudiniEngineUnity.HEU_LoadBufferBase buffer)
    // Offset: 0x170E5B4
    void SetOutputVisiblity(::HoudiniEngineUnity::HEU_LoadBufferBase* buffer);
    // private System.String GetOutputCacheDirectory()
    // Offset: 0x170E43C
    ::StringW GetOutputCacheDirectory();
    // public System.Void SetOutputCacheDirectory(System.String directory)
    // Offset: 0x170FA0C
    void SetOutputCacheDirectory(::StringW directory);
    // private System.Void AddGeneratedOutputFilePath(System.String path)
    // Offset: 0x170E498
    void AddGeneratedOutputFilePath(::StringW path);
    // public System.Void SyncUpdate()
    // Offset: 0x170FA14
    void SyncUpdate();
  }; // HoudiniEngineUnity.HEU_BaseSync
  #pragma pack(pop)
  static check_size<sizeof(HEU_BaseSync), 124 + sizeof(bool)> __HoudiniEngineUnity_HEU_BaseSyncSizeCheck;
  static_assert(sizeof(HEU_BaseSync) == 0x7D);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)()>(&HoudiniEngineUnity::HEU_BaseSync::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)()>(&HoudiniEngineUnity::HEU_BaseSync::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::DeleteSessionData
// Il2CppName: DeleteSessionData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)()>(&HoudiniEngineUnity::HEU_BaseSync::DeleteSessionData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "DeleteSessionData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::DestroyGeneratedData
// Il2CppName: DestroyGeneratedData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)()>(&HoudiniEngineUnity::HEU_BaseSync::DestroyGeneratedData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "DestroyGeneratedData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)()>(&HoudiniEngineUnity::HEU_BaseSync::Initialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::GetHoudiniSession
// Il2CppName: GetHoudiniSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::HoudiniEngineUnity::HEU_SessionBase* (HoudiniEngineUnity::HEU_BaseSync::*)(bool)>(&HoudiniEngineUnity::HEU_BaseSync::GetHoudiniSession)> {
  static const MethodInfo* get() {
    static auto* bCreateIfNotFound = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "GetHoudiniSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bCreateIfNotFound});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::GetParentNodeID
// Il2CppName: GetParentNodeID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HoudiniEngineUnity::HEU_BaseSync::*)(::HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_BaseSync::GetParentNodeID)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "GetParentNodeID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::Log
// Il2CppName: Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(::StringW)>(&HoudiniEngineUnity::HEU_BaseSync::Log)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::ClearLog
// Il2CppName: ClearLog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)()>(&HoudiniEngineUnity::HEU_BaseSync::ClearLog)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "ClearLog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::Error
// Il2CppName: Error
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(::StringW)>(&HoudiniEngineUnity::HEU_BaseSync::Error)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "Error", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::IsLoaded
// Il2CppName: IsLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_BaseSync::*)()>(&HoudiniEngineUnity::HEU_BaseSync::IsLoaded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "IsLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::StartSync
// Il2CppName: StartSync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)()>(&HoudiniEngineUnity::HEU_BaseSync::StartSync)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "StartSync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::SetupLoadTask
// Il2CppName: SetupLoadTask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(::HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_BaseSync::SetupLoadTask)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "SetupLoadTask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::StopSync
// Il2CppName: StopSync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)()>(&HoudiniEngineUnity::HEU_BaseSync::StopSync)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "StopSync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::Resync
// Il2CppName: Resync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)()>(&HoudiniEngineUnity::HEU_BaseSync::Resync)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "Resync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::Bake
// Il2CppName: Bake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)()>(&HoudiniEngineUnity::HEU_BaseSync::Bake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "Bake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::Unload
// Il2CppName: Unload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)()>(&HoudiniEngineUnity::HEU_BaseSync::Unload)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "Unload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)()>(&HoudiniEngineUnity::HEU_BaseSync::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::OnLoadComplete
// Il2CppName: OnLoadComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(::HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadData*)>(&HoudiniEngineUnity::HEU_BaseSync::OnLoadComplete)> {
  static const MethodInfo* get() {
    static auto* loadData = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_ThreadedTaskLoadGeo/HEU_LoadData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "OnLoadComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loadData});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::GenerateObjects
// Il2CppName: GenerateObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(::HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadData*)>(&HoudiniEngineUnity::HEU_BaseSync::GenerateObjects)> {
  static const MethodInfo* get() {
    static auto* loadData = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_ThreadedTaskLoadGeo/HEU_LoadData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "GenerateObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loadData});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::GenerateGeometry
// Il2CppName: GenerateGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(::HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadData*, int)>(&HoudiniEngineUnity::HEU_BaseSync::GenerateGeometry)> {
  static const MethodInfo* get() {
    static auto* loadData = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_ThreadedTaskLoadGeo/HEU_LoadData")->byval_arg;
    static auto* objIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "GenerateGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loadData, objIndex});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::OnStopped
// Il2CppName: OnStopped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(::HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadData*)>(&HoudiniEngineUnity::HEU_BaseSync::OnStopped)> {
  static const MethodInfo* get() {
    static auto* loadData = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_ThreadedTaskLoadGeo/HEU_LoadData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "OnStopped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loadData});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::GenerateTerrain
// Il2CppName: GenerateTerrain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(int, ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HEU_LoadBufferVolume*>*)>(&HoudiniEngineUnity::HEU_BaseSync::GenerateTerrain)> {
  static const MethodInfo* get() {
    static auto* cookNodeId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* terrainBuffers = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_LoadBufferVolume")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "GenerateTerrain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cookNodeId, terrainBuffers});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::GenerateMesh
// Il2CppName: GenerateMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(int, ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HEU_LoadBufferMesh*>*)>(&HoudiniEngineUnity::HEU_BaseSync::GenerateMesh)> {
  static const MethodInfo* get() {
    static auto* cookNodeId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* meshBuffers = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_LoadBufferMesh")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "GenerateMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cookNodeId, meshBuffers});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::GenerateAllInstancers
// Il2CppName: GenerateAllInstancers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(int, ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HEU_LoadBufferInstancer*>*, ::HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadData*)>(&HoudiniEngineUnity::HEU_BaseSync::GenerateAllInstancers)> {
  static const MethodInfo* get() {
    static auto* cookNodeId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* instancerBuffers = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_LoadBufferInstancer")})->byval_arg;
    static auto* loadData = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_ThreadedTaskLoadGeo/HEU_LoadData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "GenerateAllInstancers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cookNodeId, instancerBuffers, loadData});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::GenerateInstancer
// Il2CppName: GenerateInstancer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(int, ::HoudiniEngineUnity::HEU_LoadBufferInstancer*, ::System::Collections::Generic::Dictionary_2<int, ::HoudiniEngineUnity::HEU_LoadBufferBase*>*)>(&HoudiniEngineUnity::HEU_BaseSync::GenerateInstancer)> {
  static const MethodInfo* get() {
    static auto* cookNodeId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* instancerBuffer = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_LoadBufferInstancer")->byval_arg;
    static auto* idBuffersMap = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_LoadBufferBase")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "GenerateInstancer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cookNodeId, instancerBuffer, idBuffersMap});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::GenerateInstancesFromNodeIDs
// Il2CppName: GenerateInstancesFromNodeIDs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(int, ::HoudiniEngineUnity::HEU_LoadBufferInstancer*, ::System::Collections::Generic::Dictionary_2<int, ::HoudiniEngineUnity::HEU_LoadBufferBase*>*, ::UnityEngine::Transform*)>(&HoudiniEngineUnity::HEU_BaseSync::GenerateInstancesFromNodeIDs)> {
  static const MethodInfo* get() {
    static auto* cookNodeId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* instancerBuffer = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_LoadBufferInstancer")->byval_arg;
    static auto* idBuffersMap = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_LoadBufferBase")})->byval_arg;
    static auto* instanceRootTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "GenerateInstancesFromNodeIDs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cookNodeId, instancerBuffer, idBuffersMap, instanceRootTransform});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::GenerateInstancesFromAssetPaths
// Il2CppName: GenerateInstancesFromAssetPaths
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(::HoudiniEngineUnity::HEU_LoadBufferInstancer*, ::UnityEngine::Transform*)>(&HoudiniEngineUnity::HEU_BaseSync::GenerateInstancesFromAssetPaths)> {
  static const MethodInfo* get() {
    static auto* instancerBuffer = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_LoadBufferInstancer")->byval_arg;
    static auto* instanceRootTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "GenerateInstancesFromAssetPaths", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instancerBuffer, instanceRootTransform});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::CreateNewInstanceFromObject
// Il2CppName: CreateNewInstanceFromObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(::UnityEngine::GameObject*, int, ::UnityEngine::Transform*, ByRef<::HoudiniEngineUnity::HAPI_Transform>, ::ArrayW<::StringW>, ::StringW, ::UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_BaseSync::CreateNewInstanceFromObject)> {
  static const MethodInfo* get() {
    static auto* assetSourceGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* instanceIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* parentTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* hapiTransform = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_Transform")->this_arg;
    static auto* instancePrefixes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* instanceName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* collisionSourceGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "CreateNewInstanceFromObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetSourceGO, instanceIndex, parentTransform, hapiTransform, instancePrefixes, instanceName, collisionSourceGO});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::ApplyAttributeModifiersOnGameObjectOutput
// Il2CppName: ApplyAttributeModifiersOnGameObjectOutput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(::HoudiniEngineUnity::HEU_SessionBase*, int, int, ByRef<::UnityEngine::GameObject*>)>(&HoudiniEngineUnity::HEU_BaseSync::ApplyAttributeModifiersOnGameObjectOutput)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "ApplyAttributeModifiersOnGameObjectOutput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partId, go});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::DestroyOutputs
// Il2CppName: DestroyOutputs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)()>(&HoudiniEngineUnity::HEU_BaseSync::DestroyOutputs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "DestroyOutputs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::SetOutputVisiblity
// Il2CppName: SetOutputVisiblity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(::HoudiniEngineUnity::HEU_LoadBufferBase*)>(&HoudiniEngineUnity::HEU_BaseSync::SetOutputVisiblity)> {
  static const MethodInfo* get() {
    static auto* buffer = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_LoadBufferBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "SetOutputVisiblity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::GetOutputCacheDirectory
// Il2CppName: GetOutputCacheDirectory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (HoudiniEngineUnity::HEU_BaseSync::*)()>(&HoudiniEngineUnity::HEU_BaseSync::GetOutputCacheDirectory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "GetOutputCacheDirectory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::SetOutputCacheDirectory
// Il2CppName: SetOutputCacheDirectory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(::StringW)>(&HoudiniEngineUnity::HEU_BaseSync::SetOutputCacheDirectory)> {
  static const MethodInfo* get() {
    static auto* directory = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "SetOutputCacheDirectory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{directory});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::AddGeneratedOutputFilePath
// Il2CppName: AddGeneratedOutputFilePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)(::StringW)>(&HoudiniEngineUnity::HEU_BaseSync::AddGeneratedOutputFilePath)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "AddGeneratedOutputFilePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_BaseSync::SyncUpdate
// Il2CppName: SyncUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_BaseSync::*)()>(&HoudiniEngineUnity::HEU_BaseSync::SyncUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_BaseSync*), "SyncUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
