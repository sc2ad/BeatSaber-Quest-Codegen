// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Forward declaring type: HEU_InputData
  class HEU_InputData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::HoudiniEngineUnity::HEU_InputData);
DEFINE_IL2CPP_ARG_TYPE(::HoudiniEngineUnity::HEU_InputData*, "HoudiniEngineUnity", "HEU_InputData");
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: HoudiniEngineUnity.HEU_InputData
  // [TokenAttribute] Offset: FFFFFFFF
  class HEU_InputData : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.GameObject _inputObject
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::GameObject* inputObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Creating conversion operator: operator ::UnityEngine::GameObject*
    constexpr operator ::UnityEngine::GameObject*() const noexcept {
      return inputObject;
    }
    // Get instance field reference: public UnityEngine.GameObject _inputObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn__inputObject();
    // public System.Void .ctor()
    // Offset: 0x189C118
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HEU_InputData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_InputData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HEU_InputData*, creationType>()));
    }
  }; // HoudiniEngineUnity.HEU_InputData
  #pragma pack(pop)
  static check_size<sizeof(HEU_InputData), 16 + sizeof(::UnityEngine::GameObject*)> __HoudiniEngineUnity_HEU_InputDataSizeCheck;
  static_assert(sizeof(HEU_InputData) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_InputData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
