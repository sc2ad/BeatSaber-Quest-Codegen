// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: HoudiniEngineUnity.HAPI_ImageDataFormat
#include "HoudiniEngineUnity/HAPI_ImageDataFormat.hpp"
// Including type: HoudiniEngineUnity.HAPI_ImagePacking
#include "HoudiniEngineUnity/HAPI_ImagePacking.hpp"
// Completed includes
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Size: 0x20
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: HoudiniEngineUnity.HAPI_ImageInfo
  // [TokenAttribute] Offset: FFFFFFFF
  struct HAPI_ImageInfo/*, public System::ValueType*/ {
    public:
    // public System.Int32 imageFileFormatNameSH
    // Size: 0x4
    // Offset: 0x0
    int imageFileFormatNameSH;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 xRes
    // Size: 0x4
    // Offset: 0x4
    int xRes;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 yRes
    // Size: 0x4
    // Offset: 0x8
    int yRes;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public HoudiniEngineUnity.HAPI_ImageDataFormat dataFormat
    // Size: 0x4
    // Offset: 0xC
    HoudiniEngineUnity::HAPI_ImageDataFormat dataFormat;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HAPI_ImageDataFormat) == 0x4);
    // public System.Boolean interleaved
    // Size: 0x1
    // Offset: 0x10
    bool interleaved;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: interleaved and: packing
    char __padding4[0x3] = {};
    // public HoudiniEngineUnity.HAPI_ImagePacking packing
    // Size: 0x4
    // Offset: 0x14
    HoudiniEngineUnity::HAPI_ImagePacking packing;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HAPI_ImagePacking) == 0x4);
    // public System.Double gamma
    // Size: 0x8
    // Offset: 0x18
    double gamma;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // Creating value type constructor for type: HAPI_ImageInfo
    constexpr HAPI_ImageInfo(int imageFileFormatNameSH_ = {}, int xRes_ = {}, int yRes_ = {}, HoudiniEngineUnity::HAPI_ImageDataFormat dataFormat_ = {}, bool interleaved_ = {}, HoudiniEngineUnity::HAPI_ImagePacking packing_ = {}, double gamma_ = {}) noexcept : imageFileFormatNameSH{imageFileFormatNameSH_}, xRes{xRes_}, yRes{yRes_}, dataFormat{dataFormat_}, interleaved{interleaved_}, packing{packing_}, gamma{gamma_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // Get instance field reference: public System.Int32 imageFileFormatNameSH
    int& dyn_imageFileFormatNameSH();
    // Get instance field reference: public System.Int32 xRes
    int& dyn_xRes();
    // Get instance field reference: public System.Int32 yRes
    int& dyn_yRes();
    // Get instance field reference: public HoudiniEngineUnity.HAPI_ImageDataFormat dataFormat
    HoudiniEngineUnity::HAPI_ImageDataFormat& dyn_dataFormat();
    // Get instance field reference: public System.Boolean interleaved
    bool& dyn_interleaved();
    // Get instance field reference: public HoudiniEngineUnity.HAPI_ImagePacking packing
    HoudiniEngineUnity::HAPI_ImagePacking& dyn_packing();
    // Get instance field reference: public System.Double gamma
    double& dyn_gamma();
  }; // HoudiniEngineUnity.HAPI_ImageInfo
  #pragma pack(pop)
  static check_size<sizeof(HAPI_ImageInfo), 24 + sizeof(double)> __HoudiniEngineUnity_HAPI_ImageInfoSizeCheck;
  static_assert(sizeof(HAPI_ImageInfo) == 0x20);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HAPI_ImageInfo, "HoudiniEngineUnity", "HAPI_ImageInfo");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
