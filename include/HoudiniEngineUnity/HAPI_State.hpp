// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: HoudiniEngineUnity.HAPI_State
  // [TokenAttribute] Offset: FFFFFFFF
  struct HAPI_State/*, public System::Enum*/ {
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: HAPI_State
    constexpr HAPI_State(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator System::Enum
    operator System::Enum() noexcept {
      return *reinterpret_cast<System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_READY
    static constexpr const int HAPI_STATE_READY = 0;
    // Get static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_READY
    static HoudiniEngineUnity::HAPI_State _get_HAPI_STATE_READY();
    // Set static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_READY
    static void _set_HAPI_STATE_READY(HoudiniEngineUnity::HAPI_State value);
    // static field const value: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_READY_WITH_FATAL_ERRORS
    static constexpr const int HAPI_STATE_READY_WITH_FATAL_ERRORS = 1;
    // Get static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_READY_WITH_FATAL_ERRORS
    static HoudiniEngineUnity::HAPI_State _get_HAPI_STATE_READY_WITH_FATAL_ERRORS();
    // Set static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_READY_WITH_FATAL_ERRORS
    static void _set_HAPI_STATE_READY_WITH_FATAL_ERRORS(HoudiniEngineUnity::HAPI_State value);
    // static field const value: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_READY_WITH_COOK_ERRORS
    static constexpr const int HAPI_STATE_READY_WITH_COOK_ERRORS = 2;
    // Get static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_READY_WITH_COOK_ERRORS
    static HoudiniEngineUnity::HAPI_State _get_HAPI_STATE_READY_WITH_COOK_ERRORS();
    // Set static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_READY_WITH_COOK_ERRORS
    static void _set_HAPI_STATE_READY_WITH_COOK_ERRORS(HoudiniEngineUnity::HAPI_State value);
    // static field const value: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_STARTING_COOK
    static constexpr const int HAPI_STATE_STARTING_COOK = 3;
    // Get static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_STARTING_COOK
    static HoudiniEngineUnity::HAPI_State _get_HAPI_STATE_STARTING_COOK();
    // Set static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_STARTING_COOK
    static void _set_HAPI_STATE_STARTING_COOK(HoudiniEngineUnity::HAPI_State value);
    // static field const value: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_COOKING
    static constexpr const int HAPI_STATE_COOKING = 4;
    // Get static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_COOKING
    static HoudiniEngineUnity::HAPI_State _get_HAPI_STATE_COOKING();
    // Set static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_COOKING
    static void _set_HAPI_STATE_COOKING(HoudiniEngineUnity::HAPI_State value);
    // static field const value: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_STARTING_LOAD
    static constexpr const int HAPI_STATE_STARTING_LOAD = 5;
    // Get static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_STARTING_LOAD
    static HoudiniEngineUnity::HAPI_State _get_HAPI_STATE_STARTING_LOAD();
    // Set static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_STARTING_LOAD
    static void _set_HAPI_STATE_STARTING_LOAD(HoudiniEngineUnity::HAPI_State value);
    // static field const value: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_LOADING
    static constexpr const int HAPI_STATE_LOADING = 6;
    // Get static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_LOADING
    static HoudiniEngineUnity::HAPI_State _get_HAPI_STATE_LOADING();
    // Set static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_LOADING
    static void _set_HAPI_STATE_LOADING(HoudiniEngineUnity::HAPI_State value);
    // static field const value: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_MAX
    static constexpr const int HAPI_STATE_MAX = 7;
    // Get static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_MAX
    static HoudiniEngineUnity::HAPI_State _get_HAPI_STATE_MAX();
    // Set static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_MAX
    static void _set_HAPI_STATE_MAX(HoudiniEngineUnity::HAPI_State value);
    // static field const value: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_MAX_READY_STATE
    static constexpr const int HAPI_STATE_MAX_READY_STATE = 2;
    // Get static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_MAX_READY_STATE
    static HoudiniEngineUnity::HAPI_State _get_HAPI_STATE_MAX_READY_STATE();
    // Set static field: static public HoudiniEngineUnity.HAPI_State HAPI_STATE_MAX_READY_STATE
    static void _set_HAPI_STATE_MAX_READY_STATE(HoudiniEngineUnity::HAPI_State value);
    // Get instance field reference: public System.Int32 value__
    int& dyn_value__();
  }; // HoudiniEngineUnity.HAPI_State
  #pragma pack(pop)
  static check_size<sizeof(HAPI_State), 0 + sizeof(int)> __HoudiniEngineUnity_HAPI_StateSizeCheck;
  static_assert(sizeof(HAPI_State) == 0x4);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HAPI_State, "HoudiniEngineUnity", "HAPI_State");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
