// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: HoudiniEngineUnity.HEU_LoadBufferBase
#include "HoudiniEngineUnity/HEU_LoadBufferBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Forward declaring type: HEU_GenerateGeoCache
  class HEU_GenerateGeoCache;
  // Forward declaring type: HEU_GeoGroup
  class HEU_GeoGroup;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Forward declaring type: HEU_LoadBufferMesh
  class HEU_LoadBufferMesh;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::HoudiniEngineUnity::HEU_LoadBufferMesh);
DEFINE_IL2CPP_ARG_TYPE(::HoudiniEngineUnity::HEU_LoadBufferMesh*, "HoudiniEngineUnity", "HEU_LoadBufferMesh");
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: HoudiniEngineUnity.HEU_LoadBufferMesh
  // [TokenAttribute] Offset: FFFFFFFF
  class HEU_LoadBufferMesh : public ::HoudiniEngineUnity::HEU_LoadBufferBase {
    public:
    public:
    // public HoudiniEngineUnity.HEU_GenerateGeoCache _geoCache
    // Size: 0x8
    // Offset: 0x30
    ::HoudiniEngineUnity::HEU_GenerateGeoCache* geoCache;
    // Field size check
    static_assert(sizeof(::HoudiniEngineUnity::HEU_GenerateGeoCache*) == 0x8);
    // public System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_GeoGroup> _LODGroupMeshes
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HEU_GeoGroup*>* LODGroupMeshes;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::HoudiniEngineUnity::HEU_GeoGroup*>*) == 0x8);
    // public System.Int32 _defaultMaterialKey
    // Size: 0x4
    // Offset: 0x40
    int defaultMaterialKey;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean _bGenerateUVs
    // Size: 0x1
    // Offset: 0x44
    bool bGenerateUVs;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean _bGenerateTangents
    // Size: 0x1
    // Offset: 0x45
    bool bGenerateTangents;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean _bGenerateNormals
    // Size: 0x1
    // Offset: 0x46
    bool bGenerateNormals;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean _bPartInstanced
    // Size: 0x1
    // Offset: 0x47
    bool bPartInstanced;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public HoudiniEngineUnity.HEU_GenerateGeoCache _geoCache
    [[deprecated("Use field access instead!")]] ::HoudiniEngineUnity::HEU_GenerateGeoCache*& dyn__geoCache();
    // Get instance field reference: public System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_GeoGroup> _LODGroupMeshes
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::HoudiniEngineUnity::HEU_GeoGroup*>*& dyn__LODGroupMeshes();
    // Get instance field reference: public System.Int32 _defaultMaterialKey
    [[deprecated("Use field access instead!")]] int& dyn__defaultMaterialKey();
    // Get instance field reference: public System.Boolean _bGenerateUVs
    [[deprecated("Use field access instead!")]] bool& dyn__bGenerateUVs();
    // Get instance field reference: public System.Boolean _bGenerateTangents
    [[deprecated("Use field access instead!")]] bool& dyn__bGenerateTangents();
    // Get instance field reference: public System.Boolean _bGenerateNormals
    [[deprecated("Use field access instead!")]] bool& dyn__bGenerateNormals();
    // Get instance field reference: public System.Boolean _bPartInstanced
    [[deprecated("Use field access instead!")]] bool& dyn__bPartInstanced();
    // public System.Void .ctor()
    // Offset: 0x18A9BD0
    // Implemented from: HoudiniEngineUnity.HEU_LoadBufferBase
    // Base method: System.Void HEU_LoadBufferBase::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HEU_LoadBufferMesh* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_LoadBufferMesh::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HEU_LoadBufferMesh*, creationType>()));
    }
  }; // HoudiniEngineUnity.HEU_LoadBufferMesh
  #pragma pack(pop)
  static check_size<sizeof(HEU_LoadBufferMesh), 71 + sizeof(bool)> __HoudiniEngineUnity_HEU_LoadBufferMeshSizeCheck;
  static_assert(sizeof(HEU_LoadBufferMesh) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_LoadBufferMesh::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
