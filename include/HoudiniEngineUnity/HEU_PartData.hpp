// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: HoudiniEngineUnity.IEquivable`1
#include "HoudiniEngineUnity/IEquivable_1.hpp"
// Including type: HoudiniEngineUnity.HAPI_PartType
#include "HoudiniEngineUnity/HAPI_PartType.hpp"
// Including type: HoudiniEngineUnity.TransformData
#include "HoudiniEngineUnity/TransformData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Forward declaring type: HEU_Curve
  class HEU_Curve;
  // Forward declaring type: HEU_GeoNode
  class HEU_GeoNode;
  // Forward declaring type: HEU_ObjectInstanceInfo
  class HEU_ObjectInstanceInfo;
  // Forward declaring type: HEU_AttributesStore
  class HEU_AttributesStore;
  // Forward declaring type: HEU_GeneratedOutput
  class HEU_GeneratedOutput;
  // Forward declaring type: HEU_HoudiniAsset
  class HEU_HoudiniAsset;
  // Forward declaring type: HEU_SessionBase
  class HEU_SessionBase;
  // Forward declaring type: HAPI_PartInfo
  struct HAPI_PartInfo;
  // Skipping declaration: PartOutputType because it is already included!
  // Forward declaring type: HAPI_Transform
  struct HAPI_Transform;
  // Forward declaring type: HEU_MaterialData
  class HEU_MaterialData;
  // Forward declaring type: HEU_ObjectNode
  class HEU_ObjectNode;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: TerrainData
  class TerrainData;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Size: 0xA0
  #pragma pack(push, 1)
  // Autogenerated type: HoudiniEngineUnity.HEU_PartData
  // [TokenAttribute] Offset: FFFFFFFF
  class HEU_PartData : public UnityEngine::ScriptableObject/*, public HoudiniEngineUnity::IEquivable_1<HoudiniEngineUnity::HEU_PartData*>*/ {
    public:
    // Nested type: HoudiniEngineUnity::HEU_PartData::PartOutputType
    struct PartOutputType;
    // Nested type: HoudiniEngineUnity::HEU_PartData::$$c
    class $$c;
    // Nested type: HoudiniEngineUnity::HEU_PartData::$$c__DisplayClass86_0
    class $$c__DisplayClass86_0;
    // Nested type: HoudiniEngineUnity::HEU_PartData::$$c__DisplayClass88_0
    class $$c__DisplayClass88_0;
    // Nested type: HoudiniEngineUnity::HEU_PartData::$$c__DisplayClass88_1
    class $$c__DisplayClass88_1;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: HoudiniEngineUnity.HEU_PartData/PartOutputType
    // [TokenAttribute] Offset: FFFFFFFF
    struct PartOutputType/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: PartOutputType
      constexpr PartOutputType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public HoudiniEngineUnity.HEU_PartData/PartOutputType NONE
      static constexpr const int NONE = 0;
      // Get static field: static public HoudiniEngineUnity.HEU_PartData/PartOutputType NONE
      static HoudiniEngineUnity::HEU_PartData::PartOutputType _get_NONE();
      // Set static field: static public HoudiniEngineUnity.HEU_PartData/PartOutputType NONE
      static void _set_NONE(HoudiniEngineUnity::HEU_PartData::PartOutputType value);
      // static field const value: static public HoudiniEngineUnity.HEU_PartData/PartOutputType MESH
      static constexpr const int MESH = 1;
      // Get static field: static public HoudiniEngineUnity.HEU_PartData/PartOutputType MESH
      static HoudiniEngineUnity::HEU_PartData::PartOutputType _get_MESH();
      // Set static field: static public HoudiniEngineUnity.HEU_PartData/PartOutputType MESH
      static void _set_MESH(HoudiniEngineUnity::HEU_PartData::PartOutputType value);
      // static field const value: static public HoudiniEngineUnity.HEU_PartData/PartOutputType VOLUME
      static constexpr const int VOLUME = 2;
      // Get static field: static public HoudiniEngineUnity.HEU_PartData/PartOutputType VOLUME
      static HoudiniEngineUnity::HEU_PartData::PartOutputType _get_VOLUME();
      // Set static field: static public HoudiniEngineUnity.HEU_PartData/PartOutputType VOLUME
      static void _set_VOLUME(HoudiniEngineUnity::HEU_PartData::PartOutputType value);
      // static field const value: static public HoudiniEngineUnity.HEU_PartData/PartOutputType CURVE
      static constexpr const int CURVE = 3;
      // Get static field: static public HoudiniEngineUnity.HEU_PartData/PartOutputType CURVE
      static HoudiniEngineUnity::HEU_PartData::PartOutputType _get_CURVE();
      // Set static field: static public HoudiniEngineUnity.HEU_PartData/PartOutputType CURVE
      static void _set_CURVE(HoudiniEngineUnity::HEU_PartData::PartOutputType value);
      // static field const value: static public HoudiniEngineUnity.HEU_PartData/PartOutputType INSTANCER
      static constexpr const int INSTANCER = 4;
      // Get static field: static public HoudiniEngineUnity.HEU_PartData/PartOutputType INSTANCER
      static HoudiniEngineUnity::HEU_PartData::PartOutputType _get_INSTANCER();
      // Set static field: static public HoudiniEngineUnity.HEU_PartData/PartOutputType INSTANCER
      static void _set_INSTANCER(HoudiniEngineUnity::HEU_PartData::PartOutputType value);
      // Get instance field reference: public System.Int32 value__
      int& dyn_value__();
    }; // HoudiniEngineUnity.HEU_PartData/PartOutputType
    #pragma pack(pop)
    static check_size<sizeof(HEU_PartData::PartOutputType), 0 + sizeof(int)> __HoudiniEngineUnity_HEU_PartData_PartOutputTypeSizeCheck;
    static_assert(sizeof(HEU_PartData::PartOutputType) == 0x4);
    // private System.Int32 _partID
    // Size: 0x4
    // Offset: 0x18
    int partID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: partID and: partName
    char __padding0[0x4] = {};
    // private System.String _partName
    // Size: 0x8
    // Offset: 0x20
    ::Il2CppString* partName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Int32 _objectNodeID
    // Size: 0x4
    // Offset: 0x28
    int objectNodeID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 _geoID
    // Size: 0x4
    // Offset: 0x2C
    int geoID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private HoudiniEngineUnity.HAPI_PartType _partType
    // Size: 0x4
    // Offset: 0x30
    HoudiniEngineUnity::HAPI_PartType partType;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HAPI_PartType) == 0x4);
    // Padding between fields: partType and: geoNode
    char __padding4[0x4] = {};
    // private HoudiniEngineUnity.HEU_GeoNode _geoNode
    // Size: 0x8
    // Offset: 0x38
    HoudiniEngineUnity::HEU_GeoNode* geoNode;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_GeoNode*) == 0x8);
    // private System.Boolean _isAttribInstancer
    // Size: 0x1
    // Offset: 0x40
    bool isAttribInstancer;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _isPartInstanced
    // Size: 0x1
    // Offset: 0x41
    bool isPartInstanced;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isPartInstanced and: partPointCount
    char __padding7[0x2] = {};
    // private System.Int32 _partPointCount
    // Size: 0x4
    // Offset: 0x44
    int partPointCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean _isObjectInstancer
    // Size: 0x1
    // Offset: 0x48
    bool isObjectInstancer;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _objectInstancesGenerated
    // Size: 0x1
    // Offset: 0x49
    bool objectInstancesGenerated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: objectInstancesGenerated and: objectInstanceInfos
    char __padding10[0x6] = {};
    // private System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_ObjectInstanceInfo> _objectInstanceInfos
    // Size: 0x8
    // Offset: 0x50
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_ObjectInstanceInfo*>* objectInstanceInfos;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_ObjectInstanceInfo*>*) == 0x8);
    // private UnityEngine.Vector3 _terrainOffsetPosition
    // Size: 0xC
    // Offset: 0x58
    UnityEngine::Vector3 terrainOffsetPosition;
    // Field size check
    static_assert(sizeof(UnityEngine::Vector3) == 0xC);
    // Padding between fields: terrainOffsetPosition and: assetDBTerrainData
    char __padding12[0x4] = {};
    // private UnityEngine.Object _assetDBTerrainData
    // Size: 0x8
    // Offset: 0x68
    UnityEngine::Object* assetDBTerrainData;
    // Field size check
    static_assert(sizeof(UnityEngine::Object*) == 0x8);
    // private System.Boolean _isPartEditable
    // Size: 0x1
    // Offset: 0x70
    bool isPartEditable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isPartEditable and: partOutputType
    char __padding14[0x3] = {};
    // private HoudiniEngineUnity.HEU_PartData/PartOutputType _partOutputType
    // Size: 0x4
    // Offset: 0x74
    HoudiniEngineUnity::HEU_PartData::PartOutputType partOutputType;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_PartData::PartOutputType) == 0x4);
    // private HoudiniEngineUnity.HEU_Curve _curve
    // Size: 0x8
    // Offset: 0x78
    HoudiniEngineUnity::HEU_Curve* curve;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_Curve*) == 0x8);
    // private HoudiniEngineUnity.HEU_AttributesStore _attributesStore
    // Size: 0x8
    // Offset: 0x80
    HoudiniEngineUnity::HEU_AttributesStore* attributesStore;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_AttributesStore*) == 0x8);
    // private System.Boolean _haveInstancesBeenGenerated
    // Size: 0x1
    // Offset: 0x88
    bool haveInstancesBeenGenerated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: haveInstancesBeenGenerated and: meshVertexCount
    char __padding18[0x3] = {};
    // private System.Int32 _meshVertexCount
    // Size: 0x4
    // Offset: 0x8C
    int meshVertexCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private HoudiniEngineUnity.HEU_GeneratedOutput _generatedOutput
    // Size: 0x8
    // Offset: 0x90
    HoudiniEngineUnity::HEU_GeneratedOutput* generatedOutput;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_GeneratedOutput*) == 0x8);
    // private System.String _volumeLayerName
    // Size: 0x8
    // Offset: 0x98
    ::Il2CppString* volumeLayerName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // Creating value type constructor for type: HEU_PartData
    HEU_PartData(int partID_ = {}, ::Il2CppString* partName_ = {}, int objectNodeID_ = {}, int geoID_ = {}, HoudiniEngineUnity::HAPI_PartType partType_ = {}, HoudiniEngineUnity::HEU_GeoNode* geoNode_ = {}, bool isAttribInstancer_ = {}, bool isPartInstanced_ = {}, int partPointCount_ = {}, bool isObjectInstancer_ = {}, bool objectInstancesGenerated_ = {}, System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_ObjectInstanceInfo*>* objectInstanceInfos_ = {}, UnityEngine::Vector3 terrainOffsetPosition_ = {}, UnityEngine::Object* assetDBTerrainData_ = {}, bool isPartEditable_ = {}, HoudiniEngineUnity::HEU_PartData::PartOutputType partOutputType_ = {}, HoudiniEngineUnity::HEU_Curve* curve_ = {}, HoudiniEngineUnity::HEU_AttributesStore* attributesStore_ = {}, bool haveInstancesBeenGenerated_ = {}, int meshVertexCount_ = {}, HoudiniEngineUnity::HEU_GeneratedOutput* generatedOutput_ = {}, ::Il2CppString* volumeLayerName_ = {}) noexcept : partID{partID_}, partName{partName_}, objectNodeID{objectNodeID_}, geoID{geoID_}, partType{partType_}, geoNode{geoNode_}, isAttribInstancer{isAttribInstancer_}, isPartInstanced{isPartInstanced_}, partPointCount{partPointCount_}, isObjectInstancer{isObjectInstancer_}, objectInstancesGenerated{objectInstancesGenerated_}, objectInstanceInfos{objectInstanceInfos_}, terrainOffsetPosition{terrainOffsetPosition_}, assetDBTerrainData{assetDBTerrainData_}, isPartEditable{isPartEditable_}, partOutputType{partOutputType_}, curve{curve_}, attributesStore{attributesStore_}, haveInstancesBeenGenerated{haveInstancesBeenGenerated_}, meshVertexCount{meshVertexCount_}, generatedOutput{generatedOutput_}, volumeLayerName{volumeLayerName_} {}
    // Creating interface conversion operator: operator HoudiniEngineUnity::IEquivable_1<HoudiniEngineUnity::HEU_PartData*>
    operator HoudiniEngineUnity::IEquivable_1<HoudiniEngineUnity::HEU_PartData*>() noexcept {
      return *reinterpret_cast<HoudiniEngineUnity::IEquivable_1<HoudiniEngineUnity::HEU_PartData*>*>(this);
    }
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Int32 _partID
    int& dyn__partID();
    // Get instance field reference: private System.String _partName
    ::Il2CppString*& dyn__partName();
    // Get instance field reference: private System.Int32 _objectNodeID
    int& dyn__objectNodeID();
    // Get instance field reference: private System.Int32 _geoID
    int& dyn__geoID();
    // Get instance field reference: private HoudiniEngineUnity.HAPI_PartType _partType
    HoudiniEngineUnity::HAPI_PartType& dyn__partType();
    // Get instance field reference: private HoudiniEngineUnity.HEU_GeoNode _geoNode
    HoudiniEngineUnity::HEU_GeoNode*& dyn__geoNode();
    // Get instance field reference: private System.Boolean _isAttribInstancer
    bool& dyn__isAttribInstancer();
    // Get instance field reference: private System.Boolean _isPartInstanced
    bool& dyn__isPartInstanced();
    // Get instance field reference: private System.Int32 _partPointCount
    int& dyn__partPointCount();
    // Get instance field reference: private System.Boolean _isObjectInstancer
    bool& dyn__isObjectInstancer();
    // Get instance field reference: private System.Boolean _objectInstancesGenerated
    bool& dyn__objectInstancesGenerated();
    // Get instance field reference: private System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_ObjectInstanceInfo> _objectInstanceInfos
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_ObjectInstanceInfo*>*& dyn__objectInstanceInfos();
    // Get instance field reference: private UnityEngine.Vector3 _terrainOffsetPosition
    UnityEngine::Vector3& dyn__terrainOffsetPosition();
    // Get instance field reference: private UnityEngine.Object _assetDBTerrainData
    UnityEngine::Object*& dyn__assetDBTerrainData();
    // Get instance field reference: private System.Boolean _isPartEditable
    bool& dyn__isPartEditable();
    // Get instance field reference: private HoudiniEngineUnity.HEU_PartData/PartOutputType _partOutputType
    HoudiniEngineUnity::HEU_PartData::PartOutputType& dyn__partOutputType();
    // Get instance field reference: private HoudiniEngineUnity.HEU_Curve _curve
    HoudiniEngineUnity::HEU_Curve*& dyn__curve();
    // Get instance field reference: private HoudiniEngineUnity.HEU_AttributesStore _attributesStore
    HoudiniEngineUnity::HEU_AttributesStore*& dyn__attributesStore();
    // Get instance field reference: private System.Boolean _haveInstancesBeenGenerated
    bool& dyn__haveInstancesBeenGenerated();
    // Get instance field reference: private System.Int32 _meshVertexCount
    int& dyn__meshVertexCount();
    // Get instance field reference: private HoudiniEngineUnity.HEU_GeneratedOutput _generatedOutput
    HoudiniEngineUnity::HEU_GeneratedOutput*& dyn__generatedOutput();
    // Get instance field reference: private System.String _volumeLayerName
    ::Il2CppString*& dyn__volumeLayerName();
    // public System.Int32 get_PartID()
    // Offset: 0x17AB1CC
    int get_PartID();
    // public System.String get_PartName()
    // Offset: 0x17AB1D4
    ::Il2CppString* get_PartName();
    // public HoudiniEngineUnity.HEU_GeoNode get_ParentGeoNode()
    // Offset: 0x17AB1DC
    HoudiniEngineUnity::HEU_GeoNode* get_ParentGeoNode();
    // public HoudiniEngineUnity.HEU_HoudiniAsset get_ParentAsset()
    // Offset: 0x17AB1E4
    HoudiniEngineUnity::HEU_HoudiniAsset* get_ParentAsset();
    // public System.Boolean IsPartInstancer()
    // Offset: 0x17AB27C
    bool IsPartInstancer();
    // public System.Boolean IsAttribInstancer()
    // Offset: 0x17AB28C
    bool IsAttribInstancer();
    // public System.Boolean IsInstancerAnyType()
    // Offset: 0x17AB294
    bool IsInstancerAnyType();
    // public System.Boolean IsPartInstanced()
    // Offset: 0x17AB2C0
    bool IsPartInstanced();
    // public System.Int32 GetPartPointCount()
    // Offset: 0x17AB2C8
    int GetPartPointCount();
    // public System.Boolean IsObjectInstancer()
    // Offset: 0x17AB2D0
    bool IsObjectInstancer();
    // public System.Boolean get_ObjectInstancesBeenGenerated()
    // Offset: 0x17AB2D8
    bool get_ObjectInstancesBeenGenerated();
    // public System.Void set_ObjectInstancesBeenGenerated(System.Boolean value)
    // Offset: 0x17AB2E0
    void set_ObjectInstancesBeenGenerated(bool value);
    // public System.Boolean IsPartVolume()
    // Offset: 0x17AB2EC
    bool IsPartVolume();
    // public System.Boolean IsPartCurve()
    // Offset: 0x17AB2FC
    bool IsPartCurve();
    // public System.Boolean IsPartMesh()
    // Offset: 0x17AB30C
    bool IsPartMesh();
    // public System.Boolean IsPartEditable()
    // Offset: 0x17AB31C
    bool IsPartEditable();
    // public System.Boolean HaveInstancesBeenGenerated()
    // Offset: 0x17AB324
    bool HaveInstancesBeenGenerated();
    // public System.Int32 get_MeshVertexCount()
    // Offset: 0x17AB32C
    int get_MeshVertexCount();
    // public HoudiniEngineUnity.HEU_GeneratedOutput get_GeneratedOutput()
    // Offset: 0x17AB334
    HoudiniEngineUnity::HEU_GeneratedOutput* get_GeneratedOutput();
    // public UnityEngine.GameObject get_OutputGameObject()
    // Offset: 0x17AB33C
    UnityEngine::GameObject* get_OutputGameObject();
    // public System.Void Initialize(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 partID, System.Int32 geoID, System.Int32 objectNodeID, HoudiniEngineUnity.HEU_GeoNode geoNode, ref HoudiniEngineUnity.HAPI_PartInfo partInfo, HoudiniEngineUnity.HEU_PartData/PartOutputType partOutputType, System.Boolean isEditable, System.Boolean isObjectInstancer, System.Boolean isAttribInstancer)
    // Offset: 0x17AB3E4
    void Initialize(HoudiniEngineUnity::HEU_SessionBase* session, int partID, int geoID, int objectNodeID, HoudiniEngineUnity::HEU_GeoNode* geoNode, ByRef<HoudiniEngineUnity::HAPI_PartInfo> partInfo, HoudiniEngineUnity::HEU_PartData::PartOutputType partOutputType, bool isEditable, bool isObjectInstancer, bool isAttribInstancer);
    // public System.Void SetGameObjectName(System.String partName)
    // Offset: 0x17AB5C8
    void SetGameObjectName(::Il2CppString* partName);
    // public System.Void SetGameObject(UnityEngine.GameObject gameObject)
    // Offset: 0x17AB720
    void SetGameObject(UnityEngine::GameObject* gameObject);
    // public System.Void SetVolumeLayerName(System.String name)
    // Offset: 0x17AB748
    void SetVolumeLayerName(::Il2CppString* name);
    // public System.String GetVolumeLayerName()
    // Offset: 0x17AB750
    ::Il2CppString* GetVolumeLayerName();
    // public System.Void DestroyAllData()
    // Offset: 0x17AB758
    void DestroyAllData();
    // public System.Void ApplyHAPITransform(ref HoudiniEngineUnity.HAPI_Transform hapiTransform)
    // Offset: 0x17ABA70
    void ApplyHAPITransform(ByRef<HoudiniEngineUnity::HAPI_Transform> hapiTransform);
    // public System.Void GetDebugInfo(System.Text.StringBuilder sb)
    // Offset: 0x17ABC28
    void GetDebugInfo(System::Text::StringBuilder* sb);
    // public System.Boolean IsUsingMaterial(HoudiniEngineUnity.HEU_MaterialData materialData)
    // Offset: 0x17ABE48
    bool IsUsingMaterial(HoudiniEngineUnity::HEU_MaterialData* materialData);
    // public System.Void GetClonableObjects(System.Collections.Generic.List`1<UnityEngine.GameObject> clonableObjects)
    // Offset: 0x17ABE6C
    void GetClonableObjects(System::Collections::Generic::List_1<UnityEngine::GameObject*>* clonableObjects);
    // public System.Void GetClonableParts(System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_PartData> clonableParts)
    // Offset: 0x17ABF38
    void GetClonableParts(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_PartData*>* clonableParts);
    // public System.Void GetOutputGameObjects(System.Collections.Generic.List`1<UnityEngine.GameObject> outputObjects)
    // Offset: 0x17ABFFC
    void GetOutputGameObjects(System::Collections::Generic::List_1<UnityEngine::GameObject*>* outputObjects);
    // public System.Void GetOutput(System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_GeneratedOutput> outputs)
    // Offset: 0x17AC0C8
    void GetOutput(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_GeneratedOutput*>* outputs);
    // public HoudiniEngineUnity.HEU_PartData GetHDAPartWithGameObject(UnityEngine.GameObject inGameObject)
    // Offset: 0x17AC14C
    HoudiniEngineUnity::HEU_PartData* GetHDAPartWithGameObject(UnityEngine::GameObject* inGameObject);
    // private System.Void SetObjectInstancer(System.Boolean bObjectInstancer)
    // Offset: 0x17AC1E0
    void SetObjectInstancer(bool bObjectInstancer);
    // public System.Void ClearInstances()
    // Offset: 0x17AC1EC
    void ClearInstances();
    // private System.Void ClearObjectInstanceInfos()
    // Offset: 0x17AB8B8
    void ClearObjectInstanceInfos();
    // public System.Void ClearInvalidObjectInstanceInfos()
    // Offset: 0x17AC308
    void ClearInvalidObjectInstanceInfos();
    // public System.Void ClearGeneratedData()
    // Offset: 0x17AC504
    void ClearGeneratedData();
    // public System.Void ClearGeneratedMeshOutput()
    // Offset: 0x17AC528
    void ClearGeneratedMeshOutput();
    // public System.Void ClearGeneratedVolumeOutput()
    // Offset: 0x17AC5C0
    void ClearGeneratedVolumeOutput();
    // public System.Void GeneratePartInstances(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x17AC600
    void GeneratePartInstances(HoudiniEngineUnity::HEU_SessionBase* session);
    // public System.Void GenerateInstancesFromObjectID(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 objectNodeID, System.String[] instancePrefixes)
    // Offset: 0x17ACCDC
    void GenerateInstancesFromObjectID(HoudiniEngineUnity::HEU_SessionBase* session, int objectNodeID, ::Array<::Il2CppString*>* instancePrefixes);
    // public System.Void GenerateInstancesFromObject(HoudiniEngineUnity.HEU_SessionBase session, HoudiniEngineUnity.HEU_ObjectNode sourceObject, System.String[] instancePrefixes)
    // Offset: 0x17AD53C
    void GenerateInstancesFromObject(HoudiniEngineUnity::HEU_SessionBase* session, HoudiniEngineUnity::HEU_ObjectNode* sourceObject, ::Array<::Il2CppString*>* instancePrefixes);
    // public System.Void GenerateInstancesFromObjectIds(HoudiniEngineUnity.HEU_SessionBase session, System.String[] instancePrefixes)
    // Offset: 0x17AD808
    void GenerateInstancesFromObjectIds(HoudiniEngineUnity::HEU_SessionBase* session, ::Array<::Il2CppString*>* instancePrefixes);
    // public System.Void GenerateInstancesFromUnityAssetPathAttribute(HoudiniEngineUnity.HEU_SessionBase session, System.String unityInstanceAttr)
    // Offset: 0x17ADD88
    void GenerateInstancesFromUnityAssetPathAttribute(HoudiniEngineUnity::HEU_SessionBase* session, ::Il2CppString* unityInstanceAttr);
    // private System.Void CreateNewInstanceFromObject(UnityEngine.GameObject sourceObject, System.Int32 instanceIndex, UnityEngine.Transform parentTransform, ref HoudiniEngineUnity.HAPI_Transform hapiTransform, System.Int32 instancedObjectNodeID, System.String instancedObjectPath, UnityEngine.Vector3 rotationOffset, UnityEngine.Vector3 scaleOffset, System.String[] instancePrefixes, UnityEngine.GameObject collisionSrcGO, System.Boolean copyParentFlags)
    // Offset: 0x17AD18C
    void CreateNewInstanceFromObject(UnityEngine::GameObject* sourceObject, int instanceIndex, UnityEngine::Transform* parentTransform, ByRef<HoudiniEngineUnity::HAPI_Transform> hapiTransform, int instancedObjectNodeID, ::Il2CppString* instancedObjectPath, UnityEngine::Vector3 rotationOffset, UnityEngine::Vector3 scaleOffset, ::Array<::Il2CppString*>* instancePrefixes, UnityEngine::GameObject* collisionSrcGO, bool copyParentFlags);
    // public System.Void GenerateAttributesStore(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x17AEB74
    void GenerateAttributesStore(HoudiniEngineUnity::HEU_SessionBase* session);
    // public HoudiniEngineUnity.HEU_Curve GetCurve(System.Boolean bEditableOnly)
    // Offset: 0x17AEC38
    HoudiniEngineUnity::HEU_Curve* GetCurve(bool bEditableOnly);
    // public System.Void SetVisiblity(System.Boolean bVisibility)
    // Offset: 0x17AECE0
    void SetVisiblity(bool bVisibility);
    // public System.Void CalculateVisibility(System.Boolean bParentVisibility, System.Boolean bParentDisplayGeo)
    // Offset: 0x17AEE60
    void CalculateVisibility(bool bParentVisibility, bool bParentDisplayGeo);
    // public System.Void SetColliderState(System.Boolean bEnabled)
    // Offset: 0x17AEE88
    void SetColliderState(bool bEnabled);
    // public System.Void CalculateColliderState()
    // Offset: 0x17AEEB0
    void CalculateColliderState();
    // static private System.Void CopyGameObjectComponents(HoudiniEngineUnity.HEU_PartData partData, UnityEngine.GameObject sourceGO, UnityEngine.GameObject targetGO, System.String assetName, System.Collections.Generic.Dictionary`2<UnityEngine.Mesh,UnityEngine.Mesh> sourceToTargetMeshMap, System.Collections.Generic.Dictionary`2<UnityEngine.Material,UnityEngine.Material> sourceToCopiedMaterials, System.Boolean bWriteMeshesToAssetDatabase, ref System.String bakedAssetPath, ref UnityEngine.Object assetDBObject, System.String assetObjectFileName, System.Boolean bDeleteExistingComponents, System.Boolean bDontDeletePersistantResources, System.Collections.Generic.List`1<HoudiniEngineUnity.TransformData> lodTransformValues)
    // Offset: 0x17AF14C
    static void CopyGameObjectComponents(HoudiniEngineUnity::HEU_PartData* partData, UnityEngine::GameObject* sourceGO, UnityEngine::GameObject* targetGO, ::Il2CppString* assetName, System::Collections::Generic::Dictionary_2<UnityEngine::Mesh*, UnityEngine::Mesh*>* sourceToTargetMeshMap, System::Collections::Generic::Dictionary_2<UnityEngine::Material*, UnityEngine::Material*>* sourceToCopiedMaterials, bool bWriteMeshesToAssetDatabase, ByRef<::Il2CppString*> bakedAssetPath, ByRef<UnityEngine::Object*> assetDBObject, ::Il2CppString* assetObjectFileName, bool bDeleteExistingComponents, bool bDontDeletePersistantResources, System::Collections::Generic::List_1<HoudiniEngineUnity::TransformData>* lodTransformValues);
    // static private System.Void CopyChildGameObjects(HoudiniEngineUnity.HEU_PartData partData, UnityEngine.GameObject sourceGO, UnityEngine.GameObject targetGO, System.String assetName, System.Collections.Generic.Dictionary`2<UnityEngine.Mesh,UnityEngine.Mesh> sourceToTargetMeshMap, System.Collections.Generic.Dictionary`2<UnityEngine.Material,UnityEngine.Material> sourceToCopiedMaterials, System.Boolean bWriteMeshesToAssetDatabase, ref System.String bakedAssetPath, ref UnityEngine.Object assetDBObject, System.String assetObjectFileName, System.Boolean bDeleteExistingComponents, System.Boolean bDontDeletePersistantResources, System.Boolean bKeepPreviousTransformValues)
    // Offset: 0x17B0FC4
    static void CopyChildGameObjects(HoudiniEngineUnity::HEU_PartData* partData, UnityEngine::GameObject* sourceGO, UnityEngine::GameObject* targetGO, ::Il2CppString* assetName, System::Collections::Generic::Dictionary_2<UnityEngine::Mesh*, UnityEngine::Mesh*>* sourceToTargetMeshMap, System::Collections::Generic::Dictionary_2<UnityEngine::Material*, UnityEngine::Material*>* sourceToCopiedMaterials, bool bWriteMeshesToAssetDatabase, ByRef<::Il2CppString*> bakedAssetPath, ByRef<UnityEngine::Object*> assetDBObject, ::Il2CppString* assetObjectFileName, bool bDeleteExistingComponents, bool bDontDeletePersistantResources, bool bKeepPreviousTransformValues);
    // public UnityEngine.GameObject BakePartToNewGameObject(UnityEngine.Transform parentTransform, System.Boolean bWriteMeshesToAssetDatabase, ref System.String bakedAssetPath, System.Collections.Generic.Dictionary`2<UnityEngine.Mesh,UnityEngine.Mesh> sourceToTargetMeshMap, System.Collections.Generic.Dictionary`2<UnityEngine.Material,UnityEngine.Material> sourceToCopiedMaterials, ref UnityEngine.Object assetDBObject, System.String assetObjectFileName, System.Boolean bReconnectPrefabInstances)
    // Offset: 0x17B13D0
    UnityEngine::GameObject* BakePartToNewGameObject(UnityEngine::Transform* parentTransform, bool bWriteMeshesToAssetDatabase, ByRef<::Il2CppString*> bakedAssetPath, System::Collections::Generic::Dictionary_2<UnityEngine::Mesh*, UnityEngine::Mesh*>* sourceToTargetMeshMap, System::Collections::Generic::Dictionary_2<UnityEngine::Material*, UnityEngine::Material*>* sourceToCopiedMaterials, ByRef<UnityEngine::Object*> assetDBObject, ::Il2CppString* assetObjectFileName, bool bReconnectPrefabInstances);
    // static public System.Void BakePartToGameObject(HoudiniEngineUnity.HEU_PartData partData, UnityEngine.GameObject srcGO, UnityEngine.GameObject targetGO, System.String assetName, System.Boolean bIsInstancer, System.Boolean bDeleteExistingComponents, System.Boolean bDontDeletePersistantResources, System.Boolean bWriteMeshesToAssetDatabase, ref System.String bakedAssetPath, System.Collections.Generic.Dictionary`2<UnityEngine.Mesh,UnityEngine.Mesh> sourceToTargetMeshMap, System.Collections.Generic.Dictionary`2<UnityEngine.Material,UnityEngine.Material> sourceToCopiedMaterials, ref UnityEngine.Object assetDBObject, System.String assetObjectFileName, System.Boolean bReconnectPrefabInstances, System.Boolean bKeepPreviousTransformValues)
    // Offset: 0x17B165C
    static void BakePartToGameObject(HoudiniEngineUnity::HEU_PartData* partData, UnityEngine::GameObject* srcGO, UnityEngine::GameObject* targetGO, ::Il2CppString* assetName, bool bIsInstancer, bool bDeleteExistingComponents, bool bDontDeletePersistantResources, bool bWriteMeshesToAssetDatabase, ByRef<::Il2CppString*> bakedAssetPath, System::Collections::Generic::Dictionary_2<UnityEngine::Mesh*, UnityEngine::Mesh*>* sourceToTargetMeshMap, System::Collections::Generic::Dictionary_2<UnityEngine::Material*, UnityEngine::Material*>* sourceToCopiedMaterials, ByRef<UnityEngine::Object*> assetDBObject, ::Il2CppString* assetObjectFileName, bool bReconnectPrefabInstances, bool bKeepPreviousTransformValues);
    // public System.Void BakePartToGameObject(UnityEngine.GameObject targetGO, System.Boolean bDeleteExistingComponents, System.Boolean bDontDeletePersistantResources, System.Boolean bWriteMeshesToAssetDatabase, ref System.String bakedAssetPath, System.Collections.Generic.Dictionary`2<UnityEngine.Mesh,UnityEngine.Mesh> sourceToTargetMeshMap, System.Collections.Generic.Dictionary`2<UnityEngine.Material,UnityEngine.Material> sourceToCopiedMaterials, ref UnityEngine.Object assetDBObject, System.String assetObjectFileName, System.Boolean bReconnectPrefabInstances, System.Boolean bKeepPreviousTransformValues)
    // Offset: 0x17B1574
    void BakePartToGameObject(UnityEngine::GameObject* targetGO, bool bDeleteExistingComponents, bool bDontDeletePersistantResources, bool bWriteMeshesToAssetDatabase, ByRef<::Il2CppString*> bakedAssetPath, System::Collections::Generic::Dictionary_2<UnityEngine::Mesh*, UnityEngine::Mesh*>* sourceToTargetMeshMap, System::Collections::Generic::Dictionary_2<UnityEngine::Material*, UnityEngine::Material*>* sourceToCopiedMaterials, ByRef<UnityEngine::Object*> assetDBObject, ::Il2CppString* assetObjectFileName, bool bReconnectPrefabInstances, bool bKeepPreviousTransformValues);
    // public System.Boolean GenerateMesh(HoudiniEngineUnity.HEU_SessionBase session, System.Boolean bGenerateUVs, System.Boolean bGenerateTangents, System.Boolean bGenerateNormals, System.Boolean bUseLODGroups)
    // Offset: 0x17B1DF4
    bool GenerateMesh(HoudiniEngineUnity::HEU_SessionBase* session, bool bGenerateUVs, bool bGenerateTangents, bool bGenerateNormals, bool bUseLODGroups);
    // public System.Void ProcessCurvePart(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x17B21BC
    void ProcessCurvePart(HoudiniEngineUnity::HEU_SessionBase* session);
    // public System.Void SyncAttributesStore(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, ref HoudiniEngineUnity.HAPI_PartInfo partInfo)
    // Offset: 0x17B2340
    void SyncAttributesStore(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, ByRef<HoudiniEngineUnity::HAPI_PartInfo> partInfo);
    // public System.Void SetupAttributeGeometry(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x17B247C
    void SetupAttributeGeometry(HoudiniEngineUnity::HEU_SessionBase* session);
    // public System.Void DestroyAttributesStore()
    // Offset: 0x17AB970
    void DestroyAttributesStore();
    // public System.Void PopulateObjectInstanceInfos(System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_ObjectInstanceInfo> objInstanceInfos)
    // Offset: 0x17B2574
    void PopulateObjectInstanceInfos(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_ObjectInstanceInfo*>* objInstanceInfos);
    // public System.Void SetObjectInstanceInfos(System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_ObjectInstanceInfo> sourceObjectInstanceInfos)
    // Offset: 0x17B25DC
    void SetObjectInstanceInfos(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_ObjectInstanceInfo*>* sourceObjectInstanceInfos);
    // public System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_ObjectInstanceInfo> GetObjectInstanceInfos()
    // Offset: 0x17B2700
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_ObjectInstanceInfo*>* GetObjectInstanceInfos();
    // private HoudiniEngineUnity.HEU_ObjectInstanceInfo CreateObjectInstanceInfo(UnityEngine.GameObject instancedObject, System.Int32 instancedObjectNodeID, System.String instancedObjectPath)
    // Offset: 0x17AEA90
    HoudiniEngineUnity::HEU_ObjectInstanceInfo* CreateObjectInstanceInfo(UnityEngine::GameObject* instancedObject, int instancedObjectNodeID, ::Il2CppString* instancedObjectPath);
    // public HoudiniEngineUnity.HEU_ObjectInstanceInfo GetObjectInstanceInfoWithObjectPath(System.String path)
    // Offset: 0x17AE998
    HoudiniEngineUnity::HEU_ObjectInstanceInfo* GetObjectInstanceInfoWithObjectPath(::Il2CppString* path);
    // public HoudiniEngineUnity.HEU_ObjectInstanceInfo GetObjectInstanceInfoWithObjectID(System.Int32 objNodeID)
    // Offset: 0x17AD0A0
    HoudiniEngineUnity::HEU_ObjectInstanceInfo* GetObjectInstanceInfoWithObjectID(int objNodeID);
    // public System.Void SetTerrainOffsetPosition(UnityEngine.Vector3 offsetPosition)
    // Offset: 0x17B2708
    void SetTerrainOffsetPosition(UnityEngine::Vector3 offsetPosition);
    // public System.Void SetTerrainData(UnityEngine.TerrainData terrainData, System.String exportPathRelative, System.String exportPathUser)
    // Offset: 0x17B2714
    void SetTerrainData(UnityEngine::TerrainData* terrainData, ::Il2CppString* exportPathRelative, ::Il2CppString* exportPathUser);
    // static public System.String AppendBakedCloneName(System.String name)
    // Offset: 0x17B1520
    static ::Il2CppString* AppendBakedCloneName(::Il2CppString* name);
    // static public System.Void DestroyParts(System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_PartData> parts)
    // Offset: 0x17B2A5C
    static void DestroyParts(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_PartData*>* parts);
    // static public System.Void DestroyPart(HoudiniEngineUnity.HEU_PartData part)
    // Offset: 0x17B2B04
    static void DestroyPart(HoudiniEngineUnity::HEU_PartData* part);
    // public System.Boolean IsEquivalentTo(HoudiniEngineUnity.HEU_PartData other)
    // Offset: 0x17B2B3C
    bool IsEquivalentTo(HoudiniEngineUnity::HEU_PartData* other);
    // public System.Void .ctor()
    // Offset: 0x17AB364
    // Implemented from: UnityEngine.ScriptableObject
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HEU_PartData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_PartData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HEU_PartData*, creationType>()));
    }
    // public override System.String ToString()
    // Offset: 0x17B29E4
    // Implemented from: UnityEngine.Object
    // Base method: System.String Object::ToString()
    ::Il2CppString* ToString();
  }; // HoudiniEngineUnity.HEU_PartData
  #pragma pack(pop)
  static check_size<sizeof(HEU_PartData), 152 + sizeof(::Il2CppString*)> __HoudiniEngineUnity_HEU_PartDataSizeCheck;
  static_assert(sizeof(HEU_PartData) == 0xA0);
}
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HEU_PartData*, "HoudiniEngineUnity", "HEU_PartData");
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HEU_PartData::PartOutputType, "HoudiniEngineUnity", "HEU_PartData/PartOutputType");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::get_PartID
// Il2CppName: get_PartID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::get_PartID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "get_PartID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::get_PartName
// Il2CppName: get_PartName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::get_PartName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "get_PartName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::get_ParentGeoNode
// Il2CppName: get_ParentGeoNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_GeoNode* (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::get_ParentGeoNode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "get_ParentGeoNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::get_ParentAsset
// Il2CppName: get_ParentAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_HoudiniAsset* (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::get_ParentAsset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "get_ParentAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::IsPartInstancer
// Il2CppName: IsPartInstancer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::IsPartInstancer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "IsPartInstancer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::IsAttribInstancer
// Il2CppName: IsAttribInstancer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::IsAttribInstancer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "IsAttribInstancer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::IsInstancerAnyType
// Il2CppName: IsInstancerAnyType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::IsInstancerAnyType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "IsInstancerAnyType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::IsPartInstanced
// Il2CppName: IsPartInstanced
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::IsPartInstanced)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "IsPartInstanced", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GetPartPointCount
// Il2CppName: GetPartPointCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::GetPartPointCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GetPartPointCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::IsObjectInstancer
// Il2CppName: IsObjectInstancer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::IsObjectInstancer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "IsObjectInstancer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::get_ObjectInstancesBeenGenerated
// Il2CppName: get_ObjectInstancesBeenGenerated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::get_ObjectInstancesBeenGenerated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "get_ObjectInstancesBeenGenerated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::set_ObjectInstancesBeenGenerated
// Il2CppName: set_ObjectInstancesBeenGenerated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(bool)>(&HoudiniEngineUnity::HEU_PartData::set_ObjectInstancesBeenGenerated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "set_ObjectInstancesBeenGenerated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::IsPartVolume
// Il2CppName: IsPartVolume
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::IsPartVolume)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "IsPartVolume", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::IsPartCurve
// Il2CppName: IsPartCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::IsPartCurve)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "IsPartCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::IsPartMesh
// Il2CppName: IsPartMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::IsPartMesh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "IsPartMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::IsPartEditable
// Il2CppName: IsPartEditable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::IsPartEditable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "IsPartEditable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::HaveInstancesBeenGenerated
// Il2CppName: HaveInstancesBeenGenerated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::HaveInstancesBeenGenerated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "HaveInstancesBeenGenerated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::get_MeshVertexCount
// Il2CppName: get_MeshVertexCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::get_MeshVertexCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "get_MeshVertexCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::get_GeneratedOutput
// Il2CppName: get_GeneratedOutput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_GeneratedOutput* (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::get_GeneratedOutput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "get_GeneratedOutput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::get_OutputGameObject
// Il2CppName: get_OutputGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::get_OutputGameObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "get_OutputGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(HoudiniEngineUnity::HEU_SessionBase*, int, int, int, HoudiniEngineUnity::HEU_GeoNode*, ByRef<HoudiniEngineUnity::HAPI_PartInfo>, HoudiniEngineUnity::HEU_PartData::PartOutputType, bool, bool, bool)>(&HoudiniEngineUnity::HEU_PartData::Initialize)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* objectNodeID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* geoNode = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_GeoNode")->byval_arg;
    static auto* partInfo = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_PartInfo")->this_arg;
    static auto* partOutputType = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_PartData/PartOutputType")->byval_arg;
    static auto* isEditable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isObjectInstancer = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isAttribInstancer = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, partID, geoID, objectNodeID, geoNode, partInfo, partOutputType, isEditable, isObjectInstancer, isAttribInstancer});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::SetGameObjectName
// Il2CppName: SetGameObjectName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_PartData::SetGameObjectName)> {
  static const MethodInfo* get() {
    static auto* partName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "SetGameObjectName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partName});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::SetGameObject
// Il2CppName: SetGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_PartData::SetGameObject)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "SetGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::SetVolumeLayerName
// Il2CppName: SetVolumeLayerName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_PartData::SetVolumeLayerName)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "SetVolumeLayerName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GetVolumeLayerName
// Il2CppName: GetVolumeLayerName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::GetVolumeLayerName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GetVolumeLayerName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::DestroyAllData
// Il2CppName: DestroyAllData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::DestroyAllData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "DestroyAllData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::ApplyHAPITransform
// Il2CppName: ApplyHAPITransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(ByRef<HoudiniEngineUnity::HAPI_Transform>)>(&HoudiniEngineUnity::HEU_PartData::ApplyHAPITransform)> {
  static const MethodInfo* get() {
    static auto* hapiTransform = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_Transform")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "ApplyHAPITransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hapiTransform});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GetDebugInfo
// Il2CppName: GetDebugInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(System::Text::StringBuilder*)>(&HoudiniEngineUnity::HEU_PartData::GetDebugInfo)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GetDebugInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::IsUsingMaterial
// Il2CppName: IsUsingMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_PartData::*)(HoudiniEngineUnity::HEU_MaterialData*)>(&HoudiniEngineUnity::HEU_PartData::IsUsingMaterial)> {
  static const MethodInfo* get() {
    static auto* materialData = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_MaterialData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "IsUsingMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{materialData});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GetClonableObjects
// Il2CppName: GetClonableObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(System::Collections::Generic::List_1<UnityEngine::GameObject*>*)>(&HoudiniEngineUnity::HEU_PartData::GetClonableObjects)> {
  static const MethodInfo* get() {
    static auto* clonableObjects = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GetClonableObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clonableObjects});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GetClonableParts
// Il2CppName: GetClonableParts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_PartData*>*)>(&HoudiniEngineUnity::HEU_PartData::GetClonableParts)> {
  static const MethodInfo* get() {
    static auto* clonableParts = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_PartData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GetClonableParts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clonableParts});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GetOutputGameObjects
// Il2CppName: GetOutputGameObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(System::Collections::Generic::List_1<UnityEngine::GameObject*>*)>(&HoudiniEngineUnity::HEU_PartData::GetOutputGameObjects)> {
  static const MethodInfo* get() {
    static auto* outputObjects = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GetOutputGameObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outputObjects});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GetOutput
// Il2CppName: GetOutput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_GeneratedOutput*>*)>(&HoudiniEngineUnity::HEU_PartData::GetOutput)> {
  static const MethodInfo* get() {
    static auto* outputs = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_GeneratedOutput")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GetOutput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outputs});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GetHDAPartWithGameObject
// Il2CppName: GetHDAPartWithGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_PartData* (HoudiniEngineUnity::HEU_PartData::*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_PartData::GetHDAPartWithGameObject)> {
  static const MethodInfo* get() {
    static auto* inGameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GetHDAPartWithGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inGameObject});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::SetObjectInstancer
// Il2CppName: SetObjectInstancer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(bool)>(&HoudiniEngineUnity::HEU_PartData::SetObjectInstancer)> {
  static const MethodInfo* get() {
    static auto* bObjectInstancer = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "SetObjectInstancer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bObjectInstancer});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::ClearInstances
// Il2CppName: ClearInstances
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::ClearInstances)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "ClearInstances", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::ClearObjectInstanceInfos
// Il2CppName: ClearObjectInstanceInfos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::ClearObjectInstanceInfos)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "ClearObjectInstanceInfos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::ClearInvalidObjectInstanceInfos
// Il2CppName: ClearInvalidObjectInstanceInfos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::ClearInvalidObjectInstanceInfos)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "ClearInvalidObjectInstanceInfos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::ClearGeneratedData
// Il2CppName: ClearGeneratedData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::ClearGeneratedData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "ClearGeneratedData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::ClearGeneratedMeshOutput
// Il2CppName: ClearGeneratedMeshOutput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::ClearGeneratedMeshOutput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "ClearGeneratedMeshOutput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::ClearGeneratedVolumeOutput
// Il2CppName: ClearGeneratedVolumeOutput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::ClearGeneratedVolumeOutput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "ClearGeneratedVolumeOutput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GeneratePartInstances
// Il2CppName: GeneratePartInstances
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_PartData::GeneratePartInstances)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GeneratePartInstances", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GenerateInstancesFromObjectID
// Il2CppName: GenerateInstancesFromObjectID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(HoudiniEngineUnity::HEU_SessionBase*, int, ::Array<::Il2CppString*>*)>(&HoudiniEngineUnity::HEU_PartData::GenerateInstancesFromObjectID)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* objectNodeID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* instancePrefixes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GenerateInstancesFromObjectID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, objectNodeID, instancePrefixes});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GenerateInstancesFromObject
// Il2CppName: GenerateInstancesFromObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(HoudiniEngineUnity::HEU_SessionBase*, HoudiniEngineUnity::HEU_ObjectNode*, ::Array<::Il2CppString*>*)>(&HoudiniEngineUnity::HEU_PartData::GenerateInstancesFromObject)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* sourceObject = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_ObjectNode")->byval_arg;
    static auto* instancePrefixes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GenerateInstancesFromObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, sourceObject, instancePrefixes});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GenerateInstancesFromObjectIds
// Il2CppName: GenerateInstancesFromObjectIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(HoudiniEngineUnity::HEU_SessionBase*, ::Array<::Il2CppString*>*)>(&HoudiniEngineUnity::HEU_PartData::GenerateInstancesFromObjectIds)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* instancePrefixes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GenerateInstancesFromObjectIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, instancePrefixes});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GenerateInstancesFromUnityAssetPathAttribute
// Il2CppName: GenerateInstancesFromUnityAssetPathAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(HoudiniEngineUnity::HEU_SessionBase*, ::Il2CppString*)>(&HoudiniEngineUnity::HEU_PartData::GenerateInstancesFromUnityAssetPathAttribute)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* unityInstanceAttr = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GenerateInstancesFromUnityAssetPathAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, unityInstanceAttr});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::CreateNewInstanceFromObject
// Il2CppName: CreateNewInstanceFromObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(UnityEngine::GameObject*, int, UnityEngine::Transform*, ByRef<HoudiniEngineUnity::HAPI_Transform>, int, ::Il2CppString*, UnityEngine::Vector3, UnityEngine::Vector3, ::Array<::Il2CppString*>*, UnityEngine::GameObject*, bool)>(&HoudiniEngineUnity::HEU_PartData::CreateNewInstanceFromObject)> {
  static const MethodInfo* get() {
    static auto* sourceObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* instanceIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* parentTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* hapiTransform = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_Transform")->this_arg;
    static auto* instancedObjectNodeID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* instancedObjectPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* rotationOffset = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* scaleOffset = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* instancePrefixes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* collisionSrcGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* copyParentFlags = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "CreateNewInstanceFromObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sourceObject, instanceIndex, parentTransform, hapiTransform, instancedObjectNodeID, instancedObjectPath, rotationOffset, scaleOffset, instancePrefixes, collisionSrcGO, copyParentFlags});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GenerateAttributesStore
// Il2CppName: GenerateAttributesStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_PartData::GenerateAttributesStore)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GenerateAttributesStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GetCurve
// Il2CppName: GetCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_Curve* (HoudiniEngineUnity::HEU_PartData::*)(bool)>(&HoudiniEngineUnity::HEU_PartData::GetCurve)> {
  static const MethodInfo* get() {
    static auto* bEditableOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GetCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bEditableOnly});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::SetVisiblity
// Il2CppName: SetVisiblity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(bool)>(&HoudiniEngineUnity::HEU_PartData::SetVisiblity)> {
  static const MethodInfo* get() {
    static auto* bVisibility = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "SetVisiblity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bVisibility});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::CalculateVisibility
// Il2CppName: CalculateVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(bool, bool)>(&HoudiniEngineUnity::HEU_PartData::CalculateVisibility)> {
  static const MethodInfo* get() {
    static auto* bParentVisibility = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bParentDisplayGeo = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "CalculateVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bParentVisibility, bParentDisplayGeo});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::SetColliderState
// Il2CppName: SetColliderState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(bool)>(&HoudiniEngineUnity::HEU_PartData::SetColliderState)> {
  static const MethodInfo* get() {
    static auto* bEnabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "SetColliderState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bEnabled});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::CalculateColliderState
// Il2CppName: CalculateColliderState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::CalculateColliderState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "CalculateColliderState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::CopyGameObjectComponents
// Il2CppName: CopyGameObjectComponents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(HoudiniEngineUnity::HEU_PartData*, UnityEngine::GameObject*, UnityEngine::GameObject*, ::Il2CppString*, System::Collections::Generic::Dictionary_2<UnityEngine::Mesh*, UnityEngine::Mesh*>*, System::Collections::Generic::Dictionary_2<UnityEngine::Material*, UnityEngine::Material*>*, bool, ByRef<::Il2CppString*>, ByRef<UnityEngine::Object*>, ::Il2CppString*, bool, bool, System::Collections::Generic::List_1<HoudiniEngineUnity::TransformData>*)>(&HoudiniEngineUnity::HEU_PartData::CopyGameObjectComponents)> {
  static const MethodInfo* get() {
    static auto* partData = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_PartData")->byval_arg;
    static auto* sourceGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* targetGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* assetName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* sourceToTargetMeshMap = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")})->byval_arg;
    static auto* sourceToCopiedMaterials = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Material"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Material")})->byval_arg;
    static auto* bWriteMeshesToAssetDatabase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bakedAssetPath = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    static auto* assetDBObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->this_arg;
    static auto* assetObjectFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bDeleteExistingComponents = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bDontDeletePersistantResources = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* lodTransformValues = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "TransformData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "CopyGameObjectComponents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partData, sourceGO, targetGO, assetName, sourceToTargetMeshMap, sourceToCopiedMaterials, bWriteMeshesToAssetDatabase, bakedAssetPath, assetDBObject, assetObjectFileName, bDeleteExistingComponents, bDontDeletePersistantResources, lodTransformValues});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::CopyChildGameObjects
// Il2CppName: CopyChildGameObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(HoudiniEngineUnity::HEU_PartData*, UnityEngine::GameObject*, UnityEngine::GameObject*, ::Il2CppString*, System::Collections::Generic::Dictionary_2<UnityEngine::Mesh*, UnityEngine::Mesh*>*, System::Collections::Generic::Dictionary_2<UnityEngine::Material*, UnityEngine::Material*>*, bool, ByRef<::Il2CppString*>, ByRef<UnityEngine::Object*>, ::Il2CppString*, bool, bool, bool)>(&HoudiniEngineUnity::HEU_PartData::CopyChildGameObjects)> {
  static const MethodInfo* get() {
    static auto* partData = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_PartData")->byval_arg;
    static auto* sourceGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* targetGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* assetName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* sourceToTargetMeshMap = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")})->byval_arg;
    static auto* sourceToCopiedMaterials = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Material"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Material")})->byval_arg;
    static auto* bWriteMeshesToAssetDatabase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bakedAssetPath = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    static auto* assetDBObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->this_arg;
    static auto* assetObjectFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bDeleteExistingComponents = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bDontDeletePersistantResources = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bKeepPreviousTransformValues = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "CopyChildGameObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partData, sourceGO, targetGO, assetName, sourceToTargetMeshMap, sourceToCopiedMaterials, bWriteMeshesToAssetDatabase, bakedAssetPath, assetDBObject, assetObjectFileName, bDeleteExistingComponents, bDontDeletePersistantResources, bKeepPreviousTransformValues});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::BakePartToNewGameObject
// Il2CppName: BakePartToNewGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (HoudiniEngineUnity::HEU_PartData::*)(UnityEngine::Transform*, bool, ByRef<::Il2CppString*>, System::Collections::Generic::Dictionary_2<UnityEngine::Mesh*, UnityEngine::Mesh*>*, System::Collections::Generic::Dictionary_2<UnityEngine::Material*, UnityEngine::Material*>*, ByRef<UnityEngine::Object*>, ::Il2CppString*, bool)>(&HoudiniEngineUnity::HEU_PartData::BakePartToNewGameObject)> {
  static const MethodInfo* get() {
    static auto* parentTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* bWriteMeshesToAssetDatabase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bakedAssetPath = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    static auto* sourceToTargetMeshMap = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")})->byval_arg;
    static auto* sourceToCopiedMaterials = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Material"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Material")})->byval_arg;
    static auto* assetDBObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->this_arg;
    static auto* assetObjectFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bReconnectPrefabInstances = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "BakePartToNewGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parentTransform, bWriteMeshesToAssetDatabase, bakedAssetPath, sourceToTargetMeshMap, sourceToCopiedMaterials, assetDBObject, assetObjectFileName, bReconnectPrefabInstances});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::BakePartToGameObject
// Il2CppName: BakePartToGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(HoudiniEngineUnity::HEU_PartData*, UnityEngine::GameObject*, UnityEngine::GameObject*, ::Il2CppString*, bool, bool, bool, bool, ByRef<::Il2CppString*>, System::Collections::Generic::Dictionary_2<UnityEngine::Mesh*, UnityEngine::Mesh*>*, System::Collections::Generic::Dictionary_2<UnityEngine::Material*, UnityEngine::Material*>*, ByRef<UnityEngine::Object*>, ::Il2CppString*, bool, bool)>(&HoudiniEngineUnity::HEU_PartData::BakePartToGameObject)> {
  static const MethodInfo* get() {
    static auto* partData = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_PartData")->byval_arg;
    static auto* srcGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* targetGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* assetName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bIsInstancer = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bDeleteExistingComponents = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bDontDeletePersistantResources = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bWriteMeshesToAssetDatabase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bakedAssetPath = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    static auto* sourceToTargetMeshMap = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")})->byval_arg;
    static auto* sourceToCopiedMaterials = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Material"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Material")})->byval_arg;
    static auto* assetDBObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->this_arg;
    static auto* assetObjectFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bReconnectPrefabInstances = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bKeepPreviousTransformValues = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "BakePartToGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partData, srcGO, targetGO, assetName, bIsInstancer, bDeleteExistingComponents, bDontDeletePersistantResources, bWriteMeshesToAssetDatabase, bakedAssetPath, sourceToTargetMeshMap, sourceToCopiedMaterials, assetDBObject, assetObjectFileName, bReconnectPrefabInstances, bKeepPreviousTransformValues});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::BakePartToGameObject
// Il2CppName: BakePartToGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(UnityEngine::GameObject*, bool, bool, bool, ByRef<::Il2CppString*>, System::Collections::Generic::Dictionary_2<UnityEngine::Mesh*, UnityEngine::Mesh*>*, System::Collections::Generic::Dictionary_2<UnityEngine::Material*, UnityEngine::Material*>*, ByRef<UnityEngine::Object*>, ::Il2CppString*, bool, bool)>(&HoudiniEngineUnity::HEU_PartData::BakePartToGameObject)> {
  static const MethodInfo* get() {
    static auto* targetGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* bDeleteExistingComponents = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bDontDeletePersistantResources = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bWriteMeshesToAssetDatabase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bakedAssetPath = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    static auto* sourceToTargetMeshMap = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")})->byval_arg;
    static auto* sourceToCopiedMaterials = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Material"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Material")})->byval_arg;
    static auto* assetDBObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->this_arg;
    static auto* assetObjectFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bReconnectPrefabInstances = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bKeepPreviousTransformValues = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "BakePartToGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetGO, bDeleteExistingComponents, bDontDeletePersistantResources, bWriteMeshesToAssetDatabase, bakedAssetPath, sourceToTargetMeshMap, sourceToCopiedMaterials, assetDBObject, assetObjectFileName, bReconnectPrefabInstances, bKeepPreviousTransformValues});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GenerateMesh
// Il2CppName: GenerateMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_PartData::*)(HoudiniEngineUnity::HEU_SessionBase*, bool, bool, bool, bool)>(&HoudiniEngineUnity::HEU_PartData::GenerateMesh)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* bGenerateUVs = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bGenerateTangents = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bGenerateNormals = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bUseLODGroups = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GenerateMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, bGenerateUVs, bGenerateTangents, bGenerateNormals, bUseLODGroups});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::ProcessCurvePart
// Il2CppName: ProcessCurvePart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_PartData::ProcessCurvePart)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "ProcessCurvePart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::SyncAttributesStore
// Il2CppName: SyncAttributesStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(HoudiniEngineUnity::HEU_SessionBase*, int, ByRef<HoudiniEngineUnity::HAPI_PartInfo>)>(&HoudiniEngineUnity::HEU_PartData::SyncAttributesStore)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* partInfo = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_PartInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "SyncAttributesStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, partInfo});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::SetupAttributeGeometry
// Il2CppName: SetupAttributeGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_PartData::SetupAttributeGeometry)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "SetupAttributeGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::DestroyAttributesStore
// Il2CppName: DestroyAttributesStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::DestroyAttributesStore)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "DestroyAttributesStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::PopulateObjectInstanceInfos
// Il2CppName: PopulateObjectInstanceInfos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_ObjectInstanceInfo*>*)>(&HoudiniEngineUnity::HEU_PartData::PopulateObjectInstanceInfos)> {
  static const MethodInfo* get() {
    static auto* objInstanceInfos = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_ObjectInstanceInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "PopulateObjectInstanceInfos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objInstanceInfos});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::SetObjectInstanceInfos
// Il2CppName: SetObjectInstanceInfos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_ObjectInstanceInfo*>*)>(&HoudiniEngineUnity::HEU_PartData::SetObjectInstanceInfos)> {
  static const MethodInfo* get() {
    static auto* sourceObjectInstanceInfos = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_ObjectInstanceInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "SetObjectInstanceInfos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sourceObjectInstanceInfos});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GetObjectInstanceInfos
// Il2CppName: GetObjectInstanceInfos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_ObjectInstanceInfo*>* (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::GetObjectInstanceInfos)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GetObjectInstanceInfos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::CreateObjectInstanceInfo
// Il2CppName: CreateObjectInstanceInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_ObjectInstanceInfo* (HoudiniEngineUnity::HEU_PartData::*)(UnityEngine::GameObject*, int, ::Il2CppString*)>(&HoudiniEngineUnity::HEU_PartData::CreateObjectInstanceInfo)> {
  static const MethodInfo* get() {
    static auto* instancedObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* instancedObjectNodeID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* instancedObjectPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "CreateObjectInstanceInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instancedObject, instancedObjectNodeID, instancedObjectPath});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GetObjectInstanceInfoWithObjectPath
// Il2CppName: GetObjectInstanceInfoWithObjectPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_ObjectInstanceInfo* (HoudiniEngineUnity::HEU_PartData::*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_PartData::GetObjectInstanceInfoWithObjectPath)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GetObjectInstanceInfoWithObjectPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::GetObjectInstanceInfoWithObjectID
// Il2CppName: GetObjectInstanceInfoWithObjectID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_ObjectInstanceInfo* (HoudiniEngineUnity::HEU_PartData::*)(int)>(&HoudiniEngineUnity::HEU_PartData::GetObjectInstanceInfoWithObjectID)> {
  static const MethodInfo* get() {
    static auto* objNodeID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "GetObjectInstanceInfoWithObjectID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objNodeID});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::SetTerrainOffsetPosition
// Il2CppName: SetTerrainOffsetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(UnityEngine::Vector3)>(&HoudiniEngineUnity::HEU_PartData::SetTerrainOffsetPosition)> {
  static const MethodInfo* get() {
    static auto* offsetPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "SetTerrainOffsetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{offsetPosition});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::SetTerrainData
// Il2CppName: SetTerrainData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_PartData::*)(UnityEngine::TerrainData*, ::Il2CppString*, ::Il2CppString*)>(&HoudiniEngineUnity::HEU_PartData::SetTerrainData)> {
  static const MethodInfo* get() {
    static auto* terrainData = &::il2cpp_utils::GetClassFromName("UnityEngine", "TerrainData")->byval_arg;
    static auto* exportPathRelative = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* exportPathUser = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "SetTerrainData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{terrainData, exportPathRelative, exportPathUser});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::AppendBakedCloneName
// Il2CppName: AppendBakedCloneName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_PartData::AppendBakedCloneName)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "AppendBakedCloneName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::DestroyParts
// Il2CppName: DestroyParts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_PartData*>*)>(&HoudiniEngineUnity::HEU_PartData::DestroyParts)> {
  static const MethodInfo* get() {
    static auto* parts = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_PartData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "DestroyParts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parts});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::DestroyPart
// Il2CppName: DestroyPart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(HoudiniEngineUnity::HEU_PartData*)>(&HoudiniEngineUnity::HEU_PartData::DestroyPart)> {
  static const MethodInfo* get() {
    static auto* part = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_PartData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "DestroyPart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{part});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::IsEquivalentTo
// Il2CppName: IsEquivalentTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_PartData::*)(HoudiniEngineUnity::HEU_PartData*)>(&HoudiniEngineUnity::HEU_PartData::IsEquivalentTo)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_PartData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "IsEquivalentTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_PartData::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HoudiniEngineUnity::HEU_PartData::*)()>(&HoudiniEngineUnity::HEU_PartData::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_PartData*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
