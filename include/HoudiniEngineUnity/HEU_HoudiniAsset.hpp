// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: HoudiniEngineUnity.IEquivable`1
#include "HoudiniEngineUnity/IEquivable_1.hpp"
// Including type: HoudiniEngineUnity.HAPI_AssetInfo
#include "HoudiniEngineUnity/HAPI_AssetInfo.hpp"
// Including type: HoudiniEngineUnity.HAPI_NodeInfo
#include "HoudiniEngineUnity/HAPI_NodeInfo.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: HoudiniEngineUnity.HEU_Curve/CurveDrawCollision
#include "HoudiniEngineUnity/HEU_Curve_CurveDrawCollision.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: Material
  class Material;
}
// Forward declaring namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Forward declaring type: CookedEvent
  class CookedEvent;
  // Forward declaring type: ReloadEvent
  class ReloadEvent;
  // Forward declaring type: HEU_InstanceInputUIState
  class HEU_InstanceInputUIState;
  // Forward declaring type: HEU_ObjectNode
  class HEU_ObjectNode;
  // Forward declaring type: HEU_MaterialData
  class HEU_MaterialData;
  // Forward declaring type: HEU_Parameters
  class HEU_Parameters;
  // Forward declaring type: HEU_AssetPreset
  class HEU_AssetPreset;
  // Forward declaring type: HEU_RecookPreset
  class HEU_RecookPreset;
  // Forward declaring type: BakedEvent
  class BakedEvent;
  // Forward declaring type: HEU_ReloadDataEvent
  class HEU_ReloadDataEvent;
  // Forward declaring type: HEU_CookedDataEvent
  class HEU_CookedDataEvent;
  // Forward declaring type: HEU_BakedDataEvent
  class HEU_BakedDataEvent;
  // Forward declaring type: HEU_PreAssetEvent
  class HEU_PreAssetEvent;
  // Skipping declaration: HEU_Curve because it is already included!
  // Forward declaring type: HEU_InputNode
  class HEU_InputNode;
  // Forward declaring type: HEU_Handle
  class HEU_Handle;
  // Forward declaring type: HEU_VolumeCache
  class HEU_VolumeCache;
  // Forward declaring type: HEU_AttributesStore
  class HEU_AttributesStore;
  // Forward declaring type: HEU_ToolsInfo
  class HEU_ToolsInfo;
  // Forward declaring type: HEU_AssetSerializedMetaData
  class HEU_AssetSerializedMetaData;
  // Skipping declaration: HEU_AssetType because it is already included!
  // Forward declaring type: HEU_SessionBase
  class HEU_SessionBase;
  // Skipping declaration: AssetCookStatus because it is already included!
  // Skipping declaration: AssetCookResult because it is already included!
  // Forward declaring type: HAPI_ObjectInfo
  struct HAPI_ObjectInfo;
  // Forward declaring type: HAPI_Transform
  struct HAPI_Transform;
  // Forward declaring type: HEU_PartData
  class HEU_PartData;
  // Forward declaring type: HEU_GeneratedOutput
  class HEU_GeneratedOutput;
  // Forward declaring type: HEU_GeoNode
  class HEU_GeoNode;
  // Forward declaring type: HEU_ObjectInstanceInfo
  class HEU_ObjectInstanceInfo;
  // Forward declaring type: HEU_InputPreset
  class HEU_InputPreset;
  // Forward declaring type: HEU_VolumeCachePreset
  class HEU_VolumeCachePreset;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityAction`3<T0, T1, T2>
  template<typename T0, typename T1, typename T2>
  class UnityAction_3;
}
// Completed forward declares
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Size: 0x271
  #pragma pack(push, 1)
  // Autogenerated type: HoudiniEngineUnity.HEU_HoudiniAsset
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExecuteInEditMode] Offset: EFA780
  class HEU_HoudiniAsset : public UnityEngine::MonoBehaviour/*, public HoudiniEngineUnity::IEquivable_1<HoudiniEngineUnity::HEU_HoudiniAsset*>*/ {
    public:
    // Nested type: HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType
    struct HEU_AssetType;
    // Nested type: HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction
    struct AssetBuildAction;
    // Nested type: HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus
    struct AssetCookStatus;
    // Nested type: HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookResult
    struct AssetCookResult;
    // Nested type: HoudiniEngineUnity::HEU_HoudiniAsset::UpdateUIDelegate
    class UpdateUIDelegate;
    // Nested type: HoudiniEngineUnity::HEU_HoudiniAsset::AssetInstantiationMethod
    struct AssetInstantiationMethod;
    // Nested type: HoudiniEngineUnity::HEU_HoudiniAsset::$$c__DisplayClass281_0
    class $$c__DisplayClass281_0;
    // Nested type: HoudiniEngineUnity::HEU_HoudiniAsset::$$c
    class $$c;
    // Nested type: HoudiniEngineUnity::HEU_HoudiniAsset::$$c__DisplayClass365_0
    class $$c__DisplayClass365_0;
    // Nested type: HoudiniEngineUnity::HEU_HoudiniAsset::$$c__DisplayClass365_1
    class $$c__DisplayClass365_1;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType
    // [TokenAttribute] Offset: FFFFFFFF
    struct HEU_AssetType/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: HEU_AssetType
      constexpr HEU_AssetType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType TYPE_INVALID
      static constexpr const int TYPE_INVALID = 0;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType TYPE_INVALID
      static HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType _get_TYPE_INVALID();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType TYPE_INVALID
      static void _set_TYPE_INVALID(HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType TYPE_HDA
      static constexpr const int TYPE_HDA = 1;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType TYPE_HDA
      static HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType _get_TYPE_HDA();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType TYPE_HDA
      static void _set_TYPE_HDA(HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType TYPE_CURVE
      static constexpr const int TYPE_CURVE = 2;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType TYPE_CURVE
      static HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType _get_TYPE_CURVE();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType TYPE_CURVE
      static void _set_TYPE_CURVE(HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType TYPE_INPUT
      static constexpr const int TYPE_INPUT = 3;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType TYPE_INPUT
      static HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType _get_TYPE_INPUT();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType TYPE_INPUT
      static void _set_TYPE_INPUT(HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType value);
      // Get instance field reference: public System.Int32 value__
      int& dyn_value__();
    }; // HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType
    #pragma pack(pop)
    static check_size<sizeof(HEU_HoudiniAsset::HEU_AssetType), 0 + sizeof(int)> __HoudiniEngineUnity_HEU_HoudiniAsset_HEU_AssetTypeSizeCheck;
    static_assert(sizeof(HEU_HoudiniAsset::HEU_AssetType) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction
    // [TokenAttribute] Offset: FFFFFFFF
    struct AssetBuildAction/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: AssetBuildAction
      constexpr AssetBuildAction(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction NONE
      static constexpr const int NONE = 0;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction NONE
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction _get_NONE();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction NONE
      static void _set_NONE(HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction RELOAD
      static constexpr const int RELOAD = 1;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction RELOAD
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction _get_RELOAD();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction RELOAD
      static void _set_RELOAD(HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction COOK
      static constexpr const int COOK = 2;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction COOK
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction _get_COOK();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction COOK
      static void _set_COOK(HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction INVALID
      static constexpr const int INVALID = 3;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction INVALID
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction _get_INVALID();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction INVALID
      static void _set_INVALID(HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction STRIP_HEDATA
      static constexpr const int STRIP_HEDATA = 4;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction STRIP_HEDATA
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction _get_STRIP_HEDATA();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction STRIP_HEDATA
      static void _set_STRIP_HEDATA(HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction DUPLICATE
      static constexpr const int DUPLICATE = 5;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction DUPLICATE
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction _get_DUPLICATE();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction DUPLICATE
      static void _set_DUPLICATE(HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction RESET_PARAMS
      static constexpr const int RESET_PARAMS = 6;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction RESET_PARAMS
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction _get_RESET_PARAMS();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction RESET_PARAMS
      static void _set_RESET_PARAMS(HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction value);
      // Get instance field reference: public System.Int32 value__
      int& dyn_value__();
    }; // HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction
    #pragma pack(pop)
    static check_size<sizeof(HEU_HoudiniAsset::AssetBuildAction), 0 + sizeof(int)> __HoudiniEngineUnity_HEU_HoudiniAsset_AssetBuildActionSizeCheck;
    static_assert(sizeof(HEU_HoudiniAsset::AssetBuildAction) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus
    // [TokenAttribute] Offset: FFFFFFFF
    struct AssetCookStatus/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: AssetCookStatus
      constexpr AssetCookStatus(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus NONE
      static constexpr const int NONE = 0;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus NONE
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus _get_NONE();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus NONE
      static void _set_NONE(HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus COOKING
      static constexpr const int COOKING = 1;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus COOKING
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus _get_COOKING();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus COOKING
      static void _set_COOKING(HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus POSTCOOK
      static constexpr const int POSTCOOK = 2;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus POSTCOOK
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus _get_POSTCOOK();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus POSTCOOK
      static void _set_POSTCOOK(HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus LOADING
      static constexpr const int LOADING = 3;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus LOADING
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus _get_LOADING();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus LOADING
      static void _set_LOADING(HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus POSTLOAD
      static constexpr const int POSTLOAD = 4;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus POSTLOAD
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus _get_POSTLOAD();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus POSTLOAD
      static void _set_POSTLOAD(HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus PRELOAD
      static constexpr const int PRELOAD = 5;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus PRELOAD
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus _get_PRELOAD();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus PRELOAD
      static void _set_PRELOAD(HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus SELECT_SUBASSET
      static constexpr const int SELECT_SUBASSET = 6;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus SELECT_SUBASSET
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus _get_SELECT_SUBASSET();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus SELECT_SUBASSET
      static void _set_SELECT_SUBASSET(HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus value);
      // Get instance field reference: public System.Int32 value__
      int& dyn_value__();
    }; // HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus
    #pragma pack(pop)
    static check_size<sizeof(HEU_HoudiniAsset::AssetCookStatus), 0 + sizeof(int)> __HoudiniEngineUnity_HEU_HoudiniAsset_AssetCookStatusSizeCheck;
    static_assert(sizeof(HEU_HoudiniAsset::AssetCookStatus) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookResult
    // [TokenAttribute] Offset: FFFFFFFF
    struct AssetCookResult/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: AssetCookResult
      constexpr AssetCookResult(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookResult NONE
      static constexpr const int NONE = 0;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookResult NONE
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookResult _get_NONE();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookResult NONE
      static void _set_NONE(HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookResult value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookResult SUCCESS
      static constexpr const int SUCCESS = 1;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookResult SUCCESS
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookResult _get_SUCCESS();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookResult SUCCESS
      static void _set_SUCCESS(HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookResult value);
      // static field const value: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookResult ERRORED
      static constexpr const int ERRORED = 2;
      // Get static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookResult ERRORED
      static HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookResult _get_ERRORED();
      // Set static field: static public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookResult ERRORED
      static void _set_ERRORED(HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookResult value);
      // Get instance field reference: public System.Int32 value__
      int& dyn_value__();
    }; // HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookResult
    #pragma pack(pop)
    static check_size<sizeof(HEU_HoudiniAsset::AssetCookResult), 0 + sizeof(int)> __HoudiniEngineUnity_HEU_HoudiniAsset_AssetCookResultSizeCheck;
    static_assert(sizeof(HEU_HoudiniAsset::AssetCookResult) == 0x4);
    // private HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType _assetType
    // Size: 0x4
    // Offset: 0x18
    HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType assetType;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType) == 0x4);
    // private HoudiniEngineUnity.HAPI_AssetInfo _assetInfo
    // Size: 0x3E
    // Offset: 0x1C
    HoudiniEngineUnity::HAPI_AssetInfo assetInfo;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HAPI_AssetInfo) == 0x3E);
    // Padding between fields: assetInfo and: nodeInfo
    char __padding1[0x2] = {};
    // private HoudiniEngineUnity.HAPI_NodeInfo _nodeInfo
    // Size: 0x42
    // Offset: 0x5C
    HoudiniEngineUnity::HAPI_NodeInfo nodeInfo;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HAPI_NodeInfo) == 0x42);
    // Padding between fields: nodeInfo and: assetName
    char __padding2[0x2] = {};
    // private System.String _assetName
    // Size: 0x8
    // Offset: 0xA0
    ::Il2CppString* assetName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.String _assetOpName
    // Size: 0x8
    // Offset: 0xA8
    ::Il2CppString* assetOpName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.String _assetHelp
    // Size: 0x8
    // Offset: 0xB0
    ::Il2CppString* assetHelp;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Int32 _assetID
    // Size: 0x4
    // Offset: 0xB8
    int assetID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: assetID and: assetPath
    char __padding6[0x4] = {};
    // private System.String _assetPath
    // Size: 0x8
    // Offset: 0xC0
    ::Il2CppString* assetPath;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.Boolean _loadAssetFromMemory
    // Size: 0x1
    // Offset: 0xC8
    bool loadAssetFromMemory;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _alwaysOverwriteOnLoad
    // Size: 0x1
    // Offset: 0xC9
    bool alwaysOverwriteOnLoad;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: alwaysOverwriteOnLoad and: assetFileObject
    char __padding9[0x6] = {};
    // private UnityEngine.Object _assetFileObject
    // Size: 0x8
    // Offset: 0xD0
    UnityEngine::Object* assetFileObject;
    // Field size check
    static_assert(sizeof(UnityEngine::Object*) == 0x8);
    // private System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_ObjectNode> _objectNodes
    // Size: 0x8
    // Offset: 0xD8
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_ObjectNode*>* objectNodes;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_ObjectNode*>*) == 0x8);
    // private UnityEngine.GameObject _rootGameObject
    // Size: 0x8
    // Offset: 0xE0
    UnityEngine::GameObject* rootGameObject;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // private System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_MaterialData> _materialCache
    // Size: 0x8
    // Offset: 0xE8
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_MaterialData*>* materialCache;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_MaterialData*>*) == 0x8);
    // private HoudiniEngineUnity.HEU_Parameters _parameters
    // Size: 0x8
    // Offset: 0xF0
    HoudiniEngineUnity::HEU_Parameters* parameters;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_Parameters*) == 0x8);
    // private UnityEngine.Matrix4x4 _lastSyncedTransformMatrix
    // Size: 0x40
    // Offset: 0xF8
    UnityEngine::Matrix4x4 lastSyncedTransformMatrix;
    // Field size check
    static_assert(sizeof(UnityEngine::Matrix4x4) == 0x40);
    // private System.String _assetCacheFolderPath
    // Size: 0x8
    // Offset: 0x138
    ::Il2CppString* assetCacheFolderPath;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // private System.String[] _subassetNames
    // Size: 0x8
    // Offset: 0x140
    ::Array<::Il2CppString*>* subassetNames;
    // Field size check
    static_assert(sizeof(::Array<::Il2CppString*>*) == 0x8);
    // private System.Int32 _selectedSubassetIndex
    // Size: 0x4
    // Offset: 0x148
    int selectedSubassetIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: selectedSubassetIndex and: savedAssetPreset
    char __padding18[0x4] = {};
    // private HoudiniEngineUnity.HEU_AssetPreset _savedAssetPreset
    // Size: 0x8
    // Offset: 0x150
    HoudiniEngineUnity::HEU_AssetPreset* savedAssetPreset;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_AssetPreset*) == 0x8);
    // private HoudiniEngineUnity.HEU_RecookPreset _recookPreset
    // Size: 0x8
    // Offset: 0x158
    HoudiniEngineUnity::HEU_RecookPreset* recookPreset;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_RecookPreset*) == 0x8);
    // private System.Int32 _totalCookCount
    // Size: 0x4
    // Offset: 0x160
    int totalCookCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction _requestBuildAction
    // Size: 0x4
    // Offset: 0x164
    HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction requestBuildAction;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction) == 0x4);
    // private System.Boolean _checkParameterChangeForCook
    // Size: 0x1
    // Offset: 0x168
    bool checkParameterChangeForCook;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _skipCookCheck
    // Size: 0x1
    // Offset: 0x169
    bool skipCookCheck;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _uploadParameters
    // Size: 0x1
    // Offset: 0x16A
    bool uploadParameters;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _forceUploadInputs
    // Size: 0x1
    // Offset: 0x16B
    bool forceUploadInputs;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _upstreamCookChanged
    // Size: 0x1
    // Offset: 0x16C
    bool upstreamCookChanged;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: upstreamCookChanged and: cookStatus
    char __padding27[0x3] = {};
    // private HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus _cookStatus
    // Size: 0x4
    // Offset: 0x170
    HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus cookStatus;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus) == 0x4);
    // private HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookResult _lastCookResult
    // Size: 0x4
    // Offset: 0x174
    HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookResult lastCookResult;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookResult) == 0x4);
    // private System.Boolean _isCookingAssetReloaded
    // Size: 0x1
    // Offset: 0x178
    bool isCookingAssetReloaded;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _bForceUpdate
    // Size: 0x1
    // Offset: 0x179
    bool bForceUpdate;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: bForceUpdate and: sessionID
    char __padding31[0x6] = {};
    // private System.Int64 _sessionID
    // Size: 0x8
    // Offset: 0x180
    int64_t sessionID;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xEFB170
    // private System.Boolean <WarnedPrefabNotSupported>k__BackingField
    // Size: 0x1
    // Offset: 0x188
    bool WarnedPrefabNotSupported;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _uiLocked
    // Size: 0x1
    // Offset: 0x189
    bool uiLocked;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _showHDAOptions
    // Size: 0x1
    // Offset: 0x18A
    bool showHDAOptions;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _showGenerateSection
    // Size: 0x1
    // Offset: 0x18B
    bool showGenerateSection;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _showBakeSection
    // Size: 0x1
    // Offset: 0x18C
    bool showBakeSection;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _showEventsSection
    // Size: 0x1
    // Offset: 0x18D
    bool showEventsSection;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _showCurvesSection
    // Size: 0x1
    // Offset: 0x18E
    bool showCurvesSection;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _showInputNodesSection
    // Size: 0x1
    // Offset: 0x18F
    bool showInputNodesSection;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _showToolsSection
    // Size: 0x1
    // Offset: 0x190
    bool showToolsSection;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _showTerrainSection
    // Size: 0x1
    // Offset: 0x191
    bool showTerrainSection;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: showTerrainSection and: instanceInputUIState
    char __padding42[0x6] = {};
    // private HoudiniEngineUnity.HEU_InstanceInputUIState _instanceInputUIState
    // Size: 0x8
    // Offset: 0x198
    HoudiniEngineUnity::HEU_InstanceInputUIState* instanceInputUIState;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_InstanceInputUIState*) == 0x8);
    // public HoudiniEngineUnity.ReloadEvent _reloadEvent
    // Size: 0x8
    // Offset: 0x1A0
    HoudiniEngineUnity::ReloadEvent* reloadEvent;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::ReloadEvent*) == 0x8);
    // public HoudiniEngineUnity.CookedEvent _cookedEvent
    // Size: 0x8
    // Offset: 0x1A8
    HoudiniEngineUnity::CookedEvent* cookedEvent;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::CookedEvent*) == 0x8);
    // public HoudiniEngineUnity.BakedEvent _bakedEvent
    // Size: 0x8
    // Offset: 0x1B0
    HoudiniEngineUnity::BakedEvent* bakedEvent;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::BakedEvent*) == 0x8);
    // public HoudiniEngineUnity.HEU_ReloadDataEvent _reloadDataEvent
    // Size: 0x8
    // Offset: 0x1B8
    HoudiniEngineUnity::HEU_ReloadDataEvent* reloadDataEvent;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_ReloadDataEvent*) == 0x8);
    // public HoudiniEngineUnity.HEU_CookedDataEvent _cookedDataEvent
    // Size: 0x8
    // Offset: 0x1C0
    HoudiniEngineUnity::HEU_CookedDataEvent* cookedDataEvent;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_CookedDataEvent*) == 0x8);
    // public HoudiniEngineUnity.HEU_BakedDataEvent _bakedDataEvent
    // Size: 0x8
    // Offset: 0x1C8
    HoudiniEngineUnity::HEU_BakedDataEvent* bakedDataEvent;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_BakedDataEvent*) == 0x8);
    // public HoudiniEngineUnity.HEU_PreAssetEvent _preAssetEvent
    // Size: 0x8
    // Offset: 0x1D0
    HoudiniEngineUnity::HEU_PreAssetEvent* preAssetEvent;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_PreAssetEvent*) == 0x8);
    // public HoudiniEngineUnity.HEU_HoudiniAsset/UpdateUIDelegate _refreshUIDelegate
    // Size: 0x8
    // Offset: 0x1D8
    HoudiniEngineUnity::HEU_HoudiniAsset::UpdateUIDelegate* refreshUIDelegate;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_HoudiniAsset::UpdateUIDelegate*) == 0x8);
    // public HoudiniEngineUnity.CookedEvent _downstreamConnectionCookedEvent
    // Size: 0x8
    // Offset: 0x1E0
    HoudiniEngineUnity::CookedEvent* downstreamConnectionCookedEvent;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::CookedEvent*) == 0x8);
    // private System.Boolean _generateUVs
    // Size: 0x1
    // Offset: 0x1E8
    bool generateUVs;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _generateTangents
    // Size: 0x1
    // Offset: 0x1E9
    bool generateTangents;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _generateNormals
    // Size: 0x1
    // Offset: 0x1EA
    bool generateNormals;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _pushTransformToHoudini
    // Size: 0x1
    // Offset: 0x1EB
    bool pushTransformToHoudini;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _transformChangeTriggersCooks
    // Size: 0x1
    // Offset: 0x1EC
    bool transformChangeTriggersCooks;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _cookingTriggersDownCooks
    // Size: 0x1
    // Offset: 0x1ED
    bool cookingTriggersDownCooks;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _autoCookOnParameterChange
    // Size: 0x1
    // Offset: 0x1EE
    bool autoCookOnParameterChange;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _ignoreNonDisplayNodes
    // Size: 0x1
    // Offset: 0x1EF
    bool ignoreNonDisplayNodes;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _generateMeshUsingPoints
    // Size: 0x1
    // Offset: 0x1F0
    bool generateMeshUsingPoints;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _useLODGroups
    // Size: 0x1
    // Offset: 0x1F1
    bool useLODGroups;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _splitGeosByGroup
    // Size: 0x1
    // Offset: 0x1F2
    bool splitGeosByGroup;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _sessionSyncAutoCook
    // Size: 0x1
    // Offset: 0x1F3
    bool sessionSyncAutoCook;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _bakeUpdateKeepPreviousTransformValues
    // Size: 0x1
    // Offset: 0x1F4
    bool bakeUpdateKeepPreviousTransformValues;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _pauseCooking
    // Size: 0x1
    // Offset: 0x1F5
    bool pauseCooking;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _curveEditorEnabled
    // Size: 0x1
    // Offset: 0x1F6
    bool curveEditorEnabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: curveEditorEnabled and: curves
    char __padding67[0x1] = {};
    // private System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_Curve> _curves
    // Size: 0x8
    // Offset: 0x1F8
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_Curve*>* curves;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_Curve*>*) == 0x8);
    // private HoudiniEngineUnity.HEU_Curve/CurveDrawCollision _curveDrawCollision
    // Size: 0x4
    // Offset: 0x200
    HoudiniEngineUnity::HEU_Curve::CurveDrawCollision curveDrawCollision;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_Curve::CurveDrawCollision) == 0x4);
    // Padding between fields: curveDrawCollision and: curveDrawColliders
    char __padding69[0x4] = {};
    // private System.Collections.Generic.List`1<UnityEngine.Collider> _curveDrawColliders
    // Size: 0x8
    // Offset: 0x208
    System::Collections::Generic::List_1<UnityEngine::Collider*>* curveDrawColliders;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<UnityEngine::Collider*>*) == 0x8);
    // private UnityEngine.LayerMask _curveDrawLayerMask
    // Size: 0x4
    // Offset: 0x210
    UnityEngine::LayerMask curveDrawLayerMask;
    // Field size check
    static_assert(sizeof(UnityEngine::LayerMask) == 0x4);
    // private System.Single _curveProjectMaxDistance
    // Size: 0x4
    // Offset: 0x214
    float curveProjectMaxDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector3 _curveProjectDirection
    // Size: 0xC
    // Offset: 0x218
    UnityEngine::Vector3 curveProjectDirection;
    // Field size check
    static_assert(sizeof(UnityEngine::Vector3) == 0xC);
    // private System.Boolean _curveDisableScaleRotation
    // Size: 0x1
    // Offset: 0x224
    bool curveDisableScaleRotation;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _curveCookOnDrag
    // Size: 0x1
    // Offset: 0x225
    bool curveCookOnDrag;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _curveFrameSelectedNodes
    // Size: 0x1
    // Offset: 0x226
    bool curveFrameSelectedNodes;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: curveFrameSelectedNodes and: curveFrameSelectedNodeDistance
    char __padding76[0x1] = {};
    // private System.Single _curveFrameSelectedNodeDistance
    // Size: 0x4
    // Offset: 0x228
    float curveFrameSelectedNodeDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: curveFrameSelectedNodeDistance and: inputNodes
    char __padding77[0x4] = {};
    // private System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_InputNode> _inputNodes
    // Size: 0x8
    // Offset: 0x230
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_InputNode*>* inputNodes;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_InputNode*>*) == 0x8);
    // private System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_Handle> _handles
    // Size: 0x8
    // Offset: 0x238
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_Handle*>* handles;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_Handle*>*) == 0x8);
    // private System.Boolean _handlesEnabled
    // Size: 0x1
    // Offset: 0x240
    bool handlesEnabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: handlesEnabled and: volumeCaches
    char __padding80[0x7] = {};
    // private System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_VolumeCache> _volumeCaches
    // Size: 0x8
    // Offset: 0x248
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_VolumeCache*>* volumeCaches;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_VolumeCache*>*) == 0x8);
    // private System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_AttributesStore> _attributeStores
    // Size: 0x8
    // Offset: 0x250
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_AttributesStore*>* attributeStores;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_AttributesStore*>*) == 0x8);
    // private System.Boolean _editableNodesToolsEnabled
    // Size: 0x1
    // Offset: 0x258
    bool editableNodesToolsEnabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: editableNodesToolsEnabled and: toolsInfo
    char __padding83[0x7] = {};
    // private HoudiniEngineUnity.HEU_ToolsInfo _toolsInfo
    // Size: 0x8
    // Offset: 0x260
    HoudiniEngineUnity::HEU_ToolsInfo* toolsInfo;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_ToolsInfo*) == 0x8);
    // [HideInInspector] Offset: 0xEFB420
    // private HoudiniEngineUnity.HEU_AssetSerializedMetaData _serializedMetaData
    // Size: 0x8
    // Offset: 0x268
    HoudiniEngineUnity::HEU_AssetSerializedMetaData* serializedMetaData;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_AssetSerializedMetaData*) == 0x8);
    // private System.Boolean _pendingAutoCookOnMouseRelease
    // Size: 0x1
    // Offset: 0x270
    bool pendingAutoCookOnMouseRelease;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: HEU_HoudiniAsset
    HEU_HoudiniAsset(HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType assetType_ = {}, HoudiniEngineUnity::HAPI_AssetInfo assetInfo_ = {}, HoudiniEngineUnity::HAPI_NodeInfo nodeInfo_ = {}, ::Il2CppString* assetName_ = {}, ::Il2CppString* assetOpName_ = {}, ::Il2CppString* assetHelp_ = {}, int assetID_ = {}, ::Il2CppString* assetPath_ = {}, bool loadAssetFromMemory_ = {}, bool alwaysOverwriteOnLoad_ = {}, UnityEngine::Object* assetFileObject_ = {}, System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_ObjectNode*>* objectNodes_ = {}, UnityEngine::GameObject* rootGameObject_ = {}, System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_MaterialData*>* materialCache_ = {}, HoudiniEngineUnity::HEU_Parameters* parameters_ = {}, UnityEngine::Matrix4x4 lastSyncedTransformMatrix_ = {}, ::Il2CppString* assetCacheFolderPath_ = {}, ::Array<::Il2CppString*>* subassetNames_ = {}, int selectedSubassetIndex_ = {}, HoudiniEngineUnity::HEU_AssetPreset* savedAssetPreset_ = {}, HoudiniEngineUnity::HEU_RecookPreset* recookPreset_ = {}, int totalCookCount_ = {}, HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction requestBuildAction_ = {}, bool checkParameterChangeForCook_ = {}, bool skipCookCheck_ = {}, bool uploadParameters_ = {}, bool forceUploadInputs_ = {}, bool upstreamCookChanged_ = {}, HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus cookStatus_ = {}, HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookResult lastCookResult_ = {}, bool isCookingAssetReloaded_ = {}, bool bForceUpdate_ = {}, int64_t sessionID_ = {}, bool WarnedPrefabNotSupported_ = {}, bool uiLocked_ = {}, bool showHDAOptions_ = {}, bool showGenerateSection_ = {}, bool showBakeSection_ = {}, bool showEventsSection_ = {}, bool showCurvesSection_ = {}, bool showInputNodesSection_ = {}, bool showToolsSection_ = {}, bool showTerrainSection_ = {}, HoudiniEngineUnity::HEU_InstanceInputUIState* instanceInputUIState_ = {}, HoudiniEngineUnity::ReloadEvent* reloadEvent_ = {}, HoudiniEngineUnity::CookedEvent* cookedEvent_ = {}, HoudiniEngineUnity::BakedEvent* bakedEvent_ = {}, HoudiniEngineUnity::HEU_ReloadDataEvent* reloadDataEvent_ = {}, HoudiniEngineUnity::HEU_CookedDataEvent* cookedDataEvent_ = {}, HoudiniEngineUnity::HEU_BakedDataEvent* bakedDataEvent_ = {}, HoudiniEngineUnity::HEU_PreAssetEvent* preAssetEvent_ = {}, HoudiniEngineUnity::HEU_HoudiniAsset::UpdateUIDelegate* refreshUIDelegate_ = {}, HoudiniEngineUnity::CookedEvent* downstreamConnectionCookedEvent_ = {}, bool generateUVs_ = {}, bool generateTangents_ = {}, bool generateNormals_ = {}, bool pushTransformToHoudini_ = {}, bool transformChangeTriggersCooks_ = {}, bool cookingTriggersDownCooks_ = {}, bool autoCookOnParameterChange_ = {}, bool ignoreNonDisplayNodes_ = {}, bool generateMeshUsingPoints_ = {}, bool useLODGroups_ = {}, bool splitGeosByGroup_ = {}, bool sessionSyncAutoCook_ = {}, bool bakeUpdateKeepPreviousTransformValues_ = {}, bool pauseCooking_ = {}, bool curveEditorEnabled_ = {}, System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_Curve*>* curves_ = {}, HoudiniEngineUnity::HEU_Curve::CurveDrawCollision curveDrawCollision_ = {}, System::Collections::Generic::List_1<UnityEngine::Collider*>* curveDrawColliders_ = {}, UnityEngine::LayerMask curveDrawLayerMask_ = {}, float curveProjectMaxDistance_ = {}, UnityEngine::Vector3 curveProjectDirection_ = {}, bool curveDisableScaleRotation_ = {}, bool curveCookOnDrag_ = {}, bool curveFrameSelectedNodes_ = {}, float curveFrameSelectedNodeDistance_ = {}, System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_InputNode*>* inputNodes_ = {}, System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_Handle*>* handles_ = {}, bool handlesEnabled_ = {}, System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_VolumeCache*>* volumeCaches_ = {}, System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_AttributesStore*>* attributeStores_ = {}, bool editableNodesToolsEnabled_ = {}, HoudiniEngineUnity::HEU_ToolsInfo* toolsInfo_ = {}, HoudiniEngineUnity::HEU_AssetSerializedMetaData* serializedMetaData_ = {}, bool pendingAutoCookOnMouseRelease_ = {}) noexcept : assetType{assetType_}, assetInfo{assetInfo_}, nodeInfo{nodeInfo_}, assetName{assetName_}, assetOpName{assetOpName_}, assetHelp{assetHelp_}, assetID{assetID_}, assetPath{assetPath_}, loadAssetFromMemory{loadAssetFromMemory_}, alwaysOverwriteOnLoad{alwaysOverwriteOnLoad_}, assetFileObject{assetFileObject_}, objectNodes{objectNodes_}, rootGameObject{rootGameObject_}, materialCache{materialCache_}, parameters{parameters_}, lastSyncedTransformMatrix{lastSyncedTransformMatrix_}, assetCacheFolderPath{assetCacheFolderPath_}, subassetNames{subassetNames_}, selectedSubassetIndex{selectedSubassetIndex_}, savedAssetPreset{savedAssetPreset_}, recookPreset{recookPreset_}, totalCookCount{totalCookCount_}, requestBuildAction{requestBuildAction_}, checkParameterChangeForCook{checkParameterChangeForCook_}, skipCookCheck{skipCookCheck_}, uploadParameters{uploadParameters_}, forceUploadInputs{forceUploadInputs_}, upstreamCookChanged{upstreamCookChanged_}, cookStatus{cookStatus_}, lastCookResult{lastCookResult_}, isCookingAssetReloaded{isCookingAssetReloaded_}, bForceUpdate{bForceUpdate_}, sessionID{sessionID_}, WarnedPrefabNotSupported{WarnedPrefabNotSupported_}, uiLocked{uiLocked_}, showHDAOptions{showHDAOptions_}, showGenerateSection{showGenerateSection_}, showBakeSection{showBakeSection_}, showEventsSection{showEventsSection_}, showCurvesSection{showCurvesSection_}, showInputNodesSection{showInputNodesSection_}, showToolsSection{showToolsSection_}, showTerrainSection{showTerrainSection_}, instanceInputUIState{instanceInputUIState_}, reloadEvent{reloadEvent_}, cookedEvent{cookedEvent_}, bakedEvent{bakedEvent_}, reloadDataEvent{reloadDataEvent_}, cookedDataEvent{cookedDataEvent_}, bakedDataEvent{bakedDataEvent_}, preAssetEvent{preAssetEvent_}, refreshUIDelegate{refreshUIDelegate_}, downstreamConnectionCookedEvent{downstreamConnectionCookedEvent_}, generateUVs{generateUVs_}, generateTangents{generateTangents_}, generateNormals{generateNormals_}, pushTransformToHoudini{pushTransformToHoudini_}, transformChangeTriggersCooks{transformChangeTriggersCooks_}, cookingTriggersDownCooks{cookingTriggersDownCooks_}, autoCookOnParameterChange{autoCookOnParameterChange_}, ignoreNonDisplayNodes{ignoreNonDisplayNodes_}, generateMeshUsingPoints{generateMeshUsingPoints_}, useLODGroups{useLODGroups_}, splitGeosByGroup{splitGeosByGroup_}, sessionSyncAutoCook{sessionSyncAutoCook_}, bakeUpdateKeepPreviousTransformValues{bakeUpdateKeepPreviousTransformValues_}, pauseCooking{pauseCooking_}, curveEditorEnabled{curveEditorEnabled_}, curves{curves_}, curveDrawCollision{curveDrawCollision_}, curveDrawColliders{curveDrawColliders_}, curveDrawLayerMask{curveDrawLayerMask_}, curveProjectMaxDistance{curveProjectMaxDistance_}, curveProjectDirection{curveProjectDirection_}, curveDisableScaleRotation{curveDisableScaleRotation_}, curveCookOnDrag{curveCookOnDrag_}, curveFrameSelectedNodes{curveFrameSelectedNodes_}, curveFrameSelectedNodeDistance{curveFrameSelectedNodeDistance_}, inputNodes{inputNodes_}, handles{handles_}, handlesEnabled{handlesEnabled_}, volumeCaches{volumeCaches_}, attributeStores{attributeStores_}, editableNodesToolsEnabled{editableNodesToolsEnabled_}, toolsInfo{toolsInfo_}, serializedMetaData{serializedMetaData_}, pendingAutoCookOnMouseRelease{pendingAutoCookOnMouseRelease_} {}
    // Creating interface conversion operator: operator HoudiniEngineUnity::IEquivable_1<HoudiniEngineUnity::HEU_HoudiniAsset*>
    operator HoudiniEngineUnity::IEquivable_1<HoudiniEngineUnity::HEU_HoudiniAsset*>() noexcept {
      return *reinterpret_cast<HoudiniEngineUnity::IEquivable_1<HoudiniEngineUnity::HEU_HoudiniAsset*>*>(this);
    }
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // Get instance field reference: private HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType _assetType
    HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType& dyn__assetType();
    // Get instance field reference: private HoudiniEngineUnity.HAPI_AssetInfo _assetInfo
    HoudiniEngineUnity::HAPI_AssetInfo& dyn__assetInfo();
    // Get instance field reference: private HoudiniEngineUnity.HAPI_NodeInfo _nodeInfo
    HoudiniEngineUnity::HAPI_NodeInfo& dyn__nodeInfo();
    // Get instance field reference: private System.String _assetName
    ::Il2CppString*& dyn__assetName();
    // Get instance field reference: private System.String _assetOpName
    ::Il2CppString*& dyn__assetOpName();
    // Get instance field reference: private System.String _assetHelp
    ::Il2CppString*& dyn__assetHelp();
    // Get instance field reference: private System.Int32 _assetID
    int& dyn__assetID();
    // Get instance field reference: private System.String _assetPath
    ::Il2CppString*& dyn__assetPath();
    // Get instance field reference: private System.Boolean _loadAssetFromMemory
    bool& dyn__loadAssetFromMemory();
    // Get instance field reference: private System.Boolean _alwaysOverwriteOnLoad
    bool& dyn__alwaysOverwriteOnLoad();
    // Get instance field reference: private UnityEngine.Object _assetFileObject
    UnityEngine::Object*& dyn__assetFileObject();
    // Get instance field reference: private System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_ObjectNode> _objectNodes
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_ObjectNode*>*& dyn__objectNodes();
    // Get instance field reference: private UnityEngine.GameObject _rootGameObject
    UnityEngine::GameObject*& dyn__rootGameObject();
    // Get instance field reference: private System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_MaterialData> _materialCache
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_MaterialData*>*& dyn__materialCache();
    // Get instance field reference: private HoudiniEngineUnity.HEU_Parameters _parameters
    HoudiniEngineUnity::HEU_Parameters*& dyn__parameters();
    // Get instance field reference: private UnityEngine.Matrix4x4 _lastSyncedTransformMatrix
    UnityEngine::Matrix4x4& dyn__lastSyncedTransformMatrix();
    // Get instance field reference: private System.String _assetCacheFolderPath
    ::Il2CppString*& dyn__assetCacheFolderPath();
    // Get instance field reference: private System.String[] _subassetNames
    ::Array<::Il2CppString*>*& dyn__subassetNames();
    // Get instance field reference: private System.Int32 _selectedSubassetIndex
    int& dyn__selectedSubassetIndex();
    // Get instance field reference: private HoudiniEngineUnity.HEU_AssetPreset _savedAssetPreset
    HoudiniEngineUnity::HEU_AssetPreset*& dyn__savedAssetPreset();
    // Get instance field reference: private HoudiniEngineUnity.HEU_RecookPreset _recookPreset
    HoudiniEngineUnity::HEU_RecookPreset*& dyn__recookPreset();
    // Get instance field reference: private System.Int32 _totalCookCount
    int& dyn__totalCookCount();
    // Get instance field reference: private HoudiniEngineUnity.HEU_HoudiniAsset/AssetBuildAction _requestBuildAction
    HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction& dyn__requestBuildAction();
    // Get instance field reference: private System.Boolean _checkParameterChangeForCook
    bool& dyn__checkParameterChangeForCook();
    // Get instance field reference: private System.Boolean _skipCookCheck
    bool& dyn__skipCookCheck();
    // Get instance field reference: private System.Boolean _uploadParameters
    bool& dyn__uploadParameters();
    // Get instance field reference: private System.Boolean _forceUploadInputs
    bool& dyn__forceUploadInputs();
    // Get instance field reference: private System.Boolean _upstreamCookChanged
    bool& dyn__upstreamCookChanged();
    // Get instance field reference: private HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus _cookStatus
    HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus& dyn__cookStatus();
    // Get instance field reference: private HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookResult _lastCookResult
    HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookResult& dyn__lastCookResult();
    // Get instance field reference: private System.Boolean _isCookingAssetReloaded
    bool& dyn__isCookingAssetReloaded();
    // Get instance field reference: private System.Boolean _bForceUpdate
    bool& dyn__bForceUpdate();
    // Get instance field reference: private System.Int64 _sessionID
    int64_t& dyn__sessionID();
    // Get instance field reference: private System.Boolean <WarnedPrefabNotSupported>k__BackingField
    bool& dyn_$WarnedPrefabNotSupported$k__BackingField();
    // Get instance field reference: private System.Boolean _uiLocked
    bool& dyn__uiLocked();
    // Get instance field reference: private System.Boolean _showHDAOptions
    bool& dyn__showHDAOptions();
    // Get instance field reference: private System.Boolean _showGenerateSection
    bool& dyn__showGenerateSection();
    // Get instance field reference: private System.Boolean _showBakeSection
    bool& dyn__showBakeSection();
    // Get instance field reference: private System.Boolean _showEventsSection
    bool& dyn__showEventsSection();
    // Get instance field reference: private System.Boolean _showCurvesSection
    bool& dyn__showCurvesSection();
    // Get instance field reference: private System.Boolean _showInputNodesSection
    bool& dyn__showInputNodesSection();
    // Get instance field reference: private System.Boolean _showToolsSection
    bool& dyn__showToolsSection();
    // Get instance field reference: private System.Boolean _showTerrainSection
    bool& dyn__showTerrainSection();
    // Get instance field reference: private HoudiniEngineUnity.HEU_InstanceInputUIState _instanceInputUIState
    HoudiniEngineUnity::HEU_InstanceInputUIState*& dyn__instanceInputUIState();
    // Get instance field reference: public HoudiniEngineUnity.ReloadEvent _reloadEvent
    HoudiniEngineUnity::ReloadEvent*& dyn__reloadEvent();
    // Get instance field reference: public HoudiniEngineUnity.CookedEvent _cookedEvent
    HoudiniEngineUnity::CookedEvent*& dyn__cookedEvent();
    // Get instance field reference: public HoudiniEngineUnity.BakedEvent _bakedEvent
    HoudiniEngineUnity::BakedEvent*& dyn__bakedEvent();
    // Get instance field reference: public HoudiniEngineUnity.HEU_ReloadDataEvent _reloadDataEvent
    HoudiniEngineUnity::HEU_ReloadDataEvent*& dyn__reloadDataEvent();
    // Get instance field reference: public HoudiniEngineUnity.HEU_CookedDataEvent _cookedDataEvent
    HoudiniEngineUnity::HEU_CookedDataEvent*& dyn__cookedDataEvent();
    // Get instance field reference: public HoudiniEngineUnity.HEU_BakedDataEvent _bakedDataEvent
    HoudiniEngineUnity::HEU_BakedDataEvent*& dyn__bakedDataEvent();
    // Get instance field reference: public HoudiniEngineUnity.HEU_PreAssetEvent _preAssetEvent
    HoudiniEngineUnity::HEU_PreAssetEvent*& dyn__preAssetEvent();
    // Get instance field reference: public HoudiniEngineUnity.HEU_HoudiniAsset/UpdateUIDelegate _refreshUIDelegate
    HoudiniEngineUnity::HEU_HoudiniAsset::UpdateUIDelegate*& dyn__refreshUIDelegate();
    // Get instance field reference: public HoudiniEngineUnity.CookedEvent _downstreamConnectionCookedEvent
    HoudiniEngineUnity::CookedEvent*& dyn__downstreamConnectionCookedEvent();
    // Get instance field reference: private System.Boolean _generateUVs
    bool& dyn__generateUVs();
    // Get instance field reference: private System.Boolean _generateTangents
    bool& dyn__generateTangents();
    // Get instance field reference: private System.Boolean _generateNormals
    bool& dyn__generateNormals();
    // Get instance field reference: private System.Boolean _pushTransformToHoudini
    bool& dyn__pushTransformToHoudini();
    // Get instance field reference: private System.Boolean _transformChangeTriggersCooks
    bool& dyn__transformChangeTriggersCooks();
    // Get instance field reference: private System.Boolean _cookingTriggersDownCooks
    bool& dyn__cookingTriggersDownCooks();
    // Get instance field reference: private System.Boolean _autoCookOnParameterChange
    bool& dyn__autoCookOnParameterChange();
    // Get instance field reference: private System.Boolean _ignoreNonDisplayNodes
    bool& dyn__ignoreNonDisplayNodes();
    // Get instance field reference: private System.Boolean _generateMeshUsingPoints
    bool& dyn__generateMeshUsingPoints();
    // Get instance field reference: private System.Boolean _useLODGroups
    bool& dyn__useLODGroups();
    // Get instance field reference: private System.Boolean _splitGeosByGroup
    bool& dyn__splitGeosByGroup();
    // Get instance field reference: private System.Boolean _sessionSyncAutoCook
    bool& dyn__sessionSyncAutoCook();
    // Get instance field reference: private System.Boolean _bakeUpdateKeepPreviousTransformValues
    bool& dyn__bakeUpdateKeepPreviousTransformValues();
    // Get instance field reference: private System.Boolean _pauseCooking
    bool& dyn__pauseCooking();
    // Get instance field reference: private System.Boolean _curveEditorEnabled
    bool& dyn__curveEditorEnabled();
    // Get instance field reference: private System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_Curve> _curves
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_Curve*>*& dyn__curves();
    // Get instance field reference: private HoudiniEngineUnity.HEU_Curve/CurveDrawCollision _curveDrawCollision
    HoudiniEngineUnity::HEU_Curve::CurveDrawCollision& dyn__curveDrawCollision();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Collider> _curveDrawColliders
    System::Collections::Generic::List_1<UnityEngine::Collider*>*& dyn__curveDrawColliders();
    // Get instance field reference: private UnityEngine.LayerMask _curveDrawLayerMask
    UnityEngine::LayerMask& dyn__curveDrawLayerMask();
    // Get instance field reference: private System.Single _curveProjectMaxDistance
    float& dyn__curveProjectMaxDistance();
    // Get instance field reference: private UnityEngine.Vector3 _curveProjectDirection
    UnityEngine::Vector3& dyn__curveProjectDirection();
    // Get instance field reference: private System.Boolean _curveDisableScaleRotation
    bool& dyn__curveDisableScaleRotation();
    // Get instance field reference: private System.Boolean _curveCookOnDrag
    bool& dyn__curveCookOnDrag();
    // Get instance field reference: private System.Boolean _curveFrameSelectedNodes
    bool& dyn__curveFrameSelectedNodes();
    // Get instance field reference: private System.Single _curveFrameSelectedNodeDistance
    float& dyn__curveFrameSelectedNodeDistance();
    // Get instance field reference: private System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_InputNode> _inputNodes
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_InputNode*>*& dyn__inputNodes();
    // Get instance field reference: private System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_Handle> _handles
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_Handle*>*& dyn__handles();
    // Get instance field reference: private System.Boolean _handlesEnabled
    bool& dyn__handlesEnabled();
    // Get instance field reference: private System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_VolumeCache> _volumeCaches
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_VolumeCache*>*& dyn__volumeCaches();
    // Get instance field reference: private System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_AttributesStore> _attributeStores
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_AttributesStore*>*& dyn__attributeStores();
    // Get instance field reference: private System.Boolean _editableNodesToolsEnabled
    bool& dyn__editableNodesToolsEnabled();
    // Get instance field reference: private HoudiniEngineUnity.HEU_ToolsInfo _toolsInfo
    HoudiniEngineUnity::HEU_ToolsInfo*& dyn__toolsInfo();
    // Get instance field reference: private HoudiniEngineUnity.HEU_AssetSerializedMetaData _serializedMetaData
    HoudiniEngineUnity::HEU_AssetSerializedMetaData*& dyn__serializedMetaData();
    // Get instance field reference: private System.Boolean _pendingAutoCookOnMouseRelease
    bool& dyn__pendingAutoCookOnMouseRelease();
    // public HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType get_AssetType()
    // Offset: 0x15DCB4C
    HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType get_AssetType();
    // public HoudiniEngineUnity.HAPI_AssetInfo get_AssetInfo()
    // Offset: 0x15DCB54
    HoudiniEngineUnity::HAPI_AssetInfo get_AssetInfo();
    // public HoudiniEngineUnity.HAPI_NodeInfo get_NodeInfo()
    // Offset: 0x15DCB70
    HoudiniEngineUnity::HAPI_NodeInfo get_NodeInfo();
    // public System.String get_AssetName()
    // Offset: 0x15DCB80
    ::Il2CppString* get_AssetName();
    // public System.String get_AssetOpName()
    // Offset: 0x15DCB88
    ::Il2CppString* get_AssetOpName();
    // public System.String get_AssetHelp()
    // Offset: 0x15DCB90
    ::Il2CppString* get_AssetHelp();
    // public System.Int32 get_TransformInputCount()
    // Offset: 0x15DCB98
    int get_TransformInputCount();
    // public System.Int32 get_GeoInputCount()
    // Offset: 0x15DCBA0
    int get_GeoInputCount();
    // public System.Int32 get_AssetID()
    // Offset: 0x15DCBA8
    int get_AssetID();
    // public System.String get_AssetPath()
    // Offset: 0x15DCBB0
    ::Il2CppString* get_AssetPath();
    // public System.Boolean get_LoadAssetFromMemory()
    // Offset: 0x15DCBB8
    bool get_LoadAssetFromMemory();
    // public System.Void set_LoadAssetFromMemory(System.Boolean value)
    // Offset: 0x15DCBC0
    void set_LoadAssetFromMemory(bool value);
    // public System.Boolean get_AlwaysOverwriteOnLoad()
    // Offset: 0x15DCBCC
    bool get_AlwaysOverwriteOnLoad();
    // public System.Void set_AlwaysOverwriteOnLoad(System.Boolean value)
    // Offset: 0x15DCBD4
    void set_AlwaysOverwriteOnLoad(bool value);
    // public System.Int32 get_HandleCount()
    // Offset: 0x15DCBE0
    int get_HandleCount();
    // public UnityEngine.GameObject get_OwnerGameObject()
    // Offset: 0x15DCBE8
    UnityEngine::GameObject* get_OwnerGameObject();
    // public UnityEngine.GameObject get_RootGameObject()
    // Offset: 0x15DCBF0
    UnityEngine::GameObject* get_RootGameObject();
    // public HoudiniEngineUnity.HEU_Parameters get_Parameters()
    // Offset: 0x15DCBF8
    HoudiniEngineUnity::HEU_Parameters* get_Parameters();
    // public System.String[] get_SubassetNames()
    // Offset: 0x15DCC00
    ::Array<::Il2CppString*>* get_SubassetNames();
    // public System.Int64 get_SessionID()
    // Offset: 0x15DCC08
    int64_t get_SessionID();
    // public System.Boolean get_WarnedPrefabNotSupported()
    // Offset: 0x15DCC10
    bool get_WarnedPrefabNotSupported();
    // public System.Void set_WarnedPrefabNotSupported(System.Boolean value)
    // Offset: 0x15DCC18
    void set_WarnedPrefabNotSupported(bool value);
    // public HoudiniEngineUnity.HEU_InstanceInputUIState get_InstanceInputUIState()
    // Offset: 0x15DCC24
    HoudiniEngineUnity::HEU_InstanceInputUIState* get_InstanceInputUIState();
    // public System.Void set_InstanceInputUIState(HoudiniEngineUnity.HEU_InstanceInputUIState value)
    // Offset: 0x15DCC2C
    void set_InstanceInputUIState(HoudiniEngineUnity::HEU_InstanceInputUIState* value);
    // public System.Boolean get_GenerateUVs()
    // Offset: 0x15DCC34
    bool get_GenerateUVs();
    // public System.Void set_GenerateUVs(System.Boolean value)
    // Offset: 0x15DCC3C
    void set_GenerateUVs(bool value);
    // public System.Boolean get_GenerateTangents()
    // Offset: 0x15DCC48
    bool get_GenerateTangents();
    // public System.Void set_GenerateTangents(System.Boolean value)
    // Offset: 0x15DCC50
    void set_GenerateTangents(bool value);
    // public System.Boolean get_GenerateNormals()
    // Offset: 0x15DCC5C
    bool get_GenerateNormals();
    // public System.Void set_GenerateNormals(System.Boolean value)
    // Offset: 0x15DCC64
    void set_GenerateNormals(bool value);
    // public System.Boolean get_PushTransformToHoudini()
    // Offset: 0x15DCC70
    bool get_PushTransformToHoudini();
    // public System.Void set_PushTransformToHoudini(System.Boolean value)
    // Offset: 0x15DCC78
    void set_PushTransformToHoudini(bool value);
    // public System.Boolean get_TransformChangeTriggersCooks()
    // Offset: 0x15DCC84
    bool get_TransformChangeTriggersCooks();
    // public System.Void set_TransformChangeTriggersCooks(System.Boolean value)
    // Offset: 0x15DCC8C
    void set_TransformChangeTriggersCooks(bool value);
    // public System.Boolean get_CookingTriggersDownCooks()
    // Offset: 0x15DCC98
    bool get_CookingTriggersDownCooks();
    // public System.Void set_CookingTriggersDownCooks(System.Boolean value)
    // Offset: 0x15DCCA0
    void set_CookingTriggersDownCooks(bool value);
    // public System.Boolean get_AutoCookOnParameterChange()
    // Offset: 0x15DCCAC
    bool get_AutoCookOnParameterChange();
    // public System.Void set_AutoCookOnParameterChange(System.Boolean value)
    // Offset: 0x15DCCB4
    void set_AutoCookOnParameterChange(bool value);
    // public System.Boolean get_IgnoreNonDisplayNodes()
    // Offset: 0x15DCCC0
    bool get_IgnoreNonDisplayNodes();
    // public System.Void set_IgnoreNonDisplayNodes(System.Boolean value)
    // Offset: 0x15DCCC8
    void set_IgnoreNonDisplayNodes(bool value);
    // public System.Boolean get_GenerateMeshUsingPoints()
    // Offset: 0x15DCCD4
    bool get_GenerateMeshUsingPoints();
    // public System.Void set_GenerateMeshUsingPoints(System.Boolean value)
    // Offset: 0x15DCCDC
    void set_GenerateMeshUsingPoints(bool value);
    // public System.Boolean get_UseLODGroups()
    // Offset: 0x15DCCE8
    bool get_UseLODGroups();
    // public System.Void set_UseLODGroups(System.Boolean value)
    // Offset: 0x15DCCF0
    void set_UseLODGroups(bool value);
    // public System.Boolean get_SplitGeosByGroup()
    // Offset: 0x15DCCFC
    bool get_SplitGeosByGroup();
    // public System.Void set_SplitGeosByGroup(System.Boolean value)
    // Offset: 0x15DCD04
    void set_SplitGeosByGroup(bool value);
    // public System.Boolean get_SessionSyncAutoCook()
    // Offset: 0x15DCD10
    bool get_SessionSyncAutoCook();
    // public System.Void set_SessionSyncAutoCook(System.Boolean value)
    // Offset: 0x15DCD18
    void set_SessionSyncAutoCook(bool value);
    // public System.Boolean get_BakeUpdateKeepPreviousTransformValues()
    // Offset: 0x15DCD24
    bool get_BakeUpdateKeepPreviousTransformValues();
    // public System.Void set_BakeUpdateKeepPreviousTransformValues(System.Boolean value)
    // Offset: 0x15DCD2C
    void set_BakeUpdateKeepPreviousTransformValues(bool value);
    // public System.Boolean get_PauseCooking()
    // Offset: 0x15DCD38
    bool get_PauseCooking();
    // public System.Void set_PauseCooking(System.Boolean value)
    // Offset: 0x15DCD40
    void set_PauseCooking(bool value);
    // public System.Boolean get_CurveEditorEnabled()
    // Offset: 0x15DCD4C
    bool get_CurveEditorEnabled();
    // public System.Void set_CurveEditorEnabled(System.Boolean value)
    // Offset: 0x15DCD54
    void set_CurveEditorEnabled(bool value);
    // public HoudiniEngineUnity.HEU_Curve/CurveDrawCollision get_CurveDrawCollision()
    // Offset: 0x15DCD60
    HoudiniEngineUnity::HEU_Curve::CurveDrawCollision get_CurveDrawCollision();
    // public System.Void set_CurveDrawCollision(HoudiniEngineUnity.HEU_Curve/CurveDrawCollision value)
    // Offset: 0x15DCD68
    void set_CurveDrawCollision(HoudiniEngineUnity::HEU_Curve::CurveDrawCollision value);
    // public System.Collections.Generic.List`1<UnityEngine.Collider> GetCurveDrawColliders()
    // Offset: 0x15DCD70
    System::Collections::Generic::List_1<UnityEngine::Collider*>* GetCurveDrawColliders();
    // public UnityEngine.LayerMask GetCurveDrawLayerMask()
    // Offset: 0x15DCD78
    UnityEngine::LayerMask GetCurveDrawLayerMask();
    // public System.Void SetCurveDrawLayerMask(UnityEngine.LayerMask mask)
    // Offset: 0x15DCD80
    void SetCurveDrawLayerMask(UnityEngine::LayerMask mask);
    // public System.Boolean get_CurveDisableScaleRotation()
    // Offset: 0x15DCD88
    bool get_CurveDisableScaleRotation();
    // public System.Void set_CurveDisableScaleRotation(System.Boolean value)
    // Offset: 0x15DCD90
    void set_CurveDisableScaleRotation(bool value);
    // public System.Boolean get_CurveCookOnDrag()
    // Offset: 0x15DCD9C
    bool get_CurveCookOnDrag();
    // public System.Void set_CurveCookOnDrag(System.Boolean value)
    // Offset: 0x15DCDA4
    void set_CurveCookOnDrag(bool value);
    // public System.Boolean get_CurveFrameSelectedNodes()
    // Offset: 0x15DCDB0
    bool get_CurveFrameSelectedNodes();
    // public System.Void set_CurveFrameSelectedNodes(System.Boolean value)
    // Offset: 0x15DCDB8
    void set_CurveFrameSelectedNodes(bool value);
    // public System.Single get_CurveFrameSelectedNodeDistance()
    // Offset: 0x15DCDC4
    float get_CurveFrameSelectedNodeDistance();
    // public System.Void set_CurveFrameSelectedNodeDistance(System.Single value)
    // Offset: 0x15DCDCC
    void set_CurveFrameSelectedNodeDistance(float value);
    // public System.Boolean get_HandlesEnabled()
    // Offset: 0x15DCDD4
    bool get_HandlesEnabled();
    // public System.Void set_HandlesEnabled(System.Boolean value)
    // Offset: 0x15DCDDC
    void set_HandlesEnabled(bool value);
    // public System.Boolean get_EditableNodesToolsEnabled()
    // Offset: 0x15DCDE8
    bool get_EditableNodesToolsEnabled();
    // public System.Void set_EditableNodesToolsEnabled(System.Boolean value)
    // Offset: 0x15DCDF0
    void set_EditableNodesToolsEnabled(bool value);
    // public HoudiniEngineUnity.HEU_ToolsInfo get_ToolsInfo()
    // Offset: 0x15DCDFC
    HoudiniEngineUnity::HEU_ToolsInfo* get_ToolsInfo();
    // public HoudiniEngineUnity.HEU_AssetSerializedMetaData get_SerializedMetaData()
    // Offset: 0x15DCE04
    HoudiniEngineUnity::HEU_AssetSerializedMetaData* get_SerializedMetaData();
    // public System.Boolean get_PendingAutoCookOnMouseRelease()
    // Offset: 0x15DCE0C
    bool get_PendingAutoCookOnMouseRelease();
    // public System.Void set_PendingAutoCookOnMouseRelease(System.Boolean value)
    // Offset: 0x15DCE14
    void set_PendingAutoCookOnMouseRelease(bool value);
    // public System.Void SetupAsset(HoudiniEngineUnity.HEU_HoudiniAsset/HEU_AssetType assetType, System.String filePath, UnityEngine.GameObject rootGameObject, HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15D7958
    void SetupAsset(HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType assetType, ::Il2CppString* filePath, UnityEngine::GameObject* rootGameObject, HoudiniEngineUnity::HEU_SessionBase* session);
    // public System.Void CleanUpAndDisable()
    // Offset: 0x15DCE20
    void CleanUpAndDisable();
    // public System.Boolean IsAssetSavedInScene()
    // Offset: 0x15DD148
    bool IsAssetSavedInScene();
    // private System.Void Awake()
    // Offset: 0x15DD164
    void Awake();
    // public System.Void InvalidateAsset()
    // Offset: 0x15DCE80
    void InvalidateAsset();
    // private System.Void OnEnable()
    // Offset: 0x15DD168
    void OnEnable();
    // private System.Void OnDestroy()
    // Offset: 0x15DD16C
    void OnDestroy();
    // public System.Void AssetUpdate()
    // Offset: 0x15DD170
    void AssetUpdate();
    // public System.Void PostAssetUpdate()
    // Offset: 0x15DD174
    void PostAssetUpdate();
    // public System.Void RequestResetParameters(System.Boolean bAsync)
    // Offset: 0x15DD178
    void RequestResetParameters(bool bAsync);
    // public System.Void RequestReload(System.Boolean bAsync)
    // Offset: 0x15D7BFC
    void RequestReload(bool bAsync);
    // public System.Void RequestCook(System.Boolean bCheckParametersChanged, System.Boolean bAsync, System.Boolean bSkipCookCheck, System.Boolean bUploadParameters)
    // Offset: 0x15DD17C
    void RequestCook(bool bCheckParametersChanged, bool bAsync, bool bSkipCookCheck, bool bUploadParameters);
    // public System.Void RequestBakeInPlace()
    // Offset: 0x15DD180
    void RequestBakeInPlace();
    // public System.Void ClearBuildRequest()
    // Offset: 0x15DD198
    void ClearBuildRequest();
    // private System.Boolean HasValidAssetPath()
    // Offset: 0x15DD1A8
    bool HasValidAssetPath();
    // private System.Void ProcessRebuild(System.Boolean bPromptForSubasset, System.Int32 desiredSubassetIndex)
    // Offset: 0x15DD1CC
    void ProcessRebuild(bool bPromptForSubasset, int desiredSubassetIndex);
    // private System.Void InvokeReloadEvent(System.Boolean bCookSuccess, System.Collections.Generic.List`1<UnityEngine.GameObject> outputObjects)
    // Offset: 0x15DDEE4
    void InvokeReloadEvent(bool bCookSuccess, System::Collections::Generic::List_1<UnityEngine::GameObject*>* outputObjects);
    // private System.Boolean StartRebuild(System.Boolean bPromptForSubasset, System.Int32 desiredSubassetIndex)
    // Offset: 0x15DD6BC
    bool StartRebuild(bool bPromptForSubasset, int desiredSubassetIndex);
    // private System.Boolean FinishRebuild()
    // Offset: 0x15DD86C
    bool FinishRebuild();
    // private System.Boolean RecookAsync(System.Boolean bCheckParamsChanged, System.Boolean bSkipCookCheck, System.Boolean bUploadParameters, System.Boolean bUploadParameterPreset, System.Boolean bForceUploadInputs, System.Boolean bCookingSessionSync)
    // Offset: 0x15E0508
    bool RecookAsync(bool bCheckParamsChanged, bool bSkipCookCheck, bool bUploadParameters, bool bUploadParameterPreset, bool bForceUploadInputs, bool bCookingSessionSync);
    // private System.Boolean RecookBlocking(System.Boolean bCheckParamsChanged, System.Boolean bSkipCookCheck, System.Boolean bUploadParameters, System.Boolean bUploadParameterPreset, System.Boolean bForceUploadInputs, System.Boolean bCookingSessionSync)
    // Offset: 0x15E0CD4
    bool RecookBlocking(bool bCheckParamsChanged, bool bSkipCookCheck, bool bUploadParameters, bool bUploadParameterPreset, bool bForceUploadInputs, bool bCookingSessionSync);
    // private System.Void DoPostCookWork(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15E10C0
    void DoPostCookWork(HoudiniEngineUnity::HEU_SessionBase* session);
    // public System.Boolean IsValidForInteraction(ref System.String errorMessage)
    // Offset: 0x15E11E0
    bool IsValidForInteraction(ByRef<::Il2CppString*> errorMessage);
    // private System.Void OnValidate()
    // Offset: 0x15E1260
    void OnValidate();
    // private System.Void ExecutePostCookCallbacks()
    // Offset: 0x15E0C34
    void ExecutePostCookCallbacks();
    // private System.Void InvokePostCookEvent(System.Boolean bCookSuccess, System.Collections.Generic.List`1<UnityEngine.GameObject> outputObjects)
    // Offset: 0x15E12A0
    void InvokePostCookEvent(bool bCookSuccess, System::Collections::Generic::List_1<UnityEngine::GameObject*>* outputObjects);
    // private System.Boolean InternalStartRecook(System.Boolean bCheckParamsChanged, System.Boolean bSkipCookCheck, System.Boolean bUploadParameters, System.Boolean bUploadParameterPreset, System.Boolean bForceUploadInputs, System.Boolean bCookingSessionSync)
    // Offset: 0x15E0664
    bool InternalStartRecook(bool bCheckParamsChanged, bool bSkipCookCheck, bool bUploadParameters, bool bUploadParameterPreset, bool bForceUploadInputs, bool bCookingSessionSync);
    // private System.Void InternalSetAssetID(System.Int32 assetID)
    // Offset: 0x15DE58C
    void InternalSetAssetID(int assetID);
    // private System.Void SetCookStatus(HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus status, HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookResult result)
    // Offset: 0x15DDDD0
    void SetCookStatus(HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus status, HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookResult result);
    // public HoudiniEngineUnity.HEU_HoudiniAsset/AssetCookStatus GetCookStatus()
    // Offset: 0x15E1E4C
    HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus GetCookStatus();
    // private System.Void ProcessPoskCook()
    // Offset: 0x15E1E54
    void ProcessPoskCook();
    // private System.Boolean StartHoudiniCookNode(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15E1DD4
    bool StartHoudiniCookNode(HoudiniEngineUnity::HEU_SessionBase* session);
    // private System.Void ProcessHoudiniCookStatus(System.Boolean bAsync)
    // Offset: 0x15E0E3C
    void ProcessHoudiniCookStatus(bool bAsync);
    // public System.Boolean DoesAssetRequireRecook()
    // Offset: 0x15E2EC4
    bool DoesAssetRequireRecook();
    // public System.Void DeleteSessionDataOnly()
    // Offset: 0x15E325C
    void DeleteSessionDataOnly();
    // public System.Void DeleteAllGeneratedData(System.Boolean bIsRebuild)
    // Offset: 0x15DCE8C
    void DeleteAllGeneratedData(bool bIsRebuild);
    // private System.Void CleanUpInputNodes()
    // Offset: 0x15E3538
    void CleanUpInputNodes();
    // public System.Void DeleteAssetCacheData(System.Boolean bRegisterUndo)
    // Offset: 0x15E38A0
    void DeleteAssetCacheData(bool bRegisterUndo);
    // private System.Void GenerateParameters(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15DF348
    void GenerateParameters(HoudiniEngineUnity::HEU_SessionBase* session);
    // private System.Void DownloadParameterPresetFromHoudini(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15E21E8
    void DownloadParameterPresetFromHoudini(HoudiniEngineUnity::HEU_SessionBase* session);
    // private System.Void UploadParameterPresetToHoudini(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15E14CC
    void UploadParameterPresetToHoudini(HoudiniEngineUnity::HEU_SessionBase* session);
    // private System.Void UpdateParameterInputsToHoudini(HoudiniEngineUnity.HEU_SessionBase session, System.Boolean bForceUpdate)
    // Offset: 0x15E1670
    void UpdateParameterInputsToHoudini(HoudiniEngineUnity::HEU_SessionBase* session, bool bForceUpdate);
    // private System.Boolean LoadAssetFileWithSubasset(HoudiniEngineUnity.HEU_SessionBase session, System.Boolean bPromptForSubasset, System.Int32 desiredSubassetIndex)
    // Offset: 0x15DE6CC
    bool LoadAssetFileWithSubasset(HoudiniEngineUnity::HEU_SessionBase* session, bool bPromptForSubasset, int desiredSubassetIndex);
    // private System.Boolean CreateAndCookAsset(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 subassetIndex, out System.Int32 newAssetID, System.Boolean bCookTemplatedGeos)
    // Offset: 0x15DEC7C
    bool CreateAndCookAsset(HoudiniEngineUnity::HEU_SessionBase* session, int subassetIndex, ByRef<int> newAssetID, bool bCookTemplatedGeos);
    // private System.Void CreateAssetInputs(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15DEF38
    void CreateAssetInputs(HoudiniEngineUnity::HEU_SessionBase* session);
    // private System.Void UploadCurvesParameters(HoudiniEngineUnity.HEU_SessionBase session, System.Boolean bCheckParamsChanged)
    // Offset: 0x15E1724
    void UploadCurvesParameters(HoudiniEngineUnity::HEU_SessionBase* session, bool bCheckParamsChanged);
    // private System.Void UploadAttributeValues(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15E18B8
    void UploadAttributeValues(HoudiniEngineUnity::HEU_SessionBase* session);
    // private System.Void SyncDirtyAttributesToHoudini(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15E29B4
    void SyncDirtyAttributesToHoudini(HoudiniEngineUnity::HEU_SessionBase* session);
    // private System.Void UploadInputNodes(HoudiniEngineUnity.HEU_SessionBase session, System.Boolean bForceUpdate, System.Boolean bUpdateAll)
    // Offset: 0x15E1C64
    void UploadInputNodes(HoudiniEngineUnity::HEU_SessionBase* session, bool bForceUpdate, bool bUpdateAll);
    // public System.Boolean HasInputNodeTransformChanged()
    // Offset: 0x15E3C88
    bool HasInputNodeTransformChanged();
    // private System.Void NotifyInputNodesCookFinished()
    // Offset: 0x15DFF2C
    void NotifyInputNodesCookFinished();
    // private System.Boolean CreateObjects(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15DF524
    bool CreateObjects(HoudiniEngineUnity::HEU_SessionBase* session);
    // private System.Void UpdateAllObjectNodes(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15E24A8
    void UpdateAllObjectNodes(HoudiniEngineUnity::HEU_SessionBase* session);
    // private HoudiniEngineUnity.HEU_ObjectNode CreateObjectNode(HoudiniEngineUnity.HEU_SessionBase session, ref HoudiniEngineUnity.HAPI_ObjectInfo objectInfo, ref HoudiniEngineUnity.HAPI_Transform objectTranform)
    // Offset: 0x15E3D90
    HoudiniEngineUnity::HEU_ObjectNode* CreateObjectNode(HoudiniEngineUnity::HEU_SessionBase* session, ByRef<HoudiniEngineUnity::HAPI_ObjectInfo> objectInfo, ByRef<HoudiniEngineUnity::HAPI_Transform> objectTranform);
    // private System.Void GenerateObjectsGeometry(HoudiniEngineUnity.HEU_SessionBase session, System.Boolean bRebuild)
    // Offset: 0x15DF660
    void GenerateObjectsGeometry(HoudiniEngineUnity::HEU_SessionBase* session, bool bRebuild);
    // private System.Void GenerateAttributesStore(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15DFA04
    void GenerateAttributesStore(HoudiniEngineUnity::HEU_SessionBase* session);
    // private System.Void GenerateInstances(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15DF774
    void GenerateInstances(HoudiniEngineUnity::HEU_SessionBase* session);
    // private System.Void GenerateHandles(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15DFB0C
    void GenerateHandles(HoudiniEngineUnity::HEU_SessionBase* session);
    // public System.Void CleanUpHandles()
    // Offset: 0x15E3788
    void CleanUpHandles();
    // public HoudiniEngineUnity.HEU_Handle GetHandleByName(System.String handleName)
    // Offset: 0x15E3E70
    HoudiniEngineUnity::HEU_Handle* GetHandleByName(::Il2CppString* handleName);
    // public System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_Handle> GetHandles()
    // Offset: 0x15E3F9C
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_Handle*>* GetHandles();
    // public System.Int32 NumHandles()
    // Offset: 0x15E3FA4
    int NumHandles();
    // public HoudiniEngineUnity.HAPI_Transform GetObjectTransform(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 objectID)
    // Offset: 0x15E3FF8
    HoudiniEngineUnity::HAPI_Transform GetObjectTransform(HoudiniEngineUnity::HEU_SessionBase* session, int objectID);
    // public HoudiniEngineUnity.HEU_ObjectNode GetObjectWithID(System.Int32 objId)
    // Offset: 0x15E4240
    HoudiniEngineUnity::HEU_ObjectNode* GetObjectWithID(int objId);
    // private System.Void InvokeBakedEvent(System.Boolean bSuccess, System.Collections.Generic.List`1<UnityEngine.GameObject> outputObjects, System.Boolean isNewBake)
    // Offset: 0x15E4330
    void InvokeBakedEvent(bool bSuccess, System::Collections::Generic::List_1<UnityEngine::GameObject*>* outputObjects, bool isNewBake);
    // private UnityEngine.GameObject CloneAssetWithoutHDA(ref System.String bakedAssetPath, System.Boolean bWriteMeshesToAssetDatabase, System.Boolean bReconnectPrefabInstances)
    // Offset: 0x15E445C
    UnityEngine::GameObject* CloneAssetWithoutHDA(ByRef<::Il2CppString*> bakedAssetPath, bool bWriteMeshesToAssetDatabase, bool bReconnectPrefabInstances);
    // public UnityEngine.GameObject BakeToNewPrefab(System.String destinationPrefabPath)
    // Offset: 0x15E4AC0
    UnityEngine::GameObject* BakeToNewPrefab(::Il2CppString* destinationPrefabPath);
    // public UnityEngine.GameObject BakeToNewStandalone()
    // Offset: 0x15E4DF8
    UnityEngine::GameObject* BakeToNewStandalone();
    // public System.Void BakeToExistingPrefab(UnityEngine.GameObject bakeTargetGO)
    // Offset: 0x15E4F44
    void BakeToExistingPrefab(UnityEngine::GameObject* bakeTargetGO);
    // public System.Void BakeToExistingStandalone(UnityEngine.GameObject bakeTargetGO)
    // Offset: 0x15E555C
    void BakeToExistingStandalone(UnityEngine::GameObject* bakeTargetGO);
    // public System.Void NotifyUpstreamCooked(HoudiniEngineUnity.HEU_HoudiniAsset upstreamAsset, System.Boolean bSuccess, System.Collections.Generic.List`1<UnityEngine.GameObject> outputs)
    // Offset: 0x15E6038
    void NotifyUpstreamCooked(HoudiniEngineUnity::HEU_HoudiniAsset* upstreamAsset, bool bSuccess, System::Collections::Generic::List_1<UnityEngine::GameObject*>* outputs);
    // public System.Void ConnectToUpstream(HoudiniEngineUnity.HEU_HoudiniAsset upstreamAsset)
    // Offset: 0x15E6068
    void ConnectToUpstream(HoudiniEngineUnity::HEU_HoudiniAsset* upstreamAsset);
    // public System.Void DisconnectFromUpstream(HoudiniEngineUnity.HEU_HoudiniAsset upstreamAsset)
    // Offset: 0x15E617C
    void DisconnectFromUpstream(HoudiniEngineUnity::HEU_HoudiniAsset* upstreamAsset);
    // private System.Void AddDownstreamConnection(UnityEngine.Events.UnityAction`3<HoudiniEngineUnity.HEU_HoudiniAsset,System.Boolean,System.Collections.Generic.List`1<UnityEngine.GameObject>> receiver)
    // Offset: 0x15E60F8
    void AddDownstreamConnection(UnityEngine::Events::UnityAction_3<HoudiniEngineUnity::HEU_HoudiniAsset*, bool, System::Collections::Generic::List_1<UnityEngine::GameObject*>*>* receiver);
    // private System.Void RemoveDownstreamConnection(UnityEngine.Events.UnityAction`3<HoudiniEngineUnity.HEU_HoudiniAsset,System.Boolean,System.Collections.Generic.List`1<UnityEngine.GameObject>> receiver)
    // Offset: 0x15E620C
    void RemoveDownstreamConnection(UnityEngine::Events::UnityAction_3<HoudiniEngineUnity::HEU_HoudiniAsset*, bool, System::Collections::Generic::List_1<UnityEngine::GameObject*>*>* receiver);
    // private System.Void ClearAllUpstreamConnections()
    // Offset: 0x15E331C
    void ClearAllUpstreamConnections();
    // private System.Void UpdateInputsOnAssetRecreation(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15E13C4
    void UpdateInputsOnAssetRecreation(HoudiniEngineUnity::HEU_SessionBase* session);
    // public System.Void ReconnectInputsUpstreamNotifications()
    // Offset: 0x15E6274
    void ReconnectInputsUpstreamNotifications();
    // public System.Void GetHoudiniTransformAndApply(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15E63B0
    void GetHoudiniTransformAndApply(HoudiniEngineUnity::HEU_SessionBase* session);
    // public System.Void UploadUnityTransform(HoudiniEngineUnity.HEU_SessionBase session, System.Boolean bOnlySendIfChangedFromLastSync)
    // Offset: 0x15DFC8C
    void UploadUnityTransform(HoudiniEngineUnity::HEU_SessionBase* session, bool bOnlySendIfChangedFromLastSync);
    // public HoudiniEngineUnity.HEU_MaterialData GetMaterialData(UnityEngine.Material material)
    // Offset: 0x15E667C
    HoudiniEngineUnity::HEU_MaterialData* GetMaterialData(UnityEngine::Material* material);
    // public System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_MaterialData> GetMaterialCache()
    // Offset: 0x15E67CC
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_MaterialData*>* GetMaterialCache();
    // public System.Void ClearMaterialCache()
    // Offset: 0x15E32C4
    void ClearMaterialCache();
    // private System.Void UpdateHoudiniMaterials(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15E229C
    void UpdateHoudiniMaterials(HoudiniEngineUnity::HEU_SessionBase* session);
    // private System.Void RemoveUnusedMaterials()
    // Offset: 0x15E2B54
    void RemoveUnusedMaterials();
    // public System.Void RemoveMaterial(UnityEngine.Material material)
    // Offset: 0x15E6868
    void RemoveMaterial(UnityEngine::Material* material);
    // public System.Boolean IsAssetValidInHoudini(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15DE530
    bool IsAssetValidInHoudini(HoudiniEngineUnity::HEU_SessionBase* session);
    // public System.Boolean IsAssetValid()
    // Offset: 0x15E69A8
    bool IsAssetValid();
    // public System.Boolean HasTransformChangedSinceLastUpdate()
    // Offset: 0x15E69F4
    bool HasTransformChangedSinceLastUpdate();
    // public System.Void GetClonableParts(System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_PartData> clonableParts)
    // Offset: 0x15E498C
    void GetClonableParts(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_PartData*>* clonableParts);
    // public System.Void GetOutputGameObjects(System.Collections.Generic.List`1<UnityEngine.GameObject> outputObjects)
    // Offset: 0x15DDDDC
    void GetOutputGameObjects(System::Collections::Generic::List_1<UnityEngine::GameObject*>* outputObjects);
    // public System.Void GetOutput(System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_GeneratedOutput> outputs)
    // Offset: 0x15E6ADC
    void GetOutput(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_GeneratedOutput*>* outputs);
    // public System.Void GetOutputGeoNodes(System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_GeoNode> outputGeoNodes)
    // Offset: 0x15E6BE4
    void GetOutputGeoNodes(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_GeoNode*>* outputGeoNodes);
    // public HoudiniEngineUnity.HEU_PartData GetInternalHDAPartWithGameObject(UnityEngine.GameObject outputGameObject)
    // Offset: 0x15E6CEC
    HoudiniEngineUnity::HEU_PartData* GetInternalHDAPartWithGameObject(UnityEngine::GameObject* outputGameObject);
    // public System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_Curve> GetCurves()
    // Offset: 0x15E6E44
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_Curve*>* GetCurves();
    // public HoudiniEngineUnity.HEU_Curve GetCurve(System.String curveName)
    // Offset: 0x15E6E4C
    HoudiniEngineUnity::HEU_Curve* GetCurve(::Il2CppString* curveName);
    // public System.Void ClearInvalidCurves()
    // Offset: 0x15E38E0
    void ClearInvalidCurves();
    // public System.Int32 GetEditableCurveCount()
    // Offset: 0x15E6FB4
    int GetEditableCurveCount();
    // public System.Void AddCurve(HoudiniEngineUnity.HEU_Curve curve)
    // Offset: 0x15E70B8
    void AddCurve(HoudiniEngineUnity::HEU_Curve* curve);
    // public System.Void RemoveCurve(HoudiniEngineUnity.HEU_Curve curve)
    // Offset: 0x15E7150
    void RemoveCurve(HoudiniEngineUnity::HEU_Curve* curve);
    // public System.Void AddCurveDrawCollider(UnityEngine.Collider newCollider)
    // Offset: 0x15E71B8
    void AddCurveDrawCollider(UnityEngine::Collider* newCollider);
    // public System.Void RemoveCurveDrawCollider(UnityEngine.Collider collider)
    // Offset: 0x15E7250
    void RemoveCurveDrawCollider(UnityEngine::Collider* collider);
    // public System.Void ClearCurveDrawColliders()
    // Offset: 0x15E72C4
    void ClearCurveDrawColliders();
    // public System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_InputNode> GetInputNodes()
    // Offset: 0x15E7324
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_InputNode*>* GetInputNodes();
    // public HoudiniEngineUnity.HEU_InputNode GetInputNode(System.String inputName)
    // Offset: 0x15E732C
    HoudiniEngineUnity::HEU_InputNode* GetInputNode(::Il2CppString* inputName);
    // public HoudiniEngineUnity.HEU_InputNode GetAssetInputNode(System.String inputName)
    // Offset: 0x15E39E0
    HoudiniEngineUnity::HEU_InputNode* GetAssetInputNode(::Il2CppString* inputName);
    // public HoudiniEngineUnity.HEU_InputNode GetInputNodeByIndex(System.Int32 index)
    // Offset: 0x15E7458
    HoudiniEngineUnity::HEU_InputNode* GetInputNodeByIndex(int index);
    // public System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_InputNode> GetNonParameterInputNodes()
    // Offset: 0x15E74E0
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_InputNode*>* GetNonParameterInputNodes();
    // public System.Void AddInputNode(HoudiniEngineUnity.HEU_InputNode node)
    // Offset: 0x15E3B88
    void AddInputNode(HoudiniEngineUnity::HEU_InputNode* node);
    // public System.Void RemoveInputNode(HoudiniEngineUnity.HEU_InputNode node)
    // Offset: 0x15E3B20
    void RemoveInputNode(HoudiniEngineUnity::HEU_InputNode* node);
    // public System.Void InputNodeNotifyRemoved(HoudiniEngineUnity.HEU_InputNode node)
    // Offset: 0x15E7630
    void InputNodeNotifyRemoved(HoudiniEngineUnity::HEU_InputNode* node);
    // public System.Int32 GetVolumeCacheCount()
    // Offset: 0x15E7634
    int GetVolumeCacheCount();
    // public System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_VolumeCache> GetVolumeCaches()
    // Offset: 0x15E7684
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_VolumeCache*>* GetVolumeCaches();
    // public System.Void AddVolumeCache(HoudiniEngineUnity.HEU_VolumeCache cache)
    // Offset: 0x15E768C
    void AddVolumeCache(HoudiniEngineUnity::HEU_VolumeCache* cache);
    // public System.Void RemoveVolumeCache(HoudiniEngineUnity.HEU_VolumeCache cache)
    // Offset: 0x15E7724
    void RemoveVolumeCache(HoudiniEngineUnity::HEU_VolumeCache* cache);
    // public System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_AttributesStore> GetAttributesStores()
    // Offset: 0x15E77D0
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_AttributesStore*>* GetAttributesStores();
    // public System.Int32 NumAttributeStores()
    // Offset: 0x15E77D8
    int NumAttributeStores();
    // public HoudiniEngineUnity.HEU_AttributesStore GetAttributeStore(System.String geoName, System.Int32 partID)
    // Offset: 0x15E782C
    HoudiniEngineUnity::HEU_AttributesStore* GetAttributeStore(::Il2CppString* geoName, int partID);
    // public System.Void AddAttributeStore(HoudiniEngineUnity.HEU_AttributesStore attributeStore)
    // Offset: 0x15E7968
    void AddAttributeStore(HoudiniEngineUnity::HEU_AttributesStore* attributeStore);
    // public System.Void RemoveAttributeStore(HoudiniEngineUnity.HEU_AttributesStore attributeStore)
    // Offset: 0x15E3C20
    void RemoveAttributeStore(HoudiniEngineUnity::HEU_AttributesStore* attributeStore);
    // public System.Void ReorderAttributeStore(System.Int32 oldIndex, System.Int32 newIndex)
    // Offset: 0x15E7AA8
    void ReorderAttributeStore(int oldIndex, int newIndex);
    // static public HoudiniEngineUnity.HEU_PartData GetSceneHDAPartWithGameObject(UnityEngine.GameObject outputGameObject)
    // Offset: 0x15E7BA8
    static HoudiniEngineUnity::HEU_PartData* GetSceneHDAPartWithGameObject(UnityEngine::GameObject* outputGameObject);
    // static public HoudiniEngineUnity.HEU_HoudiniAsset GetSceneHDAAssetFromGameObject(UnityEngine.GameObject outputGameObject)
    // Offset: 0x15E7D0C
    static HoudiniEngineUnity::HEU_HoudiniAsset* GetSceneHDAAssetFromGameObject(UnityEngine::GameObject* outputGameObject);
    // static public System.Boolean IsHoudiniAssetOutput(UnityEngine.GameObject go)
    // Offset: 0x15E7E6C
    static bool IsHoudiniAssetOutput(UnityEngine::GameObject* go);
    // static public System.Boolean IsHoudiniAssetRoot(UnityEngine.GameObject go)
    // Offset: 0x15E7FD0
    static bool IsHoudiniAssetRoot(UnityEngine::GameObject* go);
    // public System.Void PopulateObjectInstanceInfos(System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_ObjectInstanceInfo> objInstanceInfos)
    // Offset: 0x15E8060
    void PopulateObjectInstanceInfos(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_ObjectInstanceInfo*>* objInstanceInfos);
    // public System.Void AddToAssetDBCache(System.String assetObjectFileName, UnityEngine.Object objectToAdd, System.String relativeFolderPath, ref UnityEngine.Object targetAssetDBObject)
    // Offset: 0x15E81A8
    void AddToAssetDBCache(::Il2CppString* assetObjectFileName, UnityEngine::Object* objectToAdd, ::Il2CppString* relativeFolderPath, ByRef<UnityEngine::Object*> targetAssetDBObject);
    // static public System.Void SetCurvesVisibilityInScene(System.Boolean bShow)
    // Offset: 0x15E820C
    static void SetCurvesVisibilityInScene(bool bShow);
    // public HoudiniEngineUnity.HEU_SessionBase GetAssetSession(System.Boolean bCreateIfInvalid)
    // Offset: 0x15DC12C
    HoudiniEngineUnity::HEU_SessionBase* GetAssetSession(bool bCreateIfInvalid);
    // public System.String GetValidAssetCacheFolderPath()
    // Offset: 0x15E67D4
    ::Il2CppString* GetValidAssetCacheFolderPath();
    // public System.Void HideAllGeometry()
    // Offset: 0x15E83D0
    void HideAllGeometry();
    // public System.Void CalculateVisibility()
    // Offset: 0x15E84C8
    void CalculateVisibility();
    // public System.Void DisableAllColliders()
    // Offset: 0x15E85C0
    void DisableAllColliders();
    // public System.Void CalculateColliderState()
    // Offset: 0x15E86B8
    void CalculateColliderState();
    // public UnityEngine.GameObject DuplicateAsset(UnityEngine.GameObject newRootGameObject)
    // Offset: 0x15E87B0
    UnityEngine::GameObject* DuplicateAsset(UnityEngine::GameObject* newRootGameObject);
    // public HoudiniEngineUnity.HEU_ObjectNode GetObjectNodeByName(System.String objName)
    // Offset: 0x15E99E8
    HoudiniEngineUnity::HEU_ObjectNode* GetObjectNodeByName(::Il2CppString* objName);
    // public System.Void ResetMaterialOverrides()
    // Offset: 0x15E9BD8
    void ResetMaterialOverrides();
    // public System.Void ResetParametersToDefault()
    // Offset: 0x15E9CF4
    void ResetParametersToDefault();
    // public HoudiniEngineUnity.HEU_AssetPreset GetAssetPreset()
    // Offset: 0x15DE008
    HoudiniEngineUnity::HEU_AssetPreset* GetAssetPreset();
    // public System.Void LoadAssetPresetAndCook(HoudiniEngineUnity.HEU_AssetPreset assetPreset)
    // Offset: 0x15E0024
    void LoadAssetPresetAndCook(HoudiniEngineUnity::HEU_AssetPreset* assetPreset);
    // public System.Void ApplyRecookPreset()
    // Offset: 0x15E2AD4
    void ApplyRecookPreset();
    // private System.Boolean ApplyInputPresets(HoudiniEngineUnity.HEU_SessionBase session, System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_InputPreset> inputPresets, System.Boolean bAddMissingInputsToRecookPreset)
    // Offset: 0x15E9FDC
    bool ApplyInputPresets(HoudiniEngineUnity::HEU_SessionBase* session, System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_InputPreset*>* inputPresets, bool bAddMissingInputsToRecookPreset);
    // public HoudiniEngineUnity.HEU_VolumeCachePreset GetVolumeCachePreset(System.String objName, System.String geoName, System.Int32 tile)
    // Offset: 0x15EA718
    HoudiniEngineUnity::HEU_VolumeCachePreset* GetVolumeCachePreset(::Il2CppString* objName, ::Il2CppString* geoName, int tile);
    // public System.Void RemoveVolumeCachePreset(HoudiniEngineUnity.HEU_VolumeCachePreset preset)
    // Offset: 0x15EA888
    void RemoveVolumeCachePreset(HoudiniEngineUnity::HEU_VolumeCachePreset* preset);
    // private System.Boolean ApplyVolumeCachePresets(System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_VolumeCachePreset> volumeCachePresets)
    // Offset: 0x15EA2B8
    bool ApplyVolumeCachePresets(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_VolumeCachePreset*>* volumeCachePresets);
    // public System.Void SyncInternalParametersForUndoCompare()
    // Offset: 0x15EA904
    void SyncInternalParametersForUndoCompare();
    // public System.Boolean UpdateSessionSync()
    // Offset: 0x15EAAB8
    bool UpdateSessionSync();
    // public System.Void UpdateTotalCookCount()
    // Offset: 0x15DEEC8
    void UpdateTotalCookCount();
    // private System.Void ResetAndCopyInstantiatedProperties(HoudiniEngineUnity.HEU_HoudiniAsset newAsset)
    // Offset: 0x15EABA8
    void ResetAndCopyInstantiatedProperties(HoudiniEngineUnity::HEU_HoudiniAsset* newAsset);
    // private HoudiniEngineUnity.HEU_HoudiniAsset/AssetInstantiationMethod GetInstantiationMethod()
    // Offset: 0x15EAED8
    HoudiniEngineUnity::HEU_HoudiniAsset::AssetInstantiationMethod GetInstantiationMethod();
    // private HoudiniEngineUnity.HEU_HoudiniAsset GetInstantiatedObject()
    // Offset: 0x15EB074
    HoudiniEngineUnity::HEU_HoudiniAsset* GetInstantiatedObject();
    // private System.Void ClearInvalidLists()
    // Offset: 0x15DD46C
    void ClearInvalidLists();
    // private System.Void CopyPropertiesTo(HoudiniEngineUnity.HEU_HoudiniAsset newAsset)
    // Offset: 0x15E8A60
    void CopyPropertiesTo(HoudiniEngineUnity::HEU_HoudiniAsset* newAsset);
    // public System.Void SetSoftDeleted()
    // Offset: 0x15EB108
    void SetSoftDeleted();
    // public System.Boolean IsEquivalentTo(HoudiniEngineUnity.HEU_HoudiniAsset asset)
    // Offset: 0x15EB29C
    bool IsEquivalentTo(HoudiniEngineUnity::HEU_HoudiniAsset* asset);
    // public System.Void .ctor()
    // Offset: 0x15EBFCC
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HEU_HoudiniAsset* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_HoudiniAsset::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HEU_HoudiniAsset*, creationType>()));
    }
  }; // HoudiniEngineUnity.HEU_HoudiniAsset
  #pragma pack(pop)
  static check_size<sizeof(HEU_HoudiniAsset), 624 + sizeof(bool)> __HoudiniEngineUnity_HEU_HoudiniAssetSizeCheck;
  static_assert(sizeof(HEU_HoudiniAsset) == 0x271);
}
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HEU_HoudiniAsset*, "HoudiniEngineUnity", "HEU_HoudiniAsset");
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType, "HoudiniEngineUnity", "HEU_HoudiniAsset/HEU_AssetType");
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HEU_HoudiniAsset::AssetBuildAction, "HoudiniEngineUnity", "HEU_HoudiniAsset/AssetBuildAction");
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus, "HoudiniEngineUnity", "HEU_HoudiniAsset/AssetCookStatus");
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookResult, "HoudiniEngineUnity", "HEU_HoudiniAsset/AssetCookResult");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_AssetType
// Il2CppName: get_AssetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_AssetType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_AssetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_AssetInfo
// Il2CppName: get_AssetInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HAPI_AssetInfo (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_AssetInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_AssetInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_NodeInfo
// Il2CppName: get_NodeInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HAPI_NodeInfo (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_NodeInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_NodeInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_AssetName
// Il2CppName: get_AssetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_AssetName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_AssetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_AssetOpName
// Il2CppName: get_AssetOpName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_AssetOpName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_AssetOpName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_AssetHelp
// Il2CppName: get_AssetHelp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_AssetHelp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_AssetHelp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_TransformInputCount
// Il2CppName: get_TransformInputCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_TransformInputCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_TransformInputCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_GeoInputCount
// Il2CppName: get_GeoInputCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_GeoInputCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_GeoInputCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_AssetID
// Il2CppName: get_AssetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_AssetID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_AssetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_AssetPath
// Il2CppName: get_AssetPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_AssetPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_AssetPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_LoadAssetFromMemory
// Il2CppName: get_LoadAssetFromMemory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_LoadAssetFromMemory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_LoadAssetFromMemory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_LoadAssetFromMemory
// Il2CppName: set_LoadAssetFromMemory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_LoadAssetFromMemory)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_LoadAssetFromMemory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_AlwaysOverwriteOnLoad
// Il2CppName: get_AlwaysOverwriteOnLoad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_AlwaysOverwriteOnLoad)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_AlwaysOverwriteOnLoad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_AlwaysOverwriteOnLoad
// Il2CppName: set_AlwaysOverwriteOnLoad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_AlwaysOverwriteOnLoad)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_AlwaysOverwriteOnLoad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_HandleCount
// Il2CppName: get_HandleCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_HandleCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_HandleCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_OwnerGameObject
// Il2CppName: get_OwnerGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_OwnerGameObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_OwnerGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_RootGameObject
// Il2CppName: get_RootGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_RootGameObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_RootGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_Parameters
// Il2CppName: get_Parameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_Parameters* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_Parameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_Parameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_SubassetNames
// Il2CppName: get_SubassetNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_SubassetNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_SubassetNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_SessionID
// Il2CppName: get_SessionID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_SessionID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_SessionID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_WarnedPrefabNotSupported
// Il2CppName: get_WarnedPrefabNotSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_WarnedPrefabNotSupported)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_WarnedPrefabNotSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_WarnedPrefabNotSupported
// Il2CppName: set_WarnedPrefabNotSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_WarnedPrefabNotSupported)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_WarnedPrefabNotSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_InstanceInputUIState
// Il2CppName: get_InstanceInputUIState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_InstanceInputUIState* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_InstanceInputUIState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_InstanceInputUIState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_InstanceInputUIState
// Il2CppName: set_InstanceInputUIState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_InstanceInputUIState*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_InstanceInputUIState)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_InstanceInputUIState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_InstanceInputUIState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_GenerateUVs
// Il2CppName: get_GenerateUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_GenerateUVs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_GenerateUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_GenerateUVs
// Il2CppName: set_GenerateUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_GenerateUVs)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_GenerateUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_GenerateTangents
// Il2CppName: get_GenerateTangents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_GenerateTangents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_GenerateTangents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_GenerateTangents
// Il2CppName: set_GenerateTangents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_GenerateTangents)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_GenerateTangents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_GenerateNormals
// Il2CppName: get_GenerateNormals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_GenerateNormals)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_GenerateNormals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_GenerateNormals
// Il2CppName: set_GenerateNormals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_GenerateNormals)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_GenerateNormals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_PushTransformToHoudini
// Il2CppName: get_PushTransformToHoudini
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_PushTransformToHoudini)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_PushTransformToHoudini", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_PushTransformToHoudini
// Il2CppName: set_PushTransformToHoudini
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_PushTransformToHoudini)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_PushTransformToHoudini", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_TransformChangeTriggersCooks
// Il2CppName: get_TransformChangeTriggersCooks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_TransformChangeTriggersCooks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_TransformChangeTriggersCooks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_TransformChangeTriggersCooks
// Il2CppName: set_TransformChangeTriggersCooks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_TransformChangeTriggersCooks)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_TransformChangeTriggersCooks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_CookingTriggersDownCooks
// Il2CppName: get_CookingTriggersDownCooks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_CookingTriggersDownCooks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_CookingTriggersDownCooks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_CookingTriggersDownCooks
// Il2CppName: set_CookingTriggersDownCooks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_CookingTriggersDownCooks)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_CookingTriggersDownCooks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_AutoCookOnParameterChange
// Il2CppName: get_AutoCookOnParameterChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_AutoCookOnParameterChange)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_AutoCookOnParameterChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_AutoCookOnParameterChange
// Il2CppName: set_AutoCookOnParameterChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_AutoCookOnParameterChange)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_AutoCookOnParameterChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_IgnoreNonDisplayNodes
// Il2CppName: get_IgnoreNonDisplayNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_IgnoreNonDisplayNodes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_IgnoreNonDisplayNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_IgnoreNonDisplayNodes
// Il2CppName: set_IgnoreNonDisplayNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_IgnoreNonDisplayNodes)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_IgnoreNonDisplayNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_GenerateMeshUsingPoints
// Il2CppName: get_GenerateMeshUsingPoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_GenerateMeshUsingPoints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_GenerateMeshUsingPoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_GenerateMeshUsingPoints
// Il2CppName: set_GenerateMeshUsingPoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_GenerateMeshUsingPoints)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_GenerateMeshUsingPoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_UseLODGroups
// Il2CppName: get_UseLODGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_UseLODGroups)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_UseLODGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_UseLODGroups
// Il2CppName: set_UseLODGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_UseLODGroups)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_UseLODGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_SplitGeosByGroup
// Il2CppName: get_SplitGeosByGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_SplitGeosByGroup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_SplitGeosByGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_SplitGeosByGroup
// Il2CppName: set_SplitGeosByGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_SplitGeosByGroup)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_SplitGeosByGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_SessionSyncAutoCook
// Il2CppName: get_SessionSyncAutoCook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_SessionSyncAutoCook)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_SessionSyncAutoCook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_SessionSyncAutoCook
// Il2CppName: set_SessionSyncAutoCook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_SessionSyncAutoCook)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_SessionSyncAutoCook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_BakeUpdateKeepPreviousTransformValues
// Il2CppName: get_BakeUpdateKeepPreviousTransformValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_BakeUpdateKeepPreviousTransformValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_BakeUpdateKeepPreviousTransformValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_BakeUpdateKeepPreviousTransformValues
// Il2CppName: set_BakeUpdateKeepPreviousTransformValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_BakeUpdateKeepPreviousTransformValues)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_BakeUpdateKeepPreviousTransformValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_PauseCooking
// Il2CppName: get_PauseCooking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_PauseCooking)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_PauseCooking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_PauseCooking
// Il2CppName: set_PauseCooking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_PauseCooking)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_PauseCooking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_CurveEditorEnabled
// Il2CppName: get_CurveEditorEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_CurveEditorEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_CurveEditorEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_CurveEditorEnabled
// Il2CppName: set_CurveEditorEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_CurveEditorEnabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_CurveEditorEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_CurveDrawCollision
// Il2CppName: get_CurveDrawCollision
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_Curve::CurveDrawCollision (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_CurveDrawCollision)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_CurveDrawCollision", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_CurveDrawCollision
// Il2CppName: set_CurveDrawCollision
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_Curve::CurveDrawCollision)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_CurveDrawCollision)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_Curve/CurveDrawCollision")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_CurveDrawCollision", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetCurveDrawColliders
// Il2CppName: GetCurveDrawColliders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::Collider*>* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetCurveDrawColliders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetCurveDrawColliders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetCurveDrawLayerMask
// Il2CppName: GetCurveDrawLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::LayerMask (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetCurveDrawLayerMask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetCurveDrawLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::SetCurveDrawLayerMask
// Il2CppName: SetCurveDrawLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(UnityEngine::LayerMask)>(&HoudiniEngineUnity::HEU_HoudiniAsset::SetCurveDrawLayerMask)> {
  static const MethodInfo* get() {
    static auto* mask = &::il2cpp_utils::GetClassFromName("UnityEngine", "LayerMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "SetCurveDrawLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mask});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_CurveDisableScaleRotation
// Il2CppName: get_CurveDisableScaleRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_CurveDisableScaleRotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_CurveDisableScaleRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_CurveDisableScaleRotation
// Il2CppName: set_CurveDisableScaleRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_CurveDisableScaleRotation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_CurveDisableScaleRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_CurveCookOnDrag
// Il2CppName: get_CurveCookOnDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_CurveCookOnDrag)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_CurveCookOnDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_CurveCookOnDrag
// Il2CppName: set_CurveCookOnDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_CurveCookOnDrag)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_CurveCookOnDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_CurveFrameSelectedNodes
// Il2CppName: get_CurveFrameSelectedNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_CurveFrameSelectedNodes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_CurveFrameSelectedNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_CurveFrameSelectedNodes
// Il2CppName: set_CurveFrameSelectedNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_CurveFrameSelectedNodes)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_CurveFrameSelectedNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_CurveFrameSelectedNodeDistance
// Il2CppName: get_CurveFrameSelectedNodeDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_CurveFrameSelectedNodeDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_CurveFrameSelectedNodeDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_CurveFrameSelectedNodeDistance
// Il2CppName: set_CurveFrameSelectedNodeDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(float)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_CurveFrameSelectedNodeDistance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_CurveFrameSelectedNodeDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_HandlesEnabled
// Il2CppName: get_HandlesEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_HandlesEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_HandlesEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_HandlesEnabled
// Il2CppName: set_HandlesEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_HandlesEnabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_HandlesEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_EditableNodesToolsEnabled
// Il2CppName: get_EditableNodesToolsEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_EditableNodesToolsEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_EditableNodesToolsEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_EditableNodesToolsEnabled
// Il2CppName: set_EditableNodesToolsEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_EditableNodesToolsEnabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_EditableNodesToolsEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_ToolsInfo
// Il2CppName: get_ToolsInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_ToolsInfo* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_ToolsInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_ToolsInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_SerializedMetaData
// Il2CppName: get_SerializedMetaData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_AssetSerializedMetaData* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_SerializedMetaData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_SerializedMetaData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::get_PendingAutoCookOnMouseRelease
// Il2CppName: get_PendingAutoCookOnMouseRelease
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::get_PendingAutoCookOnMouseRelease)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "get_PendingAutoCookOnMouseRelease", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::set_PendingAutoCookOnMouseRelease
// Il2CppName: set_PendingAutoCookOnMouseRelease
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::set_PendingAutoCookOnMouseRelease)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "set_PendingAutoCookOnMouseRelease", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::SetupAsset
// Il2CppName: SetupAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_HoudiniAsset::HEU_AssetType, ::Il2CppString*, UnityEngine::GameObject*, HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::SetupAsset)> {
  static const MethodInfo* get() {
    static auto* assetType = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset/HEU_AssetType")->byval_arg;
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* rootGameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "SetupAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetType, filePath, rootGameObject, session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::CleanUpAndDisable
// Il2CppName: CleanUpAndDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::CleanUpAndDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "CleanUpAndDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::IsAssetSavedInScene
// Il2CppName: IsAssetSavedInScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::IsAssetSavedInScene)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "IsAssetSavedInScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::InvalidateAsset
// Il2CppName: InvalidateAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::InvalidateAsset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "InvalidateAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::AssetUpdate
// Il2CppName: AssetUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::AssetUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "AssetUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::PostAssetUpdate
// Il2CppName: PostAssetUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::PostAssetUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "PostAssetUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::RequestResetParameters
// Il2CppName: RequestResetParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::RequestResetParameters)> {
  static const MethodInfo* get() {
    static auto* bAsync = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "RequestResetParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bAsync});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::RequestReload
// Il2CppName: RequestReload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::RequestReload)> {
  static const MethodInfo* get() {
    static auto* bAsync = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "RequestReload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bAsync});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::RequestCook
// Il2CppName: RequestCook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool, bool, bool, bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::RequestCook)> {
  static const MethodInfo* get() {
    static auto* bCheckParametersChanged = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bAsync = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bSkipCookCheck = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bUploadParameters = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "RequestCook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bCheckParametersChanged, bAsync, bSkipCookCheck, bUploadParameters});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::RequestBakeInPlace
// Il2CppName: RequestBakeInPlace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::RequestBakeInPlace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "RequestBakeInPlace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ClearBuildRequest
// Il2CppName: ClearBuildRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::ClearBuildRequest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ClearBuildRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::HasValidAssetPath
// Il2CppName: HasValidAssetPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::HasValidAssetPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "HasValidAssetPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ProcessRebuild
// Il2CppName: ProcessRebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool, int)>(&HoudiniEngineUnity::HEU_HoudiniAsset::ProcessRebuild)> {
  static const MethodInfo* get() {
    static auto* bPromptForSubasset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* desiredSubassetIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ProcessRebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bPromptForSubasset, desiredSubassetIndex});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::InvokeReloadEvent
// Il2CppName: InvokeReloadEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool, System::Collections::Generic::List_1<UnityEngine::GameObject*>*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::InvokeReloadEvent)> {
  static const MethodInfo* get() {
    static auto* bCookSuccess = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* outputObjects = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "InvokeReloadEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bCookSuccess, outputObjects});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::StartRebuild
// Il2CppName: StartRebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool, int)>(&HoudiniEngineUnity::HEU_HoudiniAsset::StartRebuild)> {
  static const MethodInfo* get() {
    static auto* bPromptForSubasset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* desiredSubassetIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "StartRebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bPromptForSubasset, desiredSubassetIndex});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::FinishRebuild
// Il2CppName: FinishRebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::FinishRebuild)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "FinishRebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::RecookAsync
// Il2CppName: RecookAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool, bool, bool, bool, bool, bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::RecookAsync)> {
  static const MethodInfo* get() {
    static auto* bCheckParamsChanged = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bSkipCookCheck = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bUploadParameters = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bUploadParameterPreset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bForceUploadInputs = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bCookingSessionSync = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "RecookAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bCheckParamsChanged, bSkipCookCheck, bUploadParameters, bUploadParameterPreset, bForceUploadInputs, bCookingSessionSync});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::RecookBlocking
// Il2CppName: RecookBlocking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool, bool, bool, bool, bool, bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::RecookBlocking)> {
  static const MethodInfo* get() {
    static auto* bCheckParamsChanged = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bSkipCookCheck = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bUploadParameters = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bUploadParameterPreset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bForceUploadInputs = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bCookingSessionSync = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "RecookBlocking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bCheckParamsChanged, bSkipCookCheck, bUploadParameters, bUploadParameterPreset, bForceUploadInputs, bCookingSessionSync});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::DoPostCookWork
// Il2CppName: DoPostCookWork
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::DoPostCookWork)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "DoPostCookWork", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::IsValidForInteraction
// Il2CppName: IsValidForInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)(ByRef<::Il2CppString*>)>(&HoudiniEngineUnity::HEU_HoudiniAsset::IsValidForInteraction)> {
  static const MethodInfo* get() {
    static auto* errorMessage = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "IsValidForInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{errorMessage});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::OnValidate
// Il2CppName: OnValidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::OnValidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "OnValidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ExecutePostCookCallbacks
// Il2CppName: ExecutePostCookCallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::ExecutePostCookCallbacks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ExecutePostCookCallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::InvokePostCookEvent
// Il2CppName: InvokePostCookEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool, System::Collections::Generic::List_1<UnityEngine::GameObject*>*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::InvokePostCookEvent)> {
  static const MethodInfo* get() {
    static auto* bCookSuccess = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* outputObjects = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "InvokePostCookEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bCookSuccess, outputObjects});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::InternalStartRecook
// Il2CppName: InternalStartRecook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool, bool, bool, bool, bool, bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::InternalStartRecook)> {
  static const MethodInfo* get() {
    static auto* bCheckParamsChanged = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bSkipCookCheck = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bUploadParameters = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bUploadParameterPreset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bForceUploadInputs = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bCookingSessionSync = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "InternalStartRecook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bCheckParamsChanged, bSkipCookCheck, bUploadParameters, bUploadParameterPreset, bForceUploadInputs, bCookingSessionSync});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::InternalSetAssetID
// Il2CppName: InternalSetAssetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(int)>(&HoudiniEngineUnity::HEU_HoudiniAsset::InternalSetAssetID)> {
  static const MethodInfo* get() {
    static auto* assetID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "InternalSetAssetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetID});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::SetCookStatus
// Il2CppName: SetCookStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus, HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookResult)>(&HoudiniEngineUnity::HEU_HoudiniAsset::SetCookStatus)> {
  static const MethodInfo* get() {
    static auto* status = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset/AssetCookStatus")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset/AssetCookResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "SetCookStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{status, result});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetCookStatus
// Il2CppName: GetCookStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_HoudiniAsset::AssetCookStatus (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetCookStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetCookStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ProcessPoskCook
// Il2CppName: ProcessPoskCook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::ProcessPoskCook)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ProcessPoskCook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::StartHoudiniCookNode
// Il2CppName: StartHoudiniCookNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::StartHoudiniCookNode)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "StartHoudiniCookNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ProcessHoudiniCookStatus
// Il2CppName: ProcessHoudiniCookStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::ProcessHoudiniCookStatus)> {
  static const MethodInfo* get() {
    static auto* bAsync = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ProcessHoudiniCookStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bAsync});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::DoesAssetRequireRecook
// Il2CppName: DoesAssetRequireRecook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::DoesAssetRequireRecook)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "DoesAssetRequireRecook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::DeleteSessionDataOnly
// Il2CppName: DeleteSessionDataOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::DeleteSessionDataOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "DeleteSessionDataOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::DeleteAllGeneratedData
// Il2CppName: DeleteAllGeneratedData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::DeleteAllGeneratedData)> {
  static const MethodInfo* get() {
    static auto* bIsRebuild = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "DeleteAllGeneratedData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bIsRebuild});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::CleanUpInputNodes
// Il2CppName: CleanUpInputNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::CleanUpInputNodes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "CleanUpInputNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::DeleteAssetCacheData
// Il2CppName: DeleteAssetCacheData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::DeleteAssetCacheData)> {
  static const MethodInfo* get() {
    static auto* bRegisterUndo = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "DeleteAssetCacheData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bRegisterUndo});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GenerateParameters
// Il2CppName: GenerateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GenerateParameters)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GenerateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::DownloadParameterPresetFromHoudini
// Il2CppName: DownloadParameterPresetFromHoudini
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::DownloadParameterPresetFromHoudini)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "DownloadParameterPresetFromHoudini", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::UploadParameterPresetToHoudini
// Il2CppName: UploadParameterPresetToHoudini
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::UploadParameterPresetToHoudini)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "UploadParameterPresetToHoudini", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::UpdateParameterInputsToHoudini
// Il2CppName: UpdateParameterInputsToHoudini
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*, bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::UpdateParameterInputsToHoudini)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* bForceUpdate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "UpdateParameterInputsToHoudini", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, bForceUpdate});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::LoadAssetFileWithSubasset
// Il2CppName: LoadAssetFileWithSubasset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*, bool, int)>(&HoudiniEngineUnity::HEU_HoudiniAsset::LoadAssetFileWithSubasset)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* bPromptForSubasset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* desiredSubassetIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "LoadAssetFileWithSubasset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, bPromptForSubasset, desiredSubassetIndex});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::CreateAndCookAsset
// Il2CppName: CreateAndCookAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*, int, ByRef<int>, bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::CreateAndCookAsset)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* subassetIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* newAssetID = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* bCookTemplatedGeos = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "CreateAndCookAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, subassetIndex, newAssetID, bCookTemplatedGeos});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::CreateAssetInputs
// Il2CppName: CreateAssetInputs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::CreateAssetInputs)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "CreateAssetInputs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::UploadCurvesParameters
// Il2CppName: UploadCurvesParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*, bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::UploadCurvesParameters)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* bCheckParamsChanged = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "UploadCurvesParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, bCheckParamsChanged});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::UploadAttributeValues
// Il2CppName: UploadAttributeValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::UploadAttributeValues)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "UploadAttributeValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::SyncDirtyAttributesToHoudini
// Il2CppName: SyncDirtyAttributesToHoudini
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::SyncDirtyAttributesToHoudini)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "SyncDirtyAttributesToHoudini", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::UploadInputNodes
// Il2CppName: UploadInputNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*, bool, bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::UploadInputNodes)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* bForceUpdate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bUpdateAll = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "UploadInputNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, bForceUpdate, bUpdateAll});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::HasInputNodeTransformChanged
// Il2CppName: HasInputNodeTransformChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::HasInputNodeTransformChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "HasInputNodeTransformChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::NotifyInputNodesCookFinished
// Il2CppName: NotifyInputNodesCookFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::NotifyInputNodesCookFinished)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "NotifyInputNodesCookFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::CreateObjects
// Il2CppName: CreateObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::CreateObjects)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "CreateObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::UpdateAllObjectNodes
// Il2CppName: UpdateAllObjectNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::UpdateAllObjectNodes)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "UpdateAllObjectNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::CreateObjectNode
// Il2CppName: CreateObjectNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_ObjectNode* (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*, ByRef<HoudiniEngineUnity::HAPI_ObjectInfo>, ByRef<HoudiniEngineUnity::HAPI_Transform>)>(&HoudiniEngineUnity::HEU_HoudiniAsset::CreateObjectNode)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* objectInfo = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_ObjectInfo")->this_arg;
    static auto* objectTranform = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HAPI_Transform")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "CreateObjectNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, objectInfo, objectTranform});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GenerateObjectsGeometry
// Il2CppName: GenerateObjectsGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*, bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GenerateObjectsGeometry)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* bRebuild = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GenerateObjectsGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, bRebuild});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GenerateAttributesStore
// Il2CppName: GenerateAttributesStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GenerateAttributesStore)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GenerateAttributesStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GenerateInstances
// Il2CppName: GenerateInstances
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GenerateInstances)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GenerateInstances", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GenerateHandles
// Il2CppName: GenerateHandles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GenerateHandles)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GenerateHandles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::CleanUpHandles
// Il2CppName: CleanUpHandles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::CleanUpHandles)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "CleanUpHandles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetHandleByName
// Il2CppName: GetHandleByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_Handle* (HoudiniEngineUnity::HEU_HoudiniAsset::*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetHandleByName)> {
  static const MethodInfo* get() {
    static auto* handleName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetHandleByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handleName});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetHandles
// Il2CppName: GetHandles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_Handle*>* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetHandles)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetHandles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::NumHandles
// Il2CppName: NumHandles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::NumHandles)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "NumHandles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetObjectTransform
// Il2CppName: GetObjectTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HAPI_Transform (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*, int)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetObjectTransform)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* objectID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetObjectTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, objectID});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetObjectWithID
// Il2CppName: GetObjectWithID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_ObjectNode* (HoudiniEngineUnity::HEU_HoudiniAsset::*)(int)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetObjectWithID)> {
  static const MethodInfo* get() {
    static auto* objId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetObjectWithID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objId});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::InvokeBakedEvent
// Il2CppName: InvokeBakedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool, System::Collections::Generic::List_1<UnityEngine::GameObject*>*, bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::InvokeBakedEvent)> {
  static const MethodInfo* get() {
    static auto* bSuccess = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* outputObjects = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    static auto* isNewBake = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "InvokeBakedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bSuccess, outputObjects, isNewBake});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::CloneAssetWithoutHDA
// Il2CppName: CloneAssetWithoutHDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (HoudiniEngineUnity::HEU_HoudiniAsset::*)(ByRef<::Il2CppString*>, bool, bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::CloneAssetWithoutHDA)> {
  static const MethodInfo* get() {
    static auto* bakedAssetPath = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    static auto* bWriteMeshesToAssetDatabase = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bReconnectPrefabInstances = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "CloneAssetWithoutHDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bakedAssetPath, bWriteMeshesToAssetDatabase, bReconnectPrefabInstances});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::BakeToNewPrefab
// Il2CppName: BakeToNewPrefab
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (HoudiniEngineUnity::HEU_HoudiniAsset::*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::BakeToNewPrefab)> {
  static const MethodInfo* get() {
    static auto* destinationPrefabPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "BakeToNewPrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destinationPrefabPath});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::BakeToNewStandalone
// Il2CppName: BakeToNewStandalone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::BakeToNewStandalone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "BakeToNewStandalone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::BakeToExistingPrefab
// Il2CppName: BakeToExistingPrefab
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::BakeToExistingPrefab)> {
  static const MethodInfo* get() {
    static auto* bakeTargetGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "BakeToExistingPrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bakeTargetGO});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::BakeToExistingStandalone
// Il2CppName: BakeToExistingStandalone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::BakeToExistingStandalone)> {
  static const MethodInfo* get() {
    static auto* bakeTargetGO = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "BakeToExistingStandalone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bakeTargetGO});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::NotifyUpstreamCooked
// Il2CppName: NotifyUpstreamCooked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_HoudiniAsset*, bool, System::Collections::Generic::List_1<UnityEngine::GameObject*>*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::NotifyUpstreamCooked)> {
  static const MethodInfo* get() {
    static auto* upstreamAsset = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset")->byval_arg;
    static auto* bSuccess = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* outputs = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "NotifyUpstreamCooked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{upstreamAsset, bSuccess, outputs});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ConnectToUpstream
// Il2CppName: ConnectToUpstream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_HoudiniAsset*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::ConnectToUpstream)> {
  static const MethodInfo* get() {
    static auto* upstreamAsset = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ConnectToUpstream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{upstreamAsset});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::DisconnectFromUpstream
// Il2CppName: DisconnectFromUpstream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_HoudiniAsset*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::DisconnectFromUpstream)> {
  static const MethodInfo* get() {
    static auto* upstreamAsset = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "DisconnectFromUpstream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{upstreamAsset});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::AddDownstreamConnection
// Il2CppName: AddDownstreamConnection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(UnityEngine::Events::UnityAction_3<HoudiniEngineUnity::HEU_HoudiniAsset*, bool, System::Collections::Generic::List_1<UnityEngine::GameObject*>*>*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::AddDownstreamConnection)> {
  static const MethodInfo* get() {
    static auto* receiver = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset"), ::il2cpp_utils::GetClassFromName("System", "Boolean"), ::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "AddDownstreamConnection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{receiver});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::RemoveDownstreamConnection
// Il2CppName: RemoveDownstreamConnection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(UnityEngine::Events::UnityAction_3<HoudiniEngineUnity::HEU_HoudiniAsset*, bool, System::Collections::Generic::List_1<UnityEngine::GameObject*>*>*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::RemoveDownstreamConnection)> {
  static const MethodInfo* get() {
    static auto* receiver = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset"), ::il2cpp_utils::GetClassFromName("System", "Boolean"), ::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "RemoveDownstreamConnection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{receiver});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ClearAllUpstreamConnections
// Il2CppName: ClearAllUpstreamConnections
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::ClearAllUpstreamConnections)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ClearAllUpstreamConnections", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::UpdateInputsOnAssetRecreation
// Il2CppName: UpdateInputsOnAssetRecreation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::UpdateInputsOnAssetRecreation)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "UpdateInputsOnAssetRecreation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ReconnectInputsUpstreamNotifications
// Il2CppName: ReconnectInputsUpstreamNotifications
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::ReconnectInputsUpstreamNotifications)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ReconnectInputsUpstreamNotifications", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetHoudiniTransformAndApply
// Il2CppName: GetHoudiniTransformAndApply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetHoudiniTransformAndApply)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetHoudiniTransformAndApply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::UploadUnityTransform
// Il2CppName: UploadUnityTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*, bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::UploadUnityTransform)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* bOnlySendIfChangedFromLastSync = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "UploadUnityTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, bOnlySendIfChangedFromLastSync});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetMaterialData
// Il2CppName: GetMaterialData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_MaterialData* (HoudiniEngineUnity::HEU_HoudiniAsset::*)(UnityEngine::Material*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetMaterialData)> {
  static const MethodInfo* get() {
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetMaterialData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{material});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetMaterialCache
// Il2CppName: GetMaterialCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_MaterialData*>* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetMaterialCache)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetMaterialCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ClearMaterialCache
// Il2CppName: ClearMaterialCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::ClearMaterialCache)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ClearMaterialCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::UpdateHoudiniMaterials
// Il2CppName: UpdateHoudiniMaterials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::UpdateHoudiniMaterials)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "UpdateHoudiniMaterials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::RemoveUnusedMaterials
// Il2CppName: RemoveUnusedMaterials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::RemoveUnusedMaterials)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "RemoveUnusedMaterials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::RemoveMaterial
// Il2CppName: RemoveMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(UnityEngine::Material*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::RemoveMaterial)> {
  static const MethodInfo* get() {
    static auto* material = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "RemoveMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{material});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::IsAssetValidInHoudini
// Il2CppName: IsAssetValidInHoudini
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::IsAssetValidInHoudini)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "IsAssetValidInHoudini", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::IsAssetValid
// Il2CppName: IsAssetValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::IsAssetValid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "IsAssetValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::HasTransformChangedSinceLastUpdate
// Il2CppName: HasTransformChangedSinceLastUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::HasTransformChangedSinceLastUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "HasTransformChangedSinceLastUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetClonableParts
// Il2CppName: GetClonableParts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_PartData*>*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetClonableParts)> {
  static const MethodInfo* get() {
    static auto* clonableParts = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_PartData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetClonableParts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clonableParts});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetOutputGameObjects
// Il2CppName: GetOutputGameObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(System::Collections::Generic::List_1<UnityEngine::GameObject*>*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetOutputGameObjects)> {
  static const MethodInfo* get() {
    static auto* outputObjects = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetOutputGameObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outputObjects});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetOutput
// Il2CppName: GetOutput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_GeneratedOutput*>*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetOutput)> {
  static const MethodInfo* get() {
    static auto* outputs = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_GeneratedOutput")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetOutput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outputs});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetOutputGeoNodes
// Il2CppName: GetOutputGeoNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_GeoNode*>*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetOutputGeoNodes)> {
  static const MethodInfo* get() {
    static auto* outputGeoNodes = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_GeoNode")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetOutputGeoNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outputGeoNodes});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetInternalHDAPartWithGameObject
// Il2CppName: GetInternalHDAPartWithGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_PartData* (HoudiniEngineUnity::HEU_HoudiniAsset::*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetInternalHDAPartWithGameObject)> {
  static const MethodInfo* get() {
    static auto* outputGameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetInternalHDAPartWithGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outputGameObject});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetCurves
// Il2CppName: GetCurves
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_Curve*>* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetCurves)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetCurves", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetCurve
// Il2CppName: GetCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_Curve* (HoudiniEngineUnity::HEU_HoudiniAsset::*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetCurve)> {
  static const MethodInfo* get() {
    static auto* curveName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{curveName});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ClearInvalidCurves
// Il2CppName: ClearInvalidCurves
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::ClearInvalidCurves)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ClearInvalidCurves", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetEditableCurveCount
// Il2CppName: GetEditableCurveCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetEditableCurveCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetEditableCurveCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::AddCurve
// Il2CppName: AddCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_Curve*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::AddCurve)> {
  static const MethodInfo* get() {
    static auto* curve = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_Curve")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "AddCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{curve});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::RemoveCurve
// Il2CppName: RemoveCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_Curve*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::RemoveCurve)> {
  static const MethodInfo* get() {
    static auto* curve = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_Curve")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "RemoveCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{curve});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::AddCurveDrawCollider
// Il2CppName: AddCurveDrawCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(UnityEngine::Collider*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::AddCurveDrawCollider)> {
  static const MethodInfo* get() {
    static auto* newCollider = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "AddCurveDrawCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newCollider});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::RemoveCurveDrawCollider
// Il2CppName: RemoveCurveDrawCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(UnityEngine::Collider*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::RemoveCurveDrawCollider)> {
  static const MethodInfo* get() {
    static auto* collider = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "RemoveCurveDrawCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{collider});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ClearCurveDrawColliders
// Il2CppName: ClearCurveDrawColliders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::ClearCurveDrawColliders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ClearCurveDrawColliders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetInputNodes
// Il2CppName: GetInputNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_InputNode*>* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetInputNodes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetInputNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetInputNode
// Il2CppName: GetInputNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_InputNode* (HoudiniEngineUnity::HEU_HoudiniAsset::*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetInputNode)> {
  static const MethodInfo* get() {
    static auto* inputName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetInputNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputName});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetAssetInputNode
// Il2CppName: GetAssetInputNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_InputNode* (HoudiniEngineUnity::HEU_HoudiniAsset::*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetAssetInputNode)> {
  static const MethodInfo* get() {
    static auto* inputName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetAssetInputNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputName});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetInputNodeByIndex
// Il2CppName: GetInputNodeByIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_InputNode* (HoudiniEngineUnity::HEU_HoudiniAsset::*)(int)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetInputNodeByIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetInputNodeByIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetNonParameterInputNodes
// Il2CppName: GetNonParameterInputNodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_InputNode*>* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetNonParameterInputNodes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetNonParameterInputNodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::AddInputNode
// Il2CppName: AddInputNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_InputNode*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::AddInputNode)> {
  static const MethodInfo* get() {
    static auto* node = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_InputNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "AddInputNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{node});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::RemoveInputNode
// Il2CppName: RemoveInputNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_InputNode*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::RemoveInputNode)> {
  static const MethodInfo* get() {
    static auto* node = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_InputNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "RemoveInputNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{node});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::InputNodeNotifyRemoved
// Il2CppName: InputNodeNotifyRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_InputNode*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::InputNodeNotifyRemoved)> {
  static const MethodInfo* get() {
    static auto* node = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_InputNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "InputNodeNotifyRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{node});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetVolumeCacheCount
// Il2CppName: GetVolumeCacheCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetVolumeCacheCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetVolumeCacheCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetVolumeCaches
// Il2CppName: GetVolumeCaches
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_VolumeCache*>* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetVolumeCaches)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetVolumeCaches", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::AddVolumeCache
// Il2CppName: AddVolumeCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_VolumeCache*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::AddVolumeCache)> {
  static const MethodInfo* get() {
    static auto* cache = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_VolumeCache")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "AddVolumeCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cache});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::RemoveVolumeCache
// Il2CppName: RemoveVolumeCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_VolumeCache*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::RemoveVolumeCache)> {
  static const MethodInfo* get() {
    static auto* cache = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_VolumeCache")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "RemoveVolumeCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cache});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetAttributesStores
// Il2CppName: GetAttributesStores
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_AttributesStore*>* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetAttributesStores)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetAttributesStores", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::NumAttributeStores
// Il2CppName: NumAttributeStores
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::NumAttributeStores)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "NumAttributeStores", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetAttributeStore
// Il2CppName: GetAttributeStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_AttributesStore* (HoudiniEngineUnity::HEU_HoudiniAsset::*)(::Il2CppString*, int)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetAttributeStore)> {
  static const MethodInfo* get() {
    static auto* geoName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetAttributeStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{geoName, partID});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::AddAttributeStore
// Il2CppName: AddAttributeStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_AttributesStore*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::AddAttributeStore)> {
  static const MethodInfo* get() {
    static auto* attributeStore = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_AttributesStore")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "AddAttributeStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attributeStore});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::RemoveAttributeStore
// Il2CppName: RemoveAttributeStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_AttributesStore*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::RemoveAttributeStore)> {
  static const MethodInfo* get() {
    static auto* attributeStore = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_AttributesStore")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "RemoveAttributeStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attributeStore});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ReorderAttributeStore
// Il2CppName: ReorderAttributeStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(int, int)>(&HoudiniEngineUnity::HEU_HoudiniAsset::ReorderAttributeStore)> {
  static const MethodInfo* get() {
    static auto* oldIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* newIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ReorderAttributeStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldIndex, newIndex});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetSceneHDAPartWithGameObject
// Il2CppName: GetSceneHDAPartWithGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_PartData* (*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetSceneHDAPartWithGameObject)> {
  static const MethodInfo* get() {
    static auto* outputGameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetSceneHDAPartWithGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outputGameObject});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetSceneHDAAssetFromGameObject
// Il2CppName: GetSceneHDAAssetFromGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_HoudiniAsset* (*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetSceneHDAAssetFromGameObject)> {
  static const MethodInfo* get() {
    static auto* outputGameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetSceneHDAAssetFromGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outputGameObject});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::IsHoudiniAssetOutput
// Il2CppName: IsHoudiniAssetOutput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::IsHoudiniAssetOutput)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "IsHoudiniAssetOutput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::IsHoudiniAssetRoot
// Il2CppName: IsHoudiniAssetRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::IsHoudiniAssetRoot)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "IsHoudiniAssetRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::PopulateObjectInstanceInfos
// Il2CppName: PopulateObjectInstanceInfos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_ObjectInstanceInfo*>*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::PopulateObjectInstanceInfos)> {
  static const MethodInfo* get() {
    static auto* objInstanceInfos = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_ObjectInstanceInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "PopulateObjectInstanceInfos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objInstanceInfos});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::AddToAssetDBCache
// Il2CppName: AddToAssetDBCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(::Il2CppString*, UnityEngine::Object*, ::Il2CppString*, ByRef<UnityEngine::Object*>)>(&HoudiniEngineUnity::HEU_HoudiniAsset::AddToAssetDBCache)> {
  static const MethodInfo* get() {
    static auto* assetObjectFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* objectToAdd = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    static auto* relativeFolderPath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* targetAssetDBObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "AddToAssetDBCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetObjectFileName, objectToAdd, relativeFolderPath, targetAssetDBObject});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::SetCurvesVisibilityInScene
// Il2CppName: SetCurvesVisibilityInScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::SetCurvesVisibilityInScene)> {
  static const MethodInfo* get() {
    static auto* bShow = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "SetCurvesVisibilityInScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bShow});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetAssetSession
// Il2CppName: GetAssetSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_SessionBase* (HoudiniEngineUnity::HEU_HoudiniAsset::*)(bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetAssetSession)> {
  static const MethodInfo* get() {
    static auto* bCreateIfInvalid = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetAssetSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bCreateIfInvalid});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetValidAssetCacheFolderPath
// Il2CppName: GetValidAssetCacheFolderPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetValidAssetCacheFolderPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetValidAssetCacheFolderPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::HideAllGeometry
// Il2CppName: HideAllGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::HideAllGeometry)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "HideAllGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::CalculateVisibility
// Il2CppName: CalculateVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::CalculateVisibility)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "CalculateVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::DisableAllColliders
// Il2CppName: DisableAllColliders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::DisableAllColliders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "DisableAllColliders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::CalculateColliderState
// Il2CppName: CalculateColliderState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::CalculateColliderState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "CalculateColliderState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::DuplicateAsset
// Il2CppName: DuplicateAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (HoudiniEngineUnity::HEU_HoudiniAsset::*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::DuplicateAsset)> {
  static const MethodInfo* get() {
    static auto* newRootGameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "DuplicateAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newRootGameObject});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetObjectNodeByName
// Il2CppName: GetObjectNodeByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_ObjectNode* (HoudiniEngineUnity::HEU_HoudiniAsset::*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetObjectNodeByName)> {
  static const MethodInfo* get() {
    static auto* objName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetObjectNodeByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objName});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ResetMaterialOverrides
// Il2CppName: ResetMaterialOverrides
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::ResetMaterialOverrides)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ResetMaterialOverrides", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ResetParametersToDefault
// Il2CppName: ResetParametersToDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::ResetParametersToDefault)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ResetParametersToDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetAssetPreset
// Il2CppName: GetAssetPreset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_AssetPreset* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetAssetPreset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetAssetPreset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::LoadAssetPresetAndCook
// Il2CppName: LoadAssetPresetAndCook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_AssetPreset*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::LoadAssetPresetAndCook)> {
  static const MethodInfo* get() {
    static auto* assetPreset = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_AssetPreset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "LoadAssetPresetAndCook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetPreset});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ApplyRecookPreset
// Il2CppName: ApplyRecookPreset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::ApplyRecookPreset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ApplyRecookPreset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ApplyInputPresets
// Il2CppName: ApplyInputPresets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_SessionBase*, System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_InputPreset*>*, bool)>(&HoudiniEngineUnity::HEU_HoudiniAsset::ApplyInputPresets)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* inputPresets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_InputPreset")})->byval_arg;
    static auto* bAddMissingInputsToRecookPreset = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ApplyInputPresets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, inputPresets, bAddMissingInputsToRecookPreset});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetVolumeCachePreset
// Il2CppName: GetVolumeCachePreset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_VolumeCachePreset* (HoudiniEngineUnity::HEU_HoudiniAsset::*)(::Il2CppString*, ::Il2CppString*, int)>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetVolumeCachePreset)> {
  static const MethodInfo* get() {
    static auto* objName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* geoName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* tile = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetVolumeCachePreset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objName, geoName, tile});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::RemoveVolumeCachePreset
// Il2CppName: RemoveVolumeCachePreset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_VolumeCachePreset*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::RemoveVolumeCachePreset)> {
  static const MethodInfo* get() {
    static auto* preset = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_VolumeCachePreset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "RemoveVolumeCachePreset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{preset});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ApplyVolumeCachePresets
// Il2CppName: ApplyVolumeCachePresets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_VolumeCachePreset*>*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::ApplyVolumeCachePresets)> {
  static const MethodInfo* get() {
    static auto* volumeCachePresets = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_VolumeCachePreset")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ApplyVolumeCachePresets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{volumeCachePresets});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::SyncInternalParametersForUndoCompare
// Il2CppName: SyncInternalParametersForUndoCompare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::SyncInternalParametersForUndoCompare)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "SyncInternalParametersForUndoCompare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::UpdateSessionSync
// Il2CppName: UpdateSessionSync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::UpdateSessionSync)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "UpdateSessionSync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::UpdateTotalCookCount
// Il2CppName: UpdateTotalCookCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::UpdateTotalCookCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "UpdateTotalCookCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ResetAndCopyInstantiatedProperties
// Il2CppName: ResetAndCopyInstantiatedProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_HoudiniAsset*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::ResetAndCopyInstantiatedProperties)> {
  static const MethodInfo* get() {
    static auto* newAsset = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ResetAndCopyInstantiatedProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newAsset});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetInstantiationMethod
// Il2CppName: GetInstantiationMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_HoudiniAsset::AssetInstantiationMethod (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetInstantiationMethod)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetInstantiationMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::GetInstantiatedObject
// Il2CppName: GetInstantiatedObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_HoudiniAsset* (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::GetInstantiatedObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "GetInstantiatedObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::ClearInvalidLists
// Il2CppName: ClearInvalidLists
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::ClearInvalidLists)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "ClearInvalidLists", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::CopyPropertiesTo
// Il2CppName: CopyPropertiesTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_HoudiniAsset*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::CopyPropertiesTo)> {
  static const MethodInfo* get() {
    static auto* newAsset = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "CopyPropertiesTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newAsset});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::SetSoftDeleted
// Il2CppName: SetSoftDeleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_HoudiniAsset::*)()>(&HoudiniEngineUnity::HEU_HoudiniAsset::SetSoftDeleted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "SetSoftDeleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::IsEquivalentTo
// Il2CppName: IsEquivalentTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_HoudiniAsset::*)(HoudiniEngineUnity::HEU_HoudiniAsset*)>(&HoudiniEngineUnity::HEU_HoudiniAsset::IsEquivalentTo)> {
  static const MethodInfo* get() {
    static auto* asset = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_HoudiniAsset*), "IsEquivalentTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asset});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_HoudiniAsset::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
