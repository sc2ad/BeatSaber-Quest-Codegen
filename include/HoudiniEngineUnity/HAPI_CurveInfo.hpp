// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: HoudiniEngineUnity.HAPI_CurveType
#include "HoudiniEngineUnity/HAPI_CurveType.hpp"
// Completed includes
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Size: 0x19
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: HoudiniEngineUnity.HAPI_CurveInfo
  // [TokenAttribute] Offset: FFFFFFFF
  struct HAPI_CurveInfo/*, public System::ValueType*/ {
    public:
    // public HoudiniEngineUnity.HAPI_CurveType curveType
    // Size: 0x4
    // Offset: 0x0
    HoudiniEngineUnity::HAPI_CurveType curveType;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HAPI_CurveType) == 0x4);
    // public System.Int32 curveCount
    // Size: 0x4
    // Offset: 0x4
    int curveCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 vertexCount
    // Size: 0x4
    // Offset: 0x8
    int vertexCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 knotCount
    // Size: 0x4
    // Offset: 0xC
    int knotCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean isPeriodic
    // Size: 0x1
    // Offset: 0x10
    bool isPeriodic;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean isRational
    // Size: 0x1
    // Offset: 0x11
    bool isRational;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isRational and: order
    char __padding5[0x2] = {};
    // public System.Int32 order
    // Size: 0x4
    // Offset: 0x14
    int order;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean hasKnots
    // Size: 0x1
    // Offset: 0x18
    bool hasKnots;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: HAPI_CurveInfo
    constexpr HAPI_CurveInfo(HoudiniEngineUnity::HAPI_CurveType curveType_ = {}, int curveCount_ = {}, int vertexCount_ = {}, int knotCount_ = {}, bool isPeriodic_ = {}, bool isRational_ = {}, int order_ = {}, bool hasKnots_ = {}) noexcept : curveType{curveType_}, curveCount{curveCount_}, vertexCount{vertexCount_}, knotCount{knotCount_}, isPeriodic{isPeriodic_}, isRational{isRational_}, order{order_}, hasKnots{hasKnots_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // Get instance field reference: public HoudiniEngineUnity.HAPI_CurveType curveType
    HoudiniEngineUnity::HAPI_CurveType& dyn_curveType();
    // Get instance field reference: public System.Int32 curveCount
    int& dyn_curveCount();
    // Get instance field reference: public System.Int32 vertexCount
    int& dyn_vertexCount();
    // Get instance field reference: public System.Int32 knotCount
    int& dyn_knotCount();
    // Get instance field reference: public System.Boolean isPeriodic
    bool& dyn_isPeriodic();
    // Get instance field reference: public System.Boolean isRational
    bool& dyn_isRational();
    // Get instance field reference: public System.Int32 order
    int& dyn_order();
    // Get instance field reference: public System.Boolean hasKnots
    bool& dyn_hasKnots();
  }; // HoudiniEngineUnity.HAPI_CurveInfo
  #pragma pack(pop)
  static check_size<sizeof(HAPI_CurveInfo), 24 + sizeof(bool)> __HoudiniEngineUnity_HAPI_CurveInfoSizeCheck;
  static_assert(sizeof(HAPI_CurveInfo) == 0x19);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HAPI_CurveInfo, "HoudiniEngineUnity", "HAPI_CurveInfo");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
