// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: HoudiniEngineUnity.HEU_InputInterfaceMesh
#include "HoudiniEngineUnity/HEU_InputInterfaceMesh.hpp"
// Including type: HoudiniEngineUnity.HEU_InputData
#include "HoudiniEngineUnity/HEU_InputData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: HoudiniEngineUnity.HEU_InputInterfaceMesh/HEU_InputDataMeshes
  // [TokenAttribute] Offset: FFFFFFFF
  class HEU_InputInterfaceMesh::HEU_InputDataMeshes : public HoudiniEngineUnity::HEU_InputData {
    public:
    // public System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_InputInterfaceMesh/HEU_InputDataMesh> _inputMeshes
    // Size: 0x8
    // Offset: 0x18
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_InputInterfaceMesh::HEU_InputDataMesh*>* inputMeshes;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_InputInterfaceMesh::HEU_InputDataMesh*>*) == 0x8);
    // public System.Boolean _hasLOD
    // Size: 0x1
    // Offset: 0x20
    bool hasLOD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Creating value type constructor for type: HEU_InputDataMeshes
    HEU_InputDataMeshes(System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_InputInterfaceMesh::HEU_InputDataMesh*>* inputMeshes_ = {}, bool hasLOD_ = {}) noexcept : inputMeshes{inputMeshes_}, hasLOD{hasLOD_} {}
    // Deleting conversion operator: operator UnityEngine::GameObject*
    constexpr operator UnityEngine::GameObject*() const noexcept = delete;
    // Get instance field reference: public System.Collections.Generic.List`1<HoudiniEngineUnity.HEU_InputInterfaceMesh/HEU_InputDataMesh> _inputMeshes
    System::Collections::Generic::List_1<HoudiniEngineUnity::HEU_InputInterfaceMesh::HEU_InputDataMesh*>*& dyn__inputMeshes();
    // Get instance field reference: public System.Boolean _hasLOD
    bool& dyn__hasLOD();
    // public System.Void .ctor()
    // Offset: 0x152072C
    // Implemented from: HoudiniEngineUnity.HEU_InputData
    // Base method: System.Void HEU_InputData::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HEU_InputInterfaceMesh::HEU_InputDataMeshes* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_InputInterfaceMesh::HEU_InputDataMeshes::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HEU_InputInterfaceMesh::HEU_InputDataMeshes*, creationType>()));
    }
  }; // HoudiniEngineUnity.HEU_InputInterfaceMesh/HEU_InputDataMeshes
  #pragma pack(pop)
  static check_size<sizeof(HEU_InputInterfaceMesh::HEU_InputDataMeshes), 32 + sizeof(bool)> __HoudiniEngineUnity_HEU_InputInterfaceMesh_HEU_InputDataMeshesSizeCheck;
  static_assert(sizeof(HEU_InputInterfaceMesh::HEU_InputDataMeshes) == 0x21);
}
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HEU_InputInterfaceMesh::HEU_InputDataMeshes*, "HoudiniEngineUnity", "HEU_InputInterfaceMesh/HEU_InputDataMeshes");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_InputInterfaceMesh::HEU_InputDataMeshes::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
