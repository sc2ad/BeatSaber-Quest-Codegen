// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Size: 0xC
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: HoudiniEngineUnity.HAPI_ImageFileFormat
  // [TokenAttribute] Offset: FFFFFFFF
  struct HAPI_ImageFileFormat/*, public System::ValueType*/ {
    public:
    // public System.Int32 nameSH
    // Size: 0x4
    // Offset: 0x0
    int nameSH;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 descriptionSH
    // Size: 0x4
    // Offset: 0x4
    int descriptionSH;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 defaultExtensionSH
    // Size: 0x4
    // Offset: 0x8
    int defaultExtensionSH;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: HAPI_ImageFileFormat
    constexpr HAPI_ImageFileFormat(int nameSH_ = {}, int descriptionSH_ = {}, int defaultExtensionSH_ = {}) noexcept : nameSH{nameSH_}, descriptionSH{descriptionSH_}, defaultExtensionSH{defaultExtensionSH_} {}
    // Creating interface conversion operator: operator System::ValueType
    operator System::ValueType() noexcept {
      return *reinterpret_cast<System::ValueType*>(this);
    }
    // Get instance field reference: public System.Int32 nameSH
    int& dyn_nameSH();
    // Get instance field reference: public System.Int32 descriptionSH
    int& dyn_descriptionSH();
    // Get instance field reference: public System.Int32 defaultExtensionSH
    int& dyn_defaultExtensionSH();
  }; // HoudiniEngineUnity.HAPI_ImageFileFormat
  #pragma pack(pop)
  static check_size<sizeof(HAPI_ImageFileFormat), 8 + sizeof(int)> __HoudiniEngineUnity_HAPI_ImageFileFormatSizeCheck;
  static_assert(sizeof(HAPI_ImageFileFormat) == 0xC);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HAPI_ImageFileFormat, "HoudiniEngineUnity", "HAPI_ImageFileFormat");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
