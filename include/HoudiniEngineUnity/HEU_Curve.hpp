// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: HoudiniEngineUnity.IEquivable`1
#include "HoudiniEngineUnity/IEquivable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Forward declaring type: HEU_HoudiniAsset
  class HEU_HoudiniAsset;
  // Skipping declaration: CurveEditState because it is already included!
  // Forward declaring type: CurveNodeData
  class CurveNodeData;
  // Forward declaring type: HEU_Parameters
  class HEU_Parameters;
  // Forward declaring type: HEU_SessionBase
  class HEU_SessionBase;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: HoudiniEngineUnity.HEU_Curve
  // [TokenAttribute] Offset: FFFFFFFF
  class HEU_Curve : public UnityEngine::ScriptableObject/*, public HoudiniEngineUnity::IEquivable_1<HoudiniEngineUnity::HEU_Curve*>*/ {
    public:
    // Nested type: HoudiniEngineUnity::HEU_Curve::CurveEditState
    struct CurveEditState;
    // Nested type: HoudiniEngineUnity::HEU_Curve::Interaction
    struct Interaction;
    // Nested type: HoudiniEngineUnity::HEU_Curve::CurveDrawCollision
    struct CurveDrawCollision;
    // Nested type: HoudiniEngineUnity::HEU_Curve::$$c__DisplayClass38_0
    class $$c__DisplayClass38_0;
    // Nested type: HoudiniEngineUnity::HEU_Curve::$$c__DisplayClass40_0
    class $$c__DisplayClass40_0;
    // Nested type: HoudiniEngineUnity::HEU_Curve::$$c__DisplayClass48_0
    class $$c__DisplayClass48_0;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: HoudiniEngineUnity.HEU_Curve/CurveEditState
    // [TokenAttribute] Offset: FFFFFFFF
    struct CurveEditState/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: CurveEditState
      constexpr CurveEditState(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public HoudiniEngineUnity.HEU_Curve/CurveEditState INVALID
      static constexpr const int INVALID = 0;
      // Get static field: static public HoudiniEngineUnity.HEU_Curve/CurveEditState INVALID
      static HoudiniEngineUnity::HEU_Curve::CurveEditState _get_INVALID();
      // Set static field: static public HoudiniEngineUnity.HEU_Curve/CurveEditState INVALID
      static void _set_INVALID(HoudiniEngineUnity::HEU_Curve::CurveEditState value);
      // static field const value: static public HoudiniEngineUnity.HEU_Curve/CurveEditState GENERATED
      static constexpr const int GENERATED = 1;
      // Get static field: static public HoudiniEngineUnity.HEU_Curve/CurveEditState GENERATED
      static HoudiniEngineUnity::HEU_Curve::CurveEditState _get_GENERATED();
      // Set static field: static public HoudiniEngineUnity.HEU_Curve/CurveEditState GENERATED
      static void _set_GENERATED(HoudiniEngineUnity::HEU_Curve::CurveEditState value);
      // static field const value: static public HoudiniEngineUnity.HEU_Curve/CurveEditState EDITING
      static constexpr const int EDITING = 2;
      // Get static field: static public HoudiniEngineUnity.HEU_Curve/CurveEditState EDITING
      static HoudiniEngineUnity::HEU_Curve::CurveEditState _get_EDITING();
      // Set static field: static public HoudiniEngineUnity.HEU_Curve/CurveEditState EDITING
      static void _set_EDITING(HoudiniEngineUnity::HEU_Curve::CurveEditState value);
      // static field const value: static public HoudiniEngineUnity.HEU_Curve/CurveEditState REQUIRES_GENERATION
      static constexpr const int REQUIRES_GENERATION = 3;
      // Get static field: static public HoudiniEngineUnity.HEU_Curve/CurveEditState REQUIRES_GENERATION
      static HoudiniEngineUnity::HEU_Curve::CurveEditState _get_REQUIRES_GENERATION();
      // Set static field: static public HoudiniEngineUnity.HEU_Curve/CurveEditState REQUIRES_GENERATION
      static void _set_REQUIRES_GENERATION(HoudiniEngineUnity::HEU_Curve::CurveEditState value);
      // Get instance field reference: public System.Int32 value__
      int& dyn_value__();
    }; // HoudiniEngineUnity.HEU_Curve/CurveEditState
    #pragma pack(pop)
    static check_size<sizeof(HEU_Curve::CurveEditState), 0 + sizeof(int)> __HoudiniEngineUnity_HEU_Curve_CurveEditStateSizeCheck;
    static_assert(sizeof(HEU_Curve::CurveEditState) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: HoudiniEngineUnity.HEU_Curve/Interaction
    // [TokenAttribute] Offset: FFFFFFFF
    struct Interaction/*, public System::Enum*/ {
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Creating value type constructor for type: Interaction
      constexpr Interaction(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public HoudiniEngineUnity.HEU_Curve/Interaction VIEW
      static constexpr const int VIEW = 0;
      // Get static field: static public HoudiniEngineUnity.HEU_Curve/Interaction VIEW
      static HoudiniEngineUnity::HEU_Curve::Interaction _get_VIEW();
      // Set static field: static public HoudiniEngineUnity.HEU_Curve/Interaction VIEW
      static void _set_VIEW(HoudiniEngineUnity::HEU_Curve::Interaction value);
      // static field const value: static public HoudiniEngineUnity.HEU_Curve/Interaction ADD
      static constexpr const int ADD = 1;
      // Get static field: static public HoudiniEngineUnity.HEU_Curve/Interaction ADD
      static HoudiniEngineUnity::HEU_Curve::Interaction _get_ADD();
      // Set static field: static public HoudiniEngineUnity.HEU_Curve/Interaction ADD
      static void _set_ADD(HoudiniEngineUnity::HEU_Curve::Interaction value);
      // static field const value: static public HoudiniEngineUnity.HEU_Curve/Interaction EDIT
      static constexpr const int EDIT = 2;
      // Get static field: static public HoudiniEngineUnity.HEU_Curve/Interaction EDIT
      static HoudiniEngineUnity::HEU_Curve::Interaction _get_EDIT();
      // Set static field: static public HoudiniEngineUnity.HEU_Curve/Interaction EDIT
      static void _set_EDIT(HoudiniEngineUnity::HEU_Curve::Interaction value);
      // Get instance field reference: public System.Int32 value__
      int& dyn_value__();
    }; // HoudiniEngineUnity.HEU_Curve/Interaction
    #pragma pack(pop)
    static check_size<sizeof(HEU_Curve::Interaction), 0 + sizeof(int)> __HoudiniEngineUnity_HEU_Curve_InteractionSizeCheck;
    static_assert(sizeof(HEU_Curve::Interaction) == 0x4);
    // private System.Int32 _geoID
    // Size: 0x4
    // Offset: 0x18
    int geoID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: geoID and: curveNodeData
    char __padding0[0x4] = {};
    // private System.Collections.Generic.List`1<HoudiniEngineUnity.CurveNodeData> _curveNodeData
    // Size: 0x8
    // Offset: 0x20
    System::Collections::Generic::List_1<HoudiniEngineUnity::CurveNodeData*>* curveNodeData;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<HoudiniEngineUnity::CurveNodeData*>*) == 0x8);
    // private UnityEngine.Vector3[] _vertices
    // Size: 0x8
    // Offset: 0x28
    ::Array<UnityEngine::Vector3>* vertices;
    // Field size check
    static_assert(sizeof(::Array<UnityEngine::Vector3>*) == 0x8);
    // private System.Boolean _isEditable
    // Size: 0x1
    // Offset: 0x30
    bool isEditable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isEditable and: parameters
    char __padding3[0x7] = {};
    // private HoudiniEngineUnity.HEU_Parameters _parameters
    // Size: 0x8
    // Offset: 0x38
    HoudiniEngineUnity::HEU_Parameters* parameters;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_Parameters*) == 0x8);
    // private System.Boolean _bUploadParameterPreset
    // Size: 0x1
    // Offset: 0x40
    bool bUploadParameterPreset;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: bUploadParameterPreset and: curveName
    char __padding5[0x7] = {};
    // private System.String _curveName
    // Size: 0x8
    // Offset: 0x48
    ::Il2CppString* curveName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // public UnityEngine.GameObject _targetGameObject
    // Size: 0x8
    // Offset: 0x50
    UnityEngine::GameObject* targetGameObject;
    // Field size check
    static_assert(sizeof(UnityEngine::GameObject*) == 0x8);
    // private System.Boolean _isGeoCurve
    // Size: 0x1
    // Offset: 0x58
    bool isGeoCurve;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isGeoCurve and: editState
    char __padding8[0x3] = {};
    // private HoudiniEngineUnity.HEU_Curve/CurveEditState _editState
    // Size: 0x4
    // Offset: 0x5C
    HoudiniEngineUnity::HEU_Curve::CurveEditState editState;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_Curve::CurveEditState) == 0x4);
    // private HoudiniEngineUnity.HEU_HoudiniAsset _parentAsset
    // Size: 0x8
    // Offset: 0x60
    HoudiniEngineUnity::HEU_HoudiniAsset* parentAsset;
    // Field size check
    static_assert(sizeof(HoudiniEngineUnity::HEU_HoudiniAsset*) == 0x8);
    // Creating value type constructor for type: HEU_Curve
    HEU_Curve(int geoID_ = {}, System::Collections::Generic::List_1<HoudiniEngineUnity::CurveNodeData*>* curveNodeData_ = {}, ::Array<UnityEngine::Vector3>* vertices_ = {}, bool isEditable_ = {}, HoudiniEngineUnity::HEU_Parameters* parameters_ = {}, bool bUploadParameterPreset_ = {}, ::Il2CppString* curveName_ = {}, UnityEngine::GameObject* targetGameObject_ = {}, bool isGeoCurve_ = {}, HoudiniEngineUnity::HEU_Curve::CurveEditState editState_ = {}, HoudiniEngineUnity::HEU_HoudiniAsset* parentAsset_ = {}) noexcept : geoID{geoID_}, curveNodeData{curveNodeData_}, vertices{vertices_}, isEditable{isEditable_}, parameters{parameters_}, bUploadParameterPreset{bUploadParameterPreset_}, curveName{curveName_}, targetGameObject{targetGameObject_}, isGeoCurve{isGeoCurve_}, editState{editState_}, parentAsset{parentAsset_} {}
    // Creating interface conversion operator: operator HoudiniEngineUnity::IEquivable_1<HoudiniEngineUnity::HEU_Curve*>
    operator HoudiniEngineUnity::IEquivable_1<HoudiniEngineUnity::HEU_Curve*>() noexcept {
      return *reinterpret_cast<HoudiniEngineUnity::IEquivable_1<HoudiniEngineUnity::HEU_Curve*>*>(this);
    }
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // Get static field: static public HoudiniEngineUnity.HEU_Curve/Interaction PreferredNextInteractionMode
    static HoudiniEngineUnity::HEU_Curve::Interaction _get_PreferredNextInteractionMode();
    // Set static field: static public HoudiniEngineUnity.HEU_Curve/Interaction PreferredNextInteractionMode
    static void _set_PreferredNextInteractionMode(HoudiniEngineUnity::HEU_Curve::Interaction value);
    // Get instance field reference: private System.Int32 _geoID
    int& dyn__geoID();
    // Get instance field reference: private System.Collections.Generic.List`1<HoudiniEngineUnity.CurveNodeData> _curveNodeData
    System::Collections::Generic::List_1<HoudiniEngineUnity::CurveNodeData*>*& dyn__curveNodeData();
    // Get instance field reference: private UnityEngine.Vector3[] _vertices
    ::Array<UnityEngine::Vector3>*& dyn__vertices();
    // Get instance field reference: private System.Boolean _isEditable
    bool& dyn__isEditable();
    // Get instance field reference: private HoudiniEngineUnity.HEU_Parameters _parameters
    HoudiniEngineUnity::HEU_Parameters*& dyn__parameters();
    // Get instance field reference: private System.Boolean _bUploadParameterPreset
    bool& dyn__bUploadParameterPreset();
    // Get instance field reference: private System.String _curveName
    ::Il2CppString*& dyn__curveName();
    // Get instance field reference: public UnityEngine.GameObject _targetGameObject
    UnityEngine::GameObject*& dyn__targetGameObject();
    // Get instance field reference: private System.Boolean _isGeoCurve
    bool& dyn__isGeoCurve();
    // Get instance field reference: private HoudiniEngineUnity.HEU_Curve/CurveEditState _editState
    HoudiniEngineUnity::HEU_Curve::CurveEditState& dyn__editState();
    // Get instance field reference: private HoudiniEngineUnity.HEU_HoudiniAsset _parentAsset
    HoudiniEngineUnity::HEU_HoudiniAsset*& dyn__parentAsset();
    // public System.Int32 get_GeoID()
    // Offset: 0x1447048
    int get_GeoID();
    // public System.Collections.Generic.List`1<HoudiniEngineUnity.CurveNodeData> get_CurveNodeData()
    // Offset: 0x1447050
    System::Collections::Generic::List_1<HoudiniEngineUnity::CurveNodeData*>* get_CurveNodeData();
    // public System.Boolean IsEditable()
    // Offset: 0x1447058
    bool IsEditable();
    // public HoudiniEngineUnity.HEU_Parameters get_Parameters()
    // Offset: 0x1447060
    HoudiniEngineUnity::HEU_Parameters* get_Parameters();
    // public System.Void SetUploadParameterPreset(System.Boolean bValue)
    // Offset: 0x1447068
    void SetUploadParameterPreset(bool bValue);
    // public System.String get_CurveName()
    // Offset: 0x1447074
    ::Il2CppString* get_CurveName();
    // public System.Boolean IsGeoCurve()
    // Offset: 0x144707C
    bool IsGeoCurve();
    // public HoudiniEngineUnity.HEU_Curve/CurveEditState get_EditState()
    // Offset: 0x1447084
    HoudiniEngineUnity::HEU_Curve::CurveEditState get_EditState();
    // public HoudiniEngineUnity.HEU_HoudiniAsset get_ParentAsset()
    // Offset: 0x144708C
    HoudiniEngineUnity::HEU_HoudiniAsset* get_ParentAsset();
    // static public HoudiniEngineUnity.HEU_Curve CreateSetupCurve(HoudiniEngineUnity.HEU_HoudiniAsset parentAsset, System.Boolean isEditable, System.String curveName, System.Int32 geoID, System.Boolean bGeoCurve)
    // Offset: 0x1447094
    static HoudiniEngineUnity::HEU_Curve* CreateSetupCurve(HoudiniEngineUnity::HEU_HoudiniAsset* parentAsset, bool isEditable, ::Il2CppString* curveName, int geoID, bool bGeoCurve);
    // public System.Void DestroyAllData(System.Boolean bIsRebuild)
    // Offset: 0x14471FC
    void DestroyAllData(bool bIsRebuild);
    // public System.Void SetCurveName(System.String name)
    // Offset: 0x144735C
    void SetCurveName(::Il2CppString* name);
    // public System.Void UploadParameterPreset(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 geoID, HoudiniEngineUnity.HEU_HoudiniAsset parentAsset)
    // Offset: 0x1447408
    void UploadParameterPreset(HoudiniEngineUnity::HEU_SessionBase* session, int geoID, HoudiniEngineUnity::HEU_HoudiniAsset* parentAsset);
    // public System.Void ResetCurveParameters(HoudiniEngineUnity.HEU_SessionBase session, HoudiniEngineUnity.HEU_HoudiniAsset parentAsset)
    // Offset: 0x1447508
    void ResetCurveParameters(HoudiniEngineUnity::HEU_SessionBase* session, HoudiniEngineUnity::HEU_HoudiniAsset* parentAsset);
    // public System.Void SetCurveParameterPreset(HoudiniEngineUnity.HEU_SessionBase session, HoudiniEngineUnity.HEU_HoudiniAsset parentAsset, System.Byte[] parameterPreset)
    // Offset: 0x14475E8
    void SetCurveParameterPreset(HoudiniEngineUnity::HEU_SessionBase* session, HoudiniEngineUnity::HEU_HoudiniAsset* parentAsset, ::Array<uint8_t>* parameterPreset);
    // public System.Void UpdateCurve(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 partID)
    // Offset: 0x14476D0
    void UpdateCurve(HoudiniEngineUnity::HEU_SessionBase* session, int partID);
    // public System.Void GenerateMesh(UnityEngine.GameObject inGameObject)
    // Offset: 0x1447914
    void GenerateMesh(UnityEngine::GameObject* inGameObject);
    // public System.Boolean UpdateCurveInputForCustomAttributes(HoudiniEngineUnity.HEU_SessionBase session, HoudiniEngineUnity.HEU_HoudiniAsset parentAsset)
    // Offset: 0x1447C80
    bool UpdateCurveInputForCustomAttributes(HoudiniEngineUnity::HEU_SessionBase* session, HoudiniEngineUnity::HEU_HoudiniAsset* parentAsset);
    // public System.Void SyncFromParameters(HoudiniEngineUnity.HEU_SessionBase session, HoudiniEngineUnity.HEU_HoudiniAsset parentAsset)
    // Offset: 0x1449324
    void SyncFromParameters(HoudiniEngineUnity::HEU_SessionBase* session, HoudiniEngineUnity::HEU_HoudiniAsset* parentAsset);
    // private System.Void UpdatePoints(HoudiniEngineUnity.HEU_SessionBase session, System.Int32 partID)
    // Offset: 0x1449570
    void UpdatePoints(HoudiniEngineUnity::HEU_SessionBase* session, int partID);
    // public System.Void ProjectToColliders(HoudiniEngineUnity.HEU_HoudiniAsset parentAsset, UnityEngine.Vector3 rayDirection, System.Single rayDistance)
    // Offset: 0x1449AE0
    void ProjectToColliders(HoudiniEngineUnity::HEU_HoudiniAsset* parentAsset, UnityEngine::Vector3 rayDirection, float rayDistance);
    // static public System.String GetPointsString(System.Collections.Generic.List`1<HoudiniEngineUnity.CurveNodeData> points)
    // Offset: 0x144A05C
    static ::Il2CppString* GetPointsString(System::Collections::Generic::List_1<HoudiniEngineUnity::CurveNodeData*>* points);
    // static public System.String GetPointsString(System.Collections.Generic.List`1<UnityEngine.Vector3> points)
    // Offset: 0x14490E4
    static ::Il2CppString* GetPointsString(System::Collections::Generic::List_1<UnityEngine::Vector3>* points);
    // public System.Void SetEditState(HoudiniEngineUnity.HEU_Curve/CurveEditState editState)
    // Offset: 0x144A2A8
    void SetEditState(HoudiniEngineUnity::HEU_Curve::CurveEditState editState);
    // public System.Void SetCurvePoint(System.Int32 pointIndex, UnityEngine.Vector3 newPosition)
    // Offset: 0x144A2B0
    void SetCurvePoint(int pointIndex, UnityEngine::Vector3 newPosition);
    // public UnityEngine.Vector3 GetCurvePoint(System.Int32 pointIndex)
    // Offset: 0x144A358
    UnityEngine::Vector3 GetCurvePoint(int pointIndex);
    // public System.Collections.Generic.List`1<HoudiniEngineUnity.CurveNodeData> GetAllPointTransforms()
    // Offset: 0x144A410
    System::Collections::Generic::List_1<HoudiniEngineUnity::CurveNodeData*>* GetAllPointTransforms();
    // public System.Collections.Generic.List`1<UnityEngine.Vector3> GetAllPoints()
    // Offset: 0x144A418
    System::Collections::Generic::List_1<UnityEngine::Vector3>* GetAllPoints();
    // public System.Int32 GetNumPoints()
    // Offset: 0x144A504
    int GetNumPoints();
    // public UnityEngine.Vector3 GetTransformedPoint(System.Int32 pointIndex)
    // Offset: 0x144A554
    UnityEngine::Vector3 GetTransformedPoint(int pointIndex);
    // public UnityEngine.Vector3 GetTransformedPosition(UnityEngine.Vector3 inPosition)
    // Offset: 0x144A618
    UnityEngine::Vector3 GetTransformedPosition(UnityEngine::Vector3 inPosition);
    // public UnityEngine.Vector3 GetInvertedTransformedPosition(UnityEngine.Vector3 inPosition)
    // Offset: 0x144A66C
    UnityEngine::Vector3 GetInvertedTransformedPosition(UnityEngine::Vector3 inPosition);
    // public UnityEngine.Vector3 GetInvertedTransformedDirection(UnityEngine.Vector3 inPosition)
    // Offset: 0x144A6C0
    UnityEngine::Vector3 GetInvertedTransformedDirection(UnityEngine::Vector3 inPosition);
    // public UnityEngine.Vector3[] GetVertices()
    // Offset: 0x144A714
    ::Array<UnityEngine::Vector3>* GetVertices();
    // public System.Void SetCurveGeometryVisibility(System.Boolean bVisible)
    // Offset: 0x144A71C
    void SetCurveGeometryVisibility(bool bVisible);
    // public System.Void DownloadPresetData(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x1449A38
    void DownloadPresetData(HoudiniEngineUnity::HEU_SessionBase* session);
    // public System.Void UploadPresetData(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x144A810
    void UploadPresetData(HoudiniEngineUnity::HEU_SessionBase* session);
    // public System.Void DownloadAsDefaultPresetData(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x144A8B8
    void DownloadAsDefaultPresetData(HoudiniEngineUnity::HEU_SessionBase* session);
    // public System.Collections.Generic.List`1<HoudiniEngineUnity.CurveNodeData> DuplicateCurveNodeData()
    // Offset: 0x144A960
    System::Collections::Generic::List_1<HoudiniEngineUnity::CurveNodeData*>* DuplicateCurveNodeData();
    // public System.Void SetCurveNodeData(System.Collections.Generic.List`1<HoudiniEngineUnity.CurveNodeData> curveNodeData)
    // Offset: 0x144AABC
    void SetCurveNodeData(System::Collections::Generic::List_1<HoudiniEngineUnity::CurveNodeData*>* curveNodeData);
    // public System.Boolean IsEquivalentTo(HoudiniEngineUnity.HEU_Curve other)
    // Offset: 0x144AAC4
    bool IsEquivalentTo(HoudiniEngineUnity::HEU_Curve* other);
    // public System.Void .ctor()
    // Offset: 0x144AD70
    // Implemented from: UnityEngine.ScriptableObject
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HEU_Curve* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_Curve::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HEU_Curve*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x144ADE0
    // Implemented from: UnityEngine.Object
    // Base method: System.Void Object::.cctor()
    static void _cctor();
  }; // HoudiniEngineUnity.HEU_Curve
  #pragma pack(pop)
  static check_size<sizeof(HEU_Curve), 96 + sizeof(HoudiniEngineUnity::HEU_HoudiniAsset*)> __HoudiniEngineUnity_HEU_CurveSizeCheck;
  static_assert(sizeof(HEU_Curve) == 0x68);
}
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HEU_Curve*, "HoudiniEngineUnity", "HEU_Curve");
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HEU_Curve::CurveEditState, "HoudiniEngineUnity", "HEU_Curve/CurveEditState");
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HEU_Curve::Interaction, "HoudiniEngineUnity", "HEU_Curve/Interaction");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::get_GeoID
// Il2CppName: get_GeoID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HoudiniEngineUnity::HEU_Curve::*)()>(&HoudiniEngineUnity::HEU_Curve::get_GeoID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "get_GeoID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::get_CurveNodeData
// Il2CppName: get_CurveNodeData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<HoudiniEngineUnity::CurveNodeData*>* (HoudiniEngineUnity::HEU_Curve::*)()>(&HoudiniEngineUnity::HEU_Curve::get_CurveNodeData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "get_CurveNodeData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::IsEditable
// Il2CppName: IsEditable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_Curve::*)()>(&HoudiniEngineUnity::HEU_Curve::IsEditable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "IsEditable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::get_Parameters
// Il2CppName: get_Parameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_Parameters* (HoudiniEngineUnity::HEU_Curve::*)()>(&HoudiniEngineUnity::HEU_Curve::get_Parameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "get_Parameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::SetUploadParameterPreset
// Il2CppName: SetUploadParameterPreset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(bool)>(&HoudiniEngineUnity::HEU_Curve::SetUploadParameterPreset)> {
  static const MethodInfo* get() {
    static auto* bValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "SetUploadParameterPreset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bValue});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::get_CurveName
// Il2CppName: get_CurveName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HoudiniEngineUnity::HEU_Curve::*)()>(&HoudiniEngineUnity::HEU_Curve::get_CurveName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "get_CurveName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::IsGeoCurve
// Il2CppName: IsGeoCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_Curve::*)()>(&HoudiniEngineUnity::HEU_Curve::IsGeoCurve)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "IsGeoCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::get_EditState
// Il2CppName: get_EditState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_Curve::CurveEditState (HoudiniEngineUnity::HEU_Curve::*)()>(&HoudiniEngineUnity::HEU_Curve::get_EditState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "get_EditState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::get_ParentAsset
// Il2CppName: get_ParentAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_HoudiniAsset* (HoudiniEngineUnity::HEU_Curve::*)()>(&HoudiniEngineUnity::HEU_Curve::get_ParentAsset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "get_ParentAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::CreateSetupCurve
// Il2CppName: CreateSetupCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HoudiniEngineUnity::HEU_Curve* (*)(HoudiniEngineUnity::HEU_HoudiniAsset*, bool, ::Il2CppString*, int, bool)>(&HoudiniEngineUnity::HEU_Curve::CreateSetupCurve)> {
  static const MethodInfo* get() {
    static auto* parentAsset = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset")->byval_arg;
    static auto* isEditable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* curveName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bGeoCurve = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "CreateSetupCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parentAsset, isEditable, curveName, geoID, bGeoCurve});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::DestroyAllData
// Il2CppName: DestroyAllData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(bool)>(&HoudiniEngineUnity::HEU_Curve::DestroyAllData)> {
  static const MethodInfo* get() {
    static auto* bIsRebuild = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "DestroyAllData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bIsRebuild});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::SetCurveName
// Il2CppName: SetCurveName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(::Il2CppString*)>(&HoudiniEngineUnity::HEU_Curve::SetCurveName)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "SetCurveName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::UploadParameterPreset
// Il2CppName: UploadParameterPreset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(HoudiniEngineUnity::HEU_SessionBase*, int, HoudiniEngineUnity::HEU_HoudiniAsset*)>(&HoudiniEngineUnity::HEU_Curve::UploadParameterPreset)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* geoID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* parentAsset = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "UploadParameterPreset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, geoID, parentAsset});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::ResetCurveParameters
// Il2CppName: ResetCurveParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(HoudiniEngineUnity::HEU_SessionBase*, HoudiniEngineUnity::HEU_HoudiniAsset*)>(&HoudiniEngineUnity::HEU_Curve::ResetCurveParameters)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* parentAsset = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "ResetCurveParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, parentAsset});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::SetCurveParameterPreset
// Il2CppName: SetCurveParameterPreset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(HoudiniEngineUnity::HEU_SessionBase*, HoudiniEngineUnity::HEU_HoudiniAsset*, ::Array<uint8_t>*)>(&HoudiniEngineUnity::HEU_Curve::SetCurveParameterPreset)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* parentAsset = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset")->byval_arg;
    static auto* parameterPreset = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "SetCurveParameterPreset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, parentAsset, parameterPreset});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::UpdateCurve
// Il2CppName: UpdateCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(HoudiniEngineUnity::HEU_SessionBase*, int)>(&HoudiniEngineUnity::HEU_Curve::UpdateCurve)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "UpdateCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, partID});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::GenerateMesh
// Il2CppName: GenerateMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(UnityEngine::GameObject*)>(&HoudiniEngineUnity::HEU_Curve::GenerateMesh)> {
  static const MethodInfo* get() {
    static auto* inGameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "GenerateMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inGameObject});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::UpdateCurveInputForCustomAttributes
// Il2CppName: UpdateCurveInputForCustomAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_Curve::*)(HoudiniEngineUnity::HEU_SessionBase*, HoudiniEngineUnity::HEU_HoudiniAsset*)>(&HoudiniEngineUnity::HEU_Curve::UpdateCurveInputForCustomAttributes)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* parentAsset = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "UpdateCurveInputForCustomAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, parentAsset});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::SyncFromParameters
// Il2CppName: SyncFromParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(HoudiniEngineUnity::HEU_SessionBase*, HoudiniEngineUnity::HEU_HoudiniAsset*)>(&HoudiniEngineUnity::HEU_Curve::SyncFromParameters)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* parentAsset = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "SyncFromParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, parentAsset});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::UpdatePoints
// Il2CppName: UpdatePoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(HoudiniEngineUnity::HEU_SessionBase*, int)>(&HoudiniEngineUnity::HEU_Curve::UpdatePoints)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* partID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "UpdatePoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, partID});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::ProjectToColliders
// Il2CppName: ProjectToColliders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(HoudiniEngineUnity::HEU_HoudiniAsset*, UnityEngine::Vector3, float)>(&HoudiniEngineUnity::HEU_Curve::ProjectToColliders)> {
  static const MethodInfo* get() {
    static auto* parentAsset = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_HoudiniAsset")->byval_arg;
    static auto* rayDirection = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rayDistance = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "ProjectToColliders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parentAsset, rayDirection, rayDistance});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::GetPointsString
// Il2CppName: GetPointsString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::Collections::Generic::List_1<HoudiniEngineUnity::CurveNodeData*>*)>(&HoudiniEngineUnity::HEU_Curve::GetPointsString)> {
  static const MethodInfo* get() {
    static auto* points = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "CurveNodeData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "GetPointsString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{points});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::GetPointsString
// Il2CppName: GetPointsString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::Collections::Generic::List_1<UnityEngine::Vector3>*)>(&HoudiniEngineUnity::HEU_Curve::GetPointsString)> {
  static const MethodInfo* get() {
    static auto* points = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "GetPointsString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{points});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::SetEditState
// Il2CppName: SetEditState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(HoudiniEngineUnity::HEU_Curve::CurveEditState)>(&HoudiniEngineUnity::HEU_Curve::SetEditState)> {
  static const MethodInfo* get() {
    static auto* editState = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_Curve/CurveEditState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "SetEditState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{editState});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::SetCurvePoint
// Il2CppName: SetCurvePoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(int, UnityEngine::Vector3)>(&HoudiniEngineUnity::HEU_Curve::SetCurvePoint)> {
  static const MethodInfo* get() {
    static auto* pointIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* newPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "SetCurvePoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointIndex, newPosition});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::GetCurvePoint
// Il2CppName: GetCurvePoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (HoudiniEngineUnity::HEU_Curve::*)(int)>(&HoudiniEngineUnity::HEU_Curve::GetCurvePoint)> {
  static const MethodInfo* get() {
    static auto* pointIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "GetCurvePoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointIndex});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::GetAllPointTransforms
// Il2CppName: GetAllPointTransforms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<HoudiniEngineUnity::CurveNodeData*>* (HoudiniEngineUnity::HEU_Curve::*)()>(&HoudiniEngineUnity::HEU_Curve::GetAllPointTransforms)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "GetAllPointTransforms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::GetAllPoints
// Il2CppName: GetAllPoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::Vector3>* (HoudiniEngineUnity::HEU_Curve::*)()>(&HoudiniEngineUnity::HEU_Curve::GetAllPoints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "GetAllPoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::GetNumPoints
// Il2CppName: GetNumPoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HoudiniEngineUnity::HEU_Curve::*)()>(&HoudiniEngineUnity::HEU_Curve::GetNumPoints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "GetNumPoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::GetTransformedPoint
// Il2CppName: GetTransformedPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (HoudiniEngineUnity::HEU_Curve::*)(int)>(&HoudiniEngineUnity::HEU_Curve::GetTransformedPoint)> {
  static const MethodInfo* get() {
    static auto* pointIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "GetTransformedPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointIndex});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::GetTransformedPosition
// Il2CppName: GetTransformedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (HoudiniEngineUnity::HEU_Curve::*)(UnityEngine::Vector3)>(&HoudiniEngineUnity::HEU_Curve::GetTransformedPosition)> {
  static const MethodInfo* get() {
    static auto* inPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "GetTransformedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inPosition});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::GetInvertedTransformedPosition
// Il2CppName: GetInvertedTransformedPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (HoudiniEngineUnity::HEU_Curve::*)(UnityEngine::Vector3)>(&HoudiniEngineUnity::HEU_Curve::GetInvertedTransformedPosition)> {
  static const MethodInfo* get() {
    static auto* inPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "GetInvertedTransformedPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inPosition});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::GetInvertedTransformedDirection
// Il2CppName: GetInvertedTransformedDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (HoudiniEngineUnity::HEU_Curve::*)(UnityEngine::Vector3)>(&HoudiniEngineUnity::HEU_Curve::GetInvertedTransformedDirection)> {
  static const MethodInfo* get() {
    static auto* inPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "GetInvertedTransformedDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inPosition});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::GetVertices
// Il2CppName: GetVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector3>* (HoudiniEngineUnity::HEU_Curve::*)()>(&HoudiniEngineUnity::HEU_Curve::GetVertices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "GetVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::SetCurveGeometryVisibility
// Il2CppName: SetCurveGeometryVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(bool)>(&HoudiniEngineUnity::HEU_Curve::SetCurveGeometryVisibility)> {
  static const MethodInfo* get() {
    static auto* bVisible = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "SetCurveGeometryVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bVisible});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::DownloadPresetData
// Il2CppName: DownloadPresetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_Curve::DownloadPresetData)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "DownloadPresetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::UploadPresetData
// Il2CppName: UploadPresetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_Curve::UploadPresetData)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "UploadPresetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::DownloadAsDefaultPresetData
// Il2CppName: DownloadAsDefaultPresetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_Curve::DownloadAsDefaultPresetData)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "DownloadAsDefaultPresetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::DuplicateCurveNodeData
// Il2CppName: DuplicateCurveNodeData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<HoudiniEngineUnity::CurveNodeData*>* (HoudiniEngineUnity::HEU_Curve::*)()>(&HoudiniEngineUnity::HEU_Curve::DuplicateCurveNodeData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "DuplicateCurveNodeData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::SetCurveNodeData
// Il2CppName: SetCurveNodeData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_Curve::*)(System::Collections::Generic::List_1<HoudiniEngineUnity::CurveNodeData*>*)>(&HoudiniEngineUnity::HEU_Curve::SetCurveNodeData)> {
  static const MethodInfo* get() {
    static auto* curveNodeData = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "CurveNodeData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "SetCurveNodeData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{curveNodeData});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::IsEquivalentTo
// Il2CppName: IsEquivalentTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HoudiniEngineUnity::HEU_Curve::*)(HoudiniEngineUnity::HEU_Curve*)>(&HoudiniEngineUnity::HEU_Curve::IsEquivalentTo)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_Curve")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), "IsEquivalentTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_Curve::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&HoudiniEngineUnity::HEU_Curve::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_Curve*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
