// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: HoudiniEngineUnity.HEU_ThreadedTaskLoadGeo
#include "HoudiniEngineUnity/HEU_ThreadedTaskLoadGeo.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Forward declaring type: HEU_SessionBase
  class HEU_SessionBase;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: HoudiniEngineUnity.HEU_ThreadedTaskLoadGeo/HEU_LoadCallback
  // [TokenAttribute] Offset: FFFFFFFF
  class HEU_ThreadedTaskLoadGeo::HEU_LoadCallback : public System::MulticastDelegate {
    public:
    // Creating value type constructor for type: HEU_LoadCallback
    HEU_LoadCallback() noexcept {}
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x16FAE98
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HEU_ThreadedTaskLoadGeo::HEU_LoadCallback* New_ctor(::Il2CppObject* object, System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallback::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HEU_ThreadedTaskLoadGeo::HEU_LoadCallback*, creationType>(object, method)));
    }
    // public System.Void Invoke(HoudiniEngineUnity.HEU_SessionBase session, HoudiniEngineUnity.HEU_ThreadedTaskLoadGeo/HEU_LoadData loadData, HoudiniEngineUnity.HEU_ThreadedTaskLoadGeo/HEU_LoadCallbackType callbackType)
    // Offset: 0x16F6B54
    void Invoke(HoudiniEngineUnity::HEU_SessionBase* session, HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadData* loadData, HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallbackType callbackType);
    // public System.IAsyncResult BeginInvoke(HoudiniEngineUnity.HEU_SessionBase session, HoudiniEngineUnity.HEU_ThreadedTaskLoadGeo/HEU_LoadData loadData, HoudiniEngineUnity.HEU_ThreadedTaskLoadGeo/HEU_LoadCallbackType callbackType, System.AsyncCallback callback, System.Object object)
    // Offset: 0x16FAEA8
    System::IAsyncResult* BeginInvoke(HoudiniEngineUnity::HEU_SessionBase* session, HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadData* loadData, HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallbackType callbackType, System::AsyncCallback* callback, ::Il2CppObject* object);
    // public System.Void EndInvoke(System.IAsyncResult result)
    // Offset: 0x16FAF48
    void EndInvoke(System::IAsyncResult* result);
  }; // HoudiniEngineUnity.HEU_ThreadedTaskLoadGeo/HEU_LoadCallback
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallback*, "HoudiniEngineUnity", "HEU_ThreadedTaskLoadGeo/HEU_LoadCallback");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallback::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallback::*)(HoudiniEngineUnity::HEU_SessionBase*, HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadData*, HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallbackType)>(&HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallback::Invoke)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* loadData = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_ThreadedTaskLoadGeo/HEU_LoadData")->byval_arg;
    static auto* callbackType = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_ThreadedTaskLoadGeo/HEU_LoadCallbackType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, loadData, callbackType});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallback::*)(HoudiniEngineUnity::HEU_SessionBase*, HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadData*, HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallbackType, System::AsyncCallback*, ::Il2CppObject*)>(&HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallback::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    static auto* loadData = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_ThreadedTaskLoadGeo/HEU_LoadData")->byval_arg;
    static auto* callbackType = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_ThreadedTaskLoadGeo/HEU_LoadCallbackType")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session, loadData, callbackType, callback, object});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallback::*)(System::IAsyncResult*)>(&HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallback::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_ThreadedTaskLoadGeo::HEU_LoadCallback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
