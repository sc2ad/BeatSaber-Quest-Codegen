// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: HoudiniEngineUnity.HEU_BaseSync
#include "HoudiniEngineUnity/HEU_BaseSync.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Forward declaring type: HEU_SessionBase
  class HEU_SessionBase;
}
// Completed forward declares
// Type namespace: HoudiniEngineUnity
namespace HoudiniEngineUnity {
  // Size: 0x88
  #pragma pack(push, 1)
  // Autogenerated type: HoudiniEngineUnity.HEU_GeoSync
  // [TokenAttribute] Offset: FFFFFFFF
  class HEU_GeoSync : public HoudiniEngineUnity::HEU_BaseSync {
    public:
    // Writing base type padding for base size: 0x7D to desired offset: 0x80
    char ___base_padding[0x3] = {};
    // public System.String _filePath
    // Size: 0x8
    // Offset: 0x80
    ::Il2CppString* filePath;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // Creating value type constructor for type: HEU_GeoSync
    HEU_GeoSync(::Il2CppString* filePath_ = {}) noexcept : filePath{filePath_} {}
    // Get instance field reference: public System.String _filePath
    ::Il2CppString*& dyn__filePath();
    // protected override System.Void SetupLoadTask(HoudiniEngineUnity.HEU_SessionBase session)
    // Offset: 0x15D5D28
    // Implemented from: HoudiniEngineUnity.HEU_BaseSync
    // Base method: System.Void HEU_BaseSync::SetupLoadTask(HoudiniEngineUnity.HEU_SessionBase session)
    void SetupLoadTask(HoudiniEngineUnity::HEU_SessionBase* session);
    // public System.Void .ctor()
    // Offset: 0x15D5DD0
    // Implemented from: HoudiniEngineUnity.HEU_BaseSync
    // Base method: System.Void HEU_BaseSync::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HEU_GeoSync* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("HoudiniEngineUnity::HEU_GeoSync::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HEU_GeoSync*, creationType>()));
    }
  }; // HoudiniEngineUnity.HEU_GeoSync
  #pragma pack(pop)
  static check_size<sizeof(HEU_GeoSync), 128 + sizeof(::Il2CppString*)> __HoudiniEngineUnity_HEU_GeoSyncSizeCheck;
  static_assert(sizeof(HEU_GeoSync) == 0x88);
}
DEFINE_IL2CPP_ARG_TYPE(HoudiniEngineUnity::HEU_GeoSync*, "HoudiniEngineUnity", "HEU_GeoSync");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeoSync::SetupLoadTask
// Il2CppName: SetupLoadTask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HoudiniEngineUnity::HEU_GeoSync::*)(HoudiniEngineUnity::HEU_SessionBase*)>(&HoudiniEngineUnity::HEU_GeoSync::SetupLoadTask)> {
  static const MethodInfo* get() {
    static auto* session = &::il2cpp_utils::GetClassFromName("HoudiniEngineUnity", "HEU_SessionBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HoudiniEngineUnity::HEU_GeoSync*), "SetupLoadTask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{session});
  }
};
// Writing MetadataGetter for method: HoudiniEngineUnity::HEU_GeoSync::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
