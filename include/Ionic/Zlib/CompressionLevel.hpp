// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Ionic.Zlib
namespace Ionic::Zlib {
  // Forward declaring type: CompressionLevel
  struct CompressionLevel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Ionic::Zlib::CompressionLevel, "Ionic.Zlib", "CompressionLevel");
// Type namespace: Ionic.Zlib
namespace Ionic::Zlib {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Ionic.Zlib.CompressionLevel
  // [TokenAttribute] Offset: FFFFFFFF
  struct CompressionLevel/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: CompressionLevel
    constexpr CompressionLevel(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Ionic.Zlib.CompressionLevel None
    static constexpr const int None = 0;
    // Get static field: static public Ionic.Zlib.CompressionLevel None
    static ::Ionic::Zlib::CompressionLevel _get_None();
    // Set static field: static public Ionic.Zlib.CompressionLevel None
    static void _set_None(::Ionic::Zlib::CompressionLevel value);
    // static field const value: static public Ionic.Zlib.CompressionLevel Level0
    static constexpr const int Level0 = 0;
    // Get static field: static public Ionic.Zlib.CompressionLevel Level0
    static ::Ionic::Zlib::CompressionLevel _get_Level0();
    // Set static field: static public Ionic.Zlib.CompressionLevel Level0
    static void _set_Level0(::Ionic::Zlib::CompressionLevel value);
    // static field const value: static public Ionic.Zlib.CompressionLevel BestSpeed
    static constexpr const int BestSpeed = 1;
    // Get static field: static public Ionic.Zlib.CompressionLevel BestSpeed
    static ::Ionic::Zlib::CompressionLevel _get_BestSpeed();
    // Set static field: static public Ionic.Zlib.CompressionLevel BestSpeed
    static void _set_BestSpeed(::Ionic::Zlib::CompressionLevel value);
    // static field const value: static public Ionic.Zlib.CompressionLevel Level1
    static constexpr const int Level1 = 1;
    // Get static field: static public Ionic.Zlib.CompressionLevel Level1
    static ::Ionic::Zlib::CompressionLevel _get_Level1();
    // Set static field: static public Ionic.Zlib.CompressionLevel Level1
    static void _set_Level1(::Ionic::Zlib::CompressionLevel value);
    // static field const value: static public Ionic.Zlib.CompressionLevel Level2
    static constexpr const int Level2 = 2;
    // Get static field: static public Ionic.Zlib.CompressionLevel Level2
    static ::Ionic::Zlib::CompressionLevel _get_Level2();
    // Set static field: static public Ionic.Zlib.CompressionLevel Level2
    static void _set_Level2(::Ionic::Zlib::CompressionLevel value);
    // static field const value: static public Ionic.Zlib.CompressionLevel Level3
    static constexpr const int Level3 = 3;
    // Get static field: static public Ionic.Zlib.CompressionLevel Level3
    static ::Ionic::Zlib::CompressionLevel _get_Level3();
    // Set static field: static public Ionic.Zlib.CompressionLevel Level3
    static void _set_Level3(::Ionic::Zlib::CompressionLevel value);
    // static field const value: static public Ionic.Zlib.CompressionLevel Level4
    static constexpr const int Level4 = 4;
    // Get static field: static public Ionic.Zlib.CompressionLevel Level4
    static ::Ionic::Zlib::CompressionLevel _get_Level4();
    // Set static field: static public Ionic.Zlib.CompressionLevel Level4
    static void _set_Level4(::Ionic::Zlib::CompressionLevel value);
    // static field const value: static public Ionic.Zlib.CompressionLevel Level5
    static constexpr const int Level5 = 5;
    // Get static field: static public Ionic.Zlib.CompressionLevel Level5
    static ::Ionic::Zlib::CompressionLevel _get_Level5();
    // Set static field: static public Ionic.Zlib.CompressionLevel Level5
    static void _set_Level5(::Ionic::Zlib::CompressionLevel value);
    // static field const value: static public Ionic.Zlib.CompressionLevel Default
    static constexpr const int Default = 6;
    // Get static field: static public Ionic.Zlib.CompressionLevel Default
    static ::Ionic::Zlib::CompressionLevel _get_Default();
    // Set static field: static public Ionic.Zlib.CompressionLevel Default
    static void _set_Default(::Ionic::Zlib::CompressionLevel value);
    // static field const value: static public Ionic.Zlib.CompressionLevel Level6
    static constexpr const int Level6 = 6;
    // Get static field: static public Ionic.Zlib.CompressionLevel Level6
    static ::Ionic::Zlib::CompressionLevel _get_Level6();
    // Set static field: static public Ionic.Zlib.CompressionLevel Level6
    static void _set_Level6(::Ionic::Zlib::CompressionLevel value);
    // static field const value: static public Ionic.Zlib.CompressionLevel Level7
    static constexpr const int Level7 = 7;
    // Get static field: static public Ionic.Zlib.CompressionLevel Level7
    static ::Ionic::Zlib::CompressionLevel _get_Level7();
    // Set static field: static public Ionic.Zlib.CompressionLevel Level7
    static void _set_Level7(::Ionic::Zlib::CompressionLevel value);
    // static field const value: static public Ionic.Zlib.CompressionLevel Level8
    static constexpr const int Level8 = 8;
    // Get static field: static public Ionic.Zlib.CompressionLevel Level8
    static ::Ionic::Zlib::CompressionLevel _get_Level8();
    // Set static field: static public Ionic.Zlib.CompressionLevel Level8
    static void _set_Level8(::Ionic::Zlib::CompressionLevel value);
    // static field const value: static public Ionic.Zlib.CompressionLevel BestCompression
    static constexpr const int BestCompression = 9;
    // Get static field: static public Ionic.Zlib.CompressionLevel BestCompression
    static ::Ionic::Zlib::CompressionLevel _get_BestCompression();
    // Set static field: static public Ionic.Zlib.CompressionLevel BestCompression
    static void _set_BestCompression(::Ionic::Zlib::CompressionLevel value);
    // static field const value: static public Ionic.Zlib.CompressionLevel Level9
    static constexpr const int Level9 = 9;
    // Get static field: static public Ionic.Zlib.CompressionLevel Level9
    static ::Ionic::Zlib::CompressionLevel _get_Level9();
    // Set static field: static public Ionic.Zlib.CompressionLevel Level9
    static void _set_Level9(::Ionic::Zlib::CompressionLevel value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Ionic.Zlib.CompressionLevel
  #pragma pack(pop)
  static check_size<sizeof(CompressionLevel), 0 + sizeof(int)> __Ionic_Zlib_CompressionLevelSizeCheck;
  static_assert(sizeof(CompressionLevel) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
