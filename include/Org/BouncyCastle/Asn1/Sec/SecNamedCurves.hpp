// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Org::BouncyCastle::Asn1::Sec
namespace Org::BouncyCastle::Asn1::Sec {
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IDictionary
  class IDictionary;
}
// Forward declaring namespace: Org::BouncyCastle::Asn1::X9
namespace Org::BouncyCastle::Asn1::X9 {
  // Forward declaring type: X9ECPoint
  class X9ECPoint;
  // Forward declaring type: X9ECParametersHolder
  class X9ECParametersHolder;
  // Forward declaring type: X9ECParameters
  class X9ECParameters;
}
// Forward declaring namespace: Org::BouncyCastle::Math::EC
namespace Org::BouncyCastle::Math::EC {
  // Forward declaring type: ECCurve
  class ECCurve;
}
// Forward declaring namespace: Org::BouncyCastle::Math::EC::Endo
namespace Org::BouncyCastle::Math::EC::Endo {
  // Forward declaring type: GlvTypeBParameters
  class GlvTypeBParameters;
}
// Forward declaring namespace: Org::BouncyCastle::Math
namespace Org::BouncyCastle::Math {
  // Forward declaring type: BigInteger
  class BigInteger;
}
// Forward declaring namespace: Org::BouncyCastle::Asn1
namespace Org::BouncyCastle::Asn1 {
  // Forward declaring type: DerObjectIdentifier
  class DerObjectIdentifier;
}
// Completed forward declares
// Type namespace: Org.BouncyCastle.Asn1.Sec
namespace Org::BouncyCastle::Asn1::Sec {
  // Forward declaring type: SecNamedCurves
  class SecNamedCurves;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Org::BouncyCastle::Asn1::Sec::SecNamedCurves);
DEFINE_IL2CPP_ARG_TYPE(::Org::BouncyCastle::Asn1::Sec::SecNamedCurves*, "Org.BouncyCastle.Asn1.Sec", "SecNamedCurves");
// Type namespace: Org.BouncyCastle.Asn1.Sec
namespace Org::BouncyCastle::Asn1::Sec {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Org.BouncyCastle.Asn1.Sec.SecNamedCurves
  // [TokenAttribute] Offset: FFFFFFFF
  class SecNamedCurves : public ::Il2CppObject {
    public:
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Secp112r1Holder
    class Secp112r1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Secp112r2Holder
    class Secp112r2Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Secp128r1Holder
    class Secp128r1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Secp128r2Holder
    class Secp128r2Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Secp160k1Holder
    class Secp160k1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Secp160r1Holder
    class Secp160r1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Secp160r2Holder
    class Secp160r2Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Secp192k1Holder
    class Secp192k1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Secp192r1Holder
    class Secp192r1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Secp224k1Holder
    class Secp224k1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Secp224r1Holder
    class Secp224r1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Secp256k1Holder
    class Secp256k1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Secp256r1Holder
    class Secp256r1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Secp384r1Holder
    class Secp384r1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Secp521r1Holder
    class Secp521r1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect113r1Holder
    class Sect113r1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect113r2Holder
    class Sect113r2Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect131r1Holder
    class Sect131r1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect131r2Holder
    class Sect131r2Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect163k1Holder
    class Sect163k1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect163r1Holder
    class Sect163r1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect163r2Holder
    class Sect163r2Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect193r1Holder
    class Sect193r1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect193r2Holder
    class Sect193r2Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect233k1Holder
    class Sect233k1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect233r1Holder
    class Sect233r1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect239k1Holder
    class Sect239k1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect283k1Holder
    class Sect283k1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect283r1Holder
    class Sect283r1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect409k1Holder
    class Sect409k1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect409r1Holder
    class Sect409r1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect571k1Holder
    class Sect571k1Holder;
    // Nested type: ::Org::BouncyCastle::Asn1::Sec::SecNamedCurves::Sect571r1Holder
    class Sect571r1Holder;
    // Get static field: static private readonly System.Collections.IDictionary objIds
    static ::System::Collections::IDictionary* _get_objIds();
    // Set static field: static private readonly System.Collections.IDictionary objIds
    static void _set_objIds(::System::Collections::IDictionary* value);
    // Get static field: static private readonly System.Collections.IDictionary curves
    static ::System::Collections::IDictionary* _get_curves();
    // Set static field: static private readonly System.Collections.IDictionary curves
    static void _set_curves(::System::Collections::IDictionary* value);
    // Get static field: static private readonly System.Collections.IDictionary names
    static ::System::Collections::IDictionary* _get_names();
    // Set static field: static private readonly System.Collections.IDictionary names
    static void _set_names(::System::Collections::IDictionary* value);
    // static private System.Void .cctor()
    // Offset: 0x1D88E50
    static void _cctor();
    // static private Org.BouncyCastle.Asn1.X9.X9ECPoint ConfigureBasepoint(Org.BouncyCastle.Math.EC.ECCurve curve, System.String encoding)
    // Offset: 0x1D889E4
    static ::Org::BouncyCastle::Asn1::X9::X9ECPoint* ConfigureBasepoint(::Org::BouncyCastle::Math::EC::ECCurve* curve, ::StringW encoding);
    // static private Org.BouncyCastle.Math.EC.ECCurve ConfigureCurve(Org.BouncyCastle.Math.EC.ECCurve curve)
    // Offset: 0x1D88AD4
    static ::Org::BouncyCastle::Math::EC::ECCurve* ConfigureCurve(::Org::BouncyCastle::Math::EC::ECCurve* curve);
    // static private Org.BouncyCastle.Math.EC.ECCurve ConfigureCurveGlv(Org.BouncyCastle.Math.EC.ECCurve c, Org.BouncyCastle.Math.EC.Endo.GlvTypeBParameters p)
    // Offset: 0x1D88AD8
    static ::Org::BouncyCastle::Math::EC::ECCurve* ConfigureCurveGlv(::Org::BouncyCastle::Math::EC::ECCurve* c, ::Org::BouncyCastle::Math::EC::Endo::GlvTypeBParameters* p);
    // static private Org.BouncyCastle.Math.BigInteger FromHex(System.String hex)
    // Offset: 0x1D88B84
    static ::Org::BouncyCastle::Math::BigInteger* FromHex(::StringW hex);
    // static private System.Void DefineCurve(System.String name, Org.BouncyCastle.Asn1.DerObjectIdentifier oid, Org.BouncyCastle.Asn1.X9.X9ECParametersHolder holder)
    // Offset: 0x1D88C20
    static void DefineCurve(::StringW name, ::Org::BouncyCastle::Asn1::DerObjectIdentifier* oid, ::Org::BouncyCastle::Asn1::X9::X9ECParametersHolder* holder);
    // static public Org.BouncyCastle.Asn1.X9.X9ECParameters GetByName(System.String name)
    // Offset: 0x1D898E4
    static ::Org::BouncyCastle::Asn1::X9::X9ECParameters* GetByName(::StringW name);
    // static public Org.BouncyCastle.Asn1.X9.X9ECParameters GetByOid(Org.BouncyCastle.Asn1.DerObjectIdentifier oid)
    // Offset: 0x1D7FD0C
    static ::Org::BouncyCastle::Asn1::X9::X9ECParameters* GetByOid(::Org::BouncyCastle::Asn1::DerObjectIdentifier* oid);
    // static public Org.BouncyCastle.Asn1.DerObjectIdentifier GetOid(System.String name)
    // Offset: 0x1D8997C
    static ::Org::BouncyCastle::Asn1::DerObjectIdentifier* GetOid(::StringW name);
  }; // Org.BouncyCastle.Asn1.Sec.SecNamedCurves
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Org::BouncyCastle::Asn1::Sec::SecNamedCurves::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Org::BouncyCastle::Asn1::Sec::SecNamedCurves::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Org::BouncyCastle::Asn1::Sec::SecNamedCurves*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Org::BouncyCastle::Asn1::Sec::SecNamedCurves::ConfigureBasepoint
// Il2CppName: ConfigureBasepoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Org::BouncyCastle::Asn1::X9::X9ECPoint* (*)(::Org::BouncyCastle::Math::EC::ECCurve*, ::StringW)>(&Org::BouncyCastle::Asn1::Sec::SecNamedCurves::ConfigureBasepoint)> {
  static const MethodInfo* get() {
    static auto* curve = &::il2cpp_utils::GetClassFromName("Org.BouncyCastle.Math.EC", "ECCurve")->byval_arg;
    static auto* encoding = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Org::BouncyCastle::Asn1::Sec::SecNamedCurves*), "ConfigureBasepoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{curve, encoding});
  }
};
// Writing MetadataGetter for method: Org::BouncyCastle::Asn1::Sec::SecNamedCurves::ConfigureCurve
// Il2CppName: ConfigureCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Org::BouncyCastle::Math::EC::ECCurve* (*)(::Org::BouncyCastle::Math::EC::ECCurve*)>(&Org::BouncyCastle::Asn1::Sec::SecNamedCurves::ConfigureCurve)> {
  static const MethodInfo* get() {
    static auto* curve = &::il2cpp_utils::GetClassFromName("Org.BouncyCastle.Math.EC", "ECCurve")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Org::BouncyCastle::Asn1::Sec::SecNamedCurves*), "ConfigureCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{curve});
  }
};
// Writing MetadataGetter for method: Org::BouncyCastle::Asn1::Sec::SecNamedCurves::ConfigureCurveGlv
// Il2CppName: ConfigureCurveGlv
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Org::BouncyCastle::Math::EC::ECCurve* (*)(::Org::BouncyCastle::Math::EC::ECCurve*, ::Org::BouncyCastle::Math::EC::Endo::GlvTypeBParameters*)>(&Org::BouncyCastle::Asn1::Sec::SecNamedCurves::ConfigureCurveGlv)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("Org.BouncyCastle.Math.EC", "ECCurve")->byval_arg;
    static auto* p = &::il2cpp_utils::GetClassFromName("Org.BouncyCastle.Math.EC.Endo", "GlvTypeBParameters")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Org::BouncyCastle::Asn1::Sec::SecNamedCurves*), "ConfigureCurveGlv", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c, p});
  }
};
// Writing MetadataGetter for method: Org::BouncyCastle::Asn1::Sec::SecNamedCurves::FromHex
// Il2CppName: FromHex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Org::BouncyCastle::Math::BigInteger* (*)(::StringW)>(&Org::BouncyCastle::Asn1::Sec::SecNamedCurves::FromHex)> {
  static const MethodInfo* get() {
    static auto* hex = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Org::BouncyCastle::Asn1::Sec::SecNamedCurves*), "FromHex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hex});
  }
};
// Writing MetadataGetter for method: Org::BouncyCastle::Asn1::Sec::SecNamedCurves::DefineCurve
// Il2CppName: DefineCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::Org::BouncyCastle::Asn1::DerObjectIdentifier*, ::Org::BouncyCastle::Asn1::X9::X9ECParametersHolder*)>(&Org::BouncyCastle::Asn1::Sec::SecNamedCurves::DefineCurve)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* oid = &::il2cpp_utils::GetClassFromName("Org.BouncyCastle.Asn1", "DerObjectIdentifier")->byval_arg;
    static auto* holder = &::il2cpp_utils::GetClassFromName("Org.BouncyCastle.Asn1.X9", "X9ECParametersHolder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Org::BouncyCastle::Asn1::Sec::SecNamedCurves*), "DefineCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, oid, holder});
  }
};
// Writing MetadataGetter for method: Org::BouncyCastle::Asn1::Sec::SecNamedCurves::GetByName
// Il2CppName: GetByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Org::BouncyCastle::Asn1::X9::X9ECParameters* (*)(::StringW)>(&Org::BouncyCastle::Asn1::Sec::SecNamedCurves::GetByName)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Org::BouncyCastle::Asn1::Sec::SecNamedCurves*), "GetByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: Org::BouncyCastle::Asn1::Sec::SecNamedCurves::GetByOid
// Il2CppName: GetByOid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Org::BouncyCastle::Asn1::X9::X9ECParameters* (*)(::Org::BouncyCastle::Asn1::DerObjectIdentifier*)>(&Org::BouncyCastle::Asn1::Sec::SecNamedCurves::GetByOid)> {
  static const MethodInfo* get() {
    static auto* oid = &::il2cpp_utils::GetClassFromName("Org.BouncyCastle.Asn1", "DerObjectIdentifier")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Org::BouncyCastle::Asn1::Sec::SecNamedCurves*), "GetByOid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oid});
  }
};
// Writing MetadataGetter for method: Org::BouncyCastle::Asn1::Sec::SecNamedCurves::GetOid
// Il2CppName: GetOid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Org::BouncyCastle::Asn1::DerObjectIdentifier* (*)(::StringW)>(&Org::BouncyCastle::Asn1::Sec::SecNamedCurves::GetOid)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Org::BouncyCastle::Asn1::Sec::SecNamedCurves*), "GetOid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
