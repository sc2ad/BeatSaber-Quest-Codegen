// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Viveport
namespace Viveport {
  // Forward declaring type: StatusCallback
  class StatusCallback;
}
// Forward declaring namespace: Viveport::Internal
namespace Viveport::Internal {
  // Forward declaring type: StatusCallback
  class StatusCallback;
  // Forward declaring type: StatusCallback2
  class StatusCallback2;
}
// Completed forward declares
// Type namespace: Viveport
namespace Viveport {
  // Forward declaring type: Deeplink
  class Deeplink;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Viveport::Deeplink);
DEFINE_IL2CPP_ARG_TYPE(::Viveport::Deeplink*, "Viveport", "Deeplink");
// Type namespace: Viveport
namespace Viveport {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Viveport.Deeplink
  // [TokenAttribute] Offset: FFFFFFFF
  class Deeplink : public ::Il2CppObject {
    public:
    // Nested type: ::Viveport::Deeplink::DeeplinkChecker
    class DeeplinkChecker;
    // static field const value: static private System.Int32 MaxIdLength
    static constexpr const int MaxIdLength = 256;
    // Get static field: static private System.Int32 MaxIdLength
    static int _get_MaxIdLength();
    // Set static field: static private System.Int32 MaxIdLength
    static void _set_MaxIdLength(int value);
    // Get static field: static private Viveport.Internal.StatusCallback isReadyIl2cppCallback
    static ::Viveport::Internal::StatusCallback* _get_isReadyIl2cppCallback();
    // Set static field: static private Viveport.Internal.StatusCallback isReadyIl2cppCallback
    static void _set_isReadyIl2cppCallback(::Viveport::Internal::StatusCallback* value);
    // Get static field: static private Viveport.Internal.StatusCallback2 goToAppIl2cppCallback
    static ::Viveport::Internal::StatusCallback2* _get_goToAppIl2cppCallback();
    // Set static field: static private Viveport.Internal.StatusCallback2 goToAppIl2cppCallback
    static void _set_goToAppIl2cppCallback(::Viveport::Internal::StatusCallback2* value);
    // Get static field: static private Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback
    static ::Viveport::Internal::StatusCallback2* _get_goToAppWithBranchNameIl2cppCallback();
    // Set static field: static private Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback
    static void _set_goToAppWithBranchNameIl2cppCallback(::Viveport::Internal::StatusCallback2* value);
    // Get static field: static private Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback
    static ::Viveport::Internal::StatusCallback2* _get_goToStoreIl2cppCallback();
    // Set static field: static private Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback
    static void _set_goToStoreIl2cppCallback(::Viveport::Internal::StatusCallback2* value);
    // Get static field: static private Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback
    static ::Viveport::Internal::StatusCallback2* _get_goToAppOrGoToStoreIl2cppCallback();
    // Set static field: static private Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback
    static void _set_goToAppOrGoToStoreIl2cppCallback(::Viveport::Internal::StatusCallback2* value);
    // public System.Void .ctor()
    // Offset: 0xD05048
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Deeplink* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Deeplink*, creationType>()));
    }
    // static private System.Void IsReadyIl2cppCallback(System.Int32 errorCode)
    // Offset: 0xD04BD8
    static void IsReadyIl2cppCallback(int errorCode);
    // static public System.Void IsReady(Viveport.StatusCallback callback)
    // Offset: 0xD04C3C
    static void IsReady(::Viveport::StatusCallback* callback);
    // static public System.Void GoToApp(Viveport.Deeplink/Viveport.DeeplinkChecker checker, System.String appId, System.String launchData)
    // Offset: 0xD04D98
    static void GoToApp(::Viveport::Deeplink::DeeplinkChecker* checker, ::StringW appId, ::StringW launchData);
    // static public System.Void GoToApp(Viveport.Deeplink/Viveport.DeeplinkChecker checker, System.String appId, System.String launchData, System.String branchName)
    // Offset: 0xD04E48
    static void GoToApp(::Viveport::Deeplink::DeeplinkChecker* checker, ::StringW appId, ::StringW launchData, ::StringW branchName);
    // static public System.Void GoToStore(Viveport.Deeplink/Viveport.DeeplinkChecker checker, System.String appId)
    // Offset: 0xD04EF8
    static void GoToStore(::Viveport::Deeplink::DeeplinkChecker* checker, ::StringW appId);
    // static public System.Void GoToAppOrGoToStore(Viveport.Deeplink/Viveport.DeeplinkChecker checker, System.String appId, System.String launchData)
    // Offset: 0xD04F90
    static void GoToAppOrGoToStore(::Viveport::Deeplink::DeeplinkChecker* checker, ::StringW appId, ::StringW launchData);
    // static public System.String GetAppLaunchData()
    // Offset: 0xD05040
    static ::StringW GetAppLaunchData();
  }; // Viveport.Deeplink
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Viveport::Deeplink::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Viveport::Deeplink::IsReadyIl2cppCallback
// Il2CppName: IsReadyIl2cppCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Viveport::Deeplink::IsReadyIl2cppCallback)> {
  static const MethodInfo* get() {
    static auto* errorCode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Deeplink*), "IsReadyIl2cppCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{errorCode});
  }
};
// Writing MetadataGetter for method: Viveport::Deeplink::IsReady
// Il2CppName: IsReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Viveport::StatusCallback*)>(&Viveport::Deeplink::IsReady)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("Viveport", "StatusCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Deeplink*), "IsReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: Viveport::Deeplink::GoToApp
// Il2CppName: GoToApp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Viveport::Deeplink::DeeplinkChecker*, ::StringW, ::StringW)>(&Viveport::Deeplink::GoToApp)> {
  static const MethodInfo* get() {
    static auto* checker = &::il2cpp_utils::GetClassFromName("Viveport", "Deeplink/DeeplinkChecker")->byval_arg;
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* launchData = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Deeplink*), "GoToApp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{checker, appId, launchData});
  }
};
// Writing MetadataGetter for method: Viveport::Deeplink::GoToApp
// Il2CppName: GoToApp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Viveport::Deeplink::DeeplinkChecker*, ::StringW, ::StringW, ::StringW)>(&Viveport::Deeplink::GoToApp)> {
  static const MethodInfo* get() {
    static auto* checker = &::il2cpp_utils::GetClassFromName("Viveport", "Deeplink/DeeplinkChecker")->byval_arg;
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* launchData = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* branchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Deeplink*), "GoToApp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{checker, appId, launchData, branchName});
  }
};
// Writing MetadataGetter for method: Viveport::Deeplink::GoToStore
// Il2CppName: GoToStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Viveport::Deeplink::DeeplinkChecker*, ::StringW)>(&Viveport::Deeplink::GoToStore)> {
  static const MethodInfo* get() {
    static auto* checker = &::il2cpp_utils::GetClassFromName("Viveport", "Deeplink/DeeplinkChecker")->byval_arg;
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Deeplink*), "GoToStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{checker, appId});
  }
};
// Writing MetadataGetter for method: Viveport::Deeplink::GoToAppOrGoToStore
// Il2CppName: GoToAppOrGoToStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Viveport::Deeplink::DeeplinkChecker*, ::StringW, ::StringW)>(&Viveport::Deeplink::GoToAppOrGoToStore)> {
  static const MethodInfo* get() {
    static auto* checker = &::il2cpp_utils::GetClassFromName("Viveport", "Deeplink/DeeplinkChecker")->byval_arg;
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* launchData = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Deeplink*), "GoToAppOrGoToStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{checker, appId, launchData});
  }
};
// Writing MetadataGetter for method: Viveport::Deeplink::GetAppLaunchData
// Il2CppName: GetAppLaunchData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&Viveport::Deeplink::GetAppLaunchData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Viveport::Deeplink*), "GetAppLaunchData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
