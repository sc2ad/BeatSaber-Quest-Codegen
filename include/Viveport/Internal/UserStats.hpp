// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Viveport::Internal
namespace Viveport::Internal {
  // Forward declaring type: StatusCallback
  class StatusCallback;
  // Forward declaring type: EAchievementDisplayAttribute
  struct EAchievementDisplayAttribute;
  // Forward declaring type: ELocale
  struct ELocale;
  // Forward declaring type: ELeaderboardDataRequest
  struct ELeaderboardDataRequest;
  // Forward declaring type: ELeaderboardDataTimeRange
  struct ELeaderboardDataTimeRange;
  // Forward declaring type: ELeaderboardSortMethod
  struct ELeaderboardSortMethod;
  // Forward declaring type: ELeaderboardDisplayType
  struct ELeaderboardDisplayType;
}
// Forward declaring namespace: Viveport
namespace Viveport {
  // Forward declaring type: Leaderboard
  class Leaderboard;
}
// Completed forward declares
// Type namespace: Viveport.Internal
namespace Viveport::Internal {
  // Forward declaring type: UserStats
  class UserStats;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Viveport::Internal::UserStats);
DEFINE_IL2CPP_ARG_TYPE(::Viveport::Internal::UserStats*, "Viveport.Internal", "UserStats");
// Type namespace: Viveport.Internal
namespace Viveport::Internal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Viveport.Internal.UserStats
  // [TokenAttribute] Offset: FFFFFFFF
  class UserStats : public ::Il2CppObject {
    public:
    // public System.Void .ctor()
    // Offset: 0x1BB2EB8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UserStats* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UserStats*, creationType>()));
    }
    // static System.Int32 IsReady(Viveport.Internal.StatusCallback callback)
    // Offset: 0x1BB16A4
    static int IsReady(::Viveport::Internal::StatusCallback* callback);
    // static System.Int32 DownloadStats(Viveport.Internal.StatusCallback callback)
    // Offset: 0x1BB17C4
    static int DownloadStats(::Viveport::Internal::StatusCallback* callback);
    // static System.Int32 UploadStats(Viveport.Internal.StatusCallback callback)
    // Offset: 0x1BB18E4
    static int UploadStats(::Viveport::Internal::StatusCallback* callback);
    // static System.Int32 SetStat(System.String pchName, System.Int32 nData)
    // Offset: 0x1BB1A04
    static int SetStat(::StringW pchName, int nData);
    // static System.Int32 SetStat(System.String pchName, System.Single fData)
    // Offset: 0x1BB1B2C
    static int SetStat(::StringW pchName, float fData);
    // static System.Int32 GetStat(System.String pchName, System.Int32 nData)
    // Offset: 0x1BB1C5C
    static int GetStat(::StringW pchName, int nData);
    // static System.Single GetStat(System.String pchName, System.Single fData)
    // Offset: 0x1BB1D84
    static float GetStat(::StringW pchName, float fData);
    // static System.Boolean GetAchievement(System.String pchName)
    // Offset: 0x1BB1EB4
    static bool GetAchievement(::StringW pchName);
    // static System.Int32 GetAchievementUnlockTime(System.String pchName)
    // Offset: 0x1BB1F88
    static int GetAchievementUnlockTime(::StringW pchName);
    // static System.Int32 SetAchievement(System.String pchName)
    // Offset: 0x1BB205C
    static int SetAchievement(::StringW pchName);
    // static System.Int32 ClearAchievement(System.String pchName)
    // Offset: 0x1BB2130
    static int ClearAchievement(::StringW pchName);
    // static System.String GetAchievementDisplayAttribute(System.String pchName, Viveport.Internal.EAchievementDisplayAttribute attr)
    // Offset: 0x1BB2204
    static ::StringW GetAchievementDisplayAttribute(::StringW pchName, ::Viveport::Internal::EAchievementDisplayAttribute attr);
    // static System.String GetAchievementDisplayAttribute(System.String pchName, Viveport.Internal.EAchievementDisplayAttribute attr, Viveport.Internal.ELocale locale)
    // Offset: 0x1BB232C
    static ::StringW GetAchievementDisplayAttribute(::StringW pchName, ::Viveport::Internal::EAchievementDisplayAttribute attr, ::Viveport::Internal::ELocale locale);
    // static System.String GetAchievementIcon(System.String pchName)
    // Offset: 0x1BB2494
    static ::StringW GetAchievementIcon(::StringW pchName);
    // static System.Int32 DownloadLeaderboardScores(Viveport.Internal.StatusCallback callback, System.String pchLeaderboardName, Viveport.Internal.ELeaderboardDataRequest nDataRequest, Viveport.Internal.ELeaderboardDataTimeRange nTimeRange, System.Int32 nRangeStart, System.Int32 nRangeEnd)
    // Offset: 0x1BB2568
    static int DownloadLeaderboardScores(::Viveport::Internal::StatusCallback* callback, ::StringW pchLeaderboardName, ::Viveport::Internal::ELeaderboardDataRequest nDataRequest, ::Viveport::Internal::ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd);
    // static System.Int32 UploadLeaderboardScore(Viveport.Internal.StatusCallback callback, System.String pchLeaderboardName, System.Int32 nScores)
    // Offset: 0x1BB27E0
    static int UploadLeaderboardScore(::Viveport::Internal::StatusCallback* callback, ::StringW pchLeaderboardName, int nScores);
    // static Viveport.Leaderboard GetLeaderboardScore(System.Int32 nIndex)
    // Offset: 0x1BB2988
    static ::Viveport::Leaderboard* GetLeaderboardScore(int nIndex);
    // static System.Int32 GetLeaderboardScoreCount()
    // Offset: 0x1BB2BC4
    static int GetLeaderboardScoreCount();
    // static Viveport.Internal.ELeaderboardSortMethod GetLeaderboardSortMethod()
    // Offset: 0x1BB2CC0
    static ::Viveport::Internal::ELeaderboardSortMethod GetLeaderboardSortMethod();
    // static Viveport.Internal.ELeaderboardDisplayType GetLeaderboardDisplayType()
    // Offset: 0x1BB2DBC
    static ::Viveport::Internal::ELeaderboardDisplayType GetLeaderboardDisplayType();
  }; // Viveport.Internal.UserStats
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Viveport::Internal::UserStats::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Viveport::Internal::UserStats::IsReady
// Il2CppName: IsReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Viveport::Internal::StatusCallback*)>(&Viveport::Internal::UserStats::IsReady)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("Viveport.Internal", "StatusCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "IsReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::DownloadStats
// Il2CppName: DownloadStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Viveport::Internal::StatusCallback*)>(&Viveport::Internal::UserStats::DownloadStats)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("Viveport.Internal", "StatusCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "DownloadStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::UploadStats
// Il2CppName: UploadStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Viveport::Internal::StatusCallback*)>(&Viveport::Internal::UserStats::UploadStats)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("Viveport.Internal", "StatusCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "UploadStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::SetStat
// Il2CppName: SetStat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int)>(&Viveport::Internal::UserStats::SetStat)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* nData = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "SetStat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName, nData});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::SetStat
// Il2CppName: SetStat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, float)>(&Viveport::Internal::UserStats::SetStat)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fData = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "SetStat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName, fData});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::GetStat
// Il2CppName: GetStat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int)>(&Viveport::Internal::UserStats::GetStat)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* nData = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "GetStat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName, nData});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::GetStat
// Il2CppName: GetStat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::StringW, float)>(&Viveport::Internal::UserStats::GetStat)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fData = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "GetStat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName, fData});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::GetAchievement
// Il2CppName: GetAchievement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&Viveport::Internal::UserStats::GetAchievement)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "GetAchievement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::GetAchievementUnlockTime
// Il2CppName: GetAchievementUnlockTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&Viveport::Internal::UserStats::GetAchievementUnlockTime)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "GetAchievementUnlockTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::SetAchievement
// Il2CppName: SetAchievement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&Viveport::Internal::UserStats::SetAchievement)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "SetAchievement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::ClearAchievement
// Il2CppName: ClearAchievement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&Viveport::Internal::UserStats::ClearAchievement)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "ClearAchievement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::GetAchievementDisplayAttribute
// Il2CppName: GetAchievementDisplayAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::Viveport::Internal::EAchievementDisplayAttribute)>(&Viveport::Internal::UserStats::GetAchievementDisplayAttribute)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attr = &::il2cpp_utils::GetClassFromName("Viveport.Internal", "EAchievementDisplayAttribute")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "GetAchievementDisplayAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName, attr});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::GetAchievementDisplayAttribute
// Il2CppName: GetAchievementDisplayAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::Viveport::Internal::EAchievementDisplayAttribute, ::Viveport::Internal::ELocale)>(&Viveport::Internal::UserStats::GetAchievementDisplayAttribute)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attr = &::il2cpp_utils::GetClassFromName("Viveport.Internal", "EAchievementDisplayAttribute")->byval_arg;
    static auto* locale = &::il2cpp_utils::GetClassFromName("Viveport.Internal", "ELocale")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "GetAchievementDisplayAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName, attr, locale});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::GetAchievementIcon
// Il2CppName: GetAchievementIcon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&Viveport::Internal::UserStats::GetAchievementIcon)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "GetAchievementIcon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::DownloadLeaderboardScores
// Il2CppName: DownloadLeaderboardScores
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Viveport::Internal::StatusCallback*, ::StringW, ::Viveport::Internal::ELeaderboardDataRequest, ::Viveport::Internal::ELeaderboardDataTimeRange, int, int)>(&Viveport::Internal::UserStats::DownloadLeaderboardScores)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("Viveport.Internal", "StatusCallback")->byval_arg;
    static auto* pchLeaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* nDataRequest = &::il2cpp_utils::GetClassFromName("Viveport.Internal", "ELeaderboardDataRequest")->byval_arg;
    static auto* nTimeRange = &::il2cpp_utils::GetClassFromName("Viveport.Internal", "ELeaderboardDataTimeRange")->byval_arg;
    static auto* nRangeStart = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* nRangeEnd = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "DownloadLeaderboardScores", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, pchLeaderboardName, nDataRequest, nTimeRange, nRangeStart, nRangeEnd});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::UploadLeaderboardScore
// Il2CppName: UploadLeaderboardScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Viveport::Internal::StatusCallback*, ::StringW, int)>(&Viveport::Internal::UserStats::UploadLeaderboardScore)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("Viveport.Internal", "StatusCallback")->byval_arg;
    static auto* pchLeaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* nScores = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "UploadLeaderboardScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, pchLeaderboardName, nScores});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::GetLeaderboardScore
// Il2CppName: GetLeaderboardScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Viveport::Leaderboard* (*)(int)>(&Viveport::Internal::UserStats::GetLeaderboardScore)> {
  static const MethodInfo* get() {
    static auto* nIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "GetLeaderboardScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nIndex});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::GetLeaderboardScoreCount
// Il2CppName: GetLeaderboardScoreCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Viveport::Internal::UserStats::GetLeaderboardScoreCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "GetLeaderboardScoreCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::GetLeaderboardSortMethod
// Il2CppName: GetLeaderboardSortMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Viveport::Internal::ELeaderboardSortMethod (*)()>(&Viveport::Internal::UserStats::GetLeaderboardSortMethod)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "GetLeaderboardSortMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Viveport::Internal::UserStats::GetLeaderboardDisplayType
// Il2CppName: GetLeaderboardDisplayType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Viveport::Internal::ELeaderboardDisplayType (*)()>(&Viveport::Internal::UserStats::GetLeaderboardDisplayType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Viveport::Internal::UserStats*), "GetLeaderboardDisplayType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
