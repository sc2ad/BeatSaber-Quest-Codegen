// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Viveport.Internal
namespace Viveport::Internal {
  // Forward declaring type: ELeaderboardDataTimeRange
  struct ELeaderboardDataTimeRange;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Viveport::Internal::ELeaderboardDataTimeRange, "Viveport.Internal", "ELeaderboardDataTimeRange");
// Type namespace: Viveport.Internal
namespace Viveport::Internal {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Viveport.Internal.ELeaderboardDataTimeRange
  // [TokenAttribute] Offset: FFFFFFFF
  struct ELeaderboardDataTimeRange/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ELeaderboardDataTimeRange
    constexpr ELeaderboardDataTimeRange(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeAllTime
    static constexpr const int k_ELeaderboardDataScropeAllTime = 0;
    // Get static field: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeAllTime
    static ::Viveport::Internal::ELeaderboardDataTimeRange _get_k_ELeaderboardDataScropeAllTime();
    // Set static field: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeAllTime
    static void _set_k_ELeaderboardDataScropeAllTime(::Viveport::Internal::ELeaderboardDataTimeRange value);
    // static field const value: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeDaily
    static constexpr const int k_ELeaderboardDataScropeDaily = 1;
    // Get static field: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeDaily
    static ::Viveport::Internal::ELeaderboardDataTimeRange _get_k_ELeaderboardDataScropeDaily();
    // Set static field: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeDaily
    static void _set_k_ELeaderboardDataScropeDaily(::Viveport::Internal::ELeaderboardDataTimeRange value);
    // static field const value: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeWeekly
    static constexpr const int k_ELeaderboardDataScropeWeekly = 2;
    // Get static field: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeWeekly
    static ::Viveport::Internal::ELeaderboardDataTimeRange _get_k_ELeaderboardDataScropeWeekly();
    // Set static field: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeWeekly
    static void _set_k_ELeaderboardDataScropeWeekly(::Viveport::Internal::ELeaderboardDataTimeRange value);
    // static field const value: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeMonthly
    static constexpr const int k_ELeaderboardDataScropeMonthly = 3;
    // Get static field: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeMonthly
    static ::Viveport::Internal::ELeaderboardDataTimeRange _get_k_ELeaderboardDataScropeMonthly();
    // Set static field: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeMonthly
    static void _set_k_ELeaderboardDataScropeMonthly(::Viveport::Internal::ELeaderboardDataTimeRange value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Viveport.Internal.ELeaderboardDataTimeRange
  #pragma pack(pop)
  static check_size<sizeof(ELeaderboardDataTimeRange), 0 + sizeof(int)> __Viveport_Internal_ELeaderboardDataTimeRangeSizeCheck;
  static_assert(sizeof(ELeaderboardDataTimeRange) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
