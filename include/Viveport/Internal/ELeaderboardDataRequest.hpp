// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Viveport.Internal
namespace Viveport::Internal {
  // Forward declaring type: ELeaderboardDataRequest
  struct ELeaderboardDataRequest;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Viveport::Internal::ELeaderboardDataRequest, "Viveport.Internal", "ELeaderboardDataRequest");
// Type namespace: Viveport.Internal
namespace Viveport::Internal {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Viveport.Internal.ELeaderboardDataRequest
  // [TokenAttribute] Offset: FFFFFFFF
  struct ELeaderboardDataRequest/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ELeaderboardDataRequest
    constexpr ELeaderboardDataRequest(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestGlobal
    static constexpr const int k_ELeaderboardDataRequestGlobal = 0;
    // Get static field: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestGlobal
    static ::Viveport::Internal::ELeaderboardDataRequest _get_k_ELeaderboardDataRequestGlobal();
    // Set static field: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestGlobal
    static void _set_k_ELeaderboardDataRequestGlobal(::Viveport::Internal::ELeaderboardDataRequest value);
    // static field const value: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestGlobalAroundUser
    static constexpr const int k_ELeaderboardDataRequestGlobalAroundUser = 1;
    // Get static field: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestGlobalAroundUser
    static ::Viveport::Internal::ELeaderboardDataRequest _get_k_ELeaderboardDataRequestGlobalAroundUser();
    // Set static field: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestGlobalAroundUser
    static void _set_k_ELeaderboardDataRequestGlobalAroundUser(::Viveport::Internal::ELeaderboardDataRequest value);
    // static field const value: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestLocal
    static constexpr const int k_ELeaderboardDataRequestLocal = 2;
    // Get static field: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestLocal
    static ::Viveport::Internal::ELeaderboardDataRequest _get_k_ELeaderboardDataRequestLocal();
    // Set static field: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestLocal
    static void _set_k_ELeaderboardDataRequestLocal(::Viveport::Internal::ELeaderboardDataRequest value);
    // static field const value: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestLocaleAroundUser
    static constexpr const int k_ELeaderboardDataRequestLocaleAroundUser = 3;
    // Get static field: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestLocaleAroundUser
    static ::Viveport::Internal::ELeaderboardDataRequest _get_k_ELeaderboardDataRequestLocaleAroundUser();
    // Set static field: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestLocaleAroundUser
    static void _set_k_ELeaderboardDataRequestLocaleAroundUser(::Viveport::Internal::ELeaderboardDataRequest value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Viveport.Internal.ELeaderboardDataRequest
  #pragma pack(pop)
  static check_size<sizeof(ELeaderboardDataRequest), 0 + sizeof(int)> __Viveport_Internal_ELeaderboardDataRequestSizeCheck;
  static_assert(sizeof(ELeaderboardDataRequest) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
