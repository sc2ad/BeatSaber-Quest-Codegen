// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Viveport
namespace Viveport {
  // Forward declaring type: StatusCallback
  class StatusCallback;
  // Forward declaring type: Locale
  struct Locale;
  // Forward declaring type: Leaderboard
  class Leaderboard;
}
// Forward declaring namespace: Viveport::Internal
namespace Viveport::Internal {
  // Forward declaring type: StatusCallback
  class StatusCallback;
}
// Completed forward declares
// Type namespace: Viveport
namespace Viveport {
  // Forward declaring type: UserStats
  class UserStats;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Viveport::UserStats);
DEFINE_IL2CPP_ARG_TYPE(::Viveport::UserStats*, "Viveport", "UserStats");
// Type namespace: Viveport
namespace Viveport {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Viveport.UserStats
  // [TokenAttribute] Offset: FFFFFFFF
  class UserStats : public ::Il2CppObject {
    public:
    // Nested type: ::Viveport::UserStats::LeaderBoardRequestType
    struct LeaderBoardRequestType;
    // Nested type: ::Viveport::UserStats::LeaderBoardTimeRange
    struct LeaderBoardTimeRange;
    // Nested type: ::Viveport::UserStats::LeaderBoardSortMethod
    struct LeaderBoardSortMethod;
    // Nested type: ::Viveport::UserStats::LeaderBoardDiaplayType
    struct LeaderBoardDiaplayType;
    // Nested type: ::Viveport::UserStats::LeaderBoardScoreMethod
    struct LeaderBoardScoreMethod;
    // Nested type: ::Viveport::UserStats::AchievementDisplayAttribute
    struct AchievementDisplayAttribute;
    // Get static field: static private Viveport.Internal.StatusCallback isReadyIl2cppCallback
    static ::Viveport::Internal::StatusCallback* _get_isReadyIl2cppCallback();
    // Set static field: static private Viveport.Internal.StatusCallback isReadyIl2cppCallback
    static void _set_isReadyIl2cppCallback(::Viveport::Internal::StatusCallback* value);
    // Get static field: static private Viveport.Internal.StatusCallback downloadStatsIl2cppCallback
    static ::Viveport::Internal::StatusCallback* _get_downloadStatsIl2cppCallback();
    // Set static field: static private Viveport.Internal.StatusCallback downloadStatsIl2cppCallback
    static void _set_downloadStatsIl2cppCallback(::Viveport::Internal::StatusCallback* value);
    // Get static field: static private Viveport.Internal.StatusCallback uploadStatsIl2cppCallback
    static ::Viveport::Internal::StatusCallback* _get_uploadStatsIl2cppCallback();
    // Set static field: static private Viveport.Internal.StatusCallback uploadStatsIl2cppCallback
    static void _set_uploadStatsIl2cppCallback(::Viveport::Internal::StatusCallback* value);
    // Get static field: static private Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback
    static ::Viveport::Internal::StatusCallback* _get_downloadLeaderboardScoresIl2cppCallback();
    // Set static field: static private Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback
    static void _set_downloadLeaderboardScoresIl2cppCallback(::Viveport::Internal::StatusCallback* value);
    // Get static field: static private Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback
    static ::Viveport::Internal::StatusCallback* _get_uploadLeaderboardScoreIl2cppCallback();
    // Set static field: static private Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback
    static void _set_uploadLeaderboardScoreIl2cppCallback(::Viveport::Internal::StatusCallback* value);
    // public System.Void .ctor()
    // Offset: 0x1BB5200
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UserStats* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UserStats*, creationType>()));
    }
    // static private System.Void IsReadyIl2cppCallback(System.Int32 errorCode)
    // Offset: 0x1BB492C
    static void IsReadyIl2cppCallback(int errorCode);
    // static public System.Int32 IsReady(Viveport.StatusCallback callback)
    // Offset: 0x1BB4B0C
    static int IsReady(::Viveport::StatusCallback* callback);
    // static private System.Void DownloadStatsIl2cppCallback(System.Int32 errorCode)
    // Offset: 0x1BB498C
    static void DownloadStatsIl2cppCallback(int errorCode);
    // static public System.Int32 DownloadStats(Viveport.StatusCallback callback)
    // Offset: 0x1BB4C54
    static int DownloadStats(::Viveport::StatusCallback* callback);
    // static public System.Int32 GetStat(System.String name, System.Int32 defaultValue)
    // Offset: 0x1BB4D9C
    static int GetStat(::StringW name, int defaultValue);
    // static public System.Single GetStat(System.String name, System.Single defaultValue)
    // Offset: 0x1BB4DA0
    static float GetStat(::StringW name, float defaultValue);
    // static public System.Void SetStat(System.String name, System.Int32 value)
    // Offset: 0x1BB4DA4
    static void SetStat(::StringW name, int value);
    // static public System.Void SetStat(System.String name, System.Single value)
    // Offset: 0x1BB4DA8
    static void SetStat(::StringW name, float value);
    // static private System.Void UploadStatsIl2cppCallback(System.Int32 errorCode)
    // Offset: 0x1BB49EC
    static void UploadStatsIl2cppCallback(int errorCode);
    // static public System.Int32 UploadStats(Viveport.StatusCallback callback)
    // Offset: 0x1BB4DAC
    static int UploadStats(::Viveport::StatusCallback* callback);
    // static public System.Boolean GetAchievement(System.String pchName)
    // Offset: 0x1BB4EF4
    static bool GetAchievement(::StringW pchName);
    // static public System.Int32 GetAchievementUnlockTime(System.String pchName)
    // Offset: 0x1BB4EF8
    static int GetAchievementUnlockTime(::StringW pchName);
    // static public System.String GetAchievementIcon(System.String pchName)
    // Offset: 0x1BB4EFC
    static ::StringW GetAchievementIcon(::StringW pchName);
    // static public System.String GetAchievementDisplayAttribute(System.String pchName, Viveport.UserStats/Viveport.AchievementDisplayAttribute attr)
    // Offset: 0x1BB4F00
    static ::StringW GetAchievementDisplayAttribute(::StringW pchName, ::Viveport::UserStats::AchievementDisplayAttribute attr);
    // static public System.String GetAchievementDisplayAttribute(System.String pchName, Viveport.UserStats/Viveport.AchievementDisplayAttribute attr, Viveport.Locale locale)
    // Offset: 0x1BB4F04
    static ::StringW GetAchievementDisplayAttribute(::StringW pchName, ::Viveport::UserStats::AchievementDisplayAttribute attr, ::Viveport::Locale locale);
    // static public System.Int32 SetAchievement(System.String pchName)
    // Offset: 0x1BB4F08
    static int SetAchievement(::StringW pchName);
    // static public System.Int32 ClearAchievement(System.String pchName)
    // Offset: 0x1BB4F0C
    static int ClearAchievement(::StringW pchName);
    // static private System.Void DownloadLeaderboardScoresIl2cppCallback(System.Int32 errorCode)
    // Offset: 0x1BB4A4C
    static void DownloadLeaderboardScoresIl2cppCallback(int errorCode);
    // static public System.Int32 DownloadLeaderboardScores(Viveport.StatusCallback callback, System.String pchLeaderboardName, Viveport.UserStats/Viveport.LeaderBoardRequestType eLeaderboardDataRequest, Viveport.UserStats/Viveport.LeaderBoardTimeRange eLeaderboardDataTimeRange, System.Int32 nRangeStart, System.Int32 nRangeEnd)
    // Offset: 0x1BB4F10
    static int DownloadLeaderboardScores(::Viveport::StatusCallback* callback, ::StringW pchLeaderboardName, ::Viveport::UserStats::LeaderBoardRequestType eLeaderboardDataRequest, ::Viveport::UserStats::LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd);
    // static private System.Void UploadLeaderboardScoreIl2cppCallback(System.Int32 errorCode)
    // Offset: 0x1BB4AAC
    static void UploadLeaderboardScoreIl2cppCallback(int errorCode);
    // static public System.Int32 UploadLeaderboardScore(Viveport.StatusCallback callback, System.String pchLeaderboardName, System.Int32 nScore)
    // Offset: 0x1BB5090
    static int UploadLeaderboardScore(::Viveport::StatusCallback* callback, ::StringW pchLeaderboardName, int nScore);
    // static public Viveport.Leaderboard GetLeaderboardScore(System.Int32 index)
    // Offset: 0x1BB51F0
    static ::Viveport::Leaderboard* GetLeaderboardScore(int index);
    // static public System.Int32 GetLeaderboardScoreCount()
    // Offset: 0x1BB51F4
    static int GetLeaderboardScoreCount();
    // static public Viveport.UserStats/Viveport.LeaderBoardSortMethod GetLeaderboardSortMethod()
    // Offset: 0x1BB51F8
    static ::Viveport::UserStats::LeaderBoardSortMethod GetLeaderboardSortMethod();
    // static public Viveport.UserStats/Viveport.LeaderBoardDiaplayType GetLeaderboardDisplayType()
    // Offset: 0x1BB51FC
    static ::Viveport::UserStats::LeaderBoardDiaplayType GetLeaderboardDisplayType();
  }; // Viveport.UserStats
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Viveport::UserStats::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Viveport::UserStats::IsReadyIl2cppCallback
// Il2CppName: IsReadyIl2cppCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Viveport::UserStats::IsReadyIl2cppCallback)> {
  static const MethodInfo* get() {
    static auto* errorCode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "IsReadyIl2cppCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{errorCode});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::IsReady
// Il2CppName: IsReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Viveport::StatusCallback*)>(&Viveport::UserStats::IsReady)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("Viveport", "StatusCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "IsReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::DownloadStatsIl2cppCallback
// Il2CppName: DownloadStatsIl2cppCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Viveport::UserStats::DownloadStatsIl2cppCallback)> {
  static const MethodInfo* get() {
    static auto* errorCode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "DownloadStatsIl2cppCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{errorCode});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::DownloadStats
// Il2CppName: DownloadStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Viveport::StatusCallback*)>(&Viveport::UserStats::DownloadStats)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("Viveport", "StatusCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "DownloadStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::GetStat
// Il2CppName: GetStat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int)>(&Viveport::UserStats::GetStat)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* defaultValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "GetStat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, defaultValue});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::GetStat
// Il2CppName: GetStat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::StringW, float)>(&Viveport::UserStats::GetStat)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* defaultValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "GetStat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, defaultValue});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::SetStat
// Il2CppName: SetStat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, int)>(&Viveport::UserStats::SetStat)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "SetStat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::SetStat
// Il2CppName: SetStat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, float)>(&Viveport::UserStats::SetStat)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "SetStat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::UploadStatsIl2cppCallback
// Il2CppName: UploadStatsIl2cppCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Viveport::UserStats::UploadStatsIl2cppCallback)> {
  static const MethodInfo* get() {
    static auto* errorCode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "UploadStatsIl2cppCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{errorCode});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::UploadStats
// Il2CppName: UploadStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Viveport::StatusCallback*)>(&Viveport::UserStats::UploadStats)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("Viveport", "StatusCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "UploadStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::GetAchievement
// Il2CppName: GetAchievement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&Viveport::UserStats::GetAchievement)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "GetAchievement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::GetAchievementUnlockTime
// Il2CppName: GetAchievementUnlockTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&Viveport::UserStats::GetAchievementUnlockTime)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "GetAchievementUnlockTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::GetAchievementIcon
// Il2CppName: GetAchievementIcon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&Viveport::UserStats::GetAchievementIcon)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "GetAchievementIcon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::GetAchievementDisplayAttribute
// Il2CppName: GetAchievementDisplayAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::Viveport::UserStats::AchievementDisplayAttribute)>(&Viveport::UserStats::GetAchievementDisplayAttribute)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attr = &::il2cpp_utils::GetClassFromName("Viveport", "UserStats/AchievementDisplayAttribute")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "GetAchievementDisplayAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName, attr});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::GetAchievementDisplayAttribute
// Il2CppName: GetAchievementDisplayAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::Viveport::UserStats::AchievementDisplayAttribute, ::Viveport::Locale)>(&Viveport::UserStats::GetAchievementDisplayAttribute)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attr = &::il2cpp_utils::GetClassFromName("Viveport", "UserStats/AchievementDisplayAttribute")->byval_arg;
    static auto* locale = &::il2cpp_utils::GetClassFromName("Viveport", "Locale")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "GetAchievementDisplayAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName, attr, locale});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::SetAchievement
// Il2CppName: SetAchievement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&Viveport::UserStats::SetAchievement)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "SetAchievement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::ClearAchievement
// Il2CppName: ClearAchievement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&Viveport::UserStats::ClearAchievement)> {
  static const MethodInfo* get() {
    static auto* pchName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "ClearAchievement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchName});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::DownloadLeaderboardScoresIl2cppCallback
// Il2CppName: DownloadLeaderboardScoresIl2cppCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Viveport::UserStats::DownloadLeaderboardScoresIl2cppCallback)> {
  static const MethodInfo* get() {
    static auto* errorCode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "DownloadLeaderboardScoresIl2cppCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{errorCode});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::DownloadLeaderboardScores
// Il2CppName: DownloadLeaderboardScores
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Viveport::StatusCallback*, ::StringW, ::Viveport::UserStats::LeaderBoardRequestType, ::Viveport::UserStats::LeaderBoardTimeRange, int, int)>(&Viveport::UserStats::DownloadLeaderboardScores)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("Viveport", "StatusCallback")->byval_arg;
    static auto* pchLeaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* eLeaderboardDataRequest = &::il2cpp_utils::GetClassFromName("Viveport", "UserStats/LeaderBoardRequestType")->byval_arg;
    static auto* eLeaderboardDataTimeRange = &::il2cpp_utils::GetClassFromName("Viveport", "UserStats/LeaderBoardTimeRange")->byval_arg;
    static auto* nRangeStart = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* nRangeEnd = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "DownloadLeaderboardScores", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, pchLeaderboardName, eLeaderboardDataRequest, eLeaderboardDataTimeRange, nRangeStart, nRangeEnd});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::UploadLeaderboardScoreIl2cppCallback
// Il2CppName: UploadLeaderboardScoreIl2cppCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Viveport::UserStats::UploadLeaderboardScoreIl2cppCallback)> {
  static const MethodInfo* get() {
    static auto* errorCode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "UploadLeaderboardScoreIl2cppCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{errorCode});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::UploadLeaderboardScore
// Il2CppName: UploadLeaderboardScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Viveport::StatusCallback*, ::StringW, int)>(&Viveport::UserStats::UploadLeaderboardScore)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("Viveport", "StatusCallback")->byval_arg;
    static auto* pchLeaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* nScore = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "UploadLeaderboardScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, pchLeaderboardName, nScore});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::GetLeaderboardScore
// Il2CppName: GetLeaderboardScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Viveport::Leaderboard* (*)(int)>(&Viveport::UserStats::GetLeaderboardScore)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "GetLeaderboardScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::GetLeaderboardScoreCount
// Il2CppName: GetLeaderboardScoreCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Viveport::UserStats::GetLeaderboardScoreCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "GetLeaderboardScoreCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::GetLeaderboardSortMethod
// Il2CppName: GetLeaderboardSortMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Viveport::UserStats::LeaderBoardSortMethod (*)()>(&Viveport::UserStats::GetLeaderboardSortMethod)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "GetLeaderboardSortMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Viveport::UserStats::GetLeaderboardDisplayType
// Il2CppName: GetLeaderboardDisplayType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Viveport::UserStats::LeaderBoardDiaplayType (*)()>(&Viveport::UserStats::GetLeaderboardDisplayType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Viveport::UserStats*), "GetLeaderboardDisplayType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
