// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Viveport.IAPurchase
#include "Viveport/IAPurchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Viveport::IAPurchase::QuerySubscritionResponse);
DEFINE_IL2CPP_ARG_TYPE(::Viveport::IAPurchase::QuerySubscritionResponse*, "Viveport", "IAPurchase/QuerySubscritionResponse");
// Type namespace: Viveport
namespace Viveport {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Viveport.IAPurchase/Viveport.QuerySubscritionResponse
  // [TokenAttribute] Offset: FFFFFFFF
  class IAPurchase::QuerySubscritionResponse : public ::Il2CppObject {
    public:
    public:
    // private System.Int32 <statusCode>k__BackingField
    // Size: 0x4
    // Offset: 0x10
    int statusCode;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: statusCode and: message
    char __padding0[0x4] = {};
    // private System.String <message>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::StringW message;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Collections.Generic.List`1<Viveport.IAPurchase/Viveport.Subscription> <subscriptions>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::Viveport::IAPurchase::Subscription*>* subscriptions;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Viveport::IAPurchase::Subscription*>*) == 0x8);
    public:
    // Get instance field reference: private System.Int32 <statusCode>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$statusCode$k__BackingField();
    // Get instance field reference: private System.String <message>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$message$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.List`1<Viveport.IAPurchase/Viveport.Subscription> <subscriptions>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Viveport::IAPurchase::Subscription*>*& dyn_$subscriptions$k__BackingField();
    // public System.Int32 get_statusCode()
    // Offset: 0x1BAC8D8
    int get_statusCode();
    // public System.Void set_statusCode(System.Int32 value)
    // Offset: 0x1BAC8E0
    void set_statusCode(int value);
    // public System.String get_message()
    // Offset: 0x1BAC8E8
    ::StringW get_message();
    // public System.Void set_message(System.String value)
    // Offset: 0x1BAC8F0
    void set_message(::StringW value);
    // public System.Collections.Generic.List`1<Viveport.IAPurchase/Viveport.Subscription> get_subscriptions()
    // Offset: 0x1BAC8F8
    ::System::Collections::Generic::List_1<::Viveport::IAPurchase::Subscription*>* get_subscriptions();
    // public System.Void set_subscriptions(System.Collections.Generic.List`1<Viveport.IAPurchase/Viveport.Subscription> value)
    // Offset: 0x1BAC900
    void set_subscriptions(::System::Collections::Generic::List_1<::Viveport::IAPurchase::Subscription*>* value);
    // public System.Void .ctor()
    // Offset: 0x1BAC908
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static IAPurchase::QuerySubscritionResponse* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QuerySubscritionResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<IAPurchase::QuerySubscritionResponse*, creationType>()));
    }
  }; // Viveport.IAPurchase/Viveport.QuerySubscritionResponse
  #pragma pack(pop)
  static check_size<sizeof(IAPurchase::QuerySubscritionResponse), 32 + sizeof(::System::Collections::Generic::List_1<::Viveport::IAPurchase::Subscription*>*)> __Viveport_IAPurchase_QuerySubscritionResponseSizeCheck;
  static_assert(sizeof(IAPurchase::QuerySubscritionResponse) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Viveport::IAPurchase::QuerySubscritionResponse::get_statusCode
// Il2CppName: get_statusCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Viveport::IAPurchase::QuerySubscritionResponse::*)()>(&Viveport::IAPurchase::QuerySubscritionResponse::get_statusCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Viveport::IAPurchase::QuerySubscritionResponse*), "get_statusCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Viveport::IAPurchase::QuerySubscritionResponse::set_statusCode
// Il2CppName: set_statusCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Viveport::IAPurchase::QuerySubscritionResponse::*)(int)>(&Viveport::IAPurchase::QuerySubscritionResponse::set_statusCode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::IAPurchase::QuerySubscritionResponse*), "set_statusCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Viveport::IAPurchase::QuerySubscritionResponse::get_message
// Il2CppName: get_message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Viveport::IAPurchase::QuerySubscritionResponse::*)()>(&Viveport::IAPurchase::QuerySubscritionResponse::get_message)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Viveport::IAPurchase::QuerySubscritionResponse*), "get_message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Viveport::IAPurchase::QuerySubscritionResponse::set_message
// Il2CppName: set_message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Viveport::IAPurchase::QuerySubscritionResponse::*)(::StringW)>(&Viveport::IAPurchase::QuerySubscritionResponse::set_message)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::IAPurchase::QuerySubscritionResponse*), "set_message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Viveport::IAPurchase::QuerySubscritionResponse::get_subscriptions
// Il2CppName: get_subscriptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::Viveport::IAPurchase::Subscription*>* (Viveport::IAPurchase::QuerySubscritionResponse::*)()>(&Viveport::IAPurchase::QuerySubscritionResponse::get_subscriptions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Viveport::IAPurchase::QuerySubscritionResponse*), "get_subscriptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Viveport::IAPurchase::QuerySubscritionResponse::set_subscriptions
// Il2CppName: set_subscriptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Viveport::IAPurchase::QuerySubscritionResponse::*)(::System::Collections::Generic::List_1<::Viveport::IAPurchase::Subscription*>*)>(&Viveport::IAPurchase::QuerySubscritionResponse::set_subscriptions)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Viveport", "IAPurchase/Subscription")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Viveport::IAPurchase::QuerySubscritionResponse*), "set_subscriptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Viveport::IAPurchase::QuerySubscritionResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
