// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Viveport
namespace Viveport {
  // Forward declaring type: Locale
  struct Locale;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Viveport::Locale, "Viveport", "Locale");
// Type namespace: Viveport
namespace Viveport {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Viveport.Locale
  // [TokenAttribute] Offset: FFFFFFFF
  struct Locale/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: Locale
    constexpr Locale(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Viveport.Locale US
    static constexpr const int US = 0;
    // Get static field: static public Viveport.Locale US
    static ::Viveport::Locale _get_US();
    // Set static field: static public Viveport.Locale US
    static void _set_US(::Viveport::Locale value);
    // static field const value: static public Viveport.Locale DE
    static constexpr const int DE = 1;
    // Get static field: static public Viveport.Locale DE
    static ::Viveport::Locale _get_DE();
    // Set static field: static public Viveport.Locale DE
    static void _set_DE(::Viveport::Locale value);
    // static field const value: static public Viveport.Locale JP
    static constexpr const int JP = 2;
    // Get static field: static public Viveport.Locale JP
    static ::Viveport::Locale _get_JP();
    // Set static field: static public Viveport.Locale JP
    static void _set_JP(::Viveport::Locale value);
    // static field const value: static public Viveport.Locale KR
    static constexpr const int KR = 3;
    // Get static field: static public Viveport.Locale KR
    static ::Viveport::Locale _get_KR();
    // Set static field: static public Viveport.Locale KR
    static void _set_KR(::Viveport::Locale value);
    // static field const value: static public Viveport.Locale RU
    static constexpr const int RU = 4;
    // Get static field: static public Viveport.Locale RU
    static ::Viveport::Locale _get_RU();
    // Set static field: static public Viveport.Locale RU
    static void _set_RU(::Viveport::Locale value);
    // static field const value: static public Viveport.Locale CN
    static constexpr const int CN = 5;
    // Get static field: static public Viveport.Locale CN
    static ::Viveport::Locale _get_CN();
    // Set static field: static public Viveport.Locale CN
    static void _set_CN(::Viveport::Locale value);
    // static field const value: static public Viveport.Locale TW
    static constexpr const int TW = 6;
    // Get static field: static public Viveport.Locale TW
    static ::Viveport::Locale _get_TW();
    // Set static field: static public Viveport.Locale TW
    static void _set_TW(::Viveport::Locale value);
    // static field const value: static public Viveport.Locale FR
    static constexpr const int FR = 7;
    // Get static field: static public Viveport.Locale FR
    static ::Viveport::Locale _get_FR();
    // Set static field: static public Viveport.Locale FR
    static void _set_FR(::Viveport::Locale value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Viveport.Locale
  #pragma pack(pop)
  static check_size<sizeof(Locale), 0 + sizeof(int)> __Viveport_LocaleSizeCheck;
  static_assert(sizeof(Locale) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
