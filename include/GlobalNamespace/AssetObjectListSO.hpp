// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PersistentScriptableObject
#include "GlobalNamespace/PersistentScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: AssetObjectListSO
  class AssetObjectListSO;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::AssetObjectListSO);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::AssetObjectListSO*, "", "AssetObjectListSO");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: AssetObjectListSO
  // [TokenAttribute] Offset: FFFFFFFF
  class AssetObjectListSO : public ::GlobalNamespace::PersistentScriptableObject {
    public:
    public:
    // [ReorderableAttribute] Offset: 0x10EDD40
    // private UnityEngine.Object[] _objects
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::UnityEngine::Object*> objects;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Object*>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.Object[] _objects
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Object*>& dyn__objects();
    // public UnityEngine.Object[] get_objects()
    // Offset: 0x14F9778
    ::ArrayW<::UnityEngine::Object*> get_objects();
    // public System.Void .ctor()
    // Offset: 0x14F9780
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AssetObjectListSO* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AssetObjectListSO::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AssetObjectListSO*, creationType>()));
    }
  }; // AssetObjectListSO
  #pragma pack(pop)
  static check_size<sizeof(AssetObjectListSO), 24 + sizeof(::ArrayW<::UnityEngine::Object*>)> __GlobalNamespace_AssetObjectListSOSizeCheck;
  static_assert(sizeof(AssetObjectListSO) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::AssetObjectListSO::get_objects
// Il2CppName: get_objects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Object*> (GlobalNamespace::AssetObjectListSO::*)()>(&GlobalNamespace::AssetObjectListSO::get_objects)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AssetObjectListSO*), "get_objects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AssetObjectListSO::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
