// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: GridView
#include "GlobalNamespace/GridView.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: MonoBehaviour because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: GridView/IDataSource
  // [TokenAttribute] Offset: FFFFFFFF
  class GridView::IDataSource {
    public:
    // Creating value type constructor for type: IDataSource
    IDataSource() noexcept {}
    // public System.Int32 GetNumberOfCells()
    // Offset: 0xFFFFFFFF
    int GetNumberOfCells();
    // public System.Single GetCellWidth()
    // Offset: 0xFFFFFFFF
    float GetCellWidth();
    // public System.Single GetCellHeight()
    // Offset: 0xFFFFFFFF
    float GetCellHeight();
    // public UnityEngine.MonoBehaviour CellForIdx(GridView gridView, System.Int32 idx)
    // Offset: 0xFFFFFFFF
    UnityEngine::MonoBehaviour* CellForIdx(GlobalNamespace::GridView* gridView, int idx);
  }; // GridView/IDataSource
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::GridView::IDataSource*, "", "GridView/IDataSource");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GridView::IDataSource::GetNumberOfCells
// Il2CppName: GetNumberOfCells
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::GridView::IDataSource::*)()>(&GlobalNamespace::GridView::IDataSource::GetNumberOfCells)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GridView::IDataSource*), "GetNumberOfCells", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GridView::IDataSource::GetCellWidth
// Il2CppName: GetCellWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::GridView::IDataSource::*)()>(&GlobalNamespace::GridView::IDataSource::GetCellWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GridView::IDataSource*), "GetCellWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GridView::IDataSource::GetCellHeight
// Il2CppName: GetCellHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::GridView::IDataSource::*)()>(&GlobalNamespace::GridView::IDataSource::GetCellHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GridView::IDataSource*), "GetCellHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GridView::IDataSource::CellForIdx
// Il2CppName: CellForIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::MonoBehaviour* (GlobalNamespace::GridView::IDataSource::*)(GlobalNamespace::GridView*, int)>(&GlobalNamespace::GridView::IDataSource::CellForIdx)> {
  static const MethodInfo* get() {
    static auto* gridView = &::il2cpp_utils::GetClassFromName("", "GridView")->byval_arg;
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GridView::IDataSource*), "CellForIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gridView, idx});
  }
};
