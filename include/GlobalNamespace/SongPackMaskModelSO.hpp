// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: PersistentScriptableObject
#include "GlobalNamespace/PersistentScriptableObject.hpp"
// Including type: Polyglot.Language
#include "Polyglot/Language.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BeatmapLevelPackCollectionSO
  class BeatmapLevelPackCollectionSO;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: SongPackMaskModelSO
  // [TokenAttribute] Offset: FFFFFFFF
  class SongPackMaskModelSO : public GlobalNamespace::PersistentScriptableObject {
    public:
    // Nested type: GlobalNamespace::SongPackMaskModelSO::SongPackDataType
    struct SongPackDataType;
    // Nested type: GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem
    class SongPackMaskItem;
    // private System.Collections.Generic.List`1<System.String> _defaultSongPackMaskItems
    // Size: 0x8
    // Offset: 0x18
    System::Collections::Generic::List_1<::Il2CppString*>* defaultSongPackMaskItems;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<::Il2CppString*>*) == 0x8);
    // private SongPackMaskModelSO/SongPackMaskItem[] _customSongPackMaskItems
    // Size: 0x8
    // Offset: 0x20
    ::Array<GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>* customSongPackMaskItems;
    // Field size check
    static_assert(sizeof(::Array<GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>*) == 0x8);
    // [SpaceAttribute] Offset: 0xF0325C
    // private BeatmapLevelPackCollectionSO _ostAndExtrasCollection
    // Size: 0x8
    // Offset: 0x28
    GlobalNamespace::BeatmapLevelPackCollectionSO* ostAndExtrasCollection;
    // Field size check
    static_assert(sizeof(GlobalNamespace::BeatmapLevelPackCollectionSO*) == 0x8);
    // private BeatmapLevelPackCollectionSO _dlcCollection
    // Size: 0x8
    // Offset: 0x30
    GlobalNamespace::BeatmapLevelPackCollectionSO* dlcCollection;
    // Field size check
    static_assert(sizeof(GlobalNamespace::BeatmapLevelPackCollectionSO*) == 0x8);
    // private Polyglot.Language _currentLocalizedLanguage
    // Size: 0x4
    // Offset: 0x38
    Polyglot::Language currentLocalizedLanguage;
    // Field size check
    static_assert(sizeof(Polyglot::Language) == 0x4);
    // Padding between fields: currentLocalizedLanguage and: songPackSerializedNameToLocalizedNameDict
    char __padding4[0x4] = {};
    // [TupleElementNamesAttribute] Offset: 0xF032A4
    // private System.Collections.Generic.Dictionary`2<System.String,System.ValueTuple`2<System.String,System.Boolean>> _songPackSerializedNameToLocalizedNameDict
    // Size: 0x8
    // Offset: 0x40
    System::Collections::Generic::Dictionary_2<::Il2CppString*, System::ValueTuple_2<::Il2CppString*, bool>>* songPackSerializedNameToLocalizedNameDict;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::Dictionary_2<::Il2CppString*, System::ValueTuple_2<::Il2CppString*, bool>>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.String,SongPackMask> _songPackSerializedNameToMaskDict
    // Size: 0x8
    // Offset: 0x48
    System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::SongPackMask>* songPackSerializedNameToMaskDict;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::SongPackMask>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<SongPackMask,System.String> _songPackMaskToSerializedNameDict
    // Size: 0x8
    // Offset: 0x50
    System::Collections::Generic::Dictionary_2<GlobalNamespace::SongPackMask, ::Il2CppString*>* songPackMaskToSerializedNameDict;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::Dictionary_2<GlobalNamespace::SongPackMask, ::Il2CppString*>*) == 0x8);
    // Creating value type constructor for type: SongPackMaskModelSO
    SongPackMaskModelSO(System::Collections::Generic::List_1<::Il2CppString*>* defaultSongPackMaskItems_ = {}, ::Array<GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>* customSongPackMaskItems_ = {}, GlobalNamespace::BeatmapLevelPackCollectionSO* ostAndExtrasCollection_ = {}, GlobalNamespace::BeatmapLevelPackCollectionSO* dlcCollection_ = {}, Polyglot::Language currentLocalizedLanguage_ = {}, System::Collections::Generic::Dictionary_2<::Il2CppString*, System::ValueTuple_2<::Il2CppString*, bool>>* songPackSerializedNameToLocalizedNameDict_ = {}, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::SongPackMask>* songPackSerializedNameToMaskDict_ = {}, System::Collections::Generic::Dictionary_2<GlobalNamespace::SongPackMask, ::Il2CppString*>* songPackMaskToSerializedNameDict_ = {}) noexcept : defaultSongPackMaskItems{defaultSongPackMaskItems_}, customSongPackMaskItems{customSongPackMaskItems_}, ostAndExtrasCollection{ostAndExtrasCollection_}, dlcCollection{dlcCollection_}, currentLocalizedLanguage{currentLocalizedLanguage_}, songPackSerializedNameToLocalizedNameDict{songPackSerializedNameToLocalizedNameDict_}, songPackSerializedNameToMaskDict{songPackSerializedNameToMaskDict_}, songPackMaskToSerializedNameDict{songPackMaskToSerializedNameDict_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> _defaultSongPackMaskItems
    System::Collections::Generic::List_1<::Il2CppString*>*& dyn__defaultSongPackMaskItems();
    // Get instance field reference: private SongPackMaskModelSO/SongPackMaskItem[] _customSongPackMaskItems
    ::Array<GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>*& dyn__customSongPackMaskItems();
    // Get instance field reference: private BeatmapLevelPackCollectionSO _ostAndExtrasCollection
    GlobalNamespace::BeatmapLevelPackCollectionSO*& dyn__ostAndExtrasCollection();
    // Get instance field reference: private BeatmapLevelPackCollectionSO _dlcCollection
    GlobalNamespace::BeatmapLevelPackCollectionSO*& dyn__dlcCollection();
    // Get instance field reference: private Polyglot.Language _currentLocalizedLanguage
    Polyglot::Language& dyn__currentLocalizedLanguage();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,System.ValueTuple`2<System.String,System.Boolean>> _songPackSerializedNameToLocalizedNameDict
    System::Collections::Generic::Dictionary_2<::Il2CppString*, System::ValueTuple_2<::Il2CppString*, bool>>*& dyn__songPackSerializedNameToLocalizedNameDict();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,SongPackMask> _songPackSerializedNameToMaskDict
    System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::SongPackMask>*& dyn__songPackSerializedNameToMaskDict();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<SongPackMask,System.String> _songPackMaskToSerializedNameDict
    System::Collections::Generic::Dictionary_2<GlobalNamespace::SongPackMask, ::Il2CppString*>*& dyn__songPackMaskToSerializedNameDict();
    // public System.Collections.Generic.List`1<System.String> get_defaultSongPackMaskItems()
    // Offset: 0x110A49C
    System::Collections::Generic::List_1<::Il2CppString*>* get_defaultSongPackMaskItems();
    // public SongPackMaskModelSO/SongPackMaskItem[] get_customSongPackMaskItems()
    // Offset: 0x110A4A4
    ::Array<GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>* get_customSongPackMaskItems();
    // public BeatmapLevelPackCollectionSO get_ostAndExtrasCollection()
    // Offset: 0x110A4AC
    GlobalNamespace::BeatmapLevelPackCollectionSO* get_ostAndExtrasCollection();
    // public BeatmapLevelPackCollectionSO get_dlcCollection()
    // Offset: 0x110A4B4
    GlobalNamespace::BeatmapLevelPackCollectionSO* get_dlcCollection();
    // public System.String ToLocalizedName(System.String serializedName)
    // Offset: 0x110A4BC
    ::Il2CppString* ToLocalizedName(::Il2CppString* serializedName);
    // public System.String ToLocalizedName(System.String serializedName, out System.Boolean plural)
    // Offset: 0x110A4E0
    ::Il2CppString* ToLocalizedName(::Il2CppString* serializedName, ByRef<bool> plural);
    // public System.Boolean ToSongPackMask(System.String serializedName, out SongPackMask songPackMask)
    // Offset: 0x110AC80
    bool ToSongPackMask(::Il2CppString* serializedName, ByRef<GlobalNamespace::SongPackMask> songPackMask);
    // public SongPackMask ToSongPackMask(System.String serializedName)
    // Offset: 0x110ACF8
    GlobalNamespace::SongPackMask ToSongPackMask(::Il2CppString* serializedName);
    // public System.Boolean ToSerializedName(SongPackMask songPackMask, out System.String serializedName)
    // Offset: 0x110AD30
    bool ToSerializedName(GlobalNamespace::SongPackMask songPackMask, ByRef<::Il2CppString*> serializedName);
    // public System.String ToSerializedName(SongPackMask songPackMask)
    // Offset: 0x110ADB8
    ::Il2CppString* ToSerializedName(GlobalNamespace::SongPackMask songPackMask);
    // private System.Void LazyInit()
    // Offset: 0x110A59C
    void LazyInit();
    // public System.Void .ctor()
    // Offset: 0x110B21C
    // Implemented from: PersistentScriptableObject
    // Base method: System.Void PersistentScriptableObject::.ctor()
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SongPackMaskModelSO* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SongPackMaskModelSO*, creationType>()));
    }
  }; // SongPackMaskModelSO
  #pragma pack(pop)
  static check_size<sizeof(SongPackMaskModelSO), 80 + sizeof(System::Collections::Generic::Dictionary_2<GlobalNamespace::SongPackMask, ::Il2CppString*>*)> __GlobalNamespace_SongPackMaskModelSOSizeCheck;
  static_assert(sizeof(SongPackMaskModelSO) == 0x58);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SongPackMaskModelSO*, "", "SongPackMaskModelSO");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::get_defaultSongPackMaskItems
// Il2CppName: get_defaultSongPackMaskItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<::Il2CppString*>* (GlobalNamespace::SongPackMaskModelSO::*)()>(&GlobalNamespace::SongPackMaskModelSO::get_defaultSongPackMaskItems)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SongPackMaskModelSO*), "get_defaultSongPackMaskItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::get_customSongPackMaskItems
// Il2CppName: get_customSongPackMaskItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>* (GlobalNamespace::SongPackMaskModelSO::*)()>(&GlobalNamespace::SongPackMaskModelSO::get_customSongPackMaskItems)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SongPackMaskModelSO*), "get_customSongPackMaskItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::get_ostAndExtrasCollection
// Il2CppName: get_ostAndExtrasCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapLevelPackCollectionSO* (GlobalNamespace::SongPackMaskModelSO::*)()>(&GlobalNamespace::SongPackMaskModelSO::get_ostAndExtrasCollection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SongPackMaskModelSO*), "get_ostAndExtrasCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::get_dlcCollection
// Il2CppName: get_dlcCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapLevelPackCollectionSO* (GlobalNamespace::SongPackMaskModelSO::*)()>(&GlobalNamespace::SongPackMaskModelSO::get_dlcCollection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SongPackMaskModelSO*), "get_dlcCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::ToLocalizedName
// Il2CppName: ToLocalizedName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (GlobalNamespace::SongPackMaskModelSO::*)(::Il2CppString*)>(&GlobalNamespace::SongPackMaskModelSO::ToLocalizedName)> {
  static const MethodInfo* get() {
    static auto* serializedName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SongPackMaskModelSO*), "ToLocalizedName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serializedName});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::ToLocalizedName
// Il2CppName: ToLocalizedName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (GlobalNamespace::SongPackMaskModelSO::*)(::Il2CppString*, ByRef<bool>)>(&GlobalNamespace::SongPackMaskModelSO::ToLocalizedName)> {
  static const MethodInfo* get() {
    static auto* serializedName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* plural = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SongPackMaskModelSO*), "ToLocalizedName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serializedName, plural});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::ToSongPackMask
// Il2CppName: ToSongPackMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::SongPackMaskModelSO::*)(::Il2CppString*, ByRef<GlobalNamespace::SongPackMask>)>(&GlobalNamespace::SongPackMaskModelSO::ToSongPackMask)> {
  static const MethodInfo* get() {
    static auto* serializedName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* songPackMask = &::il2cpp_utils::GetClassFromName("", "SongPackMask")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SongPackMaskModelSO*), "ToSongPackMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serializedName, songPackMask});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::ToSongPackMask
// Il2CppName: ToSongPackMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::SongPackMask (GlobalNamespace::SongPackMaskModelSO::*)(::Il2CppString*)>(&GlobalNamespace::SongPackMaskModelSO::ToSongPackMask)> {
  static const MethodInfo* get() {
    static auto* serializedName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SongPackMaskModelSO*), "ToSongPackMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serializedName});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::ToSerializedName
// Il2CppName: ToSerializedName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::SongPackMaskModelSO::*)(GlobalNamespace::SongPackMask, ByRef<::Il2CppString*>)>(&GlobalNamespace::SongPackMaskModelSO::ToSerializedName)> {
  static const MethodInfo* get() {
    static auto* songPackMask = &::il2cpp_utils::GetClassFromName("", "SongPackMask")->byval_arg;
    static auto* serializedName = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SongPackMaskModelSO*), "ToSerializedName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{songPackMask, serializedName});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::ToSerializedName
// Il2CppName: ToSerializedName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (GlobalNamespace::SongPackMaskModelSO::*)(GlobalNamespace::SongPackMask)>(&GlobalNamespace::SongPackMaskModelSO::ToSerializedName)> {
  static const MethodInfo* get() {
    static auto* songPackMask = &::il2cpp_utils::GetClassFromName("", "SongPackMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SongPackMaskModelSO*), "ToSerializedName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{songPackMask});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::LazyInit
// Il2CppName: LazyInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SongPackMaskModelSO::*)()>(&GlobalNamespace::SongPackMaskModelSO::LazyInit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SongPackMaskModelSO*), "LazyInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SongPackMaskModelSO::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
