// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MB_AtlasesAndRects
  class MB_AtlasesAndRects;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: MB_TextureArrayResultMaterial
  class MB_TextureArrayResultMaterial;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::MB_TextureArrayResultMaterial);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::MB_TextureArrayResultMaterial*, "", "MB_TextureArrayResultMaterial");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: MB_TextureArrayResultMaterial
  // [TokenAttribute] Offset: FFFFFFFF
  class MB_TextureArrayResultMaterial : public ::Il2CppObject {
    public:
    public:
    // public MB_AtlasesAndRects[] slices
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*> slices;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>) == 0x8);
    public:
    // Creating conversion operator: operator ::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>
    constexpr operator ::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>() const noexcept {
      return slices;
    }
    // Get instance field reference: public MB_AtlasesAndRects[] slices
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>& dyn_slices();
    // public System.Void .ctor()
    // Offset: 0x1B5E658
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB_TextureArrayResultMaterial* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB_TextureArrayResultMaterial::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB_TextureArrayResultMaterial*, creationType>()));
    }
  }; // MB_TextureArrayResultMaterial
  #pragma pack(pop)
  static check_size<sizeof(MB_TextureArrayResultMaterial), 16 + sizeof(::ArrayW<::GlobalNamespace::MB_AtlasesAndRects*>)> __GlobalNamespace_MB_TextureArrayResultMaterialSizeCheck;
  static_assert(sizeof(MB_TextureArrayResultMaterial) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::MB_TextureArrayResultMaterial::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
