// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: BakeryLightmapGroupSelector
  class BakeryLightmapGroupSelector;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BakeryLightmapGroupSelector);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BakeryLightmapGroupSelector*, "", "BakeryLightmapGroupSelector");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: BakeryLightmapGroupSelector
  // [TokenAttribute] Offset: FFFFFFFF
  class BakeryLightmapGroupSelector : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.Object lmgroupAsset
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Object* lmgroupAsset;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // public System.Boolean instanceResolutionOverride
    // Size: 0x1
    // Offset: 0x20
    bool instanceResolutionOverride;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: instanceResolutionOverride and: instanceResolution
    char __padding1[0x3] = {};
    // public System.Int32 instanceResolution
    // Size: 0x4
    // Offset: 0x24
    int instanceResolution;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.Object lmgroupAsset
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn_lmgroupAsset();
    // Get instance field reference: public System.Boolean instanceResolutionOverride
    [[deprecated("Use field access instead!")]] bool& dyn_instanceResolutionOverride();
    // Get instance field reference: public System.Int32 instanceResolution
    [[deprecated("Use field access instead!")]] int& dyn_instanceResolution();
    // public System.Void .ctor()
    // Offset: 0x1BD5BCC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BakeryLightmapGroupSelector* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakeryLightmapGroupSelector::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BakeryLightmapGroupSelector*, creationType>()));
    }
  }; // BakeryLightmapGroupSelector
  #pragma pack(pop)
  static check_size<sizeof(BakeryLightmapGroupSelector), 36 + sizeof(int)> __GlobalNamespace_BakeryLightmapGroupSelectorSizeCheck;
  static_assert(sizeof(BakeryLightmapGroupSelector) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BakeryLightmapGroupSelector::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
