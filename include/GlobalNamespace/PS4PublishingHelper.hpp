// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PS4PublisherSKUSettingsSO
  class PS4PublisherSKUSettingsSO;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: PS4PublishingHelper
  class PS4PublishingHelper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::PS4PublishingHelper);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::PS4PublishingHelper*, "", "PS4PublishingHelper");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: PS4PublishingHelper
  // [TokenAttribute] Offset: FFFFFFFF
  class PS4PublishingHelper : public ::Il2CppObject {
    public:
    // static public System.String GetServiceId(PS4PublisherSKUSettingsSO ps4PublisherSKUSettings)
    // Offset: 0x1352DA0
    static ::StringW GetServiceId(::GlobalNamespace::PS4PublisherSKUSettingsSO* ps4PublisherSKUSettings);
    // static public System.String GetContentId(PS4PublisherSKUSettingsSO ps4PublisherSKUSettings)
    // Offset: 0x1352DFC
    static ::StringW GetContentId(::GlobalNamespace::PS4PublisherSKUSettingsSO* ps4PublisherSKUSettings);
    // static public System.String GetContentId(System.String serviceId, System.String productLabel)
    // Offset: 0x1352E54
    static ::StringW GetContentId(::StringW serviceId, ::StringW productLabel);
    // static public System.String GetContentIdFromTitleId(System.String serviceIdPrefix, System.String titleId, System.String productLabel)
    // Offset: 0x1352E1C
    static ::StringW GetContentIdFromTitleId(::StringW serviceIdPrefix, ::StringW titleId, ::StringW productLabel);
    // static public System.String GetContentIdFromNpTitleId(System.String serviceIdPrefix, System.String npTitleId, System.String productLabel)
    // Offset: 0x1352EB8
    static ::StringW GetContentIdFromNpTitleId(::StringW serviceIdPrefix, ::StringW npTitleId, ::StringW productLabel);
    // static public System.String GetNpTitleId(System.String titleId)
    // Offset: 0x1352F40
    static ::StringW GetNpTitleId(::StringW titleId);
    // static public System.String GetServiceIdFromTitleId(System.String serviceIdPrefix, System.String titleId)
    // Offset: 0x1352DD0
    static ::StringW GetServiceIdFromTitleId(::StringW serviceIdPrefix, ::StringW titleId);
    // static public System.String GetServiceIdFromNpTitleId(System.String serviceIdPrefix, System.String npTitleId)
    // Offset: 0x1352EDC
    static ::StringW GetServiceIdFromNpTitleId(::StringW serviceIdPrefix, ::StringW npTitleId);
  }; // PS4PublishingHelper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::PS4PublishingHelper::GetServiceId
// Il2CppName: GetServiceId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::GlobalNamespace::PS4PublisherSKUSettingsSO*)>(&GlobalNamespace::PS4PublishingHelper::GetServiceId)> {
  static const MethodInfo* get() {
    static auto* ps4PublisherSKUSettings = &::il2cpp_utils::GetClassFromName("", "PS4PublisherSKUSettingsSO")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PS4PublishingHelper*), "GetServiceId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ps4PublisherSKUSettings});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PS4PublishingHelper::GetContentId
// Il2CppName: GetContentId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::GlobalNamespace::PS4PublisherSKUSettingsSO*)>(&GlobalNamespace::PS4PublishingHelper::GetContentId)> {
  static const MethodInfo* get() {
    static auto* ps4PublisherSKUSettings = &::il2cpp_utils::GetClassFromName("", "PS4PublisherSKUSettingsSO")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PS4PublishingHelper*), "GetContentId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ps4PublisherSKUSettings});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PS4PublishingHelper::GetContentId
// Il2CppName: GetContentId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::StringW)>(&GlobalNamespace::PS4PublishingHelper::GetContentId)> {
  static const MethodInfo* get() {
    static auto* serviceId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* productLabel = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PS4PublishingHelper*), "GetContentId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serviceId, productLabel});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PS4PublishingHelper::GetContentIdFromTitleId
// Il2CppName: GetContentIdFromTitleId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::StringW, ::StringW)>(&GlobalNamespace::PS4PublishingHelper::GetContentIdFromTitleId)> {
  static const MethodInfo* get() {
    static auto* serviceIdPrefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* titleId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* productLabel = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PS4PublishingHelper*), "GetContentIdFromTitleId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serviceIdPrefix, titleId, productLabel});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PS4PublishingHelper::GetContentIdFromNpTitleId
// Il2CppName: GetContentIdFromNpTitleId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::StringW, ::StringW)>(&GlobalNamespace::PS4PublishingHelper::GetContentIdFromNpTitleId)> {
  static const MethodInfo* get() {
    static auto* serviceIdPrefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* npTitleId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* productLabel = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PS4PublishingHelper*), "GetContentIdFromNpTitleId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serviceIdPrefix, npTitleId, productLabel});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PS4PublishingHelper::GetNpTitleId
// Il2CppName: GetNpTitleId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&GlobalNamespace::PS4PublishingHelper::GetNpTitleId)> {
  static const MethodInfo* get() {
    static auto* titleId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PS4PublishingHelper*), "GetNpTitleId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{titleId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PS4PublishingHelper::GetServiceIdFromTitleId
// Il2CppName: GetServiceIdFromTitleId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::StringW)>(&GlobalNamespace::PS4PublishingHelper::GetServiceIdFromTitleId)> {
  static const MethodInfo* get() {
    static auto* serviceIdPrefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* titleId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PS4PublishingHelper*), "GetServiceIdFromTitleId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serviceIdPrefix, titleId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PS4PublishingHelper::GetServiceIdFromNpTitleId
// Il2CppName: GetServiceIdFromNpTitleId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::StringW)>(&GlobalNamespace::PS4PublishingHelper::GetServiceIdFromNpTitleId)> {
  static const MethodInfo* get() {
    static auto* serviceIdPrefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* npTitleId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PS4PublishingHelper*), "GetServiceIdFromNpTitleId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serviceIdPrefix, npTitleId});
  }
};
