// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BtsResultsEnvironmentController
#include "GlobalNamespace/BtsResultsEnvironmentController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: AnimationClip
  class AnimationClip;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BTSCharacterResultAnimationController
  class BTSCharacterResultAnimationController;
  // Forward declaring type: BTSCharacter
  class BTSCharacter;
}
// Forward declaring namespace: UnityEngine::AddressableAssets
namespace UnityEngine::AddressableAssets {
  // Forward declaring type: AssetReference
  class AssetReference;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation*, "", "BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation
  // [TokenAttribute] Offset: FFFFFFFF
  class BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation : public ::Il2CppObject {
    public:
    public:
    // private System.String _name
    // Size: 0x8
    // Offset: 0x10
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.Transform _placeTransform
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Transform* placeTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private BTSCharacterResultAnimationController _animationController
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::BTSCharacterResultAnimationController* animationController;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::BTSCharacterResultAnimationController*) == 0x8);
    // private UnityEngine.AnimationClip _animationClip
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::AnimationClip* animationClip;
    // Field size check
    static_assert(sizeof(::UnityEngine::AnimationClip*) == 0x8);
    // private BTSCharacter _btsCharacter
    // Size: 0x8
    // Offset: 0x30
    ::GlobalNamespace::BTSCharacter* btsCharacter;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::BTSCharacter*) == 0x8);
    // private UnityEngine.AddressableAssets.AssetReference _btsCharacterAssetReference
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::AddressableAssets::AssetReference* btsCharacterAssetReference;
    // Field size check
    static_assert(sizeof(::UnityEngine::AddressableAssets::AssetReference*) == 0x8);
    public:
    // Get instance field reference: private System.String _name
    [[deprecated("Use field access instead!")]] ::StringW& dyn__name();
    // Get instance field reference: private UnityEngine.Transform _placeTransform
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn__placeTransform();
    // Get instance field reference: private BTSCharacterResultAnimationController _animationController
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::BTSCharacterResultAnimationController*& dyn__animationController();
    // Get instance field reference: private UnityEngine.AnimationClip _animationClip
    [[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& dyn__animationClip();
    // Get instance field reference: private BTSCharacter _btsCharacter
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::BTSCharacter*& dyn__btsCharacter();
    // Get instance field reference: private UnityEngine.AddressableAssets.AssetReference _btsCharacterAssetReference
    [[deprecated("Use field access instead!")]] ::UnityEngine::AddressableAssets::AssetReference*& dyn__btsCharacterAssetReference();
    // public System.String get_name()
    // Offset: 0x13F1A44
    ::StringW get_name();
    // public System.Void .ctor()
    // Offset: 0x13F1A4C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation*, creationType>()));
    }
    // public System.Void Clean()
    // Offset: 0x13F1794
    void Clean();
    // public System.Void SetCharacter(UnityEngine.AddressableAssets.AssetReference assetReference, BTSCharacter btsCharacter, System.Boolean alternativeMaterial)
    // Offset: 0x13F1310
    void SetCharacter(::UnityEngine::AddressableAssets::AssetReference* assetReference, ::GlobalNamespace::BTSCharacter* btsCharacter, bool alternativeMaterial);
  }; // BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation
  #pragma pack(pop)
  static check_size<sizeof(BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation), 56 + sizeof(::UnityEngine::AddressableAssets::AssetReference*)> __GlobalNamespace_BtsResultsEnvironmentController_BTSResultCharacterPlaceWithAnimationSizeCheck;
  static_assert(sizeof(BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::get_name
// Il2CppName: get_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::*)()>(&GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::get_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation*), "get_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::Clean
// Il2CppName: Clean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::*)()>(&GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::Clean)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation*), "Clean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::SetCharacter
// Il2CppName: SetCharacter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::*)(::UnityEngine::AddressableAssets::AssetReference*, ::GlobalNamespace::BTSCharacter*, bool)>(&GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::SetCharacter)> {
  static const MethodInfo* get() {
    static auto* assetReference = &::il2cpp_utils::GetClassFromName("UnityEngine.AddressableAssets", "AssetReference")->byval_arg;
    static auto* btsCharacter = &::il2cpp_utils::GetClassFromName("", "BTSCharacter")->byval_arg;
    static auto* alternativeMaterial = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation*), "SetCharacter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetReference, btsCharacter, alternativeMaterial});
  }
};
