// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: LeaderboardUploadData
  // [TokenAttribute] Offset: FFFFFFFF
  class LeaderboardUploadData : public ::Il2CppObject {
    public:
    // public System.String playerName
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* playerName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // public System.String playerId
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppString* playerId;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // public System.String score
    // Size: 0x8
    // Offset: 0x20
    ::Il2CppString* score;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // public System.String leaderboardId
    // Size: 0x8
    // Offset: 0x28
    ::Il2CppString* leaderboardId;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // public System.String songName
    // Size: 0x8
    // Offset: 0x30
    ::Il2CppString* songName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // public System.String songSubName
    // Size: 0x8
    // Offset: 0x38
    ::Il2CppString* songSubName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // public System.String authorName
    // Size: 0x8
    // Offset: 0x40
    ::Il2CppString* authorName;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // public System.String bpm
    // Size: 0x8
    // Offset: 0x48
    ::Il2CppString* bpm;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // public System.String difficulty
    // Size: 0x8
    // Offset: 0x50
    ::Il2CppString* difficulty;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // public System.String infoHash
    // Size: 0x8
    // Offset: 0x58
    ::Il2CppString* infoHash;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // public System.Collections.Generic.List`1<System.String> modifiers
    // Size: 0x8
    // Offset: 0x60
    System::Collections::Generic::List_1<::Il2CppString*>* modifiers;
    // Field size check
    static_assert(sizeof(System::Collections::Generic::List_1<::Il2CppString*>*) == 0x8);
    // Creating value type constructor for type: LeaderboardUploadData
    LeaderboardUploadData(::Il2CppString* playerName_ = {}, ::Il2CppString* playerId_ = {}, ::Il2CppString* score_ = {}, ::Il2CppString* leaderboardId_ = {}, ::Il2CppString* songName_ = {}, ::Il2CppString* songSubName_ = {}, ::Il2CppString* authorName_ = {}, ::Il2CppString* bpm_ = {}, ::Il2CppString* difficulty_ = {}, ::Il2CppString* infoHash_ = {}, System::Collections::Generic::List_1<::Il2CppString*>* modifiers_ = {}) noexcept : playerName{playerName_}, playerId{playerId_}, score{score_}, leaderboardId{leaderboardId_}, songName{songName_}, songSubName{songSubName_}, authorName{authorName_}, bpm{bpm_}, difficulty{difficulty_}, infoHash{infoHash_}, modifiers{modifiers_} {}
    // Get instance field reference: public System.String playerName
    ::Il2CppString*& dyn_playerName();
    // Get instance field reference: public System.String playerId
    ::Il2CppString*& dyn_playerId();
    // Get instance field reference: public System.String score
    ::Il2CppString*& dyn_score();
    // Get instance field reference: public System.String leaderboardId
    ::Il2CppString*& dyn_leaderboardId();
    // Get instance field reference: public System.String songName
    ::Il2CppString*& dyn_songName();
    // Get instance field reference: public System.String songSubName
    ::Il2CppString*& dyn_songSubName();
    // Get instance field reference: public System.String authorName
    ::Il2CppString*& dyn_authorName();
    // Get instance field reference: public System.String bpm
    ::Il2CppString*& dyn_bpm();
    // Get instance field reference: public System.String difficulty
    ::Il2CppString*& dyn_difficulty();
    // Get instance field reference: public System.String infoHash
    ::Il2CppString*& dyn_infoHash();
    // Get instance field reference: public System.Collections.Generic.List`1<System.String> modifiers
    System::Collections::Generic::List_1<::Il2CppString*>*& dyn_modifiers();
    // public System.Void .ctor(System.String playerName, System.String playerId, System.String score, System.String leaderboardId, System.String songName, System.String songSubName, System.String authorName, System.String bpm, System.String difficulty, System.String infoHash, System.Collections.Generic.List`1<System.String> modifiers)
    // Offset: 0x114ACD0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LeaderboardUploadData* New_ctor(::Il2CppString* playerName, ::Il2CppString* playerId, ::Il2CppString* score, ::Il2CppString* leaderboardId, ::Il2CppString* songName, ::Il2CppString* songSubName, ::Il2CppString* authorName, ::Il2CppString* bpm, ::Il2CppString* difficulty, ::Il2CppString* infoHash, System::Collections::Generic::List_1<::Il2CppString*>* modifiers) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardUploadData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LeaderboardUploadData*, creationType>(playerName, playerId, score, leaderboardId, songName, songSubName, authorName, bpm, difficulty, infoHash, modifiers)));
    }
  }; // LeaderboardUploadData
  #pragma pack(pop)
  static check_size<sizeof(LeaderboardUploadData), 96 + sizeof(System::Collections::Generic::List_1<::Il2CppString*>*)> __GlobalNamespace_LeaderboardUploadDataSizeCheck;
  static_assert(sizeof(LeaderboardUploadData) == 0x68);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LeaderboardUploadData*, "", "LeaderboardUploadData");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::LeaderboardUploadData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
