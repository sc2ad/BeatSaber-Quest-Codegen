// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: ONSPPropagation
#include "GlobalNamespace/ONSPPropagation.hpp"
// Including type: ONSPPropagation/PropagationInterface
#include "GlobalNamespace/ONSPPropagation_PropagationInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Skipping declaration: UIntPtr because it is already included!
}
// Forward declaring namespace: Oculus::Spatializer::Propagation
namespace Oculus::Spatializer::Propagation {
  // Forward declaring type: MaterialProperty
  struct MaterialProperty;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::ONSPPropagation::FMODPluginInterface);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ONSPPropagation::FMODPluginInterface*, "", "ONSPPropagation/FMODPluginInterface");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: ONSPPropagation/FMODPluginInterface
  // [TokenAttribute] Offset: FFFFFFFF
  class ONSPPropagation::FMODPluginInterface : public ::Il2CppObject/*, public ::GlobalNamespace::ONSPPropagation::PropagationInterface*/ {
    public:
    public:
    // private System.IntPtr context_
    // Size: 0x8
    // Offset: 0x10
    ::System::IntPtr context;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::ONSPPropagation::PropagationInterface
    operator ::GlobalNamespace::ONSPPropagation::PropagationInterface() noexcept {
      return *reinterpret_cast<::GlobalNamespace::ONSPPropagation::PropagationInterface*>(this);
    }
    // Creating conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept {
      return context;
    }
    // static field const value: static public System.String strOSPS
    static constexpr const char* strOSPS = "OculusSpatializerFMOD";
    // Get static field: static public System.String strOSPS
    static ::StringW _get_strOSPS();
    // Set static field: static public System.String strOSPS
    static void _set_strOSPS(::StringW value);
    // Get instance field reference: private System.IntPtr context_
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_context_();
    // private System.IntPtr get_context()
    // Offset: 0x137EACC
    ::System::IntPtr get_context();
    // public System.Void .ctor()
    // Offset: 0x137EA24
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ONSPPropagation::FMODPluginInterface* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::FMODPluginInterface::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ONSPPropagation::FMODPluginInterface*, creationType>()));
    }
    // static public System.Int32 ovrAudio_GetPluginContext(out System.IntPtr context, System.UInt32 clientType)
    // Offset: 0x137E994
    static int ovrAudio_GetPluginContext(ByRef<::System::IntPtr> context, uint clientType);
    // static private System.Int32 ovrAudio_SetPropagationQuality(System.IntPtr context, System.Single quality)
    // Offset: 0x137EB30
    static int ovrAudio_SetPropagationQuality(::System::IntPtr context, float quality);
    // public System.Int32 SetPropagationQuality(System.Single quality)
    // Offset: 0x137EBC0
    int SetPropagationQuality(float quality);
    // static private System.Int32 ovrAudio_SetPropagationThreadAffinity(System.IntPtr context, System.UInt64 cpuMask)
    // Offset: 0x137EBE4
    static int ovrAudio_SetPropagationThreadAffinity(::System::IntPtr context, uint64_t cpuMask);
    // public System.Int32 SetPropagationThreadAffinity(System.UInt64 cpuMask)
    // Offset: 0x137EC74
    int SetPropagationThreadAffinity(uint64_t cpuMask);
    // static private System.Int32 ovrAudio_CreateAudioGeometry(System.IntPtr context, out System.IntPtr geometry)
    // Offset: 0x137EC98
    static int ovrAudio_CreateAudioGeometry(::System::IntPtr context, ByRef<::System::IntPtr> geometry);
    // public System.Int32 CreateAudioGeometry(out System.IntPtr geometry)
    // Offset: 0x137ED28
    int CreateAudioGeometry(ByRef<::System::IntPtr> geometry);
    // static private System.Int32 ovrAudio_DestroyAudioGeometry(System.IntPtr geometry)
    // Offset: 0x137ED4C
    static int ovrAudio_DestroyAudioGeometry(::System::IntPtr geometry);
    // public System.Int32 DestroyAudioGeometry(System.IntPtr geometry)
    // Offset: 0x137EDCC
    int DestroyAudioGeometry(::System::IntPtr geometry);
    // static private System.Int32 ovrAudio_AudioGeometryUploadMeshArrays(System.IntPtr geometry, System.Single[] vertices, System.UIntPtr verticesBytesOffset, System.UIntPtr vertexCount, System.UIntPtr vertexStride, ONSPPropagation/ovrAudioScalarType vertexType, System.Int32[] indices, System.UIntPtr indicesByteOffset, System.UIntPtr indexCount, ONSPPropagation/ovrAudioScalarType indexType, Oculus.Spatializer.Propagation.MeshGroup[] groups, System.UIntPtr groupCount)
    // Offset: 0x137EDD4
    static int ovrAudio_AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, ::System::UIntPtr verticesBytesOffset, ::System::UIntPtr vertexCount, ::System::UIntPtr vertexStride, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType vertexType, ::ArrayW<int> indices, ::System::UIntPtr indicesByteOffset, ::System::UIntPtr indexCount, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType indexType, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, ::System::UIntPtr groupCount);
    // public System.Int32 AudioGeometryUploadMeshArrays(System.IntPtr geometry, System.Single[] vertices, System.Int32 vertexCount, System.Int32[] indices, System.Int32 indexCount, Oculus.Spatializer.Propagation.MeshGroup[] groups, System.Int32 groupCount)
    // Offset: 0x137EEF4
    int AudioGeometryUploadMeshArrays(::System::IntPtr geometry, ::ArrayW<float> vertices, int vertexCount, ::ArrayW<int> indices, int indexCount, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup> groups, int groupCount);
    // static private System.Int32 ovrAudio_AudioGeometrySetTransform(System.IntPtr geometry, System.Single[] matrix4x4)
    // Offset: 0x137EFEC
    static int ovrAudio_AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4);
    // public System.Int32 AudioGeometrySetTransform(System.IntPtr geometry, System.Single[] matrix4x4)
    // Offset: 0x137F084
    int AudioGeometrySetTransform(::System::IntPtr geometry, ::ArrayW<float> matrix4x4);
    // static private System.Int32 ovrAudio_AudioGeometryGetTransform(System.IntPtr geometry, out System.Single[] matrix4x4)
    // Offset: 0x137F090
    static int ovrAudio_AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4);
    // public System.Int32 AudioGeometryGetTransform(System.IntPtr geometry, out System.Single[] matrix4x4)
    // Offset: 0x137F1BC
    int AudioGeometryGetTransform(::System::IntPtr geometry, ByRef<::ArrayW<float>> matrix4x4);
    // static private System.Int32 ovrAudio_AudioGeometryWriteMeshFile(System.IntPtr geometry, System.String filePath)
    // Offset: 0x137F1C8
    static int ovrAudio_AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath);
    // public System.Int32 AudioGeometryWriteMeshFile(System.IntPtr geometry, System.String filePath)
    // Offset: 0x137F274
    int AudioGeometryWriteMeshFile(::System::IntPtr geometry, ::StringW filePath);
    // static private System.Int32 ovrAudio_AudioGeometryReadMeshFile(System.IntPtr geometry, System.String filePath)
    // Offset: 0x137F280
    static int ovrAudio_AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath);
    // public System.Int32 AudioGeometryReadMeshFile(System.IntPtr geometry, System.String filePath)
    // Offset: 0x137F32C
    int AudioGeometryReadMeshFile(::System::IntPtr geometry, ::StringW filePath);
    // static private System.Int32 ovrAudio_AudioGeometryWriteMeshFileObj(System.IntPtr geometry, System.String filePath)
    // Offset: 0x137F338
    static int ovrAudio_AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath);
    // public System.Int32 AudioGeometryWriteMeshFileObj(System.IntPtr geometry, System.String filePath)
    // Offset: 0x137F3E4
    int AudioGeometryWriteMeshFileObj(::System::IntPtr geometry, ::StringW filePath);
    // static private System.Int32 ovrAudio_CreateAudioMaterial(System.IntPtr context, out System.IntPtr material)
    // Offset: 0x137F3F0
    static int ovrAudio_CreateAudioMaterial(::System::IntPtr context, ByRef<::System::IntPtr> material);
    // public System.Int32 CreateAudioMaterial(out System.IntPtr material)
    // Offset: 0x137F480
    int CreateAudioMaterial(ByRef<::System::IntPtr> material);
    // static private System.Int32 ovrAudio_DestroyAudioMaterial(System.IntPtr material)
    // Offset: 0x137F4A4
    static int ovrAudio_DestroyAudioMaterial(::System::IntPtr material);
    // public System.Int32 DestroyAudioMaterial(System.IntPtr material)
    // Offset: 0x137F524
    int DestroyAudioMaterial(::System::IntPtr material);
    // static private System.Int32 ovrAudio_AudioMaterialSetFrequency(System.IntPtr material, Oculus.Spatializer.Propagation.MaterialProperty property, System.Single frequency, System.Single value)
    // Offset: 0x137F52C
    static int ovrAudio_AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value);
    // public System.Int32 AudioMaterialSetFrequency(System.IntPtr material, Oculus.Spatializer.Propagation.MaterialProperty property, System.Single frequency, System.Single value)
    // Offset: 0x137F5D4
    int AudioMaterialSetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, float value);
    // static private System.Int32 ovrAudio_AudioMaterialGetFrequency(System.IntPtr material, Oculus.Spatializer.Propagation.MaterialProperty property, System.Single frequency, out System.Single value)
    // Offset: 0x137F5E0
    static int ovrAudio_AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value);
    // public System.Int32 AudioMaterialGetFrequency(System.IntPtr material, Oculus.Spatializer.Propagation.MaterialProperty property, System.Single frequency, out System.Single value)
    // Offset: 0x137F688
    int AudioMaterialGetFrequency(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property, float frequency, ByRef<float> value);
    // static private System.Int32 ovrAudio_AudioMaterialReset(System.IntPtr material, Oculus.Spatializer.Propagation.MaterialProperty property)
    // Offset: 0x137F698
    static int ovrAudio_AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property);
    // public System.Int32 AudioMaterialReset(System.IntPtr material, Oculus.Spatializer.Propagation.MaterialProperty property)
    // Offset: 0x137F728
    int AudioMaterialReset(::System::IntPtr material, ::Oculus::Spatializer::Propagation::MaterialProperty property);
  }; // ONSPPropagation/FMODPluginInterface
  #pragma pack(pop)
  static check_size<sizeof(ONSPPropagation::FMODPluginInterface), 16 + sizeof(::System::IntPtr)> __GlobalNamespace_ONSPPropagation_FMODPluginInterfaceSizeCheck;
  static_assert(sizeof(ONSPPropagation::FMODPluginInterface) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::get_context
// Il2CppName: get_context
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (GlobalNamespace::ONSPPropagation::FMODPluginInterface::*)()>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::get_context)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "get_context", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_GetPluginContext
// Il2CppName: ovrAudio_GetPluginContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<::System::IntPtr>, uint)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_GetPluginContext)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    static auto* clientType = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "ovrAudio_GetPluginContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, clientType});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationQuality
// Il2CppName: ovrAudio_SetPropagationQuality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr, float)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationQuality)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* quality = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "ovrAudio_SetPropagationQuality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, quality});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationQuality
// Il2CppName: SetPropagationQuality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::ONSPPropagation::FMODPluginInterface::*)(float)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationQuality)> {
  static const MethodInfo* get() {
    static auto* quality = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "SetPropagationQuality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{quality});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationThreadAffinity
// Il2CppName: ovrAudio_SetPropagationThreadAffinity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr, uint64_t)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_SetPropagationThreadAffinity)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* cpuMask = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "ovrAudio_SetPropagationThreadAffinity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, cpuMask});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationThreadAffinity
// Il2CppName: SetPropagationThreadAffinity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::ONSPPropagation::FMODPluginInterface::*)(uint64_t)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::SetPropagationThreadAffinity)> {
  static const MethodInfo* get() {
    static auto* cpuMask = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "SetPropagationThreadAffinity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cpuMask});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioGeometry
// Il2CppName: ovrAudio_CreateAudioGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr, ByRef<::System::IntPtr>)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioGeometry)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* geometry = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "ovrAudio_CreateAudioGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, geometry});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioGeometry
// Il2CppName: CreateAudioGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::ONSPPropagation::FMODPluginInterface::*)(ByRef<::System::IntPtr>)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioGeometry)> {
  static const MethodInfo* get() {
    static auto* geometry = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "CreateAudioGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{geometry});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioGeometry
// Il2CppName: ovrAudio_DestroyAudioGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioGeometry)> {
  static const MethodInfo* get() {
    static auto* geometry = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "ovrAudio_DestroyAudioGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{geometry});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioGeometry
// Il2CppName: DestroyAudioGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::ONSPPropagation::FMODPluginInterface::*)(::System::IntPtr)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioGeometry)> {
  static const MethodInfo* get() {
    static auto* geometry = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "DestroyAudioGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{geometry});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryUploadMeshArrays
// Il2CppName: ovrAudio_AudioGeometryUploadMeshArrays
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr, ::ArrayW<float>, ::System::UIntPtr, ::System::UIntPtr, ::System::UIntPtr, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType, ::ArrayW<int>, ::System::UIntPtr, ::System::UIntPtr, ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup>, ::System::UIntPtr)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryUploadMeshArrays)> {
  static const MethodInfo* get() {
    static auto* geometry = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* vertices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* verticesBytesOffset = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    static auto* vertexCount = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    static auto* vertexStride = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    static auto* vertexType = &::il2cpp_utils::GetClassFromName("", "ONSPPropagation/ovrAudioScalarType")->byval_arg;
    static auto* indices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* indicesByteOffset = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    static auto* indexCount = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    static auto* indexType = &::il2cpp_utils::GetClassFromName("", "ONSPPropagation/ovrAudioScalarType")->byval_arg;
    static auto* groups = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Oculus.Spatializer.Propagation", "MeshGroup"), 1)->byval_arg;
    static auto* groupCount = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "ovrAudio_AudioGeometryUploadMeshArrays", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{geometry, vertices, verticesBytesOffset, vertexCount, vertexStride, vertexType, indices, indicesByteOffset, indexCount, indexType, groups, groupCount});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryUploadMeshArrays
// Il2CppName: AudioGeometryUploadMeshArrays
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::ONSPPropagation::FMODPluginInterface::*)(::System::IntPtr, ::ArrayW<float>, int, ::ArrayW<int>, int, ::ArrayW<::Oculus::Spatializer::Propagation::MeshGroup>, int)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryUploadMeshArrays)> {
  static const MethodInfo* get() {
    static auto* geometry = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* vertices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* vertexCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* indices = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* indexCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* groups = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Oculus.Spatializer.Propagation", "MeshGroup"), 1)->byval_arg;
    static auto* groupCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "AudioGeometryUploadMeshArrays", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{geometry, vertices, vertexCount, indices, indexCount, groups, groupCount});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometrySetTransform
// Il2CppName: ovrAudio_AudioGeometrySetTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr, ::ArrayW<float>)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometrySetTransform)> {
  static const MethodInfo* get() {
    static auto* geometry = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* matrix4x4 = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "ovrAudio_AudioGeometrySetTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{geometry, matrix4x4});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometrySetTransform
// Il2CppName: AudioGeometrySetTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::ONSPPropagation::FMODPluginInterface::*)(::System::IntPtr, ::ArrayW<float>)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometrySetTransform)> {
  static const MethodInfo* get() {
    static auto* geometry = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* matrix4x4 = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "AudioGeometrySetTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{geometry, matrix4x4});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryGetTransform
// Il2CppName: ovrAudio_AudioGeometryGetTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr, ByRef<::ArrayW<float>>)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryGetTransform)> {
  static const MethodInfo* get() {
    static auto* geometry = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* matrix4x4 = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "ovrAudio_AudioGeometryGetTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{geometry, matrix4x4});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryGetTransform
// Il2CppName: AudioGeometryGetTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::ONSPPropagation::FMODPluginInterface::*)(::System::IntPtr, ByRef<::ArrayW<float>>)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryGetTransform)> {
  static const MethodInfo* get() {
    static auto* geometry = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* matrix4x4 = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "AudioGeometryGetTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{geometry, matrix4x4});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFile
// Il2CppName: ovrAudio_AudioGeometryWriteMeshFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr, ::StringW)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFile)> {
  static const MethodInfo* get() {
    static auto* geometry = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "ovrAudio_AudioGeometryWriteMeshFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{geometry, filePath});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFile
// Il2CppName: AudioGeometryWriteMeshFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::ONSPPropagation::FMODPluginInterface::*)(::System::IntPtr, ::StringW)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFile)> {
  static const MethodInfo* get() {
    static auto* geometry = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "AudioGeometryWriteMeshFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{geometry, filePath});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryReadMeshFile
// Il2CppName: ovrAudio_AudioGeometryReadMeshFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr, ::StringW)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryReadMeshFile)> {
  static const MethodInfo* get() {
    static auto* geometry = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "ovrAudio_AudioGeometryReadMeshFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{geometry, filePath});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryReadMeshFile
// Il2CppName: AudioGeometryReadMeshFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::ONSPPropagation::FMODPluginInterface::*)(::System::IntPtr, ::StringW)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryReadMeshFile)> {
  static const MethodInfo* get() {
    static auto* geometry = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "AudioGeometryReadMeshFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{geometry, filePath});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj
// Il2CppName: ovrAudio_AudioGeometryWriteMeshFileObj
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr, ::StringW)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioGeometryWriteMeshFileObj)> {
  static const MethodInfo* get() {
    static auto* geometry = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "ovrAudio_AudioGeometryWriteMeshFileObj", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{geometry, filePath});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFileObj
// Il2CppName: AudioGeometryWriteMeshFileObj
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::ONSPPropagation::FMODPluginInterface::*)(::System::IntPtr, ::StringW)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioGeometryWriteMeshFileObj)> {
  static const MethodInfo* get() {
    static auto* geometry = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "AudioGeometryWriteMeshFileObj", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{geometry, filePath});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioMaterial
// Il2CppName: ovrAudio_CreateAudioMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr, ByRef<::System::IntPtr>)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_CreateAudioMaterial)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* material = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "ovrAudio_CreateAudioMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, material});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioMaterial
// Il2CppName: CreateAudioMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::ONSPPropagation::FMODPluginInterface::*)(ByRef<::System::IntPtr>)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::CreateAudioMaterial)> {
  static const MethodInfo* get() {
    static auto* material = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "CreateAudioMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{material});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioMaterial
// Il2CppName: ovrAudio_DestroyAudioMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_DestroyAudioMaterial)> {
  static const MethodInfo* get() {
    static auto* material = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "ovrAudio_DestroyAudioMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{material});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioMaterial
// Il2CppName: DestroyAudioMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::ONSPPropagation::FMODPluginInterface::*)(::System::IntPtr)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::DestroyAudioMaterial)> {
  static const MethodInfo* get() {
    static auto* material = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "DestroyAudioMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{material});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialSetFrequency
// Il2CppName: ovrAudio_AudioMaterialSetFrequency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr, ::Oculus::Spatializer::Propagation::MaterialProperty, float, float)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialSetFrequency)> {
  static const MethodInfo* get() {
    static auto* material = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("Oculus.Spatializer.Propagation", "MaterialProperty")->byval_arg;
    static auto* frequency = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "ovrAudio_AudioMaterialSetFrequency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{material, property, frequency, value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialSetFrequency
// Il2CppName: AudioMaterialSetFrequency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::ONSPPropagation::FMODPluginInterface::*)(::System::IntPtr, ::Oculus::Spatializer::Propagation::MaterialProperty, float, float)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialSetFrequency)> {
  static const MethodInfo* get() {
    static auto* material = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("Oculus.Spatializer.Propagation", "MaterialProperty")->byval_arg;
    static auto* frequency = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "AudioMaterialSetFrequency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{material, property, frequency, value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialGetFrequency
// Il2CppName: ovrAudio_AudioMaterialGetFrequency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr, ::Oculus::Spatializer::Propagation::MaterialProperty, float, ByRef<float>)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialGetFrequency)> {
  static const MethodInfo* get() {
    static auto* material = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("Oculus.Spatializer.Propagation", "MaterialProperty")->byval_arg;
    static auto* frequency = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "ovrAudio_AudioMaterialGetFrequency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{material, property, frequency, value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialGetFrequency
// Il2CppName: AudioMaterialGetFrequency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::ONSPPropagation::FMODPluginInterface::*)(::System::IntPtr, ::Oculus::Spatializer::Propagation::MaterialProperty, float, ByRef<float>)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialGetFrequency)> {
  static const MethodInfo* get() {
    static auto* material = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("Oculus.Spatializer.Propagation", "MaterialProperty")->byval_arg;
    static auto* frequency = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "AudioMaterialGetFrequency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{material, property, frequency, value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialReset
// Il2CppName: ovrAudio_AudioMaterialReset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr, ::Oculus::Spatializer::Propagation::MaterialProperty)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::ovrAudio_AudioMaterialReset)> {
  static const MethodInfo* get() {
    static auto* material = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("Oculus.Spatializer.Propagation", "MaterialProperty")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "ovrAudio_AudioMaterialReset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{material, property});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialReset
// Il2CppName: AudioMaterialReset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::ONSPPropagation::FMODPluginInterface::*)(::System::IntPtr, ::Oculus::Spatializer::Propagation::MaterialProperty)>(&GlobalNamespace::ONSPPropagation::FMODPluginInterface::AudioMaterialReset)> {
  static const MethodInfo* get() {
    static auto* material = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("Oculus.Spatializer.Propagation", "MaterialProperty")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation::FMODPluginInterface*), "AudioMaterialReset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{material, property});
  }
};
