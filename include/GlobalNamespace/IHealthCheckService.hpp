// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: IPollable
#include "GlobalNamespace/IPollable.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: IHealthCheckService
  class IHealthCheckService;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::IHealthCheckService);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::IHealthCheckService*, "", "IHealthCheckService");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: IHealthCheckService
  // [TokenAttribute] Offset: FFFFFFFF
  class IHealthCheckService/*, public ::System::IDisposable, public ::GlobalNamespace::IPollable*/ {
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Creating interface conversion operator: i_IDisposable
    inline ::System::IDisposable* i_IDisposable() noexcept {
      return reinterpret_cast<::System::IDisposable*>(this);
    }
    // Creating interface conversion operator: operator ::GlobalNamespace::IPollable
    operator ::GlobalNamespace::IPollable() noexcept {
      return *reinterpret_cast<::GlobalNamespace::IPollable*>(this);
    }
    // Creating interface conversion operator: i_IPollable
    inline ::GlobalNamespace::IPollable* i_IPollable() noexcept {
      return reinterpret_cast<::GlobalNamespace::IPollable*>(this);
    }
  }; // IHealthCheckService
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
