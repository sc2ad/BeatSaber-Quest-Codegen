// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Zenject.MonoInstaller
#include "Zenject/MonoInstaller.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MainSettingsMenuViewController
  class MainSettingsMenuViewController;
  // Forward declaring type: TabBarViewController
  class TabBarViewController;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: MainSettingsMenuViewControllersInstaller
  class MainSettingsMenuViewControllersInstaller;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::MainSettingsMenuViewControllersInstaller);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::MainSettingsMenuViewControllersInstaller*, "", "MainSettingsMenuViewControllersInstaller");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: MainSettingsMenuViewControllersInstaller
  // [TokenAttribute] Offset: FFFFFFFF
  class MainSettingsMenuViewControllersInstaller : public ::Zenject::MonoInstaller {
    public:
    public:
    // private MainSettingsMenuViewController _defaultSettingsMenuViewController
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::MainSettingsMenuViewController* defaultSettingsMenuViewController;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::MainSettingsMenuViewController*) == 0x8);
    // private MainSettingsMenuViewController _oculusPCSettingsMenuViewController
    // Size: 0x8
    // Offset: 0x28
    ::GlobalNamespace::MainSettingsMenuViewController* oculusPCSettingsMenuViewController;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::MainSettingsMenuViewController*) == 0x8);
    // private MainSettingsMenuViewController _questSettingsMenuViewController
    // Size: 0x8
    // Offset: 0x30
    ::GlobalNamespace::MainSettingsMenuViewController* questSettingsMenuViewController;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::MainSettingsMenuViewController*) == 0x8);
    // private MainSettingsMenuViewController _psvrSettingsMenuViewController
    // Size: 0x8
    // Offset: 0x38
    ::GlobalNamespace::MainSettingsMenuViewController* psvrSettingsMenuViewController;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::MainSettingsMenuViewController*) == 0x8);
    // private TabBarViewController _tabBarViewControllerPrefab
    // Size: 0x8
    // Offset: 0x40
    ::GlobalNamespace::TabBarViewController* tabBarViewControllerPrefab;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::TabBarViewController*) == 0x8);
    public:
    // Get instance field reference: private MainSettingsMenuViewController _defaultSettingsMenuViewController
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSettingsMenuViewController*& dyn__defaultSettingsMenuViewController();
    // Get instance field reference: private MainSettingsMenuViewController _oculusPCSettingsMenuViewController
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSettingsMenuViewController*& dyn__oculusPCSettingsMenuViewController();
    // Get instance field reference: private MainSettingsMenuViewController _questSettingsMenuViewController
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSettingsMenuViewController*& dyn__questSettingsMenuViewController();
    // Get instance field reference: private MainSettingsMenuViewController _psvrSettingsMenuViewController
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSettingsMenuViewController*& dyn__psvrSettingsMenuViewController();
    // Get instance field reference: private TabBarViewController _tabBarViewControllerPrefab
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::TabBarViewController*& dyn__tabBarViewControllerPrefab();
    // public System.Void .ctor()
    // Offset: 0x1549858
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MainSettingsMenuViewControllersInstaller* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewControllersInstaller::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MainSettingsMenuViewControllersInstaller*, creationType>()));
    }
    // public override System.Void InstallBindings()
    // Offset: 0x15497B4
    // Implemented from: Zenject.MonoInstallerBase
    // Base method: System.Void MonoInstallerBase::InstallBindings()
    void InstallBindings();
  }; // MainSettingsMenuViewControllersInstaller
  #pragma pack(pop)
  static check_size<sizeof(MainSettingsMenuViewControllersInstaller), 64 + sizeof(::GlobalNamespace::TabBarViewController*)> __GlobalNamespace_MainSettingsMenuViewControllersInstallerSizeCheck;
  static_assert(sizeof(MainSettingsMenuViewControllersInstaller) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::MainSettingsMenuViewControllersInstaller::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::MainSettingsMenuViewControllersInstaller::InstallBindings
// Il2CppName: InstallBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MainSettingsMenuViewControllersInstaller::*)()>(&GlobalNamespace::MainSettingsMenuViewControllersInstaller::InstallBindings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MainSettingsMenuViewControllersInstaller*), "InstallBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
