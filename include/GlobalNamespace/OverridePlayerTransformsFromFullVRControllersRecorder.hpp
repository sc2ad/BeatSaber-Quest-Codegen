// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: FullVRControllersRecorder
  class FullVRControllersRecorder;
  // Forward declaring type: PlayerTransforms
  class PlayerTransforms;
  // Forward declaring type: SaberManager
  class SaberManager;
  // Forward declaring type: PlayerVRControllersManager
  class PlayerVRControllersManager;
  // Forward declaring type: VRController
  class VRController;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: OverridePlayerTransformsFromFullVRControllersRecorder
  class OverridePlayerTransformsFromFullVRControllersRecorder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder*, "", "OverridePlayerTransformsFromFullVRControllersRecorder");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: OverridePlayerTransformsFromFullVRControllersRecorder
  // [TokenAttribute] Offset: FFFFFFFF
  class OverridePlayerTransformsFromFullVRControllersRecorder : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private FullVRControllersRecorder _fullVRControllersRecorder
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::FullVRControllersRecorder* fullVRControllersRecorder;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::FullVRControllersRecorder*) == 0x8);
    // [InjectAttribute] Offset: 0x10EE880
    // private readonly PlayerTransforms _playerTransforms
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::PlayerTransforms* playerTransforms;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PlayerTransforms*) == 0x8);
    // [InjectAttribute] Offset: 0x10EE890
    // private readonly SaberManager _saberManager
    // Size: 0x8
    // Offset: 0x28
    ::GlobalNamespace::SaberManager* saberManager;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SaberManager*) == 0x8);
    // [InjectAttribute] Offset: 0x10EE8A0
    // private readonly PlayerVRControllersManager _playerVRControllersManager
    // Size: 0x8
    // Offset: 0x30
    ::GlobalNamespace::PlayerVRControllersManager* playerVRControllersManager;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PlayerVRControllersManager*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private FullVRControllersRecorder _fullVRControllersRecorder
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::FullVRControllersRecorder*& dyn__fullVRControllersRecorder();
    // Get instance field reference: private readonly PlayerTransforms _playerTransforms
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerTransforms*& dyn__playerTransforms();
    // Get instance field reference: private readonly SaberManager _saberManager
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SaberManager*& dyn__saberManager();
    // Get instance field reference: private readonly PlayerVRControllersManager _playerVRControllersManager
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerVRControllersManager*& dyn__playerVRControllersManager();
    // public System.Void .ctor()
    // Offset: 0x133ADB4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OverridePlayerTransformsFromFullVRControllersRecorder* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OverridePlayerTransformsFromFullVRControllersRecorder*, creationType>()));
    }
    // protected System.Void Start()
    // Offset: 0x133AB1C
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0x133ABC0
    void OnDestroy();
    // private System.Void HandleFullVRControllersRecorderDidSetControllerTransform(VRController controller)
    // Offset: 0x133AC9C
    void HandleFullVRControllersRecorderDidSetControllerTransform(::GlobalNamespace::VRController* controller);
  }; // OverridePlayerTransformsFromFullVRControllersRecorder
  #pragma pack(pop)
  static check_size<sizeof(OverridePlayerTransformsFromFullVRControllersRecorder), 48 + sizeof(::GlobalNamespace::PlayerVRControllersManager*)> __GlobalNamespace_OverridePlayerTransformsFromFullVRControllersRecorderSizeCheck;
  static_assert(sizeof(OverridePlayerTransformsFromFullVRControllersRecorder) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::*)()>(&GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::*)()>(&GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::HandleFullVRControllersRecorderDidSetControllerTransform
// Il2CppName: HandleFullVRControllersRecorderDidSetControllerTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::*)(::GlobalNamespace::VRController*)>(&GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::HandleFullVRControllersRecorderDidSetControllerTransform)> {
  static const MethodInfo* get() {
    static auto* controller = &::il2cpp_utils::GetClassFromName("", "VRController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder*), "HandleFullVRControllersRecorderDidSetControllerTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{controller});
  }
};
