// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MB3_MeshBakerRoot
#include "GlobalNamespace/MB3_MeshBakerRoot.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects*, "", "MB3_MeshBakerRoot/ZSortObjects");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: MB3_MeshBakerRoot/ZSortObjects
  // [TokenAttribute] Offset: FFFFFFFF
  class MB3_MeshBakerRoot::ZSortObjects : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::Item
    class Item;
    // Nested type: ::GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::ItemComparer
    class ItemComparer;
    public:
    // public UnityEngine.Vector3 sortAxis
    // Size: 0xC
    // Offset: 0x10
    ::UnityEngine::Vector3 sortAxis;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Creating conversion operator: operator ::UnityEngine::Vector3
    constexpr operator ::UnityEngine::Vector3() const noexcept {
      return sortAxis;
    }
    // Get instance field reference: public UnityEngine.Vector3 sortAxis
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_sortAxis();
    // public System.Void .ctor()
    // Offset: 0x1B5F7FC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_MeshBakerRoot::ZSortObjects* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_MeshBakerRoot::ZSortObjects*, creationType>()));
    }
    // public System.Void SortByDistanceAlongAxis(System.Collections.Generic.List`1<UnityEngine.GameObject> gos)
    // Offset: 0x1B5F394
    void SortByDistanceAlongAxis(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* gos);
  }; // MB3_MeshBakerRoot/ZSortObjects
  #pragma pack(pop)
  static check_size<sizeof(MB3_MeshBakerRoot::ZSortObjects), 16 + sizeof(::UnityEngine::Vector3)> __GlobalNamespace_MB3_MeshBakerRoot_ZSortObjectsSizeCheck;
  static_assert(sizeof(MB3_MeshBakerRoot::ZSortObjects) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::SortByDistanceAlongAxis
// Il2CppName: SortByDistanceAlongAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::*)(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*)>(&GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects::SortByDistanceAlongAxis)> {
  static const MethodInfo* get() {
    static auto* gos = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects*), "SortByDistanceAlongAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gos});
  }
};
