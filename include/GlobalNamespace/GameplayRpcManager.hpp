// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`4<T1, T2, T3, T4>
  template<typename T1, typename T2, typename T3, typename T4>
  class Action_4;
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IMultiplayerSessionManager
  class IMultiplayerSessionManager;
  // Forward declaring type: RpcHandler`1<TType>
  template<typename TType>
  class RpcHandler_1;
  // Forward declaring type: PlayerSpecificSettingsAtStartNetSerializable
  class PlayerSpecificSettingsAtStartNetSerializable;
  // Forward declaring type: PlayerSpecificSettingsNetSerializable
  class PlayerSpecificSettingsNetSerializable;
  // Forward declaring type: NoteSpawnInfoNetSerializable
  class NoteSpawnInfoNetSerializable;
  // Forward declaring type: ObstacleSpawnInfoNetSerializable
  class ObstacleSpawnInfoNetSerializable;
  // Forward declaring type: SliderSpawnInfoNetSerializable
  class SliderSpawnInfoNetSerializable;
  // Forward declaring type: NoteCutInfoNetSerializable
  class NoteCutInfoNetSerializable;
  // Forward declaring type: NoteMissInfoNetSerializable
  class NoteMissInfoNetSerializable;
  // Forward declaring type: MultiplayerLevelCompletionResults
  class MultiplayerLevelCompletionResults;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GameplayRpcManager
  class GameplayRpcManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GameplayRpcManager);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GameplayRpcManager*, "", "GameplayRpcManager");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x98
  #pragma pack(push, 1)
  // Autogenerated type: GameplayRpcManager
  // [TokenAttribute] Offset: FFFFFFFF
  class GameplayRpcManager : public ::Il2CppObject/*, public ::GlobalNamespace::IGameplayRpcManager*/ {
    public:
    // Nested type: ::GlobalNamespace::GameplayRpcManager::RpcType
    struct RpcType;
    // Nested type: ::GlobalNamespace::GameplayRpcManager::SetGameplaySceneSyncFinishedRpc
    class SetGameplaySceneSyncFinishedRpc;
    // Nested type: ::GlobalNamespace::GameplayRpcManager::SetGameplaySceneReadyRpc
    class SetGameplaySceneReadyRpc;
    // Nested type: ::GlobalNamespace::GameplayRpcManager::GetGameplaySceneReadyRpc
    class GetGameplaySceneReadyRpc;
    // Nested type: ::GlobalNamespace::GameplayRpcManager::SetPlayerDidConnectLateRpc
    class SetPlayerDidConnectLateRpc;
    // Nested type: ::GlobalNamespace::GameplayRpcManager::SetGameplaySongReadyRpc
    class SetGameplaySongReadyRpc;
    // Nested type: ::GlobalNamespace::GameplayRpcManager::GetGameplaySongReadyRpc
    class GetGameplaySongReadyRpc;
    // Nested type: ::GlobalNamespace::GameplayRpcManager::SetSongStartTimeRpc
    class SetSongStartTimeRpc;
    // Nested type: ::GlobalNamespace::GameplayRpcManager::NoteSpawnedRpc
    class NoteSpawnedRpc;
    // Nested type: ::GlobalNamespace::GameplayRpcManager::ObstacleSpawnedRpc
    class ObstacleSpawnedRpc;
    // Nested type: ::GlobalNamespace::GameplayRpcManager::SliderSpawnedRpc
    class SliderSpawnedRpc;
    // Nested type: ::GlobalNamespace::GameplayRpcManager::NoteCutRpc
    class NoteCutRpc;
    // Nested type: ::GlobalNamespace::GameplayRpcManager::NoteMissedRpc
    class NoteMissedRpc;
    // Nested type: ::GlobalNamespace::GameplayRpcManager::LevelFinishedRpc
    class LevelFinishedRpc;
    // Nested type: ::GlobalNamespace::GameplayRpcManager::ReturnToMenuRpc
    class ReturnToMenuRpc;
    // Nested type: ::GlobalNamespace::GameplayRpcManager::RequestReturnToMenuRpc
    class RequestReturnToMenuRpc;
    // Size: 0x1
    #pragma pack(push, 1)
    // Autogenerated type: GameplayRpcManager/RpcType
    // [TokenAttribute] Offset: FFFFFFFF
    struct RpcType/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Byte value__
      // Size: 0x1
      // Offset: 0x0
      uint8_t value;
      // Field size check
      static_assert(sizeof(uint8_t) == 0x1);
      public:
      // Creating value type constructor for type: RpcType
      constexpr RpcType(uint8_t value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator uint8_t
      constexpr operator uint8_t() const noexcept {
        return value;
      }
      // static field const value: static public GameplayRpcManager/RpcType SetGameplaySceneSyncFinish
      static constexpr const uint8_t SetGameplaySceneSyncFinish = 0u;
      // Get static field: static public GameplayRpcManager/RpcType SetGameplaySceneSyncFinish
      static ::GlobalNamespace::GameplayRpcManager::RpcType _get_SetGameplaySceneSyncFinish();
      // Set static field: static public GameplayRpcManager/RpcType SetGameplaySceneSyncFinish
      static void _set_SetGameplaySceneSyncFinish(::GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType SetGameplaySceneReady
      static constexpr const uint8_t SetGameplaySceneReady = 1u;
      // Get static field: static public GameplayRpcManager/RpcType SetGameplaySceneReady
      static ::GlobalNamespace::GameplayRpcManager::RpcType _get_SetGameplaySceneReady();
      // Set static field: static public GameplayRpcManager/RpcType SetGameplaySceneReady
      static void _set_SetGameplaySceneReady(::GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType GetGameplaySceneReady
      static constexpr const uint8_t GetGameplaySceneReady = 2u;
      // Get static field: static public GameplayRpcManager/RpcType GetGameplaySceneReady
      static ::GlobalNamespace::GameplayRpcManager::RpcType _get_GetGameplaySceneReady();
      // Set static field: static public GameplayRpcManager/RpcType GetGameplaySceneReady
      static void _set_GetGameplaySceneReady(::GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType SetActivePlayerFailedToConnect
      static constexpr const uint8_t SetActivePlayerFailedToConnect = 3u;
      // Get static field: static public GameplayRpcManager/RpcType SetActivePlayerFailedToConnect
      static ::GlobalNamespace::GameplayRpcManager::RpcType _get_SetActivePlayerFailedToConnect();
      // Set static field: static public GameplayRpcManager/RpcType SetActivePlayerFailedToConnect
      static void _set_SetActivePlayerFailedToConnect(::GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType SetGameplaySongReady
      static constexpr const uint8_t SetGameplaySongReady = 4u;
      // Get static field: static public GameplayRpcManager/RpcType SetGameplaySongReady
      static ::GlobalNamespace::GameplayRpcManager::RpcType _get_SetGameplaySongReady();
      // Set static field: static public GameplayRpcManager/RpcType SetGameplaySongReady
      static void _set_SetGameplaySongReady(::GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType GetGameplaySongReady
      static constexpr const uint8_t GetGameplaySongReady = 5u;
      // Get static field: static public GameplayRpcManager/RpcType GetGameplaySongReady
      static ::GlobalNamespace::GameplayRpcManager::RpcType _get_GetGameplaySongReady();
      // Set static field: static public GameplayRpcManager/RpcType GetGameplaySongReady
      static void _set_GetGameplaySongReady(::GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType SetSongStartTime
      static constexpr const uint8_t SetSongStartTime = 6u;
      // Get static field: static public GameplayRpcManager/RpcType SetSongStartTime
      static ::GlobalNamespace::GameplayRpcManager::RpcType _get_SetSongStartTime();
      // Set static field: static public GameplayRpcManager/RpcType SetSongStartTime
      static void _set_SetSongStartTime(::GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType NoteCut
      static constexpr const uint8_t NoteCut = 7u;
      // Get static field: static public GameplayRpcManager/RpcType NoteCut
      static ::GlobalNamespace::GameplayRpcManager::RpcType _get_NoteCut();
      // Set static field: static public GameplayRpcManager/RpcType NoteCut
      static void _set_NoteCut(::GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType NoteMissed
      static constexpr const uint8_t NoteMissed = 8u;
      // Get static field: static public GameplayRpcManager/RpcType NoteMissed
      static ::GlobalNamespace::GameplayRpcManager::RpcType _get_NoteMissed();
      // Set static field: static public GameplayRpcManager/RpcType NoteMissed
      static void _set_NoteMissed(::GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType LevelFinished
      static constexpr const uint8_t LevelFinished = 9u;
      // Get static field: static public GameplayRpcManager/RpcType LevelFinished
      static ::GlobalNamespace::GameplayRpcManager::RpcType _get_LevelFinished();
      // Set static field: static public GameplayRpcManager/RpcType LevelFinished
      static void _set_LevelFinished(::GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType ReturnToMenu
      static constexpr const uint8_t ReturnToMenu = 10u;
      // Get static field: static public GameplayRpcManager/RpcType ReturnToMenu
      static ::GlobalNamespace::GameplayRpcManager::RpcType _get_ReturnToMenu();
      // Set static field: static public GameplayRpcManager/RpcType ReturnToMenu
      static void _set_ReturnToMenu(::GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType RequestReturnToMenu
      static constexpr const uint8_t RequestReturnToMenu = 11u;
      // Get static field: static public GameplayRpcManager/RpcType RequestReturnToMenu
      static ::GlobalNamespace::GameplayRpcManager::RpcType _get_RequestReturnToMenu();
      // Set static field: static public GameplayRpcManager/RpcType RequestReturnToMenu
      static void _set_RequestReturnToMenu(::GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType NoteSpawned
      static constexpr const uint8_t NoteSpawned = 12u;
      // Get static field: static public GameplayRpcManager/RpcType NoteSpawned
      static ::GlobalNamespace::GameplayRpcManager::RpcType _get_NoteSpawned();
      // Set static field: static public GameplayRpcManager/RpcType NoteSpawned
      static void _set_NoteSpawned(::GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType ObstacleSpawned
      static constexpr const uint8_t ObstacleSpawned = 13u;
      // Get static field: static public GameplayRpcManager/RpcType ObstacleSpawned
      static ::GlobalNamespace::GameplayRpcManager::RpcType _get_ObstacleSpawned();
      // Set static field: static public GameplayRpcManager/RpcType ObstacleSpawned
      static void _set_ObstacleSpawned(::GlobalNamespace::GameplayRpcManager::RpcType value);
      // static field const value: static public GameplayRpcManager/RpcType SliderSpawned
      static constexpr const uint8_t SliderSpawned = 14u;
      // Get static field: static public GameplayRpcManager/RpcType SliderSpawned
      static ::GlobalNamespace::GameplayRpcManager::RpcType _get_SliderSpawned();
      // Set static field: static public GameplayRpcManager/RpcType SliderSpawned
      static void _set_SliderSpawned(::GlobalNamespace::GameplayRpcManager::RpcType value);
      // Get instance field reference: public System.Byte value__
      [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
    }; // GameplayRpcManager/RpcType
    #pragma pack(pop)
    static check_size<sizeof(GameplayRpcManager::RpcType), 0 + sizeof(uint8_t)> __GlobalNamespace_GameplayRpcManager_RpcTypeSizeCheck;
    static_assert(sizeof(GameplayRpcManager::RpcType) == 0x1);
    public:
    // private readonly IMultiplayerSessionManager _multiplayerSessionManager
    // Size: 0x8
    // Offset: 0x10
    ::GlobalNamespace::IMultiplayerSessionManager* multiplayerSessionManager;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::IMultiplayerSessionManager*) == 0x8);
    // private readonly RpcHandler`1<GameplayRpcManager/RpcType> _rpcHandler
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::RpcHandler_1<::GlobalNamespace::GameplayRpcManager::RpcType>* rpcHandler;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::RpcHandler_1<::GlobalNamespace::GameplayRpcManager::RpcType>*) == 0x8);
    // private System.Action`3<System.String,PlayerSpecificSettingsAtStartNetSerializable,System.String> setGameplaySceneSyncFinishedEvent
    // Size: 0x8
    // Offset: 0x20
    ::System::Action_3<::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>* setGameplaySceneSyncFinishedEvent;
    // Field size check
    static_assert(sizeof(::System::Action_3<::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>*) == 0x8);
    // private System.Action`2<System.String,PlayerSpecificSettingsNetSerializable> setGameplaySceneReadyEvent
    // Size: 0x8
    // Offset: 0x28
    ::System::Action_2<::StringW, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* setGameplaySceneReadyEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>*) == 0x8);
    // private System.Action`1<System.String> getGameplaySceneReadyEvent
    // Size: 0x8
    // Offset: 0x30
    ::System::Action_1<::StringW>* getGameplaySceneReadyEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`4<System.String,System.String,PlayerSpecificSettingsAtStartNetSerializable,System.String> setPlayerDidConnectLateEvent
    // Size: 0x8
    // Offset: 0x38
    ::System::Action_4<::StringW, ::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>* setPlayerDidConnectLateEvent;
    // Field size check
    static_assert(sizeof(::System::Action_4<::StringW, ::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>*) == 0x8);
    // private System.Action`1<System.String> setGameplaySongReadyEvent
    // Size: 0x8
    // Offset: 0x40
    ::System::Action_1<::StringW>* setGameplaySongReadyEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`1<System.String> getGameplaySongReadyEvent
    // Size: 0x8
    // Offset: 0x48
    ::System::Action_1<::StringW>* getGameplaySongReadyEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`2<System.String,System.Single> setSongStartTimeEvent
    // Size: 0x8
    // Offset: 0x50
    ::System::Action_2<::StringW, float>* setSongStartTimeEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, float>*) == 0x8);
    // private System.Action`4<System.String,System.Single,System.Single,NoteSpawnInfoNetSerializable> noteWasSpawnedEvent
    // Size: 0x8
    // Offset: 0x58
    ::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteSpawnInfoNetSerializable*>* noteWasSpawnedEvent;
    // Field size check
    static_assert(sizeof(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteSpawnInfoNetSerializable*>*) == 0x8);
    // private System.Action`4<System.String,System.Single,System.Single,ObstacleSpawnInfoNetSerializable> obstacleWasSpawnedEvent
    // Size: 0x8
    // Offset: 0x60
    ::System::Action_4<::StringW, float, float, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable*>* obstacleWasSpawnedEvent;
    // Field size check
    static_assert(sizeof(::System::Action_4<::StringW, float, float, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable*>*) == 0x8);
    // private System.Action`4<System.String,System.Single,System.Single,SliderSpawnInfoNetSerializable> sliderWasSpawnedEvent
    // Size: 0x8
    // Offset: 0x68
    ::System::Action_4<::StringW, float, float, ::GlobalNamespace::SliderSpawnInfoNetSerializable*>* sliderWasSpawnedEvent;
    // Field size check
    static_assert(sizeof(::System::Action_4<::StringW, float, float, ::GlobalNamespace::SliderSpawnInfoNetSerializable*>*) == 0x8);
    // private System.Action`4<System.String,System.Single,System.Single,NoteCutInfoNetSerializable> noteWasCutEvent
    // Size: 0x8
    // Offset: 0x70
    ::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteCutInfoNetSerializable*>* noteWasCutEvent;
    // Field size check
    static_assert(sizeof(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteCutInfoNetSerializable*>*) == 0x8);
    // private System.Action`4<System.String,System.Single,System.Single,NoteMissInfoNetSerializable> noteWasMissedEvent
    // Size: 0x8
    // Offset: 0x78
    ::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteMissInfoNetSerializable*>* noteWasMissedEvent;
    // Field size check
    static_assert(sizeof(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteMissInfoNetSerializable*>*) == 0x8);
    // private System.Action`2<System.String,MultiplayerLevelCompletionResults> levelFinishedEvent
    // Size: 0x8
    // Offset: 0x80
    ::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerLevelCompletionResults*>* levelFinishedEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerLevelCompletionResults*>*) == 0x8);
    // private System.Action`1<System.String> returnToMenuEvent
    // Size: 0x8
    // Offset: 0x88
    ::System::Action_1<::StringW>* returnToMenuEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`1<System.String> requestReturnToMenuEvent
    // Size: 0x8
    // Offset: 0x90
    ::System::Action_1<::StringW>* requestReturnToMenuEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::IGameplayRpcManager
    operator ::GlobalNamespace::IGameplayRpcManager() noexcept {
      return *reinterpret_cast<::GlobalNamespace::IGameplayRpcManager*>(this);
    }
    // Creating interface conversion operator: i_IGameplayRpcManager
    inline ::GlobalNamespace::IGameplayRpcManager* i_IGameplayRpcManager() noexcept {
      return reinterpret_cast<::GlobalNamespace::IGameplayRpcManager*>(this);
    }
    // static field const value: static private System.String kGameplayState
    static constexpr const char* kGameplayState = "in_gameplay";
    // Get static field: static private System.String kGameplayState
    static ::StringW _get_kGameplayState();
    // Set static field: static private System.String kGameplayState
    static void _set_kGameplayState(::StringW value);
    // Get instance field reference: private readonly IMultiplayerSessionManager _multiplayerSessionManager
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& dyn__multiplayerSessionManager();
    // Get instance field reference: private readonly RpcHandler`1<GameplayRpcManager/RpcType> _rpcHandler
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::RpcHandler_1<::GlobalNamespace::GameplayRpcManager::RpcType>*& dyn__rpcHandler();
    // Get instance field reference: private System.Action`3<System.String,PlayerSpecificSettingsAtStartNetSerializable,System.String> setGameplaySceneSyncFinishedEvent
    [[deprecated("Use field access instead!")]] ::System::Action_3<::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>*& dyn_setGameplaySceneSyncFinishedEvent();
    // Get instance field reference: private System.Action`2<System.String,PlayerSpecificSettingsNetSerializable> setGameplaySceneReadyEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>*& dyn_setGameplaySceneReadyEvent();
    // Get instance field reference: private System.Action`1<System.String> getGameplaySceneReadyEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_getGameplaySceneReadyEvent();
    // Get instance field reference: private System.Action`4<System.String,System.String,PlayerSpecificSettingsAtStartNetSerializable,System.String> setPlayerDidConnectLateEvent
    [[deprecated("Use field access instead!")]] ::System::Action_4<::StringW, ::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>*& dyn_setPlayerDidConnectLateEvent();
    // Get instance field reference: private System.Action`1<System.String> setGameplaySongReadyEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_setGameplaySongReadyEvent();
    // Get instance field reference: private System.Action`1<System.String> getGameplaySongReadyEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_getGameplaySongReadyEvent();
    // Get instance field reference: private System.Action`2<System.String,System.Single> setSongStartTimeEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, float>*& dyn_setSongStartTimeEvent();
    // Get instance field reference: private System.Action`4<System.String,System.Single,System.Single,NoteSpawnInfoNetSerializable> noteWasSpawnedEvent
    [[deprecated("Use field access instead!")]] ::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteSpawnInfoNetSerializable*>*& dyn_noteWasSpawnedEvent();
    // Get instance field reference: private System.Action`4<System.String,System.Single,System.Single,ObstacleSpawnInfoNetSerializable> obstacleWasSpawnedEvent
    [[deprecated("Use field access instead!")]] ::System::Action_4<::StringW, float, float, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable*>*& dyn_obstacleWasSpawnedEvent();
    // Get instance field reference: private System.Action`4<System.String,System.Single,System.Single,SliderSpawnInfoNetSerializable> sliderWasSpawnedEvent
    [[deprecated("Use field access instead!")]] ::System::Action_4<::StringW, float, float, ::GlobalNamespace::SliderSpawnInfoNetSerializable*>*& dyn_sliderWasSpawnedEvent();
    // Get instance field reference: private System.Action`4<System.String,System.Single,System.Single,NoteCutInfoNetSerializable> noteWasCutEvent
    [[deprecated("Use field access instead!")]] ::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteCutInfoNetSerializable*>*& dyn_noteWasCutEvent();
    // Get instance field reference: private System.Action`4<System.String,System.Single,System.Single,NoteMissInfoNetSerializable> noteWasMissedEvent
    [[deprecated("Use field access instead!")]] ::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteMissInfoNetSerializable*>*& dyn_noteWasMissedEvent();
    // Get instance field reference: private System.Action`2<System.String,MultiplayerLevelCompletionResults> levelFinishedEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerLevelCompletionResults*>*& dyn_levelFinishedEvent();
    // Get instance field reference: private System.Action`1<System.String> returnToMenuEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_returnToMenuEvent();
    // Get instance field reference: private System.Action`1<System.String> requestReturnToMenuEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_requestReturnToMenuEvent();
    // public System.Boolean get_enabled()
    // Offset: 0x16222A0
    bool get_enabled();
    // public System.Void set_enabled(System.Boolean value)
    // Offset: 0x1622364
    void set_enabled(bool value);
    // public System.Void add_setGameplaySceneSyncFinishedEvent(System.Action`3<System.String,PlayerSpecificSettingsAtStartNetSerializable,System.String> value)
    // Offset: 0x1622A20
    void add_setGameplaySceneSyncFinishedEvent(::System::Action_3<::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>* value);
    // public System.Void remove_setGameplaySceneSyncFinishedEvent(System.Action`3<System.String,PlayerSpecificSettingsAtStartNetSerializable,System.String> value)
    // Offset: 0x1622AC4
    void remove_setGameplaySceneSyncFinishedEvent(::System::Action_3<::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>* value);
    // public System.Void add_setGameplaySceneReadyEvent(System.Action`2<System.String,PlayerSpecificSettingsNetSerializable> value)
    // Offset: 0x1622C68
    void add_setGameplaySceneReadyEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* value);
    // public System.Void remove_setGameplaySceneReadyEvent(System.Action`2<System.String,PlayerSpecificSettingsNetSerializable> value)
    // Offset: 0x1622D0C
    void remove_setGameplaySceneReadyEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* value);
    // public System.Void add_getGameplaySceneReadyEvent(System.Action`1<System.String> value)
    // Offset: 0x1622E94
    void add_getGameplaySceneReadyEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_getGameplaySceneReadyEvent(System.Action`1<System.String> value)
    // Offset: 0x1622F38
    void remove_getGameplaySceneReadyEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_setPlayerDidConnectLateEvent(System.Action`4<System.String,System.String,PlayerSpecificSettingsAtStartNetSerializable,System.String> value)
    // Offset: 0x16230A8
    void add_setPlayerDidConnectLateEvent(::System::Action_4<::StringW, ::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>* value);
    // public System.Void remove_setPlayerDidConnectLateEvent(System.Action`4<System.String,System.String,PlayerSpecificSettingsAtStartNetSerializable,System.String> value)
    // Offset: 0x162314C
    void remove_setPlayerDidConnectLateEvent(::System::Action_4<::StringW, ::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>* value);
    // public System.Void add_setGameplaySongReadyEvent(System.Action`1<System.String> value)
    // Offset: 0x1623308
    void add_setGameplaySongReadyEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_setGameplaySongReadyEvent(System.Action`1<System.String> value)
    // Offset: 0x16233AC
    void remove_setGameplaySongReadyEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_getGameplaySongReadyEvent(System.Action`1<System.String> value)
    // Offset: 0x162351C
    void add_getGameplaySongReadyEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_getGameplaySongReadyEvent(System.Action`1<System.String> value)
    // Offset: 0x16235C0
    void remove_getGameplaySongReadyEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_setSongStartTimeEvent(System.Action`2<System.String,System.Single> value)
    // Offset: 0x1623730
    void add_setSongStartTimeEvent(::System::Action_2<::StringW, float>* value);
    // public System.Void remove_setSongStartTimeEvent(System.Action`2<System.String,System.Single> value)
    // Offset: 0x16237D4
    void remove_setSongStartTimeEvent(::System::Action_2<::StringW, float>* value);
    // public System.Void add_noteWasSpawnedEvent(System.Action`4<System.String,System.Single,System.Single,NoteSpawnInfoNetSerializable> value)
    // Offset: 0x1623968
    void add_noteWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteSpawnInfoNetSerializable*>* value);
    // public System.Void remove_noteWasSpawnedEvent(System.Action`4<System.String,System.Single,System.Single,NoteSpawnInfoNetSerializable> value)
    // Offset: 0x1623A0C
    void remove_noteWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteSpawnInfoNetSerializable*>* value);
    // public System.Void add_obstacleWasSpawnedEvent(System.Action`4<System.String,System.Single,System.Single,ObstacleSpawnInfoNetSerializable> value)
    // Offset: 0x1623BC0
    void add_obstacleWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable*>* value);
    // public System.Void remove_obstacleWasSpawnedEvent(System.Action`4<System.String,System.Single,System.Single,ObstacleSpawnInfoNetSerializable> value)
    // Offset: 0x1623C64
    void remove_obstacleWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable*>* value);
    // public System.Void add_sliderWasSpawnedEvent(System.Action`4<System.String,System.Single,System.Single,SliderSpawnInfoNetSerializable> value)
    // Offset: 0x1623E18
    void add_sliderWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::SliderSpawnInfoNetSerializable*>* value);
    // public System.Void remove_sliderWasSpawnedEvent(System.Action`4<System.String,System.Single,System.Single,SliderSpawnInfoNetSerializable> value)
    // Offset: 0x1623EBC
    void remove_sliderWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::SliderSpawnInfoNetSerializable*>* value);
    // public System.Void add_noteWasCutEvent(System.Action`4<System.String,System.Single,System.Single,NoteCutInfoNetSerializable> value)
    // Offset: 0x1624070
    void add_noteWasCutEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteCutInfoNetSerializable*>* value);
    // public System.Void remove_noteWasCutEvent(System.Action`4<System.String,System.Single,System.Single,NoteCutInfoNetSerializable> value)
    // Offset: 0x1624114
    void remove_noteWasCutEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteCutInfoNetSerializable*>* value);
    // public System.Void add_noteWasMissedEvent(System.Action`4<System.String,System.Single,System.Single,NoteMissInfoNetSerializable> value)
    // Offset: 0x16242C8
    void add_noteWasMissedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteMissInfoNetSerializable*>* value);
    // public System.Void remove_noteWasMissedEvent(System.Action`4<System.String,System.Single,System.Single,NoteMissInfoNetSerializable> value)
    // Offset: 0x162436C
    void remove_noteWasMissedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteMissInfoNetSerializable*>* value);
    // public System.Void add_levelFinishedEvent(System.Action`2<System.String,MultiplayerLevelCompletionResults> value)
    // Offset: 0x1624520
    void add_levelFinishedEvent(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerLevelCompletionResults*>* value);
    // public System.Void remove_levelFinishedEvent(System.Action`2<System.String,MultiplayerLevelCompletionResults> value)
    // Offset: 0x16245C4
    void remove_levelFinishedEvent(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerLevelCompletionResults*>* value);
    // public System.Void add_returnToMenuEvent(System.Action`1<System.String> value)
    // Offset: 0x162474C
    void add_returnToMenuEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_returnToMenuEvent(System.Action`1<System.String> value)
    // Offset: 0x16247F0
    void remove_returnToMenuEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_requestReturnToMenuEvent(System.Action`1<System.String> value)
    // Offset: 0x1624960
    void add_requestReturnToMenuEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_requestReturnToMenuEvent(System.Action`1<System.String> value)
    // Offset: 0x1624A04
    void remove_requestReturnToMenuEvent(::System::Action_1<::StringW>* value);
    // public System.Void .ctor(IMultiplayerSessionManager multiplayerSessionManager)
    // Offset: 0x1622438
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GameplayRpcManager* New_ctor(::GlobalNamespace::IMultiplayerSessionManager* multiplayerSessionManager) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GameplayRpcManager*, creationType>(multiplayerSessionManager)));
    }
    // public System.Void Dispose()
    // Offset: 0x16229BC
    void Dispose();
    // public System.Void SetGameplaySceneSyncFinished(PlayerSpecificSettingsAtStartNetSerializable playersAtGameStartNetSerializable, System.String sessionGameId)
    // Offset: 0x1622B68
    void SetGameplaySceneSyncFinished(::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStartNetSerializable, ::StringW sessionGameId);
    // private System.Void InvokeSetGameplaySceneSyncFinishCallback(System.String userId, PlayerSpecificSettingsAtStartNetSerializable playersAtGameStart, System.String sessionGameId)
    // Offset: 0x1622BD8
    void InvokeSetGameplaySceneSyncFinishCallback(::StringW userId, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStart, ::StringW sessionGameId);
    // public System.Void SetGameplaySceneReady(PlayerSpecificSettingsNetSerializable playerSpecificSettings)
    // Offset: 0x1622DB0
    void SetGameplaySceneReady(::GlobalNamespace::PlayerSpecificSettingsNetSerializable* playerSpecificSettings);
    // private System.Void InvokeSetGameplaySceneReadyCallback(System.String userId, PlayerSpecificSettingsNetSerializable playerSpecificSettingsNetSerializable)
    // Offset: 0x1622E18
    void InvokeSetGameplaySceneReadyCallback(::StringW userId, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable* playerSpecificSettingsNetSerializable);
    // public System.Void GetGameplaySceneReady()
    // Offset: 0x1622FDC
    void GetGameplaySceneReady();
    // private System.Void InvokeGetGameplaySceneReadyCallback(System.String userId)
    // Offset: 0x1623034
    void InvokeGetGameplaySceneReadyCallback(::StringW userId);
    // public System.Void SetPlayerDidConnectLate(System.String usedId, PlayerSpecificSettingsAtStartNetSerializable playersAtGameStartNetSerializable, System.String sessionGameId)
    // Offset: 0x16231F0
    void SetPlayerDidConnectLate(::StringW usedId, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStartNetSerializable, ::StringW sessionGameId);
    // private System.Void InvokeSetPlayerDidConnectLate(System.String userId, System.String failedUserId, PlayerSpecificSettingsAtStartNetSerializable playersAtGameStartNetSerializable, System.String sessionGameId)
    // Offset: 0x1623270
    void InvokeSetPlayerDidConnectLate(::StringW userId, ::StringW failedUserId, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStartNetSerializable, ::StringW sessionGameId);
    // public System.Void SetGameplaySongReady()
    // Offset: 0x1623450
    void SetGameplaySongReady();
    // private System.Void InvokeSetGameplaySongReadyCallback(System.String userId)
    // Offset: 0x16234A8
    void InvokeSetGameplaySongReadyCallback(::StringW userId);
    // public System.Void GetGameplaySongReady()
    // Offset: 0x1623664
    void GetGameplaySongReady();
    // private System.Void InvokeGetGameplayLevelReadyCallback(System.String userId)
    // Offset: 0x16236BC
    void InvokeGetGameplayLevelReadyCallback(::StringW userId);
    // public System.Void SetSongStartTime(System.Single startTime)
    // Offset: 0x1623878
    void SetSongStartTime(float startTime);
    // private System.Void InvokeSetSongStartTimeCallback(System.String userId, System.Single startTime)
    // Offset: 0x16238E0
    void InvokeSetSongStartTimeCallback(::StringW userId, float startTime);
    // public System.Void NoteSpawned(System.Single songTime, NoteSpawnInfoNetSerializable noteSpawnInfoNetSerializable)
    // Offset: 0x1623AB0
    void NoteSpawned(float songTime, ::GlobalNamespace::NoteSpawnInfoNetSerializable* noteSpawnInfoNetSerializable);
    // private System.Void InvokeNoteWasSpawnedCallback(System.String userId, System.Single syncTime, System.Single songTime, NoteSpawnInfoNetSerializable noteSpawnInfo)
    // Offset: 0x1623B28
    void InvokeNoteWasSpawnedCallback(::StringW userId, float syncTime, float songTime, ::GlobalNamespace::NoteSpawnInfoNetSerializable* noteSpawnInfo);
    // public System.Void ObstacleSpawned(System.Single songTime, ObstacleSpawnInfoNetSerializable obstacleSpawnInfoNetSerializable)
    // Offset: 0x1623D08
    void ObstacleSpawned(float songTime, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable* obstacleSpawnInfoNetSerializable);
    // private System.Void InvokeObstacleWasSpawnedCallback(System.String userId, System.Single syncTime, System.Single songTime, ObstacleSpawnInfoNetSerializable obstacleSpawnInfo)
    // Offset: 0x1623D80
    void InvokeObstacleWasSpawnedCallback(::StringW userId, float syncTime, float songTime, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable* obstacleSpawnInfo);
    // public System.Void SliderSpawned(System.Single songTime, SliderSpawnInfoNetSerializable sliderSpawnInfoNetSerializable)
    // Offset: 0x1623F60
    void SliderSpawned(float songTime, ::GlobalNamespace::SliderSpawnInfoNetSerializable* sliderSpawnInfoNetSerializable);
    // private System.Void InvokeSliderWasSpawnedCallback(System.String userId, System.Single syncTime, System.Single songTime, SliderSpawnInfoNetSerializable sliderSpawnInfo)
    // Offset: 0x1623FD8
    void InvokeSliderWasSpawnedCallback(::StringW userId, float syncTime, float songTime, ::GlobalNamespace::SliderSpawnInfoNetSerializable* sliderSpawnInfo);
    // public System.Void NoteCut(System.Single songTime, NoteCutInfoNetSerializable noteCutInfoNetSerializable)
    // Offset: 0x16241B8
    void NoteCut(float songTime, ::GlobalNamespace::NoteCutInfoNetSerializable* noteCutInfoNetSerializable);
    // private System.Void InvokeNoteWasCutCallback(System.String userId, System.Single syncTime, System.Single songTime, NoteCutInfoNetSerializable noteCutInfo)
    // Offset: 0x1624230
    void InvokeNoteWasCutCallback(::StringW userId, float syncTime, float songTime, ::GlobalNamespace::NoteCutInfoNetSerializable* noteCutInfo);
    // public System.Void NoteMissed(System.Single songTime, NoteMissInfoNetSerializable noteMissInfoNetSerializable)
    // Offset: 0x1624410
    void NoteMissed(float songTime, ::GlobalNamespace::NoteMissInfoNetSerializable* noteMissInfoNetSerializable);
    // private System.Void InvokeNoteWasMissedCallback(System.String userId, System.Single syncTime, System.Single songTime, NoteMissInfoNetSerializable noteMissInfo)
    // Offset: 0x1624488
    void InvokeNoteWasMissedCallback(::StringW userId, float syncTime, float songTime, ::GlobalNamespace::NoteMissInfoNetSerializable* noteMissInfo);
    // public System.Void LevelFinished(MultiplayerLevelCompletionResults results)
    // Offset: 0x1624668
    void LevelFinished(::GlobalNamespace::MultiplayerLevelCompletionResults* results);
    // private System.Void InvokeLevelFinishedCallback(System.String userId, MultiplayerLevelCompletionResults results)
    // Offset: 0x16246D0
    void InvokeLevelFinishedCallback(::StringW userId, ::GlobalNamespace::MultiplayerLevelCompletionResults* results);
    // public System.Void ReturnToMenu()
    // Offset: 0x1624894
    void ReturnToMenu();
    // private System.Void InvokeReturnToMenuCallback(System.String userId)
    // Offset: 0x16248EC
    void InvokeReturnToMenuCallback(::StringW userId);
    // public System.Void RequestReturnToMenu()
    // Offset: 0x1624AA8
    void RequestReturnToMenu();
    // private System.Void InvokeRequestReturnToMenuCallback(System.String userId)
    // Offset: 0x1624B00
    void InvokeRequestReturnToMenuCallback(::StringW userId);
  }; // GameplayRpcManager
  #pragma pack(pop)
  static check_size<sizeof(GameplayRpcManager), 144 + sizeof(::System::Action_1<::StringW>*)> __GlobalNamespace_GameplayRpcManagerSizeCheck;
  static_assert(sizeof(GameplayRpcManager) == 0x98);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GameplayRpcManager::RpcType, "", "GameplayRpcManager/RpcType");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::get_enabled
// Il2CppName: get_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::GameplayRpcManager::*)()>(&GlobalNamespace::GameplayRpcManager::get_enabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "get_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::set_enabled
// Il2CppName: set_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(bool)>(&GlobalNamespace::GameplayRpcManager::set_enabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "set_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::add_setGameplaySceneSyncFinishedEvent
// Il2CppName: add_setGameplaySceneSyncFinishedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_3<::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>*)>(&GlobalNamespace::GameplayRpcManager::add_setGameplaySceneSyncFinishedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "PlayerSpecificSettingsAtStartNetSerializable"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "add_setGameplaySceneSyncFinishedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::remove_setGameplaySceneSyncFinishedEvent
// Il2CppName: remove_setGameplaySceneSyncFinishedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_3<::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>*)>(&GlobalNamespace::GameplayRpcManager::remove_setGameplaySceneSyncFinishedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "PlayerSpecificSettingsAtStartNetSerializable"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "remove_setGameplaySceneSyncFinishedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::add_setGameplaySceneReadyEvent
// Il2CppName: add_setGameplaySceneReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>*)>(&GlobalNamespace::GameplayRpcManager::add_setGameplaySceneReadyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "PlayerSpecificSettingsNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "add_setGameplaySceneReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::remove_setGameplaySceneReadyEvent
// Il2CppName: remove_setGameplaySceneReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>*)>(&GlobalNamespace::GameplayRpcManager::remove_setGameplaySceneReadyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "PlayerSpecificSettingsNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "remove_setGameplaySceneReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::add_getGameplaySceneReadyEvent
// Il2CppName: add_getGameplaySceneReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::GameplayRpcManager::add_getGameplaySceneReadyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "add_getGameplaySceneReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::remove_getGameplaySceneReadyEvent
// Il2CppName: remove_getGameplaySceneReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::GameplayRpcManager::remove_getGameplaySceneReadyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "remove_getGameplaySceneReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::add_setPlayerDidConnectLateEvent
// Il2CppName: add_setPlayerDidConnectLateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_4<::StringW, ::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>*)>(&GlobalNamespace::GameplayRpcManager::add_setPlayerDidConnectLateEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "PlayerSpecificSettingsAtStartNetSerializable"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "add_setPlayerDidConnectLateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::remove_setPlayerDidConnectLateEvent
// Il2CppName: remove_setPlayerDidConnectLateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_4<::StringW, ::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>*)>(&GlobalNamespace::GameplayRpcManager::remove_setPlayerDidConnectLateEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "PlayerSpecificSettingsAtStartNetSerializable"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "remove_setPlayerDidConnectLateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::add_setGameplaySongReadyEvent
// Il2CppName: add_setGameplaySongReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::GameplayRpcManager::add_setGameplaySongReadyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "add_setGameplaySongReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::remove_setGameplaySongReadyEvent
// Il2CppName: remove_setGameplaySongReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::GameplayRpcManager::remove_setGameplaySongReadyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "remove_setGameplaySongReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::add_getGameplaySongReadyEvent
// Il2CppName: add_getGameplaySongReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::GameplayRpcManager::add_getGameplaySongReadyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "add_getGameplaySongReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::remove_getGameplaySongReadyEvent
// Il2CppName: remove_getGameplaySongReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::GameplayRpcManager::remove_getGameplaySongReadyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "remove_getGameplaySongReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::add_setSongStartTimeEvent
// Il2CppName: add_setSongStartTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_2<::StringW, float>*)>(&GlobalNamespace::GameplayRpcManager::add_setSongStartTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "add_setSongStartTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::remove_setSongStartTimeEvent
// Il2CppName: remove_setSongStartTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_2<::StringW, float>*)>(&GlobalNamespace::GameplayRpcManager::remove_setSongStartTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "remove_setSongStartTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::add_noteWasSpawnedEvent
// Il2CppName: add_noteWasSpawnedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteSpawnInfoNetSerializable*>*)>(&GlobalNamespace::GameplayRpcManager::add_noteWasSpawnedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("", "NoteSpawnInfoNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "add_noteWasSpawnedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::remove_noteWasSpawnedEvent
// Il2CppName: remove_noteWasSpawnedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteSpawnInfoNetSerializable*>*)>(&GlobalNamespace::GameplayRpcManager::remove_noteWasSpawnedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("", "NoteSpawnInfoNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "remove_noteWasSpawnedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::add_obstacleWasSpawnedEvent
// Il2CppName: add_obstacleWasSpawnedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_4<::StringW, float, float, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable*>*)>(&GlobalNamespace::GameplayRpcManager::add_obstacleWasSpawnedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("", "ObstacleSpawnInfoNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "add_obstacleWasSpawnedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::remove_obstacleWasSpawnedEvent
// Il2CppName: remove_obstacleWasSpawnedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_4<::StringW, float, float, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable*>*)>(&GlobalNamespace::GameplayRpcManager::remove_obstacleWasSpawnedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("", "ObstacleSpawnInfoNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "remove_obstacleWasSpawnedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::add_sliderWasSpawnedEvent
// Il2CppName: add_sliderWasSpawnedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_4<::StringW, float, float, ::GlobalNamespace::SliderSpawnInfoNetSerializable*>*)>(&GlobalNamespace::GameplayRpcManager::add_sliderWasSpawnedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("", "SliderSpawnInfoNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "add_sliderWasSpawnedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::remove_sliderWasSpawnedEvent
// Il2CppName: remove_sliderWasSpawnedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_4<::StringW, float, float, ::GlobalNamespace::SliderSpawnInfoNetSerializable*>*)>(&GlobalNamespace::GameplayRpcManager::remove_sliderWasSpawnedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("", "SliderSpawnInfoNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "remove_sliderWasSpawnedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::add_noteWasCutEvent
// Il2CppName: add_noteWasCutEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteCutInfoNetSerializable*>*)>(&GlobalNamespace::GameplayRpcManager::add_noteWasCutEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("", "NoteCutInfoNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "add_noteWasCutEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::remove_noteWasCutEvent
// Il2CppName: remove_noteWasCutEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteCutInfoNetSerializable*>*)>(&GlobalNamespace::GameplayRpcManager::remove_noteWasCutEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("", "NoteCutInfoNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "remove_noteWasCutEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::add_noteWasMissedEvent
// Il2CppName: add_noteWasMissedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteMissInfoNetSerializable*>*)>(&GlobalNamespace::GameplayRpcManager::add_noteWasMissedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("", "NoteMissInfoNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "add_noteWasMissedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::remove_noteWasMissedEvent
// Il2CppName: remove_noteWasMissedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteMissInfoNetSerializable*>*)>(&GlobalNamespace::GameplayRpcManager::remove_noteWasMissedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("", "NoteMissInfoNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "remove_noteWasMissedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::add_levelFinishedEvent
// Il2CppName: add_levelFinishedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerLevelCompletionResults*>*)>(&GlobalNamespace::GameplayRpcManager::add_levelFinishedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "MultiplayerLevelCompletionResults")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "add_levelFinishedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::remove_levelFinishedEvent
// Il2CppName: remove_levelFinishedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerLevelCompletionResults*>*)>(&GlobalNamespace::GameplayRpcManager::remove_levelFinishedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "MultiplayerLevelCompletionResults")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "remove_levelFinishedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::add_returnToMenuEvent
// Il2CppName: add_returnToMenuEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::GameplayRpcManager::add_returnToMenuEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "add_returnToMenuEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::remove_returnToMenuEvent
// Il2CppName: remove_returnToMenuEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::GameplayRpcManager::remove_returnToMenuEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "remove_returnToMenuEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::add_requestReturnToMenuEvent
// Il2CppName: add_requestReturnToMenuEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::GameplayRpcManager::add_requestReturnToMenuEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "add_requestReturnToMenuEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::remove_requestReturnToMenuEvent
// Il2CppName: remove_requestReturnToMenuEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::GameplayRpcManager::remove_requestReturnToMenuEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "remove_requestReturnToMenuEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)()>(&GlobalNamespace::GameplayRpcManager::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::SetGameplaySceneSyncFinished
// Il2CppName: SetGameplaySceneSyncFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW)>(&GlobalNamespace::GameplayRpcManager::SetGameplaySceneSyncFinished)> {
  static const MethodInfo* get() {
    static auto* playersAtGameStartNetSerializable = &::il2cpp_utils::GetClassFromName("", "PlayerSpecificSettingsAtStartNetSerializable")->byval_arg;
    static auto* sessionGameId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "SetGameplaySceneSyncFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playersAtGameStartNetSerializable, sessionGameId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::InvokeSetGameplaySceneSyncFinishCallback
// Il2CppName: InvokeSetGameplaySceneSyncFinishCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW)>(&GlobalNamespace::GameplayRpcManager::InvokeSetGameplaySceneSyncFinishCallback)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* playersAtGameStart = &::il2cpp_utils::GetClassFromName("", "PlayerSpecificSettingsAtStartNetSerializable")->byval_arg;
    static auto* sessionGameId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "InvokeSetGameplaySceneSyncFinishCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, playersAtGameStart, sessionGameId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::SetGameplaySceneReady
// Il2CppName: SetGameplaySceneReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::GlobalNamespace::PlayerSpecificSettingsNetSerializable*)>(&GlobalNamespace::GameplayRpcManager::SetGameplaySceneReady)> {
  static const MethodInfo* get() {
    static auto* playerSpecificSettings = &::il2cpp_utils::GetClassFromName("", "PlayerSpecificSettingsNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "SetGameplaySceneReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerSpecificSettings});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::InvokeSetGameplaySceneReadyCallback
// Il2CppName: InvokeSetGameplaySceneReadyCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::StringW, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*)>(&GlobalNamespace::GameplayRpcManager::InvokeSetGameplaySceneReadyCallback)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* playerSpecificSettingsNetSerializable = &::il2cpp_utils::GetClassFromName("", "PlayerSpecificSettingsNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "InvokeSetGameplaySceneReadyCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, playerSpecificSettingsNetSerializable});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::GetGameplaySceneReady
// Il2CppName: GetGameplaySceneReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)()>(&GlobalNamespace::GameplayRpcManager::GetGameplaySceneReady)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "GetGameplaySceneReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::InvokeGetGameplaySceneReadyCallback
// Il2CppName: InvokeGetGameplaySceneReadyCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::StringW)>(&GlobalNamespace::GameplayRpcManager::InvokeGetGameplaySceneReadyCallback)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "InvokeGetGameplaySceneReadyCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::SetPlayerDidConnectLate
// Il2CppName: SetPlayerDidConnectLate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW)>(&GlobalNamespace::GameplayRpcManager::SetPlayerDidConnectLate)> {
  static const MethodInfo* get() {
    static auto* usedId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* playersAtGameStartNetSerializable = &::il2cpp_utils::GetClassFromName("", "PlayerSpecificSettingsAtStartNetSerializable")->byval_arg;
    static auto* sessionGameId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "SetPlayerDidConnectLate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{usedId, playersAtGameStartNetSerializable, sessionGameId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::InvokeSetPlayerDidConnectLate
// Il2CppName: InvokeSetPlayerDidConnectLate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::StringW, ::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW)>(&GlobalNamespace::GameplayRpcManager::InvokeSetPlayerDidConnectLate)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* failedUserId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* playersAtGameStartNetSerializable = &::il2cpp_utils::GetClassFromName("", "PlayerSpecificSettingsAtStartNetSerializable")->byval_arg;
    static auto* sessionGameId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "InvokeSetPlayerDidConnectLate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, failedUserId, playersAtGameStartNetSerializable, sessionGameId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::SetGameplaySongReady
// Il2CppName: SetGameplaySongReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)()>(&GlobalNamespace::GameplayRpcManager::SetGameplaySongReady)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "SetGameplaySongReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::InvokeSetGameplaySongReadyCallback
// Il2CppName: InvokeSetGameplaySongReadyCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::StringW)>(&GlobalNamespace::GameplayRpcManager::InvokeSetGameplaySongReadyCallback)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "InvokeSetGameplaySongReadyCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::GetGameplaySongReady
// Il2CppName: GetGameplaySongReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)()>(&GlobalNamespace::GameplayRpcManager::GetGameplaySongReady)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "GetGameplaySongReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::InvokeGetGameplayLevelReadyCallback
// Il2CppName: InvokeGetGameplayLevelReadyCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::StringW)>(&GlobalNamespace::GameplayRpcManager::InvokeGetGameplayLevelReadyCallback)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "InvokeGetGameplayLevelReadyCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::SetSongStartTime
// Il2CppName: SetSongStartTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(float)>(&GlobalNamespace::GameplayRpcManager::SetSongStartTime)> {
  static const MethodInfo* get() {
    static auto* startTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "SetSongStartTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startTime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::InvokeSetSongStartTimeCallback
// Il2CppName: InvokeSetSongStartTimeCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::StringW, float)>(&GlobalNamespace::GameplayRpcManager::InvokeSetSongStartTimeCallback)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "InvokeSetSongStartTimeCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, startTime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::NoteSpawned
// Il2CppName: NoteSpawned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(float, ::GlobalNamespace::NoteSpawnInfoNetSerializable*)>(&GlobalNamespace::GameplayRpcManager::NoteSpawned)> {
  static const MethodInfo* get() {
    static auto* songTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* noteSpawnInfoNetSerializable = &::il2cpp_utils::GetClassFromName("", "NoteSpawnInfoNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "NoteSpawned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{songTime, noteSpawnInfoNetSerializable});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::InvokeNoteWasSpawnedCallback
// Il2CppName: InvokeNoteWasSpawnedCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::StringW, float, float, ::GlobalNamespace::NoteSpawnInfoNetSerializable*)>(&GlobalNamespace::GameplayRpcManager::InvokeNoteWasSpawnedCallback)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* syncTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* songTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* noteSpawnInfo = &::il2cpp_utils::GetClassFromName("", "NoteSpawnInfoNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "InvokeNoteWasSpawnedCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, syncTime, songTime, noteSpawnInfo});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::ObstacleSpawned
// Il2CppName: ObstacleSpawned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(float, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable*)>(&GlobalNamespace::GameplayRpcManager::ObstacleSpawned)> {
  static const MethodInfo* get() {
    static auto* songTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* obstacleSpawnInfoNetSerializable = &::il2cpp_utils::GetClassFromName("", "ObstacleSpawnInfoNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "ObstacleSpawned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{songTime, obstacleSpawnInfoNetSerializable});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::InvokeObstacleWasSpawnedCallback
// Il2CppName: InvokeObstacleWasSpawnedCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::StringW, float, float, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable*)>(&GlobalNamespace::GameplayRpcManager::InvokeObstacleWasSpawnedCallback)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* syncTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* songTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* obstacleSpawnInfo = &::il2cpp_utils::GetClassFromName("", "ObstacleSpawnInfoNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "InvokeObstacleWasSpawnedCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, syncTime, songTime, obstacleSpawnInfo});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::SliderSpawned
// Il2CppName: SliderSpawned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(float, ::GlobalNamespace::SliderSpawnInfoNetSerializable*)>(&GlobalNamespace::GameplayRpcManager::SliderSpawned)> {
  static const MethodInfo* get() {
    static auto* songTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* sliderSpawnInfoNetSerializable = &::il2cpp_utils::GetClassFromName("", "SliderSpawnInfoNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "SliderSpawned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{songTime, sliderSpawnInfoNetSerializable});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::InvokeSliderWasSpawnedCallback
// Il2CppName: InvokeSliderWasSpawnedCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::StringW, float, float, ::GlobalNamespace::SliderSpawnInfoNetSerializable*)>(&GlobalNamespace::GameplayRpcManager::InvokeSliderWasSpawnedCallback)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* syncTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* songTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* sliderSpawnInfo = &::il2cpp_utils::GetClassFromName("", "SliderSpawnInfoNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "InvokeSliderWasSpawnedCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, syncTime, songTime, sliderSpawnInfo});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::NoteCut
// Il2CppName: NoteCut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(float, ::GlobalNamespace::NoteCutInfoNetSerializable*)>(&GlobalNamespace::GameplayRpcManager::NoteCut)> {
  static const MethodInfo* get() {
    static auto* songTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* noteCutInfoNetSerializable = &::il2cpp_utils::GetClassFromName("", "NoteCutInfoNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "NoteCut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{songTime, noteCutInfoNetSerializable});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::InvokeNoteWasCutCallback
// Il2CppName: InvokeNoteWasCutCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::StringW, float, float, ::GlobalNamespace::NoteCutInfoNetSerializable*)>(&GlobalNamespace::GameplayRpcManager::InvokeNoteWasCutCallback)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* syncTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* songTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* noteCutInfo = &::il2cpp_utils::GetClassFromName("", "NoteCutInfoNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "InvokeNoteWasCutCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, syncTime, songTime, noteCutInfo});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::NoteMissed
// Il2CppName: NoteMissed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(float, ::GlobalNamespace::NoteMissInfoNetSerializable*)>(&GlobalNamespace::GameplayRpcManager::NoteMissed)> {
  static const MethodInfo* get() {
    static auto* songTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* noteMissInfoNetSerializable = &::il2cpp_utils::GetClassFromName("", "NoteMissInfoNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "NoteMissed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{songTime, noteMissInfoNetSerializable});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::InvokeNoteWasMissedCallback
// Il2CppName: InvokeNoteWasMissedCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::StringW, float, float, ::GlobalNamespace::NoteMissInfoNetSerializable*)>(&GlobalNamespace::GameplayRpcManager::InvokeNoteWasMissedCallback)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* syncTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* songTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* noteMissInfo = &::il2cpp_utils::GetClassFromName("", "NoteMissInfoNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "InvokeNoteWasMissedCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, syncTime, songTime, noteMissInfo});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::LevelFinished
// Il2CppName: LevelFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::GlobalNamespace::MultiplayerLevelCompletionResults*)>(&GlobalNamespace::GameplayRpcManager::LevelFinished)> {
  static const MethodInfo* get() {
    static auto* results = &::il2cpp_utils::GetClassFromName("", "MultiplayerLevelCompletionResults")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "LevelFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{results});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::InvokeLevelFinishedCallback
// Il2CppName: InvokeLevelFinishedCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::StringW, ::GlobalNamespace::MultiplayerLevelCompletionResults*)>(&GlobalNamespace::GameplayRpcManager::InvokeLevelFinishedCallback)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* results = &::il2cpp_utils::GetClassFromName("", "MultiplayerLevelCompletionResults")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "InvokeLevelFinishedCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, results});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::ReturnToMenu
// Il2CppName: ReturnToMenu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)()>(&GlobalNamespace::GameplayRpcManager::ReturnToMenu)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "ReturnToMenu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::InvokeReturnToMenuCallback
// Il2CppName: InvokeReturnToMenuCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::StringW)>(&GlobalNamespace::GameplayRpcManager::InvokeReturnToMenuCallback)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "InvokeReturnToMenuCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::RequestReturnToMenu
// Il2CppName: RequestReturnToMenu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)()>(&GlobalNamespace::GameplayRpcManager::RequestReturnToMenu)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "RequestReturnToMenu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameplayRpcManager::InvokeRequestReturnToMenuCallback
// Il2CppName: InvokeRequestReturnToMenuCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GameplayRpcManager::*)(::StringW)>(&GlobalNamespace::GameplayRpcManager::InvokeRequestReturnToMenuCallback)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameplayRpcManager*), "InvokeRequestReturnToMenuCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
