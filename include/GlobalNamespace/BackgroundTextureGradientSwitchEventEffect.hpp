// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: BeatmapEventType
#include "GlobalNamespace/BeatmapEventType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BloomPrePassBackgroundTextureGradient
  class BloomPrePassBackgroundTextureGradient;
  // Forward declaring type: IBeatmapObjectCallbackController
  class IBeatmapObjectCallbackController;
  // Forward declaring type: BeatmapEventData
  class BeatmapEventData;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: BackgroundTextureGradientSwitchEventEffect
  // [TokenAttribute] Offset: FFFFFFFF
  class BackgroundTextureGradientSwitchEventEffect : public UnityEngine::MonoBehaviour {
    public:
    // private BeatmapEventType _colorBoostEvent
    // Size: 0x4
    // Offset: 0x18
    GlobalNamespace::BeatmapEventType colorBoostEvent;
    // Field size check
    static_assert(sizeof(GlobalNamespace::BeatmapEventType) == 0x4);
    // Padding between fields: colorBoostEvent and: defaultTextureGradient
    char __padding0[0x4] = {};
    // private BloomPrePassBackgroundTextureGradient _defaultTextureGradient
    // Size: 0x8
    // Offset: 0x20
    GlobalNamespace::BloomPrePassBackgroundTextureGradient* defaultTextureGradient;
    // Field size check
    static_assert(sizeof(GlobalNamespace::BloomPrePassBackgroundTextureGradient*) == 0x8);
    // private BloomPrePassBackgroundTextureGradient _boostTextureGradient
    // Size: 0x8
    // Offset: 0x28
    GlobalNamespace::BloomPrePassBackgroundTextureGradient* boostTextureGradient;
    // Field size check
    static_assert(sizeof(GlobalNamespace::BloomPrePassBackgroundTextureGradient*) == 0x8);
    // [InjectAttribute] Offset: 0xF06308
    // private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
    // Size: 0x8
    // Offset: 0x30
    GlobalNamespace::IBeatmapObjectCallbackController* beatmapObjectCallbackController;
    // Field size check
    static_assert(sizeof(GlobalNamespace::IBeatmapObjectCallbackController*) == 0x8);
    // Creating value type constructor for type: BackgroundTextureGradientSwitchEventEffect
    BackgroundTextureGradientSwitchEventEffect(GlobalNamespace::BeatmapEventType colorBoostEvent_ = {}, GlobalNamespace::BloomPrePassBackgroundTextureGradient* defaultTextureGradient_ = {}, GlobalNamespace::BloomPrePassBackgroundTextureGradient* boostTextureGradient_ = {}, GlobalNamespace::IBeatmapObjectCallbackController* beatmapObjectCallbackController_ = {}) noexcept : colorBoostEvent{colorBoostEvent_}, defaultTextureGradient{defaultTextureGradient_}, boostTextureGradient{boostTextureGradient_}, beatmapObjectCallbackController{beatmapObjectCallbackController_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // Get instance field reference: private BeatmapEventType _colorBoostEvent
    GlobalNamespace::BeatmapEventType& dyn__colorBoostEvent();
    // Get instance field reference: private BloomPrePassBackgroundTextureGradient _defaultTextureGradient
    GlobalNamespace::BloomPrePassBackgroundTextureGradient*& dyn__defaultTextureGradient();
    // Get instance field reference: private BloomPrePassBackgroundTextureGradient _boostTextureGradient
    GlobalNamespace::BloomPrePassBackgroundTextureGradient*& dyn__boostTextureGradient();
    // Get instance field reference: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
    GlobalNamespace::IBeatmapObjectCallbackController*& dyn__beatmapObjectCallbackController();
    // protected System.Void Start()
    // Offset: 0x1269084
    void Start();
    // private System.Void OnDestroy()
    // Offset: 0x1269174
    void OnDestroy();
    // private System.Void HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(BeatmapEventData beatmapEventData)
    // Offset: 0x1269274
    void HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData);
    // public System.Void .ctor()
    // Offset: 0x12692E4
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BackgroundTextureGradientSwitchEventEffect* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BackgroundTextureGradientSwitchEventEffect*, creationType>()));
    }
  }; // BackgroundTextureGradientSwitchEventEffect
  #pragma pack(pop)
  static check_size<sizeof(BackgroundTextureGradientSwitchEventEffect), 48 + sizeof(GlobalNamespace::IBeatmapObjectCallbackController*)> __GlobalNamespace_BackgroundTextureGradientSwitchEventEffectSizeCheck;
  static_assert(sizeof(BackgroundTextureGradientSwitchEventEffect) == 0x38);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BackgroundTextureGradientSwitchEventEffect*, "", "BackgroundTextureGradientSwitchEventEffect");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::*)()>(&GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BackgroundTextureGradientSwitchEventEffect*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::*)()>(&GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BackgroundTextureGradientSwitchEventEffect*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
// Il2CppName: HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::*)(GlobalNamespace::BeatmapEventData*)>(&GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger)> {
  static const MethodInfo* get() {
    static auto* beatmapEventData = &::il2cpp_utils::GetClassFromName("", "BeatmapEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BackgroundTextureGradientSwitchEventEffect*), "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{beatmapEventData});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
