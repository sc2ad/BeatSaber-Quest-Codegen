// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: LeaderboardHelper
#include "GlobalNamespace/LeaderboardHelper.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Runtime.CompilerServices.IAsyncStateMachine
#include "System/Runtime/CompilerServices/IAsyncStateMachine.hpp"
// Including type: System.Runtime.CompilerServices.AsyncVoidMethodBuilder
#include "System/Runtime/CompilerServices/AsyncVoidMethodBuilder.hpp"
// Including type: System.Runtime.CompilerServices.TaskAwaiter`1
#include "System/Runtime/CompilerServices/TaskAwaiter_1.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net::Http
namespace System::Net::Http {
  // Forward declaring type: HttpClient
  class HttpClient;
  // Forward declaring type: HttpRequestMessage
  class HttpRequestMessage;
  // Forward declaring type: HttpResponseMessage
  class HttpResponseMessage;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2, "", "LeaderboardHelper/<CreateOculusLeaderboard>d__2");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: LeaderboardHelper/<CreateOculusLeaderboard>d__2
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  struct LeaderboardHelper::$CreateOculusLeaderboard$d__2/*, public ::System::ValueType, public ::System::Runtime::CompilerServices::IAsyncStateMachine*/ {
    public:
    public:
    // public System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x0
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
    // Size: 0x20
    // Offset: 0x8
    ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder $$t__builder;
    // Field size check
    static_assert(sizeof(::System::Runtime::CompilerServices::AsyncVoidMethodBuilder) == 0x20);
    // public System.String leaderboardID
    // Size: 0x8
    // Offset: 0x28
    ::StringW leaderboardID;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String appToken
    // Size: 0x8
    // Offset: 0x30
    ::StringW appToken;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Net.Http.HttpClient <httpClient>5__2
    // Size: 0x8
    // Offset: 0x38
    ::System::Net::Http::HttpClient* $httpClient$5__2;
    // Field size check
    static_assert(sizeof(::System::Net::Http::HttpClient*) == 0x8);
    // private System.Net.Http.HttpRequestMessage <request>5__3
    // Size: 0x8
    // Offset: 0x40
    ::System::Net::Http::HttpRequestMessage* $request$5__3;
    // Field size check
    static_assert(sizeof(::System::Net::Http::HttpRequestMessage*) == 0x8);
    // private System.Collections.Generic.List`1<System.String> <contentList>5__4
    // Size: 0x8
    // Offset: 0x48
    ::System::Collections::Generic::List_1<::StringW>* $contentList$5__4;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // private System.Runtime.CompilerServices.TaskAwaiter`1<System.Net.Http.HttpResponseMessage> <>u__1
    // Size: 0xFFFFFFFF
    // Offset: 0x50
    ::System::Runtime::CompilerServices::TaskAwaiter_1<::System::Net::Http::HttpResponseMessage*> $$u__1;
    public:
    // Creating value type constructor for type: $CreateOculusLeaderboard$d__2
    constexpr $CreateOculusLeaderboard$d__2(int $$1__state_ = {}, ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder $$t__builder_ = {}, ::StringW leaderboardID_ = {}, ::StringW appToken_ = {}, ::System::Net::Http::HttpClient* $httpClient$5__2_ = {}, ::System::Net::Http::HttpRequestMessage* $request$5__3_ = {}, ::System::Collections::Generic::List_1<::StringW>* $contentList$5__4_ = {}, ::System::Runtime::CompilerServices::TaskAwaiter_1<::System::Net::Http::HttpResponseMessage*> $$u__1_ = {}) noexcept : $$1__state{$$1__state_}, $$t__builder{$$t__builder_}, leaderboardID{leaderboardID_}, appToken{appToken_}, $httpClient$5__2{$httpClient$5__2_}, $request$5__3{$request$5__3_}, $contentList$5__4{$contentList$5__4_}, $$u__1{$$u__1_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: i_ValueType
    inline ::System::ValueType* i_ValueType() noexcept {
      return reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::Runtime::CompilerServices::IAsyncStateMachine
    operator ::System::Runtime::CompilerServices::IAsyncStateMachine() noexcept {
      return *reinterpret_cast<::System::Runtime::CompilerServices::IAsyncStateMachine*>(this);
    }
    // Creating interface conversion operator: i_IAsyncStateMachine
    inline ::System::Runtime::CompilerServices::IAsyncStateMachine* i_IAsyncStateMachine() noexcept {
      return reinterpret_cast<::System::Runtime::CompilerServices::IAsyncStateMachine*>(this);
    }
    // Get instance field reference: public System.Int32 <>1__state
    [[deprecated("Use field access instead!")]] int& dyn_$$1__state();
    // Get instance field reference: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& dyn_$$t__builder();
    // Get instance field reference: public System.String leaderboardID
    [[deprecated("Use field access instead!")]] ::StringW& dyn_leaderboardID();
    // Get instance field reference: public System.String appToken
    [[deprecated("Use field access instead!")]] ::StringW& dyn_appToken();
    // Get instance field reference: private System.Net.Http.HttpClient <httpClient>5__2
    [[deprecated("Use field access instead!")]] ::System::Net::Http::HttpClient*& dyn_$httpClient$5__2();
    // Get instance field reference: private System.Net.Http.HttpRequestMessage <request>5__3
    [[deprecated("Use field access instead!")]] ::System::Net::Http::HttpRequestMessage*& dyn_$request$5__3();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> <contentList>5__4
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_$contentList$5__4();
    // Get instance field reference: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Net.Http.HttpResponseMessage> <>u__1
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::System::Net::Http::HttpResponseMessage*>& dyn_$$u__1();
    // private System.Void MoveNext()
    // Offset: 0x13A1400
    void MoveNext();
    // private System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)
    // Offset: 0x13A1C00
    void SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine);
  }; // LeaderboardHelper/<CreateOculusLeaderboard>d__2
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::*)()>(&GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::*)(::System::Runtime::CompilerServices::IAsyncStateMachine*)>(&GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::SetStateMachine)> {
  static const MethodInfo* get() {
    static auto* stateMachine = &::il2cpp_utils::GetClassFromName("System.Runtime.CompilerServices", "IAsyncStateMachine")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateMachine});
  }
};
