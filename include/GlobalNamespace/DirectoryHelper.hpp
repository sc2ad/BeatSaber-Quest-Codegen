// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: DirectoryHelper
  class DirectoryHelper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::DirectoryHelper);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::DirectoryHelper*, "", "DirectoryHelper");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: DirectoryHelper
  // [TokenAttribute] Offset: FFFFFFFF
  class DirectoryHelper : public ::Il2CppObject {
    public:
    // static public System.Boolean IsDirectoryWritable(System.String path)
    // Offset: 0x1493584
    static bool IsDirectoryWritable(::StringW path);
  }; // DirectoryHelper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::DirectoryHelper::IsDirectoryWritable
// Il2CppName: IsDirectoryWritable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&GlobalNamespace::DirectoryHelper::IsDirectoryWritable)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::DirectoryHelper*), "IsDirectoryWritable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
