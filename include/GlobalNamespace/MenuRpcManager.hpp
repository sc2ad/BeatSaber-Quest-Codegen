// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
  // Forward declaring type: Action`4<T1, T2, T3, T4>
  template<typename T1, typename T2, typename T3, typename T4>
  class Action_4;
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IMultiplayerSessionManager
  class IMultiplayerSessionManager;
  // Forward declaring type: RpcHandler`1<TType>
  template<typename TType>
  class RpcHandler_1;
  // Forward declaring type: PlayersLobbyPermissionConfigurationNetSerializable
  class PlayersLobbyPermissionConfigurationNetSerializable;
  // Forward declaring type: PlayersMissingEntitlementsNetSerializable
  class PlayersMissingEntitlementsNetSerializable;
  // Forward declaring type: BeatmapIdentifierNetSerializable
  class BeatmapIdentifierNetSerializable;
  // Forward declaring type: GameplayModifiers
  class GameplayModifiers;
  // Forward declaring type: IConnectedPlayer
  class IConnectedPlayer;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: MenuRpcManager
  class MenuRpcManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::MenuRpcManager);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::MenuRpcManager*, "", "MenuRpcManager");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x160
  #pragma pack(push, 1)
  // Autogenerated type: MenuRpcManager
  // [TokenAttribute] Offset: FFFFFFFF
  class MenuRpcManager : public ::Il2CppObject/*, public ::GlobalNamespace::IMenuRpcManager*/ {
    public:
    // Nested type: ::GlobalNamespace::MenuRpcManager::RpcType
    struct RpcType;
    // Nested type: ::GlobalNamespace::MenuRpcManager::GetPlayersPermissionConfigurationRpc
    class GetPlayersPermissionConfigurationRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::SetPlayersPermissionConfigurationRpc
    class SetPlayersPermissionConfigurationRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::SetPlayersMissingEntitlementsToLevelRpc
    class SetPlayersMissingEntitlementsToLevelRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::GetIsEntitledToLevelRpc
    class GetIsEntitledToLevelRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::SetIsEntitledToLevelRpc
    class SetIsEntitledToLevelRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::InvalidateLevelEntitlementStatusesRpc
    class InvalidateLevelEntitlementStatusesRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::SelectLevelPackRpc
    class SelectLevelPackRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::SetSelectedBeatmapRpc
    class SetSelectedBeatmapRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::ClearSelectedBeatmapRpc
    class ClearSelectedBeatmapRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::GetSelectedBeatmapRpc
    class GetSelectedBeatmapRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::RecommendBeatmapRpc
    class RecommendBeatmapRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::ClearRecommendedBeatmapRpc
    class ClearRecommendedBeatmapRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::GetRecommendedBeatmapRpc
    class GetRecommendedBeatmapRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::SetSelectedGameplayModifiersRpc
    class SetSelectedGameplayModifiersRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::ClearSelectedGameplayModifiersRpc
    class ClearSelectedGameplayModifiersRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::GetSelectedGameplayModifiersRpc
    class GetSelectedGameplayModifiersRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::RecommendGameplayModifiersRpc
    class RecommendGameplayModifiersRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::ClearRecommendedGameplayModifiersRpc
    class ClearRecommendedGameplayModifiersRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::GetRecommendedGameplayModifiersRpc
    class GetRecommendedGameplayModifiersRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::GetIsStartButtonEnabledRpc
    class GetIsStartButtonEnabledRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::SetIsStartButtonEnabledRpc
    class SetIsStartButtonEnabledRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::LevelLoadErrorRpc
    class LevelLoadErrorRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::LevelLoadSuccessRpc
    class LevelLoadSuccessRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::StartLevelRpc
    class StartLevelRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::GetStartedLevelRpc
    class GetStartedLevelRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::GetMultiplayerGameStateRpc
    class GetMultiplayerGameStateRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::SetMultiplayerGameStateRpc
    class SetMultiplayerGameStateRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::CancelCountdownRpc
    class CancelCountdownRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::SetCountdownEndTimeRpc
    class SetCountdownEndTimeRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::GetCountdownEndTimeRpc
    class GetCountdownEndTimeRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::CancelLevelStartRpc
    class CancelLevelStartRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::GetIsReadyRpc
    class GetIsReadyRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::SetIsReadyRpc
    class SetIsReadyRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::SetStartGameTimeRpc
    class SetStartGameTimeRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::CancelStartGameTimeRpc
    class CancelStartGameTimeRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::GetIsInLobbyRpc
    class GetIsInLobbyRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::SetIsInLobbyRpc
    class SetIsInLobbyRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::GetOwnedSongPacksRpc
    class GetOwnedSongPacksRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::SetOwnedSongPacksRpc
    class SetOwnedSongPacksRpc;
    // Nested type: ::GlobalNamespace::MenuRpcManager::RequestKickPlayerRpc
    class RequestKickPlayerRpc;
    // Size: 0x1
    #pragma pack(push, 1)
    // Autogenerated type: MenuRpcManager/RpcType
    // [TokenAttribute] Offset: FFFFFFFF
    struct RpcType/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Byte value__
      // Size: 0x1
      // Offset: 0x0
      uint8_t value;
      // Field size check
      static_assert(sizeof(uint8_t) == 0x1);
      public:
      // Creating value type constructor for type: RpcType
      constexpr RpcType(uint8_t value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator uint8_t
      constexpr operator uint8_t() const noexcept {
        return value;
      }
      // static field const value: static public MenuRpcManager/RpcType SetPlayersMissingEntitlementsToLevel
      static constexpr const uint8_t SetPlayersMissingEntitlementsToLevel = 0u;
      // Get static field: static public MenuRpcManager/RpcType SetPlayersMissingEntitlementsToLevel
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_SetPlayersMissingEntitlementsToLevel();
      // Set static field: static public MenuRpcManager/RpcType SetPlayersMissingEntitlementsToLevel
      static void _set_SetPlayersMissingEntitlementsToLevel(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetIsEntitledToLevel
      static constexpr const uint8_t GetIsEntitledToLevel = 1u;
      // Get static field: static public MenuRpcManager/RpcType GetIsEntitledToLevel
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_GetIsEntitledToLevel();
      // Set static field: static public MenuRpcManager/RpcType GetIsEntitledToLevel
      static void _set_GetIsEntitledToLevel(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetIsEntitledToLevel
      static constexpr const uint8_t SetIsEntitledToLevel = 2u;
      // Get static field: static public MenuRpcManager/RpcType SetIsEntitledToLevel
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_SetIsEntitledToLevel();
      // Set static field: static public MenuRpcManager/RpcType SetIsEntitledToLevel
      static void _set_SetIsEntitledToLevel(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType InvalidateLevelEntitlementStatuses
      static constexpr const uint8_t InvalidateLevelEntitlementStatuses = 3u;
      // Get static field: static public MenuRpcManager/RpcType InvalidateLevelEntitlementStatuses
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_InvalidateLevelEntitlementStatuses();
      // Set static field: static public MenuRpcManager/RpcType InvalidateLevelEntitlementStatuses
      static void _set_InvalidateLevelEntitlementStatuses(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SelectLevelPack
      static constexpr const uint8_t SelectLevelPack = 4u;
      // Get static field: static public MenuRpcManager/RpcType SelectLevelPack
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_SelectLevelPack();
      // Set static field: static public MenuRpcManager/RpcType SelectLevelPack
      static void _set_SelectLevelPack(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetSelectedBeatmap
      static constexpr const uint8_t SetSelectedBeatmap = 5u;
      // Get static field: static public MenuRpcManager/RpcType SetSelectedBeatmap
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_SetSelectedBeatmap();
      // Set static field: static public MenuRpcManager/RpcType SetSelectedBeatmap
      static void _set_SetSelectedBeatmap(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetSelectedBeatmap
      static constexpr const uint8_t GetSelectedBeatmap = 6u;
      // Get static field: static public MenuRpcManager/RpcType GetSelectedBeatmap
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_GetSelectedBeatmap();
      // Set static field: static public MenuRpcManager/RpcType GetSelectedBeatmap
      static void _set_GetSelectedBeatmap(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType RecommendBeatmap
      static constexpr const uint8_t RecommendBeatmap = 7u;
      // Get static field: static public MenuRpcManager/RpcType RecommendBeatmap
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_RecommendBeatmap();
      // Set static field: static public MenuRpcManager/RpcType RecommendBeatmap
      static void _set_RecommendBeatmap(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType ClearRecommendedBeatmap
      static constexpr const uint8_t ClearRecommendedBeatmap = 8u;
      // Get static field: static public MenuRpcManager/RpcType ClearRecommendedBeatmap
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_ClearRecommendedBeatmap();
      // Set static field: static public MenuRpcManager/RpcType ClearRecommendedBeatmap
      static void _set_ClearRecommendedBeatmap(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetRecommendedBeatmap
      static constexpr const uint8_t GetRecommendedBeatmap = 9u;
      // Get static field: static public MenuRpcManager/RpcType GetRecommendedBeatmap
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_GetRecommendedBeatmap();
      // Set static field: static public MenuRpcManager/RpcType GetRecommendedBeatmap
      static void _set_GetRecommendedBeatmap(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetSelectedGameplayModifiers
      static constexpr const uint8_t SetSelectedGameplayModifiers = 10u;
      // Get static field: static public MenuRpcManager/RpcType SetSelectedGameplayModifiers
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_SetSelectedGameplayModifiers();
      // Set static field: static public MenuRpcManager/RpcType SetSelectedGameplayModifiers
      static void _set_SetSelectedGameplayModifiers(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetSelectedGameplayModifiers
      static constexpr const uint8_t GetSelectedGameplayModifiers = 11u;
      // Get static field: static public MenuRpcManager/RpcType GetSelectedGameplayModifiers
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_GetSelectedGameplayModifiers();
      // Set static field: static public MenuRpcManager/RpcType GetSelectedGameplayModifiers
      static void _set_GetSelectedGameplayModifiers(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType RecommendGameplayModifiers
      static constexpr const uint8_t RecommendGameplayModifiers = 12u;
      // Get static field: static public MenuRpcManager/RpcType RecommendGameplayModifiers
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_RecommendGameplayModifiers();
      // Set static field: static public MenuRpcManager/RpcType RecommendGameplayModifiers
      static void _set_RecommendGameplayModifiers(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType ClearRecommendedGameplayModifiers
      static constexpr const uint8_t ClearRecommendedGameplayModifiers = 13u;
      // Get static field: static public MenuRpcManager/RpcType ClearRecommendedGameplayModifiers
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_ClearRecommendedGameplayModifiers();
      // Set static field: static public MenuRpcManager/RpcType ClearRecommendedGameplayModifiers
      static void _set_ClearRecommendedGameplayModifiers(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetRecommendedGameplayModifiers
      static constexpr const uint8_t GetRecommendedGameplayModifiers = 14u;
      // Get static field: static public MenuRpcManager/RpcType GetRecommendedGameplayModifiers
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_GetRecommendedGameplayModifiers();
      // Set static field: static public MenuRpcManager/RpcType GetRecommendedGameplayModifiers
      static void _set_GetRecommendedGameplayModifiers(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType LevelLoadError
      static constexpr const uint8_t LevelLoadError = 15u;
      // Get static field: static public MenuRpcManager/RpcType LevelLoadError
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_LevelLoadError();
      // Set static field: static public MenuRpcManager/RpcType LevelLoadError
      static void _set_LevelLoadError(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType LevelLoadSuccess
      static constexpr const uint8_t LevelLoadSuccess = 16u;
      // Get static field: static public MenuRpcManager/RpcType LevelLoadSuccess
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_LevelLoadSuccess();
      // Set static field: static public MenuRpcManager/RpcType LevelLoadSuccess
      static void _set_LevelLoadSuccess(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType StartLevel
      static constexpr const uint8_t StartLevel = 17u;
      // Get static field: static public MenuRpcManager/RpcType StartLevel
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_StartLevel();
      // Set static field: static public MenuRpcManager/RpcType StartLevel
      static void _set_StartLevel(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetStartedLevel
      static constexpr const uint8_t GetStartedLevel = 18u;
      // Get static field: static public MenuRpcManager/RpcType GetStartedLevel
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_GetStartedLevel();
      // Set static field: static public MenuRpcManager/RpcType GetStartedLevel
      static void _set_GetStartedLevel(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType CancelLevelStart
      static constexpr const uint8_t CancelLevelStart = 19u;
      // Get static field: static public MenuRpcManager/RpcType CancelLevelStart
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_CancelLevelStart();
      // Set static field: static public MenuRpcManager/RpcType CancelLevelStart
      static void _set_CancelLevelStart(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetMultiplayerGameState
      static constexpr const uint8_t GetMultiplayerGameState = 20u;
      // Get static field: static public MenuRpcManager/RpcType GetMultiplayerGameState
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_GetMultiplayerGameState();
      // Set static field: static public MenuRpcManager/RpcType GetMultiplayerGameState
      static void _set_GetMultiplayerGameState(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetMultiplayerGameState
      static constexpr const uint8_t SetMultiplayerGameState = 21u;
      // Get static field: static public MenuRpcManager/RpcType SetMultiplayerGameState
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_SetMultiplayerGameState();
      // Set static field: static public MenuRpcManager/RpcType SetMultiplayerGameState
      static void _set_SetMultiplayerGameState(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetIsReady
      static constexpr const uint8_t GetIsReady = 22u;
      // Get static field: static public MenuRpcManager/RpcType GetIsReady
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_GetIsReady();
      // Set static field: static public MenuRpcManager/RpcType GetIsReady
      static void _set_GetIsReady(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetIsReady
      static constexpr const uint8_t SetIsReady = 23u;
      // Get static field: static public MenuRpcManager/RpcType SetIsReady
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_SetIsReady();
      // Set static field: static public MenuRpcManager/RpcType SetIsReady
      static void _set_SetIsReady(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetStartGameTime
      static constexpr const uint8_t SetStartGameTime = 24u;
      // Get static field: static public MenuRpcManager/RpcType SetStartGameTime
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_SetStartGameTime();
      // Set static field: static public MenuRpcManager/RpcType SetStartGameTime
      static void _set_SetStartGameTime(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType CancelStartGameTime
      static constexpr const uint8_t CancelStartGameTime = 25u;
      // Get static field: static public MenuRpcManager/RpcType CancelStartGameTime
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_CancelStartGameTime();
      // Set static field: static public MenuRpcManager/RpcType CancelStartGameTime
      static void _set_CancelStartGameTime(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetIsInLobby
      static constexpr const uint8_t GetIsInLobby = 26u;
      // Get static field: static public MenuRpcManager/RpcType GetIsInLobby
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_GetIsInLobby();
      // Set static field: static public MenuRpcManager/RpcType GetIsInLobby
      static void _set_GetIsInLobby(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetIsInLobby
      static constexpr const uint8_t SetIsInLobby = 27u;
      // Get static field: static public MenuRpcManager/RpcType SetIsInLobby
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_SetIsInLobby();
      // Set static field: static public MenuRpcManager/RpcType SetIsInLobby
      static void _set_SetIsInLobby(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetCountdownEndTime
      static constexpr const uint8_t GetCountdownEndTime = 28u;
      // Get static field: static public MenuRpcManager/RpcType GetCountdownEndTime
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_GetCountdownEndTime();
      // Set static field: static public MenuRpcManager/RpcType GetCountdownEndTime
      static void _set_GetCountdownEndTime(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetCountdownEndTime
      static constexpr const uint8_t SetCountdownEndTime = 29u;
      // Get static field: static public MenuRpcManager/RpcType SetCountdownEndTime
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_SetCountdownEndTime();
      // Set static field: static public MenuRpcManager/RpcType SetCountdownEndTime
      static void _set_SetCountdownEndTime(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType CancelCountdown
      static constexpr const uint8_t CancelCountdown = 30u;
      // Get static field: static public MenuRpcManager/RpcType CancelCountdown
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_CancelCountdown();
      // Set static field: static public MenuRpcManager/RpcType CancelCountdown
      static void _set_CancelCountdown(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetOwnedSongPacks
      static constexpr const uint8_t GetOwnedSongPacks = 31u;
      // Get static field: static public MenuRpcManager/RpcType GetOwnedSongPacks
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_GetOwnedSongPacks();
      // Set static field: static public MenuRpcManager/RpcType GetOwnedSongPacks
      static void _set_GetOwnedSongPacks(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetOwnedSongPacks
      static constexpr const uint8_t SetOwnedSongPacks = 32u;
      // Get static field: static public MenuRpcManager/RpcType SetOwnedSongPacks
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_SetOwnedSongPacks();
      // Set static field: static public MenuRpcManager/RpcType SetOwnedSongPacks
      static void _set_SetOwnedSongPacks(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType RequestKickPlayer
      static constexpr const uint8_t RequestKickPlayer = 33u;
      // Get static field: static public MenuRpcManager/RpcType RequestKickPlayer
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_RequestKickPlayer();
      // Set static field: static public MenuRpcManager/RpcType RequestKickPlayer
      static void _set_RequestKickPlayer(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetPermissionConfiguration
      static constexpr const uint8_t GetPermissionConfiguration = 34u;
      // Get static field: static public MenuRpcManager/RpcType GetPermissionConfiguration
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_GetPermissionConfiguration();
      // Set static field: static public MenuRpcManager/RpcType GetPermissionConfiguration
      static void _set_GetPermissionConfiguration(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetPermissionConfiguration
      static constexpr const uint8_t SetPermissionConfiguration = 35u;
      // Get static field: static public MenuRpcManager/RpcType SetPermissionConfiguration
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_SetPermissionConfiguration();
      // Set static field: static public MenuRpcManager/RpcType SetPermissionConfiguration
      static void _set_SetPermissionConfiguration(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetIsStartButtonEnabled
      static constexpr const uint8_t GetIsStartButtonEnabled = 36u;
      // Get static field: static public MenuRpcManager/RpcType GetIsStartButtonEnabled
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_GetIsStartButtonEnabled();
      // Set static field: static public MenuRpcManager/RpcType GetIsStartButtonEnabled
      static void _set_GetIsStartButtonEnabled(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetIsStartButtonEnabled
      static constexpr const uint8_t SetIsStartButtonEnabled = 37u;
      // Get static field: static public MenuRpcManager/RpcType SetIsStartButtonEnabled
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_SetIsStartButtonEnabled();
      // Set static field: static public MenuRpcManager/RpcType SetIsStartButtonEnabled
      static void _set_SetIsStartButtonEnabled(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType ClearSelectedBeatmap
      static constexpr const uint8_t ClearSelectedBeatmap = 38u;
      // Get static field: static public MenuRpcManager/RpcType ClearSelectedBeatmap
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_ClearSelectedBeatmap();
      // Set static field: static public MenuRpcManager/RpcType ClearSelectedBeatmap
      static void _set_ClearSelectedBeatmap(::GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType ClearSelectedGameplayModifiers
      static constexpr const uint8_t ClearSelectedGameplayModifiers = 39u;
      // Get static field: static public MenuRpcManager/RpcType ClearSelectedGameplayModifiers
      static ::GlobalNamespace::MenuRpcManager::RpcType _get_ClearSelectedGameplayModifiers();
      // Set static field: static public MenuRpcManager/RpcType ClearSelectedGameplayModifiers
      static void _set_ClearSelectedGameplayModifiers(::GlobalNamespace::MenuRpcManager::RpcType value);
      // Get instance field reference: public System.Byte value__
      [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
    }; // MenuRpcManager/RpcType
    #pragma pack(pop)
    static check_size<sizeof(MenuRpcManager::RpcType), 0 + sizeof(uint8_t)> __GlobalNamespace_MenuRpcManager_RpcTypeSizeCheck;
    static_assert(sizeof(MenuRpcManager::RpcType) == 0x1);
    public:
    // private readonly IMultiplayerSessionManager _multiplayerSessionManager
    // Size: 0x8
    // Offset: 0x10
    ::GlobalNamespace::IMultiplayerSessionManager* multiplayerSessionManager;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::IMultiplayerSessionManager*) == 0x8);
    // private readonly RpcHandler`1<MenuRpcManager/RpcType> _rpcHandler
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::RpcHandler_1<::GlobalNamespace::MenuRpcManager::RpcType>* rpcHandler;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::RpcHandler_1<::GlobalNamespace::MenuRpcManager::RpcType>*) == 0x8);
    // private System.Action`1<System.String> getPlayersPermissionConfigurationEvent
    // Size: 0x8
    // Offset: 0x20
    ::System::Action_1<::StringW>* getPlayersPermissionConfigurationEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`2<System.String,PlayersLobbyPermissionConfigurationNetSerializable> setPlayersPermissionConfigurationEvent
    // Size: 0x8
    // Offset: 0x28
    ::System::Action_2<::StringW, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* setPlayersPermissionConfigurationEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>*) == 0x8);
    // private System.Action`2<System.String,PlayersMissingEntitlementsNetSerializable> setPlayersMissingEntitlementsToLevelEvent
    // Size: 0x8
    // Offset: 0x30
    ::System::Action_2<::StringW, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* setPlayersMissingEntitlementsToLevelEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>*) == 0x8);
    // private System.Action`2<System.String,System.String> getIsEntitledToLevelEvent
    // Size: 0x8
    // Offset: 0x38
    ::System::Action_2<::StringW, ::StringW>* getIsEntitledToLevelEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, ::StringW>*) == 0x8);
    // private System.Action`3<System.String,System.String,EntitlementsStatus> setIsEntitledToLevelEvent
    // Size: 0x8
    // Offset: 0x40
    ::System::Action_3<::StringW, ::StringW, ::GlobalNamespace::EntitlementsStatus>* setIsEntitledToLevelEvent;
    // Field size check
    static_assert(sizeof(::System::Action_3<::StringW, ::StringW, ::GlobalNamespace::EntitlementsStatus>*) == 0x8);
    // private System.Action`1<System.String> levelEntitlementStatusesInvalidatedEvent
    // Size: 0x8
    // Offset: 0x48
    ::System::Action_1<::StringW>* levelEntitlementStatusesInvalidatedEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`2<System.String,System.String> selectedLevelPackEvent
    // Size: 0x8
    // Offset: 0x50
    ::System::Action_2<::StringW, ::StringW>* selectedLevelPackEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, ::StringW>*) == 0x8);
    // private System.Action`2<System.String,BeatmapIdentifierNetSerializable> setSelectedBeatmapEvent
    // Size: 0x8
    // Offset: 0x58
    ::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>* setSelectedBeatmapEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>*) == 0x8);
    // private System.Action`1<System.String> clearSelectedBeatmapEvent
    // Size: 0x8
    // Offset: 0x60
    ::System::Action_1<::StringW>* clearSelectedBeatmapEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`1<System.String> getSelectedBeatmapEvent
    // Size: 0x8
    // Offset: 0x68
    ::System::Action_1<::StringW>* getSelectedBeatmapEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`2<System.String,BeatmapIdentifierNetSerializable> recommendBeatmapEvent
    // Size: 0x8
    // Offset: 0x70
    ::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>* recommendBeatmapEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>*) == 0x8);
    // private System.Action`1<System.String> clearRecommendedBeatmapEvent
    // Size: 0x8
    // Offset: 0x78
    ::System::Action_1<::StringW>* clearRecommendedBeatmapEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`1<System.String> getRecommendedBeatmapEvent
    // Size: 0x8
    // Offset: 0x80
    ::System::Action_1<::StringW>* getRecommendedBeatmapEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`2<System.String,GameplayModifiers> setSelectedGameplayModifiersEvent
    // Size: 0x8
    // Offset: 0x88
    ::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>* setSelectedGameplayModifiersEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>*) == 0x8);
    // private System.Action`1<System.String> clearSelectedGameplayModifiersEvent
    // Size: 0x8
    // Offset: 0x90
    ::System::Action_1<::StringW>* clearSelectedGameplayModifiersEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`1<System.String> getSelectedGameplayModifiersEvent
    // Size: 0x8
    // Offset: 0x98
    ::System::Action_1<::StringW>* getSelectedGameplayModifiersEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`2<System.String,GameplayModifiers> recommendGameplayModifiersEvent
    // Size: 0x8
    // Offset: 0xA0
    ::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>* recommendGameplayModifiersEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>*) == 0x8);
    // private System.Action`1<System.String> clearRecommendedGameplayModifiersEvent
    // Size: 0x8
    // Offset: 0xA8
    ::System::Action_1<::StringW>* clearRecommendedGameplayModifiersEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`1<System.String> getRecommendedGameplayModifiersEvent
    // Size: 0x8
    // Offset: 0xB0
    ::System::Action_1<::StringW>* getRecommendedGameplayModifiersEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`1<System.String> getIsStartButtonEnabledEvent
    // Size: 0x8
    // Offset: 0xB8
    ::System::Action_1<::StringW>* getIsStartButtonEnabledEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`2<System.String,CannotStartGameReason> setIsStartButtonEnabledEvent
    // Size: 0x8
    // Offset: 0xC0
    ::System::Action_2<::StringW, ::GlobalNamespace::CannotStartGameReason>* setIsStartButtonEnabledEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, ::GlobalNamespace::CannotStartGameReason>*) == 0x8);
    // private System.Action`2<System.String,System.String> levelLoadErrorEvent
    // Size: 0x8
    // Offset: 0xC8
    ::System::Action_2<::StringW, ::StringW>* levelLoadErrorEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, ::StringW>*) == 0x8);
    // private System.Action`2<System.String,System.String> levelLoadSuccessEvent
    // Size: 0x8
    // Offset: 0xD0
    ::System::Action_2<::StringW, ::StringW>* levelLoadSuccessEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, ::StringW>*) == 0x8);
    // private System.Action`4<System.String,BeatmapIdentifierNetSerializable,GameplayModifiers,System.Single> startedLevelEvent
    // Size: 0x8
    // Offset: 0xD8
    ::System::Action_4<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*, ::GlobalNamespace::GameplayModifiers*, float>* startedLevelEvent;
    // Field size check
    static_assert(sizeof(::System::Action_4<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*, ::GlobalNamespace::GameplayModifiers*, float>*) == 0x8);
    // private System.Action`1<System.String> getStartedLevelEvent
    // Size: 0x8
    // Offset: 0xE0
    ::System::Action_1<::StringW>* getStartedLevelEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`1<System.String> getMultiplayerGameStateEvent
    // Size: 0x8
    // Offset: 0xE8
    ::System::Action_1<::StringW>* getMultiplayerGameStateEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`2<System.String,MultiplayerGameState> setMultiplayerGameStateEvent
    // Size: 0x8
    // Offset: 0xF0
    ::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerGameState>* setMultiplayerGameStateEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerGameState>*) == 0x8);
    // private System.Action`1<System.String> cancelCountdownEvent
    // Size: 0x8
    // Offset: 0xF8
    ::System::Action_1<::StringW>* cancelCountdownEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`2<System.String,System.Single> setCountdownEndTimeEvent
    // Size: 0x8
    // Offset: 0x100
    ::System::Action_2<::StringW, float>* setCountdownEndTimeEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, float>*) == 0x8);
    // private System.Action`1<System.String> getCountdownEndTimeEvent
    // Size: 0x8
    // Offset: 0x108
    ::System::Action_1<::StringW>* getCountdownEndTimeEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`1<System.String> cancelledLevelStartEvent
    // Size: 0x8
    // Offset: 0x110
    ::System::Action_1<::StringW>* cancelledLevelStartEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`1<System.String> getIsReadyEvent
    // Size: 0x8
    // Offset: 0x118
    ::System::Action_1<::StringW>* getIsReadyEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`2<System.String,System.Boolean> setIsReadyEvent
    // Size: 0x8
    // Offset: 0x120
    ::System::Action_2<::StringW, bool>* setIsReadyEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, bool>*) == 0x8);
    // private System.Action`2<System.String,System.Single> setStartGameTimeEvent
    // Size: 0x8
    // Offset: 0x128
    ::System::Action_2<::StringW, float>* setStartGameTimeEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, float>*) == 0x8);
    // private System.Action`1<System.String> cancelStartGameTimeEvent
    // Size: 0x8
    // Offset: 0x130
    ::System::Action_1<::StringW>* cancelStartGameTimeEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`1<System.String> getIsInLobbyEvent
    // Size: 0x8
    // Offset: 0x138
    ::System::Action_1<::StringW>* getIsInLobbyEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`2<System.String,System.Boolean> setIsInLobbyEvent
    // Size: 0x8
    // Offset: 0x140
    ::System::Action_2<::StringW, bool>* setIsInLobbyEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, bool>*) == 0x8);
    // private System.Action`1<System.String> getOwnedSongPacksEvent
    // Size: 0x8
    // Offset: 0x148
    ::System::Action_1<::StringW>* getOwnedSongPacksEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // private System.Action`2<System.String,SongPackMask> setOwnedSongPacksEvent
    // Size: 0x8
    // Offset: 0x150
    ::System::Action_2<::StringW, ::GlobalNamespace::SongPackMask>* setOwnedSongPacksEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, ::GlobalNamespace::SongPackMask>*) == 0x8);
    // private System.Action`2<System.String,System.String> requestedKickPlayerEvent
    // Size: 0x8
    // Offset: 0x158
    ::System::Action_2<::StringW, ::StringW>* requestedKickPlayerEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::StringW, ::StringW>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::IMenuRpcManager
    operator ::GlobalNamespace::IMenuRpcManager() noexcept {
      return *reinterpret_cast<::GlobalNamespace::IMenuRpcManager*>(this);
    }
    // Creating interface conversion operator: i_IMenuRpcManager
    inline ::GlobalNamespace::IMenuRpcManager* i_IMenuRpcManager() noexcept {
      return reinterpret_cast<::GlobalNamespace::IMenuRpcManager*>(this);
    }
    // static field const value: static private System.String kMenuState
    static constexpr const char* kMenuState = "in_menu";
    // Get static field: static private System.String kMenuState
    static ::StringW _get_kMenuState();
    // Set static field: static private System.String kMenuState
    static void _set_kMenuState(::StringW value);
    // Get instance field reference: private readonly IMultiplayerSessionManager _multiplayerSessionManager
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& dyn__multiplayerSessionManager();
    // Get instance field reference: private readonly RpcHandler`1<MenuRpcManager/RpcType> _rpcHandler
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::RpcHandler_1<::GlobalNamespace::MenuRpcManager::RpcType>*& dyn__rpcHandler();
    // Get instance field reference: private System.Action`1<System.String> getPlayersPermissionConfigurationEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_getPlayersPermissionConfigurationEvent();
    // Get instance field reference: private System.Action`2<System.String,PlayersLobbyPermissionConfigurationNetSerializable> setPlayersPermissionConfigurationEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>*& dyn_setPlayersPermissionConfigurationEvent();
    // Get instance field reference: private System.Action`2<System.String,PlayersMissingEntitlementsNetSerializable> setPlayersMissingEntitlementsToLevelEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>*& dyn_setPlayersMissingEntitlementsToLevelEvent();
    // Get instance field reference: private System.Action`2<System.String,System.String> getIsEntitledToLevelEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::StringW>*& dyn_getIsEntitledToLevelEvent();
    // Get instance field reference: private System.Action`3<System.String,System.String,EntitlementsStatus> setIsEntitledToLevelEvent
    [[deprecated("Use field access instead!")]] ::System::Action_3<::StringW, ::StringW, ::GlobalNamespace::EntitlementsStatus>*& dyn_setIsEntitledToLevelEvent();
    // Get instance field reference: private System.Action`1<System.String> levelEntitlementStatusesInvalidatedEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_levelEntitlementStatusesInvalidatedEvent();
    // Get instance field reference: private System.Action`2<System.String,System.String> selectedLevelPackEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::StringW>*& dyn_selectedLevelPackEvent();
    // Get instance field reference: private System.Action`2<System.String,BeatmapIdentifierNetSerializable> setSelectedBeatmapEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>*& dyn_setSelectedBeatmapEvent();
    // Get instance field reference: private System.Action`1<System.String> clearSelectedBeatmapEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_clearSelectedBeatmapEvent();
    // Get instance field reference: private System.Action`1<System.String> getSelectedBeatmapEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_getSelectedBeatmapEvent();
    // Get instance field reference: private System.Action`2<System.String,BeatmapIdentifierNetSerializable> recommendBeatmapEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>*& dyn_recommendBeatmapEvent();
    // Get instance field reference: private System.Action`1<System.String> clearRecommendedBeatmapEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_clearRecommendedBeatmapEvent();
    // Get instance field reference: private System.Action`1<System.String> getRecommendedBeatmapEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_getRecommendedBeatmapEvent();
    // Get instance field reference: private System.Action`2<System.String,GameplayModifiers> setSelectedGameplayModifiersEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>*& dyn_setSelectedGameplayModifiersEvent();
    // Get instance field reference: private System.Action`1<System.String> clearSelectedGameplayModifiersEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_clearSelectedGameplayModifiersEvent();
    // Get instance field reference: private System.Action`1<System.String> getSelectedGameplayModifiersEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_getSelectedGameplayModifiersEvent();
    // Get instance field reference: private System.Action`2<System.String,GameplayModifiers> recommendGameplayModifiersEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>*& dyn_recommendGameplayModifiersEvent();
    // Get instance field reference: private System.Action`1<System.String> clearRecommendedGameplayModifiersEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_clearRecommendedGameplayModifiersEvent();
    // Get instance field reference: private System.Action`1<System.String> getRecommendedGameplayModifiersEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_getRecommendedGameplayModifiersEvent();
    // Get instance field reference: private System.Action`1<System.String> getIsStartButtonEnabledEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_getIsStartButtonEnabledEvent();
    // Get instance field reference: private System.Action`2<System.String,CannotStartGameReason> setIsStartButtonEnabledEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::CannotStartGameReason>*& dyn_setIsStartButtonEnabledEvent();
    // Get instance field reference: private System.Action`2<System.String,System.String> levelLoadErrorEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::StringW>*& dyn_levelLoadErrorEvent();
    // Get instance field reference: private System.Action`2<System.String,System.String> levelLoadSuccessEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::StringW>*& dyn_levelLoadSuccessEvent();
    // Get instance field reference: private System.Action`4<System.String,BeatmapIdentifierNetSerializable,GameplayModifiers,System.Single> startedLevelEvent
    [[deprecated("Use field access instead!")]] ::System::Action_4<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*, ::GlobalNamespace::GameplayModifiers*, float>*& dyn_startedLevelEvent();
    // Get instance field reference: private System.Action`1<System.String> getStartedLevelEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_getStartedLevelEvent();
    // Get instance field reference: private System.Action`1<System.String> getMultiplayerGameStateEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_getMultiplayerGameStateEvent();
    // Get instance field reference: private System.Action`2<System.String,MultiplayerGameState> setMultiplayerGameStateEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerGameState>*& dyn_setMultiplayerGameStateEvent();
    // Get instance field reference: private System.Action`1<System.String> cancelCountdownEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_cancelCountdownEvent();
    // Get instance field reference: private System.Action`2<System.String,System.Single> setCountdownEndTimeEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, float>*& dyn_setCountdownEndTimeEvent();
    // Get instance field reference: private System.Action`1<System.String> getCountdownEndTimeEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_getCountdownEndTimeEvent();
    // Get instance field reference: private System.Action`1<System.String> cancelledLevelStartEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_cancelledLevelStartEvent();
    // Get instance field reference: private System.Action`1<System.String> getIsReadyEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_getIsReadyEvent();
    // Get instance field reference: private System.Action`2<System.String,System.Boolean> setIsReadyEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, bool>*& dyn_setIsReadyEvent();
    // Get instance field reference: private System.Action`2<System.String,System.Single> setStartGameTimeEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, float>*& dyn_setStartGameTimeEvent();
    // Get instance field reference: private System.Action`1<System.String> cancelStartGameTimeEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_cancelStartGameTimeEvent();
    // Get instance field reference: private System.Action`1<System.String> getIsInLobbyEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_getIsInLobbyEvent();
    // Get instance field reference: private System.Action`2<System.String,System.Boolean> setIsInLobbyEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, bool>*& dyn_setIsInLobbyEvent();
    // Get instance field reference: private System.Action`1<System.String> getOwnedSongPacksEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_getOwnedSongPacksEvent();
    // Get instance field reference: private System.Action`2<System.String,SongPackMask> setOwnedSongPacksEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::SongPackMask>*& dyn_setOwnedSongPacksEvent();
    // Get instance field reference: private System.Action`2<System.String,System.String> requestedKickPlayerEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::StringW>*& dyn_requestedKickPlayerEvent();
    // public IMultiplayerSessionManager get_multiplayerSessionManager()
    // Offset: 0x162A3D8
    ::GlobalNamespace::IMultiplayerSessionManager* get_multiplayerSessionManager();
    // public System.Boolean get_enabled()
    // Offset: 0x162A3E0
    bool get_enabled();
    // public System.Void set_enabled(System.Boolean value)
    // Offset: 0x162A4A4
    void set_enabled(bool value);
    // public System.Boolean get_enabledForAllPlayers()
    // Offset: 0x162A578
    bool get_enabledForAllPlayers();
    // public System.Single get_syncTime()
    // Offset: 0x162A764
    float get_syncTime();
    // public System.Void add_getPlayersPermissionConfigurationEvent(System.Action`1<System.String> value)
    // Offset: 0x162A93C
    void add_getPlayersPermissionConfigurationEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_getPlayersPermissionConfigurationEvent(System.Action`1<System.String> value)
    // Offset: 0x162A9E0
    void remove_getPlayersPermissionConfigurationEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_setPlayersPermissionConfigurationEvent(System.Action`2<System.String,PlayersLobbyPermissionConfigurationNetSerializable> value)
    // Offset: 0x162AB50
    void add_setPlayersPermissionConfigurationEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* value);
    // public System.Void remove_setPlayersPermissionConfigurationEvent(System.Action`2<System.String,PlayersLobbyPermissionConfigurationNetSerializable> value)
    // Offset: 0x162ABF4
    void remove_setPlayersPermissionConfigurationEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* value);
    // public System.Void add_setPlayersMissingEntitlementsToLevelEvent(System.Action`2<System.String,PlayersMissingEntitlementsNetSerializable> value)
    // Offset: 0x162AD7C
    void add_setPlayersMissingEntitlementsToLevelEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value);
    // public System.Void remove_setPlayersMissingEntitlementsToLevelEvent(System.Action`2<System.String,PlayersMissingEntitlementsNetSerializable> value)
    // Offset: 0x162AE20
    void remove_setPlayersMissingEntitlementsToLevelEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value);
    // public System.Void add_getIsEntitledToLevelEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x162AFA8
    void add_getIsEntitledToLevelEvent(::System::Action_2<::StringW, ::StringW>* value);
    // public System.Void remove_getIsEntitledToLevelEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x162B04C
    void remove_getIsEntitledToLevelEvent(::System::Action_2<::StringW, ::StringW>* value);
    // public System.Void add_setIsEntitledToLevelEvent(System.Action`3<System.String,System.String,EntitlementsStatus> value)
    // Offset: 0x162B1D4
    void add_setIsEntitledToLevelEvent(::System::Action_3<::StringW, ::StringW, ::GlobalNamespace::EntitlementsStatus>* value);
    // public System.Void remove_setIsEntitledToLevelEvent(System.Action`3<System.String,System.String,EntitlementsStatus> value)
    // Offset: 0x162B278
    void remove_setIsEntitledToLevelEvent(::System::Action_3<::StringW, ::StringW, ::GlobalNamespace::EntitlementsStatus>* value);
    // public System.Void add_levelEntitlementStatusesInvalidatedEvent(System.Action`1<System.String> value)
    // Offset: 0x162B41C
    void add_levelEntitlementStatusesInvalidatedEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_levelEntitlementStatusesInvalidatedEvent(System.Action`1<System.String> value)
    // Offset: 0x162B4C0
    void remove_levelEntitlementStatusesInvalidatedEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_selectedLevelPackEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x162B630
    void add_selectedLevelPackEvent(::System::Action_2<::StringW, ::StringW>* value);
    // public System.Void remove_selectedLevelPackEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x162B6D4
    void remove_selectedLevelPackEvent(::System::Action_2<::StringW, ::StringW>* value);
    // public System.Void add_setSelectedBeatmapEvent(System.Action`2<System.String,BeatmapIdentifierNetSerializable> value)
    // Offset: 0x162B85C
    void add_setSelectedBeatmapEvent(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>* value);
    // public System.Void remove_setSelectedBeatmapEvent(System.Action`2<System.String,BeatmapIdentifierNetSerializable> value)
    // Offset: 0x162B900
    void remove_setSelectedBeatmapEvent(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>* value);
    // public System.Void add_clearSelectedBeatmapEvent(System.Action`1<System.String> value)
    // Offset: 0x162BA88
    void add_clearSelectedBeatmapEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_clearSelectedBeatmapEvent(System.Action`1<System.String> value)
    // Offset: 0x162BB2C
    void remove_clearSelectedBeatmapEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_getSelectedBeatmapEvent(System.Action`1<System.String> value)
    // Offset: 0x162BC9C
    void add_getSelectedBeatmapEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_getSelectedBeatmapEvent(System.Action`1<System.String> value)
    // Offset: 0x162BD40
    void remove_getSelectedBeatmapEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_recommendBeatmapEvent(System.Action`2<System.String,BeatmapIdentifierNetSerializable> value)
    // Offset: 0x162BEB0
    void add_recommendBeatmapEvent(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>* value);
    // public System.Void remove_recommendBeatmapEvent(System.Action`2<System.String,BeatmapIdentifierNetSerializable> value)
    // Offset: 0x162BF54
    void remove_recommendBeatmapEvent(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>* value);
    // public System.Void add_clearRecommendedBeatmapEvent(System.Action`1<System.String> value)
    // Offset: 0x162C0DC
    void add_clearRecommendedBeatmapEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_clearRecommendedBeatmapEvent(System.Action`1<System.String> value)
    // Offset: 0x162C180
    void remove_clearRecommendedBeatmapEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_getRecommendedBeatmapEvent(System.Action`1<System.String> value)
    // Offset: 0x162C2F0
    void add_getRecommendedBeatmapEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_getRecommendedBeatmapEvent(System.Action`1<System.String> value)
    // Offset: 0x162C394
    void remove_getRecommendedBeatmapEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_setSelectedGameplayModifiersEvent(System.Action`2<System.String,GameplayModifiers> value)
    // Offset: 0x162C504
    void add_setSelectedGameplayModifiersEvent(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>* value);
    // public System.Void remove_setSelectedGameplayModifiersEvent(System.Action`2<System.String,GameplayModifiers> value)
    // Offset: 0x162C5A8
    void remove_setSelectedGameplayModifiersEvent(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>* value);
    // public System.Void add_clearSelectedGameplayModifiersEvent(System.Action`1<System.String> value)
    // Offset: 0x162C730
    void add_clearSelectedGameplayModifiersEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_clearSelectedGameplayModifiersEvent(System.Action`1<System.String> value)
    // Offset: 0x162C7D4
    void remove_clearSelectedGameplayModifiersEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_getSelectedGameplayModifiersEvent(System.Action`1<System.String> value)
    // Offset: 0x162C944
    void add_getSelectedGameplayModifiersEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_getSelectedGameplayModifiersEvent(System.Action`1<System.String> value)
    // Offset: 0x162C9E8
    void remove_getSelectedGameplayModifiersEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_recommendGameplayModifiersEvent(System.Action`2<System.String,GameplayModifiers> value)
    // Offset: 0x162CB58
    void add_recommendGameplayModifiersEvent(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>* value);
    // public System.Void remove_recommendGameplayModifiersEvent(System.Action`2<System.String,GameplayModifiers> value)
    // Offset: 0x162CBFC
    void remove_recommendGameplayModifiersEvent(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>* value);
    // public System.Void add_clearRecommendedGameplayModifiersEvent(System.Action`1<System.String> value)
    // Offset: 0x162CD84
    void add_clearRecommendedGameplayModifiersEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_clearRecommendedGameplayModifiersEvent(System.Action`1<System.String> value)
    // Offset: 0x162CE28
    void remove_clearRecommendedGameplayModifiersEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_getRecommendedGameplayModifiersEvent(System.Action`1<System.String> value)
    // Offset: 0x162CF98
    void add_getRecommendedGameplayModifiersEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_getRecommendedGameplayModifiersEvent(System.Action`1<System.String> value)
    // Offset: 0x162D03C
    void remove_getRecommendedGameplayModifiersEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_getIsStartButtonEnabledEvent(System.Action`1<System.String> value)
    // Offset: 0x162D1AC
    void add_getIsStartButtonEnabledEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_getIsStartButtonEnabledEvent(System.Action`1<System.String> value)
    // Offset: 0x162D250
    void remove_getIsStartButtonEnabledEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_setIsStartButtonEnabledEvent(System.Action`2<System.String,CannotStartGameReason> value)
    // Offset: 0x162D3C0
    void add_setIsStartButtonEnabledEvent(::System::Action_2<::StringW, ::GlobalNamespace::CannotStartGameReason>* value);
    // public System.Void remove_setIsStartButtonEnabledEvent(System.Action`2<System.String,CannotStartGameReason> value)
    // Offset: 0x162D464
    void remove_setIsStartButtonEnabledEvent(::System::Action_2<::StringW, ::GlobalNamespace::CannotStartGameReason>* value);
    // public System.Void add_levelLoadErrorEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x162D5EC
    void add_levelLoadErrorEvent(::System::Action_2<::StringW, ::StringW>* value);
    // public System.Void remove_levelLoadErrorEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x162D690
    void remove_levelLoadErrorEvent(::System::Action_2<::StringW, ::StringW>* value);
    // public System.Void add_levelLoadSuccessEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x162D818
    void add_levelLoadSuccessEvent(::System::Action_2<::StringW, ::StringW>* value);
    // public System.Void remove_levelLoadSuccessEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x162D8BC
    void remove_levelLoadSuccessEvent(::System::Action_2<::StringW, ::StringW>* value);
    // public System.Void add_startedLevelEvent(System.Action`4<System.String,BeatmapIdentifierNetSerializable,GameplayModifiers,System.Single> value)
    // Offset: 0x162DA44
    void add_startedLevelEvent(::System::Action_4<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*, ::GlobalNamespace::GameplayModifiers*, float>* value);
    // public System.Void remove_startedLevelEvent(System.Action`4<System.String,BeatmapIdentifierNetSerializable,GameplayModifiers,System.Single> value)
    // Offset: 0x162DAE8
    void remove_startedLevelEvent(::System::Action_4<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*, ::GlobalNamespace::GameplayModifiers*, float>* value);
    // public System.Void add_getStartedLevelEvent(System.Action`1<System.String> value)
    // Offset: 0x162DCB0
    void add_getStartedLevelEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_getStartedLevelEvent(System.Action`1<System.String> value)
    // Offset: 0x162DD54
    void remove_getStartedLevelEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_getMultiplayerGameStateEvent(System.Action`1<System.String> value)
    // Offset: 0x162DEC4
    void add_getMultiplayerGameStateEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_getMultiplayerGameStateEvent(System.Action`1<System.String> value)
    // Offset: 0x162DF68
    void remove_getMultiplayerGameStateEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_setMultiplayerGameStateEvent(System.Action`2<System.String,MultiplayerGameState> value)
    // Offset: 0x162E0D8
    void add_setMultiplayerGameStateEvent(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerGameState>* value);
    // public System.Void remove_setMultiplayerGameStateEvent(System.Action`2<System.String,MultiplayerGameState> value)
    // Offset: 0x162E17C
    void remove_setMultiplayerGameStateEvent(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerGameState>* value);
    // public System.Void add_cancelCountdownEvent(System.Action`1<System.String> value)
    // Offset: 0x162E304
    void add_cancelCountdownEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_cancelCountdownEvent(System.Action`1<System.String> value)
    // Offset: 0x162E3A8
    void remove_cancelCountdownEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_setCountdownEndTimeEvent(System.Action`2<System.String,System.Single> value)
    // Offset: 0x162E518
    void add_setCountdownEndTimeEvent(::System::Action_2<::StringW, float>* value);
    // public System.Void remove_setCountdownEndTimeEvent(System.Action`2<System.String,System.Single> value)
    // Offset: 0x162E5C0
    void remove_setCountdownEndTimeEvent(::System::Action_2<::StringW, float>* value);
    // public System.Void add_getCountdownEndTimeEvent(System.Action`1<System.String> value)
    // Offset: 0x162E758
    void add_getCountdownEndTimeEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_getCountdownEndTimeEvent(System.Action`1<System.String> value)
    // Offset: 0x162E800
    void remove_getCountdownEndTimeEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_cancelledLevelStartEvent(System.Action`1<System.String> value)
    // Offset: 0x162E974
    void add_cancelledLevelStartEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_cancelledLevelStartEvent(System.Action`1<System.String> value)
    // Offset: 0x162EA1C
    void remove_cancelledLevelStartEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_getIsReadyEvent(System.Action`1<System.String> value)
    // Offset: 0x162EB90
    void add_getIsReadyEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_getIsReadyEvent(System.Action`1<System.String> value)
    // Offset: 0x162EC38
    void remove_getIsReadyEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_setIsReadyEvent(System.Action`2<System.String,System.Boolean> value)
    // Offset: 0x162EDAC
    void add_setIsReadyEvent(::System::Action_2<::StringW, bool>* value);
    // public System.Void remove_setIsReadyEvent(System.Action`2<System.String,System.Boolean> value)
    // Offset: 0x162EE54
    void remove_setIsReadyEvent(::System::Action_2<::StringW, bool>* value);
    // public System.Void add_setStartGameTimeEvent(System.Action`2<System.String,System.Single> value)
    // Offset: 0x162EFE0
    void add_setStartGameTimeEvent(::System::Action_2<::StringW, float>* value);
    // public System.Void remove_setStartGameTimeEvent(System.Action`2<System.String,System.Single> value)
    // Offset: 0x162F088
    void remove_setStartGameTimeEvent(::System::Action_2<::StringW, float>* value);
    // public System.Void add_cancelStartGameTimeEvent(System.Action`1<System.String> value)
    // Offset: 0x162F220
    void add_cancelStartGameTimeEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_cancelStartGameTimeEvent(System.Action`1<System.String> value)
    // Offset: 0x162F2C8
    void remove_cancelStartGameTimeEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_getIsInLobbyEvent(System.Action`1<System.String> value)
    // Offset: 0x162F43C
    void add_getIsInLobbyEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_getIsInLobbyEvent(System.Action`1<System.String> value)
    // Offset: 0x162F4E4
    void remove_getIsInLobbyEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_setIsInLobbyEvent(System.Action`2<System.String,System.Boolean> value)
    // Offset: 0x162F658
    void add_setIsInLobbyEvent(::System::Action_2<::StringW, bool>* value);
    // public System.Void remove_setIsInLobbyEvent(System.Action`2<System.String,System.Boolean> value)
    // Offset: 0x162F700
    void remove_setIsInLobbyEvent(::System::Action_2<::StringW, bool>* value);
    // public System.Void add_getOwnedSongPacksEvent(System.Action`1<System.String> value)
    // Offset: 0x162F88C
    void add_getOwnedSongPacksEvent(::System::Action_1<::StringW>* value);
    // public System.Void remove_getOwnedSongPacksEvent(System.Action`1<System.String> value)
    // Offset: 0x162F934
    void remove_getOwnedSongPacksEvent(::System::Action_1<::StringW>* value);
    // public System.Void add_setOwnedSongPacksEvent(System.Action`2<System.String,SongPackMask> value)
    // Offset: 0x162FAA8
    void add_setOwnedSongPacksEvent(::System::Action_2<::StringW, ::GlobalNamespace::SongPackMask>* value);
    // public System.Void remove_setOwnedSongPacksEvent(System.Action`2<System.String,SongPackMask> value)
    // Offset: 0x162FB50
    void remove_setOwnedSongPacksEvent(::System::Action_2<::StringW, ::GlobalNamespace::SongPackMask>* value);
    // public System.Void add_requestedKickPlayerEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x162FCF8
    void add_requestedKickPlayerEvent(::System::Action_2<::StringW, ::StringW>* value);
    // public System.Void remove_requestedKickPlayerEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x162FDA0
    void remove_requestedKickPlayerEvent(::System::Action_2<::StringW, ::StringW>* value);
    // public System.Void .ctor(IMultiplayerSessionManager multiplayerSessionManager)
    // Offset: 0x162525C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MenuRpcManager* New_ctor(::GlobalNamespace::IMultiplayerSessionManager* multiplayerSessionManager) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MenuRpcManager*, creationType>(multiplayerSessionManager)));
    }
    // public System.Void Dispose()
    // Offset: 0x162A818
    void Dispose();
    // public System.Boolean EnabledForPlayer(IConnectedPlayer player)
    // Offset: 0x162A87C
    bool EnabledForPlayer(::GlobalNamespace::IConnectedPlayer* player);
    // public System.Void GetPlayersPermissionConfiguration()
    // Offset: 0x162AA84
    void GetPlayersPermissionConfiguration();
    // private System.Void InvokeGetPlayersPermissionConfiguration(System.String userId)
    // Offset: 0x162AADC
    void InvokeGetPlayersPermissionConfiguration(::StringW userId);
    // public System.Void SetPlayersPermissionConfiguration(PlayersLobbyPermissionConfigurationNetSerializable playersPermissionConfiguration)
    // Offset: 0x162AC98
    void SetPlayersPermissionConfiguration(::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersPermissionConfiguration);
    // private System.Void InvokeSetPlayersPermissionConfiguration(System.String userId, PlayersLobbyPermissionConfigurationNetSerializable playersPermissionConfiguration)
    // Offset: 0x162AD00
    void InvokeSetPlayersPermissionConfiguration(::StringW userId, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersPermissionConfiguration);
    // public System.Void SetPlayersMissingEntitlementsToLevel(PlayersMissingEntitlementsNetSerializable playersMissingEntitlements)
    // Offset: 0x162AEC4
    void SetPlayersMissingEntitlementsToLevel(::GlobalNamespace::PlayersMissingEntitlementsNetSerializable* playersMissingEntitlements);
    // private System.Void InvokeSetPlayersMissingEntitlementsToLevelRpc(System.String userId, PlayersMissingEntitlementsNetSerializable playersMissingEntitlements)
    // Offset: 0x162AF2C
    void InvokeSetPlayersMissingEntitlementsToLevelRpc(::StringW userId, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable* playersMissingEntitlements);
    // public System.Void GetIsEntitledToLevel(System.String levelId)
    // Offset: 0x162B0F0
    void GetIsEntitledToLevel(::StringW levelId);
    // private System.Void InvokeGetIsEntitledToLevel(System.String userId, System.String levelId)
    // Offset: 0x162B158
    void InvokeGetIsEntitledToLevel(::StringW userId, ::StringW levelId);
    // public System.Void SetIsEntitledToLevel(System.String levelId, EntitlementsStatus entitlementStatus)
    // Offset: 0x162B31C
    void SetIsEntitledToLevel(::StringW levelId, ::GlobalNamespace::EntitlementsStatus entitlementStatus);
    // private System.Void InvokeSetIsEntitledToLevel(System.String userId, System.String levelId, System.Int32 entitlementStatus)
    // Offset: 0x162B38C
    void InvokeSetIsEntitledToLevel(::StringW userId, ::StringW levelId, int entitlementStatus);
    // public System.Void InvalidateLevelEntitlementStatuses()
    // Offset: 0x162B564
    void InvalidateLevelEntitlementStatuses();
    // public System.Void InvokeLevelEntitlementStatusesInvalidated(System.String userId)
    // Offset: 0x162B5BC
    void InvokeLevelEntitlementStatusesInvalidated(::StringW userId);
    // public System.Void SelectLevelPack(System.String levelPackId)
    // Offset: 0x162B778
    void SelectLevelPack(::StringW levelPackId);
    // private System.Void InvokeOnSelectedLevelPackEvent(System.String userId, System.String levelPackId)
    // Offset: 0x162B7E0
    void InvokeOnSelectedLevelPackEvent(::StringW userId, ::StringW levelPackId);
    // public System.Void SetSelectedBeatmap(BeatmapIdentifierNetSerializable identifier)
    // Offset: 0x162B9A4
    void SetSelectedBeatmap(::GlobalNamespace::BeatmapIdentifierNetSerializable* identifier);
    // private System.Void InvokeSetSelectedBeatmap(System.String userId, BeatmapIdentifierNetSerializable identifier)
    // Offset: 0x162BA0C
    void InvokeSetSelectedBeatmap(::StringW userId, ::GlobalNamespace::BeatmapIdentifierNetSerializable* identifier);
    // public System.Void ClearSelectedBeatmap()
    // Offset: 0x162BBD0
    void ClearSelectedBeatmap();
    // private System.Void InvokeClearSelectedBeatmap(System.String userId)
    // Offset: 0x162BC28
    void InvokeClearSelectedBeatmap(::StringW userId);
    // public System.Void GetSelectedBeatmap()
    // Offset: 0x162BDE4
    void GetSelectedBeatmap();
    // private System.Void InvokeGetSelectedBeatmapRpc(System.String userId)
    // Offset: 0x162BE3C
    void InvokeGetSelectedBeatmapRpc(::StringW userId);
    // public System.Void RecommendBeatmap(BeatmapIdentifierNetSerializable identifier)
    // Offset: 0x162BFF8
    void RecommendBeatmap(::GlobalNamespace::BeatmapIdentifierNetSerializable* identifier);
    // private System.Void InvokeRecommendBeatmap(System.String userId, BeatmapIdentifierNetSerializable identifier)
    // Offset: 0x162C060
    void InvokeRecommendBeatmap(::StringW userId, ::GlobalNamespace::BeatmapIdentifierNetSerializable* identifier);
    // public System.Void ClearRecommendedBeatmap()
    // Offset: 0x162C224
    void ClearRecommendedBeatmap();
    // private System.Void InvokeClearRecommendedBeatmap(System.String userId)
    // Offset: 0x162C27C
    void InvokeClearRecommendedBeatmap(::StringW userId);
    // public System.Void GetRecommendedBeatmap()
    // Offset: 0x162C438
    void GetRecommendedBeatmap();
    // private System.Void InvokeGetRecommendedBeatmap(System.String userId)
    // Offset: 0x162C490
    void InvokeGetRecommendedBeatmap(::StringW userId);
    // public System.Void SetSelectedGameplayModifiers(GameplayModifiers gameplayModifiers)
    // Offset: 0x162C64C
    void SetSelectedGameplayModifiers(::GlobalNamespace::GameplayModifiers* gameplayModifiers);
    // private System.Void InvokeSetSelectedGameplayModifiers(System.String userId, GameplayModifiers gameplayModifiers)
    // Offset: 0x162C6B4
    void InvokeSetSelectedGameplayModifiers(::StringW userId, ::GlobalNamespace::GameplayModifiers* gameplayModifiers);
    // public System.Void ClearSelectedGameplayModifiers()
    // Offset: 0x162C878
    void ClearSelectedGameplayModifiers();
    // private System.Void InvokeClearSelectedGameplayModifiers(System.String userId)
    // Offset: 0x162C8D0
    void InvokeClearSelectedGameplayModifiers(::StringW userId);
    // public System.Void GetSelectedGameplayModifiers()
    // Offset: 0x162CA8C
    void GetSelectedGameplayModifiers();
    // private System.Void InvokeGetSelectedGameplayModifiers(System.String userId)
    // Offset: 0x162CAE4
    void InvokeGetSelectedGameplayModifiers(::StringW userId);
    // public System.Void RecommendGameplayModifiers(GameplayModifiers gameplayModifiers)
    // Offset: 0x162CCA0
    void RecommendGameplayModifiers(::GlobalNamespace::GameplayModifiers* gameplayModifiers);
    // private System.Void InvokeRecommendGameplayModifiers(System.String userId, GameplayModifiers gameplayModifiers)
    // Offset: 0x162CD08
    void InvokeRecommendGameplayModifiers(::StringW userId, ::GlobalNamespace::GameplayModifiers* gameplayModifiers);
    // public System.Void ClearRecommendedGameplayModifiers()
    // Offset: 0x162CECC
    void ClearRecommendedGameplayModifiers();
    // private System.Void InvokeClearRecommendedGameplayModifiers(System.String userId)
    // Offset: 0x162CF24
    void InvokeClearRecommendedGameplayModifiers(::StringW userId);
    // public System.Void GetRecommendedGameplayModifiers()
    // Offset: 0x162D0E0
    void GetRecommendedGameplayModifiers();
    // private System.Void InvokeGetRecommendedGameplayModifiers(System.String userId)
    // Offset: 0x162D138
    void InvokeGetRecommendedGameplayModifiers(::StringW userId);
    // public System.Void GetIsStartButtonEnabled()
    // Offset: 0x162D2F4
    void GetIsStartButtonEnabled();
    // private System.Void InvokeGetIsStartButtonEnabled(System.String userId)
    // Offset: 0x162D34C
    void InvokeGetIsStartButtonEnabled(::StringW userId);
    // public System.Void SetIsStartButtonEnabled(CannotStartGameReason reason)
    // Offset: 0x162D508
    void SetIsStartButtonEnabled(::GlobalNamespace::CannotStartGameReason reason);
    // private System.Void InvokeSetIsStartButtonEnabled(System.String userId, CannotStartGameReason reason)
    // Offset: 0x162D570
    void InvokeSetIsStartButtonEnabled(::StringW userId, ::GlobalNamespace::CannotStartGameReason reason);
    // public System.Void LevelLoadError(System.String levelId)
    // Offset: 0x162D734
    void LevelLoadError(::StringW levelId);
    // private System.Void InvokeLevelLoadError(System.String userId, System.String levelId)
    // Offset: 0x162D79C
    void InvokeLevelLoadError(::StringW userId, ::StringW levelId);
    // public System.Void LevelLoadSuccess(System.String levelId)
    // Offset: 0x162D960
    void LevelLoadSuccess(::StringW levelId);
    // private System.Void InvokeLevelLoadSuccess(System.String userId, System.String levelId)
    // Offset: 0x162D9C8
    void InvokeLevelLoadSuccess(::StringW userId, ::StringW levelId);
    // public System.Void StartLevel(BeatmapIdentifierNetSerializable beatmapId, GameplayModifiers gameplayModifiers, System.Single startTime)
    // Offset: 0x162DB8C
    void StartLevel(::GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime);
    // private System.Void InvokeStartLevel(System.String userId, BeatmapIdentifierNetSerializable beatmapId, GameplayModifiers gameplayModifiers, System.Single startTime)
    // Offset: 0x162DC0C
    void InvokeStartLevel(::StringW userId, ::GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime);
    // public System.Void GetStartedLevel()
    // Offset: 0x162DDF8
    void GetStartedLevel();
    // private System.Void InvokeGetStartedLevel(System.String userId)
    // Offset: 0x162DE50
    void InvokeGetStartedLevel(::StringW userId);
    // public System.Void GetMultiplayerGameState()
    // Offset: 0x162E00C
    void GetMultiplayerGameState();
    // private System.Void InvokeGetMultiplayerGameState(System.String userId)
    // Offset: 0x162E064
    void InvokeGetMultiplayerGameState(::StringW userId);
    // public System.Void SetMultiplayerGameState(MultiplayerGameState lobbyState)
    // Offset: 0x162E220
    void SetMultiplayerGameState(::GlobalNamespace::MultiplayerGameState lobbyState);
    // private System.Void InvokeSetMultiplayerGameState(System.String userId, MultiplayerGameState lobbyState)
    // Offset: 0x162E288
    void InvokeSetMultiplayerGameState(::StringW userId, ::GlobalNamespace::MultiplayerGameState lobbyState);
    // public System.Void CancelCountdown()
    // Offset: 0x162E44C
    void CancelCountdown();
    // private System.Void InvokeCancelCountdown(System.String userId)
    // Offset: 0x162E4A4
    void InvokeCancelCountdown(::StringW userId);
    // public System.Void SetCountdownEndTime(System.Single newTime)
    // Offset: 0x162E668
    void SetCountdownEndTime(float newTime);
    // private System.Void InvokeSetCountdownEndTime(System.String userId, System.Single newTime)
    // Offset: 0x162E6D0
    void InvokeSetCountdownEndTime(::StringW userId, float newTime);
    // public System.Void GetCountdownEndTime()
    // Offset: 0x162E8A8
    void GetCountdownEndTime();
    // private System.Void InvokeGetCountdownEndTime(System.String userId)
    // Offset: 0x162E900
    void InvokeGetCountdownEndTime(::StringW userId);
    // public System.Void CancelLevelStart()
    // Offset: 0x162EAC4
    void CancelLevelStart();
    // private System.Void InvokeCancelLevelStart(System.String userId)
    // Offset: 0x162EB1C
    void InvokeCancelLevelStart(::StringW userId);
    // public System.Void GetIsReady()
    // Offset: 0x162ECE0
    void GetIsReady();
    // private System.Void InvokeGetIsReady(System.String userId)
    // Offset: 0x162ED38
    void InvokeGetIsReady(::StringW userId);
    // public System.Void SetIsReady(System.Boolean isReady)
    // Offset: 0x162EEFC
    void SetIsReady(bool isReady);
    // private System.Void InvokeSetIsReady(System.String userId, System.Boolean isReady)
    // Offset: 0x162EF64
    void InvokeSetIsReady(::StringW userId, bool isReady);
    // public System.Void SetStartGameTime(System.Single newTime)
    // Offset: 0x162F130
    void SetStartGameTime(float newTime);
    // private System.Void InvokeSetStartGameCountdown(System.String userId, System.Single newTime)
    // Offset: 0x162F198
    void InvokeSetStartGameCountdown(::StringW userId, float newTime);
    // public System.Void CancelStartGameTime()
    // Offset: 0x162F370
    void CancelStartGameTime();
    // private System.Void InvokeCancelStartGameCountdown(System.String userId)
    // Offset: 0x162F3C8
    void InvokeCancelStartGameCountdown(::StringW userId);
    // public System.Void GetIsInLobby()
    // Offset: 0x162F58C
    void GetIsInLobby();
    // private System.Void InvokeGetIsInLobby(System.String userId)
    // Offset: 0x162F5E4
    void InvokeGetIsInLobby(::StringW userId);
    // public System.Void SetIsInLobby(System.Boolean isBack)
    // Offset: 0x162F7A8
    void SetIsInLobby(bool isBack);
    // private System.Void InvokeSetIsInLobby(System.String userId, System.Boolean isBack)
    // Offset: 0x162F810
    void InvokeSetIsInLobby(::StringW userId, bool isBack);
    // public System.Void GetOwnedSongPacks()
    // Offset: 0x162F9DC
    void GetOwnedSongPacks();
    // private System.Void InvokeGetOwnedSongPacks(System.String userId)
    // Offset: 0x162FA34
    void InvokeGetOwnedSongPacks(::StringW userId);
    // public System.Void SetOwnedSongPacks(SongPackMask songPackMask)
    // Offset: 0x162FBF8
    void SetOwnedSongPacks(::GlobalNamespace::SongPackMask songPackMask);
    // private System.Void InvokeSetOwnedSongPacks(System.String userId, SongPackMask songPackMask)
    // Offset: 0x162FC68
    void InvokeSetOwnedSongPacks(::StringW userId, ::GlobalNamespace::SongPackMask songPackMask);
    // public System.Void RequestKickPlayer(System.String kickedPlayerId)
    // Offset: 0x162FE48
    void RequestKickPlayer(::StringW kickedPlayerId);
    // private System.Void InvokeKickPlayer(System.String userId, System.String kickedPlayerId)
    // Offset: 0x162FEB0
    void InvokeKickPlayer(::StringW userId, ::StringW kickedPlayerId);
  }; // MenuRpcManager
  #pragma pack(pop)
  static check_size<sizeof(MenuRpcManager), 344 + sizeof(::System::Action_2<::StringW, ::StringW>*)> __GlobalNamespace_MenuRpcManagerSizeCheck;
  static_assert(sizeof(MenuRpcManager) == 0x160);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::MenuRpcManager::RpcType, "", "MenuRpcManager/RpcType");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::get_multiplayerSessionManager
// Il2CppName: get_multiplayerSessionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::IMultiplayerSessionManager* (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::get_multiplayerSessionManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "get_multiplayerSessionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::get_enabled
// Il2CppName: get_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::get_enabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "get_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::set_enabled
// Il2CppName: set_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(bool)>(&GlobalNamespace::MenuRpcManager::set_enabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "set_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::get_enabledForAllPlayers
// Il2CppName: get_enabledForAllPlayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::get_enabledForAllPlayers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "get_enabledForAllPlayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::get_syncTime
// Il2CppName: get_syncTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::get_syncTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "get_syncTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getPlayersPermissionConfigurationEvent
// Il2CppName: add_getPlayersPermissionConfigurationEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_getPlayersPermissionConfigurationEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getPlayersPermissionConfigurationEvent
// Il2CppName: remove_getPlayersPermissionConfigurationEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_getPlayersPermissionConfigurationEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setPlayersPermissionConfigurationEvent
// Il2CppName: add_setPlayersPermissionConfigurationEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>*)>(&GlobalNamespace::MenuRpcManager::add_setPlayersPermissionConfigurationEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "PlayersLobbyPermissionConfigurationNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setPlayersPermissionConfigurationEvent
// Il2CppName: remove_setPlayersPermissionConfigurationEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>*)>(&GlobalNamespace::MenuRpcManager::remove_setPlayersPermissionConfigurationEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "PlayersLobbyPermissionConfigurationNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setPlayersMissingEntitlementsToLevelEvent
// Il2CppName: add_setPlayersMissingEntitlementsToLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>*)>(&GlobalNamespace::MenuRpcManager::add_setPlayersMissingEntitlementsToLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "PlayersMissingEntitlementsNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setPlayersMissingEntitlementsToLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setPlayersMissingEntitlementsToLevelEvent
// Il2CppName: remove_setPlayersMissingEntitlementsToLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>*)>(&GlobalNamespace::MenuRpcManager::remove_setPlayersMissingEntitlementsToLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "PlayersMissingEntitlementsNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setPlayersMissingEntitlementsToLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getIsEntitledToLevelEvent
// Il2CppName: add_getIsEntitledToLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_getIsEntitledToLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getIsEntitledToLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getIsEntitledToLevelEvent
// Il2CppName: remove_getIsEntitledToLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_getIsEntitledToLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getIsEntitledToLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setIsEntitledToLevelEvent
// Il2CppName: add_setIsEntitledToLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_3<::StringW, ::StringW, ::GlobalNamespace::EntitlementsStatus>*)>(&GlobalNamespace::MenuRpcManager::add_setIsEntitledToLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "EntitlementsStatus")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setIsEntitledToLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setIsEntitledToLevelEvent
// Il2CppName: remove_setIsEntitledToLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_3<::StringW, ::StringW, ::GlobalNamespace::EntitlementsStatus>*)>(&GlobalNamespace::MenuRpcManager::remove_setIsEntitledToLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "EntitlementsStatus")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setIsEntitledToLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_levelEntitlementStatusesInvalidatedEvent
// Il2CppName: add_levelEntitlementStatusesInvalidatedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_levelEntitlementStatusesInvalidatedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_levelEntitlementStatusesInvalidatedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_levelEntitlementStatusesInvalidatedEvent
// Il2CppName: remove_levelEntitlementStatusesInvalidatedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_levelEntitlementStatusesInvalidatedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_levelEntitlementStatusesInvalidatedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_selectedLevelPackEvent
// Il2CppName: add_selectedLevelPackEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_selectedLevelPackEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_selectedLevelPackEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_selectedLevelPackEvent
// Il2CppName: remove_selectedLevelPackEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_selectedLevelPackEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_selectedLevelPackEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setSelectedBeatmapEvent
// Il2CppName: add_setSelectedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>*)>(&GlobalNamespace::MenuRpcManager::add_setSelectedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setSelectedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setSelectedBeatmapEvent
// Il2CppName: remove_setSelectedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>*)>(&GlobalNamespace::MenuRpcManager::remove_setSelectedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setSelectedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_clearSelectedBeatmapEvent
// Il2CppName: add_clearSelectedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_clearSelectedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_clearSelectedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_clearSelectedBeatmapEvent
// Il2CppName: remove_clearSelectedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_clearSelectedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_clearSelectedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getSelectedBeatmapEvent
// Il2CppName: add_getSelectedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_getSelectedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getSelectedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getSelectedBeatmapEvent
// Il2CppName: remove_getSelectedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_getSelectedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getSelectedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_recommendBeatmapEvent
// Il2CppName: add_recommendBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>*)>(&GlobalNamespace::MenuRpcManager::add_recommendBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_recommendBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_recommendBeatmapEvent
// Il2CppName: remove_recommendBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>*)>(&GlobalNamespace::MenuRpcManager::remove_recommendBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_recommendBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_clearRecommendedBeatmapEvent
// Il2CppName: add_clearRecommendedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_clearRecommendedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_clearRecommendedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_clearRecommendedBeatmapEvent
// Il2CppName: remove_clearRecommendedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_clearRecommendedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_clearRecommendedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getRecommendedBeatmapEvent
// Il2CppName: add_getRecommendedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_getRecommendedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getRecommendedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getRecommendedBeatmapEvent
// Il2CppName: remove_getRecommendedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_getRecommendedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getRecommendedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setSelectedGameplayModifiersEvent
// Il2CppName: add_setSelectedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>*)>(&GlobalNamespace::MenuRpcManager::add_setSelectedGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "GameplayModifiers")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setSelectedGameplayModifiersEvent
// Il2CppName: remove_setSelectedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>*)>(&GlobalNamespace::MenuRpcManager::remove_setSelectedGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "GameplayModifiers")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_clearSelectedGameplayModifiersEvent
// Il2CppName: add_clearSelectedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_clearSelectedGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_clearSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_clearSelectedGameplayModifiersEvent
// Il2CppName: remove_clearSelectedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_clearSelectedGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_clearSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getSelectedGameplayModifiersEvent
// Il2CppName: add_getSelectedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_getSelectedGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getSelectedGameplayModifiersEvent
// Il2CppName: remove_getSelectedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_getSelectedGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_recommendGameplayModifiersEvent
// Il2CppName: add_recommendGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>*)>(&GlobalNamespace::MenuRpcManager::add_recommendGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "GameplayModifiers")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_recommendGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_recommendGameplayModifiersEvent
// Il2CppName: remove_recommendGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>*)>(&GlobalNamespace::MenuRpcManager::remove_recommendGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "GameplayModifiers")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_recommendGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_clearRecommendedGameplayModifiersEvent
// Il2CppName: add_clearRecommendedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_clearRecommendedGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_clearRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_clearRecommendedGameplayModifiersEvent
// Il2CppName: remove_clearRecommendedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_clearRecommendedGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_clearRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getRecommendedGameplayModifiersEvent
// Il2CppName: add_getRecommendedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_getRecommendedGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getRecommendedGameplayModifiersEvent
// Il2CppName: remove_getRecommendedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_getRecommendedGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getIsStartButtonEnabledEvent
// Il2CppName: add_getIsStartButtonEnabledEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_getIsStartButtonEnabledEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getIsStartButtonEnabledEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getIsStartButtonEnabledEvent
// Il2CppName: remove_getIsStartButtonEnabledEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_getIsStartButtonEnabledEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getIsStartButtonEnabledEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setIsStartButtonEnabledEvent
// Il2CppName: add_setIsStartButtonEnabledEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::CannotStartGameReason>*)>(&GlobalNamespace::MenuRpcManager::add_setIsStartButtonEnabledEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "CannotStartGameReason")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setIsStartButtonEnabledEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setIsStartButtonEnabledEvent
// Il2CppName: remove_setIsStartButtonEnabledEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::CannotStartGameReason>*)>(&GlobalNamespace::MenuRpcManager::remove_setIsStartButtonEnabledEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "CannotStartGameReason")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setIsStartButtonEnabledEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_levelLoadErrorEvent
// Il2CppName: add_levelLoadErrorEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_levelLoadErrorEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_levelLoadErrorEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_levelLoadErrorEvent
// Il2CppName: remove_levelLoadErrorEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_levelLoadErrorEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_levelLoadErrorEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_levelLoadSuccessEvent
// Il2CppName: add_levelLoadSuccessEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_levelLoadSuccessEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_levelLoadSuccessEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_levelLoadSuccessEvent
// Il2CppName: remove_levelLoadSuccessEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_levelLoadSuccessEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_levelLoadSuccessEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_startedLevelEvent
// Il2CppName: add_startedLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_4<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*, ::GlobalNamespace::GameplayModifiers*, float>*)>(&GlobalNamespace::MenuRpcManager::add_startedLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable"), ::il2cpp_utils::GetClassFromName("", "GameplayModifiers"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_startedLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_startedLevelEvent
// Il2CppName: remove_startedLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_4<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*, ::GlobalNamespace::GameplayModifiers*, float>*)>(&GlobalNamespace::MenuRpcManager::remove_startedLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable"), ::il2cpp_utils::GetClassFromName("", "GameplayModifiers"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_startedLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getStartedLevelEvent
// Il2CppName: add_getStartedLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_getStartedLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getStartedLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getStartedLevelEvent
// Il2CppName: remove_getStartedLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_getStartedLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getStartedLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getMultiplayerGameStateEvent
// Il2CppName: add_getMultiplayerGameStateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_getMultiplayerGameStateEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getMultiplayerGameStateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getMultiplayerGameStateEvent
// Il2CppName: remove_getMultiplayerGameStateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_getMultiplayerGameStateEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getMultiplayerGameStateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setMultiplayerGameStateEvent
// Il2CppName: add_setMultiplayerGameStateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerGameState>*)>(&GlobalNamespace::MenuRpcManager::add_setMultiplayerGameStateEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "MultiplayerGameState")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setMultiplayerGameStateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setMultiplayerGameStateEvent
// Il2CppName: remove_setMultiplayerGameStateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerGameState>*)>(&GlobalNamespace::MenuRpcManager::remove_setMultiplayerGameStateEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "MultiplayerGameState")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setMultiplayerGameStateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_cancelCountdownEvent
// Il2CppName: add_cancelCountdownEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_cancelCountdownEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_cancelCountdownEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_cancelCountdownEvent
// Il2CppName: remove_cancelCountdownEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_cancelCountdownEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_cancelCountdownEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setCountdownEndTimeEvent
// Il2CppName: add_setCountdownEndTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, float>*)>(&GlobalNamespace::MenuRpcManager::add_setCountdownEndTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setCountdownEndTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setCountdownEndTimeEvent
// Il2CppName: remove_setCountdownEndTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, float>*)>(&GlobalNamespace::MenuRpcManager::remove_setCountdownEndTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setCountdownEndTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getCountdownEndTimeEvent
// Il2CppName: add_getCountdownEndTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_getCountdownEndTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getCountdownEndTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getCountdownEndTimeEvent
// Il2CppName: remove_getCountdownEndTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_getCountdownEndTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getCountdownEndTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_cancelledLevelStartEvent
// Il2CppName: add_cancelledLevelStartEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_cancelledLevelStartEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_cancelledLevelStartEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_cancelledLevelStartEvent
// Il2CppName: remove_cancelledLevelStartEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_cancelledLevelStartEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_cancelledLevelStartEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getIsReadyEvent
// Il2CppName: add_getIsReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_getIsReadyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getIsReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getIsReadyEvent
// Il2CppName: remove_getIsReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_getIsReadyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getIsReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setIsReadyEvent
// Il2CppName: add_setIsReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, bool>*)>(&GlobalNamespace::MenuRpcManager::add_setIsReadyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setIsReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setIsReadyEvent
// Il2CppName: remove_setIsReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, bool>*)>(&GlobalNamespace::MenuRpcManager::remove_setIsReadyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setIsReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setStartGameTimeEvent
// Il2CppName: add_setStartGameTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, float>*)>(&GlobalNamespace::MenuRpcManager::add_setStartGameTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setStartGameTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setStartGameTimeEvent
// Il2CppName: remove_setStartGameTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, float>*)>(&GlobalNamespace::MenuRpcManager::remove_setStartGameTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setStartGameTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_cancelStartGameTimeEvent
// Il2CppName: add_cancelStartGameTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_cancelStartGameTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_cancelStartGameTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_cancelStartGameTimeEvent
// Il2CppName: remove_cancelStartGameTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_cancelStartGameTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_cancelStartGameTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getIsInLobbyEvent
// Il2CppName: add_getIsInLobbyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_getIsInLobbyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getIsInLobbyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getIsInLobbyEvent
// Il2CppName: remove_getIsInLobbyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_getIsInLobbyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getIsInLobbyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setIsInLobbyEvent
// Il2CppName: add_setIsInLobbyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, bool>*)>(&GlobalNamespace::MenuRpcManager::add_setIsInLobbyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setIsInLobbyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setIsInLobbyEvent
// Il2CppName: remove_setIsInLobbyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, bool>*)>(&GlobalNamespace::MenuRpcManager::remove_setIsInLobbyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setIsInLobbyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getOwnedSongPacksEvent
// Il2CppName: add_getOwnedSongPacksEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_getOwnedSongPacksEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getOwnedSongPacksEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getOwnedSongPacksEvent
// Il2CppName: remove_getOwnedSongPacksEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_1<::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_getOwnedSongPacksEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getOwnedSongPacksEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setOwnedSongPacksEvent
// Il2CppName: add_setOwnedSongPacksEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::SongPackMask>*)>(&GlobalNamespace::MenuRpcManager::add_setOwnedSongPacksEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "SongPackMask")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setOwnedSongPacksEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setOwnedSongPacksEvent
// Il2CppName: remove_setOwnedSongPacksEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::GlobalNamespace::SongPackMask>*)>(&GlobalNamespace::MenuRpcManager::remove_setOwnedSongPacksEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "SongPackMask")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setOwnedSongPacksEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_requestedKickPlayerEvent
// Il2CppName: add_requestedKickPlayerEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::StringW>*)>(&GlobalNamespace::MenuRpcManager::add_requestedKickPlayerEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_requestedKickPlayerEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_requestedKickPlayerEvent
// Il2CppName: remove_requestedKickPlayerEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::System::Action_2<::StringW, ::StringW>*)>(&GlobalNamespace::MenuRpcManager::remove_requestedKickPlayerEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_requestedKickPlayerEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::EnabledForPlayer
// Il2CppName: EnabledForPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::MenuRpcManager::*)(::GlobalNamespace::IConnectedPlayer*)>(&GlobalNamespace::MenuRpcManager::EnabledForPlayer)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("", "IConnectedPlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "EnabledForPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetPlayersPermissionConfiguration
// Il2CppName: GetPlayersPermissionConfiguration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetPlayersPermissionConfiguration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetPlayersPermissionConfiguration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetPlayersPermissionConfiguration
// Il2CppName: InvokeGetPlayersPermissionConfiguration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeGetPlayersPermissionConfiguration)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetPlayersPermissionConfiguration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetPlayersPermissionConfiguration
// Il2CppName: SetPlayersPermissionConfiguration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*)>(&GlobalNamespace::MenuRpcManager::SetPlayersPermissionConfiguration)> {
  static const MethodInfo* get() {
    static auto* playersPermissionConfiguration = &::il2cpp_utils::GetClassFromName("", "PlayersLobbyPermissionConfigurationNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetPlayersPermissionConfiguration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playersPermissionConfiguration});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetPlayersPermissionConfiguration
// Il2CppName: InvokeSetPlayersPermissionConfiguration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*)>(&GlobalNamespace::MenuRpcManager::InvokeSetPlayersPermissionConfiguration)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* playersPermissionConfiguration = &::il2cpp_utils::GetClassFromName("", "PlayersLobbyPermissionConfigurationNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetPlayersPermissionConfiguration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, playersPermissionConfiguration});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetPlayersMissingEntitlementsToLevel
// Il2CppName: SetPlayersMissingEntitlementsToLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*)>(&GlobalNamespace::MenuRpcManager::SetPlayersMissingEntitlementsToLevel)> {
  static const MethodInfo* get() {
    static auto* playersMissingEntitlements = &::il2cpp_utils::GetClassFromName("", "PlayersMissingEntitlementsNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetPlayersMissingEntitlementsToLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playersMissingEntitlements});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetPlayersMissingEntitlementsToLevelRpc
// Il2CppName: InvokeSetPlayersMissingEntitlementsToLevelRpc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*)>(&GlobalNamespace::MenuRpcManager::InvokeSetPlayersMissingEntitlementsToLevelRpc)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* playersMissingEntitlements = &::il2cpp_utils::GetClassFromName("", "PlayersMissingEntitlementsNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetPlayersMissingEntitlementsToLevelRpc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, playersMissingEntitlements});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetIsEntitledToLevel
// Il2CppName: GetIsEntitledToLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::GetIsEntitledToLevel)> {
  static const MethodInfo* get() {
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetIsEntitledToLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetIsEntitledToLevel
// Il2CppName: InvokeGetIsEntitledToLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeGetIsEntitledToLevel)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetIsEntitledToLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, levelId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetIsEntitledToLevel
// Il2CppName: SetIsEntitledToLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::GlobalNamespace::EntitlementsStatus)>(&GlobalNamespace::MenuRpcManager::SetIsEntitledToLevel)> {
  static const MethodInfo* get() {
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* entitlementStatus = &::il2cpp_utils::GetClassFromName("", "EntitlementsStatus")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetIsEntitledToLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelId, entitlementStatus});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetIsEntitledToLevel
// Il2CppName: InvokeSetIsEntitledToLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::StringW, int)>(&GlobalNamespace::MenuRpcManager::InvokeSetIsEntitledToLevel)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* entitlementStatus = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetIsEntitledToLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, levelId, entitlementStatus});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvalidateLevelEntitlementStatuses
// Il2CppName: InvalidateLevelEntitlementStatuses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::InvalidateLevelEntitlementStatuses)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvalidateLevelEntitlementStatuses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeLevelEntitlementStatusesInvalidated
// Il2CppName: InvokeLevelEntitlementStatusesInvalidated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeLevelEntitlementStatusesInvalidated)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeLevelEntitlementStatusesInvalidated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SelectLevelPack
// Il2CppName: SelectLevelPack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::SelectLevelPack)> {
  static const MethodInfo* get() {
    static auto* levelPackId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SelectLevelPack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelPackId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeOnSelectedLevelPackEvent
// Il2CppName: InvokeOnSelectedLevelPackEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeOnSelectedLevelPackEvent)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* levelPackId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeOnSelectedLevelPackEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, levelPackId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetSelectedBeatmap
// Il2CppName: SetSelectedBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::GlobalNamespace::BeatmapIdentifierNetSerializable*)>(&GlobalNamespace::MenuRpcManager::SetSelectedBeatmap)> {
  static const MethodInfo* get() {
    static auto* identifier = &::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetSelectedBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{identifier});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetSelectedBeatmap
// Il2CppName: InvokeSetSelectedBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*)>(&GlobalNamespace::MenuRpcManager::InvokeSetSelectedBeatmap)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* identifier = &::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetSelectedBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, identifier});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::ClearSelectedBeatmap
// Il2CppName: ClearSelectedBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::ClearSelectedBeatmap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "ClearSelectedBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeClearSelectedBeatmap
// Il2CppName: InvokeClearSelectedBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeClearSelectedBeatmap)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeClearSelectedBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetSelectedBeatmap
// Il2CppName: GetSelectedBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetSelectedBeatmap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetSelectedBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetSelectedBeatmapRpc
// Il2CppName: InvokeGetSelectedBeatmapRpc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeGetSelectedBeatmapRpc)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetSelectedBeatmapRpc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::RecommendBeatmap
// Il2CppName: RecommendBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::GlobalNamespace::BeatmapIdentifierNetSerializable*)>(&GlobalNamespace::MenuRpcManager::RecommendBeatmap)> {
  static const MethodInfo* get() {
    static auto* identifier = &::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "RecommendBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{identifier});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeRecommendBeatmap
// Il2CppName: InvokeRecommendBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*)>(&GlobalNamespace::MenuRpcManager::InvokeRecommendBeatmap)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* identifier = &::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeRecommendBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, identifier});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::ClearRecommendedBeatmap
// Il2CppName: ClearRecommendedBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::ClearRecommendedBeatmap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "ClearRecommendedBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeClearRecommendedBeatmap
// Il2CppName: InvokeClearRecommendedBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeClearRecommendedBeatmap)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeClearRecommendedBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetRecommendedBeatmap
// Il2CppName: GetRecommendedBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetRecommendedBeatmap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetRecommendedBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetRecommendedBeatmap
// Il2CppName: InvokeGetRecommendedBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeGetRecommendedBeatmap)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetRecommendedBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetSelectedGameplayModifiers
// Il2CppName: SetSelectedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::GlobalNamespace::GameplayModifiers*)>(&GlobalNamespace::MenuRpcManager::SetSelectedGameplayModifiers)> {
  static const MethodInfo* get() {
    static auto* gameplayModifiers = &::il2cpp_utils::GetClassFromName("", "GameplayModifiers")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetSelectedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameplayModifiers});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetSelectedGameplayModifiers
// Il2CppName: InvokeSetSelectedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::GlobalNamespace::GameplayModifiers*)>(&GlobalNamespace::MenuRpcManager::InvokeSetSelectedGameplayModifiers)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* gameplayModifiers = &::il2cpp_utils::GetClassFromName("", "GameplayModifiers")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetSelectedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, gameplayModifiers});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::ClearSelectedGameplayModifiers
// Il2CppName: ClearSelectedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::ClearSelectedGameplayModifiers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "ClearSelectedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeClearSelectedGameplayModifiers
// Il2CppName: InvokeClearSelectedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeClearSelectedGameplayModifiers)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeClearSelectedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetSelectedGameplayModifiers
// Il2CppName: GetSelectedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetSelectedGameplayModifiers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetSelectedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetSelectedGameplayModifiers
// Il2CppName: InvokeGetSelectedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeGetSelectedGameplayModifiers)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetSelectedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::RecommendGameplayModifiers
// Il2CppName: RecommendGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::GlobalNamespace::GameplayModifiers*)>(&GlobalNamespace::MenuRpcManager::RecommendGameplayModifiers)> {
  static const MethodInfo* get() {
    static auto* gameplayModifiers = &::il2cpp_utils::GetClassFromName("", "GameplayModifiers")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "RecommendGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameplayModifiers});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeRecommendGameplayModifiers
// Il2CppName: InvokeRecommendGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::GlobalNamespace::GameplayModifiers*)>(&GlobalNamespace::MenuRpcManager::InvokeRecommendGameplayModifiers)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* gameplayModifiers = &::il2cpp_utils::GetClassFromName("", "GameplayModifiers")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeRecommendGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, gameplayModifiers});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::ClearRecommendedGameplayModifiers
// Il2CppName: ClearRecommendedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::ClearRecommendedGameplayModifiers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "ClearRecommendedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeClearRecommendedGameplayModifiers
// Il2CppName: InvokeClearRecommendedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeClearRecommendedGameplayModifiers)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeClearRecommendedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetRecommendedGameplayModifiers
// Il2CppName: GetRecommendedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetRecommendedGameplayModifiers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetRecommendedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetRecommendedGameplayModifiers
// Il2CppName: InvokeGetRecommendedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeGetRecommendedGameplayModifiers)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetRecommendedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetIsStartButtonEnabled
// Il2CppName: GetIsStartButtonEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetIsStartButtonEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetIsStartButtonEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetIsStartButtonEnabled
// Il2CppName: InvokeGetIsStartButtonEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeGetIsStartButtonEnabled)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetIsStartButtonEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetIsStartButtonEnabled
// Il2CppName: SetIsStartButtonEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::GlobalNamespace::CannotStartGameReason)>(&GlobalNamespace::MenuRpcManager::SetIsStartButtonEnabled)> {
  static const MethodInfo* get() {
    static auto* reason = &::il2cpp_utils::GetClassFromName("", "CannotStartGameReason")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetIsStartButtonEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reason});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetIsStartButtonEnabled
// Il2CppName: InvokeSetIsStartButtonEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::GlobalNamespace::CannotStartGameReason)>(&GlobalNamespace::MenuRpcManager::InvokeSetIsStartButtonEnabled)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* reason = &::il2cpp_utils::GetClassFromName("", "CannotStartGameReason")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetIsStartButtonEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, reason});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::LevelLoadError
// Il2CppName: LevelLoadError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::LevelLoadError)> {
  static const MethodInfo* get() {
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "LevelLoadError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeLevelLoadError
// Il2CppName: InvokeLevelLoadError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeLevelLoadError)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeLevelLoadError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, levelId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::LevelLoadSuccess
// Il2CppName: LevelLoadSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::LevelLoadSuccess)> {
  static const MethodInfo* get() {
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "LevelLoadSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeLevelLoadSuccess
// Il2CppName: InvokeLevelLoadSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeLevelLoadSuccess)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeLevelLoadSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, levelId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::StartLevel
// Il2CppName: StartLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::GlobalNamespace::BeatmapIdentifierNetSerializable*, ::GlobalNamespace::GameplayModifiers*, float)>(&GlobalNamespace::MenuRpcManager::StartLevel)> {
  static const MethodInfo* get() {
    static auto* beatmapId = &::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")->byval_arg;
    static auto* gameplayModifiers = &::il2cpp_utils::GetClassFromName("", "GameplayModifiers")->byval_arg;
    static auto* startTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "StartLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{beatmapId, gameplayModifiers, startTime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeStartLevel
// Il2CppName: InvokeStartLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*, ::GlobalNamespace::GameplayModifiers*, float)>(&GlobalNamespace::MenuRpcManager::InvokeStartLevel)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* beatmapId = &::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")->byval_arg;
    static auto* gameplayModifiers = &::il2cpp_utils::GetClassFromName("", "GameplayModifiers")->byval_arg;
    static auto* startTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeStartLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, beatmapId, gameplayModifiers, startTime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetStartedLevel
// Il2CppName: GetStartedLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetStartedLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetStartedLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetStartedLevel
// Il2CppName: InvokeGetStartedLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeGetStartedLevel)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetStartedLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetMultiplayerGameState
// Il2CppName: GetMultiplayerGameState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetMultiplayerGameState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetMultiplayerGameState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetMultiplayerGameState
// Il2CppName: InvokeGetMultiplayerGameState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeGetMultiplayerGameState)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetMultiplayerGameState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetMultiplayerGameState
// Il2CppName: SetMultiplayerGameState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::GlobalNamespace::MultiplayerGameState)>(&GlobalNamespace::MenuRpcManager::SetMultiplayerGameState)> {
  static const MethodInfo* get() {
    static auto* lobbyState = &::il2cpp_utils::GetClassFromName("", "MultiplayerGameState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetMultiplayerGameState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lobbyState});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetMultiplayerGameState
// Il2CppName: InvokeSetMultiplayerGameState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::GlobalNamespace::MultiplayerGameState)>(&GlobalNamespace::MenuRpcManager::InvokeSetMultiplayerGameState)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* lobbyState = &::il2cpp_utils::GetClassFromName("", "MultiplayerGameState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetMultiplayerGameState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, lobbyState});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::CancelCountdown
// Il2CppName: CancelCountdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::CancelCountdown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "CancelCountdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeCancelCountdown
// Il2CppName: InvokeCancelCountdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeCancelCountdown)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeCancelCountdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetCountdownEndTime
// Il2CppName: SetCountdownEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(float)>(&GlobalNamespace::MenuRpcManager::SetCountdownEndTime)> {
  static const MethodInfo* get() {
    static auto* newTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetCountdownEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newTime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetCountdownEndTime
// Il2CppName: InvokeSetCountdownEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, float)>(&GlobalNamespace::MenuRpcManager::InvokeSetCountdownEndTime)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* newTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetCountdownEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, newTime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetCountdownEndTime
// Il2CppName: GetCountdownEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetCountdownEndTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetCountdownEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetCountdownEndTime
// Il2CppName: InvokeGetCountdownEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeGetCountdownEndTime)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetCountdownEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::CancelLevelStart
// Il2CppName: CancelLevelStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::CancelLevelStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "CancelLevelStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeCancelLevelStart
// Il2CppName: InvokeCancelLevelStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeCancelLevelStart)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeCancelLevelStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetIsReady
// Il2CppName: GetIsReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetIsReady)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetIsReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetIsReady
// Il2CppName: InvokeGetIsReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeGetIsReady)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetIsReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetIsReady
// Il2CppName: SetIsReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(bool)>(&GlobalNamespace::MenuRpcManager::SetIsReady)> {
  static const MethodInfo* get() {
    static auto* isReady = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetIsReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isReady});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetIsReady
// Il2CppName: InvokeSetIsReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, bool)>(&GlobalNamespace::MenuRpcManager::InvokeSetIsReady)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isReady = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetIsReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, isReady});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetStartGameTime
// Il2CppName: SetStartGameTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(float)>(&GlobalNamespace::MenuRpcManager::SetStartGameTime)> {
  static const MethodInfo* get() {
    static auto* newTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetStartGameTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newTime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetStartGameCountdown
// Il2CppName: InvokeSetStartGameCountdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, float)>(&GlobalNamespace::MenuRpcManager::InvokeSetStartGameCountdown)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* newTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetStartGameCountdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, newTime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::CancelStartGameTime
// Il2CppName: CancelStartGameTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::CancelStartGameTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "CancelStartGameTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeCancelStartGameCountdown
// Il2CppName: InvokeCancelStartGameCountdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeCancelStartGameCountdown)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeCancelStartGameCountdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetIsInLobby
// Il2CppName: GetIsInLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetIsInLobby)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetIsInLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetIsInLobby
// Il2CppName: InvokeGetIsInLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeGetIsInLobby)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetIsInLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetIsInLobby
// Il2CppName: SetIsInLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(bool)>(&GlobalNamespace::MenuRpcManager::SetIsInLobby)> {
  static const MethodInfo* get() {
    static auto* isBack = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetIsInLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isBack});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetIsInLobby
// Il2CppName: InvokeSetIsInLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, bool)>(&GlobalNamespace::MenuRpcManager::InvokeSetIsInLobby)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isBack = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetIsInLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, isBack});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetOwnedSongPacks
// Il2CppName: GetOwnedSongPacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetOwnedSongPacks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetOwnedSongPacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetOwnedSongPacks
// Il2CppName: InvokeGetOwnedSongPacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeGetOwnedSongPacks)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetOwnedSongPacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetOwnedSongPacks
// Il2CppName: SetOwnedSongPacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::GlobalNamespace::SongPackMask)>(&GlobalNamespace::MenuRpcManager::SetOwnedSongPacks)> {
  static const MethodInfo* get() {
    static auto* songPackMask = &::il2cpp_utils::GetClassFromName("", "SongPackMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetOwnedSongPacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{songPackMask});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetOwnedSongPacks
// Il2CppName: InvokeSetOwnedSongPacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::GlobalNamespace::SongPackMask)>(&GlobalNamespace::MenuRpcManager::InvokeSetOwnedSongPacks)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* songPackMask = &::il2cpp_utils::GetClassFromName("", "SongPackMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetOwnedSongPacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, songPackMask});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::RequestKickPlayer
// Il2CppName: RequestKickPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW)>(&GlobalNamespace::MenuRpcManager::RequestKickPlayer)> {
  static const MethodInfo* get() {
    static auto* kickedPlayerId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "RequestKickPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{kickedPlayerId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeKickPlayer
// Il2CppName: InvokeKickPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::StringW, ::StringW)>(&GlobalNamespace::MenuRpcManager::InvokeKickPlayer)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* kickedPlayerId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeKickPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, kickedPlayerId});
  }
};
