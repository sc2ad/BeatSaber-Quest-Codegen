// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
  // Forward declaring type: Action`4<T1, T2, T3, T4>
  template<typename T1, typename T2, typename T3, typename T4>
  class Action_4;
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IMultiplayerSessionManager
  class IMultiplayerSessionManager;
  // Forward declaring type: RpcHandler`1<TType>
  template<typename TType>
  class RpcHandler_1;
  // Forward declaring type: PlayersLobbyPermissionConfigurationNetSerializable
  class PlayersLobbyPermissionConfigurationNetSerializable;
  // Forward declaring type: PlayersMissingEntitlementsNetSerializable
  class PlayersMissingEntitlementsNetSerializable;
  // Forward declaring type: BeatmapIdentifierNetSerializable
  class BeatmapIdentifierNetSerializable;
  // Forward declaring type: GameplayModifiers
  class GameplayModifiers;
  // Forward declaring type: IConnectedPlayer
  class IConnectedPlayer;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x150
  #pragma pack(push, 1)
  // Autogenerated type: MenuRpcManager
  // [TokenAttribute] Offset: FFFFFFFF
  class MenuRpcManager : public ::Il2CppObject/*, public GlobalNamespace::IMenuRpcManager*/ {
    public:
    // Nested type: GlobalNamespace::MenuRpcManager::RpcType
    struct RpcType;
    // Nested type: GlobalNamespace::MenuRpcManager::GetPlayersPermissionConfigurationRpc
    class GetPlayersPermissionConfigurationRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::SetPlayersPermissionConfigurationRpc
    class SetPlayersPermissionConfigurationRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::SetPlayersMissingEntitlementsToLevelRpc
    class SetPlayersMissingEntitlementsToLevelRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::GetIsEntitledToLevelRpc
    class GetIsEntitledToLevelRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::SetIsEntitledToLevelRpc
    class SetIsEntitledToLevelRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::InvalidateLevelEntitlementStatusesRpc
    class InvalidateLevelEntitlementStatusesRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::SelectLevelPackRpc
    class SelectLevelPackRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::SetSelectedBeatmapRpc
    class SetSelectedBeatmapRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::GetSelectedBeatmapRpc
    class GetSelectedBeatmapRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::RecommendBeatmapRpc
    class RecommendBeatmapRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::ClearRecommendedBeatmapRpc
    class ClearRecommendedBeatmapRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::GetRecommendedBeatmapRpc
    class GetRecommendedBeatmapRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::SetSelectedGameplayModifiersRpc
    class SetSelectedGameplayModifiersRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::GetSelectedGameplayModifiersRpc
    class GetSelectedGameplayModifiersRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::RecommendGameplayModifiersRpc
    class RecommendGameplayModifiersRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::ClearRecommendedGameplayModifiersRpc
    class ClearRecommendedGameplayModifiersRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::GetRecommendedGameplayModifiersRpc
    class GetRecommendedGameplayModifiersRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::GetIsStartButtonEnabledRpc
    class GetIsStartButtonEnabledRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::SetIsStartButtonEnabledRpc
    class SetIsStartButtonEnabledRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::LevelLoadErrorRpc
    class LevelLoadErrorRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::LevelLoadSuccessRpc
    class LevelLoadSuccessRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::StartLevelRpc
    class StartLevelRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::GetStartedLevelRpc
    class GetStartedLevelRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::GetMultiplayerGameStateRpc
    class GetMultiplayerGameStateRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::SetMultiplayerGameStateRpc
    class SetMultiplayerGameStateRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::CancelCountdownRpc
    class CancelCountdownRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::SetCountdownEndTimeRpc
    class SetCountdownEndTimeRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::GetCountdownEndTimeRpc
    class GetCountdownEndTimeRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::CancelLevelStartRpc
    class CancelLevelStartRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::GetIsReadyRpc
    class GetIsReadyRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::SetIsReadyRpc
    class SetIsReadyRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::SetStartGameTimeRpc
    class SetStartGameTimeRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::CancelStartGameTimeRpc
    class CancelStartGameTimeRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::GetIsInLobbyRpc
    class GetIsInLobbyRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::SetIsInLobbyRpc
    class SetIsInLobbyRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::GetOwnedSongPacksRpc
    class GetOwnedSongPacksRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::SetOwnedSongPacksRpc
    class SetOwnedSongPacksRpc;
    // Nested type: GlobalNamespace::MenuRpcManager::RequestKickPlayerRpc
    class RequestKickPlayerRpc;
    // Size: 0x1
    #pragma pack(push, 1)
    // Autogenerated type: MenuRpcManager/RpcType
    // [TokenAttribute] Offset: FFFFFFFF
    struct RpcType/*, public System::Enum*/ {
      public:
      // public System.Byte value__
      // Size: 0x1
      // Offset: 0x0
      uint8_t value;
      // Field size check
      static_assert(sizeof(uint8_t) == 0x1);
      // Creating value type constructor for type: RpcType
      constexpr RpcType(uint8_t value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator System::Enum
      operator System::Enum() noexcept {
        return *reinterpret_cast<System::Enum*>(this);
      }
      // Creating conversion operator: operator uint8_t
      constexpr operator uint8_t() const noexcept {
        return value;
      }
      // static field const value: static public MenuRpcManager/RpcType SetPlayersMissingEntitlementsToLevel
      static constexpr const uint8_t SetPlayersMissingEntitlementsToLevel = 0u;
      // Get static field: static public MenuRpcManager/RpcType SetPlayersMissingEntitlementsToLevel
      static GlobalNamespace::MenuRpcManager::RpcType _get_SetPlayersMissingEntitlementsToLevel();
      // Set static field: static public MenuRpcManager/RpcType SetPlayersMissingEntitlementsToLevel
      static void _set_SetPlayersMissingEntitlementsToLevel(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetIsEntitledToLevel
      static constexpr const uint8_t GetIsEntitledToLevel = 1u;
      // Get static field: static public MenuRpcManager/RpcType GetIsEntitledToLevel
      static GlobalNamespace::MenuRpcManager::RpcType _get_GetIsEntitledToLevel();
      // Set static field: static public MenuRpcManager/RpcType GetIsEntitledToLevel
      static void _set_GetIsEntitledToLevel(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetIsEntitledToLevel
      static constexpr const uint8_t SetIsEntitledToLevel = 2u;
      // Get static field: static public MenuRpcManager/RpcType SetIsEntitledToLevel
      static GlobalNamespace::MenuRpcManager::RpcType _get_SetIsEntitledToLevel();
      // Set static field: static public MenuRpcManager/RpcType SetIsEntitledToLevel
      static void _set_SetIsEntitledToLevel(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType InvalidateLevelEntitlementStatuses
      static constexpr const uint8_t InvalidateLevelEntitlementStatuses = 3u;
      // Get static field: static public MenuRpcManager/RpcType InvalidateLevelEntitlementStatuses
      static GlobalNamespace::MenuRpcManager::RpcType _get_InvalidateLevelEntitlementStatuses();
      // Set static field: static public MenuRpcManager/RpcType InvalidateLevelEntitlementStatuses
      static void _set_InvalidateLevelEntitlementStatuses(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SelectLevelPack
      static constexpr const uint8_t SelectLevelPack = 4u;
      // Get static field: static public MenuRpcManager/RpcType SelectLevelPack
      static GlobalNamespace::MenuRpcManager::RpcType _get_SelectLevelPack();
      // Set static field: static public MenuRpcManager/RpcType SelectLevelPack
      static void _set_SelectLevelPack(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetSelectedBeatmap
      static constexpr const uint8_t SetSelectedBeatmap = 5u;
      // Get static field: static public MenuRpcManager/RpcType SetSelectedBeatmap
      static GlobalNamespace::MenuRpcManager::RpcType _get_SetSelectedBeatmap();
      // Set static field: static public MenuRpcManager/RpcType SetSelectedBeatmap
      static void _set_SetSelectedBeatmap(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetSelectedBeatmap
      static constexpr const uint8_t GetSelectedBeatmap = 6u;
      // Get static field: static public MenuRpcManager/RpcType GetSelectedBeatmap
      static GlobalNamespace::MenuRpcManager::RpcType _get_GetSelectedBeatmap();
      // Set static field: static public MenuRpcManager/RpcType GetSelectedBeatmap
      static void _set_GetSelectedBeatmap(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType RecommendBeatmap
      static constexpr const uint8_t RecommendBeatmap = 7u;
      // Get static field: static public MenuRpcManager/RpcType RecommendBeatmap
      static GlobalNamespace::MenuRpcManager::RpcType _get_RecommendBeatmap();
      // Set static field: static public MenuRpcManager/RpcType RecommendBeatmap
      static void _set_RecommendBeatmap(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType ClearRecommendedBeatmap
      static constexpr const uint8_t ClearRecommendedBeatmap = 8u;
      // Get static field: static public MenuRpcManager/RpcType ClearRecommendedBeatmap
      static GlobalNamespace::MenuRpcManager::RpcType _get_ClearRecommendedBeatmap();
      // Set static field: static public MenuRpcManager/RpcType ClearRecommendedBeatmap
      static void _set_ClearRecommendedBeatmap(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetRecommendedBeatmap
      static constexpr const uint8_t GetRecommendedBeatmap = 9u;
      // Get static field: static public MenuRpcManager/RpcType GetRecommendedBeatmap
      static GlobalNamespace::MenuRpcManager::RpcType _get_GetRecommendedBeatmap();
      // Set static field: static public MenuRpcManager/RpcType GetRecommendedBeatmap
      static void _set_GetRecommendedBeatmap(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetSelectedGameplayModifiers
      static constexpr const uint8_t SetSelectedGameplayModifiers = 10u;
      // Get static field: static public MenuRpcManager/RpcType SetSelectedGameplayModifiers
      static GlobalNamespace::MenuRpcManager::RpcType _get_SetSelectedGameplayModifiers();
      // Set static field: static public MenuRpcManager/RpcType SetSelectedGameplayModifiers
      static void _set_SetSelectedGameplayModifiers(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetSelectedGameplayModifiers
      static constexpr const uint8_t GetSelectedGameplayModifiers = 11u;
      // Get static field: static public MenuRpcManager/RpcType GetSelectedGameplayModifiers
      static GlobalNamespace::MenuRpcManager::RpcType _get_GetSelectedGameplayModifiers();
      // Set static field: static public MenuRpcManager/RpcType GetSelectedGameplayModifiers
      static void _set_GetSelectedGameplayModifiers(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType RecommendGameplayModifiers
      static constexpr const uint8_t RecommendGameplayModifiers = 12u;
      // Get static field: static public MenuRpcManager/RpcType RecommendGameplayModifiers
      static GlobalNamespace::MenuRpcManager::RpcType _get_RecommendGameplayModifiers();
      // Set static field: static public MenuRpcManager/RpcType RecommendGameplayModifiers
      static void _set_RecommendGameplayModifiers(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType ClearRecommendedGameplayModifiers
      static constexpr const uint8_t ClearRecommendedGameplayModifiers = 13u;
      // Get static field: static public MenuRpcManager/RpcType ClearRecommendedGameplayModifiers
      static GlobalNamespace::MenuRpcManager::RpcType _get_ClearRecommendedGameplayModifiers();
      // Set static field: static public MenuRpcManager/RpcType ClearRecommendedGameplayModifiers
      static void _set_ClearRecommendedGameplayModifiers(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetRecommendedGameplayModifiers
      static constexpr const uint8_t GetRecommendedGameplayModifiers = 14u;
      // Get static field: static public MenuRpcManager/RpcType GetRecommendedGameplayModifiers
      static GlobalNamespace::MenuRpcManager::RpcType _get_GetRecommendedGameplayModifiers();
      // Set static field: static public MenuRpcManager/RpcType GetRecommendedGameplayModifiers
      static void _set_GetRecommendedGameplayModifiers(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType LevelLoadError
      static constexpr const uint8_t LevelLoadError = 15u;
      // Get static field: static public MenuRpcManager/RpcType LevelLoadError
      static GlobalNamespace::MenuRpcManager::RpcType _get_LevelLoadError();
      // Set static field: static public MenuRpcManager/RpcType LevelLoadError
      static void _set_LevelLoadError(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType LevelLoadSuccess
      static constexpr const uint8_t LevelLoadSuccess = 16u;
      // Get static field: static public MenuRpcManager/RpcType LevelLoadSuccess
      static GlobalNamespace::MenuRpcManager::RpcType _get_LevelLoadSuccess();
      // Set static field: static public MenuRpcManager/RpcType LevelLoadSuccess
      static void _set_LevelLoadSuccess(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType StartLevel
      static constexpr const uint8_t StartLevel = 17u;
      // Get static field: static public MenuRpcManager/RpcType StartLevel
      static GlobalNamespace::MenuRpcManager::RpcType _get_StartLevel();
      // Set static field: static public MenuRpcManager/RpcType StartLevel
      static void _set_StartLevel(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetStartedLevel
      static constexpr const uint8_t GetStartedLevel = 18u;
      // Get static field: static public MenuRpcManager/RpcType GetStartedLevel
      static GlobalNamespace::MenuRpcManager::RpcType _get_GetStartedLevel();
      // Set static field: static public MenuRpcManager/RpcType GetStartedLevel
      static void _set_GetStartedLevel(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType CancelLevelStart
      static constexpr const uint8_t CancelLevelStart = 19u;
      // Get static field: static public MenuRpcManager/RpcType CancelLevelStart
      static GlobalNamespace::MenuRpcManager::RpcType _get_CancelLevelStart();
      // Set static field: static public MenuRpcManager/RpcType CancelLevelStart
      static void _set_CancelLevelStart(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetMultiplayerGameState
      static constexpr const uint8_t GetMultiplayerGameState = 20u;
      // Get static field: static public MenuRpcManager/RpcType GetMultiplayerGameState
      static GlobalNamespace::MenuRpcManager::RpcType _get_GetMultiplayerGameState();
      // Set static field: static public MenuRpcManager/RpcType GetMultiplayerGameState
      static void _set_GetMultiplayerGameState(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetMultiplayerGameState
      static constexpr const uint8_t SetMultiplayerGameState = 21u;
      // Get static field: static public MenuRpcManager/RpcType SetMultiplayerGameState
      static GlobalNamespace::MenuRpcManager::RpcType _get_SetMultiplayerGameState();
      // Set static field: static public MenuRpcManager/RpcType SetMultiplayerGameState
      static void _set_SetMultiplayerGameState(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetIsReady
      static constexpr const uint8_t GetIsReady = 22u;
      // Get static field: static public MenuRpcManager/RpcType GetIsReady
      static GlobalNamespace::MenuRpcManager::RpcType _get_GetIsReady();
      // Set static field: static public MenuRpcManager/RpcType GetIsReady
      static void _set_GetIsReady(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetIsReady
      static constexpr const uint8_t SetIsReady = 23u;
      // Get static field: static public MenuRpcManager/RpcType SetIsReady
      static GlobalNamespace::MenuRpcManager::RpcType _get_SetIsReady();
      // Set static field: static public MenuRpcManager/RpcType SetIsReady
      static void _set_SetIsReady(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetStartGameTime
      static constexpr const uint8_t SetStartGameTime = 24u;
      // Get static field: static public MenuRpcManager/RpcType SetStartGameTime
      static GlobalNamespace::MenuRpcManager::RpcType _get_SetStartGameTime();
      // Set static field: static public MenuRpcManager/RpcType SetStartGameTime
      static void _set_SetStartGameTime(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType CancelStartGameTime
      static constexpr const uint8_t CancelStartGameTime = 25u;
      // Get static field: static public MenuRpcManager/RpcType CancelStartGameTime
      static GlobalNamespace::MenuRpcManager::RpcType _get_CancelStartGameTime();
      // Set static field: static public MenuRpcManager/RpcType CancelStartGameTime
      static void _set_CancelStartGameTime(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetIsInLobby
      static constexpr const uint8_t GetIsInLobby = 26u;
      // Get static field: static public MenuRpcManager/RpcType GetIsInLobby
      static GlobalNamespace::MenuRpcManager::RpcType _get_GetIsInLobby();
      // Set static field: static public MenuRpcManager/RpcType GetIsInLobby
      static void _set_GetIsInLobby(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetIsInLobby
      static constexpr const uint8_t SetIsInLobby = 27u;
      // Get static field: static public MenuRpcManager/RpcType SetIsInLobby
      static GlobalNamespace::MenuRpcManager::RpcType _get_SetIsInLobby();
      // Set static field: static public MenuRpcManager/RpcType SetIsInLobby
      static void _set_SetIsInLobby(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetCountdownEndTime
      static constexpr const uint8_t GetCountdownEndTime = 28u;
      // Get static field: static public MenuRpcManager/RpcType GetCountdownEndTime
      static GlobalNamespace::MenuRpcManager::RpcType _get_GetCountdownEndTime();
      // Set static field: static public MenuRpcManager/RpcType GetCountdownEndTime
      static void _set_GetCountdownEndTime(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetCountdownEndTime
      static constexpr const uint8_t SetCountdownEndTime = 29u;
      // Get static field: static public MenuRpcManager/RpcType SetCountdownEndTime
      static GlobalNamespace::MenuRpcManager::RpcType _get_SetCountdownEndTime();
      // Set static field: static public MenuRpcManager/RpcType SetCountdownEndTime
      static void _set_SetCountdownEndTime(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType CancelCountdown
      static constexpr const uint8_t CancelCountdown = 30u;
      // Get static field: static public MenuRpcManager/RpcType CancelCountdown
      static GlobalNamespace::MenuRpcManager::RpcType _get_CancelCountdown();
      // Set static field: static public MenuRpcManager/RpcType CancelCountdown
      static void _set_CancelCountdown(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetOwnedSongPacks
      static constexpr const uint8_t GetOwnedSongPacks = 31u;
      // Get static field: static public MenuRpcManager/RpcType GetOwnedSongPacks
      static GlobalNamespace::MenuRpcManager::RpcType _get_GetOwnedSongPacks();
      // Set static field: static public MenuRpcManager/RpcType GetOwnedSongPacks
      static void _set_GetOwnedSongPacks(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetOwnedSongPacks
      static constexpr const uint8_t SetOwnedSongPacks = 32u;
      // Get static field: static public MenuRpcManager/RpcType SetOwnedSongPacks
      static GlobalNamespace::MenuRpcManager::RpcType _get_SetOwnedSongPacks();
      // Set static field: static public MenuRpcManager/RpcType SetOwnedSongPacks
      static void _set_SetOwnedSongPacks(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType RequestKickPlayer
      static constexpr const uint8_t RequestKickPlayer = 33u;
      // Get static field: static public MenuRpcManager/RpcType RequestKickPlayer
      static GlobalNamespace::MenuRpcManager::RpcType _get_RequestKickPlayer();
      // Set static field: static public MenuRpcManager/RpcType RequestKickPlayer
      static void _set_RequestKickPlayer(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetPermissionConfiguration
      static constexpr const uint8_t GetPermissionConfiguration = 34u;
      // Get static field: static public MenuRpcManager/RpcType GetPermissionConfiguration
      static GlobalNamespace::MenuRpcManager::RpcType _get_GetPermissionConfiguration();
      // Set static field: static public MenuRpcManager/RpcType GetPermissionConfiguration
      static void _set_GetPermissionConfiguration(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetPermissionConfiguration
      static constexpr const uint8_t SetPermissionConfiguration = 35u;
      // Get static field: static public MenuRpcManager/RpcType SetPermissionConfiguration
      static GlobalNamespace::MenuRpcManager::RpcType _get_SetPermissionConfiguration();
      // Set static field: static public MenuRpcManager/RpcType SetPermissionConfiguration
      static void _set_SetPermissionConfiguration(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType GetIsStartButtonEnabled
      static constexpr const uint8_t GetIsStartButtonEnabled = 36u;
      // Get static field: static public MenuRpcManager/RpcType GetIsStartButtonEnabled
      static GlobalNamespace::MenuRpcManager::RpcType _get_GetIsStartButtonEnabled();
      // Set static field: static public MenuRpcManager/RpcType GetIsStartButtonEnabled
      static void _set_GetIsStartButtonEnabled(GlobalNamespace::MenuRpcManager::RpcType value);
      // static field const value: static public MenuRpcManager/RpcType SetIsStartButtonEnabled
      static constexpr const uint8_t SetIsStartButtonEnabled = 37u;
      // Get static field: static public MenuRpcManager/RpcType SetIsStartButtonEnabled
      static GlobalNamespace::MenuRpcManager::RpcType _get_SetIsStartButtonEnabled();
      // Set static field: static public MenuRpcManager/RpcType SetIsStartButtonEnabled
      static void _set_SetIsStartButtonEnabled(GlobalNamespace::MenuRpcManager::RpcType value);
      // Get instance field reference: public System.Byte value__
      uint8_t& dyn_value__();
    }; // MenuRpcManager/RpcType
    #pragma pack(pop)
    static check_size<sizeof(MenuRpcManager::RpcType), 0 + sizeof(uint8_t)> __GlobalNamespace_MenuRpcManager_RpcTypeSizeCheck;
    static_assert(sizeof(MenuRpcManager::RpcType) == 0x1);
    // private readonly IMultiplayerSessionManager _multiplayerSessionManager
    // Size: 0x8
    // Offset: 0x10
    GlobalNamespace::IMultiplayerSessionManager* multiplayerSessionManager;
    // Field size check
    static_assert(sizeof(GlobalNamespace::IMultiplayerSessionManager*) == 0x8);
    // private readonly RpcHandler`1<MenuRpcManager/RpcType> _rpcHandler
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::RpcHandler_1<GlobalNamespace::MenuRpcManager::RpcType>* rpcHandler;
    // Field size check
    static_assert(sizeof(GlobalNamespace::RpcHandler_1<GlobalNamespace::MenuRpcManager::RpcType>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9CC0
    // private System.Action`1<System.String> getPlayersPermissionConfigurationEvent
    // Size: 0x8
    // Offset: 0x20
    System::Action_1<::Il2CppString*>* getPlayersPermissionConfigurationEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9CD0
    // private System.Action`2<System.String,PlayersLobbyPermissionConfigurationNetSerializable> setPlayersPermissionConfigurationEvent
    // Size: 0x8
    // Offset: 0x28
    System::Action_2<::Il2CppString*, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* setPlayersPermissionConfigurationEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9CE0
    // private System.Action`2<System.String,PlayersMissingEntitlementsNetSerializable> setPlayersMissingEntitlementsToLevelEvent
    // Size: 0x8
    // Offset: 0x30
    System::Action_2<::Il2CppString*, GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* setPlayersMissingEntitlementsToLevelEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9CF0
    // private System.Action`2<System.String,System.String> getIsEntitledToLevelEvent
    // Size: 0x8
    // Offset: 0x38
    System::Action_2<::Il2CppString*, ::Il2CppString*>* getIsEntitledToLevelEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, ::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9D00
    // private System.Action`3<System.String,System.String,EntitlementsStatus> setIsEntitledToLevelEvent
    // Size: 0x8
    // Offset: 0x40
    System::Action_3<::Il2CppString*, ::Il2CppString*, GlobalNamespace::EntitlementsStatus>* setIsEntitledToLevelEvent;
    // Field size check
    static_assert(sizeof(System::Action_3<::Il2CppString*, ::Il2CppString*, GlobalNamespace::EntitlementsStatus>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9D10
    // private System.Action`1<System.String> levelEntitlementStatusesInvalidatedEvent
    // Size: 0x8
    // Offset: 0x48
    System::Action_1<::Il2CppString*>* levelEntitlementStatusesInvalidatedEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9D20
    // private System.Action`2<System.String,System.String> selectedLevelPackEvent
    // Size: 0x8
    // Offset: 0x50
    System::Action_2<::Il2CppString*, ::Il2CppString*>* selectedLevelPackEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, ::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9D30
    // private System.Action`2<System.String,BeatmapIdentifierNetSerializable> setSelectedBeatmapEvent
    // Size: 0x8
    // Offset: 0x58
    System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* setSelectedBeatmapEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9D40
    // private System.Action`1<System.String> getSelectedBeatmapEvent
    // Size: 0x8
    // Offset: 0x60
    System::Action_1<::Il2CppString*>* getSelectedBeatmapEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9D50
    // private System.Action`2<System.String,BeatmapIdentifierNetSerializable> recommendBeatmapEvent
    // Size: 0x8
    // Offset: 0x68
    System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* recommendBeatmapEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9D60
    // private System.Action`1<System.String> clearRecommendedBeatmapEvent
    // Size: 0x8
    // Offset: 0x70
    System::Action_1<::Il2CppString*>* clearRecommendedBeatmapEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9D70
    // private System.Action`1<System.String> getRecommendedBeatmapEvent
    // Size: 0x8
    // Offset: 0x78
    System::Action_1<::Il2CppString*>* getRecommendedBeatmapEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9D80
    // private System.Action`2<System.String,GameplayModifiers> setSelectGameplayModifiersEvent
    // Size: 0x8
    // Offset: 0x80
    System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* setSelectGameplayModifiersEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9D90
    // private System.Action`1<System.String> getSelectedGameplayModifiersEvent
    // Size: 0x8
    // Offset: 0x88
    System::Action_1<::Il2CppString*>* getSelectedGameplayModifiersEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9DA0
    // private System.Action`2<System.String,GameplayModifiers> recommendGameplayModifiersEvent
    // Size: 0x8
    // Offset: 0x90
    System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* recommendGameplayModifiersEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9DB0
    // private System.Action`1<System.String> clearRecommendedGameplayModifiersEvent
    // Size: 0x8
    // Offset: 0x98
    System::Action_1<::Il2CppString*>* clearRecommendedGameplayModifiersEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9DC0
    // private System.Action`1<System.String> getRecommendedGameplayModifiersEvent
    // Size: 0x8
    // Offset: 0xA0
    System::Action_1<::Il2CppString*>* getRecommendedGameplayModifiersEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9DD0
    // private System.Action`1<System.String> getIsStartButtonEnabledEvent
    // Size: 0x8
    // Offset: 0xA8
    System::Action_1<::Il2CppString*>* getIsStartButtonEnabledEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9DE0
    // private System.Action`2<System.String,CannotStartGameReason> setIsStartButtonEnabledEvent
    // Size: 0x8
    // Offset: 0xB0
    System::Action_2<::Il2CppString*, GlobalNamespace::CannotStartGameReason>* setIsStartButtonEnabledEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, GlobalNamespace::CannotStartGameReason>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9DF0
    // private System.Action`2<System.String,System.String> levelLoadErrorEvent
    // Size: 0x8
    // Offset: 0xB8
    System::Action_2<::Il2CppString*, ::Il2CppString*>* levelLoadErrorEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, ::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9E00
    // private System.Action`2<System.String,System.String> levelLoadSuccessEvent
    // Size: 0x8
    // Offset: 0xC0
    System::Action_2<::Il2CppString*, ::Il2CppString*>* levelLoadSuccessEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, ::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9E10
    // private System.Action`4<System.String,BeatmapIdentifierNetSerializable,GameplayModifiers,System.Single> startedLevelEvent
    // Size: 0x8
    // Offset: 0xC8
    System::Action_4<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float>* startedLevelEvent;
    // Field size check
    static_assert(sizeof(System::Action_4<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9E20
    // private System.Action`1<System.String> getStartedLevelEvent
    // Size: 0x8
    // Offset: 0xD0
    System::Action_1<::Il2CppString*>* getStartedLevelEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9E30
    // private System.Action`1<System.String> getMultiplayerGameStateEvent
    // Size: 0x8
    // Offset: 0xD8
    System::Action_1<::Il2CppString*>* getMultiplayerGameStateEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9E40
    // private System.Action`2<System.String,MultiplayerGameState> setMultiplayerGameStateEvent
    // Size: 0x8
    // Offset: 0xE0
    System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerGameState>* setMultiplayerGameStateEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerGameState>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9E50
    // private System.Action`1<System.String> cancelCountdownEvent
    // Size: 0x8
    // Offset: 0xE8
    System::Action_1<::Il2CppString*>* cancelCountdownEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9E60
    // private System.Action`2<System.String,System.Single> setCountdownEndTimeEvent
    // Size: 0x8
    // Offset: 0xF0
    System::Action_2<::Il2CppString*, float>* setCountdownEndTimeEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, float>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9E70
    // private System.Action`1<System.String> getCountdownEndTimeEvent
    // Size: 0x8
    // Offset: 0xF8
    System::Action_1<::Il2CppString*>* getCountdownEndTimeEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9E80
    // private System.Action`1<System.String> cancelledLevelStartEvent
    // Size: 0x8
    // Offset: 0x100
    System::Action_1<::Il2CppString*>* cancelledLevelStartEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9E90
    // private System.Action`1<System.String> getIsReadyEvent
    // Size: 0x8
    // Offset: 0x108
    System::Action_1<::Il2CppString*>* getIsReadyEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9EA0
    // private System.Action`2<System.String,System.Boolean> setIsReadyEvent
    // Size: 0x8
    // Offset: 0x110
    System::Action_2<::Il2CppString*, bool>* setIsReadyEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, bool>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9EB0
    // private System.Action`2<System.String,System.Single> setStartGameTimeEvent
    // Size: 0x8
    // Offset: 0x118
    System::Action_2<::Il2CppString*, float>* setStartGameTimeEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, float>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9EC0
    // private System.Action`1<System.String> cancelStartGameTimeEvent
    // Size: 0x8
    // Offset: 0x120
    System::Action_1<::Il2CppString*>* cancelStartGameTimeEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9ED0
    // private System.Action`1<System.String> getIsInLobbyEvent
    // Size: 0x8
    // Offset: 0x128
    System::Action_1<::Il2CppString*>* getIsInLobbyEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9EE0
    // private System.Action`2<System.String,System.Boolean> setIsInLobbyEvent
    // Size: 0x8
    // Offset: 0x130
    System::Action_2<::Il2CppString*, bool>* setIsInLobbyEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, bool>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9EF0
    // private System.Action`1<System.String> getOwnedSongPacksEvent
    // Size: 0x8
    // Offset: 0x138
    System::Action_1<::Il2CppString*>* getOwnedSongPacksEvent;
    // Field size check
    static_assert(sizeof(System::Action_1<::Il2CppString*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9F00
    // private System.Action`2<System.String,SongPackMask> setOwnedSongPacksEvent
    // Size: 0x8
    // Offset: 0x140
    System::Action_2<::Il2CppString*, GlobalNamespace::SongPackMask>* setOwnedSongPacksEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, GlobalNamespace::SongPackMask>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xED9F10
    // private System.Action`2<System.String,System.String> requestedKickPlayerEvent
    // Size: 0x8
    // Offset: 0x148
    System::Action_2<::Il2CppString*, ::Il2CppString*>* requestedKickPlayerEvent;
    // Field size check
    static_assert(sizeof(System::Action_2<::Il2CppString*, ::Il2CppString*>*) == 0x8);
    // Creating value type constructor for type: MenuRpcManager
    MenuRpcManager(GlobalNamespace::IMultiplayerSessionManager* multiplayerSessionManager_ = {}, GlobalNamespace::RpcHandler_1<GlobalNamespace::MenuRpcManager::RpcType>* rpcHandler_ = {}, System::Action_1<::Il2CppString*>* getPlayersPermissionConfigurationEvent_ = {}, System::Action_2<::Il2CppString*, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* setPlayersPermissionConfigurationEvent_ = {}, System::Action_2<::Il2CppString*, GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* setPlayersMissingEntitlementsToLevelEvent_ = {}, System::Action_2<::Il2CppString*, ::Il2CppString*>* getIsEntitledToLevelEvent_ = {}, System::Action_3<::Il2CppString*, ::Il2CppString*, GlobalNamespace::EntitlementsStatus>* setIsEntitledToLevelEvent_ = {}, System::Action_1<::Il2CppString*>* levelEntitlementStatusesInvalidatedEvent_ = {}, System::Action_2<::Il2CppString*, ::Il2CppString*>* selectedLevelPackEvent_ = {}, System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* setSelectedBeatmapEvent_ = {}, System::Action_1<::Il2CppString*>* getSelectedBeatmapEvent_ = {}, System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* recommendBeatmapEvent_ = {}, System::Action_1<::Il2CppString*>* clearRecommendedBeatmapEvent_ = {}, System::Action_1<::Il2CppString*>* getRecommendedBeatmapEvent_ = {}, System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* setSelectGameplayModifiersEvent_ = {}, System::Action_1<::Il2CppString*>* getSelectedGameplayModifiersEvent_ = {}, System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* recommendGameplayModifiersEvent_ = {}, System::Action_1<::Il2CppString*>* clearRecommendedGameplayModifiersEvent_ = {}, System::Action_1<::Il2CppString*>* getRecommendedGameplayModifiersEvent_ = {}, System::Action_1<::Il2CppString*>* getIsStartButtonEnabledEvent_ = {}, System::Action_2<::Il2CppString*, GlobalNamespace::CannotStartGameReason>* setIsStartButtonEnabledEvent_ = {}, System::Action_2<::Il2CppString*, ::Il2CppString*>* levelLoadErrorEvent_ = {}, System::Action_2<::Il2CppString*, ::Il2CppString*>* levelLoadSuccessEvent_ = {}, System::Action_4<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float>* startedLevelEvent_ = {}, System::Action_1<::Il2CppString*>* getStartedLevelEvent_ = {}, System::Action_1<::Il2CppString*>* getMultiplayerGameStateEvent_ = {}, System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerGameState>* setMultiplayerGameStateEvent_ = {}, System::Action_1<::Il2CppString*>* cancelCountdownEvent_ = {}, System::Action_2<::Il2CppString*, float>* setCountdownEndTimeEvent_ = {}, System::Action_1<::Il2CppString*>* getCountdownEndTimeEvent_ = {}, System::Action_1<::Il2CppString*>* cancelledLevelStartEvent_ = {}, System::Action_1<::Il2CppString*>* getIsReadyEvent_ = {}, System::Action_2<::Il2CppString*, bool>* setIsReadyEvent_ = {}, System::Action_2<::Il2CppString*, float>* setStartGameTimeEvent_ = {}, System::Action_1<::Il2CppString*>* cancelStartGameTimeEvent_ = {}, System::Action_1<::Il2CppString*>* getIsInLobbyEvent_ = {}, System::Action_2<::Il2CppString*, bool>* setIsInLobbyEvent_ = {}, System::Action_1<::Il2CppString*>* getOwnedSongPacksEvent_ = {}, System::Action_2<::Il2CppString*, GlobalNamespace::SongPackMask>* setOwnedSongPacksEvent_ = {}, System::Action_2<::Il2CppString*, ::Il2CppString*>* requestedKickPlayerEvent_ = {}) noexcept : multiplayerSessionManager{multiplayerSessionManager_}, rpcHandler{rpcHandler_}, getPlayersPermissionConfigurationEvent{getPlayersPermissionConfigurationEvent_}, setPlayersPermissionConfigurationEvent{setPlayersPermissionConfigurationEvent_}, setPlayersMissingEntitlementsToLevelEvent{setPlayersMissingEntitlementsToLevelEvent_}, getIsEntitledToLevelEvent{getIsEntitledToLevelEvent_}, setIsEntitledToLevelEvent{setIsEntitledToLevelEvent_}, levelEntitlementStatusesInvalidatedEvent{levelEntitlementStatusesInvalidatedEvent_}, selectedLevelPackEvent{selectedLevelPackEvent_}, setSelectedBeatmapEvent{setSelectedBeatmapEvent_}, getSelectedBeatmapEvent{getSelectedBeatmapEvent_}, recommendBeatmapEvent{recommendBeatmapEvent_}, clearRecommendedBeatmapEvent{clearRecommendedBeatmapEvent_}, getRecommendedBeatmapEvent{getRecommendedBeatmapEvent_}, setSelectGameplayModifiersEvent{setSelectGameplayModifiersEvent_}, getSelectedGameplayModifiersEvent{getSelectedGameplayModifiersEvent_}, recommendGameplayModifiersEvent{recommendGameplayModifiersEvent_}, clearRecommendedGameplayModifiersEvent{clearRecommendedGameplayModifiersEvent_}, getRecommendedGameplayModifiersEvent{getRecommendedGameplayModifiersEvent_}, getIsStartButtonEnabledEvent{getIsStartButtonEnabledEvent_}, setIsStartButtonEnabledEvent{setIsStartButtonEnabledEvent_}, levelLoadErrorEvent{levelLoadErrorEvent_}, levelLoadSuccessEvent{levelLoadSuccessEvent_}, startedLevelEvent{startedLevelEvent_}, getStartedLevelEvent{getStartedLevelEvent_}, getMultiplayerGameStateEvent{getMultiplayerGameStateEvent_}, setMultiplayerGameStateEvent{setMultiplayerGameStateEvent_}, cancelCountdownEvent{cancelCountdownEvent_}, setCountdownEndTimeEvent{setCountdownEndTimeEvent_}, getCountdownEndTimeEvent{getCountdownEndTimeEvent_}, cancelledLevelStartEvent{cancelledLevelStartEvent_}, getIsReadyEvent{getIsReadyEvent_}, setIsReadyEvent{setIsReadyEvent_}, setStartGameTimeEvent{setStartGameTimeEvent_}, cancelStartGameTimeEvent{cancelStartGameTimeEvent_}, getIsInLobbyEvent{getIsInLobbyEvent_}, setIsInLobbyEvent{setIsInLobbyEvent_}, getOwnedSongPacksEvent{getOwnedSongPacksEvent_}, setOwnedSongPacksEvent{setOwnedSongPacksEvent_}, requestedKickPlayerEvent{requestedKickPlayerEvent_} {}
    // Creating interface conversion operator: operator GlobalNamespace::IMenuRpcManager
    operator GlobalNamespace::IMenuRpcManager() noexcept {
      return *reinterpret_cast<GlobalNamespace::IMenuRpcManager*>(this);
    }
    // static field const value: static private System.String kMenuState
    static constexpr const char* kMenuState = "in_menu";
    // Get static field: static private System.String kMenuState
    static ::Il2CppString* _get_kMenuState();
    // Set static field: static private System.String kMenuState
    static void _set_kMenuState(::Il2CppString* value);
    // Get instance field reference: private readonly IMultiplayerSessionManager _multiplayerSessionManager
    GlobalNamespace::IMultiplayerSessionManager*& dyn__multiplayerSessionManager();
    // Get instance field reference: private readonly RpcHandler`1<MenuRpcManager/RpcType> _rpcHandler
    GlobalNamespace::RpcHandler_1<GlobalNamespace::MenuRpcManager::RpcType>*& dyn__rpcHandler();
    // Get instance field reference: private System.Action`1<System.String> getPlayersPermissionConfigurationEvent
    System::Action_1<::Il2CppString*>*& dyn_getPlayersPermissionConfigurationEvent();
    // Get instance field reference: private System.Action`2<System.String,PlayersLobbyPermissionConfigurationNetSerializable> setPlayersPermissionConfigurationEvent
    System::Action_2<::Il2CppString*, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>*& dyn_setPlayersPermissionConfigurationEvent();
    // Get instance field reference: private System.Action`2<System.String,PlayersMissingEntitlementsNetSerializable> setPlayersMissingEntitlementsToLevelEvent
    System::Action_2<::Il2CppString*, GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>*& dyn_setPlayersMissingEntitlementsToLevelEvent();
    // Get instance field reference: private System.Action`2<System.String,System.String> getIsEntitledToLevelEvent
    System::Action_2<::Il2CppString*, ::Il2CppString*>*& dyn_getIsEntitledToLevelEvent();
    // Get instance field reference: private System.Action`3<System.String,System.String,EntitlementsStatus> setIsEntitledToLevelEvent
    System::Action_3<::Il2CppString*, ::Il2CppString*, GlobalNamespace::EntitlementsStatus>*& dyn_setIsEntitledToLevelEvent();
    // Get instance field reference: private System.Action`1<System.String> levelEntitlementStatusesInvalidatedEvent
    System::Action_1<::Il2CppString*>*& dyn_levelEntitlementStatusesInvalidatedEvent();
    // Get instance field reference: private System.Action`2<System.String,System.String> selectedLevelPackEvent
    System::Action_2<::Il2CppString*, ::Il2CppString*>*& dyn_selectedLevelPackEvent();
    // Get instance field reference: private System.Action`2<System.String,BeatmapIdentifierNetSerializable> setSelectedBeatmapEvent
    System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>*& dyn_setSelectedBeatmapEvent();
    // Get instance field reference: private System.Action`1<System.String> getSelectedBeatmapEvent
    System::Action_1<::Il2CppString*>*& dyn_getSelectedBeatmapEvent();
    // Get instance field reference: private System.Action`2<System.String,BeatmapIdentifierNetSerializable> recommendBeatmapEvent
    System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>*& dyn_recommendBeatmapEvent();
    // Get instance field reference: private System.Action`1<System.String> clearRecommendedBeatmapEvent
    System::Action_1<::Il2CppString*>*& dyn_clearRecommendedBeatmapEvent();
    // Get instance field reference: private System.Action`1<System.String> getRecommendedBeatmapEvent
    System::Action_1<::Il2CppString*>*& dyn_getRecommendedBeatmapEvent();
    // Get instance field reference: private System.Action`2<System.String,GameplayModifiers> setSelectGameplayModifiersEvent
    System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>*& dyn_setSelectGameplayModifiersEvent();
    // Get instance field reference: private System.Action`1<System.String> getSelectedGameplayModifiersEvent
    System::Action_1<::Il2CppString*>*& dyn_getSelectedGameplayModifiersEvent();
    // Get instance field reference: private System.Action`2<System.String,GameplayModifiers> recommendGameplayModifiersEvent
    System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>*& dyn_recommendGameplayModifiersEvent();
    // Get instance field reference: private System.Action`1<System.String> clearRecommendedGameplayModifiersEvent
    System::Action_1<::Il2CppString*>*& dyn_clearRecommendedGameplayModifiersEvent();
    // Get instance field reference: private System.Action`1<System.String> getRecommendedGameplayModifiersEvent
    System::Action_1<::Il2CppString*>*& dyn_getRecommendedGameplayModifiersEvent();
    // Get instance field reference: private System.Action`1<System.String> getIsStartButtonEnabledEvent
    System::Action_1<::Il2CppString*>*& dyn_getIsStartButtonEnabledEvent();
    // Get instance field reference: private System.Action`2<System.String,CannotStartGameReason> setIsStartButtonEnabledEvent
    System::Action_2<::Il2CppString*, GlobalNamespace::CannotStartGameReason>*& dyn_setIsStartButtonEnabledEvent();
    // Get instance field reference: private System.Action`2<System.String,System.String> levelLoadErrorEvent
    System::Action_2<::Il2CppString*, ::Il2CppString*>*& dyn_levelLoadErrorEvent();
    // Get instance field reference: private System.Action`2<System.String,System.String> levelLoadSuccessEvent
    System::Action_2<::Il2CppString*, ::Il2CppString*>*& dyn_levelLoadSuccessEvent();
    // Get instance field reference: private System.Action`4<System.String,BeatmapIdentifierNetSerializable,GameplayModifiers,System.Single> startedLevelEvent
    System::Action_4<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float>*& dyn_startedLevelEvent();
    // Get instance field reference: private System.Action`1<System.String> getStartedLevelEvent
    System::Action_1<::Il2CppString*>*& dyn_getStartedLevelEvent();
    // Get instance field reference: private System.Action`1<System.String> getMultiplayerGameStateEvent
    System::Action_1<::Il2CppString*>*& dyn_getMultiplayerGameStateEvent();
    // Get instance field reference: private System.Action`2<System.String,MultiplayerGameState> setMultiplayerGameStateEvent
    System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerGameState>*& dyn_setMultiplayerGameStateEvent();
    // Get instance field reference: private System.Action`1<System.String> cancelCountdownEvent
    System::Action_1<::Il2CppString*>*& dyn_cancelCountdownEvent();
    // Get instance field reference: private System.Action`2<System.String,System.Single> setCountdownEndTimeEvent
    System::Action_2<::Il2CppString*, float>*& dyn_setCountdownEndTimeEvent();
    // Get instance field reference: private System.Action`1<System.String> getCountdownEndTimeEvent
    System::Action_1<::Il2CppString*>*& dyn_getCountdownEndTimeEvent();
    // Get instance field reference: private System.Action`1<System.String> cancelledLevelStartEvent
    System::Action_1<::Il2CppString*>*& dyn_cancelledLevelStartEvent();
    // Get instance field reference: private System.Action`1<System.String> getIsReadyEvent
    System::Action_1<::Il2CppString*>*& dyn_getIsReadyEvent();
    // Get instance field reference: private System.Action`2<System.String,System.Boolean> setIsReadyEvent
    System::Action_2<::Il2CppString*, bool>*& dyn_setIsReadyEvent();
    // Get instance field reference: private System.Action`2<System.String,System.Single> setStartGameTimeEvent
    System::Action_2<::Il2CppString*, float>*& dyn_setStartGameTimeEvent();
    // Get instance field reference: private System.Action`1<System.String> cancelStartGameTimeEvent
    System::Action_1<::Il2CppString*>*& dyn_cancelStartGameTimeEvent();
    // Get instance field reference: private System.Action`1<System.String> getIsInLobbyEvent
    System::Action_1<::Il2CppString*>*& dyn_getIsInLobbyEvent();
    // Get instance field reference: private System.Action`2<System.String,System.Boolean> setIsInLobbyEvent
    System::Action_2<::Il2CppString*, bool>*& dyn_setIsInLobbyEvent();
    // Get instance field reference: private System.Action`1<System.String> getOwnedSongPacksEvent
    System::Action_1<::Il2CppString*>*& dyn_getOwnedSongPacksEvent();
    // Get instance field reference: private System.Action`2<System.String,SongPackMask> setOwnedSongPacksEvent
    System::Action_2<::Il2CppString*, GlobalNamespace::SongPackMask>*& dyn_setOwnedSongPacksEvent();
    // Get instance field reference: private System.Action`2<System.String,System.String> requestedKickPlayerEvent
    System::Action_2<::Il2CppString*, ::Il2CppString*>*& dyn_requestedKickPlayerEvent();
    // public IMultiplayerSessionManager get_multiplayerSessionManager()
    // Offset: 0x12E96B0
    GlobalNamespace::IMultiplayerSessionManager* get_multiplayerSessionManager();
    // public System.Boolean get_enabled()
    // Offset: 0x12E96B8
    bool get_enabled();
    // public System.Void set_enabled(System.Boolean value)
    // Offset: 0x12E977C
    void set_enabled(bool value);
    // public System.Boolean get_enabledForAllPlayers()
    // Offset: 0x12E9850
    bool get_enabledForAllPlayers();
    // public System.Single get_syncTime()
    // Offset: 0x12E9A3C
    float get_syncTime();
    // public System.Void .ctor(IMultiplayerSessionManager multiplayerSessionManager)
    // Offset: 0x12E9AF0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MenuRpcManager* New_ctor(GlobalNamespace::IMultiplayerSessionManager* multiplayerSessionManager) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuRpcManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MenuRpcManager*, creationType>(multiplayerSessionManager)));
    }
    // public System.Void Dispose()
    // Offset: 0x12EA728
    void Dispose();
    // public System.Boolean EnabledForPlayer(IConnectedPlayer player)
    // Offset: 0x12EA78C
    bool EnabledForPlayer(GlobalNamespace::IConnectedPlayer* player);
    // public System.Void add_getPlayersPermissionConfigurationEvent(System.Action`1<System.String> value)
    // Offset: 0x12EA84C
    void add_getPlayersPermissionConfigurationEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_getPlayersPermissionConfigurationEvent(System.Action`1<System.String> value)
    // Offset: 0x12EA8F0
    void remove_getPlayersPermissionConfigurationEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void GetPlayersPermissionConfiguration()
    // Offset: 0x12EA994
    void GetPlayersPermissionConfiguration();
    // private System.Void InvokeGetPlayersPermissionConfiguration(System.String userId)
    // Offset: 0x12EA9EC
    void InvokeGetPlayersPermissionConfiguration(::Il2CppString* userId);
    // public System.Void add_setPlayersPermissionConfigurationEvent(System.Action`2<System.String,PlayersLobbyPermissionConfigurationNetSerializable> value)
    // Offset: 0x12EAA60
    void add_setPlayersPermissionConfigurationEvent(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* value);
    // public System.Void remove_setPlayersPermissionConfigurationEvent(System.Action`2<System.String,PlayersLobbyPermissionConfigurationNetSerializable> value)
    // Offset: 0x12EAB04
    void remove_setPlayersPermissionConfigurationEvent(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* value);
    // public System.Void SetPlayersPermissionConfiguration(PlayersLobbyPermissionConfigurationNetSerializable playersPermissionConfiguration)
    // Offset: 0x12EABA8
    void SetPlayersPermissionConfiguration(GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersPermissionConfiguration);
    // private System.Void InvokeSetPlayersPermissionConfiguration(System.String userId, PlayersLobbyPermissionConfigurationNetSerializable playersPermissionConfiguration)
    // Offset: 0x12EAC10
    void InvokeSetPlayersPermissionConfiguration(::Il2CppString* userId, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersPermissionConfiguration);
    // public System.Void add_setPlayersMissingEntitlementsToLevelEvent(System.Action`2<System.String,PlayersMissingEntitlementsNetSerializable> value)
    // Offset: 0x12EAC8C
    void add_setPlayersMissingEntitlementsToLevelEvent(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value);
    // public System.Void remove_setPlayersMissingEntitlementsToLevelEvent(System.Action`2<System.String,PlayersMissingEntitlementsNetSerializable> value)
    // Offset: 0x12EAD30
    void remove_setPlayersMissingEntitlementsToLevelEvent(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value);
    // public System.Void SetPlayersMissingEntitlementsToLevel(PlayersMissingEntitlementsNetSerializable playersMissingEntitlements)
    // Offset: 0x12EADD4
    void SetPlayersMissingEntitlementsToLevel(GlobalNamespace::PlayersMissingEntitlementsNetSerializable* playersMissingEntitlements);
    // private System.Void InvokeSetPlayersMissingEntitlementsToLevelRpc(System.String userId, PlayersMissingEntitlementsNetSerializable playersMissingEntitlements)
    // Offset: 0x12EAE3C
    void InvokeSetPlayersMissingEntitlementsToLevelRpc(::Il2CppString* userId, GlobalNamespace::PlayersMissingEntitlementsNetSerializable* playersMissingEntitlements);
    // public System.Void add_getIsEntitledToLevelEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x12EAEB8
    void add_getIsEntitledToLevelEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value);
    // public System.Void remove_getIsEntitledToLevelEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x12EAF5C
    void remove_getIsEntitledToLevelEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value);
    // public System.Void GetIsEntitledToLevel(System.String levelId)
    // Offset: 0x12EB000
    void GetIsEntitledToLevel(::Il2CppString* levelId);
    // private System.Void InvokeGetIsEntitledToLevel(System.String userId, System.String levelId)
    // Offset: 0x12EB068
    void InvokeGetIsEntitledToLevel(::Il2CppString* userId, ::Il2CppString* levelId);
    // public System.Void add_setIsEntitledToLevelEvent(System.Action`3<System.String,System.String,EntitlementsStatus> value)
    // Offset: 0x12EB0E4
    void add_setIsEntitledToLevelEvent(System::Action_3<::Il2CppString*, ::Il2CppString*, GlobalNamespace::EntitlementsStatus>* value);
    // public System.Void remove_setIsEntitledToLevelEvent(System.Action`3<System.String,System.String,EntitlementsStatus> value)
    // Offset: 0x12EB188
    void remove_setIsEntitledToLevelEvent(System::Action_3<::Il2CppString*, ::Il2CppString*, GlobalNamespace::EntitlementsStatus>* value);
    // public System.Void SetIsEntitledToLevel(System.String levelId, EntitlementsStatus entitlementStatus)
    // Offset: 0x12EB22C
    void SetIsEntitledToLevel(::Il2CppString* levelId, GlobalNamespace::EntitlementsStatus entitlementStatus);
    // private System.Void InvokeSetIsEntitledToLevel(System.String userId, System.String levelId, System.Int32 entitlementStatus)
    // Offset: 0x12EB29C
    void InvokeSetIsEntitledToLevel(::Il2CppString* userId, ::Il2CppString* levelId, int entitlementStatus);
    // public System.Void add_levelEntitlementStatusesInvalidatedEvent(System.Action`1<System.String> value)
    // Offset: 0x12EB32C
    void add_levelEntitlementStatusesInvalidatedEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_levelEntitlementStatusesInvalidatedEvent(System.Action`1<System.String> value)
    // Offset: 0x12EB3D0
    void remove_levelEntitlementStatusesInvalidatedEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void InvalidateLevelEntitlementStatuses()
    // Offset: 0x12EB474
    void InvalidateLevelEntitlementStatuses();
    // public System.Void InvokeLevelEntitlementStatusesInvalidated(System.String userId)
    // Offset: 0x12EB4CC
    void InvokeLevelEntitlementStatusesInvalidated(::Il2CppString* userId);
    // public System.Void add_selectedLevelPackEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x12EB540
    void add_selectedLevelPackEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value);
    // public System.Void remove_selectedLevelPackEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x12EB5E4
    void remove_selectedLevelPackEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value);
    // public System.Void SelectLevelPack(System.String levelPackId)
    // Offset: 0x12EB688
    void SelectLevelPack(::Il2CppString* levelPackId);
    // private System.Void InvokeOnSelectedLevelPackEvent(System.String userId, System.String levelPackId)
    // Offset: 0x12EB6F0
    void InvokeOnSelectedLevelPackEvent(::Il2CppString* userId, ::Il2CppString* levelPackId);
    // public System.Void add_setSelectedBeatmapEvent(System.Action`2<System.String,BeatmapIdentifierNetSerializable> value)
    // Offset: 0x12EB76C
    void add_setSelectedBeatmapEvent(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* value);
    // public System.Void remove_setSelectedBeatmapEvent(System.Action`2<System.String,BeatmapIdentifierNetSerializable> value)
    // Offset: 0x12EB810
    void remove_setSelectedBeatmapEvent(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* value);
    // public System.Void SetSelectedBeatmap(BeatmapIdentifierNetSerializable identifier)
    // Offset: 0x12EB8B4
    void SetSelectedBeatmap(GlobalNamespace::BeatmapIdentifierNetSerializable* identifier);
    // private System.Void InvokeSetSelectedBeatmap(System.String userId, BeatmapIdentifierNetSerializable identifier)
    // Offset: 0x12EB91C
    void InvokeSetSelectedBeatmap(::Il2CppString* userId, GlobalNamespace::BeatmapIdentifierNetSerializable* identifier);
    // public System.Void add_getSelectedBeatmapEvent(System.Action`1<System.String> value)
    // Offset: 0x12EB998
    void add_getSelectedBeatmapEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_getSelectedBeatmapEvent(System.Action`1<System.String> value)
    // Offset: 0x12EBA3C
    void remove_getSelectedBeatmapEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void GetSelectedBeatmap()
    // Offset: 0x12EBAE0
    void GetSelectedBeatmap();
    // private System.Void InvokeGetSelectedBeatmapRpc(System.String userId)
    // Offset: 0x12EBB38
    void InvokeGetSelectedBeatmapRpc(::Il2CppString* userId);
    // public System.Void add_recommendBeatmapEvent(System.Action`2<System.String,BeatmapIdentifierNetSerializable> value)
    // Offset: 0x12EBBAC
    void add_recommendBeatmapEvent(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* value);
    // public System.Void remove_recommendBeatmapEvent(System.Action`2<System.String,BeatmapIdentifierNetSerializable> value)
    // Offset: 0x12EBC50
    void remove_recommendBeatmapEvent(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* value);
    // public System.Void RecommendBeatmap(BeatmapIdentifierNetSerializable identifier)
    // Offset: 0x12EBCF4
    void RecommendBeatmap(GlobalNamespace::BeatmapIdentifierNetSerializable* identifier);
    // private System.Void InvokeRecommendBeatmap(System.String userId, BeatmapIdentifierNetSerializable identifier)
    // Offset: 0x12EBD5C
    void InvokeRecommendBeatmap(::Il2CppString* userId, GlobalNamespace::BeatmapIdentifierNetSerializable* identifier);
    // public System.Void add_clearRecommendedBeatmapEvent(System.Action`1<System.String> value)
    // Offset: 0x12EBDD8
    void add_clearRecommendedBeatmapEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_clearRecommendedBeatmapEvent(System.Action`1<System.String> value)
    // Offset: 0x12EBE7C
    void remove_clearRecommendedBeatmapEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void ClearRecommendedBeatmap()
    // Offset: 0x12EBF20
    void ClearRecommendedBeatmap();
    // private System.Void InvokeClearRecommendedBeatmap(System.String userId)
    // Offset: 0x12EBF78
    void InvokeClearRecommendedBeatmap(::Il2CppString* userId);
    // public System.Void add_getRecommendedBeatmapEvent(System.Action`1<System.String> value)
    // Offset: 0x12EBFEC
    void add_getRecommendedBeatmapEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_getRecommendedBeatmapEvent(System.Action`1<System.String> value)
    // Offset: 0x12EC090
    void remove_getRecommendedBeatmapEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void GetRecommendedBeatmap()
    // Offset: 0x12EC134
    void GetRecommendedBeatmap();
    // private System.Void InvokeGetRecommendedBeatmap(System.String userId)
    // Offset: 0x12EC18C
    void InvokeGetRecommendedBeatmap(::Il2CppString* userId);
    // public System.Void add_setSelectGameplayModifiersEvent(System.Action`2<System.String,GameplayModifiers> value)
    // Offset: 0x12EC200
    void add_setSelectGameplayModifiersEvent(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* value);
    // public System.Void remove_setSelectGameplayModifiersEvent(System.Action`2<System.String,GameplayModifiers> value)
    // Offset: 0x12EC2A4
    void remove_setSelectGameplayModifiersEvent(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* value);
    // public System.Void SetSelectedGameplayModifiers(GameplayModifiers gameplayModifiers)
    // Offset: 0x12EC348
    void SetSelectedGameplayModifiers(GlobalNamespace::GameplayModifiers* gameplayModifiers);
    // private System.Void InvokeSetSelectedGameplayModifiers(System.String userId, GameplayModifiers gameplayModifiers)
    // Offset: 0x12EC3B0
    void InvokeSetSelectedGameplayModifiers(::Il2CppString* userId, GlobalNamespace::GameplayModifiers* gameplayModifiers);
    // public System.Void add_getSelectedGameplayModifiersEvent(System.Action`1<System.String> value)
    // Offset: 0x12EC42C
    void add_getSelectedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_getSelectedGameplayModifiersEvent(System.Action`1<System.String> value)
    // Offset: 0x12EC4D0
    void remove_getSelectedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void GetSelectedGameplayModifiers()
    // Offset: 0x12EC574
    void GetSelectedGameplayModifiers();
    // private System.Void InvokeGetSelectedGameplayModifiers(System.String userId)
    // Offset: 0x12EC5CC
    void InvokeGetSelectedGameplayModifiers(::Il2CppString* userId);
    // public System.Void add_recommendGameplayModifiersEvent(System.Action`2<System.String,GameplayModifiers> value)
    // Offset: 0x12EC640
    void add_recommendGameplayModifiersEvent(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* value);
    // public System.Void remove_recommendGameplayModifiersEvent(System.Action`2<System.String,GameplayModifiers> value)
    // Offset: 0x12EC6E4
    void remove_recommendGameplayModifiersEvent(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>* value);
    // public System.Void RecommendGameplayModifiers(GameplayModifiers gameplayModifiers)
    // Offset: 0x12EC788
    void RecommendGameplayModifiers(GlobalNamespace::GameplayModifiers* gameplayModifiers);
    // private System.Void InvokeRecommendGameplayModifiers(System.String userId, GameplayModifiers gameplayModifiers)
    // Offset: 0x12EC7F0
    void InvokeRecommendGameplayModifiers(::Il2CppString* userId, GlobalNamespace::GameplayModifiers* gameplayModifiers);
    // public System.Void add_clearRecommendedGameplayModifiersEvent(System.Action`1<System.String> value)
    // Offset: 0x12EC86C
    void add_clearRecommendedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_clearRecommendedGameplayModifiersEvent(System.Action`1<System.String> value)
    // Offset: 0x12EC910
    void remove_clearRecommendedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void ClearRecommendedGameplayModifiers()
    // Offset: 0x12EC9B4
    void ClearRecommendedGameplayModifiers();
    // private System.Void InvokeClearRecommendedGameplayModifiers(System.String userId)
    // Offset: 0x12ECA0C
    void InvokeClearRecommendedGameplayModifiers(::Il2CppString* userId);
    // public System.Void add_getRecommendedGameplayModifiersEvent(System.Action`1<System.String> value)
    // Offset: 0x12ECA80
    void add_getRecommendedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_getRecommendedGameplayModifiersEvent(System.Action`1<System.String> value)
    // Offset: 0x12ECB24
    void remove_getRecommendedGameplayModifiersEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void GetRecommendedGameplayModifiers()
    // Offset: 0x12ECBC8
    void GetRecommendedGameplayModifiers();
    // private System.Void InvokeGetRecommendedGameplayModifiers(System.String userId)
    // Offset: 0x12ECC20
    void InvokeGetRecommendedGameplayModifiers(::Il2CppString* userId);
    // public System.Void add_getIsStartButtonEnabledEvent(System.Action`1<System.String> value)
    // Offset: 0x12ECC94
    void add_getIsStartButtonEnabledEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_getIsStartButtonEnabledEvent(System.Action`1<System.String> value)
    // Offset: 0x12ECD38
    void remove_getIsStartButtonEnabledEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void GetIsStartButtonEnabled()
    // Offset: 0x12ECDDC
    void GetIsStartButtonEnabled();
    // private System.Void InvokeGetIsStartButtonEnabled(System.String userId)
    // Offset: 0x12ECE34
    void InvokeGetIsStartButtonEnabled(::Il2CppString* userId);
    // public System.Void add_setIsStartButtonEnabledEvent(System.Action`2<System.String,CannotStartGameReason> value)
    // Offset: 0x12ECEA8
    void add_setIsStartButtonEnabledEvent(System::Action_2<::Il2CppString*, GlobalNamespace::CannotStartGameReason>* value);
    // public System.Void remove_setIsStartButtonEnabledEvent(System.Action`2<System.String,CannotStartGameReason> value)
    // Offset: 0x12ECF4C
    void remove_setIsStartButtonEnabledEvent(System::Action_2<::Il2CppString*, GlobalNamespace::CannotStartGameReason>* value);
    // public System.Void SetIsStartButtonEnabled(CannotStartGameReason reason)
    // Offset: 0x12ECFF0
    void SetIsStartButtonEnabled(GlobalNamespace::CannotStartGameReason reason);
    // private System.Void InvokeSetIsStartButtonEnabled(System.String userId, CannotStartGameReason reason)
    // Offset: 0x12ED058
    void InvokeSetIsStartButtonEnabled(::Il2CppString* userId, GlobalNamespace::CannotStartGameReason reason);
    // public System.Void add_levelLoadErrorEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x12ED0D4
    void add_levelLoadErrorEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value);
    // public System.Void remove_levelLoadErrorEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x12ED178
    void remove_levelLoadErrorEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value);
    // public System.Void LevelLoadError(System.String levelId)
    // Offset: 0x12ED21C
    void LevelLoadError(::Il2CppString* levelId);
    // private System.Void InvokeLevelLoadError(System.String userId, System.String levelId)
    // Offset: 0x12ED284
    void InvokeLevelLoadError(::Il2CppString* userId, ::Il2CppString* levelId);
    // public System.Void add_levelLoadSuccessEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x12ED300
    void add_levelLoadSuccessEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value);
    // public System.Void remove_levelLoadSuccessEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x12ED3A4
    void remove_levelLoadSuccessEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value);
    // public System.Void LevelLoadSuccess(System.String levelId)
    // Offset: 0x12ED448
    void LevelLoadSuccess(::Il2CppString* levelId);
    // private System.Void InvokeLevelLoadSuccess(System.String userId, System.String levelId)
    // Offset: 0x12ED4B0
    void InvokeLevelLoadSuccess(::Il2CppString* userId, ::Il2CppString* levelId);
    // public System.Void add_startedLevelEvent(System.Action`4<System.String,BeatmapIdentifierNetSerializable,GameplayModifiers,System.Single> value)
    // Offset: 0x12ED52C
    void add_startedLevelEvent(System::Action_4<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float>* value);
    // public System.Void remove_startedLevelEvent(System.Action`4<System.String,BeatmapIdentifierNetSerializable,GameplayModifiers,System.Single> value)
    // Offset: 0x12ED5D0
    void remove_startedLevelEvent(System::Action_4<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float>* value);
    // public System.Void StartLevel(BeatmapIdentifierNetSerializable beatmapId, GameplayModifiers gameplayModifiers, System.Single startTime)
    // Offset: 0x12ED674
    void StartLevel(GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime);
    // private System.Void InvokeStartLevel(System.String userId, BeatmapIdentifierNetSerializable beatmapId, GameplayModifiers gameplayModifiers, System.Single startTime)
    // Offset: 0x12ED6F4
    void InvokeStartLevel(::Il2CppString* userId, GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime);
    // public System.Void add_getStartedLevelEvent(System.Action`1<System.String> value)
    // Offset: 0x12ED798
    void add_getStartedLevelEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_getStartedLevelEvent(System.Action`1<System.String> value)
    // Offset: 0x12ED83C
    void remove_getStartedLevelEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void GetStartedLevel()
    // Offset: 0x12ED8E0
    void GetStartedLevel();
    // private System.Void InvokeGetStartedLevel(System.String userId)
    // Offset: 0x12ED938
    void InvokeGetStartedLevel(::Il2CppString* userId);
    // public System.Void add_getMultiplayerGameStateEvent(System.Action`1<System.String> value)
    // Offset: 0x12ED9AC
    void add_getMultiplayerGameStateEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_getMultiplayerGameStateEvent(System.Action`1<System.String> value)
    // Offset: 0x12EDA50
    void remove_getMultiplayerGameStateEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void GetMultiplayerGameState()
    // Offset: 0x12EDAF4
    void GetMultiplayerGameState();
    // private System.Void InvokeGetMultiplayerGameState(System.String userId)
    // Offset: 0x12EDB4C
    void InvokeGetMultiplayerGameState(::Il2CppString* userId);
    // public System.Void add_setMultiplayerGameStateEvent(System.Action`2<System.String,MultiplayerGameState> value)
    // Offset: 0x12EDBC0
    void add_setMultiplayerGameStateEvent(System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerGameState>* value);
    // public System.Void remove_setMultiplayerGameStateEvent(System.Action`2<System.String,MultiplayerGameState> value)
    // Offset: 0x12EDC64
    void remove_setMultiplayerGameStateEvent(System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerGameState>* value);
    // public System.Void SetMultiplayerGameState(MultiplayerGameState lobbyState)
    // Offset: 0x12EDD08
    void SetMultiplayerGameState(GlobalNamespace::MultiplayerGameState lobbyState);
    // private System.Void InvokeSetMultiplayerGameState(System.String userId, MultiplayerGameState lobbyState)
    // Offset: 0x12EDD70
    void InvokeSetMultiplayerGameState(::Il2CppString* userId, GlobalNamespace::MultiplayerGameState lobbyState);
    // public System.Void add_cancelCountdownEvent(System.Action`1<System.String> value)
    // Offset: 0x12EDDEC
    void add_cancelCountdownEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_cancelCountdownEvent(System.Action`1<System.String> value)
    // Offset: 0x12EDE90
    void remove_cancelCountdownEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void CancelCountdown()
    // Offset: 0x12EDF34
    void CancelCountdown();
    // private System.Void InvokeCancelCountdown(System.String userId)
    // Offset: 0x12EDF8C
    void InvokeCancelCountdown(::Il2CppString* userId);
    // public System.Void add_setCountdownEndTimeEvent(System.Action`2<System.String,System.Single> value)
    // Offset: 0x12EE000
    void add_setCountdownEndTimeEvent(System::Action_2<::Il2CppString*, float>* value);
    // public System.Void remove_setCountdownEndTimeEvent(System.Action`2<System.String,System.Single> value)
    // Offset: 0x12EE0A4
    void remove_setCountdownEndTimeEvent(System::Action_2<::Il2CppString*, float>* value);
    // public System.Void SetCountdownEndTime(System.Single newTime)
    // Offset: 0x12EE148
    void SetCountdownEndTime(float newTime);
    // private System.Void InvokeSetCountdownEndTime(System.String userId, System.Single newTime)
    // Offset: 0x12EE1B0
    void InvokeSetCountdownEndTime(::Il2CppString* userId, float newTime);
    // public System.Void add_getCountdownEndTimeEvent(System.Action`1<System.String> value)
    // Offset: 0x12EE238
    void add_getCountdownEndTimeEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_getCountdownEndTimeEvent(System.Action`1<System.String> value)
    // Offset: 0x12EE2DC
    void remove_getCountdownEndTimeEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void GetCountdownEndTime()
    // Offset: 0x12EE380
    void GetCountdownEndTime();
    // private System.Void InvokeGetCountdownEndTime(System.String userId)
    // Offset: 0x12EE3D8
    void InvokeGetCountdownEndTime(::Il2CppString* userId);
    // public System.Void add_cancelledLevelStartEvent(System.Action`1<System.String> value)
    // Offset: 0x12EE44C
    void add_cancelledLevelStartEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_cancelledLevelStartEvent(System.Action`1<System.String> value)
    // Offset: 0x12EE4F4
    void remove_cancelledLevelStartEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void CancelLevelStart()
    // Offset: 0x12EE59C
    void CancelLevelStart();
    // private System.Void InvokeCancelLevelStart(System.String userId)
    // Offset: 0x12EE5F4
    void InvokeCancelLevelStart(::Il2CppString* userId);
    // public System.Void add_getIsReadyEvent(System.Action`1<System.String> value)
    // Offset: 0x12EE668
    void add_getIsReadyEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_getIsReadyEvent(System.Action`1<System.String> value)
    // Offset: 0x12EE710
    void remove_getIsReadyEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void GetIsReady()
    // Offset: 0x12EE7B8
    void GetIsReady();
    // private System.Void InvokeGetIsReady(System.String userId)
    // Offset: 0x12EE810
    void InvokeGetIsReady(::Il2CppString* userId);
    // public System.Void add_setIsReadyEvent(System.Action`2<System.String,System.Boolean> value)
    // Offset: 0x12EE884
    void add_setIsReadyEvent(System::Action_2<::Il2CppString*, bool>* value);
    // public System.Void remove_setIsReadyEvent(System.Action`2<System.String,System.Boolean> value)
    // Offset: 0x12EE92C
    void remove_setIsReadyEvent(System::Action_2<::Il2CppString*, bool>* value);
    // public System.Void SetIsReady(System.Boolean isReady)
    // Offset: 0x12EE9D4
    void SetIsReady(bool isReady);
    // private System.Void InvokeSetIsReady(System.String userId, System.Boolean isReady)
    // Offset: 0x12EEA3C
    void InvokeSetIsReady(::Il2CppString* userId, bool isReady);
    // public System.Void add_setStartGameTimeEvent(System.Action`2<System.String,System.Single> value)
    // Offset: 0x12EEAB8
    void add_setStartGameTimeEvent(System::Action_2<::Il2CppString*, float>* value);
    // public System.Void remove_setStartGameTimeEvent(System.Action`2<System.String,System.Single> value)
    // Offset: 0x12EEB60
    void remove_setStartGameTimeEvent(System::Action_2<::Il2CppString*, float>* value);
    // public System.Void SetStartGameTime(System.Single newTime)
    // Offset: 0x12EEC08
    void SetStartGameTime(float newTime);
    // private System.Void InvokeSetStartGameCountdown(System.String userId, System.Single newTime)
    // Offset: 0x12EEC70
    void InvokeSetStartGameCountdown(::Il2CppString* userId, float newTime);
    // public System.Void add_cancelStartGameTimeEvent(System.Action`1<System.String> value)
    // Offset: 0x12EECF8
    void add_cancelStartGameTimeEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_cancelStartGameTimeEvent(System.Action`1<System.String> value)
    // Offset: 0x12EEDA0
    void remove_cancelStartGameTimeEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void CancelStartGameTime()
    // Offset: 0x12EEE48
    void CancelStartGameTime();
    // private System.Void InvokeCancelStartGameCountdown(System.String userId)
    // Offset: 0x12EEEA0
    void InvokeCancelStartGameCountdown(::Il2CppString* userId);
    // public System.Void add_getIsInLobbyEvent(System.Action`1<System.String> value)
    // Offset: 0x12EEF14
    void add_getIsInLobbyEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_getIsInLobbyEvent(System.Action`1<System.String> value)
    // Offset: 0x12EEFBC
    void remove_getIsInLobbyEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void GetIsInLobby()
    // Offset: 0x12EF064
    void GetIsInLobby();
    // private System.Void InvokeGetIsInLobby(System.String userId)
    // Offset: 0x12EF0BC
    void InvokeGetIsInLobby(::Il2CppString* userId);
    // public System.Void add_setIsInLobbyEvent(System.Action`2<System.String,System.Boolean> value)
    // Offset: 0x12EF130
    void add_setIsInLobbyEvent(System::Action_2<::Il2CppString*, bool>* value);
    // public System.Void remove_setIsInLobbyEvent(System.Action`2<System.String,System.Boolean> value)
    // Offset: 0x12EF1D8
    void remove_setIsInLobbyEvent(System::Action_2<::Il2CppString*, bool>* value);
    // public System.Void SetIsInLobby(System.Boolean isBack)
    // Offset: 0x12EF280
    void SetIsInLobby(bool isBack);
    // private System.Void InvokeSetIsInLobby(System.String userId, System.Boolean isBack)
    // Offset: 0x12EF2E8
    void InvokeSetIsInLobby(::Il2CppString* userId, bool isBack);
    // public System.Void add_getOwnedSongPacksEvent(System.Action`1<System.String> value)
    // Offset: 0x12EF364
    void add_getOwnedSongPacksEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void remove_getOwnedSongPacksEvent(System.Action`1<System.String> value)
    // Offset: 0x12EF40C
    void remove_getOwnedSongPacksEvent(System::Action_1<::Il2CppString*>* value);
    // public System.Void GetOwnedSongPacks()
    // Offset: 0x12EF4B4
    void GetOwnedSongPacks();
    // private System.Void InvokeGetOwnedSongPacks(System.String userId)
    // Offset: 0x12EF50C
    void InvokeGetOwnedSongPacks(::Il2CppString* userId);
    // public System.Void add_setOwnedSongPacksEvent(System.Action`2<System.String,SongPackMask> value)
    // Offset: 0x12EF580
    void add_setOwnedSongPacksEvent(System::Action_2<::Il2CppString*, GlobalNamespace::SongPackMask>* value);
    // public System.Void remove_setOwnedSongPacksEvent(System.Action`2<System.String,SongPackMask> value)
    // Offset: 0x12EF628
    void remove_setOwnedSongPacksEvent(System::Action_2<::Il2CppString*, GlobalNamespace::SongPackMask>* value);
    // public System.Void SetOwnedSongPacks(SongPackMask songPackMask)
    // Offset: 0x12EF6D0
    void SetOwnedSongPacks(GlobalNamespace::SongPackMask songPackMask);
    // private System.Void InvokeSetOwnedSongPacks(System.String userId, SongPackMask songPackMask)
    // Offset: 0x12EF740
    void InvokeSetOwnedSongPacks(::Il2CppString* userId, GlobalNamespace::SongPackMask songPackMask);
    // public System.Void add_requestedKickPlayerEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x12EF7D0
    void add_requestedKickPlayerEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value);
    // public System.Void remove_requestedKickPlayerEvent(System.Action`2<System.String,System.String> value)
    // Offset: 0x12EF878
    void remove_requestedKickPlayerEvent(System::Action_2<::Il2CppString*, ::Il2CppString*>* value);
    // public System.Void RequestKickPlayer(System.String kickedPlayerId)
    // Offset: 0x12EF920
    void RequestKickPlayer(::Il2CppString* kickedPlayerId);
    // private System.Void InvokeKickPlayer(System.String userId, System.String kickedPlayerId)
    // Offset: 0x12EF988
    void InvokeKickPlayer(::Il2CppString* userId, ::Il2CppString* kickedPlayerId);
  }; // MenuRpcManager
  #pragma pack(pop)
  static check_size<sizeof(MenuRpcManager), 328 + sizeof(System::Action_2<::Il2CppString*, ::Il2CppString*>*)> __GlobalNamespace_MenuRpcManagerSizeCheck;
  static_assert(sizeof(MenuRpcManager) == 0x150);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MenuRpcManager*, "", "MenuRpcManager");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MenuRpcManager::RpcType, "", "MenuRpcManager/RpcType");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::get_multiplayerSessionManager
// Il2CppName: get_multiplayerSessionManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IMultiplayerSessionManager* (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::get_multiplayerSessionManager)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "get_multiplayerSessionManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::get_enabled
// Il2CppName: get_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::get_enabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "get_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::set_enabled
// Il2CppName: set_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(bool)>(&GlobalNamespace::MenuRpcManager::set_enabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "set_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::get_enabledForAllPlayers
// Il2CppName: get_enabledForAllPlayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::get_enabledForAllPlayers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "get_enabledForAllPlayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::get_syncTime
// Il2CppName: get_syncTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::get_syncTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "get_syncTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::EnabledForPlayer
// Il2CppName: EnabledForPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::MenuRpcManager::*)(GlobalNamespace::IConnectedPlayer*)>(&GlobalNamespace::MenuRpcManager::EnabledForPlayer)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("", "IConnectedPlayer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "EnabledForPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getPlayersPermissionConfigurationEvent
// Il2CppName: add_getPlayersPermissionConfigurationEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_getPlayersPermissionConfigurationEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getPlayersPermissionConfigurationEvent
// Il2CppName: remove_getPlayersPermissionConfigurationEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_getPlayersPermissionConfigurationEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetPlayersPermissionConfiguration
// Il2CppName: GetPlayersPermissionConfiguration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetPlayersPermissionConfiguration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetPlayersPermissionConfiguration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetPlayersPermissionConfiguration
// Il2CppName: InvokeGetPlayersPermissionConfiguration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeGetPlayersPermissionConfiguration)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetPlayersPermissionConfiguration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setPlayersPermissionConfigurationEvent
// Il2CppName: add_setPlayersPermissionConfigurationEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>*)>(&GlobalNamespace::MenuRpcManager::add_setPlayersPermissionConfigurationEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "PlayersLobbyPermissionConfigurationNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setPlayersPermissionConfigurationEvent
// Il2CppName: remove_setPlayersPermissionConfigurationEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>*)>(&GlobalNamespace::MenuRpcManager::remove_setPlayersPermissionConfigurationEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "PlayersLobbyPermissionConfigurationNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetPlayersPermissionConfiguration
// Il2CppName: SetPlayersPermissionConfiguration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*)>(&GlobalNamespace::MenuRpcManager::SetPlayersPermissionConfiguration)> {
  static const MethodInfo* get() {
    static auto* playersPermissionConfiguration = &::il2cpp_utils::GetClassFromName("", "PlayersLobbyPermissionConfigurationNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetPlayersPermissionConfiguration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playersPermissionConfiguration});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetPlayersPermissionConfiguration
// Il2CppName: InvokeSetPlayersPermissionConfiguration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*)>(&GlobalNamespace::MenuRpcManager::InvokeSetPlayersPermissionConfiguration)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* playersPermissionConfiguration = &::il2cpp_utils::GetClassFromName("", "PlayersLobbyPermissionConfigurationNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetPlayersPermissionConfiguration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, playersPermissionConfiguration});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setPlayersMissingEntitlementsToLevelEvent
// Il2CppName: add_setPlayersMissingEntitlementsToLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>*)>(&GlobalNamespace::MenuRpcManager::add_setPlayersMissingEntitlementsToLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "PlayersMissingEntitlementsNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setPlayersMissingEntitlementsToLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setPlayersMissingEntitlementsToLevelEvent
// Il2CppName: remove_setPlayersMissingEntitlementsToLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>*)>(&GlobalNamespace::MenuRpcManager::remove_setPlayersMissingEntitlementsToLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "PlayersMissingEntitlementsNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setPlayersMissingEntitlementsToLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetPlayersMissingEntitlementsToLevel
// Il2CppName: SetPlayersMissingEntitlementsToLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(GlobalNamespace::PlayersMissingEntitlementsNetSerializable*)>(&GlobalNamespace::MenuRpcManager::SetPlayersMissingEntitlementsToLevel)> {
  static const MethodInfo* get() {
    static auto* playersMissingEntitlements = &::il2cpp_utils::GetClassFromName("", "PlayersMissingEntitlementsNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetPlayersMissingEntitlementsToLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playersMissingEntitlements});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetPlayersMissingEntitlementsToLevelRpc
// Il2CppName: InvokeSetPlayersMissingEntitlementsToLevelRpc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, GlobalNamespace::PlayersMissingEntitlementsNetSerializable*)>(&GlobalNamespace::MenuRpcManager::InvokeSetPlayersMissingEntitlementsToLevelRpc)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* playersMissingEntitlements = &::il2cpp_utils::GetClassFromName("", "PlayersMissingEntitlementsNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetPlayersMissingEntitlementsToLevelRpc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, playersMissingEntitlements});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getIsEntitledToLevelEvent
// Il2CppName: add_getIsEntitledToLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, ::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_getIsEntitledToLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getIsEntitledToLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getIsEntitledToLevelEvent
// Il2CppName: remove_getIsEntitledToLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, ::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_getIsEntitledToLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getIsEntitledToLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetIsEntitledToLevel
// Il2CppName: GetIsEntitledToLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::GetIsEntitledToLevel)> {
  static const MethodInfo* get() {
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetIsEntitledToLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetIsEntitledToLevel
// Il2CppName: InvokeGetIsEntitledToLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, ::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeGetIsEntitledToLevel)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetIsEntitledToLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, levelId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setIsEntitledToLevelEvent
// Il2CppName: add_setIsEntitledToLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_3<::Il2CppString*, ::Il2CppString*, GlobalNamespace::EntitlementsStatus>*)>(&GlobalNamespace::MenuRpcManager::add_setIsEntitledToLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "EntitlementsStatus")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setIsEntitledToLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setIsEntitledToLevelEvent
// Il2CppName: remove_setIsEntitledToLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_3<::Il2CppString*, ::Il2CppString*, GlobalNamespace::EntitlementsStatus>*)>(&GlobalNamespace::MenuRpcManager::remove_setIsEntitledToLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "EntitlementsStatus")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setIsEntitledToLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetIsEntitledToLevel
// Il2CppName: SetIsEntitledToLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, GlobalNamespace::EntitlementsStatus)>(&GlobalNamespace::MenuRpcManager::SetIsEntitledToLevel)> {
  static const MethodInfo* get() {
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* entitlementStatus = &::il2cpp_utils::GetClassFromName("", "EntitlementsStatus")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetIsEntitledToLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelId, entitlementStatus});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetIsEntitledToLevel
// Il2CppName: InvokeSetIsEntitledToLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, ::Il2CppString*, int)>(&GlobalNamespace::MenuRpcManager::InvokeSetIsEntitledToLevel)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* entitlementStatus = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetIsEntitledToLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, levelId, entitlementStatus});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_levelEntitlementStatusesInvalidatedEvent
// Il2CppName: add_levelEntitlementStatusesInvalidatedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_levelEntitlementStatusesInvalidatedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_levelEntitlementStatusesInvalidatedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_levelEntitlementStatusesInvalidatedEvent
// Il2CppName: remove_levelEntitlementStatusesInvalidatedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_levelEntitlementStatusesInvalidatedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_levelEntitlementStatusesInvalidatedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvalidateLevelEntitlementStatuses
// Il2CppName: InvalidateLevelEntitlementStatuses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::InvalidateLevelEntitlementStatuses)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvalidateLevelEntitlementStatuses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeLevelEntitlementStatusesInvalidated
// Il2CppName: InvokeLevelEntitlementStatusesInvalidated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeLevelEntitlementStatusesInvalidated)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeLevelEntitlementStatusesInvalidated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_selectedLevelPackEvent
// Il2CppName: add_selectedLevelPackEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, ::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_selectedLevelPackEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_selectedLevelPackEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_selectedLevelPackEvent
// Il2CppName: remove_selectedLevelPackEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, ::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_selectedLevelPackEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_selectedLevelPackEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SelectLevelPack
// Il2CppName: SelectLevelPack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::SelectLevelPack)> {
  static const MethodInfo* get() {
    static auto* levelPackId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SelectLevelPack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelPackId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeOnSelectedLevelPackEvent
// Il2CppName: InvokeOnSelectedLevelPackEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, ::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeOnSelectedLevelPackEvent)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* levelPackId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeOnSelectedLevelPackEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, levelPackId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setSelectedBeatmapEvent
// Il2CppName: add_setSelectedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>*)>(&GlobalNamespace::MenuRpcManager::add_setSelectedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setSelectedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setSelectedBeatmapEvent
// Il2CppName: remove_setSelectedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>*)>(&GlobalNamespace::MenuRpcManager::remove_setSelectedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setSelectedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetSelectedBeatmap
// Il2CppName: SetSelectedBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(GlobalNamespace::BeatmapIdentifierNetSerializable*)>(&GlobalNamespace::MenuRpcManager::SetSelectedBeatmap)> {
  static const MethodInfo* get() {
    static auto* identifier = &::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetSelectedBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{identifier});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetSelectedBeatmap
// Il2CppName: InvokeSetSelectedBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*)>(&GlobalNamespace::MenuRpcManager::InvokeSetSelectedBeatmap)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* identifier = &::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetSelectedBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, identifier});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getSelectedBeatmapEvent
// Il2CppName: add_getSelectedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_getSelectedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getSelectedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getSelectedBeatmapEvent
// Il2CppName: remove_getSelectedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_getSelectedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getSelectedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetSelectedBeatmap
// Il2CppName: GetSelectedBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetSelectedBeatmap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetSelectedBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetSelectedBeatmapRpc
// Il2CppName: InvokeGetSelectedBeatmapRpc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeGetSelectedBeatmapRpc)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetSelectedBeatmapRpc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_recommendBeatmapEvent
// Il2CppName: add_recommendBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>*)>(&GlobalNamespace::MenuRpcManager::add_recommendBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_recommendBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_recommendBeatmapEvent
// Il2CppName: remove_recommendBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>*)>(&GlobalNamespace::MenuRpcManager::remove_recommendBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_recommendBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::RecommendBeatmap
// Il2CppName: RecommendBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(GlobalNamespace::BeatmapIdentifierNetSerializable*)>(&GlobalNamespace::MenuRpcManager::RecommendBeatmap)> {
  static const MethodInfo* get() {
    static auto* identifier = &::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "RecommendBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{identifier});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeRecommendBeatmap
// Il2CppName: InvokeRecommendBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*)>(&GlobalNamespace::MenuRpcManager::InvokeRecommendBeatmap)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* identifier = &::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeRecommendBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, identifier});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_clearRecommendedBeatmapEvent
// Il2CppName: add_clearRecommendedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_clearRecommendedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_clearRecommendedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_clearRecommendedBeatmapEvent
// Il2CppName: remove_clearRecommendedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_clearRecommendedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_clearRecommendedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::ClearRecommendedBeatmap
// Il2CppName: ClearRecommendedBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::ClearRecommendedBeatmap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "ClearRecommendedBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeClearRecommendedBeatmap
// Il2CppName: InvokeClearRecommendedBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeClearRecommendedBeatmap)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeClearRecommendedBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getRecommendedBeatmapEvent
// Il2CppName: add_getRecommendedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_getRecommendedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getRecommendedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getRecommendedBeatmapEvent
// Il2CppName: remove_getRecommendedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_getRecommendedBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getRecommendedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetRecommendedBeatmap
// Il2CppName: GetRecommendedBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetRecommendedBeatmap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetRecommendedBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetRecommendedBeatmap
// Il2CppName: InvokeGetRecommendedBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeGetRecommendedBeatmap)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetRecommendedBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setSelectGameplayModifiersEvent
// Il2CppName: add_setSelectGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>*)>(&GlobalNamespace::MenuRpcManager::add_setSelectGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "GameplayModifiers")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setSelectGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setSelectGameplayModifiersEvent
// Il2CppName: remove_setSelectGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>*)>(&GlobalNamespace::MenuRpcManager::remove_setSelectGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "GameplayModifiers")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setSelectGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetSelectedGameplayModifiers
// Il2CppName: SetSelectedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(GlobalNamespace::GameplayModifiers*)>(&GlobalNamespace::MenuRpcManager::SetSelectedGameplayModifiers)> {
  static const MethodInfo* get() {
    static auto* gameplayModifiers = &::il2cpp_utils::GetClassFromName("", "GameplayModifiers")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetSelectedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameplayModifiers});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetSelectedGameplayModifiers
// Il2CppName: InvokeSetSelectedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, GlobalNamespace::GameplayModifiers*)>(&GlobalNamespace::MenuRpcManager::InvokeSetSelectedGameplayModifiers)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* gameplayModifiers = &::il2cpp_utils::GetClassFromName("", "GameplayModifiers")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetSelectedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, gameplayModifiers});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getSelectedGameplayModifiersEvent
// Il2CppName: add_getSelectedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_getSelectedGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getSelectedGameplayModifiersEvent
// Il2CppName: remove_getSelectedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_getSelectedGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetSelectedGameplayModifiers
// Il2CppName: GetSelectedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetSelectedGameplayModifiers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetSelectedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetSelectedGameplayModifiers
// Il2CppName: InvokeGetSelectedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeGetSelectedGameplayModifiers)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetSelectedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_recommendGameplayModifiersEvent
// Il2CppName: add_recommendGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>*)>(&GlobalNamespace::MenuRpcManager::add_recommendGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "GameplayModifiers")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_recommendGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_recommendGameplayModifiersEvent
// Il2CppName: remove_recommendGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::GameplayModifiers*>*)>(&GlobalNamespace::MenuRpcManager::remove_recommendGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "GameplayModifiers")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_recommendGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::RecommendGameplayModifiers
// Il2CppName: RecommendGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(GlobalNamespace::GameplayModifiers*)>(&GlobalNamespace::MenuRpcManager::RecommendGameplayModifiers)> {
  static const MethodInfo* get() {
    static auto* gameplayModifiers = &::il2cpp_utils::GetClassFromName("", "GameplayModifiers")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "RecommendGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameplayModifiers});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeRecommendGameplayModifiers
// Il2CppName: InvokeRecommendGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, GlobalNamespace::GameplayModifiers*)>(&GlobalNamespace::MenuRpcManager::InvokeRecommendGameplayModifiers)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* gameplayModifiers = &::il2cpp_utils::GetClassFromName("", "GameplayModifiers")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeRecommendGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, gameplayModifiers});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_clearRecommendedGameplayModifiersEvent
// Il2CppName: add_clearRecommendedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_clearRecommendedGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_clearRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_clearRecommendedGameplayModifiersEvent
// Il2CppName: remove_clearRecommendedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_clearRecommendedGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_clearRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::ClearRecommendedGameplayModifiers
// Il2CppName: ClearRecommendedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::ClearRecommendedGameplayModifiers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "ClearRecommendedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeClearRecommendedGameplayModifiers
// Il2CppName: InvokeClearRecommendedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeClearRecommendedGameplayModifiers)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeClearRecommendedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getRecommendedGameplayModifiersEvent
// Il2CppName: add_getRecommendedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_getRecommendedGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getRecommendedGameplayModifiersEvent
// Il2CppName: remove_getRecommendedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_getRecommendedGameplayModifiersEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetRecommendedGameplayModifiers
// Il2CppName: GetRecommendedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetRecommendedGameplayModifiers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetRecommendedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetRecommendedGameplayModifiers
// Il2CppName: InvokeGetRecommendedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeGetRecommendedGameplayModifiers)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetRecommendedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getIsStartButtonEnabledEvent
// Il2CppName: add_getIsStartButtonEnabledEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_getIsStartButtonEnabledEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getIsStartButtonEnabledEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getIsStartButtonEnabledEvent
// Il2CppName: remove_getIsStartButtonEnabledEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_getIsStartButtonEnabledEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getIsStartButtonEnabledEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetIsStartButtonEnabled
// Il2CppName: GetIsStartButtonEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetIsStartButtonEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetIsStartButtonEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetIsStartButtonEnabled
// Il2CppName: InvokeGetIsStartButtonEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeGetIsStartButtonEnabled)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetIsStartButtonEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setIsStartButtonEnabledEvent
// Il2CppName: add_setIsStartButtonEnabledEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::CannotStartGameReason>*)>(&GlobalNamespace::MenuRpcManager::add_setIsStartButtonEnabledEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "CannotStartGameReason")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setIsStartButtonEnabledEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setIsStartButtonEnabledEvent
// Il2CppName: remove_setIsStartButtonEnabledEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::CannotStartGameReason>*)>(&GlobalNamespace::MenuRpcManager::remove_setIsStartButtonEnabledEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "CannotStartGameReason")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setIsStartButtonEnabledEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetIsStartButtonEnabled
// Il2CppName: SetIsStartButtonEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(GlobalNamespace::CannotStartGameReason)>(&GlobalNamespace::MenuRpcManager::SetIsStartButtonEnabled)> {
  static const MethodInfo* get() {
    static auto* reason = &::il2cpp_utils::GetClassFromName("", "CannotStartGameReason")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetIsStartButtonEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reason});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetIsStartButtonEnabled
// Il2CppName: InvokeSetIsStartButtonEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, GlobalNamespace::CannotStartGameReason)>(&GlobalNamespace::MenuRpcManager::InvokeSetIsStartButtonEnabled)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* reason = &::il2cpp_utils::GetClassFromName("", "CannotStartGameReason")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetIsStartButtonEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, reason});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_levelLoadErrorEvent
// Il2CppName: add_levelLoadErrorEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, ::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_levelLoadErrorEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_levelLoadErrorEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_levelLoadErrorEvent
// Il2CppName: remove_levelLoadErrorEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, ::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_levelLoadErrorEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_levelLoadErrorEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::LevelLoadError
// Il2CppName: LevelLoadError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::LevelLoadError)> {
  static const MethodInfo* get() {
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "LevelLoadError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeLevelLoadError
// Il2CppName: InvokeLevelLoadError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, ::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeLevelLoadError)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeLevelLoadError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, levelId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_levelLoadSuccessEvent
// Il2CppName: add_levelLoadSuccessEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, ::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_levelLoadSuccessEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_levelLoadSuccessEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_levelLoadSuccessEvent
// Il2CppName: remove_levelLoadSuccessEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, ::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_levelLoadSuccessEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_levelLoadSuccessEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::LevelLoadSuccess
// Il2CppName: LevelLoadSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::LevelLoadSuccess)> {
  static const MethodInfo* get() {
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "LevelLoadSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeLevelLoadSuccess
// Il2CppName: InvokeLevelLoadSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, ::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeLevelLoadSuccess)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeLevelLoadSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, levelId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_startedLevelEvent
// Il2CppName: add_startedLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_4<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float>*)>(&GlobalNamespace::MenuRpcManager::add_startedLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable"), ::il2cpp_utils::GetClassFromName("", "GameplayModifiers"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_startedLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_startedLevelEvent
// Il2CppName: remove_startedLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_4<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float>*)>(&GlobalNamespace::MenuRpcManager::remove_startedLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable"), ::il2cpp_utils::GetClassFromName("", "GameplayModifiers"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_startedLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::StartLevel
// Il2CppName: StartLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float)>(&GlobalNamespace::MenuRpcManager::StartLevel)> {
  static const MethodInfo* get() {
    static auto* beatmapId = &::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")->byval_arg;
    static auto* gameplayModifiers = &::il2cpp_utils::GetClassFromName("", "GameplayModifiers")->byval_arg;
    static auto* startTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "StartLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{beatmapId, gameplayModifiers, startTime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeStartLevel
// Il2CppName: InvokeStartLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*, GlobalNamespace::GameplayModifiers*, float)>(&GlobalNamespace::MenuRpcManager::InvokeStartLevel)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* beatmapId = &::il2cpp_utils::GetClassFromName("", "BeatmapIdentifierNetSerializable")->byval_arg;
    static auto* gameplayModifiers = &::il2cpp_utils::GetClassFromName("", "GameplayModifiers")->byval_arg;
    static auto* startTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeStartLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, beatmapId, gameplayModifiers, startTime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getStartedLevelEvent
// Il2CppName: add_getStartedLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_getStartedLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getStartedLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getStartedLevelEvent
// Il2CppName: remove_getStartedLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_getStartedLevelEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getStartedLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetStartedLevel
// Il2CppName: GetStartedLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetStartedLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetStartedLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetStartedLevel
// Il2CppName: InvokeGetStartedLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeGetStartedLevel)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetStartedLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getMultiplayerGameStateEvent
// Il2CppName: add_getMultiplayerGameStateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_getMultiplayerGameStateEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getMultiplayerGameStateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getMultiplayerGameStateEvent
// Il2CppName: remove_getMultiplayerGameStateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_getMultiplayerGameStateEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getMultiplayerGameStateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetMultiplayerGameState
// Il2CppName: GetMultiplayerGameState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetMultiplayerGameState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetMultiplayerGameState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetMultiplayerGameState
// Il2CppName: InvokeGetMultiplayerGameState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeGetMultiplayerGameState)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetMultiplayerGameState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setMultiplayerGameStateEvent
// Il2CppName: add_setMultiplayerGameStateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerGameState>*)>(&GlobalNamespace::MenuRpcManager::add_setMultiplayerGameStateEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "MultiplayerGameState")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setMultiplayerGameStateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setMultiplayerGameStateEvent
// Il2CppName: remove_setMultiplayerGameStateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::MultiplayerGameState>*)>(&GlobalNamespace::MenuRpcManager::remove_setMultiplayerGameStateEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "MultiplayerGameState")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setMultiplayerGameStateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetMultiplayerGameState
// Il2CppName: SetMultiplayerGameState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(GlobalNamespace::MultiplayerGameState)>(&GlobalNamespace::MenuRpcManager::SetMultiplayerGameState)> {
  static const MethodInfo* get() {
    static auto* lobbyState = &::il2cpp_utils::GetClassFromName("", "MultiplayerGameState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetMultiplayerGameState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lobbyState});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetMultiplayerGameState
// Il2CppName: InvokeSetMultiplayerGameState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, GlobalNamespace::MultiplayerGameState)>(&GlobalNamespace::MenuRpcManager::InvokeSetMultiplayerGameState)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* lobbyState = &::il2cpp_utils::GetClassFromName("", "MultiplayerGameState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetMultiplayerGameState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, lobbyState});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_cancelCountdownEvent
// Il2CppName: add_cancelCountdownEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_cancelCountdownEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_cancelCountdownEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_cancelCountdownEvent
// Il2CppName: remove_cancelCountdownEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_cancelCountdownEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_cancelCountdownEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::CancelCountdown
// Il2CppName: CancelCountdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::CancelCountdown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "CancelCountdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeCancelCountdown
// Il2CppName: InvokeCancelCountdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeCancelCountdown)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeCancelCountdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setCountdownEndTimeEvent
// Il2CppName: add_setCountdownEndTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, float>*)>(&GlobalNamespace::MenuRpcManager::add_setCountdownEndTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setCountdownEndTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setCountdownEndTimeEvent
// Il2CppName: remove_setCountdownEndTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, float>*)>(&GlobalNamespace::MenuRpcManager::remove_setCountdownEndTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setCountdownEndTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetCountdownEndTime
// Il2CppName: SetCountdownEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(float)>(&GlobalNamespace::MenuRpcManager::SetCountdownEndTime)> {
  static const MethodInfo* get() {
    static auto* newTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetCountdownEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newTime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetCountdownEndTime
// Il2CppName: InvokeSetCountdownEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, float)>(&GlobalNamespace::MenuRpcManager::InvokeSetCountdownEndTime)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* newTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetCountdownEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, newTime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getCountdownEndTimeEvent
// Il2CppName: add_getCountdownEndTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_getCountdownEndTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getCountdownEndTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getCountdownEndTimeEvent
// Il2CppName: remove_getCountdownEndTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_getCountdownEndTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getCountdownEndTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetCountdownEndTime
// Il2CppName: GetCountdownEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetCountdownEndTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetCountdownEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetCountdownEndTime
// Il2CppName: InvokeGetCountdownEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeGetCountdownEndTime)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetCountdownEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_cancelledLevelStartEvent
// Il2CppName: add_cancelledLevelStartEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_cancelledLevelStartEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_cancelledLevelStartEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_cancelledLevelStartEvent
// Il2CppName: remove_cancelledLevelStartEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_cancelledLevelStartEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_cancelledLevelStartEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::CancelLevelStart
// Il2CppName: CancelLevelStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::CancelLevelStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "CancelLevelStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeCancelLevelStart
// Il2CppName: InvokeCancelLevelStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeCancelLevelStart)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeCancelLevelStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getIsReadyEvent
// Il2CppName: add_getIsReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_getIsReadyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getIsReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getIsReadyEvent
// Il2CppName: remove_getIsReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_getIsReadyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getIsReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetIsReady
// Il2CppName: GetIsReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetIsReady)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetIsReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetIsReady
// Il2CppName: InvokeGetIsReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeGetIsReady)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetIsReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setIsReadyEvent
// Il2CppName: add_setIsReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, bool>*)>(&GlobalNamespace::MenuRpcManager::add_setIsReadyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setIsReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setIsReadyEvent
// Il2CppName: remove_setIsReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, bool>*)>(&GlobalNamespace::MenuRpcManager::remove_setIsReadyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setIsReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetIsReady
// Il2CppName: SetIsReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(bool)>(&GlobalNamespace::MenuRpcManager::SetIsReady)> {
  static const MethodInfo* get() {
    static auto* isReady = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetIsReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isReady});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetIsReady
// Il2CppName: InvokeSetIsReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, bool)>(&GlobalNamespace::MenuRpcManager::InvokeSetIsReady)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isReady = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetIsReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, isReady});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setStartGameTimeEvent
// Il2CppName: add_setStartGameTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, float>*)>(&GlobalNamespace::MenuRpcManager::add_setStartGameTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setStartGameTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setStartGameTimeEvent
// Il2CppName: remove_setStartGameTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, float>*)>(&GlobalNamespace::MenuRpcManager::remove_setStartGameTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setStartGameTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetStartGameTime
// Il2CppName: SetStartGameTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(float)>(&GlobalNamespace::MenuRpcManager::SetStartGameTime)> {
  static const MethodInfo* get() {
    static auto* newTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetStartGameTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newTime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetStartGameCountdown
// Il2CppName: InvokeSetStartGameCountdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, float)>(&GlobalNamespace::MenuRpcManager::InvokeSetStartGameCountdown)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* newTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetStartGameCountdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, newTime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_cancelStartGameTimeEvent
// Il2CppName: add_cancelStartGameTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_cancelStartGameTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_cancelStartGameTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_cancelStartGameTimeEvent
// Il2CppName: remove_cancelStartGameTimeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_cancelStartGameTimeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_cancelStartGameTimeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::CancelStartGameTime
// Il2CppName: CancelStartGameTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::CancelStartGameTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "CancelStartGameTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeCancelStartGameCountdown
// Il2CppName: InvokeCancelStartGameCountdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeCancelStartGameCountdown)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeCancelStartGameCountdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getIsInLobbyEvent
// Il2CppName: add_getIsInLobbyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_getIsInLobbyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getIsInLobbyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getIsInLobbyEvent
// Il2CppName: remove_getIsInLobbyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_getIsInLobbyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getIsInLobbyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetIsInLobby
// Il2CppName: GetIsInLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetIsInLobby)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetIsInLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetIsInLobby
// Il2CppName: InvokeGetIsInLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeGetIsInLobby)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetIsInLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setIsInLobbyEvent
// Il2CppName: add_setIsInLobbyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, bool>*)>(&GlobalNamespace::MenuRpcManager::add_setIsInLobbyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setIsInLobbyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setIsInLobbyEvent
// Il2CppName: remove_setIsInLobbyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, bool>*)>(&GlobalNamespace::MenuRpcManager::remove_setIsInLobbyEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setIsInLobbyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetIsInLobby
// Il2CppName: SetIsInLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(bool)>(&GlobalNamespace::MenuRpcManager::SetIsInLobby)> {
  static const MethodInfo* get() {
    static auto* isBack = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetIsInLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isBack});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetIsInLobby
// Il2CppName: InvokeSetIsInLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, bool)>(&GlobalNamespace::MenuRpcManager::InvokeSetIsInLobby)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isBack = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetIsInLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, isBack});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_getOwnedSongPacksEvent
// Il2CppName: add_getOwnedSongPacksEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_getOwnedSongPacksEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_getOwnedSongPacksEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_getOwnedSongPacksEvent
// Il2CppName: remove_getOwnedSongPacksEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_1<::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_getOwnedSongPacksEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_getOwnedSongPacksEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::GetOwnedSongPacks
// Il2CppName: GetOwnedSongPacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)()>(&GlobalNamespace::MenuRpcManager::GetOwnedSongPacks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "GetOwnedSongPacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeGetOwnedSongPacks
// Il2CppName: InvokeGetOwnedSongPacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeGetOwnedSongPacks)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeGetOwnedSongPacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_setOwnedSongPacksEvent
// Il2CppName: add_setOwnedSongPacksEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::SongPackMask>*)>(&GlobalNamespace::MenuRpcManager::add_setOwnedSongPacksEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "SongPackMask")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_setOwnedSongPacksEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_setOwnedSongPacksEvent
// Il2CppName: remove_setOwnedSongPacksEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, GlobalNamespace::SongPackMask>*)>(&GlobalNamespace::MenuRpcManager::remove_setOwnedSongPacksEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("", "SongPackMask")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_setOwnedSongPacksEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::SetOwnedSongPacks
// Il2CppName: SetOwnedSongPacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(GlobalNamespace::SongPackMask)>(&GlobalNamespace::MenuRpcManager::SetOwnedSongPacks)> {
  static const MethodInfo* get() {
    static auto* songPackMask = &::il2cpp_utils::GetClassFromName("", "SongPackMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "SetOwnedSongPacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{songPackMask});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeSetOwnedSongPacks
// Il2CppName: InvokeSetOwnedSongPacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, GlobalNamespace::SongPackMask)>(&GlobalNamespace::MenuRpcManager::InvokeSetOwnedSongPacks)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* songPackMask = &::il2cpp_utils::GetClassFromName("", "SongPackMask")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeSetOwnedSongPacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, songPackMask});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::add_requestedKickPlayerEvent
// Il2CppName: add_requestedKickPlayerEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, ::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::add_requestedKickPlayerEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "add_requestedKickPlayerEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::remove_requestedKickPlayerEvent
// Il2CppName: remove_requestedKickPlayerEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(System::Action_2<::Il2CppString*, ::Il2CppString*>*)>(&GlobalNamespace::MenuRpcManager::remove_requestedKickPlayerEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "remove_requestedKickPlayerEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::RequestKickPlayer
// Il2CppName: RequestKickPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::RequestKickPlayer)> {
  static const MethodInfo* get() {
    static auto* kickedPlayerId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "RequestKickPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{kickedPlayerId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MenuRpcManager::InvokeKickPlayer
// Il2CppName: InvokeKickPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MenuRpcManager::*)(::Il2CppString*, ::Il2CppString*)>(&GlobalNamespace::MenuRpcManager::InvokeKickPlayer)> {
  static const MethodInfo* get() {
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* kickedPlayerId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MenuRpcManager*), "InvokeKickPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userId, kickedPlayerId});
  }
};
