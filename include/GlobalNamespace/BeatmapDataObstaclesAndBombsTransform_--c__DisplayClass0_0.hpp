// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BeatmapDataObstaclesAndBombsTransform
#include "GlobalNamespace/BeatmapDataObstaclesAndBombsTransform.hpp"
// Including type: GameplayModifiers/EnabledObstacleType
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BeatmapDataItem
  class BeatmapDataItem;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0*, "", "BeatmapDataObstaclesAndBombsTransform/<>c__DisplayClass0_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x15
  #pragma pack(push, 1)
  // Autogenerated type: BeatmapDataObstaclesAndBombsTransform/<>c__DisplayClass0_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0 : public ::Il2CppObject {
    public:
    public:
    // public GameplayModifiers/EnabledObstacleType enabledObstaclesType
    // Size: 0x4
    // Offset: 0x10
    ::GlobalNamespace::GameplayModifiers::EnabledObstacleType enabledObstaclesType;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::GameplayModifiers::EnabledObstacleType) == 0x4);
    // public System.Boolean noBombs
    // Size: 0x1
    // Offset: 0x14
    bool noBombs;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public GameplayModifiers/EnabledObstacleType enabledObstaclesType
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiers::EnabledObstacleType& dyn_enabledObstaclesType();
    // Get instance field reference: public System.Boolean noBombs
    [[deprecated("Use field access instead!")]] bool& dyn_noBombs();
    // public System.Void .ctor()
    // Offset: 0x1399434
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0*, creationType>()));
    }
    // BeatmapDataItem <CreateTransformedData>g__ProcessData|0(BeatmapDataItem beatmapDataItem)
    // Offset: 0x1399540
    ::GlobalNamespace::BeatmapDataItem* $CreateTransformedData$g__ProcessData_0(::GlobalNamespace::BeatmapDataItem* beatmapDataItem);
  }; // BeatmapDataObstaclesAndBombsTransform/<>c__DisplayClass0_0
  #pragma pack(pop)
  static check_size<sizeof(BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0), 20 + sizeof(bool)> __GlobalNamespace_BeatmapDataObstaclesAndBombsTransform_$$c__DisplayClass0_0SizeCheck;
  static_assert(sizeof(BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0) == 0x15);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::$CreateTransformedData$g__ProcessData_0
// Il2CppName: <CreateTransformedData>g__ProcessData|0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::BeatmapDataItem* (GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::*)(::GlobalNamespace::BeatmapDataItem*)>(&GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::$CreateTransformedData$g__ProcessData_0)> {
  static const MethodInfo* get() {
    static auto* beatmapDataItem = &::il2cpp_utils::GetClassFromName("", "BeatmapDataItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0*), "<CreateTransformedData>g__ProcessData|0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{beatmapDataItem});
  }
};
