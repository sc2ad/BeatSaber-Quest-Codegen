// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PersistentScriptableObject
#include "GlobalNamespace/PersistentScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: BlueNoiseDithering
  class BlueNoiseDithering;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BlueNoiseDithering);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BlueNoiseDithering*, "", "BlueNoiseDithering");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: BlueNoiseDithering
  // [TokenAttribute] Offset: FFFFFFFF
  class BlueNoiseDithering : public ::GlobalNamespace::PersistentScriptableObject {
    public:
    public:
    // private UnityEngine.Texture2D _noiseTexture
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Texture2D* noiseTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10C6EE8
    // Get static field: static private readonly System.Int32 _noiseParamsID
    static int _get__noiseParamsID();
    // Set static field: static private readonly System.Int32 _noiseParamsID
    static void _set__noiseParamsID(int value);
    // [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10C6EF8
    // Get static field: static private readonly System.Int32 _globalNoiseTextureID
    static int _get__globalNoiseTextureID();
    // Set static field: static private readonly System.Int32 _globalNoiseTextureID
    static void _set__globalNoiseTextureID(int value);
    // Get instance field reference: private UnityEngine.Texture2D _noiseTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn__noiseTexture();
    // public System.Void .ctor()
    // Offset: 0x1E7D56C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BlueNoiseDithering* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlueNoiseDithering::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BlueNoiseDithering*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x1E7D574
    static void _cctor();
    // public System.Void SetBlueNoiseShaderParams(System.Int32 cameraPixelWidth, System.Int32 cameraPixelHeight)
    // Offset: 0x1E7D44C
    void SetBlueNoiseShaderParams(int cameraPixelWidth, int cameraPixelHeight);
  }; // BlueNoiseDithering
  #pragma pack(pop)
  static check_size<sizeof(BlueNoiseDithering), 24 + sizeof(::UnityEngine::Texture2D*)> __GlobalNamespace_BlueNoiseDitheringSizeCheck;
  static_assert(sizeof(BlueNoiseDithering) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BlueNoiseDithering::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::BlueNoiseDithering::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::BlueNoiseDithering::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BlueNoiseDithering*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BlueNoiseDithering::SetBlueNoiseShaderParams
// Il2CppName: SetBlueNoiseShaderParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::BlueNoiseDithering::*)(int, int)>(&GlobalNamespace::BlueNoiseDithering::SetBlueNoiseShaderParams)> {
  static const MethodInfo* get() {
    static auto* cameraPixelWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cameraPixelHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BlueNoiseDithering*), "SetBlueNoiseShaderParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cameraPixelWidth, cameraPixelHeight});
  }
};
