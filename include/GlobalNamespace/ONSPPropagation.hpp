// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ONSPPropagation
  class ONSPPropagation;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::ONSPPropagation);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ONSPPropagation*, "", "ONSPPropagation");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: ONSPPropagation
  // [TokenAttribute] Offset: FFFFFFFF
  class ONSPPropagation : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType
    struct ovrAudioScalarType;
    // Nested type: ::GlobalNamespace::ONSPPropagation::ClientType
    class ClientType;
    // Nested type: ::GlobalNamespace::ONSPPropagation::PropagationInterface
    class PropagationInterface;
    // Nested type: ::GlobalNamespace::ONSPPropagation::UnityNativeInterface
    class UnityNativeInterface;
    // Nested type: ::GlobalNamespace::ONSPPropagation::WwisePluginInterface
    class WwisePluginInterface;
    // Nested type: ::GlobalNamespace::ONSPPropagation::FMODPluginInterface
    class FMODPluginInterface;
    // Get static field: static private ONSPPropagation/PropagationInterface CachedInterface
    static ::GlobalNamespace::ONSPPropagation::PropagationInterface* _get_CachedInterface();
    // Set static field: static private ONSPPropagation/PropagationInterface CachedInterface
    static void _set_CachedInterface(::GlobalNamespace::ONSPPropagation::PropagationInterface* value);
    // static public ONSPPropagation/PropagationInterface get_Interface()
    // Offset: 0x137E620
    static ::GlobalNamespace::ONSPPropagation::PropagationInterface* get_Interface();
    // public System.Void .ctor()
    // Offset: 0x137EABC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ONSPPropagation* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ONSPPropagation*, creationType>()));
    }
    // static private ONSPPropagation/PropagationInterface FindInterface()
    // Offset: 0x137E690
    static ::GlobalNamespace::ONSPPropagation::PropagationInterface* FindInterface();
  }; // ONSPPropagation
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::get_Interface
// Il2CppName: get_Interface
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ONSPPropagation::PropagationInterface* (*)()>(&GlobalNamespace::ONSPPropagation::get_Interface)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation*), "get_Interface", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagation::FindInterface
// Il2CppName: FindInterface
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ONSPPropagation::PropagationInterface* (*)()>(&GlobalNamespace::ONSPPropagation::FindInterface)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ONSPPropagation*), "FindInterface", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
