// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: NoteDebris
  class NoteDebris;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: INoteDebrisDidFinishEvent
  // [TokenAttribute] Offset: FFFFFFFF
  class INoteDebrisDidFinishEvent {
    public:
    // Creating value type constructor for type: INoteDebrisDidFinishEvent
    INoteDebrisDidFinishEvent() noexcept {}
    // public System.Void HandleNoteDebrisDidFinish(NoteDebris noteDebris)
    // Offset: 0xFFFFFFFF
    void HandleNoteDebrisDidFinish(GlobalNamespace::NoteDebris* noteDebris);
  }; // INoteDebrisDidFinishEvent
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::INoteDebrisDidFinishEvent*, "", "INoteDebrisDidFinishEvent");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::INoteDebrisDidFinishEvent::HandleNoteDebrisDidFinish
// Il2CppName: HandleNoteDebrisDidFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::INoteDebrisDidFinishEvent::*)(GlobalNamespace::NoteDebris*)>(&GlobalNamespace::INoteDebrisDidFinishEvent::HandleNoteDebrisDidFinish)> {
  static const MethodInfo* get() {
    static auto* noteDebris = &::il2cpp_utils::GetClassFromName("", "NoteDebris")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::INoteDebrisDidFinishEvent*), "HandleNoteDebrisDidFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{noteDebris});
  }
};
