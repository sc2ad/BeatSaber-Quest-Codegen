// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: IBakedLightWithRenderer
  // [TokenAttribute] Offset: FFFFFFFF
  class IBakedLightWithRenderer {
    public:
    // Creating value type constructor for type: IBakedLightWithRenderer
    IBakedLightWithRenderer() noexcept {}
    // public UnityEngine.Material get_bakingMaterial()
    // Offset: 0xFFFFFFFF
    UnityEngine::Material* get_bakingMaterial();
  }; // IBakedLightWithRenderer
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::IBakedLightWithRenderer*, "", "IBakedLightWithRenderer");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::IBakedLightWithRenderer::get_bakingMaterial
// Il2CppName: get_bakingMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (GlobalNamespace::IBakedLightWithRenderer::*)()>(&GlobalNamespace::IBakedLightWithRenderer::get_bakingMaterial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IBakedLightWithRenderer*), "get_bakingMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
