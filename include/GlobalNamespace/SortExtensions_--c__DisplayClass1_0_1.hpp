// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: SortExtensions
#include "GlobalNamespace/SortExtensions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: SortExtensions/<>c__DisplayClass1_0`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: ED93B0
  template<typename T>
  class SortExtensions::$$c__DisplayClass1_0_1 : public ::Il2CppObject {
    public:
    // public System.Func`2<T,System.Int32> getSortIndex
    // Size: 0x8
    // Offset: 0x0
    System::Func_2<T, int>* getSortIndex;
    // Field size check
    static_assert(sizeof(System::Func_2<T, int>*) == 0x8);
    // Creating value type constructor for type: $$c__DisplayClass1_0_1
    $$c__DisplayClass1_0_1(System::Func_2<T, int>* getSortIndex_ = {}) noexcept : getSortIndex{getSortIndex_} {}
    // Creating conversion operator: operator System::Func_2<T, int>*
    constexpr operator System::Func_2<T, int>*() const noexcept {
      return getSortIndex;
    }
    // Autogenerated instance field getter
    // Get instance field: public System.Func`2<T,System.Int32> getSortIndex
    System::Func_2<T, int>*& dyn_getSortIndex() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SortExtensions::$$c__DisplayClass1_0_1::dyn_getSortIndex");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getSortIndex"))->offset;
      return *reinterpret_cast<System::Func_2<T, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // System.Int32 <Sort>b__0(T a, T b)
    // Offset: 0xFFFFFFFF
    int $Sort$b__0(T a, T b) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SortExtensions::$$c__DisplayClass1_0_1::<Sort>b__0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Sort>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
      auto ___instance_arg = this;
      return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, a, b);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SortExtensions::$$c__DisplayClass1_0_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SortExtensions::$$c__DisplayClass1_0_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SortExtensions::$$c__DisplayClass1_0_1<T>*, creationType>()));
    }
  }; // SortExtensions/<>c__DisplayClass1_0`1
  // Could not write size check! Type: SortExtensions/<>c__DisplayClass1_0`1 is generic, or has no fields that are valid for size checks!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(GlobalNamespace::SortExtensions::$$c__DisplayClass1_0_1, "", "SortExtensions/<>c__DisplayClass1_0`1");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
