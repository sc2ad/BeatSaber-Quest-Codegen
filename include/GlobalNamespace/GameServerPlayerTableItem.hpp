// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GameServerPlayerTableItem
  class GameServerPlayerTableItem;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GameServerPlayerTableItem);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GameServerPlayerTableItem*, "", "GameServerPlayerTableItem");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x29
  #pragma pack(push, 1)
  // Autogenerated type: GameServerPlayerTableItem
  // [TokenAttribute] Offset: FFFFFFFF
  class GameServerPlayerTableItem : public ::Il2CppObject {
    public:
    public:
    // public readonly System.String playerName
    // Size: 0x8
    // Offset: 0x10
    ::StringW playerName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public readonly System.String suggestedLevel
    // Size: 0x8
    // Offset: 0x18
    ::StringW suggestedLevel;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public readonly System.String suggestedModifiers
    // Size: 0x8
    // Offset: 0x20
    ::StringW suggestedModifiers;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public readonly System.Boolean isReady
    // Size: 0x1
    // Offset: 0x28
    bool isReady;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public readonly System.String playerName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_playerName();
    // Get instance field reference: public readonly System.String suggestedLevel
    [[deprecated("Use field access instead!")]] ::StringW& dyn_suggestedLevel();
    // Get instance field reference: public readonly System.String suggestedModifiers
    [[deprecated("Use field access instead!")]] ::StringW& dyn_suggestedModifiers();
    // Get instance field reference: public readonly System.Boolean isReady
    [[deprecated("Use field access instead!")]] bool& dyn_isReady();
    // public System.Void .ctor(System.String playerName, System.String suggestedLevel, System.String suggestedModifiers, System.Boolean isReady)
    // Offset: 0x13D04C0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GameServerPlayerTableItem* New_ctor(::StringW playerName, ::StringW suggestedLevel, ::StringW suggestedModifiers, bool isReady) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableItem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GameServerPlayerTableItem*, creationType>(playerName, suggestedLevel, suggestedModifiers, isReady)));
    }
  }; // GameServerPlayerTableItem
  #pragma pack(pop)
  static check_size<sizeof(GameServerPlayerTableItem), 40 + sizeof(bool)> __GlobalNamespace_GameServerPlayerTableItemSizeCheck;
  static_assert(sizeof(GameServerPlayerTableItem) == 0x29);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GameServerPlayerTableItem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
