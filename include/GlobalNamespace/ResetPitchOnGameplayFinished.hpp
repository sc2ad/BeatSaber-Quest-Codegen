// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: GameplayLevelSceneTransitionEvents
  class GameplayLevelSceneTransitionEvents;
  // Forward declaring type: AudioManagerSO
  class AudioManagerSO;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: ResetPitchOnGameplayFinished
  // [TokenAttribute] Offset: FFFFFFFF
  class ResetPitchOnGameplayFinished : public ::Il2CppObject {
    public:
    // private readonly GameplayLevelSceneTransitionEvents _gameplayLevelSceneTransitionEvents
    // Size: 0x8
    // Offset: 0x10
    GlobalNamespace::GameplayLevelSceneTransitionEvents* gameplayLevelSceneTransitionEvents;
    // Field size check
    static_assert(sizeof(GlobalNamespace::GameplayLevelSceneTransitionEvents*) == 0x8);
    // private readonly AudioManagerSO _audioManager
    // Size: 0x8
    // Offset: 0x18
    GlobalNamespace::AudioManagerSO* audioManager;
    // Field size check
    static_assert(sizeof(GlobalNamespace::AudioManagerSO*) == 0x8);
    // Creating value type constructor for type: ResetPitchOnGameplayFinished
    ResetPitchOnGameplayFinished(GlobalNamespace::GameplayLevelSceneTransitionEvents* gameplayLevelSceneTransitionEvents_ = {}, GlobalNamespace::AudioManagerSO* audioManager_ = {}) noexcept : gameplayLevelSceneTransitionEvents{gameplayLevelSceneTransitionEvents_}, audioManager{audioManager_} {}
    // Get instance field reference: private readonly GameplayLevelSceneTransitionEvents _gameplayLevelSceneTransitionEvents
    GlobalNamespace::GameplayLevelSceneTransitionEvents*& dyn__gameplayLevelSceneTransitionEvents();
    // Get instance field reference: private readonly AudioManagerSO _audioManager
    GlobalNamespace::AudioManagerSO*& dyn__audioManager();
    // public System.Void .ctor(GameplayLevelSceneTransitionEvents gameplayLevelSceneTransitionEvents, AudioManagerSO audioManager)
    // Offset: 0x11C1364
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ResetPitchOnGameplayFinished* New_ctor(GlobalNamespace::GameplayLevelSceneTransitionEvents* gameplayLevelSceneTransitionEvents, GlobalNamespace::AudioManagerSO* audioManager) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResetPitchOnGameplayFinished::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ResetPitchOnGameplayFinished*, creationType>(gameplayLevelSceneTransitionEvents, audioManager)));
    }
    // private System.Void HandleAnyGameplayLevelDidFinish()
    // Offset: 0x11C14E0
    void HandleAnyGameplayLevelDidFinish();
    // protected override System.Void Finalize()
    // Offset: 0x11C1404
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // ResetPitchOnGameplayFinished
  #pragma pack(pop)
  static check_size<sizeof(ResetPitchOnGameplayFinished), 24 + sizeof(GlobalNamespace::AudioManagerSO*)> __GlobalNamespace_ResetPitchOnGameplayFinishedSizeCheck;
  static_assert(sizeof(ResetPitchOnGameplayFinished) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ResetPitchOnGameplayFinished*, "", "ResetPitchOnGameplayFinished");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::ResetPitchOnGameplayFinished::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::ResetPitchOnGameplayFinished::HandleAnyGameplayLevelDidFinish
// Il2CppName: HandleAnyGameplayLevelDidFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ResetPitchOnGameplayFinished::*)()>(&GlobalNamespace::ResetPitchOnGameplayFinished::HandleAnyGameplayLevelDidFinish)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ResetPitchOnGameplayFinished*), "HandleAnyGameplayLevelDidFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ResetPitchOnGameplayFinished::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ResetPitchOnGameplayFinished::*)()>(&GlobalNamespace::ResetPitchOnGameplayFinished::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ResetPitchOnGameplayFinished*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
