// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaPressableButton
#include "GlobalNamespace/GorillaPressableButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: PurchaseItemButton
  class PurchaseItemButton;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::PurchaseItemButton);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::PurchaseItemButton*, "", "PurchaseItemButton");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: PurchaseItemButton
  // [TokenAttribute] Offset: FFFFFFFF
  class PurchaseItemButton : public ::GlobalNamespace::GorillaPressableButton {
    public:
    // Nested type: ::GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2
    class $ButtonColorUpdate$d__2;
    public:
    // public System.String buttonSide
    // Size: 0x8
    // Offset: 0x58
    ::StringW buttonSide;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.String buttonSide
    [[deprecated("Use field access instead!")]] ::StringW& dyn_buttonSide();
    // private System.Collections.IEnumerator ButtonColorUpdate()
    // Offset: 0xCC169C
    ::System::Collections::IEnumerator* ButtonColorUpdate();
    // public System.Void .ctor()
    // Offset: 0xCC1738
    // Implemented from: GorillaPressableButton
    // Base method: System.Void GorillaPressableButton::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PurchaseItemButton* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseItemButton::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PurchaseItemButton*, creationType>()));
    }
    // public override System.Void ButtonActivationWithHand(System.Boolean isLeftHand)
    // Offset: 0xCC15FC
    // Implemented from: GorillaPressableButton
    // Base method: System.Void GorillaPressableButton::ButtonActivationWithHand(System.Boolean isLeftHand)
    void ButtonActivationWithHand(bool isLeftHand);
  }; // PurchaseItemButton
  #pragma pack(pop)
  static check_size<sizeof(PurchaseItemButton), 88 + sizeof(::StringW)> __GlobalNamespace_PurchaseItemButtonSizeCheck;
  static_assert(sizeof(PurchaseItemButton) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::PurchaseItemButton::ButtonColorUpdate
// Il2CppName: ButtonColorUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GlobalNamespace::PurchaseItemButton::*)()>(&GlobalNamespace::PurchaseItemButton::ButtonColorUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PurchaseItemButton*), "ButtonColorUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::PurchaseItemButton::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::PurchaseItemButton::ButtonActivationWithHand
// Il2CppName: ButtonActivationWithHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PurchaseItemButton::*)(bool)>(&GlobalNamespace::PurchaseItemButton::ButtonActivationWithHand)> {
  static const MethodInfo* get() {
    static auto* isLeftHand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PurchaseItemButton*), "ButtonActivationWithHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isLeftHand});
  }
};
