// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: SliderIntensityEffect
#include "GlobalNamespace/SliderIntensityEffect.hpp"
// Including type: EaseType
#include "GlobalNamespace/EaseType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SliderIntensityEffect::FadeElement);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SliderIntensityEffect::FadeElement*, "", "SliderIntensityEffect/FadeElement");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: SliderIntensityEffect/FadeElement
  // [TokenAttribute] Offset: FFFFFFFF
  class SliderIntensityEffect::FadeElement : public ::Il2CppObject {
    public:
    public:
    // public System.Single duration
    // Size: 0x4
    // Offset: 0x10
    float duration;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public readonly System.Single startIntensity
    // Size: 0x4
    // Offset: 0x14
    float startIntensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public readonly System.Single endIntensity
    // Size: 0x4
    // Offset: 0x18
    float endIntensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public readonly EaseType easeType
    // Size: 0x4
    // Offset: 0x1C
    ::GlobalNamespace::EaseType easeType;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::EaseType) == 0x4);
    // public readonly System.Action startCallback
    // Size: 0x8
    // Offset: 0x20
    ::System::Action* startCallback;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    public:
    // Get instance field reference: public System.Single duration
    [[deprecated("Use field access instead!")]] float& dyn_duration();
    // Get instance field reference: public readonly System.Single startIntensity
    [[deprecated("Use field access instead!")]] float& dyn_startIntensity();
    // Get instance field reference: public readonly System.Single endIntensity
    [[deprecated("Use field access instead!")]] float& dyn_endIntensity();
    // Get instance field reference: public readonly EaseType easeType
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::EaseType& dyn_easeType();
    // Get instance field reference: public readonly System.Action startCallback
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_startCallback();
    // public System.Void .ctor(EaseType easeType, System.Single startIntensity, System.Single endIntensity, System.Action startCallback)
    // Offset: 0x1495B10
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SliderIntensityEffect::FadeElement* New_ctor(::GlobalNamespace::EaseType easeType, float startIntensity, float endIntensity, ::System::Action* startCallback) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderIntensityEffect::FadeElement::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SliderIntensityEffect::FadeElement*, creationType>(easeType, startIntensity, endIntensity, startCallback)));
    }
  }; // SliderIntensityEffect/FadeElement
  #pragma pack(pop)
  static check_size<sizeof(SliderIntensityEffect::FadeElement), 32 + sizeof(::System::Action*)> __GlobalNamespace_SliderIntensityEffect_FadeElementSizeCheck;
  static_assert(sizeof(SliderIntensityEffect::FadeElement) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SliderIntensityEffect::FadeElement::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
