// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0xD0
  #pragma pack(push, 1)
  // Autogenerated type: AvatarData
  // [TokenAttribute] Offset: FFFFFFFF
  class AvatarData : public ::Il2CppObject {
    public:
    // [CompilerGeneratedAttribute] Offset: 0xF03CCC
    // private System.String <headTopId>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* headTopId;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xF03CDC
    // private System.String <glassesId>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppString* glassesId;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xF03CEC
    // private System.String <facialHairId>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::Il2CppString* facialHairId;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xF03CFC
    // private System.String <handsId>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::Il2CppString* handsId;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xF03D0C
    // private System.String <clothesId>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::Il2CppString* clothesId;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xF03D1C
    // private System.String <eyesId>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::Il2CppString* eyesId;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xF03D2C
    // private System.String <mouthId>k__BackingField
    // Size: 0x8
    // Offset: 0x40
    ::Il2CppString* mouthId;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xF03D3C
    // private UnityEngine.Color <headTopPrimaryColor>k__BackingField
    // Size: 0x10
    // Offset: 0x48
    UnityEngine::Color headTopPrimaryColor;
    // Field size check
    static_assert(sizeof(UnityEngine::Color) == 0x10);
    // [CompilerGeneratedAttribute] Offset: 0xF03D4C
    // private UnityEngine.Color <headTopSecondaryColor>k__BackingField
    // Size: 0x10
    // Offset: 0x58
    UnityEngine::Color headTopSecondaryColor;
    // Field size check
    static_assert(sizeof(UnityEngine::Color) == 0x10);
    // [CompilerGeneratedAttribute] Offset: 0xF03D5C
    // private UnityEngine.Color <glassesColor>k__BackingField
    // Size: 0x10
    // Offset: 0x68
    UnityEngine::Color glassesColor;
    // Field size check
    static_assert(sizeof(UnityEngine::Color) == 0x10);
    // [CompilerGeneratedAttribute] Offset: 0xF03D6C
    // private UnityEngine.Color <facialHairColor>k__BackingField
    // Size: 0x10
    // Offset: 0x78
    UnityEngine::Color facialHairColor;
    // Field size check
    static_assert(sizeof(UnityEngine::Color) == 0x10);
    // [CompilerGeneratedAttribute] Offset: 0xF03D7C
    // private UnityEngine.Color <handsColor>k__BackingField
    // Size: 0x10
    // Offset: 0x88
    UnityEngine::Color handsColor;
    // Field size check
    static_assert(sizeof(UnityEngine::Color) == 0x10);
    // [CompilerGeneratedAttribute] Offset: 0xF03D8C
    // private UnityEngine.Color <clothesPrimaryColor>k__BackingField
    // Size: 0x10
    // Offset: 0x98
    UnityEngine::Color clothesPrimaryColor;
    // Field size check
    static_assert(sizeof(UnityEngine::Color) == 0x10);
    // [CompilerGeneratedAttribute] Offset: 0xF03D9C
    // private UnityEngine.Color <clothesSecondaryColor>k__BackingField
    // Size: 0x10
    // Offset: 0xA8
    UnityEngine::Color clothesSecondaryColor;
    // Field size check
    static_assert(sizeof(UnityEngine::Color) == 0x10);
    // [CompilerGeneratedAttribute] Offset: 0xF03DAC
    // private UnityEngine.Color <clothesDetailColor>k__BackingField
    // Size: 0x10
    // Offset: 0xB8
    UnityEngine::Color clothesDetailColor;
    // Field size check
    static_assert(sizeof(UnityEngine::Color) == 0x10);
    // [CompilerGeneratedAttribute] Offset: 0xF03DBC
    // private System.String <skinColorId>k__BackingField
    // Size: 0x8
    // Offset: 0xC8
    ::Il2CppString* skinColorId;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // Creating value type constructor for type: AvatarData
    AvatarData(::Il2CppString* headTopId_ = {}, ::Il2CppString* glassesId_ = {}, ::Il2CppString* facialHairId_ = {}, ::Il2CppString* handsId_ = {}, ::Il2CppString* clothesId_ = {}, ::Il2CppString* eyesId_ = {}, ::Il2CppString* mouthId_ = {}, UnityEngine::Color headTopPrimaryColor_ = {}, UnityEngine::Color headTopSecondaryColor_ = {}, UnityEngine::Color glassesColor_ = {}, UnityEngine::Color facialHairColor_ = {}, UnityEngine::Color handsColor_ = {}, UnityEngine::Color clothesPrimaryColor_ = {}, UnityEngine::Color clothesSecondaryColor_ = {}, UnityEngine::Color clothesDetailColor_ = {}, ::Il2CppString* skinColorId_ = {}) noexcept : headTopId{headTopId_}, glassesId{glassesId_}, facialHairId{facialHairId_}, handsId{handsId_}, clothesId{clothesId_}, eyesId{eyesId_}, mouthId{mouthId_}, headTopPrimaryColor{headTopPrimaryColor_}, headTopSecondaryColor{headTopSecondaryColor_}, glassesColor{glassesColor_}, facialHairColor{facialHairColor_}, handsColor{handsColor_}, clothesPrimaryColor{clothesPrimaryColor_}, clothesSecondaryColor{clothesSecondaryColor_}, clothesDetailColor{clothesDetailColor_}, skinColorId{skinColorId_} {}
    // Get instance field reference: private System.String <headTopId>k__BackingField
    ::Il2CppString*& dyn_$headTopId$k__BackingField();
    // Get instance field reference: private System.String <glassesId>k__BackingField
    ::Il2CppString*& dyn_$glassesId$k__BackingField();
    // Get instance field reference: private System.String <facialHairId>k__BackingField
    ::Il2CppString*& dyn_$facialHairId$k__BackingField();
    // Get instance field reference: private System.String <handsId>k__BackingField
    ::Il2CppString*& dyn_$handsId$k__BackingField();
    // Get instance field reference: private System.String <clothesId>k__BackingField
    ::Il2CppString*& dyn_$clothesId$k__BackingField();
    // Get instance field reference: private System.String <eyesId>k__BackingField
    ::Il2CppString*& dyn_$eyesId$k__BackingField();
    // Get instance field reference: private System.String <mouthId>k__BackingField
    ::Il2CppString*& dyn_$mouthId$k__BackingField();
    // Get instance field reference: private UnityEngine.Color <headTopPrimaryColor>k__BackingField
    UnityEngine::Color& dyn_$headTopPrimaryColor$k__BackingField();
    // Get instance field reference: private UnityEngine.Color <headTopSecondaryColor>k__BackingField
    UnityEngine::Color& dyn_$headTopSecondaryColor$k__BackingField();
    // Get instance field reference: private UnityEngine.Color <glassesColor>k__BackingField
    UnityEngine::Color& dyn_$glassesColor$k__BackingField();
    // Get instance field reference: private UnityEngine.Color <facialHairColor>k__BackingField
    UnityEngine::Color& dyn_$facialHairColor$k__BackingField();
    // Get instance field reference: private UnityEngine.Color <handsColor>k__BackingField
    UnityEngine::Color& dyn_$handsColor$k__BackingField();
    // Get instance field reference: private UnityEngine.Color <clothesPrimaryColor>k__BackingField
    UnityEngine::Color& dyn_$clothesPrimaryColor$k__BackingField();
    // Get instance field reference: private UnityEngine.Color <clothesSecondaryColor>k__BackingField
    UnityEngine::Color& dyn_$clothesSecondaryColor$k__BackingField();
    // Get instance field reference: private UnityEngine.Color <clothesDetailColor>k__BackingField
    UnityEngine::Color& dyn_$clothesDetailColor$k__BackingField();
    // Get instance field reference: private System.String <skinColorId>k__BackingField
    ::Il2CppString*& dyn_$skinColorId$k__BackingField();
    // public System.String get_headTopId()
    // Offset: 0x1249D84
    ::Il2CppString* get_headTopId();
    // public System.Void set_headTopId(System.String value)
    // Offset: 0x1249D8C
    void set_headTopId(::Il2CppString* value);
    // public System.String get_glassesId()
    // Offset: 0x1249D94
    ::Il2CppString* get_glassesId();
    // public System.Void set_glassesId(System.String value)
    // Offset: 0x1249D9C
    void set_glassesId(::Il2CppString* value);
    // public System.String get_facialHairId()
    // Offset: 0x1249DA4
    ::Il2CppString* get_facialHairId();
    // public System.Void set_facialHairId(System.String value)
    // Offset: 0x1249DAC
    void set_facialHairId(::Il2CppString* value);
    // public System.String get_handsId()
    // Offset: 0x1249DB4
    ::Il2CppString* get_handsId();
    // public System.Void set_handsId(System.String value)
    // Offset: 0x1249DBC
    void set_handsId(::Il2CppString* value);
    // public System.String get_clothesId()
    // Offset: 0x1249DC4
    ::Il2CppString* get_clothesId();
    // public System.Void set_clothesId(System.String value)
    // Offset: 0x1249DCC
    void set_clothesId(::Il2CppString* value);
    // public System.String get_eyesId()
    // Offset: 0x1249DD4
    ::Il2CppString* get_eyesId();
    // public System.Void set_eyesId(System.String value)
    // Offset: 0x1249DDC
    void set_eyesId(::Il2CppString* value);
    // public System.String get_mouthId()
    // Offset: 0x1249DE4
    ::Il2CppString* get_mouthId();
    // public System.Void set_mouthId(System.String value)
    // Offset: 0x1249DEC
    void set_mouthId(::Il2CppString* value);
    // public UnityEngine.Color get_headTopPrimaryColor()
    // Offset: 0x1249DF4
    UnityEngine::Color get_headTopPrimaryColor();
    // public System.Void set_headTopPrimaryColor(UnityEngine.Color value)
    // Offset: 0x1249E00
    void set_headTopPrimaryColor(UnityEngine::Color value);
    // public UnityEngine.Color get_headTopSecondaryColor()
    // Offset: 0x1249E0C
    UnityEngine::Color get_headTopSecondaryColor();
    // public System.Void set_headTopSecondaryColor(UnityEngine.Color value)
    // Offset: 0x1249E18
    void set_headTopSecondaryColor(UnityEngine::Color value);
    // public UnityEngine.Color get_glassesColor()
    // Offset: 0x1249E24
    UnityEngine::Color get_glassesColor();
    // public System.Void set_glassesColor(UnityEngine.Color value)
    // Offset: 0x1249E30
    void set_glassesColor(UnityEngine::Color value);
    // public UnityEngine.Color get_facialHairColor()
    // Offset: 0x1249E3C
    UnityEngine::Color get_facialHairColor();
    // public System.Void set_facialHairColor(UnityEngine.Color value)
    // Offset: 0x1249E48
    void set_facialHairColor(UnityEngine::Color value);
    // public UnityEngine.Color get_handsColor()
    // Offset: 0x1249E54
    UnityEngine::Color get_handsColor();
    // public System.Void set_handsColor(UnityEngine.Color value)
    // Offset: 0x1249E60
    void set_handsColor(UnityEngine::Color value);
    // public UnityEngine.Color get_clothesPrimaryColor()
    // Offset: 0x1249E6C
    UnityEngine::Color get_clothesPrimaryColor();
    // public System.Void set_clothesPrimaryColor(UnityEngine.Color value)
    // Offset: 0x1249E78
    void set_clothesPrimaryColor(UnityEngine::Color value);
    // public UnityEngine.Color get_clothesSecondaryColor()
    // Offset: 0x1249E84
    UnityEngine::Color get_clothesSecondaryColor();
    // public System.Void set_clothesSecondaryColor(UnityEngine.Color value)
    // Offset: 0x1249E90
    void set_clothesSecondaryColor(UnityEngine::Color value);
    // public UnityEngine.Color get_clothesDetailColor()
    // Offset: 0x1249E9C
    UnityEngine::Color get_clothesDetailColor();
    // public System.Void set_clothesDetailColor(UnityEngine.Color value)
    // Offset: 0x1249EA8
    void set_clothesDetailColor(UnityEngine::Color value);
    // public System.String get_skinColorId()
    // Offset: 0x1249EB4
    ::Il2CppString* get_skinColorId();
    // public System.Void set_skinColorId(System.String value)
    // Offset: 0x1249EBC
    void set_skinColorId(::Il2CppString* value);
    // public System.Void .ctor(System.String headTopId, UnityEngine.Color headTopPrimaryColor, UnityEngine.Color headTopSecondaryColor, System.String glassesId, UnityEngine.Color glassesColor, System.String facialHairId, UnityEngine.Color facialHairColor, System.String handsId, UnityEngine.Color handsColor, System.String clothesId, UnityEngine.Color clothesPrimaryColor, UnityEngine.Color clothesSecondaryColor, UnityEngine.Color clothesDetailColor, System.String skinColorId, System.String eyesId, System.String mouthId)
    // Offset: 0x1249ECC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AvatarData* New_ctor(::Il2CppString* headTopId, UnityEngine::Color headTopPrimaryColor, UnityEngine::Color headTopSecondaryColor, ::Il2CppString* glassesId, UnityEngine::Color glassesColor, ::Il2CppString* facialHairId, UnityEngine::Color facialHairColor, ::Il2CppString* handsId, UnityEngine::Color handsColor, ::Il2CppString* clothesId, UnityEngine::Color clothesPrimaryColor, UnityEngine::Color clothesSecondaryColor, UnityEngine::Color clothesDetailColor, ::Il2CppString* skinColorId, ::Il2CppString* eyesId, ::Il2CppString* mouthId) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AvatarData*, creationType>(headTopId, headTopPrimaryColor, headTopSecondaryColor, glassesId, glassesColor, facialHairId, facialHairColor, handsId, handsColor, clothesId, clothesPrimaryColor, clothesSecondaryColor, clothesDetailColor, skinColorId, eyesId, mouthId)));
    }
    // public AvatarData Clone()
    // Offset: 0x1249FFC
    GlobalNamespace::AvatarData* Clone();
    // public System.Void .ctor()
    // Offset: 0x1249EC4
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AvatarData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AvatarData*, creationType>()));
    }
  }; // AvatarData
  #pragma pack(pop)
  static check_size<sizeof(AvatarData), 200 + sizeof(::Il2CppString*)> __GlobalNamespace_AvatarDataSizeCheck;
  static_assert(sizeof(AvatarData) == 0xD0);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::AvatarData*, "", "AvatarData");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::get_headTopId
// Il2CppName: get_headTopId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::get_headTopId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "get_headTopId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::set_headTopId
// Il2CppName: set_headTopId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarData::*)(::Il2CppString*)>(&GlobalNamespace::AvatarData::set_headTopId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "set_headTopId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::get_glassesId
// Il2CppName: get_glassesId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::get_glassesId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "get_glassesId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::set_glassesId
// Il2CppName: set_glassesId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarData::*)(::Il2CppString*)>(&GlobalNamespace::AvatarData::set_glassesId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "set_glassesId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::get_facialHairId
// Il2CppName: get_facialHairId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::get_facialHairId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "get_facialHairId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::set_facialHairId
// Il2CppName: set_facialHairId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarData::*)(::Il2CppString*)>(&GlobalNamespace::AvatarData::set_facialHairId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "set_facialHairId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::get_handsId
// Il2CppName: get_handsId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::get_handsId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "get_handsId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::set_handsId
// Il2CppName: set_handsId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarData::*)(::Il2CppString*)>(&GlobalNamespace::AvatarData::set_handsId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "set_handsId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::get_clothesId
// Il2CppName: get_clothesId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::get_clothesId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "get_clothesId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::set_clothesId
// Il2CppName: set_clothesId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarData::*)(::Il2CppString*)>(&GlobalNamespace::AvatarData::set_clothesId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "set_clothesId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::get_eyesId
// Il2CppName: get_eyesId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::get_eyesId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "get_eyesId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::set_eyesId
// Il2CppName: set_eyesId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarData::*)(::Il2CppString*)>(&GlobalNamespace::AvatarData::set_eyesId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "set_eyesId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::get_mouthId
// Il2CppName: get_mouthId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::get_mouthId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "get_mouthId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::set_mouthId
// Il2CppName: set_mouthId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarData::*)(::Il2CppString*)>(&GlobalNamespace::AvatarData::set_mouthId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "set_mouthId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::get_headTopPrimaryColor
// Il2CppName: get_headTopPrimaryColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::get_headTopPrimaryColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "get_headTopPrimaryColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::set_headTopPrimaryColor
// Il2CppName: set_headTopPrimaryColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarData::*)(UnityEngine::Color)>(&GlobalNamespace::AvatarData::set_headTopPrimaryColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "set_headTopPrimaryColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::get_headTopSecondaryColor
// Il2CppName: get_headTopSecondaryColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::get_headTopSecondaryColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "get_headTopSecondaryColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::set_headTopSecondaryColor
// Il2CppName: set_headTopSecondaryColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarData::*)(UnityEngine::Color)>(&GlobalNamespace::AvatarData::set_headTopSecondaryColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "set_headTopSecondaryColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::get_glassesColor
// Il2CppName: get_glassesColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::get_glassesColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "get_glassesColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::set_glassesColor
// Il2CppName: set_glassesColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarData::*)(UnityEngine::Color)>(&GlobalNamespace::AvatarData::set_glassesColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "set_glassesColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::get_facialHairColor
// Il2CppName: get_facialHairColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::get_facialHairColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "get_facialHairColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::set_facialHairColor
// Il2CppName: set_facialHairColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarData::*)(UnityEngine::Color)>(&GlobalNamespace::AvatarData::set_facialHairColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "set_facialHairColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::get_handsColor
// Il2CppName: get_handsColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::get_handsColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "get_handsColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::set_handsColor
// Il2CppName: set_handsColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarData::*)(UnityEngine::Color)>(&GlobalNamespace::AvatarData::set_handsColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "set_handsColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::get_clothesPrimaryColor
// Il2CppName: get_clothesPrimaryColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::get_clothesPrimaryColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "get_clothesPrimaryColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::set_clothesPrimaryColor
// Il2CppName: set_clothesPrimaryColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarData::*)(UnityEngine::Color)>(&GlobalNamespace::AvatarData::set_clothesPrimaryColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "set_clothesPrimaryColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::get_clothesSecondaryColor
// Il2CppName: get_clothesSecondaryColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::get_clothesSecondaryColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "get_clothesSecondaryColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::set_clothesSecondaryColor
// Il2CppName: set_clothesSecondaryColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarData::*)(UnityEngine::Color)>(&GlobalNamespace::AvatarData::set_clothesSecondaryColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "set_clothesSecondaryColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::get_clothesDetailColor
// Il2CppName: get_clothesDetailColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::get_clothesDetailColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "get_clothesDetailColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::set_clothesDetailColor
// Il2CppName: set_clothesDetailColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarData::*)(UnityEngine::Color)>(&GlobalNamespace::AvatarData::set_clothesDetailColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "set_clothesDetailColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::get_skinColorId
// Il2CppName: get_skinColorId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::get_skinColorId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "get_skinColorId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::set_skinColorId
// Il2CppName: set_skinColorId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AvatarData::*)(::Il2CppString*)>(&GlobalNamespace::AvatarData::set_skinColorId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "set_skinColorId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::AvatarData* (GlobalNamespace::AvatarData::*)()>(&GlobalNamespace::AvatarData::Clone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AvatarData*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AvatarData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
