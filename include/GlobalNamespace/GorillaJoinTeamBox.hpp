// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaTriggerBox
#include "GlobalNamespace/GorillaTriggerBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GorillaJoinTeamBox
  class GorillaJoinTeamBox;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GorillaJoinTeamBox);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GorillaJoinTeamBox*, "", "GorillaJoinTeamBox");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x1A
  #pragma pack(push, 1)
  // Autogenerated type: GorillaJoinTeamBox
  // [TokenAttribute] Offset: FFFFFFFF
  class GorillaJoinTeamBox : public ::GlobalNamespace::GorillaTriggerBox {
    public:
    public:
    // public System.Boolean joinRedTeam
    // Size: 0x1
    // Offset: 0x19
    bool joinRedTeam;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public System.Boolean joinRedTeam
    [[deprecated("Use field access instead!")]] bool& dyn_joinRedTeam();
    // public System.Void .ctor()
    // Offset: 0xDB1760
    // Implemented from: GorillaTriggerBox
    // Base method: System.Void GorillaTriggerBox::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaJoinTeamBox* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaJoinTeamBox::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaJoinTeamBox*, creationType>()));
    }
    // public override System.Void OnBoxTriggered()
    // Offset: 0xDB167C
    // Implemented from: GorillaTriggerBox
    // Base method: System.Void GorillaTriggerBox::OnBoxTriggered()
    void OnBoxTriggered();
  }; // GorillaJoinTeamBox
  #pragma pack(pop)
  static check_size<sizeof(GorillaJoinTeamBox), 25 + sizeof(bool)> __GlobalNamespace_GorillaJoinTeamBoxSizeCheck;
  static_assert(sizeof(GorillaJoinTeamBox) == 0x1A);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GorillaJoinTeamBox::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::GorillaJoinTeamBox::OnBoxTriggered
// Il2CppName: OnBoxTriggered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaJoinTeamBox::*)()>(&GlobalNamespace::GorillaJoinTeamBox::OnBoxTriggered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaJoinTeamBox*), "OnBoxTriggered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
