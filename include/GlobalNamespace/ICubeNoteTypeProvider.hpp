// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: GameNoteType
  struct GameNoteController_GameNoteType;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: ICubeNoteTypeProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class ICubeNoteTypeProvider {
    public:
    // Creating value type constructor for type: ICubeNoteTypeProvider
    ICubeNoteTypeProvider() noexcept {}
    // public GameNoteController/GameNoteType get_gameNoteType()
    // Offset: 0xFFFFFFFF
    GlobalNamespace::GameNoteController_GameNoteType get_gameNoteType();
  }; // ICubeNoteTypeProvider
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ICubeNoteTypeProvider*, "", "ICubeNoteTypeProvider");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::ICubeNoteTypeProvider::get_gameNoteType
// Il2CppName: get_gameNoteType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::GameNoteController_GameNoteType (GlobalNamespace::ICubeNoteTypeProvider::*)()>(&GlobalNamespace::ICubeNoteTypeProvider::get_gameNoteType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ICubeNoteTypeProvider*), "get_gameNoteType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
