// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: IPosesSerializer
#include "GlobalNamespace/IPosesSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PosesRecordingData
  class PosesRecordingData;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: EmptyPosesSerializer
  class EmptyPosesSerializer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::EmptyPosesSerializer);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::EmptyPosesSerializer*, "", "EmptyPosesSerializer");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: EmptyPosesSerializer
  // [TokenAttribute] Offset: FFFFFFFF
  class EmptyPosesSerializer : public ::Il2CppObject/*, public ::GlobalNamespace::IPosesSerializer*/ {
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::IPosesSerializer
    operator ::GlobalNamespace::IPosesSerializer() noexcept {
      return *reinterpret_cast<::GlobalNamespace::IPosesSerializer*>(this);
    }
    // Creating interface conversion operator: i_IPosesSerializer
    inline ::GlobalNamespace::IPosesSerializer* i_IPosesSerializer() noexcept {
      return reinterpret_cast<::GlobalNamespace::IPosesSerializer*>(this);
    }
    // public System.Void .ctor()
    // Offset: 0x13FF8F0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EmptyPosesSerializer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyPosesSerializer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EmptyPosesSerializer*, creationType>()));
    }
    // public System.Void SaveToOldFormat(System.String path, PosesRecordingData data)
    // Offset: 0x13FF8D0
    void SaveToOldFormat(::StringW path, ::GlobalNamespace::PosesRecordingData* data);
    // public System.Void SaveRecording(System.String path, PosesRecordingData data, System.Boolean saveToOldFormat)
    // Offset: 0x13FF8D4
    void SaveRecording(::StringW path, ::GlobalNamespace::PosesRecordingData* data, bool saveToOldFormat);
    // public PosesRecordingData LoadRecording(System.String path)
    // Offset: 0x13FF8D8
    ::GlobalNamespace::PosesRecordingData* LoadRecording(::StringW path);
    // public System.Boolean RecordingExists(System.String path)
    // Offset: 0x13FF8E0
    bool RecordingExists(::StringW path);
    // public System.Boolean RecordingCanBeCreated(System.String path)
    // Offset: 0x13FF8E8
    bool RecordingCanBeCreated(::StringW path);
  }; // EmptyPosesSerializer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::EmptyPosesSerializer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::EmptyPosesSerializer::SaveToOldFormat
// Il2CppName: SaveToOldFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EmptyPosesSerializer::*)(::StringW, ::GlobalNamespace::PosesRecordingData*)>(&GlobalNamespace::EmptyPosesSerializer::SaveToOldFormat)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("", "PosesRecordingData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EmptyPosesSerializer*), "SaveToOldFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, data});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EmptyPosesSerializer::SaveRecording
// Il2CppName: SaveRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EmptyPosesSerializer::*)(::StringW, ::GlobalNamespace::PosesRecordingData*, bool)>(&GlobalNamespace::EmptyPosesSerializer::SaveRecording)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("", "PosesRecordingData")->byval_arg;
    static auto* saveToOldFormat = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EmptyPosesSerializer*), "SaveRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, data, saveToOldFormat});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EmptyPosesSerializer::LoadRecording
// Il2CppName: LoadRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PosesRecordingData* (GlobalNamespace::EmptyPosesSerializer::*)(::StringW)>(&GlobalNamespace::EmptyPosesSerializer::LoadRecording)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EmptyPosesSerializer*), "LoadRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EmptyPosesSerializer::RecordingExists
// Il2CppName: RecordingExists
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::EmptyPosesSerializer::*)(::StringW)>(&GlobalNamespace::EmptyPosesSerializer::RecordingExists)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EmptyPosesSerializer*), "RecordingExists", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EmptyPosesSerializer::RecordingCanBeCreated
// Il2CppName: RecordingCanBeCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::EmptyPosesSerializer::*)(::StringW)>(&GlobalNamespace::EmptyPosesSerializer::RecordingCanBeCreated)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EmptyPosesSerializer*), "RecordingCanBeCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
