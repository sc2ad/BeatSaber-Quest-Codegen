// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: LightColorHelpers
  class LightColorHelpers;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::LightColorHelpers);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::LightColorHelpers*, "", "LightColorHelpers");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: LightColorHelpers
  // [TokenAttribute] Offset: FFFFFFFF
  class LightColorHelpers : public ::Il2CppObject {
    public:
    // static public UnityEngine.Color AdjustColorWithStrobe(UnityEngine.Color fromColor, UnityEngine.Color toColor, UnityEngine.Color offColor, System.Single t, System.Single fromStrobeFrequency, System.Single toStrobeFrequency, System.Single tweenDuration)
    // Offset: 0x156C5B8
    static ::UnityEngine::Color AdjustColorWithStrobe(::UnityEngine::Color fromColor, ::UnityEngine::Color toColor, ::UnityEngine::Color offColor, float t, float fromStrobeFrequency, float toStrobeFrequency, float tweenDuration);
  }; // LightColorHelpers
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::LightColorHelpers::AdjustColorWithStrobe
// Il2CppName: AdjustColorWithStrobe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (*)(::UnityEngine::Color, ::UnityEngine::Color, ::UnityEngine::Color, float, float, float, float)>(&GlobalNamespace::LightColorHelpers::AdjustColorWithStrobe)> {
  static const MethodInfo* get() {
    static auto* fromColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* toColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* offColor = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* fromStrobeFrequency = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* toStrobeFrequency = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* tweenDuration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LightColorHelpers*), "AdjustColorWithStrobe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fromColor, toColor, offColor, t, fromStrobeFrequency, toStrobeFrequency, tweenDuration});
  }
};
