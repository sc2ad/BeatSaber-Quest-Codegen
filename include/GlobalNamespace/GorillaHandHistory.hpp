// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GorillaHandHistory
  class GorillaHandHistory;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GorillaHandHistory);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GorillaHandHistory*, "", "GorillaHandHistory");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x3C
  #pragma pack(push, 1)
  // Autogenerated type: GorillaHandHistory
  // [TokenAttribute] Offset: FFFFFFFF
  class GorillaHandHistory : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.Vector3 direction
    // Size: 0xC
    // Offset: 0x18
    ::UnityEngine::Vector3 direction;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 lastPosition
    // Size: 0xC
    // Offset: 0x24
    ::UnityEngine::Vector3 lastPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 lastLastPosition
    // Size: 0xC
    // Offset: 0x30
    ::UnityEngine::Vector3 lastLastPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.Vector3 direction
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_direction();
    // Get instance field reference: private UnityEngine.Vector3 lastPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_lastPosition();
    // Get instance field reference: private UnityEngine.Vector3 lastLastPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_lastLastPosition();
    // public System.Void .ctor()
    // Offset: 0xC6D474
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaHandHistory* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHandHistory::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaHandHistory*, creationType>()));
    }
    // private System.Void Start()
    // Offset: 0xC6D368
    void Start();
    // private System.Void FixedUpdate()
    // Offset: 0xC6D374
    void FixedUpdate();
  }; // GorillaHandHistory
  #pragma pack(pop)
  static check_size<sizeof(GorillaHandHistory), 48 + sizeof(::UnityEngine::Vector3)> __GlobalNamespace_GorillaHandHistorySizeCheck;
  static_assert(sizeof(GorillaHandHistory) == 0x3C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GorillaHandHistory::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::GorillaHandHistory::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaHandHistory::*)()>(&GlobalNamespace::GorillaHandHistory::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaHandHistory*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GorillaHandHistory::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaHandHistory::*)()>(&GlobalNamespace::GorillaHandHistory::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaHandHistory*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
