// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaPressableButton
#include "GlobalNamespace/GorillaPressableButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SynchedMusicController
  class SynchedMusicController;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SoundPostMuteButton
  class SoundPostMuteButton;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SoundPostMuteButton);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SoundPostMuteButton*, "", "SoundPostMuteButton");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: SoundPostMuteButton
  // [TokenAttribute] Offset: FFFFFFFF
  class SoundPostMuteButton : public ::GlobalNamespace::GorillaPressableButton {
    public:
    public:
    // public SynchedMusicController[] musicControllers
    // Size: 0x8
    // Offset: 0x58
    ::ArrayW<::GlobalNamespace::SynchedMusicController*> musicControllers;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::SynchedMusicController*>) == 0x8);
    public:
    // Get instance field reference: public SynchedMusicController[] musicControllers
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SynchedMusicController*>& dyn_musicControllers();
    // public System.Void .ctor()
    // Offset: 0xCC3014
    // Implemented from: GorillaPressableButton
    // Base method: System.Void GorillaPressableButton::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SoundPostMuteButton* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoundPostMuteButton::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SoundPostMuteButton*, creationType>()));
    }
    // public override System.Void ButtonActivation()
    // Offset: 0xCC2DFC
    // Implemented from: GorillaPressableButton
    // Base method: System.Void GorillaPressableButton::ButtonActivation()
    void ButtonActivation();
  }; // SoundPostMuteButton
  #pragma pack(pop)
  static check_size<sizeof(SoundPostMuteButton), 88 + sizeof(::ArrayW<::GlobalNamespace::SynchedMusicController*>)> __GlobalNamespace_SoundPostMuteButtonSizeCheck;
  static_assert(sizeof(SoundPostMuteButton) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SoundPostMuteButton::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::SoundPostMuteButton::ButtonActivation
// Il2CppName: ButtonActivation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SoundPostMuteButton::*)()>(&GlobalNamespace::SoundPostMuteButton::ButtonActivation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SoundPostMuteButton*), "ButtonActivation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
