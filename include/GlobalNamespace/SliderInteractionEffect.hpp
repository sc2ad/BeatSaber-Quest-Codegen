// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SliderInteractionManager
  class SliderInteractionManager;
  // Forward declaring type: ColorType
  struct ColorType;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SliderInteractionEffect
  class SliderInteractionEffect;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SliderInteractionEffect);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SliderInteractionEffect*, "", "SliderInteractionEffect");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: SliderInteractionEffect
  // [TokenAttribute] Offset: FFFFFFFF
  class SliderInteractionEffect : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private SliderInteractionManager _sliderInteractionManager
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::SliderInteractionManager* sliderInteractionManager;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SliderInteractionManager*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private SliderInteractionManager _sliderInteractionManager
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SliderInteractionManager*& dyn__sliderInteractionManager();
    // protected System.Single get_saberInteractionParam()
    // Offset: 0x149570C
    float get_saberInteractionParam();
    // protected ColorType get_colorType()
    // Offset: 0x149560C
    ::GlobalNamespace::ColorType get_colorType();
    // protected System.Void .ctor()
    // Offset: 0x14957D8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SliderInteractionEffect* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderInteractionEffect::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SliderInteractionEffect*, creationType>()));
    }
    // protected System.Void Start()
    // Offset: 0x149553C
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0x1496678
    void OnDestroy();
    // protected System.Void StartEffect(System.Single saberInteractionParam)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void StartEffect(float saberInteractionParam);
    // protected System.Void EndEffect()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndEffect();
    // private System.Void HandleSliderWasAddedToActiveSliders(System.Single saberInteractionParam)
    // Offset: 0x1496890
    void HandleSliderWasAddedToActiveSliders(float saberInteractionParam);
    // private System.Void HandleAllSliderWereRemovedFromActiveSliders()
    // Offset: 0x149689C
    void HandleAllSliderWereRemovedFromActiveSliders();
  }; // SliderInteractionEffect
  #pragma pack(pop)
  static check_size<sizeof(SliderInteractionEffect), 24 + sizeof(::GlobalNamespace::SliderInteractionManager*)> __GlobalNamespace_SliderInteractionEffectSizeCheck;
  static_assert(sizeof(SliderInteractionEffect) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SliderInteractionEffect::get_saberInteractionParam
// Il2CppName: get_saberInteractionParam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::SliderInteractionEffect::*)()>(&GlobalNamespace::SliderInteractionEffect::get_saberInteractionParam)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SliderInteractionEffect*), "get_saberInteractionParam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SliderInteractionEffect::get_colorType
// Il2CppName: get_colorType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::ColorType (GlobalNamespace::SliderInteractionEffect::*)()>(&GlobalNamespace::SliderInteractionEffect::get_colorType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SliderInteractionEffect*), "get_colorType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SliderInteractionEffect::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::SliderInteractionEffect::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SliderInteractionEffect::*)()>(&GlobalNamespace::SliderInteractionEffect::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SliderInteractionEffect*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SliderInteractionEffect::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SliderInteractionEffect::*)()>(&GlobalNamespace::SliderInteractionEffect::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SliderInteractionEffect*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SliderInteractionEffect::StartEffect
// Il2CppName: StartEffect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SliderInteractionEffect::*)(float)>(&GlobalNamespace::SliderInteractionEffect::StartEffect)> {
  static const MethodInfo* get() {
    static auto* saberInteractionParam = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SliderInteractionEffect*), "StartEffect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{saberInteractionParam});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SliderInteractionEffect::EndEffect
// Il2CppName: EndEffect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SliderInteractionEffect::*)()>(&GlobalNamespace::SliderInteractionEffect::EndEffect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SliderInteractionEffect*), "EndEffect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SliderInteractionEffect::HandleSliderWasAddedToActiveSliders
// Il2CppName: HandleSliderWasAddedToActiveSliders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SliderInteractionEffect::*)(float)>(&GlobalNamespace::SliderInteractionEffect::HandleSliderWasAddedToActiveSliders)> {
  static const MethodInfo* get() {
    static auto* saberInteractionParam = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SliderInteractionEffect*), "HandleSliderWasAddedToActiveSliders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{saberInteractionParam});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SliderInteractionEffect::HandleAllSliderWereRemovedFromActiveSliders
// Il2CppName: HandleAllSliderWereRemovedFromActiveSliders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SliderInteractionEffect::*)()>(&GlobalNamespace::SliderInteractionEffect::HandleAllSliderWereRemovedFromActiveSliders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SliderInteractionEffect*), "HandleAllSliderWereRemovedFromActiveSliders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
