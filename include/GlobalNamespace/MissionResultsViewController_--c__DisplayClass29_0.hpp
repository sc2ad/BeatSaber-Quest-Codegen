// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MissionResultsViewController
#include "GlobalNamespace/MissionResultsViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MissionObjective
  class MissionObjective;
  // Forward declaring type: MissionObjectiveResult
  class MissionObjectiveResult;
  // Forward declaring type: ResultObjectiveListItem
  class ResultObjectiveListItem;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0*, "", "MissionResultsViewController/<>c__DisplayClass29_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: MissionResultsViewController/<>c__DisplayClass29_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class MissionResultsViewController::$$c__DisplayClass29_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Boolean levelCleared
    // Size: 0x1
    // Offset: 0x10
    bool levelCleared;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: levelCleared and: $$4__this
    char __padding0[0x7] = {};
    // public MissionResultsViewController <>4__this
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::MissionResultsViewController* $$4__this;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::MissionResultsViewController*) == 0x8);
    // public MissionObjective[] missionObjectives
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::GlobalNamespace::MissionObjective*> missionObjectives;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::MissionObjective*>) == 0x8);
    // public MissionObjectiveResult[] missionObjectiveResults
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::GlobalNamespace::MissionObjectiveResult*> missionObjectiveResults;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::MissionObjectiveResult*>) == 0x8);
    public:
    // Get instance field reference: public System.Boolean levelCleared
    [[deprecated("Use field access instead!")]] bool& dyn_levelCleared();
    // Get instance field reference: public MissionResultsViewController <>4__this
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionResultsViewController*& dyn_$$4__this();
    // Get instance field reference: public MissionObjective[] missionObjectives
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionObjective*>& dyn_missionObjectives();
    // Get instance field reference: public MissionObjectiveResult[] missionObjectiveResults
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionObjectiveResult*>& dyn_missionObjectiveResults();
    // public System.Void .ctor()
    // Offset: 0x13F1818
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MissionResultsViewController::$$c__DisplayClass29_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MissionResultsViewController::$$c__DisplayClass29_0*, creationType>()));
    }
    // System.Void <SetDataToUI>b__0(System.Int32 idx, ResultObjectiveListItem objectiveListItem)
    // Offset: 0x13F1820
    void $SetDataToUI$b__0(int idx, ::GlobalNamespace::ResultObjectiveListItem* objectiveListItem);
  }; // MissionResultsViewController/<>c__DisplayClass29_0
  #pragma pack(pop)
  static check_size<sizeof(MissionResultsViewController::$$c__DisplayClass29_0), 40 + sizeof(::ArrayW<::GlobalNamespace::MissionObjectiveResult*>)> __GlobalNamespace_MissionResultsViewController_$$c__DisplayClass29_0SizeCheck;
  static_assert(sizeof(MissionResultsViewController::$$c__DisplayClass29_0) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::$SetDataToUI$b__0
// Il2CppName: <SetDataToUI>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::*)(int, ::GlobalNamespace::ResultObjectiveListItem*)>(&GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::$SetDataToUI$b__0)> {
  static const MethodInfo* get() {
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* objectiveListItem = &::il2cpp_utils::GetClassFromName("", "ResultObjectiveListItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0*), "<SetDataToUI>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{idx, objectiveListItem});
  }
};
