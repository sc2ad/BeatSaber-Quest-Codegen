// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: EnvironmentTypeSO
  // [TokenAttribute] Offset: FFFFFFFF
  class EnvironmentTypeSO : public UnityEngine::ScriptableObject {
    public:
    // private System.String _typeNameLocalizationKey
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppString* typeNameLocalizationKey;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // Creating value type constructor for type: EnvironmentTypeSO
    EnvironmentTypeSO(::Il2CppString* typeNameLocalizationKey_ = {}) noexcept : typeNameLocalizationKey{typeNameLocalizationKey_} {}
    // Deleting conversion operator: operator System::IntPtr
    constexpr operator System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.String _typeNameLocalizationKey
    ::Il2CppString*& dyn__typeNameLocalizationKey();
    // public System.String get_typeNameLocalizationKey()
    // Offset: 0x11B2624
    ::Il2CppString* get_typeNameLocalizationKey();
    // public System.Void .ctor()
    // Offset: 0x11B262C
    // Implemented from: UnityEngine.ScriptableObject
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EnvironmentTypeSO* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentTypeSO::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EnvironmentTypeSO*, creationType>()));
    }
  }; // EnvironmentTypeSO
  #pragma pack(pop)
  static check_size<sizeof(EnvironmentTypeSO), 24 + sizeof(::Il2CppString*)> __GlobalNamespace_EnvironmentTypeSOSizeCheck;
  static_assert(sizeof(EnvironmentTypeSO) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::EnvironmentTypeSO*, "", "EnvironmentTypeSO");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::EnvironmentTypeSO::get_typeNameLocalizationKey
// Il2CppName: get_typeNameLocalizationKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (GlobalNamespace::EnvironmentTypeSO::*)()>(&GlobalNamespace::EnvironmentTypeSO::get_typeNameLocalizationKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EnvironmentTypeSO*), "get_typeNameLocalizationKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EnvironmentTypeSO::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
