// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: TestAnalyticsModel
#include "GlobalNamespace/TestAnalyticsModel.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: TestAnalyticsModel/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: EFD1E4
  class TestAnalyticsModel::$$c : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: $$c
    $$c() noexcept {}
    // Get static field: static public readonly TestAnalyticsModel/<>c <>9
    static GlobalNamespace::TestAnalyticsModel::$$c* _get_$$9();
    // Set static field: static public readonly TestAnalyticsModel/<>c <>9
    static void _set_$$9(GlobalNamespace::TestAnalyticsModel::$$c* value);
    // Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.String,System.String>,System.String> <>9__3_0
    static System::Func_2<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppString*>, ::Il2CppString*>* _get_$$9__3_0();
    // Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.String,System.String>,System.String> <>9__3_0
    static void _set_$$9__3_0(System::Func_2<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppString*>, ::Il2CppString*>* value);
    // static private System.Void .cctor()
    // Offset: 0x115CBC4
    static void _cctor();
    // System.String <LogEvent>b__3_0(System.Collections.Generic.KeyValuePair`2<System.String,System.String> kvp)
    // Offset: 0x115CC30
    ::Il2CppString* $LogEvent$b__3_0(System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppString*> kvp);
    // public System.Void .ctor()
    // Offset: 0x115CC28
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TestAnalyticsModel::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestAnalyticsModel::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TestAnalyticsModel::$$c*, creationType>()));
    }
  }; // TestAnalyticsModel/<>c
  #pragma pack(pop)
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::TestAnalyticsModel::$$c*, "", "TestAnalyticsModel/<>c");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::TestAnalyticsModel::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::TestAnalyticsModel::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TestAnalyticsModel::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TestAnalyticsModel::$$c::$LogEvent$b__3_0
// Il2CppName: <LogEvent>b__3_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (GlobalNamespace::TestAnalyticsModel::$$c::*)(System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppString*>)>(&GlobalNamespace::TestAnalyticsModel::$$c::$LogEvent$b__3_0)> {
  static const MethodInfo* get() {
    static auto* kvp = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TestAnalyticsModel::$$c*), "<LogEvent>b__3_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{kvp});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::TestAnalyticsModel::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
