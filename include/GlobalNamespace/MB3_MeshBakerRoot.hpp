// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MB2_TextureBakeResults
  class MB2_TextureBakeResults;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: DigitalOpus::MB::Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB_ObjsToCombineTypes
  struct MB_ObjsToCombineTypes;
  // Forward declaring type: MB2_EditorMethodsInterface
  class MB2_EditorMethodsInterface;
  // Forward declaring type: MB2_ValidationLevel
  struct MB2_ValidationLevel;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: MB3_MeshBakerRoot
  class MB3_MeshBakerRoot;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::MB3_MeshBakerRoot);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::MB3_MeshBakerRoot*, "", "MB3_MeshBakerRoot");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: MB3_MeshBakerRoot
  // [TokenAttribute] Offset: FFFFFFFF
  class MB3_MeshBakerRoot : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::MB3_MeshBakerRoot::ZSortObjects
    class ZSortObjects;
    public:
    // public UnityEngine.Vector3 sortAxis
    // Size: 0xC
    // Offset: 0x18
    ::UnityEngine::Vector3 sortAxis;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.Vector3 sortAxis
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_sortAxis();
    // public MB2_TextureBakeResults get_textureBakeResults()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::MB2_TextureBakeResults* get_textureBakeResults();
    // public System.Void set_textureBakeResults(MB2_TextureBakeResults value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_textureBakeResults(::GlobalNamespace::MB2_TextureBakeResults* value);
    // protected System.Void .ctor()
    // Offset: 0x1B5F38C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_MeshBakerRoot* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MB3_MeshBakerRoot::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_MeshBakerRoot*, creationType>()));
    }
    // public System.Collections.Generic.List`1<UnityEngine.GameObject> GetObjectsToCombine()
    // Offset: 0x1B5E768
    ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* GetObjectsToCombine();
    // public System.Void PurgeNullsFromObjectsToCombine()
    // Offset: 0x1B5E770
    void PurgeNullsFromObjectsToCombine();
    // static public System.Boolean DoCombinedValidate(MB3_MeshBakerRoot mom, DigitalOpus.MB.Core.MB_ObjsToCombineTypes objToCombineType, DigitalOpus.MB.Core.MB2_EditorMethodsInterface editorMethods, DigitalOpus.MB.Core.MB2_ValidationLevel validationLevel)
    // Offset: 0x1B5E774
    static bool DoCombinedValidate(::GlobalNamespace::MB3_MeshBakerRoot* mom, ::DigitalOpus::MB::Core::MB_ObjsToCombineTypes objToCombineType, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods, ::DigitalOpus::MB::Core::MB2_ValidationLevel validationLevel);
  }; // MB3_MeshBakerRoot
  #pragma pack(pop)
  static check_size<sizeof(MB3_MeshBakerRoot), 24 + sizeof(::UnityEngine::Vector3)> __GlobalNamespace_MB3_MeshBakerRootSizeCheck;
  static_assert(sizeof(MB3_MeshBakerRoot) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::MB3_MeshBakerRoot::get_textureBakeResults
// Il2CppName: get_textureBakeResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::MB2_TextureBakeResults* (GlobalNamespace::MB3_MeshBakerRoot::*)()>(&GlobalNamespace::MB3_MeshBakerRoot::get_textureBakeResults)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MB3_MeshBakerRoot*), "get_textureBakeResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MB3_MeshBakerRoot::set_textureBakeResults
// Il2CppName: set_textureBakeResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MB3_MeshBakerRoot::*)(::GlobalNamespace::MB2_TextureBakeResults*)>(&GlobalNamespace::MB3_MeshBakerRoot::set_textureBakeResults)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "MB2_TextureBakeResults")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MB3_MeshBakerRoot*), "set_textureBakeResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MB3_MeshBakerRoot::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::MB3_MeshBakerRoot::GetObjectsToCombine
// Il2CppName: GetObjectsToCombine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* (GlobalNamespace::MB3_MeshBakerRoot::*)()>(&GlobalNamespace::MB3_MeshBakerRoot::GetObjectsToCombine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MB3_MeshBakerRoot*), "GetObjectsToCombine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MB3_MeshBakerRoot::PurgeNullsFromObjectsToCombine
// Il2CppName: PurgeNullsFromObjectsToCombine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MB3_MeshBakerRoot::*)()>(&GlobalNamespace::MB3_MeshBakerRoot::PurgeNullsFromObjectsToCombine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MB3_MeshBakerRoot*), "PurgeNullsFromObjectsToCombine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MB3_MeshBakerRoot::DoCombinedValidate
// Il2CppName: DoCombinedValidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::GlobalNamespace::MB3_MeshBakerRoot*, ::DigitalOpus::MB::Core::MB_ObjsToCombineTypes, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*, ::DigitalOpus::MB::Core::MB2_ValidationLevel)>(&GlobalNamespace::MB3_MeshBakerRoot::DoCombinedValidate)> {
  static const MethodInfo* get() {
    static auto* mom = &::il2cpp_utils::GetClassFromName("", "MB3_MeshBakerRoot")->byval_arg;
    static auto* objToCombineType = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_ObjsToCombineTypes")->byval_arg;
    static auto* editorMethods = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_EditorMethodsInterface")->byval_arg;
    static auto* validationLevel = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_ValidationLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MB3_MeshBakerRoot*), "DoCombinedValidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mom, objToCombineType, editorMethods, validationLevel});
  }
};
