// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: BeatmapDifficultyMask
#include "GlobalNamespace/BeatmapDifficultyMask.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: EventBinder
  class EventBinder;
  // Forward declaring type: StandardLevelDetailView
  class StandardLevelDetailView;
  // Forward declaring type: StandardLevelBuyView
  class StandardLevelBuyView;
  // Forward declaring type: StandardLevelBuyInfoView
  class StandardLevelBuyInfoView;
  // Forward declaring type: LoadingControl
  class LoadingControl;
  // Forward declaring type: PlayerDataModel
  class PlayerDataModel;
  // Forward declaring type: AdditionalContentModel
  class AdditionalContentModel;
  // Forward declaring type: DlcPromoPanelModel
  class DlcPromoPanelModel;
  // Forward declaring type: IAnalyticsModel
  class IAnalyticsModel;
  // Forward declaring type: IBeatmapLevelPack
  class IBeatmapLevelPack;
  // Forward declaring type: IBeatmapLevel
  class IBeatmapLevel;
  // Forward declaring type: IDifficultyBeatmap
  class IDifficultyBeatmap;
  // Forward declaring type: IPreviewBeatmapLevel
  class IPreviewBeatmapLevel;
  // Forward declaring type: BeatmapCharacteristicSO
  class BeatmapCharacteristicSO;
  // Skipping declaration: ContentType because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: String
  class String;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationTokenSource
  class CancellationTokenSource;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Toggle
  class Toggle;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: StandardLevelDetailViewController
  class StandardLevelDetailViewController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::StandardLevelDetailViewController);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::StandardLevelDetailViewController*, "", "StandardLevelDetailViewController");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x131
  #pragma pack(push, 1)
  // Autogenerated type: StandardLevelDetailViewController
  // [TokenAttribute] Offset: FFFFFFFF
  class StandardLevelDetailViewController : public ::HMUI::ViewController {
    public:
    // Nested type: ::GlobalNamespace::StandardLevelDetailViewController::ContentType
    struct ContentType;
    // Nested type: ::GlobalNamespace::StandardLevelDetailViewController::$LoadBeatmapLevelAsync$d__57
    struct $LoadBeatmapLevelAsync$d__57;
    // Nested type: ::GlobalNamespace::StandardLevelDetailViewController::$ShowLoadingAndDoSomething$d__62
    struct $ShowLoadingAndDoSomething$d__62;
    // Nested type: ::GlobalNamespace::StandardLevelDetailViewController::$$BuyPackButtonWasPressed$b__56_0$d
    struct $$BuyPackButtonWasPressed$b__56_0$d;
    // Nested type: ::GlobalNamespace::StandardLevelDetailViewController::$$OpenLevelProductStoreOrShowBuyInfo$b__58_0$d
    struct $$OpenLevelProductStoreOrShowBuyInfo$b__58_0$d;
    // Nested type: ::GlobalNamespace::StandardLevelDetailViewController::$$OpenLevelProductStore$b__59_0$d
    struct $$OpenLevelProductStore$b__59_0$d;
    // Nested type: ::GlobalNamespace::StandardLevelDetailViewController::$$RefreshAvailabilityIfNeeded$b__60_0$d
    struct $$RefreshAvailabilityIfNeeded$b__60_0$d;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: StandardLevelDetailViewController/ContentType
    // [TokenAttribute] Offset: FFFFFFFF
    struct ContentType/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: ContentType
      constexpr ContentType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public StandardLevelDetailViewController/ContentType Loading
      static constexpr const int Loading = 0;
      // Get static field: static public StandardLevelDetailViewController/ContentType Loading
      static ::GlobalNamespace::StandardLevelDetailViewController::ContentType _get_Loading();
      // Set static field: static public StandardLevelDetailViewController/ContentType Loading
      static void _set_Loading(::GlobalNamespace::StandardLevelDetailViewController::ContentType value);
      // static field const value: static public StandardLevelDetailViewController/ContentType OwnedAndReady
      static constexpr const int OwnedAndReady = 1;
      // Get static field: static public StandardLevelDetailViewController/ContentType OwnedAndReady
      static ::GlobalNamespace::StandardLevelDetailViewController::ContentType _get_OwnedAndReady();
      // Set static field: static public StandardLevelDetailViewController/ContentType OwnedAndReady
      static void _set_OwnedAndReady(::GlobalNamespace::StandardLevelDetailViewController::ContentType value);
      // static field const value: static public StandardLevelDetailViewController/ContentType NoAllowedDifficultyBeatmap
      static constexpr const int NoAllowedDifficultyBeatmap = 2;
      // Get static field: static public StandardLevelDetailViewController/ContentType NoAllowedDifficultyBeatmap
      static ::GlobalNamespace::StandardLevelDetailViewController::ContentType _get_NoAllowedDifficultyBeatmap();
      // Set static field: static public StandardLevelDetailViewController/ContentType NoAllowedDifficultyBeatmap
      static void _set_NoAllowedDifficultyBeatmap(::GlobalNamespace::StandardLevelDetailViewController::ContentType value);
      // static field const value: static public StandardLevelDetailViewController/ContentType OwnedAndDownloading
      static constexpr const int OwnedAndDownloading = 3;
      // Get static field: static public StandardLevelDetailViewController/ContentType OwnedAndDownloading
      static ::GlobalNamespace::StandardLevelDetailViewController::ContentType _get_OwnedAndDownloading();
      // Set static field: static public StandardLevelDetailViewController/ContentType OwnedAndDownloading
      static void _set_OwnedAndDownloading(::GlobalNamespace::StandardLevelDetailViewController::ContentType value);
      // static field const value: static public StandardLevelDetailViewController/ContentType Buy
      static constexpr const int Buy = 4;
      // Get static field: static public StandardLevelDetailViewController/ContentType Buy
      static ::GlobalNamespace::StandardLevelDetailViewController::ContentType _get_Buy();
      // Set static field: static public StandardLevelDetailViewController/ContentType Buy
      static void _set_Buy(::GlobalNamespace::StandardLevelDetailViewController::ContentType value);
      // static field const value: static public StandardLevelDetailViewController/ContentType BuyInfo
      static constexpr const int BuyInfo = 5;
      // Get static field: static public StandardLevelDetailViewController/ContentType BuyInfo
      static ::GlobalNamespace::StandardLevelDetailViewController::ContentType _get_BuyInfo();
      // Set static field: static public StandardLevelDetailViewController/ContentType BuyInfo
      static void _set_BuyInfo(::GlobalNamespace::StandardLevelDetailViewController::ContentType value);
      // static field const value: static public StandardLevelDetailViewController/ContentType Error
      static constexpr const int Error = 6;
      // Get static field: static public StandardLevelDetailViewController/ContentType Error
      static ::GlobalNamespace::StandardLevelDetailViewController::ContentType _get_Error();
      // Set static field: static public StandardLevelDetailViewController/ContentType Error
      static void _set_Error(::GlobalNamespace::StandardLevelDetailViewController::ContentType value);
      // static field const value: static public StandardLevelDetailViewController/ContentType Inactive
      static constexpr const int Inactive = 7;
      // Get static field: static public StandardLevelDetailViewController/ContentType Inactive
      static ::GlobalNamespace::StandardLevelDetailViewController::ContentType _get_Inactive();
      // Set static field: static public StandardLevelDetailViewController/ContentType Inactive
      static void _set_Inactive(::GlobalNamespace::StandardLevelDetailViewController::ContentType value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // StandardLevelDetailViewController/ContentType
    #pragma pack(pop)
    static check_size<sizeof(StandardLevelDetailViewController::ContentType), 0 + sizeof(int)> __GlobalNamespace_StandardLevelDetailViewController_ContentTypeSizeCheck;
    static_assert(sizeof(StandardLevelDetailViewController::ContentType) == 0x4);
    public:
    // private StandardLevelDetailView _standardLevelDetailView
    // Size: 0x8
    // Offset: 0x70
    ::GlobalNamespace::StandardLevelDetailView* standardLevelDetailView;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::StandardLevelDetailView*) == 0x8);
    // private StandardLevelBuyView _standardLevelBuyView
    // Size: 0x8
    // Offset: 0x78
    ::GlobalNamespace::StandardLevelBuyView* standardLevelBuyView;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::StandardLevelBuyView*) == 0x8);
    // private StandardLevelBuyInfoView _standardLevelBuyInfoView
    // Size: 0x8
    // Offset: 0x80
    ::GlobalNamespace::StandardLevelBuyInfoView* standardLevelBuyInfoView;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::StandardLevelBuyInfoView*) == 0x8);
    // private LoadingControl _loadingControl
    // Size: 0x8
    // Offset: 0x88
    ::GlobalNamespace::LoadingControl* loadingControl;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::LoadingControl*) == 0x8);
    // private UnityEngine.GameObject _noAllowedBeatmapInfoContainer
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::GameObject* noAllowedBeatmapInfoContainer;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // [InjectAttribute] Offset: 0x112CA88
    // private readonly PlayerDataModel _playerDataModel
    // Size: 0x8
    // Offset: 0x98
    ::GlobalNamespace::PlayerDataModel* playerDataModel;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PlayerDataModel*) == 0x8);
    // [InjectAttribute] Offset: 0x112CA98
    // private readonly AdditionalContentModel _additionalContentModel
    // Size: 0x8
    // Offset: 0xA0
    ::GlobalNamespace::AdditionalContentModel* additionalContentModel;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::AdditionalContentModel*) == 0x8);
    // [InjectAttribute] Offset: 0x112CAA8
    // private readonly BeatmapLevelsModel _beatmapLevelsModel
    // Size: 0x8
    // Offset: 0xA8
    ::GlobalNamespace::BeatmapLevelsModel* beatmapLevelsModel;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::BeatmapLevelsModel*) == 0x8);
    // [InjectAttribute] Offset: 0x112CAB8
    // private readonly DlcPromoPanelModel _dlcPromoPanelModel
    // Size: 0x8
    // Offset: 0xB0
    ::GlobalNamespace::DlcPromoPanelModel* dlcPromoPanelModel;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::DlcPromoPanelModel*) == 0x8);
    // [InjectAttribute] Offset: 0x112CAC8
    // private readonly IAnalyticsModel _analyticsModel
    // Size: 0x8
    // Offset: 0xB8
    ::GlobalNamespace::IAnalyticsModel* analyticsModel;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::IAnalyticsModel*) == 0x8);
    // private System.Action`1<StandardLevelDetailViewController> didPressActionButtonEvent
    // Size: 0x8
    // Offset: 0xC0
    ::System::Action_1<::GlobalNamespace::StandardLevelDetailViewController*>* didPressActionButtonEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::GlobalNamespace::StandardLevelDetailViewController*>*) == 0x8);
    // private System.Action`2<StandardLevelDetailViewController,IBeatmapLevelPack> didPressOpenLevelPackButtonEvent
    // Size: 0x8
    // Offset: 0xC8
    ::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IBeatmapLevelPack*>* didPressOpenLevelPackButtonEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IBeatmapLevelPack*>*) == 0x8);
    // private System.Action`2<StandardLevelDetailViewController,System.Boolean> levelFavoriteStatusDidChangeEvent
    // Size: 0x8
    // Offset: 0xD0
    ::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, bool>* levelFavoriteStatusDidChangeEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, bool>*) == 0x8);
    // private System.Action`2<StandardLevelDetailViewController,IBeatmapLevel> didPressPracticeButtonEvent
    // Size: 0x8
    // Offset: 0xD8
    ::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IBeatmapLevel*>* didPressPracticeButtonEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IBeatmapLevel*>*) == 0x8);
    // private System.Action`2<StandardLevelDetailViewController,IDifficultyBeatmap> didChangeDifficultyBeatmapEvent
    // Size: 0x8
    // Offset: 0xE0
    ::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IDifficultyBeatmap*>* didChangeDifficultyBeatmapEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IDifficultyBeatmap*>*) == 0x8);
    // private System.Action`2<StandardLevelDetailViewController,StandardLevelDetailViewController/ContentType> didChangeContentEvent
    // Size: 0x8
    // Offset: 0xE8
    ::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::StandardLevelDetailViewController::ContentType>* didChangeContentEvent;
    // Field size check
    static_assert(sizeof(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::StandardLevelDetailViewController::ContentType>*) == 0x8);
    // private readonly EventBinder _ownedObjectsEventBinder
    // Size: 0x8
    // Offset: 0xF0
    ::GlobalNamespace::EventBinder* ownedObjectsEventBinder;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::EventBinder*) == 0x8);
    // private readonly EventBinder _eventBinder
    // Size: 0x8
    // Offset: 0xF8
    ::GlobalNamespace::EventBinder* eventBinder;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::EventBinder*) == 0x8);
    // private System.Threading.CancellationTokenSource _cancellationTokenSource
    // Size: 0x8
    // Offset: 0x100
    ::System::Threading::CancellationTokenSource* cancellationTokenSource;
    // Field size check
    static_assert(sizeof(::System::Threading::CancellationTokenSource*) == 0x8);
    // private IPreviewBeatmapLevel _previewBeatmapLevel
    // Size: 0x8
    // Offset: 0x108
    ::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::IPreviewBeatmapLevel*) == 0x8);
    // private IBeatmapLevel _beatmapLevel
    // Size: 0x8
    // Offset: 0x110
    ::GlobalNamespace::IBeatmapLevel* beatmapLevel;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::IBeatmapLevel*) == 0x8);
    // private IBeatmapLevelPack _pack
    // Size: 0x8
    // Offset: 0x118
    ::GlobalNamespace::IBeatmapLevelPack* pack;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::IBeatmapLevelPack*) == 0x8);
    // private System.Boolean _canBuyPack
    // Size: 0x1
    // Offset: 0x120
    bool canBuyPack;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private BeatmapDifficultyMask _allowedBeatmapDifficultyMask
    // Size: 0x1
    // Offset: 0x121
    ::GlobalNamespace::BeatmapDifficultyMask allowedBeatmapDifficultyMask;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::BeatmapDifficultyMask) == 0x1);
    // Padding between fields: allowedBeatmapDifficultyMask and: notAllowedCharacteristics
    char __padding23[0x6] = {};
    // private System.Collections.Generic.HashSet`1<BeatmapCharacteristicSO> _notAllowedCharacteristics
    // Size: 0x8
    // Offset: 0x128
    ::System::Collections::Generic::HashSet_1<::GlobalNamespace::BeatmapCharacteristicSO*>* notAllowedCharacteristics;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::HashSet_1<::GlobalNamespace::BeatmapCharacteristicSO*>*) == 0x8);
    // private System.Boolean _contentIsOwnedAndReady
    // Size: 0x1
    // Offset: 0x130
    bool contentIsOwnedAndReady;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // [LocalizationKeyAttribute] Offset: 0x112CAD8
    // static field const value: static private System.String kLoadingDataErrorNoInternetLocalizationKey
    static constexpr const char* kLoadingDataErrorNoInternetLocalizationKey = "ERROR_LOADING_DATA_NO_INTERNET_MESSAGE";
    // Get static field: static private System.String kLoadingDataErrorNoInternetLocalizationKey
    static ::StringW _get_kLoadingDataErrorNoInternetLocalizationKey();
    // Set static field: static private System.String kLoadingDataErrorNoInternetLocalizationKey
    static void _set_kLoadingDataErrorNoInternetLocalizationKey(::StringW value);
    // [LocalizationKeyAttribute] Offset: 0x112CAE8
    // static field const value: static private System.String kLoadingDataErrorLocalizationKey
    static constexpr const char* kLoadingDataErrorLocalizationKey = "ERROR_LOADING_DATA";
    // Get static field: static private System.String kLoadingDataErrorLocalizationKey
    static ::StringW _get_kLoadingDataErrorLocalizationKey();
    // Set static field: static private System.String kLoadingDataErrorLocalizationKey
    static void _set_kLoadingDataErrorLocalizationKey(::StringW value);
    // Get instance field reference: private StandardLevelDetailView _standardLevelDetailView
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::StandardLevelDetailView*& dyn__standardLevelDetailView();
    // Get instance field reference: private StandardLevelBuyView _standardLevelBuyView
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::StandardLevelBuyView*& dyn__standardLevelBuyView();
    // Get instance field reference: private StandardLevelBuyInfoView _standardLevelBuyInfoView
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::StandardLevelBuyInfoView*& dyn__standardLevelBuyInfoView();
    // Get instance field reference: private LoadingControl _loadingControl
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::LoadingControl*& dyn__loadingControl();
    // Get instance field reference: private UnityEngine.GameObject _noAllowedBeatmapInfoContainer
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn__noAllowedBeatmapInfoContainer();
    // Get instance field reference: private readonly PlayerDataModel _playerDataModel
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& dyn__playerDataModel();
    // Get instance field reference: private readonly AdditionalContentModel _additionalContentModel
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& dyn__additionalContentModel();
    // Get instance field reference: private readonly BeatmapLevelsModel _beatmapLevelsModel
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelsModel*& dyn__beatmapLevelsModel();
    // Get instance field reference: private readonly DlcPromoPanelModel _dlcPromoPanelModel
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::DlcPromoPanelModel*& dyn__dlcPromoPanelModel();
    // Get instance field reference: private readonly IAnalyticsModel _analyticsModel
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::IAnalyticsModel*& dyn__analyticsModel();
    // Get instance field reference: private System.Action`1<StandardLevelDetailViewController> didPressActionButtonEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::StandardLevelDetailViewController*>*& dyn_didPressActionButtonEvent();
    // Get instance field reference: private System.Action`2<StandardLevelDetailViewController,IBeatmapLevelPack> didPressOpenLevelPackButtonEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IBeatmapLevelPack*>*& dyn_didPressOpenLevelPackButtonEvent();
    // Get instance field reference: private System.Action`2<StandardLevelDetailViewController,System.Boolean> levelFavoriteStatusDidChangeEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, bool>*& dyn_levelFavoriteStatusDidChangeEvent();
    // Get instance field reference: private System.Action`2<StandardLevelDetailViewController,IBeatmapLevel> didPressPracticeButtonEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IBeatmapLevel*>*& dyn_didPressPracticeButtonEvent();
    // Get instance field reference: private System.Action`2<StandardLevelDetailViewController,IDifficultyBeatmap> didChangeDifficultyBeatmapEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IDifficultyBeatmap*>*& dyn_didChangeDifficultyBeatmapEvent();
    // Get instance field reference: private System.Action`2<StandardLevelDetailViewController,StandardLevelDetailViewController/ContentType> didChangeContentEvent
    [[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::StandardLevelDetailViewController::ContentType>*& dyn_didChangeContentEvent();
    // Get instance field reference: private readonly EventBinder _ownedObjectsEventBinder
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::EventBinder*& dyn__ownedObjectsEventBinder();
    // Get instance field reference: private readonly EventBinder _eventBinder
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::EventBinder*& dyn__eventBinder();
    // Get instance field reference: private System.Threading.CancellationTokenSource _cancellationTokenSource
    [[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& dyn__cancellationTokenSource();
    // Get instance field reference: private IPreviewBeatmapLevel _previewBeatmapLevel
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& dyn__previewBeatmapLevel();
    // Get instance field reference: private IBeatmapLevel _beatmapLevel
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevel*& dyn__beatmapLevel();
    // Get instance field reference: private IBeatmapLevelPack _pack
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelPack*& dyn__pack();
    // Get instance field reference: private System.Boolean _canBuyPack
    [[deprecated("Use field access instead!")]] bool& dyn__canBuyPack();
    // Get instance field reference: private BeatmapDifficultyMask _allowedBeatmapDifficultyMask
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficultyMask& dyn__allowedBeatmapDifficultyMask();
    // Get instance field reference: private System.Collections.Generic.HashSet`1<BeatmapCharacteristicSO> _notAllowedCharacteristics
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::GlobalNamespace::BeatmapCharacteristicSO*>*& dyn__notAllowedCharacteristics();
    // Get instance field reference: private System.Boolean _contentIsOwnedAndReady
    [[deprecated("Use field access instead!")]] bool& dyn__contentIsOwnedAndReady();
    // public IDifficultyBeatmap get_selectedDifficultyBeatmap()
    // Offset: 0x14A3ABC
    ::GlobalNamespace::IDifficultyBeatmap* get_selectedDifficultyBeatmap();
    // public IPreviewBeatmapLevel get_beatmapLevel()
    // Offset: 0x14A3AD8
    ::GlobalNamespace::IPreviewBeatmapLevel* get_beatmapLevel();
    // public System.Void add_didPressActionButtonEvent(System.Action`1<StandardLevelDetailViewController> value)
    // Offset: 0x14A330C
    void add_didPressActionButtonEvent(::System::Action_1<::GlobalNamespace::StandardLevelDetailViewController*>* value);
    // public System.Void remove_didPressActionButtonEvent(System.Action`1<StandardLevelDetailViewController> value)
    // Offset: 0x14A33B0
    void remove_didPressActionButtonEvent(::System::Action_1<::GlobalNamespace::StandardLevelDetailViewController*>* value);
    // public System.Void add_didPressOpenLevelPackButtonEvent(System.Action`2<StandardLevelDetailViewController,IBeatmapLevelPack> value)
    // Offset: 0x14A3454
    void add_didPressOpenLevelPackButtonEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IBeatmapLevelPack*>* value);
    // public System.Void remove_didPressOpenLevelPackButtonEvent(System.Action`2<StandardLevelDetailViewController,IBeatmapLevelPack> value)
    // Offset: 0x14A34F8
    void remove_didPressOpenLevelPackButtonEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IBeatmapLevelPack*>* value);
    // public System.Void add_levelFavoriteStatusDidChangeEvent(System.Action`2<StandardLevelDetailViewController,System.Boolean> value)
    // Offset: 0x14A359C
    void add_levelFavoriteStatusDidChangeEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, bool>* value);
    // public System.Void remove_levelFavoriteStatusDidChangeEvent(System.Action`2<StandardLevelDetailViewController,System.Boolean> value)
    // Offset: 0x14A3640
    void remove_levelFavoriteStatusDidChangeEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, bool>* value);
    // public System.Void add_didPressPracticeButtonEvent(System.Action`2<StandardLevelDetailViewController,IBeatmapLevel> value)
    // Offset: 0x14A36E4
    void add_didPressPracticeButtonEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IBeatmapLevel*>* value);
    // public System.Void remove_didPressPracticeButtonEvent(System.Action`2<StandardLevelDetailViewController,IBeatmapLevel> value)
    // Offset: 0x14A3788
    void remove_didPressPracticeButtonEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IBeatmapLevel*>* value);
    // public System.Void add_didChangeDifficultyBeatmapEvent(System.Action`2<StandardLevelDetailViewController,IDifficultyBeatmap> value)
    // Offset: 0x14A382C
    void add_didChangeDifficultyBeatmapEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IDifficultyBeatmap*>* value);
    // public System.Void remove_didChangeDifficultyBeatmapEvent(System.Action`2<StandardLevelDetailViewController,IDifficultyBeatmap> value)
    // Offset: 0x14A38D0
    void remove_didChangeDifficultyBeatmapEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IDifficultyBeatmap*>* value);
    // public System.Void add_didChangeContentEvent(System.Action`2<StandardLevelDetailViewController,StandardLevelDetailViewController/ContentType> value)
    // Offset: 0x14A3974
    void add_didChangeContentEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::StandardLevelDetailViewController::ContentType>* value);
    // public System.Void remove_didChangeContentEvent(System.Action`2<StandardLevelDetailViewController,StandardLevelDetailViewController/ContentType> value)
    // Offset: 0x14A3A18
    void remove_didChangeContentEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::StandardLevelDetailViewController::ContentType>* value);
    // public System.Void .ctor()
    // Offset: 0x14A5104
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StandardLevelDetailViewController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailViewController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StandardLevelDetailViewController*, creationType>()));
    }
    // public System.Void SetData(IPreviewBeatmapLevel previewBeatmapLevel, System.Boolean hidePracticeButton, System.Boolean hide360DegreeBeatmapCharacteristic, System.String playButtonText, BeatmapDifficultyMask allowedBeatmapDifficultyMask, BeatmapCharacteristicSO[] notAllowedCharacteristics)
    // Offset: 0x14A3AE0
    void SetData(::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, bool hidePracticeButton, bool hide360DegreeBeatmapCharacteristic, ::StringW playButtonText, ::GlobalNamespace::BeatmapDifficultyMask allowedBeatmapDifficultyMask, ::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*> notAllowedCharacteristics);
    // public System.Void SetData(IBeatmapLevelPack pack, IPreviewBeatmapLevel previewBeatmapLevel, System.Boolean hidePracticeButton, System.Boolean hide360DegreeBeatmapCharacteristic, System.Boolean canBuyPack, System.String playButtonText, BeatmapDifficultyMask allowedBeatmapDifficultyMask, BeatmapCharacteristicSO[] notAllowedCharacteristics)
    // Offset: 0x14A3C04
    void SetData(::GlobalNamespace::IBeatmapLevelPack* pack, ::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, bool hidePracticeButton, bool hide360DegreeBeatmapCharacteristic, bool canBuyPack, ::StringW playButtonText, ::GlobalNamespace::BeatmapDifficultyMask allowedBeatmapDifficultyMask, ::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*> notAllowedCharacteristics);
    // public System.Void RefreshContentLevelDetailView()
    // Offset: 0x14A42DC
    void RefreshContentLevelDetailView();
    // public System.Void ClearSelected()
    // Offset: 0x14A42F4
    void ClearSelected();
    // private System.Void HandleDidChangeDifficultyBeatmap(StandardLevelDetailView view, IDifficultyBeatmap beatmap)
    // Offset: 0x14A4310
    void HandleDidChangeDifficultyBeatmap(::GlobalNamespace::StandardLevelDetailView* view, ::GlobalNamespace::IDifficultyBeatmap* beatmap);
    // private System.Void HandleDidFavoriteToggleChange(StandardLevelDetailView view, UnityEngine.UI.Toggle toggle)
    // Offset: 0x14A4510
    void HandleDidFavoriteToggleChange(::GlobalNamespace::StandardLevelDetailView* view, ::UnityEngine::UI::Toggle* toggle);
    // private System.Void HandleLevelLoadingUpdate(BeatmapLevelsModel/LevelDownloadingUpdate levelLoadingUpdate)
    // Offset: 0x14A45BC
    void HandleLevelLoadingUpdate(::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate levelLoadingUpdate);
    // private System.Void BuyLevelButtonWasPressed()
    // Offset: 0x14A4B24
    void BuyLevelButtonWasPressed();
    // private System.Void BuyPackButtonWasPressed()
    // Offset: 0x14A4CA8
    void BuyPackButtonWasPressed();
    // private System.Threading.Tasks.Task LoadBeatmapLevelAsync(System.Threading.CancellationToken cancellationToken)
    // Offset: 0x14A4EC8
    ::System::Threading::Tasks::Task* LoadBeatmapLevelAsync(::System::Threading::CancellationToken cancellationToken);
    // private System.Void OpenLevelProductStoreOrShowBuyInfo()
    // Offset: 0x14A4FC4
    void OpenLevelProductStoreOrShowBuyInfo();
    // private System.Void OpenLevelProductStore()
    // Offset: 0x14A4C2C
    void OpenLevelProductStore();
    // private System.Void RefreshAvailabilityIfNeeded()
    // Offset: 0x14A3E68
    void RefreshAvailabilityIfNeeded();
    // private System.Void ShowContent(StandardLevelDetailViewController/ContentType contentType, System.String errorText, System.Single downloadingProgress, System.String downloadingText)
    // Offset: 0x14A473C
    void ShowContent(::GlobalNamespace::StandardLevelDetailViewController::ContentType contentType, ::StringW errorText, float downloadingProgress, ::StringW downloadingText);
    // private System.Void ShowLoadingAndDoSomething(System.Func`2<System.Threading.CancellationToken,System.Threading.Tasks.Task> action)
    // Offset: 0x14A4E04
    void ShowLoadingAndDoSomething(::System::Func_2<::System::Threading::CancellationToken, ::System::Threading::Tasks::Task*>* action);
    // private System.Void <DidActivate>b__47_0()
    // Offset: 0x14A518C
    void $DidActivate$b__47_0();
    // private System.Void <DidActivate>b__47_1()
    // Offset: 0x14A51F4
    void $DidActivate$b__47_1();
    // private System.Void <DidActivate>b__47_2()
    // Offset: 0x14A5258
    void $DidActivate$b__47_2();
    // private System.Void <DidActivate>b__47_3()
    // Offset: 0x14A52C0
    void $DidActivate$b__47_3();
    // private System.Void <DidActivate>b__47_4()
    // Offset: 0x14A53DC
    void $DidActivate$b__47_4();
    // private System.Void <DidActivate>b__47_5()
    // Offset: 0x14A5570
    void $DidActivate$b__47_5();
    // private System.Void <DidActivate>b__47_6()
    // Offset: 0x14A5648
    void $DidActivate$b__47_6();
    // private System.Threading.Tasks.Task <BuyPackButtonWasPressed>b__56_0(System.Threading.CancellationToken token)
    // Offset: 0x14A5798
    ::System::Threading::Tasks::Task* $BuyPackButtonWasPressed$b__56_0(::System::Threading::CancellationToken token);
    // private System.Threading.Tasks.Task <OpenLevelProductStoreOrShowBuyInfo>b__58_0(System.Threading.CancellationToken token)
    // Offset: 0x14A58AC
    ::System::Threading::Tasks::Task* $OpenLevelProductStoreOrShowBuyInfo$b__58_0(::System::Threading::CancellationToken token);
    // private System.Threading.Tasks.Task <OpenLevelProductStore>b__59_0(System.Threading.CancellationToken token)
    // Offset: 0x14A599C
    ::System::Threading::Tasks::Task* $OpenLevelProductStore$b__59_0(::System::Threading::CancellationToken token);
    // private System.Threading.Tasks.Task <RefreshAvailabilityIfNeeded>b__60_0(System.Threading.CancellationToken token)
    // Offset: 0x14A5AB0
    ::System::Threading::Tasks::Task* $RefreshAvailabilityIfNeeded$b__60_0(::System::Threading::CancellationToken token);
    // protected override System.Void DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    // Offset: 0x14A3F08
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    void DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling);
    // protected override System.Void DidDeactivate(System.Boolean removedFromHierarchy, System.Boolean screenSystemDisabling)
    // Offset: 0x14A4208
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidDeactivate(System.Boolean removedFromHierarchy, System.Boolean screenSystemDisabling)
    void DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling);
    // protected override System.Void OnDestroy()
    // Offset: 0x14A4294
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::OnDestroy()
    void OnDestroy();
  }; // StandardLevelDetailViewController
  #pragma pack(pop)
  static check_size<sizeof(StandardLevelDetailViewController), 304 + sizeof(bool)> __GlobalNamespace_StandardLevelDetailViewControllerSizeCheck;
  static_assert(sizeof(StandardLevelDetailViewController) == 0x131);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::StandardLevelDetailViewController::ContentType, "", "StandardLevelDetailViewController/ContentType");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::get_selectedDifficultyBeatmap
// Il2CppName: get_selectedDifficultyBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::IDifficultyBeatmap* (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::get_selectedDifficultyBeatmap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "get_selectedDifficultyBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::get_beatmapLevel
// Il2CppName: get_beatmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::IPreviewBeatmapLevel* (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::get_beatmapLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "get_beatmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::add_didPressActionButtonEvent
// Il2CppName: add_didPressActionButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Action_1<::GlobalNamespace::StandardLevelDetailViewController*>*)>(&GlobalNamespace::StandardLevelDetailViewController::add_didPressActionButtonEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "StandardLevelDetailViewController")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "add_didPressActionButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::remove_didPressActionButtonEvent
// Il2CppName: remove_didPressActionButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Action_1<::GlobalNamespace::StandardLevelDetailViewController*>*)>(&GlobalNamespace::StandardLevelDetailViewController::remove_didPressActionButtonEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "StandardLevelDetailViewController")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "remove_didPressActionButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::add_didPressOpenLevelPackButtonEvent
// Il2CppName: add_didPressOpenLevelPackButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IBeatmapLevelPack*>*)>(&GlobalNamespace::StandardLevelDetailViewController::add_didPressOpenLevelPackButtonEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "StandardLevelDetailViewController"), ::il2cpp_utils::GetClassFromName("", "IBeatmapLevelPack")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "add_didPressOpenLevelPackButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::remove_didPressOpenLevelPackButtonEvent
// Il2CppName: remove_didPressOpenLevelPackButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IBeatmapLevelPack*>*)>(&GlobalNamespace::StandardLevelDetailViewController::remove_didPressOpenLevelPackButtonEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "StandardLevelDetailViewController"), ::il2cpp_utils::GetClassFromName("", "IBeatmapLevelPack")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "remove_didPressOpenLevelPackButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::add_levelFavoriteStatusDidChangeEvent
// Il2CppName: add_levelFavoriteStatusDidChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, bool>*)>(&GlobalNamespace::StandardLevelDetailViewController::add_levelFavoriteStatusDidChangeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "StandardLevelDetailViewController"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "add_levelFavoriteStatusDidChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::remove_levelFavoriteStatusDidChangeEvent
// Il2CppName: remove_levelFavoriteStatusDidChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, bool>*)>(&GlobalNamespace::StandardLevelDetailViewController::remove_levelFavoriteStatusDidChangeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "StandardLevelDetailViewController"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "remove_levelFavoriteStatusDidChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::add_didPressPracticeButtonEvent
// Il2CppName: add_didPressPracticeButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IBeatmapLevel*>*)>(&GlobalNamespace::StandardLevelDetailViewController::add_didPressPracticeButtonEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "StandardLevelDetailViewController"), ::il2cpp_utils::GetClassFromName("", "IBeatmapLevel")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "add_didPressPracticeButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::remove_didPressPracticeButtonEvent
// Il2CppName: remove_didPressPracticeButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IBeatmapLevel*>*)>(&GlobalNamespace::StandardLevelDetailViewController::remove_didPressPracticeButtonEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "StandardLevelDetailViewController"), ::il2cpp_utils::GetClassFromName("", "IBeatmapLevel")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "remove_didPressPracticeButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::add_didChangeDifficultyBeatmapEvent
// Il2CppName: add_didChangeDifficultyBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IDifficultyBeatmap*>*)>(&GlobalNamespace::StandardLevelDetailViewController::add_didChangeDifficultyBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "StandardLevelDetailViewController"), ::il2cpp_utils::GetClassFromName("", "IDifficultyBeatmap")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "add_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::remove_didChangeDifficultyBeatmapEvent
// Il2CppName: remove_didChangeDifficultyBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::IDifficultyBeatmap*>*)>(&GlobalNamespace::StandardLevelDetailViewController::remove_didChangeDifficultyBeatmapEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "StandardLevelDetailViewController"), ::il2cpp_utils::GetClassFromName("", "IDifficultyBeatmap")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "remove_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::add_didChangeContentEvent
// Il2CppName: add_didChangeContentEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::StandardLevelDetailViewController::ContentType>*)>(&GlobalNamespace::StandardLevelDetailViewController::add_didChangeContentEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "StandardLevelDetailViewController"), ::il2cpp_utils::GetClassFromName("", "StandardLevelDetailViewController/ContentType")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "add_didChangeContentEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::remove_didChangeContentEvent
// Il2CppName: remove_didChangeContentEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Action_2<::GlobalNamespace::StandardLevelDetailViewController*, ::GlobalNamespace::StandardLevelDetailViewController::ContentType>*)>(&GlobalNamespace::StandardLevelDetailViewController::remove_didChangeContentEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "StandardLevelDetailViewController"), ::il2cpp_utils::GetClassFromName("", "StandardLevelDetailViewController/ContentType")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "remove_didChangeContentEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::GlobalNamespace::IPreviewBeatmapLevel*, bool, bool, ::StringW, ::GlobalNamespace::BeatmapDifficultyMask, ::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>)>(&GlobalNamespace::StandardLevelDetailViewController::SetData)> {
  static const MethodInfo* get() {
    static auto* previewBeatmapLevel = &::il2cpp_utils::GetClassFromName("", "IPreviewBeatmapLevel")->byval_arg;
    static auto* hidePracticeButton = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* hide360DegreeBeatmapCharacteristic = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* playButtonText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* allowedBeatmapDifficultyMask = &::il2cpp_utils::GetClassFromName("", "BeatmapDifficultyMask")->byval_arg;
    static auto* notAllowedCharacteristics = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("", "BeatmapCharacteristicSO"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{previewBeatmapLevel, hidePracticeButton, hide360DegreeBeatmapCharacteristic, playButtonText, allowedBeatmapDifficultyMask, notAllowedCharacteristics});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::GlobalNamespace::IBeatmapLevelPack*, ::GlobalNamespace::IPreviewBeatmapLevel*, bool, bool, bool, ::StringW, ::GlobalNamespace::BeatmapDifficultyMask, ::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>)>(&GlobalNamespace::StandardLevelDetailViewController::SetData)> {
  static const MethodInfo* get() {
    static auto* pack = &::il2cpp_utils::GetClassFromName("", "IBeatmapLevelPack")->byval_arg;
    static auto* previewBeatmapLevel = &::il2cpp_utils::GetClassFromName("", "IPreviewBeatmapLevel")->byval_arg;
    static auto* hidePracticeButton = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* hide360DegreeBeatmapCharacteristic = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* canBuyPack = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* playButtonText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* allowedBeatmapDifficultyMask = &::il2cpp_utils::GetClassFromName("", "BeatmapDifficultyMask")->byval_arg;
    static auto* notAllowedCharacteristics = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("", "BeatmapCharacteristicSO"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pack, previewBeatmapLevel, hidePracticeButton, hide360DegreeBeatmapCharacteristic, canBuyPack, playButtonText, allowedBeatmapDifficultyMask, notAllowedCharacteristics});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::RefreshContentLevelDetailView
// Il2CppName: RefreshContentLevelDetailView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::RefreshContentLevelDetailView)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "RefreshContentLevelDetailView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::ClearSelected
// Il2CppName: ClearSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::ClearSelected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "ClearSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::HandleDidChangeDifficultyBeatmap
// Il2CppName: HandleDidChangeDifficultyBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::GlobalNamespace::StandardLevelDetailView*, ::GlobalNamespace::IDifficultyBeatmap*)>(&GlobalNamespace::StandardLevelDetailViewController::HandleDidChangeDifficultyBeatmap)> {
  static const MethodInfo* get() {
    static auto* view = &::il2cpp_utils::GetClassFromName("", "StandardLevelDetailView")->byval_arg;
    static auto* beatmap = &::il2cpp_utils::GetClassFromName("", "IDifficultyBeatmap")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "HandleDidChangeDifficultyBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{view, beatmap});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::HandleDidFavoriteToggleChange
// Il2CppName: HandleDidFavoriteToggleChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::GlobalNamespace::StandardLevelDetailView*, ::UnityEngine::UI::Toggle*)>(&GlobalNamespace::StandardLevelDetailViewController::HandleDidFavoriteToggleChange)> {
  static const MethodInfo* get() {
    static auto* view = &::il2cpp_utils::GetClassFromName("", "StandardLevelDetailView")->byval_arg;
    static auto* toggle = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Toggle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "HandleDidFavoriteToggleChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{view, toggle});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::HandleLevelLoadingUpdate
// Il2CppName: HandleLevelLoadingUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate)>(&GlobalNamespace::StandardLevelDetailViewController::HandleLevelLoadingUpdate)> {
  static const MethodInfo* get() {
    static auto* levelLoadingUpdate = &::il2cpp_utils::GetClassFromName("", "BeatmapLevelsModel/LevelDownloadingUpdate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "HandleLevelLoadingUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelLoadingUpdate});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::BuyLevelButtonWasPressed
// Il2CppName: BuyLevelButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::BuyLevelButtonWasPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "BuyLevelButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::BuyPackButtonWasPressed
// Il2CppName: BuyPackButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::BuyPackButtonWasPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "BuyPackButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::LoadBeatmapLevelAsync
// Il2CppName: LoadBeatmapLevelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Threading::CancellationToken)>(&GlobalNamespace::StandardLevelDetailViewController::LoadBeatmapLevelAsync)> {
  static const MethodInfo* get() {
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "LoadBeatmapLevelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cancellationToken});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::OpenLevelProductStoreOrShowBuyInfo
// Il2CppName: OpenLevelProductStoreOrShowBuyInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::OpenLevelProductStoreOrShowBuyInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "OpenLevelProductStoreOrShowBuyInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::OpenLevelProductStore
// Il2CppName: OpenLevelProductStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::OpenLevelProductStore)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "OpenLevelProductStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::RefreshAvailabilityIfNeeded
// Il2CppName: RefreshAvailabilityIfNeeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::RefreshAvailabilityIfNeeded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "RefreshAvailabilityIfNeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::ShowContent
// Il2CppName: ShowContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::GlobalNamespace::StandardLevelDetailViewController::ContentType, ::StringW, float, ::StringW)>(&GlobalNamespace::StandardLevelDetailViewController::ShowContent)> {
  static const MethodInfo* get() {
    static auto* contentType = &::il2cpp_utils::GetClassFromName("", "StandardLevelDetailViewController/ContentType")->byval_arg;
    static auto* errorText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* downloadingProgress = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* downloadingText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "ShowContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{contentType, errorText, downloadingProgress, downloadingText});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::ShowLoadingAndDoSomething
// Il2CppName: ShowLoadingAndDoSomething
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Func_2<::System::Threading::CancellationToken, ::System::Threading::Tasks::Task*>*)>(&GlobalNamespace::StandardLevelDetailViewController::ShowLoadingAndDoSomething)> {
  static const MethodInfo* get() {
    static auto* action = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken"), ::il2cpp_utils::GetClassFromName("System.Threading.Tasks", "Task")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "ShowLoadingAndDoSomething", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{action});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_0
// Il2CppName: <DidActivate>b__47_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "<DidActivate>b__47_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_1
// Il2CppName: <DidActivate>b__47_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "<DidActivate>b__47_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_2
// Il2CppName: <DidActivate>b__47_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "<DidActivate>b__47_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_3
// Il2CppName: <DidActivate>b__47_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_3)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "<DidActivate>b__47_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_4
// Il2CppName: <DidActivate>b__47_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_4)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "<DidActivate>b__47_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_5
// Il2CppName: <DidActivate>b__47_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_5)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "<DidActivate>b__47_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_6
// Il2CppName: <DidActivate>b__47_6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_6)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "<DidActivate>b__47_6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::$BuyPackButtonWasPressed$b__56_0
// Il2CppName: <BuyPackButtonWasPressed>b__56_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Threading::CancellationToken)>(&GlobalNamespace::StandardLevelDetailViewController::$BuyPackButtonWasPressed$b__56_0)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "<BuyPackButtonWasPressed>b__56_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::$OpenLevelProductStoreOrShowBuyInfo$b__58_0
// Il2CppName: <OpenLevelProductStoreOrShowBuyInfo>b__58_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Threading::CancellationToken)>(&GlobalNamespace::StandardLevelDetailViewController::$OpenLevelProductStoreOrShowBuyInfo$b__58_0)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "<OpenLevelProductStoreOrShowBuyInfo>b__58_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::$OpenLevelProductStore$b__59_0
// Il2CppName: <OpenLevelProductStore>b__59_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Threading::CancellationToken)>(&GlobalNamespace::StandardLevelDetailViewController::$OpenLevelProductStore$b__59_0)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "<OpenLevelProductStore>b__59_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::$RefreshAvailabilityIfNeeded$b__60_0
// Il2CppName: <RefreshAvailabilityIfNeeded>b__60_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (GlobalNamespace::StandardLevelDetailViewController::*)(::System::Threading::CancellationToken)>(&GlobalNamespace::StandardLevelDetailViewController::$RefreshAvailabilityIfNeeded$b__60_0)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "<RefreshAvailabilityIfNeeded>b__60_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(bool, bool, bool)>(&GlobalNamespace::StandardLevelDetailViewController::DidActivate)> {
  static const MethodInfo* get() {
    static auto* firstActivation = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* addedToHierarchy = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* screenSystemEnabling = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{firstActivation, addedToHierarchy, screenSystemEnabling});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)(bool, bool)>(&GlobalNamespace::StandardLevelDetailViewController::DidDeactivate)> {
  static const MethodInfo* get() {
    static auto* removedFromHierarchy = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* screenSystemDisabling = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{removedFromHierarchy, screenSystemDisabling});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::StandardLevelDetailViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StandardLevelDetailViewController::*)()>(&GlobalNamespace::StandardLevelDetailViewController::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StandardLevelDetailViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
