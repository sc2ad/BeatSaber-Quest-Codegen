// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: ProfanityFilter
#include "GlobalNamespace/ProfanityFilter.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: IEnumerator because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: ProfanityFilter/<GetLookalikeLetters>d__4
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: ED92E0
  class ProfanityFilter::$GetLookalikeLetters$d__4 : public ::Il2CppObject/*, public System::Collections::Generic::IEnumerable_1<::Il2CppChar>, public System::Collections::Generic::IEnumerator_1<::Il2CppChar>*/ {
    public:
    // private System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x10
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Char <>2__current
    // Size: 0x2
    // Offset: 0x14
    ::Il2CppChar $$2__current;
    // Field size check
    static_assert(sizeof(::Il2CppChar) == 0x2);
    // Padding between fields: $$2__current and: $$l__initialThreadId
    char __padding1[0x2] = {};
    // private System.Int32 <>l__initialThreadId
    // Size: 0x4
    // Offset: 0x18
    int $$l__initialThreadId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Char c
    // Size: 0x2
    // Offset: 0x1C
    ::Il2CppChar c;
    // Field size check
    static_assert(sizeof(::Il2CppChar) == 0x2);
    // public System.Char <>3__c
    // Size: 0x2
    // Offset: 0x1E
    ::Il2CppChar $$3__c;
    // Field size check
    static_assert(sizeof(::Il2CppChar) == 0x2);
    // Creating value type constructor for type: $GetLookalikeLetters$d__4
    $GetLookalikeLetters$d__4(int $$1__state_ = {}, ::Il2CppChar $$2__current_ = {}, int $$l__initialThreadId_ = {}, ::Il2CppChar c_ = {}, ::Il2CppChar $$3__c_ = {}) noexcept : $$1__state{$$1__state_}, $$2__current{$$2__current_}, $$l__initialThreadId{$$l__initialThreadId_}, c{c_}, $$3__c{$$3__c_} {}
    // Creating interface conversion operator: operator System::Collections::Generic::IEnumerable_1<::Il2CppChar>
    operator System::Collections::Generic::IEnumerable_1<::Il2CppChar>() noexcept {
      return *reinterpret_cast<System::Collections::Generic::IEnumerable_1<::Il2CppChar>*>(this);
    }
    // Creating interface conversion operator: operator System::Collections::Generic::IEnumerator_1<::Il2CppChar>
    operator System::Collections::Generic::IEnumerator_1<::Il2CppChar>() noexcept {
      return *reinterpret_cast<System::Collections::Generic::IEnumerator_1<::Il2CppChar>*>(this);
    }
    // Get instance field reference: private System.Int32 <>1__state
    int& dyn_$$1__state();
    // Get instance field reference: private System.Char <>2__current
    ::Il2CppChar& dyn_$$2__current();
    // Get instance field reference: private System.Int32 <>l__initialThreadId
    int& dyn_$$l__initialThreadId();
    // Get instance field reference: private System.Char c
    ::Il2CppChar& dyn_c();
    // Get instance field reference: public System.Char <>3__c
    ::Il2CppChar& dyn_$$3__c();
    // public System.Void .ctor(System.Int32 <>1__state)
    // Offset: 0x18D54E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ProfanityFilter::$GetLookalikeLetters$d__4* New_ctor(int $$1__state) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ProfanityFilter::$GetLookalikeLetters$d__4*, creationType>($$1__state)));
    }
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0x18D5584
    void System_IDisposable_Dispose();
    // private System.Boolean MoveNext()
    // Offset: 0x18D5588
    bool MoveNext();
    // private System.Char System.Collections.Generic.IEnumerator<System.Char>.get_Current()
    // Offset: 0x18D5628
    ::Il2CppChar System_Collections_Generic_IEnumerator$System_Char$_get_Current();
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0x18D5630
    void System_Collections_IEnumerator_Reset();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0x18D5690
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
    // private System.Collections.Generic.IEnumerator`1<System.Char> System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
    // Offset: 0x18D56F4
    System::Collections::Generic::IEnumerator_1<::Il2CppChar>* System_Collections_Generic_IEnumerable$System_Char$_GetEnumerator();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x18D57A0
    System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
  }; // ProfanityFilter/<GetLookalikeLetters>d__4
  #pragma pack(pop)
  static check_size<sizeof(ProfanityFilter::$GetLookalikeLetters$d__4), 30 + sizeof(::Il2CppChar)> __GlobalNamespace_ProfanityFilter_$GetLookalikeLetters$d__4SizeCheck;
  static_assert(sizeof(ProfanityFilter::$GetLookalikeLetters$d__4) == 0x20);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4*, "", "ProfanityFilter/<GetLookalikeLetters>d__4");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::*)()>(&GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_IDisposable_Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::*)()>(&GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_Generic_IEnumerator$System_Char$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Char>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::*)()>(&GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_Generic_IEnumerator$System_Char$_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4*), "System.Collections.Generic.IEnumerator<System.Char>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::*)()>(&GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_IEnumerator_Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::*)()>(&GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_IEnumerator_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_Generic_IEnumerable$System_Char$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerator_1<::Il2CppChar>* (GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::*)()>(&GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_Generic_IEnumerable$System_Char$_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4*), "System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::*)()>(&GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
