// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: NamedIntListController
#include "GlobalNamespace/NamedIntListController.hpp"
// Including type: NamedColorListController
#include "GlobalNamespace/NamedColorListController.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`4<T1, T2, T3, T4>
  template<typename T1, typename T2, typename T3, typename T4>
  class Action_4;
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: String
  class String;
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SkinColorSO
  class SkinColorSO;
  // Forward declaring type: AvatarPartCollection`1<T>
  template<typename T>
  class AvatarPartCollection_1;
  // Forward declaring type: ColorPickerButtonController
  class ColorPickerButtonController;
  // Forward declaring type: AvatarPartsModel
  class AvatarPartsModel;
  // Forward declaring type: AvatarDataModel
  class AvatarDataModel;
  // Forward declaring type: PlayerDataModel
  class PlayerDataModel;
  // Forward declaring type: AvatarEditHistory
  class AvatarEditHistory;
  // Forward declaring type: IAvatarPart
  class IAvatarPart;
  // Skipping declaration: AvatarEditPart because it is already included!
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Button
  class Button;
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: CurvedTextMeshPro
  class CurvedTextMeshPro;
  // Forward declaring type: ValueChangedBinder`1<T>
  template<typename T>
  class ValueChangedBinder_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: EditAvatarViewController
  class EditAvatarViewController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::EditAvatarViewController);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::EditAvatarViewController*, "", "EditAvatarViewController");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x14C
  #pragma pack(push, 1)
  // Autogenerated type: EditAvatarViewController
  // [TokenAttribute] Offset: FFFFFFFF
  class EditAvatarViewController : public ::HMUI::ViewController {
    public:
    // Nested type: ::GlobalNamespace::EditAvatarViewController::FinishAction
    struct FinishAction;
    // Nested type: ::GlobalNamespace::EditAvatarViewController::AvatarEditPart
    struct AvatarEditPart;
    // Nested type: ::GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0
    class $$c__DisplayClass60_0;
    // Nested type: ::GlobalNamespace::EditAvatarViewController::$$c__DisplayClass61_0_1<T>
    template<typename T>
    class $$c__DisplayClass61_0_1;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: EditAvatarViewController/FinishAction
    // [TokenAttribute] Offset: FFFFFFFF
    struct FinishAction/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: FinishAction
      constexpr FinishAction(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public EditAvatarViewController/FinishAction Cancel
      static constexpr const int Cancel = 0;
      // Get static field: static public EditAvatarViewController/FinishAction Cancel
      static ::GlobalNamespace::EditAvatarViewController::FinishAction _get_Cancel();
      // Set static field: static public EditAvatarViewController/FinishAction Cancel
      static void _set_Cancel(::GlobalNamespace::EditAvatarViewController::FinishAction value);
      // static field const value: static public EditAvatarViewController/FinishAction Apply
      static constexpr const int Apply = 1;
      // Get static field: static public EditAvatarViewController/FinishAction Apply
      static ::GlobalNamespace::EditAvatarViewController::FinishAction _get_Apply();
      // Set static field: static public EditAvatarViewController/FinishAction Apply
      static void _set_Apply(::GlobalNamespace::EditAvatarViewController::FinishAction value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // EditAvatarViewController/FinishAction
    #pragma pack(pop)
    static check_size<sizeof(EditAvatarViewController::FinishAction), 0 + sizeof(int)> __GlobalNamespace_EditAvatarViewController_FinishActionSizeCheck;
    static_assert(sizeof(EditAvatarViewController::FinishAction) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: EditAvatarViewController/AvatarEditPart
    // [TokenAttribute] Offset: FFFFFFFF
    struct AvatarEditPart/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: AvatarEditPart
      constexpr AvatarEditPart(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public EditAvatarViewController/AvatarEditPart Unknown
      static constexpr const int Unknown = 0;
      // Get static field: static public EditAvatarViewController/AvatarEditPart Unknown
      static ::GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_Unknown();
      // Set static field: static public EditAvatarViewController/AvatarEditPart Unknown
      static void _set_Unknown(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart All
      static constexpr const int All = 1;
      // Get static field: static public EditAvatarViewController/AvatarEditPart All
      static ::GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_All();
      // Set static field: static public EditAvatarViewController/AvatarEditPart All
      static void _set_All(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart SkinColor
      static constexpr const int SkinColor = 2;
      // Get static field: static public EditAvatarViewController/AvatarEditPart SkinColor
      static ::GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_SkinColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart SkinColor
      static void _set_SkinColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart HeadTopModel
      static constexpr const int HeadTopModel = 3;
      // Get static field: static public EditAvatarViewController/AvatarEditPart HeadTopModel
      static ::GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_HeadTopModel();
      // Set static field: static public EditAvatarViewController/AvatarEditPart HeadTopModel
      static void _set_HeadTopModel(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart HeadTopPrimaryColor
      static constexpr const int HeadTopPrimaryColor = 4;
      // Get static field: static public EditAvatarViewController/AvatarEditPart HeadTopPrimaryColor
      static ::GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_HeadTopPrimaryColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart HeadTopPrimaryColor
      static void _set_HeadTopPrimaryColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart HeadTopSecondaryColor
      static constexpr const int HeadTopSecondaryColor = 5;
      // Get static field: static public EditAvatarViewController/AvatarEditPart HeadTopSecondaryColor
      static ::GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_HeadTopSecondaryColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart HeadTopSecondaryColor
      static void _set_HeadTopSecondaryColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart GlassesModel
      static constexpr const int GlassesModel = 6;
      // Get static field: static public EditAvatarViewController/AvatarEditPart GlassesModel
      static ::GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_GlassesModel();
      // Set static field: static public EditAvatarViewController/AvatarEditPart GlassesModel
      static void _set_GlassesModel(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart GlassesColor
      static constexpr const int GlassesColor = 7;
      // Get static field: static public EditAvatarViewController/AvatarEditPart GlassesColor
      static ::GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_GlassesColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart GlassesColor
      static void _set_GlassesColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart FacialHairModel
      static constexpr const int FacialHairModel = 8;
      // Get static field: static public EditAvatarViewController/AvatarEditPart FacialHairModel
      static ::GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_FacialHairModel();
      // Set static field: static public EditAvatarViewController/AvatarEditPart FacialHairModel
      static void _set_FacialHairModel(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart FacialHairColor
      static constexpr const int FacialHairColor = 9;
      // Get static field: static public EditAvatarViewController/AvatarEditPart FacialHairColor
      static ::GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_FacialHairColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart FacialHairColor
      static void _set_FacialHairColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart HandsModel
      static constexpr const int HandsModel = 10;
      // Get static field: static public EditAvatarViewController/AvatarEditPart HandsModel
      static ::GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_HandsModel();
      // Set static field: static public EditAvatarViewController/AvatarEditPart HandsModel
      static void _set_HandsModel(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart HandsColor
      static constexpr const int HandsColor = 11;
      // Get static field: static public EditAvatarViewController/AvatarEditPart HandsColor
      static ::GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_HandsColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart HandsColor
      static void _set_HandsColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart ClothesModel
      static constexpr const int ClothesModel = 12;
      // Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModel
      static ::GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_ClothesModel();
      // Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModel
      static void _set_ClothesModel(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart ClothesModelPrimaryColor
      static constexpr const int ClothesModelPrimaryColor = 13;
      // Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModelPrimaryColor
      static ::GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_ClothesModelPrimaryColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModelPrimaryColor
      static void _set_ClothesModelPrimaryColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart ClothesModelSecondaryColor
      static constexpr const int ClothesModelSecondaryColor = 14;
      // Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModelSecondaryColor
      static ::GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_ClothesModelSecondaryColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModelSecondaryColor
      static void _set_ClothesModelSecondaryColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // static field const value: static public EditAvatarViewController/AvatarEditPart ClothesModelDetailColor
      static constexpr const int ClothesModelDetailColor = 15;
      // Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModelDetailColor
      static ::GlobalNamespace::EditAvatarViewController::AvatarEditPart _get_ClothesModelDetailColor();
      // Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModelDetailColor
      static void _set_ClothesModelDetailColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // EditAvatarViewController/AvatarEditPart
    #pragma pack(pop)
    static check_size<sizeof(EditAvatarViewController::AvatarEditPart), 0 + sizeof(int)> __GlobalNamespace_EditAvatarViewController_AvatarEditPartSizeCheck;
    static_assert(sizeof(EditAvatarViewController::AvatarEditPart) == 0x4);
    public:
    // private NamedColorListController _skinColorValuePicker
    // Size: 0x8
    // Offset: 0x70
    ::GlobalNamespace::NamedColorListController* skinColorValuePicker;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NamedColorListController*) == 0x8);
    // private NamedIntListController _headTopValuePicker
    // Size: 0x8
    // Offset: 0x78
    ::GlobalNamespace::NamedIntListController* headTopValuePicker;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NamedIntListController*) == 0x8);
    // private NamedIntListController _eyesValuePicker
    // Size: 0x8
    // Offset: 0x80
    ::GlobalNamespace::NamedIntListController* eyesValuePicker;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NamedIntListController*) == 0x8);
    // private NamedIntListController _handsValuePicker
    // Size: 0x8
    // Offset: 0x88
    ::GlobalNamespace::NamedIntListController* handsValuePicker;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NamedIntListController*) == 0x8);
    // private NamedIntListController _clothesValuePicker
    // Size: 0x8
    // Offset: 0x90
    ::GlobalNamespace::NamedIntListController* clothesValuePicker;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::NamedIntListController*) == 0x8);
    // [SpaceAttribute] Offset: 0x112B918
    // private ColorPickerButtonController _headTopPrimaryColorButtonController
    // Size: 0x8
    // Offset: 0x98
    ::GlobalNamespace::ColorPickerButtonController* headTopPrimaryColorButtonController;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ColorPickerButtonController*) == 0x8);
    // private ColorPickerButtonController _headTopSecondaryColorButtonController
    // Size: 0x8
    // Offset: 0xA0
    ::GlobalNamespace::ColorPickerButtonController* headTopSecondaryColorButtonController;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ColorPickerButtonController*) == 0x8);
    // private ColorPickerButtonController _handsColorButtonController
    // Size: 0x8
    // Offset: 0xA8
    ::GlobalNamespace::ColorPickerButtonController* handsColorButtonController;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ColorPickerButtonController*) == 0x8);
    // private ColorPickerButtonController _clothesColorButtonControllerPrimary
    // Size: 0x8
    // Offset: 0xB0
    ::GlobalNamespace::ColorPickerButtonController* clothesColorButtonControllerPrimary;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ColorPickerButtonController*) == 0x8);
    // private ColorPickerButtonController _clothesColorButtonControllerSecondary
    // Size: 0x8
    // Offset: 0xB8
    ::GlobalNamespace::ColorPickerButtonController* clothesColorButtonControllerSecondary;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ColorPickerButtonController*) == 0x8);
    // private ColorPickerButtonController _clothesColorButtonControllerDetail
    // Size: 0x8
    // Offset: 0xC0
    ::GlobalNamespace::ColorPickerButtonController* clothesColorButtonControllerDetail;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ColorPickerButtonController*) == 0x8);
    // [SpaceAttribute] Offset: 0x112B9A0
    // private UnityEngine.UI.Button _randomizeAllButton
    // Size: 0x8
    // Offset: 0xC8
    ::UnityEngine::UI::Button* randomizeAllButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Button _undoButton
    // Size: 0x8
    // Offset: 0xD0
    ::UnityEngine::UI::Button* undoButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Button _redoButton
    // Size: 0x8
    // Offset: 0xD8
    ::UnityEngine::UI::Button* redoButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Button _applyButton
    // Size: 0x8
    // Offset: 0xE0
    ::UnityEngine::UI::Button* applyButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Button*) == 0x8);
    // private UnityEngine.UI.Button _cancelButton
    // Size: 0x8
    // Offset: 0xE8
    ::UnityEngine::UI::Button* cancelButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Button*) == 0x8);
    // [SpaceAttribute] Offset: 0x112BA18
    // private HMUI.CurvedTextMeshPro _applyButtonText
    // Size: 0x8
    // Offset: 0xF0
    ::HMUI::CurvedTextMeshPro* applyButtonText;
    // Field size check
    static_assert(sizeof(::HMUI::CurvedTextMeshPro*) == 0x8);
    // private UnityEngine.UI.Image _eyesPreviewImage
    // Size: 0x8
    // Offset: 0xF8
    ::UnityEngine::UI::Image* eyesPreviewImage;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // [InjectAttribute] Offset: 0x112BA60
    // private readonly AvatarPartsModel _avatarPartsModel
    // Size: 0x8
    // Offset: 0x100
    ::GlobalNamespace::AvatarPartsModel* avatarPartsModel;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::AvatarPartsModel*) == 0x8);
    // [InjectAttribute] Offset: 0x112BA70
    // private readonly AvatarDataModel _avatarDataModel
    // Size: 0x8
    // Offset: 0x108
    ::GlobalNamespace::AvatarDataModel* avatarDataModel;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::AvatarDataModel*) == 0x8);
    // [InjectAttribute] Offset: 0x112BA80
    // private readonly PlayerDataModel _playerDataModel
    // Size: 0x8
    // Offset: 0x110
    ::GlobalNamespace::PlayerDataModel* playerDataModel;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PlayerDataModel*) == 0x8);
    // private System.Action`1<EditAvatarViewController/FinishAction> didFinishEvent
    // Size: 0x8
    // Offset: 0x118
    ::System::Action_1<::GlobalNamespace::EditAvatarViewController::FinishAction>* didFinishEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::GlobalNamespace::EditAvatarViewController::FinishAction>*) == 0x8);
    // private System.Action`4<System.Action`1<UnityEngine.Color>,UnityEngine.Color,EditAvatarViewController/AvatarEditPart,System.Int32> didRequestColorChangeEvent
    // Size: 0x8
    // Offset: 0x120
    ::System::Action_4<::System::Action_1<::UnityEngine::Color>*, ::UnityEngine::Color, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>* didRequestColorChangeEvent;
    // Field size check
    static_assert(sizeof(::System::Action_4<::System::Action_1<::UnityEngine::Color>*, ::UnityEngine::Color, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>*) == 0x8);
    // private System.Action randomizeAllButtonWasPressedEvent
    // Size: 0x8
    // Offset: 0x128
    ::System::Action* randomizeAllButtonWasPressedEvent;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Action`1<EditAvatarViewController/AvatarEditPart> didChangedAvatarPartEvent
    // Size: 0x8
    // Offset: 0x130
    ::System::Action_1<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>* didChangedAvatarPartEvent;
    // Field size check
    static_assert(sizeof(::System::Action_1<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>*) == 0x8);
    // private readonly AvatarEditHistory _avatarEditHistory
    // Size: 0x8
    // Offset: 0x138
    ::GlobalNamespace::AvatarEditHistory* avatarEditHistory;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::AvatarEditHistory*) == 0x8);
    // private HMUI.ValueChangedBinder`1<System.Int32> _intPickerBinder
    // Size: 0x8
    // Offset: 0x140
    ::HMUI::ValueChangedBinder_1<int>* intPickerBinder;
    // Field size check
    static_assert(sizeof(::HMUI::ValueChangedBinder_1<int>*) == 0x8);
    // private EditAvatarViewController/AvatarEditPart _lastEditedPart
    // Size: 0x4
    // Offset: 0x148
    ::GlobalNamespace::EditAvatarViewController::AvatarEditPart lastEditedPart;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::EditAvatarViewController::AvatarEditPart) == 0x4);
    public:
    // [LocalizationKeyAttribute] Offset: 0x112BA90
    // static field const value: static private System.String kEditApplyButtonLocalizationKey
    static constexpr const char* kEditApplyButtonLocalizationKey = "BUTTON_APPLY";
    // Get static field: static private System.String kEditApplyButtonLocalizationKey
    static ::StringW _get_kEditApplyButtonLocalizationKey();
    // Set static field: static private System.String kEditApplyButtonLocalizationKey
    static void _set_kEditApplyButtonLocalizationKey(::StringW value);
    // [LocalizationKeyAttribute] Offset: 0x112BAA0
    // static field const value: static private System.String kCreateApplyButtonLocalizationKey
    static constexpr const char* kCreateApplyButtonLocalizationKey = "BUTTON_CREATE_AVATAR";
    // Get static field: static private System.String kCreateApplyButtonLocalizationKey
    static ::StringW _get_kCreateApplyButtonLocalizationKey();
    // Set static field: static private System.String kCreateApplyButtonLocalizationKey
    static void _set_kCreateApplyButtonLocalizationKey(::StringW value);
    // Get instance field reference: private NamedColorListController _skinColorValuePicker
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::NamedColorListController*& dyn__skinColorValuePicker();
    // Get instance field reference: private NamedIntListController _headTopValuePicker
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::NamedIntListController*& dyn__headTopValuePicker();
    // Get instance field reference: private NamedIntListController _eyesValuePicker
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::NamedIntListController*& dyn__eyesValuePicker();
    // Get instance field reference: private NamedIntListController _handsValuePicker
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::NamedIntListController*& dyn__handsValuePicker();
    // Get instance field reference: private NamedIntListController _clothesValuePicker
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::NamedIntListController*& dyn__clothesValuePicker();
    // Get instance field reference: private ColorPickerButtonController _headTopPrimaryColorButtonController
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorPickerButtonController*& dyn__headTopPrimaryColorButtonController();
    // Get instance field reference: private ColorPickerButtonController _headTopSecondaryColorButtonController
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorPickerButtonController*& dyn__headTopSecondaryColorButtonController();
    // Get instance field reference: private ColorPickerButtonController _handsColorButtonController
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorPickerButtonController*& dyn__handsColorButtonController();
    // Get instance field reference: private ColorPickerButtonController _clothesColorButtonControllerPrimary
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorPickerButtonController*& dyn__clothesColorButtonControllerPrimary();
    // Get instance field reference: private ColorPickerButtonController _clothesColorButtonControllerSecondary
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorPickerButtonController*& dyn__clothesColorButtonControllerSecondary();
    // Get instance field reference: private ColorPickerButtonController _clothesColorButtonControllerDetail
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorPickerButtonController*& dyn__clothesColorButtonControllerDetail();
    // Get instance field reference: private UnityEngine.UI.Button _randomizeAllButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& dyn__randomizeAllButton();
    // Get instance field reference: private UnityEngine.UI.Button _undoButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& dyn__undoButton();
    // Get instance field reference: private UnityEngine.UI.Button _redoButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& dyn__redoButton();
    // Get instance field reference: private UnityEngine.UI.Button _applyButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& dyn__applyButton();
    // Get instance field reference: private UnityEngine.UI.Button _cancelButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& dyn__cancelButton();
    // Get instance field reference: private HMUI.CurvedTextMeshPro _applyButtonText
    [[deprecated("Use field access instead!")]] ::HMUI::CurvedTextMeshPro*& dyn__applyButtonText();
    // Get instance field reference: private UnityEngine.UI.Image _eyesPreviewImage
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn__eyesPreviewImage();
    // Get instance field reference: private readonly AvatarPartsModel _avatarPartsModel
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPartsModel*& dyn__avatarPartsModel();
    // Get instance field reference: private readonly AvatarDataModel _avatarDataModel
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarDataModel*& dyn__avatarDataModel();
    // Get instance field reference: private readonly PlayerDataModel _playerDataModel
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& dyn__playerDataModel();
    // Get instance field reference: private System.Action`1<EditAvatarViewController/FinishAction> didFinishEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::EditAvatarViewController::FinishAction>*& dyn_didFinishEvent();
    // Get instance field reference: private System.Action`4<System.Action`1<UnityEngine.Color>,UnityEngine.Color,EditAvatarViewController/AvatarEditPart,System.Int32> didRequestColorChangeEvent
    [[deprecated("Use field access instead!")]] ::System::Action_4<::System::Action_1<::UnityEngine::Color>*, ::UnityEngine::Color, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>*& dyn_didRequestColorChangeEvent();
    // Get instance field reference: private System.Action randomizeAllButtonWasPressedEvent
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_randomizeAllButtonWasPressedEvent();
    // Get instance field reference: private System.Action`1<EditAvatarViewController/AvatarEditPart> didChangedAvatarPartEvent
    [[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>*& dyn_didChangedAvatarPartEvent();
    // Get instance field reference: private readonly AvatarEditHistory _avatarEditHistory
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarEditHistory*& dyn__avatarEditHistory();
    // Get instance field reference: private HMUI.ValueChangedBinder`1<System.Int32> _intPickerBinder
    [[deprecated("Use field access instead!")]] ::HMUI::ValueChangedBinder_1<int>*& dyn__intPickerBinder();
    // Get instance field reference: private EditAvatarViewController/AvatarEditPart _lastEditedPart
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::EditAvatarViewController::AvatarEditPart& dyn__lastEditedPart();
    // public System.Void add_didFinishEvent(System.Action`1<EditAvatarViewController/FinishAction> value)
    // Offset: 0x13FB9FC
    void add_didFinishEvent(::System::Action_1<::GlobalNamespace::EditAvatarViewController::FinishAction>* value);
    // public System.Void remove_didFinishEvent(System.Action`1<EditAvatarViewController/FinishAction> value)
    // Offset: 0x13FBAA4
    void remove_didFinishEvent(::System::Action_1<::GlobalNamespace::EditAvatarViewController::FinishAction>* value);
    // public System.Void add_didRequestColorChangeEvent(System.Action`4<System.Action`1<UnityEngine.Color>,UnityEngine.Color,EditAvatarViewController/AvatarEditPart,System.Int32> value)
    // Offset: 0x13FBB4C
    void add_didRequestColorChangeEvent(::System::Action_4<::System::Action_1<::UnityEngine::Color>*, ::UnityEngine::Color, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>* value);
    // public System.Void remove_didRequestColorChangeEvent(System.Action`4<System.Action`1<UnityEngine.Color>,UnityEngine.Color,EditAvatarViewController/AvatarEditPart,System.Int32> value)
    // Offset: 0x13FBBF4
    void remove_didRequestColorChangeEvent(::System::Action_4<::System::Action_1<::UnityEngine::Color>*, ::UnityEngine::Color, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>* value);
    // public System.Void add_randomizeAllButtonWasPressedEvent(System.Action value)
    // Offset: 0x13FBC9C
    void add_randomizeAllButtonWasPressedEvent(::System::Action* value);
    // public System.Void remove_randomizeAllButtonWasPressedEvent(System.Action value)
    // Offset: 0x13FBD44
    void remove_randomizeAllButtonWasPressedEvent(::System::Action* value);
    // public System.Void add_didChangedAvatarPartEvent(System.Action`1<EditAvatarViewController/AvatarEditPart> value)
    // Offset: 0x13FBDEC
    void add_didChangedAvatarPartEvent(::System::Action_1<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>* value);
    // public System.Void remove_didChangedAvatarPartEvent(System.Action`1<EditAvatarViewController/AvatarEditPart> value)
    // Offset: 0x13FBE94
    void remove_didChangedAvatarPartEvent(::System::Action_1<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>* value);
    // public System.Void .ctor()
    // Offset: 0x13FD3AC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EditAvatarViewController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EditAvatarViewController*, creationType>()));
    }
    // public System.Void Setup(System.Boolean showAsCreateView)
    // Offset: 0x13FBF3C
    void Setup(bool showAsCreateView);
    // public System.Void InitHistory()
    // Offset: 0x13FBFC4
    void InitHistory();
    // public System.Void DiscardLastEdit()
    // Offset: 0x13FC084
    void DiscardLastEdit();
    // protected System.Void Update()
    // Offset: 0x13FC0A0
    void Update();
    // private System.Void RefreshUi()
    // Offset: 0x13FCB50
    void RefreshUi();
    // private System.Void UpdateButtons()
    // Offset: 0x13FC018
    void UpdateButtons();
    // private System.Void HandleSkinColorDidChanged(System.Int32 value)
    // Offset: 0x13FCE68
    void HandleSkinColorDidChanged(int value);
    // private System.Void EyesValuePickerHasChanged(System.String eyesId)
    // Offset: 0x13FCF44
    void EyesValuePickerHasChanged(::StringW eyesId);
    // private System.Void HandleUndoButtonWasPressed()
    // Offset: 0x13FC1A4
    void HandleUndoButtonWasPressed();
    // private System.Void HandleRedoButtonWasPressed()
    // Offset: 0x13FCFEC
    void HandleRedoButtonWasPressed();
    // private System.Void HandleRandomizeAllButtonWasPressed()
    // Offset: 0x13FC0F4
    void HandleRandomizeAllButtonWasPressed();
    // private System.Void HandleRandomizeModelsButtonWasPressed()
    // Offset: 0x13FD158
    void HandleRandomizeModelsButtonWasPressed();
    // private System.Void HandleRandomizeColorsButtonWasPressed()
    // Offset: 0x13FD1E8
    void HandleRandomizeColorsButtonWasPressed();
    // private System.Void ReportAllChangedAndUpdate()
    // Offset: 0x13FD0C4
    void ReportAllChangedAndUpdate();
    // private System.Void HandleApplyButtonWasPressed()
    // Offset: 0x13FD268
    void HandleApplyButtonWasPressed();
    // private System.Void SaveAvatar()
    // Offset: 0x13FD2D4
    void SaveAvatar();
    // private System.Void HandleCancelButtonWasPressed()
    // Offset: 0x13FD32C
    void HandleCancelButtonWasPressed();
    // static private NamedIntListController/TextValuePair[] CreateTextValuePairsForAvatarPartCollection(AvatarPartCollection`1<T> partCollection)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::ArrayW<::GlobalNamespace::NamedIntListController::TextValuePair*> CreateTextValuePairsForAvatarPartCollection(::GlobalNamespace::AvatarPartCollection_1<T>* partCollection) {
      static_assert(std::is_convertible_v<T, ::UnityEngine::Object*> && std::is_convertible_v<std::remove_pointer_t<T>, ::GlobalNamespace::IAvatarPart>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::CreateTextValuePairsForAvatarPartCollection");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EditAvatarViewController", "CreateTextValuePairsForAvatarPartCollection", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partCollection)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::NamedIntListController::TextValuePair*>, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, partCollection);
    }
    // private NamedColorListController/ColorValuePair[] CreateColorValuePairsForAvatarPartCollection(SkinColorSO[] colors)
    // Offset: 0x13FCA2C
    ::ArrayW<::GlobalNamespace::NamedColorListController::ColorValuePair*> CreateColorValuePairsForAvatarPartCollection(::ArrayW<::GlobalNamespace::SkinColorSO*> colors);
    // private System.Void SetupColorButton(UnityEngine.UI.Button button, System.Action`1<UnityEngine.Color> colorSetter, System.Func`1<UnityEngine.Color> currentColor, EditAvatarViewController/AvatarEditPart avatarEditPart, System.Int32 uvSegment)
    // Offset: 0x13FC948
    void SetupColorButton(::UnityEngine::UI::Button* button, ::System::Action_1<::UnityEngine::Color>* colorSetter, ::System::Func_1<::UnityEngine::Color>* currentColor, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart avatarEditPart, int uvSegment);
    // private System.Void SetupValuePicker(AvatarPartCollection`1<T> partCollection, NamedIntListController valuePicker, System.Action`1<System.String> setIdAction, EditAvatarViewController/AvatarEditPart avatarEditPart)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    void SetupValuePicker(::GlobalNamespace::AvatarPartCollection_1<T>* partCollection, ::GlobalNamespace::NamedIntListController* valuePicker, ::System::Action_1<::StringW>* setIdAction, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart avatarEditPart) {
      static_assert(std::is_convertible_v<T, ::UnityEngine::Object*> && std::is_convertible_v<std::remove_pointer_t<T>, ::GlobalNamespace::IAvatarPart>);
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::SetupValuePicker");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupValuePicker", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partCollection), ::il2cpp_utils::ExtractType(valuePicker), ::il2cpp_utils::ExtractType(setIdAction), ::il2cpp_utils::ExtractType(avatarEditPart)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, partCollection, valuePicker, setIdAction, avatarEditPart);
    }
    // private System.Void <DidActivate>b__44_0(UnityEngine.Color color)
    // Offset: 0x13FD414
    void $DidActivate$b__44_0(::UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__44_1()
    // Offset: 0x13FD440
    ::UnityEngine::Color $DidActivate$b__44_1();
    // private System.Void <DidActivate>b__44_2(UnityEngine.Color color)
    // Offset: 0x13FD46C
    void $DidActivate$b__44_2(::UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__44_3()
    // Offset: 0x13FD498
    ::UnityEngine::Color $DidActivate$b__44_3();
    // private System.Void <DidActivate>b__44_4(UnityEngine.Color color)
    // Offset: 0x13FD4C4
    void $DidActivate$b__44_4(::UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__44_5()
    // Offset: 0x13FD4F0
    ::UnityEngine::Color $DidActivate$b__44_5();
    // private System.Void <DidActivate>b__44_6(UnityEngine.Color color)
    // Offset: 0x13FD51C
    void $DidActivate$b__44_6(::UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__44_7()
    // Offset: 0x13FD548
    ::UnityEngine::Color $DidActivate$b__44_7();
    // private System.Void <DidActivate>b__44_8(UnityEngine.Color color)
    // Offset: 0x13FD574
    void $DidActivate$b__44_8(::UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__44_9()
    // Offset: 0x13FD5A0
    ::UnityEngine::Color $DidActivate$b__44_9();
    // private System.Void <DidActivate>b__44_10(UnityEngine.Color color)
    // Offset: 0x13FD5CC
    void $DidActivate$b__44_10(::UnityEngine::Color color);
    // private UnityEngine.Color <DidActivate>b__44_11()
    // Offset: 0x13FD5F8
    ::UnityEngine::Color $DidActivate$b__44_11();
    // private System.Void <DidActivate>b__44_12(System.String s)
    // Offset: 0x13FD624
    void $DidActivate$b__44_12(::StringW s);
    // private System.Void <DidActivate>b__44_13(System.String s)
    // Offset: 0x13FD64C
    void $DidActivate$b__44_13(::StringW s);
    // private System.Void <DidActivate>b__44_14(System.String s)
    // Offset: 0x13FD674
    void $DidActivate$b__44_14(::StringW s);
    // protected override System.Void DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    // Offset: 0x13FC28C
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidActivate(System.Boolean firstActivation, System.Boolean addedToHierarchy, System.Boolean screenSystemEnabling)
    void DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling);
  }; // EditAvatarViewController
  #pragma pack(pop)
  static check_size<sizeof(EditAvatarViewController), 328 + sizeof(::GlobalNamespace::EditAvatarViewController::AvatarEditPart)> __GlobalNamespace_EditAvatarViewControllerSizeCheck;
  static_assert(sizeof(EditAvatarViewController) == 0x14C);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::EditAvatarViewController::AvatarEditPart, "", "EditAvatarViewController/AvatarEditPart");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::EditAvatarViewController::FinishAction, "", "EditAvatarViewController/FinishAction");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::System::Action_1<::GlobalNamespace::EditAvatarViewController::FinishAction>*)>(&GlobalNamespace::EditAvatarViewController::add_didFinishEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "EditAvatarViewController/FinishAction")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::System::Action_1<::GlobalNamespace::EditAvatarViewController::FinishAction>*)>(&GlobalNamespace::EditAvatarViewController::remove_didFinishEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "EditAvatarViewController/FinishAction")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::add_didRequestColorChangeEvent
// Il2CppName: add_didRequestColorChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::System::Action_4<::System::Action_1<::UnityEngine::Color>*, ::UnityEngine::Color, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>*)>(&GlobalNamespace::EditAvatarViewController::add_didRequestColorChangeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")}), ::il2cpp_utils::GetClassFromName("UnityEngine", "Color"), ::il2cpp_utils::GetClassFromName("", "EditAvatarViewController/AvatarEditPart"), ::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "add_didRequestColorChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::remove_didRequestColorChangeEvent
// Il2CppName: remove_didRequestColorChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::System::Action_4<::System::Action_1<::UnityEngine::Color>*, ::UnityEngine::Color, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>*)>(&GlobalNamespace::EditAvatarViewController::remove_didRequestColorChangeEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`4"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")}), ::il2cpp_utils::GetClassFromName("UnityEngine", "Color"), ::il2cpp_utils::GetClassFromName("", "EditAvatarViewController/AvatarEditPart"), ::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "remove_didRequestColorChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::add_randomizeAllButtonWasPressedEvent
// Il2CppName: add_randomizeAllButtonWasPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::System::Action*)>(&GlobalNamespace::EditAvatarViewController::add_randomizeAllButtonWasPressedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "add_randomizeAllButtonWasPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::remove_randomizeAllButtonWasPressedEvent
// Il2CppName: remove_randomizeAllButtonWasPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::System::Action*)>(&GlobalNamespace::EditAvatarViewController::remove_randomizeAllButtonWasPressedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "remove_randomizeAllButtonWasPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::add_didChangedAvatarPartEvent
// Il2CppName: add_didChangedAvatarPartEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::System::Action_1<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>*)>(&GlobalNamespace::EditAvatarViewController::add_didChangedAvatarPartEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "EditAvatarViewController/AvatarEditPart")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "add_didChangedAvatarPartEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::remove_didChangedAvatarPartEvent
// Il2CppName: remove_didChangedAvatarPartEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::System::Action_1<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>*)>(&GlobalNamespace::EditAvatarViewController::remove_didChangedAvatarPartEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "EditAvatarViewController/AvatarEditPart")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "remove_didChangedAvatarPartEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(bool)>(&GlobalNamespace::EditAvatarViewController::Setup)> {
  static const MethodInfo* get() {
    static auto* showAsCreateView = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{showAsCreateView});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::InitHistory
// Il2CppName: InitHistory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::InitHistory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "InitHistory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::DiscardLastEdit
// Il2CppName: DiscardLastEdit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::DiscardLastEdit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "DiscardLastEdit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::RefreshUi
// Il2CppName: RefreshUi
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::RefreshUi)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "RefreshUi", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::UpdateButtons
// Il2CppName: UpdateButtons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::UpdateButtons)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "UpdateButtons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::HandleSkinColorDidChanged
// Il2CppName: HandleSkinColorDidChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(int)>(&GlobalNamespace::EditAvatarViewController::HandleSkinColorDidChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "HandleSkinColorDidChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::EyesValuePickerHasChanged
// Il2CppName: EyesValuePickerHasChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::StringW)>(&GlobalNamespace::EditAvatarViewController::EyesValuePickerHasChanged)> {
  static const MethodInfo* get() {
    static auto* eyesId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "EyesValuePickerHasChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eyesId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::HandleUndoButtonWasPressed
// Il2CppName: HandleUndoButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::HandleUndoButtonWasPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "HandleUndoButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::HandleRedoButtonWasPressed
// Il2CppName: HandleRedoButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::HandleRedoButtonWasPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "HandleRedoButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::HandleRandomizeAllButtonWasPressed
// Il2CppName: HandleRandomizeAllButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::HandleRandomizeAllButtonWasPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "HandleRandomizeAllButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::HandleRandomizeModelsButtonWasPressed
// Il2CppName: HandleRandomizeModelsButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::HandleRandomizeModelsButtonWasPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "HandleRandomizeModelsButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::HandleRandomizeColorsButtonWasPressed
// Il2CppName: HandleRandomizeColorsButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::HandleRandomizeColorsButtonWasPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "HandleRandomizeColorsButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::ReportAllChangedAndUpdate
// Il2CppName: ReportAllChangedAndUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::ReportAllChangedAndUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "ReportAllChangedAndUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::HandleApplyButtonWasPressed
// Il2CppName: HandleApplyButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::HandleApplyButtonWasPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "HandleApplyButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::SaveAvatar
// Il2CppName: SaveAvatar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::SaveAvatar)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "SaveAvatar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::HandleCancelButtonWasPressed
// Il2CppName: HandleCancelButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::HandleCancelButtonWasPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "HandleCancelButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::CreateTextValuePairsForAvatarPartCollection
// Il2CppName: CreateTextValuePairsForAvatarPartCollection
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::CreateColorValuePairsForAvatarPartCollection
// Il2CppName: CreateColorValuePairsForAvatarPartCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::GlobalNamespace::NamedColorListController::ColorValuePair*> (GlobalNamespace::EditAvatarViewController::*)(::ArrayW<::GlobalNamespace::SkinColorSO*>)>(&GlobalNamespace::EditAvatarViewController::CreateColorValuePairsForAvatarPartCollection)> {
  static const MethodInfo* get() {
    static auto* colors = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("", "SkinColorSO"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "CreateColorValuePairsForAvatarPartCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{colors});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::SetupColorButton
// Il2CppName: SetupColorButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::UnityEngine::UI::Button*, ::System::Action_1<::UnityEngine::Color>*, ::System::Func_1<::UnityEngine::Color>*, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart, int)>(&GlobalNamespace::EditAvatarViewController::SetupColorButton)> {
  static const MethodInfo* get() {
    static auto* button = &::il2cpp_utils::GetClassFromName("UnityEngine.UI", "Button")->byval_arg;
    static auto* colorSetter = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")})->byval_arg;
    static auto* currentColor = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")})->byval_arg;
    static auto* avatarEditPart = &::il2cpp_utils::GetClassFromName("", "EditAvatarViewController/AvatarEditPart")->byval_arg;
    static auto* uvSegment = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "SetupColorButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{button, colorSetter, currentColor, avatarEditPart, uvSegment});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::SetupValuePicker
// Il2CppName: SetupValuePicker
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_0
// Il2CppName: <DidActivate>b__44_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::UnityEngine::Color)>(&GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_0)> {
  static const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "<DidActivate>b__44_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_1
// Il2CppName: <DidActivate>b__44_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "<DidActivate>b__44_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_2
// Il2CppName: <DidActivate>b__44_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::UnityEngine::Color)>(&GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_2)> {
  static const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "<DidActivate>b__44_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_3
// Il2CppName: <DidActivate>b__44_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_3)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "<DidActivate>b__44_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_4
// Il2CppName: <DidActivate>b__44_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::UnityEngine::Color)>(&GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_4)> {
  static const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "<DidActivate>b__44_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_5
// Il2CppName: <DidActivate>b__44_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_5)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "<DidActivate>b__44_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_6
// Il2CppName: <DidActivate>b__44_6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::UnityEngine::Color)>(&GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_6)> {
  static const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "<DidActivate>b__44_6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_7
// Il2CppName: <DidActivate>b__44_7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_7)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "<DidActivate>b__44_7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_8
// Il2CppName: <DidActivate>b__44_8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::UnityEngine::Color)>(&GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_8)> {
  static const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "<DidActivate>b__44_8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_9
// Il2CppName: <DidActivate>b__44_9
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_9)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "<DidActivate>b__44_9", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_10
// Il2CppName: <DidActivate>b__44_10
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::UnityEngine::Color)>(&GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_10)> {
  static const MethodInfo* get() {
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "<DidActivate>b__44_10", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{color});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_11
// Il2CppName: <DidActivate>b__44_11
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (GlobalNamespace::EditAvatarViewController::*)()>(&GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_11)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "<DidActivate>b__44_11", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_12
// Il2CppName: <DidActivate>b__44_12
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::StringW)>(&GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_12)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "<DidActivate>b__44_12", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_13
// Il2CppName: <DidActivate>b__44_13
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::StringW)>(&GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_13)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "<DidActivate>b__44_13", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_14
// Il2CppName: <DidActivate>b__44_14
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(::StringW)>(&GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_14)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "<DidActivate>b__44_14", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::EditAvatarViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::EditAvatarViewController::*)(bool, bool, bool)>(&GlobalNamespace::EditAvatarViewController::DidActivate)> {
  static const MethodInfo* get() {
    static auto* firstActivation = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* addedToHierarchy = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* screenSystemEnabling = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::EditAvatarViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{firstActivation, addedToHierarchy, screenSystemEnabling});
  }
};
