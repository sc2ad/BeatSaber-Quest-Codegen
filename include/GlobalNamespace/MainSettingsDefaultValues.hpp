// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Single
#include "System/Single.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: System.Boolean
#include "System/Boolean.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MainSettingsModelSO
  class MainSettingsModelSO;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: MainSettingsDefaultValues
  class MainSettingsDefaultValues;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::MainSettingsDefaultValues);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::MainSettingsDefaultValues*, "", "MainSettingsDefaultValues");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: MainSettingsDefaultValues
  // [TokenAttribute] Offset: FFFFFFFF
  class MainSettingsDefaultValues : public ::Il2CppObject {
    public:
    // static field const value: static public System.Single kDefaultRoomCenterX
    static constexpr const float kDefaultRoomCenterX = 0;
    // Get static field: static public System.Single kDefaultRoomCenterX
    static float _get_kDefaultRoomCenterX();
    // Set static field: static public System.Single kDefaultRoomCenterX
    static void _set_kDefaultRoomCenterX(float value);
    // static field const value: static public System.Single kDefaultRoomCenterY
    static constexpr const float kDefaultRoomCenterY = 0;
    // Get static field: static public System.Single kDefaultRoomCenterY
    static float _get_kDefaultRoomCenterY();
    // Set static field: static public System.Single kDefaultRoomCenterY
    static void _set_kDefaultRoomCenterY(float value);
    // static field const value: static public System.Single kDefaultRoomCenterZ
    static constexpr const float kDefaultRoomCenterZ = 0;
    // Get static field: static public System.Single kDefaultRoomCenterZ
    static float _get_kDefaultRoomCenterZ();
    // Set static field: static public System.Single kDefaultRoomCenterZ
    static void _set_kDefaultRoomCenterZ(float value);
    // static field const value: static public System.Single kDefaultControllerPositionX
    static constexpr const float kDefaultControllerPositionX = 0;
    // Get static field: static public System.Single kDefaultControllerPositionX
    static float _get_kDefaultControllerPositionX();
    // Set static field: static public System.Single kDefaultControllerPositionX
    static void _set_kDefaultControllerPositionX(float value);
    // static field const value: static public System.Single kDefaultControllerPositionY
    static constexpr const float kDefaultControllerPositionY = 0;
    // Get static field: static public System.Single kDefaultControllerPositionY
    static float _get_kDefaultControllerPositionY();
    // Set static field: static public System.Single kDefaultControllerPositionY
    static void _set_kDefaultControllerPositionY(float value);
    // static field const value: static public System.Single kDefaultControllerPositionZ
    static constexpr const float kDefaultControllerPositionZ = 0;
    // Get static field: static public System.Single kDefaultControllerPositionZ
    static float _get_kDefaultControllerPositionZ();
    // Set static field: static public System.Single kDefaultControllerPositionZ
    static void _set_kDefaultControllerPositionZ(float value);
    // static field const value: static public System.Single kDefaultControllerRotationX
    static constexpr const float kDefaultControllerRotationX = 0;
    // Get static field: static public System.Single kDefaultControllerRotationX
    static float _get_kDefaultControllerRotationX();
    // Set static field: static public System.Single kDefaultControllerRotationX
    static void _set_kDefaultControllerRotationX(float value);
    // static field const value: static public System.Single kDefaultControllerRotationY
    static constexpr const float kDefaultControllerRotationY = 0;
    // Get static field: static public System.Single kDefaultControllerRotationY
    static float _get_kDefaultControllerRotationY();
    // Set static field: static public System.Single kDefaultControllerRotationY
    static void _set_kDefaultControllerRotationY(float value);
    // static field const value: static public System.Single kDefaultControllerRotationZ
    static constexpr const float kDefaultControllerRotationZ = 0;
    // Get static field: static public System.Single kDefaultControllerRotationZ
    static float _get_kDefaultControllerRotationZ();
    // Set static field: static public System.Single kDefaultControllerRotationZ
    static void _set_kDefaultControllerRotationZ(float value);
    // static field const value: static public System.Int32 kDefaultWindowResolutionWidth
    static constexpr const int kDefaultWindowResolutionWidth = 1920;
    // Get static field: static public System.Int32 kDefaultWindowResolutionWidth
    static int _get_kDefaultWindowResolutionWidth();
    // Set static field: static public System.Int32 kDefaultWindowResolutionWidth
    static void _set_kDefaultWindowResolutionWidth(int value);
    // static field const value: static public System.Int32 kDefaultWindowResolutionHeight
    static constexpr const int kDefaultWindowResolutionHeight = 1080;
    // Get static field: static public System.Int32 kDefaultWindowResolutionHeight
    static int _get_kDefaultWindowResolutionHeight();
    // Set static field: static public System.Int32 kDefaultWindowResolutionHeight
    static void _set_kDefaultWindowResolutionHeight(int value);
    // [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10DBAF4
    // Get static field: static public readonly System.Int32 kDefaultMirrorGraphicsSettings
    static int _get_kDefaultMirrorGraphicsSettings();
    // Set static field: static public readonly System.Int32 kDefaultMirrorGraphicsSettings
    static void _set_kDefaultMirrorGraphicsSettings(int value);
    // static field const value: static public System.Int32 kDefaultMainEffectGraphicsSettings
    static constexpr const int kDefaultMainEffectGraphicsSettings = 0;
    // Get static field: static public System.Int32 kDefaultMainEffectGraphicsSettings
    static int _get_kDefaultMainEffectGraphicsSettings();
    // Set static field: static public System.Int32 kDefaultMainEffectGraphicsSettings
    static void _set_kDefaultMainEffectGraphicsSettings(int value);
    // static field const value: static public System.Int32 kDefaultBloomGraphicsSettings
    static constexpr const int kDefaultBloomGraphicsSettings = 0;
    // Get static field: static public System.Int32 kDefaultBloomGraphicsSettings
    static int _get_kDefaultBloomGraphicsSettings();
    // Set static field: static public System.Int32 kDefaultBloomGraphicsSettings
    static void _set_kDefaultBloomGraphicsSettings(int value);
    // static field const value: static public System.Boolean kDefaultSmokeGraphicsSettings
    static constexpr const bool kDefaultSmokeGraphicsSettings = false;
    // Get static field: static public System.Boolean kDefaultSmokeGraphicsSettings
    static bool _get_kDefaultSmokeGraphicsSettings();
    // Set static field: static public System.Boolean kDefaultSmokeGraphicsSettings
    static void _set_kDefaultSmokeGraphicsSettings(bool value);
    // static field const value: static public System.Int32 kDefaultAntiAliasingLevel
    static constexpr const int kDefaultAntiAliasingLevel = 4;
    // Get static field: static public System.Int32 kDefaultAntiAliasingLevel
    static int _get_kDefaultAntiAliasingLevel();
    // Set static field: static public System.Int32 kDefaultAntiAliasingLevel
    static void _set_kDefaultAntiAliasingLevel(int value);
    // static field const value: static public System.Single kDefaultVrResolutionScale
    static constexpr const float kDefaultVrResolutionScale = 1;
    // Get static field: static public System.Single kDefaultVrResolutionScale
    static float _get_kDefaultVrResolutionScale();
    // Set static field: static public System.Single kDefaultVrResolutionScale
    static void _set_kDefaultVrResolutionScale(float value);
    // static field const value: static public System.Single kDefaultMenuVRResolutionScaleMultiplier
    static constexpr const float kDefaultMenuVRResolutionScaleMultiplier = 1.2;
    // Get static field: static public System.Single kDefaultMenuVRResolutionScaleMultiplier
    static float _get_kDefaultMenuVRResolutionScaleMultiplier();
    // Set static field: static public System.Single kDefaultMenuVRResolutionScaleMultiplier
    static void _set_kDefaultMenuVRResolutionScaleMultiplier(float value);
    // static field const value: static public System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
    static constexpr const bool kDefaultUseFixedFoveatedRenderingDuringGameplay = true;
    // Get static field: static public System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
    static bool _get_kDefaultUseFixedFoveatedRenderingDuringGameplay();
    // Set static field: static public System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
    static void _set_kDefaultUseFixedFoveatedRenderingDuringGameplay(bool value);
    // static field const value: static public System.Boolean kDefaultBurnMarkTrailsEnabled
    static constexpr const bool kDefaultBurnMarkTrailsEnabled = false;
    // Get static field: static public System.Boolean kDefaultBurnMarkTrailsEnabled
    static bool _get_kDefaultBurnMarkTrailsEnabled();
    // Set static field: static public System.Boolean kDefaultBurnMarkTrailsEnabled
    static void _set_kDefaultBurnMarkTrailsEnabled(bool value);
    // static field const value: static public System.Boolean kDefaultScreenDisplacementEffectsEnabled
    static constexpr const bool kDefaultScreenDisplacementEffectsEnabled = false;
    // Get static field: static public System.Boolean kDefaultScreenDisplacementEffectsEnabled
    static bool _get_kDefaultScreenDisplacementEffectsEnabled();
    // Set static field: static public System.Boolean kDefaultScreenDisplacementEffectsEnabled
    static void _set_kDefaultScreenDisplacementEffectsEnabled(bool value);
    // static field const value: static public System.Single kDefaultAudioLatency
    static constexpr const float kDefaultAudioLatency = 0.09;
    // Get static field: static public System.Single kDefaultAudioLatency
    static float _get_kDefaultAudioLatency();
    // Set static field: static public System.Single kDefaultAudioLatency
    static void _set_kDefaultAudioLatency(float value);
    // static field const value: static public System.Int32 kMaxShockwaveParticles
    static constexpr const int kMaxShockwaveParticles = 0;
    // Get static field: static public System.Int32 kMaxShockwaveParticles
    static int _get_kMaxShockwaveParticles();
    // Set static field: static public System.Int32 kMaxShockwaveParticles
    static void _set_kMaxShockwaveParticles(int value);
    // static field const value: static public System.Int32 kMaxNumberOfCutSoundEffects
    static constexpr const int kMaxNumberOfCutSoundEffects = 16;
    // Get static field: static public System.Int32 kMaxNumberOfCutSoundEffects
    static int _get_kMaxNumberOfCutSoundEffects();
    // Set static field: static public System.Int32 kMaxNumberOfCutSoundEffects
    static void _set_kMaxNumberOfCutSoundEffects(int value);
    // static field const value: static public System.Boolean kCreateScreenshotDuringTheGame
    static constexpr const bool kCreateScreenshotDuringTheGame = false;
    // Get static field: static public System.Boolean kCreateScreenshotDuringTheGame
    static bool _get_kCreateScreenshotDuringTheGame();
    // Set static field: static public System.Boolean kCreateScreenshotDuringTheGame
    static void _set_kCreateScreenshotDuringTheGame(bool value);
    // static field const value: static public System.String kSystemLanguageSerializedName
    static constexpr const char* kSystemLanguageSerializedName = "SystemLanguage";
    // Get static field: static public System.String kSystemLanguageSerializedName
    static ::StringW _get_kSystemLanguageSerializedName();
    // Set static field: static public System.String kSystemLanguageSerializedName
    static void _set_kSystemLanguageSerializedName(::StringW value);
    // static field const value: static public System.Int32 kDefaultPauseButtonPressDurationLevel
    static constexpr const int kDefaultPauseButtonPressDurationLevel = 0;
    // Get static field: static public System.Int32 kDefaultPauseButtonPressDurationLevel
    static int _get_kDefaultPauseButtonPressDurationLevel();
    // Set static field: static public System.Int32 kDefaultPauseButtonPressDurationLevel
    static void _set_kDefaultPauseButtonPressDurationLevel(int value);
    // public System.Void .ctor()
    // Offset: 0x1549344
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MainSettingsDefaultValues* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MainSettingsDefaultValues*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x154934C
    static void _cctor();
    // static public System.Void SetFixedDefaultValues(MainSettingsModelSO mainSettingsModel)
    // Offset: 0x1549200
    static void SetFixedDefaultValues(::GlobalNamespace::MainSettingsModelSO* mainSettingsModel);
  }; // MainSettingsDefaultValues
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::MainSettingsDefaultValues::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::MainSettingsDefaultValues::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::MainSettingsDefaultValues::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MainSettingsDefaultValues*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MainSettingsDefaultValues::SetFixedDefaultValues
// Il2CppName: SetFixedDefaultValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::MainSettingsModelSO*)>(&GlobalNamespace::MainSettingsDefaultValues::SetFixedDefaultValues)> {
  static const MethodInfo* get() {
    static auto* mainSettingsModel = &::il2cpp_utils::GetClassFromName("", "MainSettingsModelSO")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MainSettingsDefaultValues*), "SetFixedDefaultValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mainSettingsModel});
  }
};
