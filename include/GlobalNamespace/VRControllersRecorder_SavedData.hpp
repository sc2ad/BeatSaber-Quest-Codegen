// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: VRControllersRecorder
#include "GlobalNamespace/VRControllersRecorder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: VRControllersRecorder/SavedData
  // [TokenAttribute] Offset: FFFFFFFF
  class VRControllersRecorder::SavedData : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable
    class KeyframeSerializable;
    // public VRControllersRecorder/SavedData/KeyframeSerializable[] _keyframes
    // Size: 0x8
    // Offset: 0x10
    ::Array<GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>* keyframes;
    // Field size check
    static_assert(sizeof(::Array<GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>*) == 0x8);
    // Creating value type constructor for type: SavedData
    SavedData(::Array<GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>* keyframes_ = {}) noexcept : keyframes{keyframes_} {}
    // Creating conversion operator: operator ::Array<GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>*
    constexpr operator ::Array<GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>*() const noexcept {
      return keyframes;
    }
    // Get instance field reference: public VRControllersRecorder/SavedData/KeyframeSerializable[] _keyframes
    ::Array<GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>*& dyn__keyframes();
    // public System.Void .ctor()
    // Offset: 0x13491EC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VRControllersRecorder::SavedData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VRControllersRecorder::SavedData*, creationType>()));
    }
  }; // VRControllersRecorder/SavedData
  #pragma pack(pop)
  static check_size<sizeof(VRControllersRecorder::SavedData), 16 + sizeof(::Array<GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>*)> __GlobalNamespace_VRControllersRecorder_SavedDataSizeCheck;
  static_assert(sizeof(VRControllersRecorder::SavedData) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::VRControllersRecorder::SavedData*, "", "VRControllersRecorder/SavedData");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::VRControllersRecorder::SavedData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
