// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: DlcPromoPanelDataSO
#include "GlobalNamespace/DlcPromoPanelDataSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshProUGUI
  class TextMeshProUGUI;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IBeatmapLevelPack
  class IBeatmapLevelPack;
  // Forward declaring type: IPreviewBeatmapLevel
  class IPreviewBeatmapLevel;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: MusicPackPromoBanner
  class MusicPackPromoBanner;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::MusicPackPromoBanner);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::MusicPackPromoBanner*, "", "MusicPackPromoBanner");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: MusicPackPromoBanner
  // [TokenAttribute] Offset: FFFFFFFF
  class MusicPackPromoBanner : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private TMPro.TextMeshProUGUI _promoText
    // Size: 0x8
    // Offset: 0x18
    ::TMPro::TextMeshProUGUI* promoText;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshProUGUI*) == 0x8);
    // private UnityEngine.UI.Image _backgroundImage
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::UI::Image* backgroundImage;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private UnityEngine.UI.Image _coverImage
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::UI::Image* coverImage;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private TMPro.TextMeshProUGUI _promoButtonText
    // Size: 0x8
    // Offset: 0x30
    ::TMPro::TextMeshProUGUI* promoButtonText;
    // Field size check
    static_assert(sizeof(::TMPro::TextMeshProUGUI*) == 0x8);
    // private IBeatmapLevelPack _currentPromoMusicPack
    // Size: 0x8
    // Offset: 0x38
    ::GlobalNamespace::IBeatmapLevelPack* currentPromoMusicPack;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::IBeatmapLevelPack*) == 0x8);
    // private IPreviewBeatmapLevel _currentPromoBeatmapLevel
    // Size: 0x8
    // Offset: 0x40
    ::GlobalNamespace::IPreviewBeatmapLevel* currentPromoBeatmapLevel;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::IPreviewBeatmapLevel*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // [LocalizationKeyAttribute] Offset: 0x10ED998
    // static field const value: static private System.String kPlayNow
    static constexpr const char* kPlayNow = "PROMO_BANNER_PLAY_NOW_LABEL";
    // Get static field: static private System.String kPlayNow
    static ::StringW _get_kPlayNow();
    // Set static field: static private System.String kPlayNow
    static void _set_kPlayNow(::StringW value);
    // [LocalizationKeyAttribute] Offset: 0x10ED9A8
    // static field const value: static private System.String kGetNow
    static constexpr const char* kGetNow = "PROMO_GET_NOW_LABEL";
    // Get static field: static private System.String kGetNow
    static ::StringW _get_kGetNow();
    // Set static field: static private System.String kGetNow
    static void _set_kGetNow(::StringW value);
    // Get instance field reference: private TMPro.TextMeshProUGUI _promoText
    [[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& dyn__promoText();
    // Get instance field reference: private UnityEngine.UI.Image _backgroundImage
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn__backgroundImage();
    // Get instance field reference: private UnityEngine.UI.Image _coverImage
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn__coverImage();
    // Get instance field reference: private TMPro.TextMeshProUGUI _promoButtonText
    [[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& dyn__promoButtonText();
    // Get instance field reference: private IBeatmapLevelPack _currentPromoMusicPack
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelPack*& dyn__currentPromoMusicPack();
    // Get instance field reference: private IPreviewBeatmapLevel _currentPromoBeatmapLevel
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& dyn__currentPromoBeatmapLevel();
    // public IPreviewBeatmapLevel get_currentPromoBeatmapLevel()
    // Offset: 0x14C6080
    ::GlobalNamespace::IPreviewBeatmapLevel* get_currentPromoBeatmapLevel();
    // public IBeatmapLevelPack get_currentPromoMusicPack()
    // Offset: 0x14C6088
    ::GlobalNamespace::IBeatmapLevelPack* get_currentPromoMusicPack();
    // public System.String get_promoButtonText()
    // Offset: 0x14C6090
    ::StringW get_promoButtonText();
    // public System.Void .ctor()
    // Offset: 0x14C627C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MusicPackPromoBanner* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MusicPackPromoBanner*, creationType>()));
    }
    // public System.Void Setup(DlcPromoPanelDataSO/MusicPackPromoInfo musicPackPromoData, System.Boolean probablyOwned)
    // Offset: 0x14C60AC
    void Setup(::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo* musicPackPromoData, bool probablyOwned);
  }; // MusicPackPromoBanner
  #pragma pack(pop)
  static check_size<sizeof(MusicPackPromoBanner), 64 + sizeof(::GlobalNamespace::IPreviewBeatmapLevel*)> __GlobalNamespace_MusicPackPromoBannerSizeCheck;
  static_assert(sizeof(MusicPackPromoBanner) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::MusicPackPromoBanner::get_currentPromoBeatmapLevel
// Il2CppName: get_currentPromoBeatmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::IPreviewBeatmapLevel* (GlobalNamespace::MusicPackPromoBanner::*)()>(&GlobalNamespace::MusicPackPromoBanner::get_currentPromoBeatmapLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MusicPackPromoBanner*), "get_currentPromoBeatmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MusicPackPromoBanner::get_currentPromoMusicPack
// Il2CppName: get_currentPromoMusicPack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::IBeatmapLevelPack* (GlobalNamespace::MusicPackPromoBanner::*)()>(&GlobalNamespace::MusicPackPromoBanner::get_currentPromoMusicPack)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MusicPackPromoBanner*), "get_currentPromoMusicPack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MusicPackPromoBanner::get_promoButtonText
// Il2CppName: get_promoButtonText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::MusicPackPromoBanner::*)()>(&GlobalNamespace::MusicPackPromoBanner::get_promoButtonText)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MusicPackPromoBanner*), "get_promoButtonText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::MusicPackPromoBanner::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::MusicPackPromoBanner::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::MusicPackPromoBanner::*)(::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*, bool)>(&GlobalNamespace::MusicPackPromoBanner::Setup)> {
  static const MethodInfo* get() {
    static auto* musicPackPromoData = &::il2cpp_utils::GetClassFromName("", "DlcPromoPanelDataSO/MusicPackPromoInfo")->byval_arg;
    static auto* probablyOwned = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::MusicPackPromoBanner*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{musicPackPromoData, probablyOwned});
  }
};
