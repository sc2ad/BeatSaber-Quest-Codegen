// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BufferedLightColorGroupEffect
#include "GlobalNamespace/BufferedLightColorGroupEffect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: LightGroup
  class LightGroup;
  // Forward declaring type: MaterialPropertyBlockController
  class MaterialPropertyBlockController;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BufferedLightColorGroupEffect::InitData);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BufferedLightColorGroupEffect::InitData*, "", "BufferedLightColorGroupEffect/InitData");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: BufferedLightColorGroupEffect/InitData
  // [TokenAttribute] Offset: FFFFFFFF
  class BufferedLightColorGroupEffect::InitData : public ::Il2CppObject {
    public:
    public:
    // public readonly LightGroup lightGroup
    // Size: 0x8
    // Offset: 0x10
    ::GlobalNamespace::LightGroup* lightGroup;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::LightGroup*) == 0x8);
    // public readonly MaterialPropertyBlockController materialPropertyBlockController
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::MaterialPropertyBlockController* materialPropertyBlockController;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::MaterialPropertyBlockController*) == 0x8);
    public:
    // Get instance field reference: public readonly LightGroup lightGroup
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::LightGroup*& dyn_lightGroup();
    // Get instance field reference: public readonly MaterialPropertyBlockController materialPropertyBlockController
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::MaterialPropertyBlockController*& dyn_materialPropertyBlockController();
    // public System.Void .ctor(LightGroup lightGroup, MaterialPropertyBlockController materialPropertyBlockController)
    // Offset: 0x13F2228
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BufferedLightColorGroupEffect::InitData* New_ctor(::GlobalNamespace::LightGroup* lightGroup, ::GlobalNamespace::MaterialPropertyBlockController* materialPropertyBlockController) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedLightColorGroupEffect::InitData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BufferedLightColorGroupEffect::InitData*, creationType>(lightGroup, materialPropertyBlockController)));
    }
  }; // BufferedLightColorGroupEffect/InitData
  #pragma pack(pop)
  static check_size<sizeof(BufferedLightColorGroupEffect::InitData), 24 + sizeof(::GlobalNamespace::MaterialPropertyBlockController*)> __GlobalNamespace_BufferedLightColorGroupEffect_InitDataSizeCheck;
  static_assert(sizeof(BufferedLightColorGroupEffect::InitData) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BufferedLightColorGroupEffect::InitData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
