// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PersistentScriptableObject
#include "GlobalNamespace/PersistentScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: BeatmapLevelPackCollectionSO
  class BeatmapLevelPackCollectionSO;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: BeatmapLevelPackCollectionContainerSO
  class BeatmapLevelPackCollectionContainerSO;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BeatmapLevelPackCollectionContainerSO);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BeatmapLevelPackCollectionContainerSO*, "", "BeatmapLevelPackCollectionContainerSO");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: BeatmapLevelPackCollectionContainerSO
  // [TokenAttribute] Offset: FFFFFFFF
  class BeatmapLevelPackCollectionContainerSO : public ::GlobalNamespace::PersistentScriptableObject {
    public:
    public:
    // private BeatmapLevelPackCollectionSO _beatmapLevelPackCollection
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::BeatmapLevelPackCollectionSO* beatmapLevelPackCollection;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::BeatmapLevelPackCollectionSO*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private BeatmapLevelPackCollectionSO _beatmapLevelPackCollection
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackCollectionSO*& dyn__beatmapLevelPackCollection();
    // public BeatmapLevelPackCollectionSO get_beatmapLevelPackCollection()
    // Offset: 0x1511D64
    ::GlobalNamespace::BeatmapLevelPackCollectionSO* get_beatmapLevelPackCollection();
    // public System.Void .ctor()
    // Offset: 0x1511D6C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BeatmapLevelPackCollectionContainerSO* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackCollectionContainerSO::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BeatmapLevelPackCollectionContainerSO*, creationType>()));
    }
  }; // BeatmapLevelPackCollectionContainerSO
  #pragma pack(pop)
  static check_size<sizeof(BeatmapLevelPackCollectionContainerSO), 24 + sizeof(::GlobalNamespace::BeatmapLevelPackCollectionSO*)> __GlobalNamespace_BeatmapLevelPackCollectionContainerSOSizeCheck;
  static_assert(sizeof(BeatmapLevelPackCollectionContainerSO) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BeatmapLevelPackCollectionContainerSO::get_beatmapLevelPackCollection
// Il2CppName: get_beatmapLevelPackCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::BeatmapLevelPackCollectionSO* (GlobalNamespace::BeatmapLevelPackCollectionContainerSO::*)()>(&GlobalNamespace::BeatmapLevelPackCollectionContainerSO::get_beatmapLevelPackCollection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::BeatmapLevelPackCollectionContainerSO*), "get_beatmapLevelPackCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::BeatmapLevelPackCollectionContainerSO::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
