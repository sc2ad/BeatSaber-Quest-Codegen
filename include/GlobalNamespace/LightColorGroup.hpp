// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: LightGroupSubsystem
#include "GlobalNamespace/LightGroupSubsystem.hpp"
// Including type: IEditTimeValidated
#include "GlobalNamespace/IEditTimeValidated.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: LightColorGroup
  class LightColorGroup;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::LightColorGroup);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::LightColorGroup*, "", "LightColorGroup");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: LightColorGroup
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExecuteAlways] Offset: FFFFFFFF
  class LightColorGroup : public ::GlobalNamespace::LightGroupSubsystem/*, public ::GlobalNamespace::IEditTimeValidated*/ {
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::IEditTimeValidated
    operator ::GlobalNamespace::IEditTimeValidated() noexcept {
      return *reinterpret_cast<::GlobalNamespace::IEditTimeValidated*>(this);
    }
    // Creating interface conversion operator: i_IEditTimeValidated
    inline ::GlobalNamespace::IEditTimeValidated* i_IEditTimeValidated() noexcept {
      return reinterpret_cast<::GlobalNamespace::IEditTimeValidated*>(this);
    }
    // public System.Void .ctor()
    // Offset: 0x14B94A0
    // Implemented from: LightGroupSubsystem
    // Base method: System.Void LightGroupSubsystem::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LightColorGroup* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroup::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LightColorGroup*, creationType>()));
    }
  }; // LightColorGroup
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::LightColorGroup::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
