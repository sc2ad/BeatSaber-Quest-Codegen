// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: FixedUpdateSmoothValue`1
#include "GlobalNamespace/FixedUpdateSmoothValue_1.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: FixedUpdateVector3SmoothValue
  class FixedUpdateVector3SmoothValue;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::FixedUpdateVector3SmoothValue);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::FixedUpdateVector3SmoothValue*, "", "FixedUpdateVector3SmoothValue");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: FixedUpdateVector3SmoothValue
  // [TokenAttribute] Offset: FFFFFFFF
  class FixedUpdateVector3SmoothValue : public ::GlobalNamespace::FixedUpdateSmoothValue_1<::UnityEngine::Vector3> {
    public:
    // protected UnityEngine.Vector3 Interpolate(UnityEngine.Vector3 value0, UnityEngine.Vector3 value1, System.Single t)
    // Offset: 0x1639DCC
    ::UnityEngine::Vector3 Interpolate(::UnityEngine::Vector3 value0, ::UnityEngine::Vector3 value1, float t);
    // public System.Void .ctor(System.Single smooth)
    // Offset: 0x1639D6C
    // Implemented from: FixedUpdateSmoothValue`1
    // Base method: System.Void FixedUpdateSmoothValue_1::.ctor(System.Single smooth)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FixedUpdateVector3SmoothValue* New_ctor(float smooth) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FixedUpdateVector3SmoothValue::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FixedUpdateVector3SmoothValue*, creationType>(smooth)));
    }
  }; // FixedUpdateVector3SmoothValue
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::FixedUpdateVector3SmoothValue::Interpolate
// Il2CppName: Interpolate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (GlobalNamespace::FixedUpdateVector3SmoothValue::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, float)>(&GlobalNamespace::FixedUpdateVector3SmoothValue::Interpolate)> {
  static const MethodInfo* get() {
    static auto* value0 = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* value1 = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::FixedUpdateVector3SmoothValue*), "Interpolate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value0, value1, t});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::FixedUpdateVector3SmoothValue::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
