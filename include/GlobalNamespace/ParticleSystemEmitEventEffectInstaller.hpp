// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Zenject.MonoInstaller
#include "Zenject/MonoInstaller.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ParticleSystemEventController
  class ParticleSystemEventController;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ParticleSystemEmitEventEffectInstaller
  class ParticleSystemEmitEventEffectInstaller;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::ParticleSystemEmitEventEffectInstaller);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ParticleSystemEmitEventEffectInstaller*, "", "ParticleSystemEmitEventEffectInstaller");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: ParticleSystemEmitEventEffectInstaller
  // [TokenAttribute] Offset: FFFFFFFF
  class ParticleSystemEmitEventEffectInstaller : public ::Zenject::MonoInstaller {
    public:
    public:
    // private ParticleSystemEventController _particleSystemEventControllerPrefab
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::ParticleSystemEventController* particleSystemEventControllerPrefab;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ParticleSystemEventController*) == 0x8);
    // private System.Int32 _particleSystemEventControllerInitialSize
    // Size: 0x4
    // Offset: 0x28
    int particleSystemEventControllerInitialSize;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private ParticleSystemEventController _particleSystemEventControllerPrefab
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ParticleSystemEventController*& dyn__particleSystemEventControllerPrefab();
    // Get instance field reference: private System.Int32 _particleSystemEventControllerInitialSize
    [[deprecated("Use field access instead!")]] int& dyn__particleSystemEventControllerInitialSize();
    // public System.Void .ctor()
    // Offset: 0x1354DBC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ParticleSystemEmitEventEffectInstaller* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEmitEventEffectInstaller::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ParticleSystemEmitEventEffectInstaller*, creationType>()));
    }
    // public override System.Void InstallBindings()
    // Offset: 0x1354D24
    // Implemented from: Zenject.MonoInstallerBase
    // Base method: System.Void MonoInstallerBase::InstallBindings()
    void InstallBindings();
  }; // ParticleSystemEmitEventEffectInstaller
  #pragma pack(pop)
  static check_size<sizeof(ParticleSystemEmitEventEffectInstaller), 40 + sizeof(int)> __GlobalNamespace_ParticleSystemEmitEventEffectInstallerSizeCheck;
  static_assert(sizeof(ParticleSystemEmitEventEffectInstaller) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::ParticleSystemEmitEventEffectInstaller::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::ParticleSystemEmitEventEffectInstaller::InstallBindings
// Il2CppName: InstallBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ParticleSystemEmitEventEffectInstaller::*)()>(&GlobalNamespace::ParticleSystemEmitEventEffectInstaller::InstallBindings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ParticleSystemEmitEventEffectInstaller*), "InstallBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
