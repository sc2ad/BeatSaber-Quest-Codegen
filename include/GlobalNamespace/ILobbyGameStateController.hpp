// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
// Including type: MultiplayerLobbyState
#include "GlobalNamespace/MultiplayerLobbyState.hpp"
// Including type: CannotStartGameReason
#include "GlobalNamespace/CannotStartGameReason.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MultiplayerLevelScenesTransitionSetupDataSO
  class MultiplayerLevelScenesTransitionSetupDataSO;
  // Forward declaring type: MultiplayerResultsData
  class MultiplayerResultsData;
  // Forward declaring type: PlayersMissingEntitlementsNetSerializable
  class PlayersMissingEntitlementsNetSerializable;
  // Forward declaring type: BeatmapIdentifierNetSerializable
  class BeatmapIdentifierNetSerializable;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationToken
  struct CancellationToken;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: ILobbyGameStateController
  // [TokenAttribute] Offset: FFFFFFFF
  class ILobbyGameStateController {
    public:
    // Creating value type constructor for type: ILobbyGameStateController
    ILobbyGameStateController() noexcept {}
    // public System.Void add_gameStartedEvent(System.Action value)
    // Offset: 0xFFFFFFFF
    void add_gameStartedEvent(System::Action* value);
    // public System.Void remove_gameStartedEvent(System.Action value)
    // Offset: 0xFFFFFFFF
    void remove_gameStartedEvent(System::Action* value);
    // public System.Void add_gameStartCancelledEvent(System.Action value)
    // Offset: 0xFFFFFFFF
    void add_gameStartCancelledEvent(System::Action* value);
    // public System.Void remove_gameStartCancelledEvent(System.Action value)
    // Offset: 0xFFFFFFFF
    void remove_gameStartCancelledEvent(System::Action* value);
    // public System.Void add_countdownStartedEvent(System.Action value)
    // Offset: 0xFFFFFFFF
    void add_countdownStartedEvent(System::Action* value);
    // public System.Void remove_countdownStartedEvent(System.Action value)
    // Offset: 0xFFFFFFFF
    void remove_countdownStartedEvent(System::Action* value);
    // public System.Void add_countdownCancelledEvent(System.Action value)
    // Offset: 0xFFFFFFFF
    void add_countdownCancelledEvent(System::Action* value);
    // public System.Void remove_countdownCancelledEvent(System.Action value)
    // Offset: 0xFFFFFFFF
    void remove_countdownCancelledEvent(System::Action* value);
    // public System.Void add_songStillDownloadingEvent(System.Action value)
    // Offset: 0xFFFFFFFF
    void add_songStillDownloadingEvent(System::Action* value);
    // public System.Void remove_songStillDownloadingEvent(System.Action value)
    // Offset: 0xFFFFFFFF
    void remove_songStillDownloadingEvent(System::Action* value);
    // public System.Void add_startTimeChangedEvent(System.Action value)
    // Offset: 0xFFFFFFFF
    void add_startTimeChangedEvent(System::Action* value);
    // public System.Void remove_startTimeChangedEvent(System.Action value)
    // Offset: 0xFFFFFFFF
    void remove_startTimeChangedEvent(System::Action* value);
    // public System.Void add_levelFinishedEvent(System.Action`2<MultiplayerLevelScenesTransitionSetupDataSO,MultiplayerResultsData> value)
    // Offset: 0xFFFFFFFF
    void add_levelFinishedEvent(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>* value);
    // public System.Void remove_levelFinishedEvent(System.Action`2<MultiplayerLevelScenesTransitionSetupDataSO,MultiplayerResultsData> value)
    // Offset: 0xFFFFFFFF
    void remove_levelFinishedEvent(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>* value);
    // public System.Void add_levelDidGetDisconnectedEvent(System.Action`1<DisconnectedReason> value)
    // Offset: 0xFFFFFFFF
    void add_levelDidGetDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value);
    // public System.Void remove_levelDidGetDisconnectedEvent(System.Action`1<DisconnectedReason> value)
    // Offset: 0xFFFFFFFF
    void remove_levelDidGetDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value);
    // public System.Void add_lobbyDisconnectedEvent(System.Action value)
    // Offset: 0xFFFFFFFF
    void add_lobbyDisconnectedEvent(System::Action* value);
    // public System.Void remove_lobbyDisconnectedEvent(System.Action value)
    // Offset: 0xFFFFFFFF
    void remove_lobbyDisconnectedEvent(System::Action* value);
    // public System.Void add_beforeSceneSwitchCallbackEvent(System.Action value)
    // Offset: 0xFFFFFFFF
    void add_beforeSceneSwitchCallbackEvent(System::Action* value);
    // public System.Void remove_beforeSceneSwitchCallbackEvent(System.Action value)
    // Offset: 0xFFFFFFFF
    void remove_beforeSceneSwitchCallbackEvent(System::Action* value);
    // public System.Void add_lobbyStateChangedEvent(System.Action`1<MultiplayerLobbyState> value)
    // Offset: 0xFFFFFFFF
    void add_lobbyStateChangedEvent(System::Action_1<GlobalNamespace::MultiplayerLobbyState>* value);
    // public System.Void remove_lobbyStateChangedEvent(System.Action`1<MultiplayerLobbyState> value)
    // Offset: 0xFFFFFFFF
    void remove_lobbyStateChangedEvent(System::Action_1<GlobalNamespace::MultiplayerLobbyState>* value);
    // public System.Void add_startButtonEnabledEvent(System.Action`1<CannotStartGameReason> value)
    // Offset: 0xFFFFFFFF
    void add_startButtonEnabledEvent(System::Action_1<GlobalNamespace::CannotStartGameReason>* value);
    // public System.Void remove_startButtonEnabledEvent(System.Action`1<CannotStartGameReason> value)
    // Offset: 0xFFFFFFFF
    void remove_startButtonEnabledEvent(System::Action_1<GlobalNamespace::CannotStartGameReason>* value);
    // public System.Void add_playerMissingEntitlementsChangedEvent(System.Action`1<PlayersMissingEntitlementsNetSerializable> value)
    // Offset: 0xFFFFFFFF
    void add_playerMissingEntitlementsChangedEvent(System::Action_1<GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value);
    // public System.Void remove_playerMissingEntitlementsChangedEvent(System.Action`1<PlayersMissingEntitlementsNetSerializable> value)
    // Offset: 0xFFFFFFFF
    void remove_playerMissingEntitlementsChangedEvent(System::Action_1<GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value);
    // public MultiplayerLobbyState get_state()
    // Offset: 0xFFFFFFFF
    GlobalNamespace::MultiplayerLobbyState get_state();
    // public System.Void set_state(MultiplayerLobbyState value)
    // Offset: 0xFFFFFFFF
    void set_state(GlobalNamespace::MultiplayerLobbyState value);
    // public CannotStartGameReason get_cannotStartGameReason()
    // Offset: 0xFFFFFFFF
    GlobalNamespace::CannotStartGameReason get_cannotStartGameReason();
    // public BeatmapIdentifierNetSerializable get_startedBeatmapId()
    // Offset: 0xFFFFFFFF
    GlobalNamespace::BeatmapIdentifierNetSerializable* get_startedBeatmapId();
    // public System.Boolean get_countdownStarted()
    // Offset: 0xFFFFFFFF
    bool get_countdownStarted();
    // public System.Single get_countdownEndTime()
    // Offset: 0xFFFFFFFF
    float get_countdownEndTime();
    // public System.Boolean get_levelStartInitiated()
    // Offset: 0xFFFFFFFF
    bool get_levelStartInitiated();
    // public System.Single get_startTime()
    // Offset: 0xFFFFFFFF
    float get_startTime();
    // public System.Single get_predictedCountdownEndTime()
    // Offset: 0xFFFFFFFF
    float get_predictedCountdownEndTime();
    // public System.Boolean get_isDisconnected()
    // Offset: 0xFFFFFFFF
    bool get_isDisconnected();
    // public DisconnectedReason get_disconnectedReason()
    // Offset: 0xFFFFFFFF
    GlobalNamespace::DisconnectedReason get_disconnectedReason();
    // public System.Void Activate()
    // Offset: 0xFFFFFFFF
    void Activate();
    // public System.Void Deactivate()
    // Offset: 0xFFFFFFFF
    void Deactivate();
    // public System.Void StartListeningToGameStart()
    // Offset: 0xFFFFFFFF
    void StartListeningToGameStart();
    // public System.Void GetCurrentLevelIfGameStarted()
    // Offset: 0xFFFFFFFF
    void GetCurrentLevelIfGameStarted();
    // public System.Void ClearDisconnectedState()
    // Offset: 0xFFFFFFFF
    void ClearDisconnectedState();
    // public System.Threading.Tasks.Task GetGameStateAndConfigurationAsync(System.Threading.CancellationToken cancellationToken)
    // Offset: 0xFFFFFFFF
    System::Threading::Tasks::Task* GetGameStateAndConfigurationAsync(System::Threading::CancellationToken cancellationToken);
    // public System.Void PredictCountdownEndTime()
    // Offset: 0xFFFFFFFF
    void PredictCountdownEndTime();
    // public System.Boolean IsCloseToStartGame()
    // Offset: 0xFFFFFFFF
    bool IsCloseToStartGame();
  }; // ILobbyGameStateController
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ILobbyGameStateController*, "", "ILobbyGameStateController");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::add_gameStartedEvent
// Il2CppName: add_gameStartedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action*)>(&GlobalNamespace::ILobbyGameStateController::add_gameStartedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "add_gameStartedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::remove_gameStartedEvent
// Il2CppName: remove_gameStartedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action*)>(&GlobalNamespace::ILobbyGameStateController::remove_gameStartedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "remove_gameStartedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::add_gameStartCancelledEvent
// Il2CppName: add_gameStartCancelledEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action*)>(&GlobalNamespace::ILobbyGameStateController::add_gameStartCancelledEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "add_gameStartCancelledEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::remove_gameStartCancelledEvent
// Il2CppName: remove_gameStartCancelledEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action*)>(&GlobalNamespace::ILobbyGameStateController::remove_gameStartCancelledEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "remove_gameStartCancelledEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::add_countdownStartedEvent
// Il2CppName: add_countdownStartedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action*)>(&GlobalNamespace::ILobbyGameStateController::add_countdownStartedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "add_countdownStartedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::remove_countdownStartedEvent
// Il2CppName: remove_countdownStartedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action*)>(&GlobalNamespace::ILobbyGameStateController::remove_countdownStartedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "remove_countdownStartedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::add_countdownCancelledEvent
// Il2CppName: add_countdownCancelledEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action*)>(&GlobalNamespace::ILobbyGameStateController::add_countdownCancelledEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "add_countdownCancelledEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::remove_countdownCancelledEvent
// Il2CppName: remove_countdownCancelledEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action*)>(&GlobalNamespace::ILobbyGameStateController::remove_countdownCancelledEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "remove_countdownCancelledEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::add_songStillDownloadingEvent
// Il2CppName: add_songStillDownloadingEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action*)>(&GlobalNamespace::ILobbyGameStateController::add_songStillDownloadingEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "add_songStillDownloadingEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::remove_songStillDownloadingEvent
// Il2CppName: remove_songStillDownloadingEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action*)>(&GlobalNamespace::ILobbyGameStateController::remove_songStillDownloadingEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "remove_songStillDownloadingEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::add_startTimeChangedEvent
// Il2CppName: add_startTimeChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action*)>(&GlobalNamespace::ILobbyGameStateController::add_startTimeChangedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "add_startTimeChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::remove_startTimeChangedEvent
// Il2CppName: remove_startTimeChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action*)>(&GlobalNamespace::ILobbyGameStateController::remove_startTimeChangedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "remove_startTimeChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::add_levelFinishedEvent
// Il2CppName: add_levelFinishedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>*)>(&GlobalNamespace::ILobbyGameStateController::add_levelFinishedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "MultiplayerLevelScenesTransitionSetupDataSO"), ::il2cpp_utils::GetClassFromName("", "MultiplayerResultsData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "add_levelFinishedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::remove_levelFinishedEvent
// Il2CppName: remove_levelFinishedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>*)>(&GlobalNamespace::ILobbyGameStateController::remove_levelFinishedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "MultiplayerLevelScenesTransitionSetupDataSO"), ::il2cpp_utils::GetClassFromName("", "MultiplayerResultsData")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "remove_levelFinishedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::add_levelDidGetDisconnectedEvent
// Il2CppName: add_levelDidGetDisconnectedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action_1<GlobalNamespace::DisconnectedReason>*)>(&GlobalNamespace::ILobbyGameStateController::add_levelDidGetDisconnectedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "DisconnectedReason")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "add_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::remove_levelDidGetDisconnectedEvent
// Il2CppName: remove_levelDidGetDisconnectedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action_1<GlobalNamespace::DisconnectedReason>*)>(&GlobalNamespace::ILobbyGameStateController::remove_levelDidGetDisconnectedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "DisconnectedReason")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "remove_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::add_lobbyDisconnectedEvent
// Il2CppName: add_lobbyDisconnectedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action*)>(&GlobalNamespace::ILobbyGameStateController::add_lobbyDisconnectedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "add_lobbyDisconnectedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::remove_lobbyDisconnectedEvent
// Il2CppName: remove_lobbyDisconnectedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action*)>(&GlobalNamespace::ILobbyGameStateController::remove_lobbyDisconnectedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "remove_lobbyDisconnectedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::add_beforeSceneSwitchCallbackEvent
// Il2CppName: add_beforeSceneSwitchCallbackEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action*)>(&GlobalNamespace::ILobbyGameStateController::add_beforeSceneSwitchCallbackEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "add_beforeSceneSwitchCallbackEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::remove_beforeSceneSwitchCallbackEvent
// Il2CppName: remove_beforeSceneSwitchCallbackEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action*)>(&GlobalNamespace::ILobbyGameStateController::remove_beforeSceneSwitchCallbackEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "remove_beforeSceneSwitchCallbackEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::add_lobbyStateChangedEvent
// Il2CppName: add_lobbyStateChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action_1<GlobalNamespace::MultiplayerLobbyState>*)>(&GlobalNamespace::ILobbyGameStateController::add_lobbyStateChangedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "MultiplayerLobbyState")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "add_lobbyStateChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::remove_lobbyStateChangedEvent
// Il2CppName: remove_lobbyStateChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action_1<GlobalNamespace::MultiplayerLobbyState>*)>(&GlobalNamespace::ILobbyGameStateController::remove_lobbyStateChangedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "MultiplayerLobbyState")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "remove_lobbyStateChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::add_startButtonEnabledEvent
// Il2CppName: add_startButtonEnabledEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action_1<GlobalNamespace::CannotStartGameReason>*)>(&GlobalNamespace::ILobbyGameStateController::add_startButtonEnabledEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "CannotStartGameReason")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "add_startButtonEnabledEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::remove_startButtonEnabledEvent
// Il2CppName: remove_startButtonEnabledEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action_1<GlobalNamespace::CannotStartGameReason>*)>(&GlobalNamespace::ILobbyGameStateController::remove_startButtonEnabledEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "CannotStartGameReason")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "remove_startButtonEnabledEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::add_playerMissingEntitlementsChangedEvent
// Il2CppName: add_playerMissingEntitlementsChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action_1<GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>*)>(&GlobalNamespace::ILobbyGameStateController::add_playerMissingEntitlementsChangedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "PlayersMissingEntitlementsNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "add_playerMissingEntitlementsChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::remove_playerMissingEntitlementsChangedEvent
// Il2CppName: remove_playerMissingEntitlementsChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(System::Action_1<GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>*)>(&GlobalNamespace::ILobbyGameStateController::remove_playerMissingEntitlementsChangedEvent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("", "PlayersMissingEntitlementsNetSerializable")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "remove_playerMissingEntitlementsChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::get_state
// Il2CppName: get_state
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::MultiplayerLobbyState (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::get_state)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "get_state", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::set_state
// Il2CppName: set_state
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)(GlobalNamespace::MultiplayerLobbyState)>(&GlobalNamespace::ILobbyGameStateController::set_state)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "MultiplayerLobbyState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "set_state", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::get_cannotStartGameReason
// Il2CppName: get_cannotStartGameReason
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::CannotStartGameReason (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::get_cannotStartGameReason)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "get_cannotStartGameReason", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::get_startedBeatmapId
// Il2CppName: get_startedBeatmapId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapIdentifierNetSerializable* (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::get_startedBeatmapId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "get_startedBeatmapId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::get_countdownStarted
// Il2CppName: get_countdownStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::get_countdownStarted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "get_countdownStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::get_countdownEndTime
// Il2CppName: get_countdownEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::get_countdownEndTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "get_countdownEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::get_levelStartInitiated
// Il2CppName: get_levelStartInitiated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::get_levelStartInitiated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "get_levelStartInitiated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::get_startTime
// Il2CppName: get_startTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::get_startTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "get_startTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::get_predictedCountdownEndTime
// Il2CppName: get_predictedCountdownEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::get_predictedCountdownEndTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "get_predictedCountdownEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::get_isDisconnected
// Il2CppName: get_isDisconnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::get_isDisconnected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "get_isDisconnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::get_disconnectedReason
// Il2CppName: get_disconnectedReason
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::DisconnectedReason (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::get_disconnectedReason)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "get_disconnectedReason", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::Activate
// Il2CppName: Activate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::Activate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "Activate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::Deactivate
// Il2CppName: Deactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::Deactivate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "Deactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::StartListeningToGameStart
// Il2CppName: StartListeningToGameStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::StartListeningToGameStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "StartListeningToGameStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::GetCurrentLevelIfGameStarted
// Il2CppName: GetCurrentLevelIfGameStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::GetCurrentLevelIfGameStarted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "GetCurrentLevelIfGameStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::ClearDisconnectedState
// Il2CppName: ClearDisconnectedState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::ClearDisconnectedState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "ClearDisconnectedState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::GetGameStateAndConfigurationAsync
// Il2CppName: GetGameStateAndConfigurationAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task* (GlobalNamespace::ILobbyGameStateController::*)(System::Threading::CancellationToken)>(&GlobalNamespace::ILobbyGameStateController::GetGameStateAndConfigurationAsync)> {
  static const MethodInfo* get() {
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "GetGameStateAndConfigurationAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cancellationToken});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::PredictCountdownEndTime
// Il2CppName: PredictCountdownEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::PredictCountdownEndTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "PredictCountdownEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILobbyGameStateController::IsCloseToStartGame
// Il2CppName: IsCloseToStartGame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::ILobbyGameStateController::*)()>(&GlobalNamespace::ILobbyGameStateController::IsCloseToStartGame)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILobbyGameStateController*), "IsCloseToStartGame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
