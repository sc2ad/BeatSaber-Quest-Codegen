// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: BloomFilterUtil
#include "GlobalNamespace/BloomFilterUtil.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IBitMask`1<T>
  template<typename T>
  class IBitMask_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: BloomFilterUtil/<>c__DisplayClass2_0`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: EC8740
  template<typename T>
  class BloomFilterUtil::$$c__DisplayClass2_0_1 : public ::Il2CppObject {
    public:
    // public System.Int32 hashCount
    // Size: 0x4
    // Offset: 0x0
    int hashCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 hashBits
    // Size: 0x4
    // Offset: 0x0
    int hashBits;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: $$c__DisplayClass2_0_1
    $$c__DisplayClass2_0_1(int hashCount_ = {}, int hashBits_ = {}) noexcept : hashCount{hashCount_}, hashBits{hashBits_} {}
    // Autogenerated instance field getter
    // Get instance field: public System.Int32 hashCount
    int& dyn_hashCount() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilterUtil::$$c__DisplayClass2_0_1::dyn_hashCount");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCount"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public System.Int32 hashBits
    int& dyn_hashBits() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilterUtil::$$c__DisplayClass2_0_1::dyn_hashBits");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashBits"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // T <ToBloomFilter>b__0(T bloomFilter, System.String str)
    // Offset: 0xFFFFFFFF
    T $ToBloomFilter$b__0(T bloomFilter, ::Il2CppString* str) {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilterUtil::$$c__DisplayClass2_0_1::<ToBloomFilter>b__0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ToBloomFilter>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bloomFilter), ::il2cpp_utils::ExtractType(str)})));
      auto ___instance_arg = this;
      return ::il2cpp_utils::RunMethodThrow<T, false>(___instance_arg, ___internal__method, bloomFilter, str);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BloomFilterUtil::$$c__DisplayClass2_0_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFilterUtil::$$c__DisplayClass2_0_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BloomFilterUtil::$$c__DisplayClass2_0_1<T>*, creationType>()));
    }
  }; // BloomFilterUtil/<>c__DisplayClass2_0`1
  // Could not write size check! Type: BloomFilterUtil/<>c__DisplayClass2_0`1 is generic, or has no fields that are valid for size checks!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(GlobalNamespace::BloomFilterUtil::$$c__DisplayClass2_0_1, "", "BloomFilterUtil/<>c__DisplayClass2_0`1");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
