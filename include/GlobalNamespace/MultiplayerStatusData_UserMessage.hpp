// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MultiplayerStatusData
#include "GlobalNamespace/MultiplayerStatusData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::MultiplayerStatusData::UserMessage);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::MultiplayerStatusData::UserMessage*, "", "MultiplayerStatusData/UserMessage");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: MultiplayerStatusData/UserMessage
  // [TokenAttribute] Offset: FFFFFFFF
  class MultiplayerStatusData::UserMessage : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage
    class LocalizedMessage;
    public:
    // public MultiplayerStatusData/UserMessage/LocalizedMessage[] localizations
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage*> localizations;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage*>) == 0x8);
    public:
    // Creating conversion operator: operator ::ArrayW<::GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage*>
    constexpr operator ::ArrayW<::GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage*>() const noexcept {
      return localizations;
    }
    // Get instance field reference: public MultiplayerStatusData/UserMessage/LocalizedMessage[] localizations
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage*>& dyn_localizations();
    // public System.Void .ctor()
    // Offset: 0x13C4A28
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MultiplayerStatusData::UserMessage* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::UserMessage::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MultiplayerStatusData::UserMessage*, creationType>()));
    }
  }; // MultiplayerStatusData/UserMessage
  #pragma pack(pop)
  static check_size<sizeof(MultiplayerStatusData::UserMessage), 16 + sizeof(::ArrayW<::GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage*>)> __GlobalNamespace_MultiplayerStatusData_UserMessageSizeCheck;
  static_assert(sizeof(MultiplayerStatusData::UserMessage) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::MultiplayerStatusData::UserMessage::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
