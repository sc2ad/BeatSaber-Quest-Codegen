// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: BaseIndexFilter
#include "GlobalNamespace/BaseIndexFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: RangeIndexFilter
  class RangeIndexFilter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::RangeIndexFilter);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::RangeIndexFilter*, "", "RangeIndexFilter");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: RangeIndexFilter
  // [TokenAttribute] Offset: FFFFFFFF
  class RangeIndexFilter : public ::GlobalNamespace::BaseIndexFilter {
    public:
    // public System.Void .ctor(System.Int32 start, System.Int32 end)
    // Offset: 0x136F9F4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RangeIndexFilter* New_ctor(int start, int end) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RangeIndexFilter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RangeIndexFilter*, creationType>(start, end)));
    }
  }; // RangeIndexFilter
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::RangeIndexFilter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
