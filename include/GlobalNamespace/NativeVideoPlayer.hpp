// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.jvalue
#include "UnityEngine/jvalue.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Quaternion
  struct Quaternion;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: NativeVideoPlayer
  class NativeVideoPlayer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::NativeVideoPlayer);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::NativeVideoPlayer*, "", "NativeVideoPlayer");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: NativeVideoPlayer
  // [TokenAttribute] Offset: FFFFFFFF
  class NativeVideoPlayer : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::NativeVideoPlayer::PlabackState
    struct PlabackState;
    // Get static field: static private System.Nullable`1<System.IntPtr> _Activity
    static ::System::Nullable_1<::System::IntPtr> _get__Activity();
    // Set static field: static private System.Nullable`1<System.IntPtr> _Activity
    static void _set__Activity(::System::Nullable_1<::System::IntPtr> value);
    // Get static field: static private System.Nullable`1<System.IntPtr> _VideoPlayerClass
    static ::System::Nullable_1<::System::IntPtr> _get__VideoPlayerClass();
    // Set static field: static private System.Nullable`1<System.IntPtr> _VideoPlayerClass
    static void _set__VideoPlayerClass(::System::Nullable_1<::System::IntPtr> value);
    // Get static field: static private readonly UnityEngine.jvalue[] EmptyParams
    static ::ArrayW<::UnityEngine::jvalue> _get_EmptyParams();
    // Set static field: static private readonly UnityEngine.jvalue[] EmptyParams
    static void _set_EmptyParams(::ArrayW<::UnityEngine::jvalue> value);
    // Get static field: static private System.IntPtr getIsPlayingMethodId
    static ::System::IntPtr _get_getIsPlayingMethodId();
    // Set static field: static private System.IntPtr getIsPlayingMethodId
    static void _set_getIsPlayingMethodId(::System::IntPtr value);
    // Get static field: static private System.IntPtr getCurrentPlaybackStateMethodId
    static ::System::IntPtr _get_getCurrentPlaybackStateMethodId();
    // Set static field: static private System.IntPtr getCurrentPlaybackStateMethodId
    static void _set_getCurrentPlaybackStateMethodId(::System::IntPtr value);
    // Get static field: static private System.IntPtr getDurationMethodId
    static ::System::IntPtr _get_getDurationMethodId();
    // Set static field: static private System.IntPtr getDurationMethodId
    static void _set_getDurationMethodId(::System::IntPtr value);
    // Get static field: static private System.IntPtr getPlaybackPositionMethodId
    static ::System::IntPtr _get_getPlaybackPositionMethodId();
    // Set static field: static private System.IntPtr getPlaybackPositionMethodId
    static void _set_getPlaybackPositionMethodId(::System::IntPtr value);
    // Get static field: static private System.IntPtr setPlaybackPositionMethodId
    static ::System::IntPtr _get_setPlaybackPositionMethodId();
    // Set static field: static private System.IntPtr setPlaybackPositionMethodId
    static void _set_setPlaybackPositionMethodId(::System::IntPtr value);
    // Get static field: static private UnityEngine.jvalue[] setPlaybackPositionParams
    static ::ArrayW<::UnityEngine::jvalue> _get_setPlaybackPositionParams();
    // Set static field: static private UnityEngine.jvalue[] setPlaybackPositionParams
    static void _set_setPlaybackPositionParams(::ArrayW<::UnityEngine::jvalue> value);
    // Get static field: static private System.IntPtr playVideoMethodId
    static ::System::IntPtr _get_playVideoMethodId();
    // Set static field: static private System.IntPtr playVideoMethodId
    static void _set_playVideoMethodId(::System::IntPtr value);
    // Get static field: static private UnityEngine.jvalue[] playVideoParams
    static ::ArrayW<::UnityEngine::jvalue> _get_playVideoParams();
    // Set static field: static private UnityEngine.jvalue[] playVideoParams
    static void _set_playVideoParams(::ArrayW<::UnityEngine::jvalue> value);
    // Get static field: static private System.IntPtr stopMethodId
    static ::System::IntPtr _get_stopMethodId();
    // Set static field: static private System.IntPtr stopMethodId
    static void _set_stopMethodId(::System::IntPtr value);
    // Get static field: static private System.IntPtr resumeMethodId
    static ::System::IntPtr _get_resumeMethodId();
    // Set static field: static private System.IntPtr resumeMethodId
    static void _set_resumeMethodId(::System::IntPtr value);
    // Get static field: static private System.IntPtr pauseMethodId
    static ::System::IntPtr _get_pauseMethodId();
    // Set static field: static private System.IntPtr pauseMethodId
    static void _set_pauseMethodId(::System::IntPtr value);
    // Get static field: static private System.IntPtr setPlaybackSpeedMethodId
    static ::System::IntPtr _get_setPlaybackSpeedMethodId();
    // Set static field: static private System.IntPtr setPlaybackSpeedMethodId
    static void _set_setPlaybackSpeedMethodId(::System::IntPtr value);
    // Get static field: static private UnityEngine.jvalue[] setPlaybackSpeedParams
    static ::ArrayW<::UnityEngine::jvalue> _get_setPlaybackSpeedParams();
    // Set static field: static private UnityEngine.jvalue[] setPlaybackSpeedParams
    static void _set_setPlaybackSpeedParams(::ArrayW<::UnityEngine::jvalue> value);
    // Get static field: static private System.IntPtr setLoopingMethodId
    static ::System::IntPtr _get_setLoopingMethodId();
    // Set static field: static private System.IntPtr setLoopingMethodId
    static void _set_setLoopingMethodId(::System::IntPtr value);
    // Get static field: static private UnityEngine.jvalue[] setLoopingParams
    static ::ArrayW<::UnityEngine::jvalue> _get_setLoopingParams();
    // Set static field: static private UnityEngine.jvalue[] setLoopingParams
    static void _set_setLoopingParams(::ArrayW<::UnityEngine::jvalue> value);
    // Get static field: static private System.IntPtr setListenerRotationQuaternionMethodId
    static ::System::IntPtr _get_setListenerRotationQuaternionMethodId();
    // Set static field: static private System.IntPtr setListenerRotationQuaternionMethodId
    static void _set_setListenerRotationQuaternionMethodId(::System::IntPtr value);
    // Get static field: static private UnityEngine.jvalue[] setListenerRotationQuaternionParams
    static ::ArrayW<::UnityEngine::jvalue> _get_setListenerRotationQuaternionParams();
    // Set static field: static private UnityEngine.jvalue[] setListenerRotationQuaternionParams
    static void _set_setListenerRotationQuaternionParams(::ArrayW<::UnityEngine::jvalue> value);
    // static private System.IntPtr get_VideoPlayerClass()
    // Offset: 0x137C178
    static ::System::IntPtr get_VideoPlayerClass();
    // static private System.IntPtr get_Activity()
    // Offset: 0x137C434
    static ::System::IntPtr get_Activity();
    // static public System.Boolean get_IsAvailable()
    // Offset: 0x137C678
    static bool get_IsAvailable();
    // static public System.Boolean get_IsPlaying()
    // Offset: 0x137C6E0
    static bool get_IsPlaying();
    // static public NativeVideoPlayer/PlabackState get_CurrentPlaybackState()
    // Offset: 0x137C7D0
    static ::GlobalNamespace::NativeVideoPlayer::PlabackState get_CurrentPlaybackState();
    // static public System.Int64 get_Duration()
    // Offset: 0x137C8C4
    static int64_t get_Duration();
    // static public System.Int64 get_PlaybackPosition()
    // Offset: 0x137C9B8
    static int64_t get_PlaybackPosition();
    // static public System.Void set_PlaybackPosition(System.Int64 value)
    // Offset: 0x137CAAC
    static void set_PlaybackPosition(int64_t value);
    // static private System.Void .cctor()
    // Offset: 0x137D1CC
    static void _cctor();
    // static public System.Void PlayVideo(System.String path, System.String drmLicenseUrl, System.IntPtr surfaceObj)
    // Offset: 0x137B1AC
    static void PlayVideo(::StringW path, ::StringW drmLicenseUrl, ::System::IntPtr surfaceObj);
    // static public System.Void Stop()
    // Offset: 0x137CBEC
    static void Stop();
    // static public System.Void Play()
    // Offset: 0x137CCE0
    static void Play();
    // static public System.Void Pause()
    // Offset: 0x137CDD4
    static void Pause();
    // static public System.Void SetPlaybackSpeed(System.Single speed)
    // Offset: 0x137CEC8
    static void SetPlaybackSpeed(float speed);
    // static public System.Void SetLooping(System.Boolean looping)
    // Offset: 0x137B3A0
    static void SetLooping(bool looping);
    // static public System.Void SetListenerRotation(UnityEngine.Quaternion rotation)
    // Offset: 0x137D010
    static void SetListenerRotation(::UnityEngine::Quaternion rotation);
  }; // NativeVideoPlayer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::NativeVideoPlayer::get_VideoPlayerClass
// Il2CppName: get_VideoPlayerClass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&GlobalNamespace::NativeVideoPlayer::get_VideoPlayerClass)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NativeVideoPlayer*), "get_VideoPlayerClass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NativeVideoPlayer::get_Activity
// Il2CppName: get_Activity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&GlobalNamespace::NativeVideoPlayer::get_Activity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NativeVideoPlayer*), "get_Activity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NativeVideoPlayer::get_IsAvailable
// Il2CppName: get_IsAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&GlobalNamespace::NativeVideoPlayer::get_IsAvailable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NativeVideoPlayer*), "get_IsAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NativeVideoPlayer::get_IsPlaying
// Il2CppName: get_IsPlaying
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&GlobalNamespace::NativeVideoPlayer::get_IsPlaying)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NativeVideoPlayer*), "get_IsPlaying", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NativeVideoPlayer::get_CurrentPlaybackState
// Il2CppName: get_CurrentPlaybackState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::NativeVideoPlayer::PlabackState (*)()>(&GlobalNamespace::NativeVideoPlayer::get_CurrentPlaybackState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NativeVideoPlayer*), "get_CurrentPlaybackState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NativeVideoPlayer::get_Duration
// Il2CppName: get_Duration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)()>(&GlobalNamespace::NativeVideoPlayer::get_Duration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NativeVideoPlayer*), "get_Duration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NativeVideoPlayer::get_PlaybackPosition
// Il2CppName: get_PlaybackPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)()>(&GlobalNamespace::NativeVideoPlayer::get_PlaybackPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NativeVideoPlayer*), "get_PlaybackPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NativeVideoPlayer::set_PlaybackPosition
// Il2CppName: set_PlaybackPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int64_t)>(&GlobalNamespace::NativeVideoPlayer::set_PlaybackPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NativeVideoPlayer*), "set_PlaybackPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NativeVideoPlayer::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::NativeVideoPlayer::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NativeVideoPlayer*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NativeVideoPlayer::PlayVideo
// Il2CppName: PlayVideo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::StringW, ::System::IntPtr)>(&GlobalNamespace::NativeVideoPlayer::PlayVideo)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* drmLicenseUrl = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* surfaceObj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NativeVideoPlayer*), "PlayVideo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, drmLicenseUrl, surfaceObj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NativeVideoPlayer::Stop
// Il2CppName: Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::NativeVideoPlayer::Stop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NativeVideoPlayer*), "Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NativeVideoPlayer::Play
// Il2CppName: Play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::NativeVideoPlayer::Play)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NativeVideoPlayer*), "Play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NativeVideoPlayer::Pause
// Il2CppName: Pause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::NativeVideoPlayer::Pause)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NativeVideoPlayer*), "Pause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NativeVideoPlayer::SetPlaybackSpeed
// Il2CppName: SetPlaybackSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float)>(&GlobalNamespace::NativeVideoPlayer::SetPlaybackSpeed)> {
  static const MethodInfo* get() {
    static auto* speed = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NativeVideoPlayer*), "SetPlaybackSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speed});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NativeVideoPlayer::SetLooping
// Il2CppName: SetLooping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&GlobalNamespace::NativeVideoPlayer::SetLooping)> {
  static const MethodInfo* get() {
    static auto* looping = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NativeVideoPlayer*), "SetLooping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{looping});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::NativeVideoPlayer::SetListenerRotation
// Il2CppName: SetListenerRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Quaternion)>(&GlobalNamespace::NativeVideoPlayer::SetListenerRotation)> {
  static const MethodInfo* get() {
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::NativeVideoPlayer*), "SetListenerRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rotation});
  }
};
