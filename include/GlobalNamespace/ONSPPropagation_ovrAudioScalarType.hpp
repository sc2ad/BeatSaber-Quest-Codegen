// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: ONSPPropagation
#include "GlobalNamespace/ONSPPropagation.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType, "", "ONSPPropagation/ovrAudioScalarType");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: ONSPPropagation/ovrAudioScalarType
  // [TokenAttribute] Offset: FFFFFFFF
  struct ONSPPropagation::ovrAudioScalarType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.UInt32 value__
    // Size: 0x4
    // Offset: 0x0
    uint value;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Creating value type constructor for type: ovrAudioScalarType
    constexpr ovrAudioScalarType(uint value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint
    constexpr operator uint() const noexcept {
      return value;
    }
    // static field const value: static public ONSPPropagation/ovrAudioScalarType Int8
    static constexpr const uint Int8 = 0u;
    // Get static field: static public ONSPPropagation/ovrAudioScalarType Int8
    static ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType _get_Int8();
    // Set static field: static public ONSPPropagation/ovrAudioScalarType Int8
    static void _set_Int8(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value);
    // static field const value: static public ONSPPropagation/ovrAudioScalarType UInt8
    static constexpr const uint UInt8 = 1u;
    // Get static field: static public ONSPPropagation/ovrAudioScalarType UInt8
    static ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType _get_UInt8();
    // Set static field: static public ONSPPropagation/ovrAudioScalarType UInt8
    static void _set_UInt8(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value);
    // static field const value: static public ONSPPropagation/ovrAudioScalarType Int16
    static constexpr const uint Int16 = 2u;
    // Get static field: static public ONSPPropagation/ovrAudioScalarType Int16
    static ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType _get_Int16();
    // Set static field: static public ONSPPropagation/ovrAudioScalarType Int16
    static void _set_Int16(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value);
    // static field const value: static public ONSPPropagation/ovrAudioScalarType UInt16
    static constexpr const uint UInt16 = 3u;
    // Get static field: static public ONSPPropagation/ovrAudioScalarType UInt16
    static ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType _get_UInt16();
    // Set static field: static public ONSPPropagation/ovrAudioScalarType UInt16
    static void _set_UInt16(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value);
    // static field const value: static public ONSPPropagation/ovrAudioScalarType Int32
    static constexpr const uint Int32 = 4u;
    // Get static field: static public ONSPPropagation/ovrAudioScalarType Int32
    static ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType _get_Int32();
    // Set static field: static public ONSPPropagation/ovrAudioScalarType Int32
    static void _set_Int32(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value);
    // static field const value: static public ONSPPropagation/ovrAudioScalarType UInt32
    static constexpr const uint UInt32 = 5u;
    // Get static field: static public ONSPPropagation/ovrAudioScalarType UInt32
    static ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType _get_UInt32();
    // Set static field: static public ONSPPropagation/ovrAudioScalarType UInt32
    static void _set_UInt32(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value);
    // static field const value: static public ONSPPropagation/ovrAudioScalarType Int64
    static constexpr const uint Int64 = 6u;
    // Get static field: static public ONSPPropagation/ovrAudioScalarType Int64
    static ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType _get_Int64();
    // Set static field: static public ONSPPropagation/ovrAudioScalarType Int64
    static void _set_Int64(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value);
    // static field const value: static public ONSPPropagation/ovrAudioScalarType UInt64
    static constexpr const uint UInt64 = 7u;
    // Get static field: static public ONSPPropagation/ovrAudioScalarType UInt64
    static ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType _get_UInt64();
    // Set static field: static public ONSPPropagation/ovrAudioScalarType UInt64
    static void _set_UInt64(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value);
    // static field const value: static public ONSPPropagation/ovrAudioScalarType Float16
    static constexpr const uint Float16 = 8u;
    // Get static field: static public ONSPPropagation/ovrAudioScalarType Float16
    static ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType _get_Float16();
    // Set static field: static public ONSPPropagation/ovrAudioScalarType Float16
    static void _set_Float16(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value);
    // static field const value: static public ONSPPropagation/ovrAudioScalarType Float32
    static constexpr const uint Float32 = 9u;
    // Get static field: static public ONSPPropagation/ovrAudioScalarType Float32
    static ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType _get_Float32();
    // Set static field: static public ONSPPropagation/ovrAudioScalarType Float32
    static void _set_Float32(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value);
    // static field const value: static public ONSPPropagation/ovrAudioScalarType Float64
    static constexpr const uint Float64 = 10u;
    // Get static field: static public ONSPPropagation/ovrAudioScalarType Float64
    static ::GlobalNamespace::ONSPPropagation::ovrAudioScalarType _get_Float64();
    // Set static field: static public ONSPPropagation/ovrAudioScalarType Float64
    static void _set_Float64(::GlobalNamespace::ONSPPropagation::ovrAudioScalarType value);
    // Get instance field reference: public System.UInt32 value__
    [[deprecated("Use field access instead!")]] uint& dyn_value__();
  }; // ONSPPropagation/ovrAudioScalarType
  #pragma pack(pop)
  static check_size<sizeof(ONSPPropagation::ovrAudioScalarType), 0 + sizeof(uint)> __GlobalNamespace_ONSPPropagation_ovrAudioScalarTypeSizeCheck;
  static_assert(sizeof(ONSPPropagation::ovrAudioScalarType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
