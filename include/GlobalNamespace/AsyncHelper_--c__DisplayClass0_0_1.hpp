// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: AsyncHelper
#include "GlobalNamespace/AsyncHelper.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Runtime.CompilerServices.IAsyncStateMachine
#include "System/Runtime/CompilerServices/IAsyncStateMachine.hpp"
// Including type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
#include "System/Runtime/CompilerServices/AsyncTaskMethodBuilder.hpp"
// Including type: System.Runtime.CompilerServices.TaskAwaiter`1
#include "System/Runtime/CompilerServices/TaskAwaiter_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: <<RunSync>b__0>d because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
  // Forward declaring type: Task
  class Task;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: AsyncHelper/<>c__DisplayClass0_0`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: EC9190
  template<typename T>
  class AsyncHelper::$$c__DisplayClass0_0_1 : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1::$$RunSync$b__0$d<T>
    struct $$RunSync$b__0$d;
    // WARNING Size may be invalid!
    // Autogenerated type: AsyncHelper/<>c__DisplayClass0_0`1/<<RunSync>b__0>d
    // [TokenAttribute] Offset: FFFFFFFF
    struct $$RunSync$b__0$d : public ::il2cpp_utils::il2cpp_type_check::NestedType/*, public System::ValueType, public System::Runtime::CompilerServices::IAsyncStateMachine*/ {
      public:
      using declaring_type = AsyncHelper::$$c__DisplayClass0_0_1<T>*;
      static constexpr std::string_view NESTED_NAME = "<<RunSync>b__0>d";
      static constexpr bool IS_VALUE_TYPE = true;
      // public System.Int32 <>1__state
      // Size: 0x4
      // Offset: 0x0
      int $$1__state;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      System::Runtime::CompilerServices::AsyncTaskMethodBuilder $$t__builder;
      // public AsyncHelper/<>c__DisplayClass0_0`1<T> <>4__this
      // Size: 0x8
      // Offset: 0x0
      GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1<T>* $$4__this;
      // Field size check
      static_assert(sizeof(GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1<T>*) == 0x8);
      // private System.Runtime.CompilerServices.TaskAwaiter`1<T> <>u__1
      // Size: 0xFFFFFFFF
      // Offset: 0x0
      System::Runtime::CompilerServices::TaskAwaiter_1<T> $$u__1;
      // Creating value type constructor for type: $$RunSync$b__0$d
      constexpr $$RunSync$b__0$d(int $$1__state_ = {}, System::Runtime::CompilerServices::AsyncTaskMethodBuilder $$t__builder_ = {}, GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1<T>* $$4__this_ = {}, System::Runtime::CompilerServices::TaskAwaiter_1<T> $$u__1_ = {}) noexcept : $$1__state{$$1__state_}, $$t__builder{$$t__builder_}, $$4__this{$$4__this_}, $$u__1{$$u__1_} {}
      // Creating interface conversion operator: operator System::ValueType
      operator System::ValueType() noexcept {
        return *reinterpret_cast<System::ValueType*>(this);
      }
      // Creating interface conversion operator: operator System::Runtime::CompilerServices::IAsyncStateMachine
      operator System::Runtime::CompilerServices::IAsyncStateMachine() noexcept {
        return *reinterpret_cast<System::Runtime::CompilerServices::IAsyncStateMachine*>(this);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Int32 <>1__state
      int& dyn_$$1__state() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1::$$RunSync$b__0$d::dyn_$$1__state");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
        return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
      System::Runtime::CompilerServices::AsyncTaskMethodBuilder& dyn_$$t__builder() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1::$$RunSync$b__0$d::dyn_$$t__builder");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
        return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public AsyncHelper/<>c__DisplayClass0_0`1<T> <>4__this
      GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1<T>*& dyn_$$4__this() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1::$$RunSync$b__0$d::dyn_$$4__this");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
        return *reinterpret_cast<GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1<T>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<T> <>u__1
      System::Runtime::CompilerServices::TaskAwaiter_1<T>& dyn_$$u__1() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1::$$RunSync$b__0$d::dyn_$$u__1");
        auto ___internal__instance = *this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
        return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<T>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // private System.Void MoveNext()
      // Offset: 0xFFFFFFFF
      void MoveNext() {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1::$$RunSync$b__0$d::MoveNext");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
        ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
      }
      // private System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)
      // Offset: 0xFFFFFFFF
      void SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
        static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1::$$RunSync$b__0$d::SetStateMachine");
        auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
        ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
      }
    }; // AsyncHelper/<>c__DisplayClass0_0`1/<<RunSync>b__0>d
    // Could not write size check! Type: AsyncHelper/<>c__DisplayClass0_0`1/<<RunSync>b__0>d is generic, or has no fields that are valid for size checks!
    // public T result
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    T result;
    // public System.Func`1<System.Threading.Tasks.Task`1<T>> asyncTask
    // Size: 0x8
    // Offset: 0x0
    System::Func_1<System::Threading::Tasks::Task_1<T>*>* asyncTask;
    // Field size check
    static_assert(sizeof(System::Func_1<System::Threading::Tasks::Task_1<T>*>*) == 0x8);
    // Creating value type constructor for type: $$c__DisplayClass0_0_1
    $$c__DisplayClass0_0_1(T result_ = {}, System::Func_1<System::Threading::Tasks::Task_1<T>*>* asyncTask_ = {}) noexcept : result{result_}, asyncTask{asyncTask_} {}
    // Autogenerated instance field getter
    // Get instance field: public T result
    T& dyn_result() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1::dyn_result");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
      return *reinterpret_cast<T*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public System.Func`1<System.Threading.Tasks.Task`1<T>> asyncTask
    System::Func_1<System::Threading::Tasks::Task_1<T>*>*& dyn_asyncTask() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1::dyn_asyncTask");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncTask"))->offset;
      return *reinterpret_cast<System::Func_1<System::Threading::Tasks::Task_1<T>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // System.Threading.Tasks.Task <RunSync>b__0()
    // Offset: 0xFFFFFFFF
    System::Threading::Tasks::Task* $RunSync$b__0() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1::<RunSync>b__0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RunSync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      auto ___instance_arg = this;
      return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AsyncHelper::$$c__DisplayClass0_0_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AsyncHelper::$$c__DisplayClass0_0_1<T>*, creationType>()));
    }
  }; // AsyncHelper/<>c__DisplayClass0_0`1
  // Could not write size check! Type: AsyncHelper/<>c__DisplayClass0_0`1 is generic, or has no fields that are valid for size checks!
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(GlobalNamespace::AsyncHelper::$$c__DisplayClass0_0_1, "", "AsyncHelper/<>c__DisplayClass0_0`1");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
