// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: SceneSetupData
#include "GlobalNamespace/SceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: BeatmapEditorGameplaySceneSetupData
  class BeatmapEditorGameplaySceneSetupData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::BeatmapEditorGameplaySceneSetupData);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::BeatmapEditorGameplaySceneSetupData*, "", "BeatmapEditorGameplaySceneSetupData");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x13
  #pragma pack(push, 1)
  // Autogenerated type: BeatmapEditorGameplaySceneSetupData
  // [TokenAttribute] Offset: FFFFFFFF
  class BeatmapEditorGameplaySceneSetupData : public ::GlobalNamespace::SceneSetupData {
    public:
    public:
    // public readonly System.Boolean useFirstPersonFlyingController
    // Size: 0x1
    // Offset: 0x10
    bool useFirstPersonFlyingController;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public readonly System.Boolean recordVRMovement
    // Size: 0x1
    // Offset: 0x11
    bool recordVRMovement;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public readonly System.Boolean playVRMovement
    // Size: 0x1
    // Offset: 0x12
    bool playVRMovement;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public readonly System.Boolean useFirstPersonFlyingController
    [[deprecated("Use field access instead!")]] bool& dyn_useFirstPersonFlyingController();
    // Get instance field reference: public readonly System.Boolean recordVRMovement
    [[deprecated("Use field access instead!")]] bool& dyn_recordVRMovement();
    // Get instance field reference: public readonly System.Boolean playVRMovement
    [[deprecated("Use field access instead!")]] bool& dyn_playVRMovement();
    // public System.Void .ctor(System.Boolean useFirstPersonFlyingController, System.Boolean recordVRMovement, System.Boolean playVRMovement)
    // Offset: 0x15086E8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BeatmapEditorGameplaySceneSetupData* New_ctor(bool useFirstPersonFlyingController, bool recordVRMovement, bool playVRMovement) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEditorGameplaySceneSetupData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BeatmapEditorGameplaySceneSetupData*, creationType>(useFirstPersonFlyingController, recordVRMovement, playVRMovement)));
    }
  }; // BeatmapEditorGameplaySceneSetupData
  #pragma pack(pop)
  static check_size<sizeof(BeatmapEditorGameplaySceneSetupData), 18 + sizeof(bool)> __GlobalNamespace_BeatmapEditorGameplaySceneSetupDataSizeCheck;
  static_assert(sizeof(BeatmapEditorGameplaySceneSetupData) == 0x13);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BeatmapEditorGameplaySceneSetupData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
