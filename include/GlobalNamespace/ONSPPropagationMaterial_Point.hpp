// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: ONSPPropagationMaterial
#include "GlobalNamespace/ONSPPropagationMaterial.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector2
  struct Vector2;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::ONSPPropagationMaterial::Point);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ONSPPropagationMaterial::Point*, "", "ONSPPropagationMaterial/Point");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: ONSPPropagationMaterial/Point
  // [TokenAttribute] Offset: FFFFFFFF
  class ONSPPropagationMaterial::Point : public ::Il2CppObject {
    public:
    public:
    // public System.Single frequency
    // Size: 0x4
    // Offset: 0x10
    float frequency;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single data
    // Size: 0x4
    // Offset: 0x14
    float data;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: public System.Single frequency
    [[deprecated("Use field access instead!")]] float& dyn_frequency();
    // Get instance field reference: public System.Single data
    [[deprecated("Use field access instead!")]] float& dyn_data();
    // public System.Void .ctor(System.Single frequency, System.Single data)
    // Offset: 0x138C5C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ONSPPropagationMaterial::Point* New_ctor(float frequency, float data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Point::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ONSPPropagationMaterial::Point*, creationType>(frequency, data)));
    }
  }; // ONSPPropagationMaterial/Point
  #pragma pack(pop)
  static check_size<sizeof(ONSPPropagationMaterial::Point), 20 + sizeof(float)> __GlobalNamespace_ONSPPropagationMaterial_PointSizeCheck;
  static_assert(sizeof(ONSPPropagationMaterial::Point) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::ONSPPropagationMaterial::Point::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
