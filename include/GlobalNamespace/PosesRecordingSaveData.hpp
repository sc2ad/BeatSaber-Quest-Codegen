// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: PosesRecordingSaveData
  class PosesRecordingSaveData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::PosesRecordingSaveData);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::PosesRecordingSaveData*, "", "PosesRecordingSaveData");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: PosesRecordingSaveData
  // [TokenAttribute] Offset: FFFFFFFF
  class PosesRecordingSaveData : public ::Il2CppObject {
    public:
    // Nested type: ::GlobalNamespace::PosesRecordingSaveData::PoseSaveData
    class PoseSaveData;
    // Nested type: ::GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe
    class TransformsSaveKeyframe;
    // Nested type: ::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData
    class ExternalCameraCalibrationSaveData;
    public:
    // public readonly System.String[] objectIds
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::StringW> objectIds;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // public readonly PosesRecordingSaveData/TransformsSaveKeyframe[] keyframes
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe*> keyframes;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe*>) == 0x8);
    // public readonly PosesRecordingSaveData/ExternalCameraCalibrationSaveData externalCameraCalibration
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData* externalCameraCalibration;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData*) == 0x8);
    public:
    // Get instance field reference: public readonly System.String[] objectIds
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_objectIds();
    // Get instance field reference: public readonly PosesRecordingSaveData/TransformsSaveKeyframe[] keyframes
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe*>& dyn_keyframes();
    // Get instance field reference: public readonly PosesRecordingSaveData/ExternalCameraCalibrationSaveData externalCameraCalibration
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData*& dyn_externalCameraCalibration();
    // public System.Void .ctor(System.String[] objectIds, PosesRecordingSaveData/TransformsSaveKeyframe[] keyframes, PosesRecordingSaveData/ExternalCameraCalibrationSaveData externalCameraCalibration)
    // Offset: 0x143DC60
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PosesRecordingSaveData* New_ctor(::ArrayW<::StringW> objectIds, ::ArrayW<::GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe*> keyframes, ::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData* externalCameraCalibration) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PosesRecordingSaveData*, creationType>(objectIds, keyframes, externalCameraCalibration)));
    }
  }; // PosesRecordingSaveData
  #pragma pack(pop)
  static check_size<sizeof(PosesRecordingSaveData), 32 + sizeof(::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData*)> __GlobalNamespace_PosesRecordingSaveDataSizeCheck;
  static_assert(sizeof(PosesRecordingSaveData) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::PosesRecordingSaveData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
