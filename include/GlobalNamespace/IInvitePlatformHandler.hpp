// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: IInvitePlatformHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class IInvitePlatformHandler {
    public:
    // Creating value type constructor for type: IInvitePlatformHandler
    IInvitePlatformHandler() noexcept {}
    // public System.Boolean get_isSupported()
    // Offset: 0xFFFFFFFF
    bool get_isSupported();
    // public System.Void OpenInvitePanel()
    // Offset: 0xFFFFFFFF
    void OpenInvitePanel();
  }; // IInvitePlatformHandler
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::IInvitePlatformHandler*, "", "IInvitePlatformHandler");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::IInvitePlatformHandler::get_isSupported
// Il2CppName: get_isSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::IInvitePlatformHandler::*)()>(&GlobalNamespace::IInvitePlatformHandler::get_isSupported)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IInvitePlatformHandler*), "get_isSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IInvitePlatformHandler::OpenInvitePanel
// Il2CppName: OpenInvitePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IInvitePlatformHandler::*)()>(&GlobalNamespace::IInvitePlatformHandler::OpenInvitePanel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IInvitePlatformHandler*), "OpenInvitePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
