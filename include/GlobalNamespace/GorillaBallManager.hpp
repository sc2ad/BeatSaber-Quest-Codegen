// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaGameManager
#include "GlobalNamespace/GorillaGameManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: GorillaBallManager
  class GorillaBallManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GorillaBallManager);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GorillaBallManager*, "", "GorillaBallManager");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0xDC
  #pragma pack(push, 1)
  // Autogenerated type: GorillaBallManager
  // [TokenAttribute] Offset: FFFFFFFF
  class GorillaBallManager : public ::GlobalNamespace::GorillaGameManager {
    public:
    public:
    // public UnityEngine.Vector3 ballAnchor
    // Size: 0xC
    // Offset: 0xD0
    ::UnityEngine::Vector3 ballAnchor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Get instance field reference: public UnityEngine.Vector3 ballAnchor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_ballAnchor();
    // public System.Void .ctor()
    // Offset: 0xC67400
    // Implemented from: GorillaGameManager
    // Base method: System.Void GorillaGameManager::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaBallManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBallManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaBallManager*, creationType>()));
    }
    // public override System.Void Awake()
    // Offset: 0xC670DC
    // Implemented from: GorillaGameManager
    // Base method: System.Void GorillaGameManager::Awake()
    void Awake();
  }; // GorillaBallManager
  #pragma pack(pop)
  static check_size<sizeof(GorillaBallManager), 208 + sizeof(::UnityEngine::Vector3)> __GlobalNamespace_GorillaBallManagerSizeCheck;
  static_assert(sizeof(GorillaBallManager) == 0xDC);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GorillaBallManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::GorillaBallManager::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::GorillaBallManager::*)()>(&GlobalNamespace::GorillaBallManager::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GorillaBallManager*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
