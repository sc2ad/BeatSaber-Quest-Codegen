// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: BloomPrePassBackgroundColorsGradientFromColorSchemeColors
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientFromColorSchemeColors.hpp"
// Including type: BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientFromColorSchemeColors_EnvironmentColor.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: BloomPrePassBackgroundColorsGradientFromColorSchemeColors/Element
  // [TokenAttribute] Offset: FFFFFFFF
  class BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element : public ::Il2CppObject {
    public:
    // public System.Boolean loadFromColorScheme
    // Size: 0x1
    // Offset: 0x10
    bool loadFromColorScheme;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: loadFromColorScheme and: environmentColor
    char __padding0[0x3] = {};
    // [DrawIfAttribute] Offset: 0xF1618C
    // public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor environmentColor
    // Size: 0x4
    // Offset: 0x14
    GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor environmentColor;
    // Field size check
    static_assert(sizeof(GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor) == 0x4);
    // [DrawIfAttribute] Offset: 0xF16224
    // public System.Single intensity
    // Size: 0x4
    // Offset: 0x18
    float intensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [DrawIfAttribute] Offset: 0xF162BC
    // public UnityEngine.Color color
    // Size: 0x10
    // Offset: 0x1C
    UnityEngine::Color color;
    // Field size check
    static_assert(sizeof(UnityEngine::Color) == 0x10);
    // Creating value type constructor for type: Element
    Element(bool loadFromColorScheme_ = {}, GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor environmentColor_ = {}, float intensity_ = {}, UnityEngine::Color color_ = {}) noexcept : loadFromColorScheme{loadFromColorScheme_}, environmentColor{environmentColor_}, intensity{intensity_}, color{color_} {}
    // Get instance field reference: public System.Boolean loadFromColorScheme
    bool& dyn_loadFromColorScheme();
    // Get instance field reference: public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor environmentColor
    GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor& dyn_environmentColor();
    // Get instance field reference: public System.Single intensity
    float& dyn_intensity();
    // Get instance field reference: public UnityEngine.Color color
    UnityEngine::Color& dyn_color();
    // public System.Void .ctor()
    // Offset: 0x12AA788
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element*, creationType>()));
    }
  }; // BloomPrePassBackgroundColorsGradientFromColorSchemeColors/Element
  #pragma pack(pop)
  static check_size<sizeof(BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element), 28 + sizeof(UnityEngine::Color)> __GlobalNamespace_BloomPrePassBackgroundColorsGradientFromColorSchemeColors_ElementSizeCheck;
  static_assert(sizeof(BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element) == 0x2C);
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element*, "", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/Element");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
