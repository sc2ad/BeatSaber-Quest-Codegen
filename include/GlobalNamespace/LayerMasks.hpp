// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: LayerMasks
  class LayerMasks;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::LayerMasks);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::LayerMasks*, "", "LayerMasks");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: LayerMasks
  // [TokenAttribute] Offset: FFFFFFFF
  class LayerMasks : public ::Il2CppObject {
    public:
    // [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10C5B6C
    // Get static field: static public readonly UnityEngine.LayerMask saberLayerMask
    static ::UnityEngine::LayerMask _get_saberLayerMask();
    // Set static field: static public readonly UnityEngine.LayerMask saberLayerMask
    static void _set_saberLayerMask(::UnityEngine::LayerMask value);
    // [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10C5B7C
    // Get static field: static public readonly UnityEngine.LayerMask noteLayerMask
    static ::UnityEngine::LayerMask _get_noteLayerMask();
    // Set static field: static public readonly UnityEngine.LayerMask noteLayerMask
    static void _set_noteLayerMask(::UnityEngine::LayerMask value);
    // [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10C5B8C
    // Get static field: static public readonly UnityEngine.LayerMask noteDebrisLayerMask
    static ::UnityEngine::LayerMask _get_noteDebrisLayerMask();
    // Set static field: static public readonly UnityEngine.LayerMask noteDebrisLayerMask
    static void _set_noteDebrisLayerMask(::UnityEngine::LayerMask value);
    // [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10C5B9C
    // Get static field: static public readonly UnityEngine.LayerMask cutEffectParticlesLayerMask
    static ::UnityEngine::LayerMask _get_cutEffectParticlesLayerMask();
    // Set static field: static public readonly UnityEngine.LayerMask cutEffectParticlesLayerMask
    static void _set_cutEffectParticlesLayerMask(::UnityEngine::LayerMask value);
    // [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10C5BAC
    // Get static field: static public readonly System.Int32 noteDebrisLayer
    static int _get_noteDebrisLayer();
    // Set static field: static public readonly System.Int32 noteDebrisLayer
    static void _set_noteDebrisLayer(int value);
    // [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10C5BBC
    // Get static field: static public readonly System.Int32 cutEffectParticlesLayer
    static int _get_cutEffectParticlesLayer();
    // Set static field: static public readonly System.Int32 cutEffectParticlesLayer
    static void _set_cutEffectParticlesLayer(int value);
    // public System.Void .ctor()
    // Offset: 0x2B011F8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LayerMasks* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LayerMasks::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LayerMasks*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x2B01200
    static void _cctor();
    // static private UnityEngine.LayerMask GetLayerMask(System.String layerName)
    // Offset: 0x2B01180
    static ::UnityEngine::LayerMask GetLayerMask(::StringW layerName);
    // static private UnityEngine.LayerMask GetLayerMask(System.Int32 layerNum)
    // Offset: 0x2B011BC
    static ::UnityEngine::LayerMask GetLayerMask(int layerNum);
    // static private System.Int32 GetLayer(System.String layerName)
    // Offset: 0x2B011F0
    static int GetLayer(::StringW layerName);
  }; // LayerMasks
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::LayerMasks::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::LayerMasks::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::LayerMasks::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LayerMasks*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LayerMasks::GetLayerMask
// Il2CppName: GetLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::LayerMask (*)(::StringW)>(&GlobalNamespace::LayerMasks::GetLayerMask)> {
  static const MethodInfo* get() {
    static auto* layerName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LayerMasks*), "GetLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerName});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LayerMasks::GetLayerMask
// Il2CppName: GetLayerMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::LayerMask (*)(int)>(&GlobalNamespace::LayerMasks::GetLayerMask)> {
  static const MethodInfo* get() {
    static auto* layerNum = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LayerMasks*), "GetLayerMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerNum});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LayerMasks::GetLayer
// Il2CppName: GetLayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&GlobalNamespace::LayerMasks::GetLayer)> {
  static const MethodInfo* get() {
    static auto* layerName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LayerMasks*), "GetLayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layerName});
  }
};
