// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SongSpeedData
  class SongSpeedData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SongSpeedData);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SongSpeedData*, "", "SongSpeedData");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: SongSpeedData
  // [TokenAttribute] Offset: FFFFFFFF
  class SongSpeedData : public ::Il2CppObject {
    public:
    public:
    // public readonly System.Single speedMul
    // Size: 0x4
    // Offset: 0x10
    float speedMul;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating conversion operator: operator float
    constexpr operator float() const noexcept {
      return speedMul;
    }
    // Get instance field reference: public readonly System.Single speedMul
    [[deprecated("Use field access instead!")]] float& dyn_speedMul();
    // public System.Void .ctor(System.Single speedMul)
    // Offset: 0x13EFCA4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SongSpeedData* New_ctor(float speedMul) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongSpeedData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SongSpeedData*, creationType>(speedMul)));
    }
  }; // SongSpeedData
  #pragma pack(pop)
  static check_size<sizeof(SongSpeedData), 16 + sizeof(float)> __GlobalNamespace_SongSpeedDataSizeCheck;
  static_assert(sizeof(SongSpeedData) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SongSpeedData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
