// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GameObjectTestExceptionsSO
#include "GlobalNamespace/GameObjectTestExceptionsSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: EnvironmentInfoSO
  class EnvironmentInfoSO;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException*, "", "GameObjectTestExceptionsSO/GameObjectTestException");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: GameObjectTestExceptionsSO/GameObjectTestException
  // [TokenAttribute] Offset: FFFFFFFF
  class GameObjectTestExceptionsSO::GameObjectTestException : public ::Il2CppObject {
    public:
    public:
    // private EnvironmentInfoSO _environmentInfo
    // Size: 0x8
    // Offset: 0x10
    ::GlobalNamespace::EnvironmentInfoSO* environmentInfo;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::EnvironmentInfoSO*) == 0x8);
    // [TextAreaAttribute] Offset: 0x11327A4
    // private System.String _exceptionNotes
    // Size: 0x8
    // Offset: 0x18
    ::StringW exceptionNotes;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String[] _sceneHierarchies
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::StringW> sceneHierarchies;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    public:
    // Get instance field reference: private EnvironmentInfoSO _environmentInfo
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& dyn__environmentInfo();
    // Get instance field reference: private System.String _exceptionNotes
    [[deprecated("Use field access instead!")]] ::StringW& dyn__exceptionNotes();
    // Get instance field reference: private System.String[] _sceneHierarchies
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn__sceneHierarchies();
    // public EnvironmentInfoSO get_environmentInfo()
    // Offset: 0x142A524
    ::GlobalNamespace::EnvironmentInfoSO* get_environmentInfo();
    // public System.String[] get_sceneHierarchies()
    // Offset: 0x142A52C
    ::ArrayW<::StringW> get_sceneHierarchies();
    // public System.Void .ctor()
    // Offset: 0x142A534
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GameObjectTestExceptionsSO::GameObjectTestException* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GameObjectTestExceptionsSO::GameObjectTestException*, creationType>()));
    }
  }; // GameObjectTestExceptionsSO/GameObjectTestException
  #pragma pack(pop)
  static check_size<sizeof(GameObjectTestExceptionsSO::GameObjectTestException), 32 + sizeof(::ArrayW<::StringW>)> __GlobalNamespace_GameObjectTestExceptionsSO_GameObjectTestExceptionSizeCheck;
  static_assert(sizeof(GameObjectTestExceptionsSO::GameObjectTestException) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::get_environmentInfo
// Il2CppName: get_environmentInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::EnvironmentInfoSO* (GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::*)()>(&GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::get_environmentInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException*), "get_environmentInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::get_sceneHierarchies
// Il2CppName: get_sceneHierarchies
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::*)()>(&GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::get_sceneHierarchies)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException*), "get_sceneHierarchies", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
