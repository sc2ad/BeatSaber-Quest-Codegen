// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SelectSubMenuDestination
  class SelectSubMenuDestination;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SelectSubMenuDestination);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SelectSubMenuDestination*, "", "SelectSubMenuDestination");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: SelectSubMenuDestination
  // [TokenAttribute] Offset: FFFFFFFF
  class SelectSubMenuDestination : public ::GlobalNamespace::MenuDestination {
    public:
    // Nested type: ::GlobalNamespace::SelectSubMenuDestination::Destination
    struct Destination;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: SelectSubMenuDestination/Destination
    // [TokenAttribute] Offset: FFFFFFFF
    struct Destination/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: Destination
      constexpr Destination(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public SelectSubMenuDestination/Destination MainMenu
      static constexpr const int MainMenu = 0;
      // Get static field: static public SelectSubMenuDestination/Destination MainMenu
      static ::GlobalNamespace::SelectSubMenuDestination::Destination _get_MainMenu();
      // Set static field: static public SelectSubMenuDestination/Destination MainMenu
      static void _set_MainMenu(::GlobalNamespace::SelectSubMenuDestination::Destination value);
      // static field const value: static public SelectSubMenuDestination/Destination Campaign
      static constexpr const int Campaign = 1;
      // Get static field: static public SelectSubMenuDestination/Destination Campaign
      static ::GlobalNamespace::SelectSubMenuDestination::Destination _get_Campaign();
      // Set static field: static public SelectSubMenuDestination/Destination Campaign
      static void _set_Campaign(::GlobalNamespace::SelectSubMenuDestination::Destination value);
      // static field const value: static public SelectSubMenuDestination/Destination SoloFreePlay
      static constexpr const int SoloFreePlay = 2;
      // Get static field: static public SelectSubMenuDestination/Destination SoloFreePlay
      static ::GlobalNamespace::SelectSubMenuDestination::Destination _get_SoloFreePlay();
      // Set static field: static public SelectSubMenuDestination/Destination SoloFreePlay
      static void _set_SoloFreePlay(::GlobalNamespace::SelectSubMenuDestination::Destination value);
      // static field const value: static public SelectSubMenuDestination/Destination PartyFreePlay
      static constexpr const int PartyFreePlay = 3;
      // Get static field: static public SelectSubMenuDestination/Destination PartyFreePlay
      static ::GlobalNamespace::SelectSubMenuDestination::Destination _get_PartyFreePlay();
      // Set static field: static public SelectSubMenuDestination/Destination PartyFreePlay
      static void _set_PartyFreePlay(::GlobalNamespace::SelectSubMenuDestination::Destination value);
      // static field const value: static public SelectSubMenuDestination/Destination Settings
      static constexpr const int Settings = 4;
      // Get static field: static public SelectSubMenuDestination/Destination Settings
      static ::GlobalNamespace::SelectSubMenuDestination::Destination _get_Settings();
      // Set static field: static public SelectSubMenuDestination/Destination Settings
      static void _set_Settings(::GlobalNamespace::SelectSubMenuDestination::Destination value);
      // static field const value: static public SelectSubMenuDestination/Destination Tutorial
      static constexpr const int Tutorial = 5;
      // Get static field: static public SelectSubMenuDestination/Destination Tutorial
      static ::GlobalNamespace::SelectSubMenuDestination::Destination _get_Tutorial();
      // Set static field: static public SelectSubMenuDestination/Destination Tutorial
      static void _set_Tutorial(::GlobalNamespace::SelectSubMenuDestination::Destination value);
      // static field const value: static public SelectSubMenuDestination/Destination Multiplayer
      static constexpr const int Multiplayer = 6;
      // Get static field: static public SelectSubMenuDestination/Destination Multiplayer
      static ::GlobalNamespace::SelectSubMenuDestination::Destination _get_Multiplayer();
      // Set static field: static public SelectSubMenuDestination/Destination Multiplayer
      static void _set_Multiplayer(::GlobalNamespace::SelectSubMenuDestination::Destination value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // SelectSubMenuDestination/Destination
    #pragma pack(pop)
    static check_size<sizeof(SelectSubMenuDestination::Destination), 0 + sizeof(int)> __GlobalNamespace_SelectSubMenuDestination_DestinationSizeCheck;
    static_assert(sizeof(SelectSubMenuDestination::Destination) == 0x4);
    public:
    // public readonly SelectSubMenuDestination/Destination menuDestination
    // Size: 0x4
    // Offset: 0x10
    ::GlobalNamespace::SelectSubMenuDestination::Destination menuDestination;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SelectSubMenuDestination::Destination) == 0x4);
    public:
    // Creating conversion operator: operator ::GlobalNamespace::SelectSubMenuDestination::Destination
    constexpr operator ::GlobalNamespace::SelectSubMenuDestination::Destination() const noexcept {
      return menuDestination;
    }
    // Get instance field reference: public readonly SelectSubMenuDestination/Destination menuDestination
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SelectSubMenuDestination::Destination& dyn_menuDestination();
    // public System.Void .ctor(SelectSubMenuDestination/Destination menuDestination)
    // Offset: 0x1474034
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SelectSubMenuDestination* New_ctor(::GlobalNamespace::SelectSubMenuDestination::Destination menuDestination) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SelectSubMenuDestination*, creationType>(menuDestination)));
    }
  }; // SelectSubMenuDestination
  #pragma pack(pop)
  static check_size<sizeof(SelectSubMenuDestination), 16 + sizeof(::GlobalNamespace::SelectSubMenuDestination::Destination)> __GlobalNamespace_SelectSubMenuDestinationSizeCheck;
  static_assert(sizeof(SelectSubMenuDestination) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SelectSubMenuDestination::Destination, "", "SelectSubMenuDestination/Destination");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SelectSubMenuDestination::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
