// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PersistentScriptableObject
#include "GlobalNamespace/PersistentScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: VideoProjectionDataModelSO
  class VideoProjectionDataModelSO;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::VideoProjectionDataModelSO);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::VideoProjectionDataModelSO*, "", "VideoProjectionDataModelSO");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: VideoProjectionDataModelSO
  // [TokenAttribute] Offset: FFFFFFFF
  class VideoProjectionDataModelSO : public ::GlobalNamespace::PersistentScriptableObject {
    public:
    // Nested type: ::GlobalNamespace::VideoProjectionDataModelSO::VideoClipWithId
    class VideoClipWithId;
    public:
    // private VideoProjectionDataModelSO/VideoClipWithId[] _videoClipsWithId
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::GlobalNamespace::VideoProjectionDataModelSO::VideoClipWithId*> videoClipsWithId;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::VideoProjectionDataModelSO::VideoClipWithId*>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private VideoProjectionDataModelSO/VideoClipWithId[] _videoClipsWithId
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::VideoProjectionDataModelSO::VideoClipWithId*>& dyn__videoClipsWithId();
    // public VideoProjectionDataModelSO/VideoClipWithId[] get_videoClipWithIds()
    // Offset: 0x15EAC24
    ::ArrayW<::GlobalNamespace::VideoProjectionDataModelSO::VideoClipWithId*> get_videoClipWithIds();
    // public System.Void .ctor()
    // Offset: 0x15EAC2C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VideoProjectionDataModelSO* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VideoProjectionDataModelSO::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VideoProjectionDataModelSO*, creationType>()));
    }
  }; // VideoProjectionDataModelSO
  #pragma pack(pop)
  static check_size<sizeof(VideoProjectionDataModelSO), 24 + sizeof(::ArrayW<::GlobalNamespace::VideoProjectionDataModelSO::VideoClipWithId*>)> __GlobalNamespace_VideoProjectionDataModelSOSizeCheck;
  static_assert(sizeof(VideoProjectionDataModelSO) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::VideoProjectionDataModelSO::get_videoClipWithIds
// Il2CppName: get_videoClipWithIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::GlobalNamespace::VideoProjectionDataModelSO::VideoClipWithId*> (GlobalNamespace::VideoProjectionDataModelSO::*)()>(&GlobalNamespace::VideoProjectionDataModelSO::get_videoClipWithIds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::VideoProjectionDataModelSO*), "get_videoClipWithIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::VideoProjectionDataModelSO::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
