// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: ILevelRestartController
#include "GlobalNamespace/ILevelRestartController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: TutorialScenesTransitionSetupDataSO
  class TutorialScenesTransitionSetupDataSO;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: TutorialRestartController
  class TutorialRestartController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::TutorialRestartController);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::TutorialRestartController*, "", "TutorialRestartController");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: TutorialRestartController
  // [TokenAttribute] Offset: FFFFFFFF
  class TutorialRestartController : public ::UnityEngine::MonoBehaviour/*, public ::GlobalNamespace::ILevelRestartController*/ {
    public:
    public:
    // private TutorialScenesTransitionSetupDataSO _tutorialSceneSetupData
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::TutorialScenesTransitionSetupDataSO* tutorialSceneSetupData;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::TutorialScenesTransitionSetupDataSO*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::ILevelRestartController
    operator ::GlobalNamespace::ILevelRestartController() noexcept {
      return *reinterpret_cast<::GlobalNamespace::ILevelRestartController*>(this);
    }
    // Creating interface conversion operator: i_ILevelRestartController
    inline ::GlobalNamespace::ILevelRestartController* i_ILevelRestartController() noexcept {
      return reinterpret_cast<::GlobalNamespace::ILevelRestartController*>(this);
    }
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private TutorialScenesTransitionSetupDataSO _tutorialSceneSetupData
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::TutorialScenesTransitionSetupDataSO*& dyn__tutorialSceneSetupData();
    // public System.Void .ctor()
    // Offset: 0x13B9170
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TutorialRestartController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialRestartController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TutorialRestartController*, creationType>()));
    }
    // public System.Void RestartLevel()
    // Offset: 0x13B9154
    void RestartLevel();
  }; // TutorialRestartController
  #pragma pack(pop)
  static check_size<sizeof(TutorialRestartController), 24 + sizeof(::GlobalNamespace::TutorialScenesTransitionSetupDataSO*)> __GlobalNamespace_TutorialRestartControllerSizeCheck;
  static_assert(sizeof(TutorialRestartController) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::TutorialRestartController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::TutorialRestartController::RestartLevel
// Il2CppName: RestartLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::TutorialRestartController::*)()>(&GlobalNamespace::TutorialRestartController::RestartLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::TutorialRestartController*), "RestartLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
