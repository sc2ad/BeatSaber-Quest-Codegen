// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: TimeOfDayDependentAudio
  class TimeOfDayDependentAudio;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: PositionVolumeModifier
  class PositionVolumeModifier;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::PositionVolumeModifier);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::PositionVolumeModifier*, "", "PositionVolumeModifier");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: PositionVolumeModifier
  // [TokenAttribute] Offset: FFFFFFFF
  class PositionVolumeModifier : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public TimeOfDayDependentAudio audioToMod
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::TimeOfDayDependentAudio* audioToMod;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::TimeOfDayDependentAudio*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public TimeOfDayDependentAudio audioToMod
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::TimeOfDayDependentAudio*& dyn_audioToMod();
    // public System.Void .ctor()
    // Offset: 0xCC04A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PositionVolumeModifier* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PositionVolumeModifier::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PositionVolumeModifier*, creationType>()));
    }
    // public System.Void OnTriggerStay(UnityEngine.Collider other)
    // Offset: 0xCC0488
    void OnTriggerStay(::UnityEngine::Collider* other);
  }; // PositionVolumeModifier
  #pragma pack(pop)
  static check_size<sizeof(PositionVolumeModifier), 24 + sizeof(::GlobalNamespace::TimeOfDayDependentAudio*)> __GlobalNamespace_PositionVolumeModifierSizeCheck;
  static_assert(sizeof(PositionVolumeModifier) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::PositionVolumeModifier::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::PositionVolumeModifier::OnTriggerStay
// Il2CppName: OnTriggerStay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PositionVolumeModifier::*)(::UnityEngine::Collider*)>(&GlobalNamespace::PositionVolumeModifier::OnTriggerStay)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PositionVolumeModifier*), "OnTriggerStay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
