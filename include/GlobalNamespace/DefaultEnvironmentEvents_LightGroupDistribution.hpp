// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DefaultEnvironmentEvents
#include "GlobalNamespace/DefaultEnvironmentEvents.hpp"
// Including type: BeatmapEventDataBox/DistributionParamType
#include "GlobalNamespace/BeatmapEventDataBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*, "", "DefaultEnvironmentEvents/LightGroupDistribution");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: DefaultEnvironmentEvents/LightGroupDistribution
  // [TokenAttribute] Offset: FFFFFFFF
  class DefaultEnvironmentEvents::LightGroupDistribution : public ::Il2CppObject {
    public:
    public:
    // private System.Boolean _useDistribution
    // Size: 0x1
    // Offset: 0x10
    bool useDistribution;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: useDistribution and: distributionParam
    char __padding0[0x3] = {};
    // private System.Single _distributionParam
    // Size: 0x4
    // Offset: 0x14
    float distributionParam;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private BeatmapEventDataBox/DistributionParamType _distributionParamType
    // Size: 0x4
    // Offset: 0x18
    ::GlobalNamespace::BeatmapEventDataBox::DistributionParamType distributionParamType;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::BeatmapEventDataBox::DistributionParamType) == 0x4);
    public:
    // Get instance field reference: private System.Boolean _useDistribution
    [[deprecated("Use field access instead!")]] bool& dyn__useDistribution();
    // Get instance field reference: private System.Single _distributionParam
    [[deprecated("Use field access instead!")]] float& dyn__distributionParam();
    // Get instance field reference: private BeatmapEventDataBox/DistributionParamType _distributionParamType
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapEventDataBox::DistributionParamType& dyn__distributionParamType();
    // public System.Boolean get_useDistribution()
    // Offset: 0x1460B90
    bool get_useDistribution();
    // public System.Single get_distributionParam()
    // Offset: 0x1460B98
    float get_distributionParam();
    // public BeatmapEventDataBox/DistributionParamType get_distributionParamType()
    // Offset: 0x1460BA0
    ::GlobalNamespace::BeatmapEventDataBox::DistributionParamType get_distributionParamType();
    // public System.Void .ctor()
    // Offset: 0x1460BA8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DefaultEnvironmentEvents::LightGroupDistribution* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DefaultEnvironmentEvents::LightGroupDistribution*, creationType>()));
    }
  }; // DefaultEnvironmentEvents/LightGroupDistribution
  #pragma pack(pop)
  static check_size<sizeof(DefaultEnvironmentEvents::LightGroupDistribution), 24 + sizeof(::GlobalNamespace::BeatmapEventDataBox::DistributionParamType)> __GlobalNamespace_DefaultEnvironmentEvents_LightGroupDistributionSizeCheck;
  static_assert(sizeof(DefaultEnvironmentEvents::LightGroupDistribution) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::get_useDistribution
// Il2CppName: get_useDistribution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::*)()>(&GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::get_useDistribution)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*), "get_useDistribution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::get_distributionParam
// Il2CppName: get_distributionParam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::*)()>(&GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::get_distributionParam)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*), "get_distributionParam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::get_distributionParamType
// Il2CppName: get_distributionParamType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::BeatmapEventDataBox::DistributionParamType (GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::*)()>(&GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::get_distributionParamType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*), "get_distributionParamType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
