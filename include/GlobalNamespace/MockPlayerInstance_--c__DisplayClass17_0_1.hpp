// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MockPlayerInstance
#include "GlobalNamespace/MockPlayerInstance.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IConnectionManager
  class IConnectionManager;
  // Forward declaring type: IConnectionInitParams`1<T>
  template<typename T>
  class IConnectionInitParams_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::GlobalNamespace::MockPlayerInstance::$$c__DisplayClass17_0_1, "", "MockPlayerInstance/<>c__DisplayClass17_0`1");
// Type namespace: 
namespace GlobalNamespace {
  // WARNING Size may be invalid!
  // Autogenerated type: MockPlayerInstance/<>c__DisplayClass17_0`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  template<typename T>
  class MockPlayerInstance::$$c__DisplayClass17_0_1 : public ::Il2CppObject {
    public:
    public:
    // public MockPlayerInstance <>4__this
    // Size: 0x8
    // Offset: 0x0
    ::GlobalNamespace::MockPlayerInstance* $$4__this;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::MockPlayerInstance*) == 0x8);
    // public IConnectionInitParams`1<T> connectionInitParams
    // Size: 0x8
    // Offset: 0x0
    ::GlobalNamespace::IConnectionInitParams_1<T>* connectionInitParams;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::IConnectionInitParams_1<T>*) == 0x8);
    public:
    // Autogenerated instance field getter
    // Get instance field: public MockPlayerInstance <>4__this
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::MockPlayerInstance*& dyn_$$4__this() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockPlayerInstance::$$c__DisplayClass17_0_1::dyn_$$4__this");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
      return *reinterpret_cast<::GlobalNamespace::MockPlayerInstance**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public IConnectionInitParams`1<T> connectionInitParams
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectionInitParams_1<T>*& dyn_connectionInitParams() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockPlayerInstance::$$c__DisplayClass17_0_1::dyn_connectionInitParams");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionInitParams"))->offset;
      return *reinterpret_cast<::GlobalNamespace::IConnectionInitParams_1<T>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MockPlayerInstance::$$c__DisplayClass17_0_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockPlayerInstance::$$c__DisplayClass17_0_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MockPlayerInstance::$$c__DisplayClass17_0_1<T>*, creationType>()));
    }
    // System.Void <ConnectToServer>b__0()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void $ConnectToServer$b__0() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockPlayerInstance::$$c__DisplayClass17_0_1::<ConnectToServer>b__0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ConnectToServer>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
  }; // MockPlayerInstance/<>c__DisplayClass17_0`1
  // Could not write size check! Type: MockPlayerInstance/<>c__DisplayClass17_0`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
