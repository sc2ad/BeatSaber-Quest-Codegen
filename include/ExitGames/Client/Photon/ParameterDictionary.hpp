// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
// Including type: ExitGames.Client.Photon.NonAllocDictionary`2
#include "ExitGames/Client/Photon/NonAllocDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Forward declaring namespace: ExitGames::Client::Photon::StructWrapping
namespace ExitGames::Client::Photon::StructWrapping {
  // Forward declaring type: StructWrapperPools
  class StructWrapperPools;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Skipping declaration: IEnumerator`1 because it is already included!
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: IEnumerator because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: ValueType because it is already included!
}
// Completed forward declares
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: ParameterDictionary
  class ParameterDictionary;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExitGames::Client::Photon::ParameterDictionary);
DEFINE_IL2CPP_ARG_TYPE(::ExitGames::Client::Photon::ParameterDictionary*, "ExitGames.Client.Photon", "ParameterDictionary");
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: ExitGames.Client.Photon.ParameterDictionary
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 94C5C8
  class ParameterDictionary : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<uint8_t, ::Il2CppObject*>>*/ {
    public:
    public:
    // public readonly ExitGames.Client.Photon.NonAllocDictionary`2<System.Byte,System.Object> paramDict
    // Size: 0x8
    // Offset: 0x10
    ::ExitGames::Client::Photon::NonAllocDictionary_2<uint8_t, ::Il2CppObject*>* paramDict;
    // Field size check
    static_assert(sizeof(::ExitGames::Client::Photon::NonAllocDictionary_2<uint8_t, ::Il2CppObject*>*) == 0x8);
    // public readonly ExitGames.Client.Photon.StructWrapping.StructWrapperPools wrapperPools
    // Size: 0x8
    // Offset: 0x18
    ::ExitGames::Client::Photon::StructWrapping::StructWrapperPools* wrapperPools;
    // Field size check
    static_assert(sizeof(::ExitGames::Client::Photon::StructWrapping::StructWrapperPools*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<uint8_t, ::Il2CppObject*>>
    operator ::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<uint8_t, ::Il2CppObject*>>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<uint8_t, ::Il2CppObject*>>*>(this);
    }
    // Get instance field reference: public readonly ExitGames.Client.Photon.NonAllocDictionary`2<System.Byte,System.Object> paramDict
    [[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::NonAllocDictionary_2<uint8_t, ::Il2CppObject*>*& dyn_paramDict();
    // Get instance field reference: public readonly ExitGames.Client.Photon.StructWrapping.StructWrapperPools wrapperPools
    [[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::StructWrapping::StructWrapperPools*& dyn_wrapperPools();
    // public System.Object get_Item(System.Byte key)
    // Offset: 0x1138EF4
    ::Il2CppObject* get_Item(uint8_t key);
    // public System.Void set_Item(System.Byte key, System.Object value)
    // Offset: 0x1138FA8
    void set_Item(uint8_t key, ::Il2CppObject* value);
    // public System.Int32 get_Count()
    // Offset: 0x1139018
    int get_Count();
    // public System.Void .ctor()
    // Offset: 0x113478C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ParameterDictionary* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::ParameterDictionary::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ParameterDictionary*, creationType>()));
    }
    // public System.Void .ctor(System.Int32 capacity)
    // Offset: 0x1138C98
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ParameterDictionary* New_ctor(int capacity) {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::ParameterDictionary::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ParameterDictionary*, creationType>(capacity)));
    }
    // private System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<System.Byte,System.Object>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Byte,System.Object>>.GetEnumerator()
    // Offset: 0x1138D3C
    ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<uint8_t, ::Il2CppObject*>>* System_Collections_Generic_IEnumerable$System_Collections_Generic_KeyValuePair$System_Byte_System_Object$$_GetEnumerator();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x1138DEC
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // public ExitGames.Client.Photon.NonAllocDictionary`2/ExitGames.Client.Photon.PairIterator<System.Byte,System.Object> GetEnumerator()
    // Offset: 0x1138E9C
    typename ::ExitGames::Client::Photon::NonAllocDictionary_2<uint8_t, ::Il2CppObject*>::PairIterator GetEnumerator();
    // public System.Void Clear()
    // Offset: 0x1134AEC
    void Clear();
    // public System.Void Add(System.Byte code, System.String value)
    // Offset: 0x1139070
    void Add(uint8_t code, ::StringW value);
    // public System.Void Add(System.Byte code, ExitGames.Client.Photon.Hashtable value)
    // Offset: 0x1139164
    void Add(uint8_t code, ::ExitGames::Client::Photon::Hashtable* value);
    // public System.Void Add(System.Byte code, System.Byte value)
    // Offset: 0x1139258
    void Add(uint8_t code, uint8_t value);
    // public System.Void Add(System.Byte code, System.Boolean value)
    // Offset: 0x113939C
    void Add(uint8_t code, bool value);
    // public System.Void Add(System.Byte code, System.Int16 value)
    // Offset: 0x11394E4
    void Add(uint8_t code, int16_t value);
    // public System.Void Add(System.Byte code, System.Int32 value)
    // Offset: 0x11395F8
    void Add(uint8_t code, int value);
    // public System.Void Add(System.Byte code, System.Int64 value)
    // Offset: 0x113970C
    void Add(uint8_t code, int64_t value);
    // public System.Void Add(System.Byte code, System.Object value)
    // Offset: 0x11348E0
    void Add(uint8_t code, ::Il2CppObject* value);
    // public T Unwrap(System.Byte key)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T Unwrap(uint8_t key) {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::ParameterDictionary::Unwrap");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unwrap", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method, key);
    }
    // public T Get(System.Byte key)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T Get(uint8_t key) {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::ParameterDictionary::Get");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method, key);
    }
    // public System.Boolean ContainsKey(System.Byte key)
    // Offset: 0x1139820
    bool ContainsKey(uint8_t key);
    // public System.Object TryGetObject(System.Byte key)
    // Offset: 0x1139888
    ::Il2CppObject* TryGetObject(uint8_t key);
    // public System.Boolean TryGetValue(System.Byte key, out System.Object value)
    // Offset: 0x1134858
    bool TryGetValue(uint8_t key, ByRef<::Il2CppObject*> value);
    // public System.Boolean TryGetValue(System.Byte key, out T value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    bool TryGetValue(uint8_t key, ByRef<T> value) {
      static_assert(std::is_convertible_v<T, ::System::ValueType*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::ParameterDictionary::TryGetValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetValue", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<T&>()})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___generic__method, key, byref(value));
    }
    // public System.String ToStringFull(System.Boolean includeTypes)
    // Offset: 0x1139908
    ::StringW ToStringFull(bool includeTypes);
  }; // ExitGames.Client.Photon.ParameterDictionary
  #pragma pack(pop)
  static check_size<sizeof(ParameterDictionary), 24 + sizeof(::ExitGames::Client::Photon::StructWrapping::StructWrapperPools*)> __ExitGames_Client_Photon_ParameterDictionarySizeCheck;
  static_assert(sizeof(ParameterDictionary) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ExitGames::Client::Photon::ParameterDictionary::*)(uint8_t)>(&ExitGames::Client::Photon::ParameterDictionary::get_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::ParameterDictionary::*)(uint8_t, ::Il2CppObject*)>(&ExitGames::Client::Photon::ParameterDictionary::set_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ExitGames::Client::Photon::ParameterDictionary::*)()>(&ExitGames::Client::Photon::ParameterDictionary::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::System_Collections_Generic_IEnumerable$System_Collections_Generic_KeyValuePair$System_Byte_System_Object$$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Byte,System.Object>>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<uint8_t, ::Il2CppObject*>>* (ExitGames::Client::Photon::ParameterDictionary::*)()>(&ExitGames::Client::Photon::ParameterDictionary::System_Collections_Generic_IEnumerable$System_Collections_Generic_KeyValuePair$System_Byte_System_Object$$_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Byte,System.Object>>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (ExitGames::Client::Photon::ParameterDictionary::*)()>(&ExitGames::Client::Photon::ParameterDictionary::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<typename ::ExitGames::Client::Photon::NonAllocDictionary_2<uint8_t, ::Il2CppObject*>::PairIterator (ExitGames::Client::Photon::ParameterDictionary::*)()>(&ExitGames::Client::Photon::ParameterDictionary::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::ParameterDictionary::*)()>(&ExitGames::Client::Photon::ParameterDictionary::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::ParameterDictionary::*)(uint8_t, ::StringW)>(&ExitGames::Client::Photon::ParameterDictionary::Add)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::ParameterDictionary::*)(uint8_t, ::ExitGames::Client::Photon::Hashtable*)>(&ExitGames::Client::Photon::ParameterDictionary::Add)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::ParameterDictionary::*)(uint8_t, uint8_t)>(&ExitGames::Client::Photon::ParameterDictionary::Add)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::ParameterDictionary::*)(uint8_t, bool)>(&ExitGames::Client::Photon::ParameterDictionary::Add)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::ParameterDictionary::*)(uint8_t, int16_t)>(&ExitGames::Client::Photon::ParameterDictionary::Add)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::ParameterDictionary::*)(uint8_t, int)>(&ExitGames::Client::Photon::ParameterDictionary::Add)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::ParameterDictionary::*)(uint8_t, int64_t)>(&ExitGames::Client::Photon::ParameterDictionary::Add)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::ParameterDictionary::*)(uint8_t, ::Il2CppObject*)>(&ExitGames::Client::Photon::ParameterDictionary::Add)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::Unwrap
// Il2CppName: Unwrap
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::Get
// Il2CppName: Get
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::ContainsKey
// Il2CppName: ContainsKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ExitGames::Client::Photon::ParameterDictionary::*)(uint8_t)>(&ExitGames::Client::Photon::ParameterDictionary::ContainsKey)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "ContainsKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::TryGetObject
// Il2CppName: TryGetObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ExitGames::Client::Photon::ParameterDictionary::*)(uint8_t)>(&ExitGames::Client::Photon::ParameterDictionary::TryGetObject)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "TryGetObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::TryGetValue
// Il2CppName: TryGetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ExitGames::Client::Photon::ParameterDictionary::*)(uint8_t, ByRef<::Il2CppObject*>)>(&ExitGames::Client::Photon::ParameterDictionary::TryGetValue)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "TryGetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::TryGetValue
// Il2CppName: TryGetValue
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: ExitGames::Client::Photon::ParameterDictionary::ToStringFull
// Il2CppName: ToStringFull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (ExitGames::Client::Photon::ParameterDictionary::*)(bool)>(&ExitGames::Client::Photon::ParameterDictionary::ToStringFull)> {
  static const MethodInfo* get() {
    static auto* includeTypes = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::ParameterDictionary*), "ToStringFull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{includeTypes});
  }
};
