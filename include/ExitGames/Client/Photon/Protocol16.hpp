// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: ExitGames.Client.Photon.IProtocol
#include "ExitGames/Client/Photon/IProtocol.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: StreamBuffer
  class StreamBuffer;
  // Forward declaring type: OperationRequest
  class OperationRequest;
  // Forward declaring type: ParameterDictionary
  class ParameterDictionary;
  // Forward declaring type: Hashtable
  class Hashtable;
  // Forward declaring type: OperationResponse
  class OperationResponse;
  // Forward declaring type: DisconnectMessage
  class DisconnectMessage;
  // Forward declaring type: EventData
  class EventData;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Array
  class Array;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IList
  class IList;
  // Forward declaring type: IDictionary
  class IDictionary;
}
// Completed forward declares
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: Protocol16
  class Protocol16;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExitGames::Client::Photon::Protocol16);
DEFINE_IL2CPP_ARG_TYPE(::ExitGames::Client::Photon::Protocol16*, "ExitGames.Client.Photon", "Protocol16");
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: ExitGames.Client.Photon.Protocol16
  // [TokenAttribute] Offset: FFFFFFFF
  class Protocol16 : public ::ExitGames::Client::Photon::IProtocol {
    public:
    // Nested type: ::ExitGames::Client::Photon::Protocol16::GpType
    struct GpType;
    public:
    // private readonly System.Byte[] versionBytes
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<uint8_t> versionBytes;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private readonly System.Byte[] memShort
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<uint8_t> memShort;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private readonly System.Int64[] memLongBlock
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<int64_t> memLongBlock;
    // Field size check
    static_assert(sizeof(::ArrayW<int64_t>) == 0x8);
    // private readonly System.Byte[] memLongBlockBytes
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<uint8_t> memLongBlockBytes;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private readonly System.Double[] memDoubleBlock
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<double> memDoubleBlock;
    // Field size check
    static_assert(sizeof(::ArrayW<double>) == 0x8);
    // private readonly System.Byte[] memDoubleBlockBytes
    // Size: 0x8
    // Offset: 0x40
    ::ArrayW<uint8_t> memDoubleBlockBytes;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private readonly System.Byte[] memInteger
    // Size: 0x8
    // Offset: 0x48
    ::ArrayW<uint8_t> memInteger;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private readonly System.Byte[] memLong
    // Size: 0x8
    // Offset: 0x50
    ::ArrayW<uint8_t> memLong;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private readonly System.Byte[] memFloat
    // Size: 0x8
    // Offset: 0x58
    ::ArrayW<uint8_t> memFloat;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private readonly System.Byte[] memDouble
    // Size: 0x8
    // Offset: 0x60
    ::ArrayW<uint8_t> memDouble;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    public:
    // Deleting conversion operator: operator ::ExitGames::Client::Photon::ByteArraySlicePool*
    constexpr operator ::ExitGames::Client::Photon::ByteArraySlicePool*() const noexcept = delete;
    // Get static field: static private readonly System.Single[] memFloatBlock
    static ::ArrayW<float> _get_memFloatBlock();
    // Set static field: static private readonly System.Single[] memFloatBlock
    static void _set_memFloatBlock(::ArrayW<float> value);
    // Get static field: static private readonly System.Byte[] memFloatBlockBytes
    static ::ArrayW<uint8_t> _get_memFloatBlockBytes();
    // Set static field: static private readonly System.Byte[] memFloatBlockBytes
    static void _set_memFloatBlockBytes(::ArrayW<uint8_t> value);
    // Get instance field reference: private readonly System.Byte[] versionBytes
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_versionBytes();
    // Get instance field reference: private readonly System.Byte[] memShort
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_memShort();
    // Get instance field reference: private readonly System.Int64[] memLongBlock
    [[deprecated("Use field access instead!")]] ::ArrayW<int64_t>& dyn_memLongBlock();
    // Get instance field reference: private readonly System.Byte[] memLongBlockBytes
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_memLongBlockBytes();
    // Get instance field reference: private readonly System.Double[] memDoubleBlock
    [[deprecated("Use field access instead!")]] ::ArrayW<double>& dyn_memDoubleBlock();
    // Get instance field reference: private readonly System.Byte[] memDoubleBlockBytes
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_memDoubleBlockBytes();
    // Get instance field reference: private readonly System.Byte[] memInteger
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_memInteger();
    // Get instance field reference: private readonly System.Byte[] memLong
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_memLong();
    // Get instance field reference: private readonly System.Byte[] memFloat
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_memFloat();
    // Get instance field reference: private readonly System.Byte[] memDouble
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_memDouble();
    // static private System.Void .cctor()
    // Offset: 0x16F3248
    static void _cctor();
    // private System.Boolean SerializeCustom(ExitGames.Client.Photon.StreamBuffer dout, System.Object serObject)
    // Offset: 0x16EC61C
    bool SerializeCustom(::ExitGames::Client::Photon::StreamBuffer* dout, ::Il2CppObject* serObject);
    // private System.Object DeserializeCustom(ExitGames.Client.Photon.StreamBuffer din, System.Byte customTypeCode, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    // Offset: 0x16ED424
    ::Il2CppObject* DeserializeCustom(::ExitGames::Client::Photon::StreamBuffer* din, uint8_t customTypeCode, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags);
    // private System.Type GetTypeOfCode(System.Byte typeCode)
    // Offset: 0x16ED600
    ::System::Type* GetTypeOfCode(uint8_t typeCode);
    // private ExitGames.Client.Photon.Protocol16/ExitGames.Client.Photon.GpType GetCodeOfType(System.Type type)
    // Offset: 0x16ED920
    ::ExitGames::Client::Photon::Protocol16::GpType GetCodeOfType(::System::Type* type);
    // private System.Array CreateArrayByType(System.Byte arrayType, System.Int16 length)
    // Offset: 0x16EDC50
    ::System::Array* CreateArrayByType(uint8_t arrayType, int16_t length);
    // public System.Void SerializeOperationRequest(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.OperationRequest operation, System.Boolean setType)
    // Offset: 0x16EDC78
    void SerializeOperationRequest(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::OperationRequest* operation, bool setType);
    // private System.Void SerializeParameterTable(ExitGames.Client.Photon.StreamBuffer stream, System.Collections.Generic.Dictionary`2<System.Byte,System.Object> parameters)
    // Offset: 0x16EDD14
    void SerializeParameterTable(::ExitGames::Client::Photon::StreamBuffer* stream, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>* parameters);
    // private System.Void SerializeParameterTable(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.ParameterDictionary parameters)
    // Offset: 0x16EDF28
    void SerializeParameterTable(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::ParameterDictionary* parameters);
    // private System.Collections.Generic.Dictionary`2<System.Byte,System.Object> DeserializeParameterTable(ExitGames.Client.Photon.StreamBuffer stream, System.Collections.Generic.Dictionary`2<System.Byte,System.Object> target)
    // Offset: 0x16EE458
    ::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>* DeserializeParameterTable(::ExitGames::Client::Photon::StreamBuffer* stream, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>* target);
    // private ExitGames.Client.Photon.ParameterDictionary DeserializeParameterDictionary(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.ParameterDictionary target, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    // Offset: 0x16EE170
    ::ExitGames::Client::Photon::ParameterDictionary* DeserializeParameterDictionary(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::ParameterDictionary* target, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags);
    // private System.Void SerializeByte(ExitGames.Client.Photon.StreamBuffer dout, System.Byte serObject, System.Boolean setType)
    // Offset: 0x16EEF38
    void SerializeByte(::ExitGames::Client::Photon::StreamBuffer* dout, uint8_t serObject, bool setType);
    // private System.Void SerializeBoolean(ExitGames.Client.Photon.StreamBuffer dout, System.Boolean serObject, System.Boolean setType)
    // Offset: 0x16EEF88
    void SerializeBoolean(::ExitGames::Client::Photon::StreamBuffer* dout, bool serObject, bool setType);
    // public System.Void SerializeLengthAsShort(ExitGames.Client.Photon.StreamBuffer dout, System.Int32 serObject, System.String type)
    // Offset: 0x16ECE68
    void SerializeLengthAsShort(::ExitGames::Client::Photon::StreamBuffer* dout, int serObject, ::StringW type);
    // private System.Void SerializeInteger(ExitGames.Client.Photon.StreamBuffer dout, System.Int32 serObject, System.Boolean setType)
    // Offset: 0x16EEFD8
    void SerializeInteger(::ExitGames::Client::Photon::StreamBuffer* dout, int serObject, bool setType);
    // private System.Void SerializeLong(ExitGames.Client.Photon.StreamBuffer dout, System.Int64 serObject, System.Boolean setType)
    // Offset: 0x16EF140
    void SerializeLong(::ExitGames::Client::Photon::StreamBuffer* dout, int64_t serObject, bool setType);
    // private System.Void SerializeFloat(ExitGames.Client.Photon.StreamBuffer dout, System.Single serObject, System.Boolean setType)
    // Offset: 0x16EF38C
    void SerializeFloat(::ExitGames::Client::Photon::StreamBuffer* dout, float serObject, bool setType);
    // private System.Void SerializeDouble(ExitGames.Client.Photon.StreamBuffer dout, System.Double serObject, System.Boolean setType)
    // Offset: 0x16EF6AC
    void SerializeDouble(::ExitGames::Client::Photon::StreamBuffer* dout, double serObject, bool setType);
    // private System.Void SerializeArray(ExitGames.Client.Photon.StreamBuffer dout, System.Array serObject, System.Boolean setType)
    // Offset: 0x16EFEFC
    void SerializeArray(::ExitGames::Client::Photon::StreamBuffer* dout, ::System::Array* serObject, bool setType);
    // private System.Void SerializeByteArray(ExitGames.Client.Photon.StreamBuffer dout, System.Byte[] serObject, System.Boolean setType)
    // Offset: 0x16EFAB0
    void SerializeByteArray(::ExitGames::Client::Photon::StreamBuffer* dout, ::ArrayW<uint8_t> serObject, bool setType);
    // private System.Void SerializeByteArraySegment(ExitGames.Client.Photon.StreamBuffer dout, System.Byte[] serObject, System.Int32 offset, System.Int32 count, System.Boolean setType)
    // Offset: 0x16F05C0
    void SerializeByteArraySegment(::ExitGames::Client::Photon::StreamBuffer* dout, ::ArrayW<uint8_t> serObject, int offset, int count, bool setType);
    // private System.Void SerializeIntArrayOptimized(ExitGames.Client.Photon.StreamBuffer inWriter, System.Int32[] serObject, System.Boolean setType)
    // Offset: 0x16EFD2C
    void SerializeIntArrayOptimized(::ExitGames::Client::Photon::StreamBuffer* inWriter, ::ArrayW<int> serObject, bool setType);
    // private System.Void SerializeStringArray(ExitGames.Client.Photon.StreamBuffer dout, System.String[] serObject, System.Boolean setType)
    // Offset: 0x16F100C
    void SerializeStringArray(::ExitGames::Client::Photon::StreamBuffer* dout, ::ArrayW<::StringW> serObject, bool setType);
    // private System.Void SerializeObjectArray(ExitGames.Client.Photon.StreamBuffer dout, System.Collections.IList objects, System.Boolean setType)
    // Offset: 0x16EFB28
    void SerializeObjectArray(::ExitGames::Client::Photon::StreamBuffer* dout, ::System::Collections::IList* objects, bool setType);
    // private System.Void SerializeHashTable(ExitGames.Client.Photon.StreamBuffer dout, ExitGames.Client.Photon.Hashtable serObject, System.Boolean setType)
    // Offset: 0x16EF8F8
    void SerializeHashTable(::ExitGames::Client::Photon::StreamBuffer* dout, ::ExitGames::Client::Photon::Hashtable* serObject, bool setType);
    // private System.Void SerializeDictionary(ExitGames.Client.Photon.StreamBuffer dout, System.Collections.IDictionary serObject, System.Boolean setType)
    // Offset: 0x16F0540
    void SerializeDictionary(::ExitGames::Client::Photon::StreamBuffer* dout, ::System::Collections::IDictionary* serObject, bool setType);
    // private System.Void SerializeDictionaryHeader(ExitGames.Client.Photon.StreamBuffer writer, System.Type dictType)
    // Offset: 0x16F10FC
    void SerializeDictionaryHeader(::ExitGames::Client::Photon::StreamBuffer* writer, ::System::Type* dictType);
    // private System.Void SerializeDictionaryHeader(ExitGames.Client.Photon.StreamBuffer writer, System.Object dict, out System.Boolean setKeyType, out System.Boolean setValueType)
    // Offset: 0x16F0900
    void SerializeDictionaryHeader(::ExitGames::Client::Photon::StreamBuffer* writer, ::Il2CppObject* dict, ByRef<bool> setKeyType, ByRef<bool> setValueType);
    // private System.Void SerializeDictionaryElements(ExitGames.Client.Photon.StreamBuffer writer, System.Object dict, System.Boolean setKeyType, System.Boolean setValueType)
    // Offset: 0x16F0BB8
    void SerializeDictionaryElements(::ExitGames::Client::Photon::StreamBuffer* writer, ::Il2CppObject* dict, bool setKeyType, bool setValueType);
    // private System.Boolean DeserializeBoolean(ExitGames.Client.Photon.StreamBuffer din)
    // Offset: 0x16F200C
    bool DeserializeBoolean(::ExitGames::Client::Photon::StreamBuffer* din);
    // private System.Int32 DeserializeInteger(ExitGames.Client.Photon.StreamBuffer din)
    // Offset: 0x16F165C
    int DeserializeInteger(::ExitGames::Client::Photon::StreamBuffer* din);
    // private System.Int64 DeserializeLong(ExitGames.Client.Photon.StreamBuffer din)
    // Offset: 0x16F2038
    int64_t DeserializeLong(::ExitGames::Client::Photon::StreamBuffer* din);
    // private System.Single DeserializeFloat(ExitGames.Client.Photon.StreamBuffer din)
    // Offset: 0x16F22CC
    float DeserializeFloat(::ExitGames::Client::Photon::StreamBuffer* din);
    // private System.Double DeserializeDouble(ExitGames.Client.Photon.StreamBuffer din)
    // Offset: 0x16F249C
    double DeserializeDouble(::ExitGames::Client::Photon::StreamBuffer* din);
    // private System.String DeserializeString(ExitGames.Client.Photon.StreamBuffer din)
    // Offset: 0x16F17B4
    ::StringW DeserializeString(::ExitGames::Client::Photon::StreamBuffer* din);
    // private System.Array DeserializeArray(ExitGames.Client.Photon.StreamBuffer din)
    // Offset: 0x16F26BC
    ::System::Array* DeserializeArray(::ExitGames::Client::Photon::StreamBuffer* din);
    // private System.Byte[] DeserializeByteArray(ExitGames.Client.Photon.StreamBuffer din, System.Int32 size)
    // Offset: 0x16F1A04
    ::ArrayW<uint8_t> DeserializeByteArray(::ExitGames::Client::Photon::StreamBuffer* din, int size);
    // private System.Int32[] DeserializeIntArray(ExitGames.Client.Photon.StreamBuffer din, System.Int32 size)
    // Offset: 0x16F1AA8
    ::ArrayW<int> DeserializeIntArray(::ExitGames::Client::Photon::StreamBuffer* din, int size);
    // private System.String[] DeserializeStringArray(ExitGames.Client.Photon.StreamBuffer din)
    // Offset: 0x16F18F4
    ::ArrayW<::StringW> DeserializeStringArray(::ExitGames::Client::Photon::StreamBuffer* din);
    // private System.Object[] DeserializeObjectArray(ExitGames.Client.Photon.StreamBuffer din)
    // Offset: 0x16F2B18
    ::ArrayW<::Il2CppObject*> DeserializeObjectArray(::ExitGames::Client::Photon::StreamBuffer* din);
    // private ExitGames.Client.Photon.Hashtable DeserializeHashTable(ExitGames.Client.Photon.StreamBuffer din)
    // Offset: 0x16F1B84
    ::ExitGames::Client::Photon::Hashtable* DeserializeHashTable(::ExitGames::Client::Photon::StreamBuffer* din);
    // private System.Collections.IDictionary DeserializeDictionary(ExitGames.Client.Photon.StreamBuffer din)
    // Offset: 0x16F1CB4
    ::System::Collections::IDictionary* DeserializeDictionary(::ExitGames::Client::Photon::StreamBuffer* din);
    // private System.Boolean DeserializeDictionaryArray(ExitGames.Client.Photon.StreamBuffer din, System.Int16 size, out System.Array arrayResult)
    // Offset: 0x16F2D7C
    bool DeserializeDictionaryArray(::ExitGames::Client::Photon::StreamBuffer* din, int16_t size, ByRef<::System::Array*> arrayResult);
    // private System.Type DeserializeDictionaryType(ExitGames.Client.Photon.StreamBuffer reader, out System.Byte keyTypeCode, out System.Byte valTypeCode)
    // Offset: 0x16F2FE0
    ::System::Type* DeserializeDictionaryType(::ExitGames::Client::Photon::StreamBuffer* reader, ByRef<uint8_t> keyTypeCode, ByRef<uint8_t> valTypeCode);
    // public override System.String get_ProtocolType()
    // Offset: 0x16EC5CC
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.String IProtocol::get_ProtocolType()
    ::StringW get_ProtocolType();
    // public override System.Byte[] get_VersionBytes()
    // Offset: 0x16EC614
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Byte[] IProtocol::get_VersionBytes()
    ::ArrayW<uint8_t> get_VersionBytes();
    // public System.Void .ctor()
    // Offset: 0x16EBA8C
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Void IProtocol::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Protocol16* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::Protocol16::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Protocol16*, creationType>()));
    }
    // public override System.Void SerializeOperationRequest(ExitGames.Client.Photon.StreamBuffer stream, System.Byte operationCode, System.Collections.Generic.Dictionary`2<System.Byte,System.Object> parameters, System.Boolean setType)
    // Offset: 0x16EDCA4
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Void IProtocol::SerializeOperationRequest(ExitGames.Client.Photon.StreamBuffer stream, System.Byte operationCode, System.Collections.Generic.Dictionary`2<System.Byte,System.Object> parameters, System.Boolean setType)
    void SerializeOperationRequest(::ExitGames::Client::Photon::StreamBuffer* stream, uint8_t operationCode, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>* parameters, bool setType);
    // public override System.Void SerializeOperationRequest(ExitGames.Client.Photon.StreamBuffer stream, System.Byte operationCode, ExitGames.Client.Photon.ParameterDictionary parameters, System.Boolean setType)
    // Offset: 0x16EDEB8
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Void IProtocol::SerializeOperationRequest(ExitGames.Client.Photon.StreamBuffer stream, System.Byte operationCode, ExitGames.Client.Photon.ParameterDictionary parameters, System.Boolean setType)
    void SerializeOperationRequest(::ExitGames::Client::Photon::StreamBuffer* stream, uint8_t operationCode, ::ExitGames::Client::Photon::ParameterDictionary* parameters, bool setType);
    // public override ExitGames.Client.Photon.OperationRequest DeserializeOperationRequest(ExitGames.Client.Photon.StreamBuffer din, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    // Offset: 0x16EE0C4
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: ExitGames.Client.Photon.OperationRequest IProtocol::DeserializeOperationRequest(ExitGames.Client.Photon.StreamBuffer din, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    ::ExitGames::Client::Photon::OperationRequest* DeserializeOperationRequest(::ExitGames::Client::Photon::StreamBuffer* din, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags);
    // public override System.Void SerializeOperationResponse(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.OperationResponse serObject, System.Boolean setType)
    // Offset: 0x16EE28C
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Void IProtocol::SerializeOperationResponse(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.OperationResponse serObject, System.Boolean setType)
    void SerializeOperationResponse(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::OperationResponse* serObject, bool setType);
    // public override ExitGames.Client.Photon.DisconnectMessage DeserializeDisconnectMessage(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16EE354
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: ExitGames.Client.Photon.DisconnectMessage IProtocol::DeserializeDisconnectMessage(ExitGames.Client.Photon.StreamBuffer stream)
    ::ExitGames::Client::Photon::DisconnectMessage* DeserializeDisconnectMessage(::ExitGames::Client::Photon::StreamBuffer* stream);
    // public override ExitGames.Client.Photon.OperationResponse DeserializeOperationResponse(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    // Offset: 0x16EE580
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: ExitGames.Client.Photon.OperationResponse IProtocol::DeserializeOperationResponse(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    ::ExitGames::Client::Photon::OperationResponse* DeserializeOperationResponse(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags);
    // public override System.Void SerializeEventData(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.EventData serObject, System.Boolean setType)
    // Offset: 0x16EE6A4
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Void IProtocol::SerializeEventData(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.EventData serObject, System.Boolean setType)
    void SerializeEventData(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::EventData* serObject, bool setType);
    // public override ExitGames.Client.Photon.EventData DeserializeEventData(ExitGames.Client.Photon.StreamBuffer din, ExitGames.Client.Photon.EventData target, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    // Offset: 0x16EE710
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: ExitGames.Client.Photon.EventData IProtocol::DeserializeEventData(ExitGames.Client.Photon.StreamBuffer din, ExitGames.Client.Photon.EventData target, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    ::ExitGames::Client::Photon::EventData* DeserializeEventData(::ExitGames::Client::Photon::StreamBuffer* din, ::ExitGames::Client::Photon::EventData* target, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags);
    // public override System.Void Serialize(ExitGames.Client.Photon.StreamBuffer dout, System.Object serObject, System.Boolean setType)
    // Offset: 0x16EE7CC
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Void IProtocol::Serialize(ExitGames.Client.Photon.StreamBuffer dout, System.Object serObject, System.Boolean setType)
    void Serialize(::ExitGames::Client::Photon::StreamBuffer* dout, ::Il2CppObject* serObject, bool setType);
    // public override System.Void SerializeShort(ExitGames.Client.Photon.StreamBuffer dout, System.Int16 serObject, System.Boolean setType)
    // Offset: 0x16F065C
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Void IProtocol::SerializeShort(ExitGames.Client.Photon.StreamBuffer dout, System.Int16 serObject, System.Boolean setType)
    void SerializeShort(::ExitGames::Client::Photon::StreamBuffer* dout, int16_t serObject, bool setType);
    // public override System.Void SerializeString(ExitGames.Client.Photon.StreamBuffer stream, System.String value, System.Boolean setType)
    // Offset: 0x16F0784
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Void IProtocol::SerializeString(ExitGames.Client.Photon.StreamBuffer stream, System.String value, System.Boolean setType)
    void SerializeString(::ExitGames::Client::Photon::StreamBuffer* stream, ::StringW value, bool setType);
    // public override System.Object Deserialize(ExitGames.Client.Photon.StreamBuffer din, System.Byte type, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    // Offset: 0x16F1128
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Object IProtocol::Deserialize(ExitGames.Client.Photon.StreamBuffer din, System.Byte type, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    ::Il2CppObject* Deserialize(::ExitGames::Client::Photon::StreamBuffer* din, uint8_t type, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags);
    // public override System.Byte DeserializeByte(ExitGames.Client.Photon.StreamBuffer din)
    // Offset: 0x16F2C4C
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Byte IProtocol::DeserializeByte(ExitGames.Client.Photon.StreamBuffer din)
    uint8_t DeserializeByte(::ExitGames::Client::Photon::StreamBuffer* din);
    // public override System.Int16 DeserializeShort(ExitGames.Client.Photon.StreamBuffer din)
    // Offset: 0x16F2C68
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Int16 IProtocol::DeserializeShort(ExitGames.Client.Photon.StreamBuffer din)
    int16_t DeserializeShort(::ExitGames::Client::Photon::StreamBuffer* din);
  }; // ExitGames.Client.Photon.Protocol16
  #pragma pack(pop)
  static check_size<sizeof(Protocol16), 96 + sizeof(::ArrayW<uint8_t>)> __ExitGames_Client_Photon_Protocol16SizeCheck;
  static_assert(sizeof(Protocol16) == 0x68);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExitGames::Client::Photon::Protocol16::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeCustom
// Il2CppName: SerializeCustom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*)>(&ExitGames::Client::Photon::Protocol16::SerializeCustom)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeCustom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeCustom
// Il2CppName: DeserializeCustom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, uint8_t, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags)>(&ExitGames::Client::Photon::Protocol16::DeserializeCustom)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* customTypeCode = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeCustom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din, customTypeCode, flags});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::GetTypeOfCode
// Il2CppName: GetTypeOfCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (ExitGames::Client::Photon::Protocol16::*)(uint8_t)>(&ExitGames::Client::Photon::Protocol16::GetTypeOfCode)> {
  static const MethodInfo* get() {
    static auto* typeCode = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "GetTypeOfCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typeCode});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::GetCodeOfType
// Il2CppName: GetCodeOfType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::Protocol16::GpType (ExitGames::Client::Photon::Protocol16::*)(::System::Type*)>(&ExitGames::Client::Photon::Protocol16::GetCodeOfType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "GetCodeOfType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::CreateArrayByType
// Il2CppName: CreateArrayByType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Array* (ExitGames::Client::Photon::Protocol16::*)(uint8_t, int16_t)>(&ExitGames::Client::Photon::Protocol16::CreateArrayByType)> {
  static const MethodInfo* get() {
    static auto* arrayType = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "CreateArrayByType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arrayType, length});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeOperationRequest
// Il2CppName: SerializeOperationRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::OperationRequest*, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeOperationRequest)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* operation = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "OperationRequest")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeOperationRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, operation, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeParameterTable
// Il2CppName: SerializeParameterTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>*)>(&ExitGames::Client::Photon::Protocol16::SerializeParameterTable)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* parameters = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeParameterTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, parameters});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeParameterTable
// Il2CppName: SerializeParameterTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::ParameterDictionary*)>(&ExitGames::Client::Photon::Protocol16::SerializeParameterTable)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeParameterTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, parameters});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeParameterTable
// Il2CppName: DeserializeParameterTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>* (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>*)>(&ExitGames::Client::Photon::Protocol16::DeserializeParameterTable)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* target = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeParameterTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, target});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeParameterDictionary
// Il2CppName: DeserializeParameterDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::ParameterDictionary* (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::ParameterDictionary*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags)>(&ExitGames::Client::Photon::Protocol16::DeserializeParameterDictionary)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeParameterDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, target, flags});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeByte
// Il2CppName: SerializeByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, uint8_t, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeByte)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeBoolean
// Il2CppName: SerializeBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, bool, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeBoolean)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeLengthAsShort
// Il2CppName: SerializeLengthAsShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, int, ::StringW)>(&ExitGames::Client::Photon::Protocol16::SerializeLengthAsShort)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeLengthAsShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, type});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeInteger
// Il2CppName: SerializeInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, int, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeInteger)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeLong
// Il2CppName: SerializeLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, int64_t, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeLong)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeFloat
// Il2CppName: SerializeFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, float, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeFloat)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeDouble
// Il2CppName: SerializeDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, double, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeDouble)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeArray
// Il2CppName: SerializeArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::System::Array*, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeArray)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeByteArray
// Il2CppName: SerializeByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ArrayW<uint8_t>, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeByteArray)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeByteArraySegment
// Il2CppName: SerializeByteArraySegment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ArrayW<uint8_t>, int, int, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeByteArraySegment)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeByteArraySegment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, offset, count, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeIntArrayOptimized
// Il2CppName: SerializeIntArrayOptimized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ArrayW<int>, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeIntArrayOptimized)> {
  static const MethodInfo* get() {
    static auto* inWriter = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeIntArrayOptimized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inWriter, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeStringArray
// Il2CppName: SerializeStringArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ArrayW<::StringW>, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeStringArray)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeStringArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeObjectArray
// Il2CppName: SerializeObjectArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::System::Collections::IList*, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeObjectArray)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* objects = &::il2cpp_utils::GetClassFromName("System.Collections", "IList")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeObjectArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, objects, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeHashTable
// Il2CppName: SerializeHashTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::Hashtable*, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeHashTable)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeHashTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeDictionary
// Il2CppName: SerializeDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::System::Collections::IDictionary*, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeDictionary)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("System.Collections", "IDictionary")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeDictionaryHeader
// Il2CppName: SerializeDictionaryHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::System::Type*)>(&ExitGames::Client::Photon::Protocol16::SerializeDictionaryHeader)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* dictType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeDictionaryHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer, dictType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeDictionaryHeader
// Il2CppName: SerializeDictionaryHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*, ByRef<bool>, ByRef<bool>)>(&ExitGames::Client::Photon::Protocol16::SerializeDictionaryHeader)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* dict = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* setKeyType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    static auto* setValueType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeDictionaryHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer, dict, setKeyType, setValueType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeDictionaryElements
// Il2CppName: SerializeDictionaryElements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*, bool, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeDictionaryElements)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* dict = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* setKeyType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* setValueType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeDictionaryElements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer, dict, setKeyType, setValueType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeBoolean
// Il2CppName: DeserializeBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol16::DeserializeBoolean)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeInteger
// Il2CppName: DeserializeInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol16::DeserializeInteger)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeLong
// Il2CppName: DeserializeLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol16::DeserializeLong)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeFloat
// Il2CppName: DeserializeFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol16::DeserializeFloat)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeDouble
// Il2CppName: DeserializeDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol16::DeserializeDouble)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeString
// Il2CppName: DeserializeString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol16::DeserializeString)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeArray
// Il2CppName: DeserializeArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Array* (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol16::DeserializeArray)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeByteArray
// Il2CppName: DeserializeByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, int)>(&ExitGames::Client::Photon::Protocol16::DeserializeByteArray)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din, size});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeIntArray
// Il2CppName: DeserializeIntArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, int)>(&ExitGames::Client::Photon::Protocol16::DeserializeIntArray)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeIntArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din, size});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeStringArray
// Il2CppName: DeserializeStringArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol16::DeserializeStringArray)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeStringArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeObjectArray
// Il2CppName: DeserializeObjectArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppObject*> (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol16::DeserializeObjectArray)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeObjectArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeHashTable
// Il2CppName: DeserializeHashTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::Hashtable* (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol16::DeserializeHashTable)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeHashTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeDictionary
// Il2CppName: DeserializeDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IDictionary* (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol16::DeserializeDictionary)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeDictionaryArray
// Il2CppName: DeserializeDictionaryArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, int16_t, ByRef<::System::Array*>)>(&ExitGames::Client::Photon::Protocol16::DeserializeDictionaryArray)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* arrayResult = &::il2cpp_utils::GetClassFromName("System", "Array")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeDictionaryArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din, size, arrayResult});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeDictionaryType
// Il2CppName: DeserializeDictionaryType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ByRef<uint8_t>, ByRef<uint8_t>)>(&ExitGames::Client::Photon::Protocol16::DeserializeDictionaryType)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* keyTypeCode = &::il2cpp_utils::GetClassFromName("System", "Byte")->this_arg;
    static auto* valTypeCode = &::il2cpp_utils::GetClassFromName("System", "Byte")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeDictionaryType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader, keyTypeCode, valTypeCode});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::get_ProtocolType
// Il2CppName: get_ProtocolType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (ExitGames::Client::Photon::Protocol16::*)()>(&ExitGames::Client::Photon::Protocol16::get_ProtocolType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "get_ProtocolType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::get_VersionBytes
// Il2CppName: get_VersionBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (ExitGames::Client::Photon::Protocol16::*)()>(&ExitGames::Client::Photon::Protocol16::get_VersionBytes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "get_VersionBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeOperationRequest
// Il2CppName: SerializeOperationRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, uint8_t, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>*, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeOperationRequest)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* operationCode = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* parameters = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeOperationRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, operationCode, parameters, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeOperationRequest
// Il2CppName: SerializeOperationRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, uint8_t, ::ExitGames::Client::Photon::ParameterDictionary*, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeOperationRequest)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* operationCode = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeOperationRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, operationCode, parameters, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeOperationRequest
// Il2CppName: DeserializeOperationRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::OperationRequest* (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags)>(&ExitGames::Client::Photon::Protocol16::DeserializeOperationRequest)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeOperationRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din, flags});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeOperationResponse
// Il2CppName: SerializeOperationResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::OperationResponse*, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeOperationResponse)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "OperationResponse")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeOperationResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeDisconnectMessage
// Il2CppName: DeserializeDisconnectMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::DisconnectMessage* (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol16::DeserializeDisconnectMessage)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeDisconnectMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeOperationResponse
// Il2CppName: DeserializeOperationResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::OperationResponse* (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags)>(&ExitGames::Client::Photon::Protocol16::DeserializeOperationResponse)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeOperationResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, flags});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeEventData
// Il2CppName: SerializeEventData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::EventData*, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeEventData)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "EventData")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeEventData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeEventData
// Il2CppName: DeserializeEventData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::EventData* (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::EventData*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags)>(&ExitGames::Client::Photon::Protocol16::DeserializeEventData)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "EventData")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeEventData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din, target, flags});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*, bool)>(&ExitGames::Client::Photon::Protocol16::Serialize)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeShort
// Il2CppName: SerializeShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, int16_t, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeShort)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::SerializeString
// Il2CppName: SerializeString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, ::StringW, bool)>(&ExitGames::Client::Photon::Protocol16::SerializeString)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "SerializeString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::Deserialize
// Il2CppName: Deserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*, uint8_t, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags)>(&ExitGames::Client::Photon::Protocol16::Deserialize)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "Deserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din, type, flags});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeByte
// Il2CppName: DeserializeByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol16::DeserializeByte)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol16::DeserializeShort
// Il2CppName: DeserializeShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int16_t (ExitGames::Client::Photon::Protocol16::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol16::DeserializeShort)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol16*), "DeserializeShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din});
  }
};
