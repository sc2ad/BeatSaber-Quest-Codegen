// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: ExitGames.Client.Photon.PeerBase
#include "ExitGames/Client/Photon/PeerBase.hpp"
// Including type: ExitGames.Client.Photon.StatusCode
#include "ExitGames/Client/Photon/StatusCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExitGames::Client::Photon::PeerBase::$$c__DisplayClass109_0);
DEFINE_IL2CPP_ARG_TYPE(::ExitGames::Client::Photon::PeerBase::$$c__DisplayClass109_0*, "ExitGames.Client.Photon", "PeerBase/<>c__DisplayClass109_0");
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: ExitGames.Client.Photon.PeerBase/ExitGames.Client.Photon.<>c__DisplayClass109_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class PeerBase::$$c__DisplayClass109_0 : public ::Il2CppObject {
    public:
    public:
    // public ExitGames.Client.Photon.PeerBase <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::ExitGames::Client::Photon::PeerBase* $$4__this;
    // Field size check
    static_assert(sizeof(::ExitGames::Client::Photon::PeerBase*) == 0x8);
    // public ExitGames.Client.Photon.StatusCode statusValue
    // Size: 0x4
    // Offset: 0x18
    ::ExitGames::Client::Photon::StatusCode statusValue;
    // Field size check
    static_assert(sizeof(::ExitGames::Client::Photon::StatusCode) == 0x4);
    public:
    // Get instance field reference: public ExitGames.Client.Photon.PeerBase <>4__this
    [[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::PeerBase*& dyn_$$4__this();
    // Get instance field reference: public ExitGames.Client.Photon.StatusCode statusValue
    [[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::StatusCode& dyn_statusValue();
    // public System.Void .ctor()
    // Offset: 0x113C920
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PeerBase::$$c__DisplayClass109_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::PeerBase::$$c__DisplayClass109_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PeerBase::$$c__DisplayClass109_0*, creationType>()));
    }
    // System.Void <EnqueueStatusCallback>b__0()
    // Offset: 0x113CE38
    void $EnqueueStatusCallback$b__0();
  }; // ExitGames.Client.Photon.PeerBase/ExitGames.Client.Photon.<>c__DisplayClass109_0
  #pragma pack(pop)
  static check_size<sizeof(PeerBase::$$c__DisplayClass109_0), 24 + sizeof(::ExitGames::Client::Photon::StatusCode)> __ExitGames_Client_Photon_PeerBase_$$c__DisplayClass109_0SizeCheck;
  static_assert(sizeof(PeerBase::$$c__DisplayClass109_0) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExitGames::Client::Photon::PeerBase::$$c__DisplayClass109_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: ExitGames::Client::Photon::PeerBase::$$c__DisplayClass109_0::$EnqueueStatusCallback$b__0
// Il2CppName: <EnqueueStatusCallback>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::PeerBase::$$c__DisplayClass109_0::*)()>(&ExitGames::Client::Photon::PeerBase::$$c__DisplayClass109_0::$EnqueueStatusCallback$b__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::PeerBase::$$c__DisplayClass109_0*), "<EnqueueStatusCallback>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
