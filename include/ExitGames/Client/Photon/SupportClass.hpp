// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: NonAllocDictionary`2<K, V>
  template<typename K, typename V>
  class NonAllocDictionary_2;
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: Thread
  class Thread;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MethodInfo
  class MethodInfo;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
  // Forward declaring type: Exception
  class Exception;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: TextWriter
  class TextWriter;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IDictionary
  class IDictionary;
}
// Completed forward declares
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: SupportClass
  class SupportClass;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExitGames::Client::Photon::SupportClass);
DEFINE_IL2CPP_ARG_TYPE(::ExitGames::Client::Photon::SupportClass*, "ExitGames.Client.Photon", "SupportClass");
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: ExitGames.Client.Photon.SupportClass
  // [TokenAttribute] Offset: FFFFFFFF
  class SupportClass : public ::Il2CppObject {
    public:
    // Nested type: ::ExitGames::Client::Photon::SupportClass::IntegerMillisecondsDelegate
    class IntegerMillisecondsDelegate;
    // Nested type: ::ExitGames::Client::Photon::SupportClass::ThreadSafeRandom
    class ThreadSafeRandom;
    // Nested type: ::ExitGames::Client::Photon::SupportClass::$$c__DisplayClass6_0
    class $$c__DisplayClass6_0;
    // Nested type: ::ExitGames::Client::Photon::SupportClass::$$c
    class $$c;
    // Get static field: static private System.Collections.Generic.List`1<System.Threading.Thread> threadList
    static ::System::Collections::Generic::List_1<::System::Threading::Thread*>* _get_threadList();
    // Set static field: static private System.Collections.Generic.List`1<System.Threading.Thread> threadList
    static void _set_threadList(::System::Collections::Generic::List_1<::System::Threading::Thread*>* value);
    // Get static field: static private readonly System.Object ThreadListLock
    static ::Il2CppObject* _get_ThreadListLock();
    // Set static field: static private readonly System.Object ThreadListLock
    static void _set_ThreadListLock(::Il2CppObject* value);
    // [ObsoleteAttribute] Offset: 0x94CEBC
    // Get static field: static protected internal ExitGames.Client.Photon.SupportClass/ExitGames.Client.Photon.IntegerMillisecondsDelegate IntegerMilliseconds
    static ::ExitGames::Client::Photon::SupportClass::IntegerMillisecondsDelegate* _get_IntegerMilliseconds();
    // Set static field: static protected internal ExitGames.Client.Photon.SupportClass/ExitGames.Client.Photon.IntegerMillisecondsDelegate IntegerMilliseconds
    static void _set_IntegerMilliseconds(::ExitGames::Client::Photon::SupportClass::IntegerMillisecondsDelegate* value);
    // Get static field: static private System.UInt32[] crcLookupTable
    static ::ArrayW<uint> _get_crcLookupTable();
    // Set static field: static private System.UInt32[] crcLookupTable
    static void _set_crcLookupTable(::ArrayW<uint> value);
    // public System.Void .ctor()
    // Offset: 0x1B701F4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SupportClass* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::SupportClass::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SupportClass*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x1B701FC
    static void _cctor();
    // static public System.Collections.Generic.List`1<System.Reflection.MethodInfo> GetMethods(System.Type type, System.Type attribute)
    // Offset: 0x1B6D950
    static ::System::Collections::Generic::List_1<::System::Reflection::MethodInfo*>* GetMethods(::System::Type* type, ::System::Type* attribute);
    // static public System.Int32 GetTickCount()
    // Offset: 0x1B6DAD8
    static int GetTickCount();
    // static public System.Byte StartBackgroundCalls(System.Func`1<System.Boolean> myThread, System.Int32 millisecondsInterval, System.String taskName)
    // Offset: 0x1B6DD5C
    static uint8_t StartBackgroundCalls(::System::Func_1<bool>* myThread, int millisecondsInterval, ::StringW taskName);
    // static public System.Boolean StopBackgroundCalls(System.Byte id)
    // Offset: 0x1B6E1C0
    static bool StopBackgroundCalls(uint8_t id);
    // static public System.Boolean StopAllBackgroundCalls()
    // Offset: 0x1B6E458
    static bool StopAllBackgroundCalls();
    // static public System.Void WriteStackTrace(System.Exception throwable, System.IO.TextWriter stream)
    // Offset: 0x1B6E708
    static void WriteStackTrace(::System::Exception* throwable, ::System::IO::TextWriter* stream);
    // static public System.Void WriteStackTrace(System.Exception throwable)
    // Offset: 0x1B6E7B8
    static void WriteStackTrace(::System::Exception* throwable);
    // static public System.String DictionaryToString(System.Collections.IDictionary dictionary, System.Boolean includeTypes)
    // Offset: 0x1B6E820
    static ::StringW DictionaryToString(::System::Collections::IDictionary* dictionary, bool includeTypes);
    // static public System.String DictionaryToString(ExitGames.Client.Photon.NonAllocDictionary`2<System.Byte,System.Object> dictionary, System.Boolean includeTypes)
    // Offset: 0x1B6F588
    static ::StringW DictionaryToString(::ExitGames::Client::Photon::NonAllocDictionary_2<uint8_t, ::Il2CppObject*>* dictionary, bool includeTypes);
    // static public System.String HashtableToString(ExitGames.Client.Photon.Hashtable hash)
    // Offset: 0x1B6FF04
    static ::StringW HashtableToString(::ExitGames::Client::Photon::Hashtable* hash);
    // static public System.String ByteArrayToString(System.Byte[] list)
    // Offset: 0x1B6FF6C
    static ::StringW ByteArrayToString(::ArrayW<uint8_t> list);
    // static private System.UInt32[] InitializeTable(System.UInt32 polynomial)
    // Offset: 0x1B6FFF8
    static ::ArrayW<uint> InitializeTable(uint polynomial);
    // static public System.UInt32 CalculateCrc(System.Byte[] buffer, System.Int32 length)
    // Offset: 0x1B700A0
    static uint CalculateCrc(::ArrayW<uint8_t> buffer, int length);
  }; // ExitGames.Client.Photon.SupportClass
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExitGames::Client::Photon::SupportClass::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: ExitGames::Client::Photon::SupportClass::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExitGames::Client::Photon::SupportClass::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SupportClass*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::SupportClass::GetMethods
// Il2CppName: GetMethods
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::System::Reflection::MethodInfo*>* (*)(::System::Type*, ::System::Type*)>(&ExitGames::Client::Photon::SupportClass::GetMethods)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* attribute = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SupportClass*), "GetMethods", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, attribute});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::SupportClass::GetTickCount
// Il2CppName: GetTickCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&ExitGames::Client::Photon::SupportClass::GetTickCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SupportClass*), "GetTickCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::SupportClass::StartBackgroundCalls
// Il2CppName: StartBackgroundCalls
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (*)(::System::Func_1<bool>*, int, ::StringW)>(&ExitGames::Client::Photon::SupportClass::StartBackgroundCalls)> {
  static const MethodInfo* get() {
    static auto* myThread = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    static auto* millisecondsInterval = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* taskName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SupportClass*), "StartBackgroundCalls", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{myThread, millisecondsInterval, taskName});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::SupportClass::StopBackgroundCalls
// Il2CppName: StopBackgroundCalls
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint8_t)>(&ExitGames::Client::Photon::SupportClass::StopBackgroundCalls)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SupportClass*), "StopBackgroundCalls", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::SupportClass::StopAllBackgroundCalls
// Il2CppName: StopAllBackgroundCalls
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExitGames::Client::Photon::SupportClass::StopAllBackgroundCalls)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SupportClass*), "StopAllBackgroundCalls", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::SupportClass::WriteStackTrace
// Il2CppName: WriteStackTrace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Exception*, ::System::IO::TextWriter*)>(&ExitGames::Client::Photon::SupportClass::WriteStackTrace)> {
  static const MethodInfo* get() {
    static auto* throwable = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("System.IO", "TextWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SupportClass*), "WriteStackTrace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{throwable, stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::SupportClass::WriteStackTrace
// Il2CppName: WriteStackTrace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Exception*)>(&ExitGames::Client::Photon::SupportClass::WriteStackTrace)> {
  static const MethodInfo* get() {
    static auto* throwable = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SupportClass*), "WriteStackTrace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{throwable});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::SupportClass::DictionaryToString
// Il2CppName: DictionaryToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::Collections::IDictionary*, bool)>(&ExitGames::Client::Photon::SupportClass::DictionaryToString)> {
  static const MethodInfo* get() {
    static auto* dictionary = &::il2cpp_utils::GetClassFromName("System.Collections", "IDictionary")->byval_arg;
    static auto* includeTypes = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SupportClass*), "DictionaryToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dictionary, includeTypes});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::SupportClass::DictionaryToString
// Il2CppName: DictionaryToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::ExitGames::Client::Photon::NonAllocDictionary_2<uint8_t, ::Il2CppObject*>*, bool)>(&ExitGames::Client::Photon::SupportClass::DictionaryToString)> {
  static const MethodInfo* get() {
    static auto* dictionary = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "NonAllocDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    static auto* includeTypes = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SupportClass*), "DictionaryToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dictionary, includeTypes});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::SupportClass::HashtableToString
// Il2CppName: HashtableToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::ExitGames::Client::Photon::Hashtable*)>(&ExitGames::Client::Photon::SupportClass::HashtableToString)> {
  static const MethodInfo* get() {
    static auto* hash = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SupportClass*), "HashtableToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hash});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::SupportClass::ByteArrayToString
// Il2CppName: ByteArrayToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::ArrayW<uint8_t>)>(&ExitGames::Client::Photon::SupportClass::ByteArrayToString)> {
  static const MethodInfo* get() {
    static auto* list = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SupportClass*), "ByteArrayToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{list});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::SupportClass::InitializeTable
// Il2CppName: InitializeTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint> (*)(uint)>(&ExitGames::Client::Photon::SupportClass::InitializeTable)> {
  static const MethodInfo* get() {
    static auto* polynomial = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SupportClass*), "InitializeTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{polynomial});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::SupportClass::CalculateCrc
// Il2CppName: CalculateCrc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::ArrayW<uint8_t>, int)>(&ExitGames::Client::Photon::SupportClass::CalculateCrc)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SupportClass*), "CalculateCrc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, length});
  }
};
