// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: ConnectionStateValue
  struct ConnectionStateValue;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::ExitGames::Client::Photon::ConnectionStateValue, "ExitGames.Client.Photon", "ConnectionStateValue");
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Size: 0x1
  #pragma pack(push, 1)
  // Autogenerated type: ExitGames.Client.Photon.ConnectionStateValue
  // [TokenAttribute] Offset: FFFFFFFF
  struct ConnectionStateValue/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Byte value__
    // Size: 0x1
    // Offset: 0x0
    uint8_t value;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Creating value type constructor for type: ConnectionStateValue
    constexpr ConnectionStateValue(uint8_t value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint8_t
    constexpr operator uint8_t() const noexcept {
      return value;
    }
    // static field const value: static public ExitGames.Client.Photon.ConnectionStateValue Disconnected
    static constexpr const uint8_t Disconnected = 0u;
    // Get static field: static public ExitGames.Client.Photon.ConnectionStateValue Disconnected
    static ::ExitGames::Client::Photon::ConnectionStateValue _get_Disconnected();
    // Set static field: static public ExitGames.Client.Photon.ConnectionStateValue Disconnected
    static void _set_Disconnected(::ExitGames::Client::Photon::ConnectionStateValue value);
    // static field const value: static public ExitGames.Client.Photon.ConnectionStateValue Connecting
    static constexpr const uint8_t Connecting = 1u;
    // Get static field: static public ExitGames.Client.Photon.ConnectionStateValue Connecting
    static ::ExitGames::Client::Photon::ConnectionStateValue _get_Connecting();
    // Set static field: static public ExitGames.Client.Photon.ConnectionStateValue Connecting
    static void _set_Connecting(::ExitGames::Client::Photon::ConnectionStateValue value);
    // static field const value: static public ExitGames.Client.Photon.ConnectionStateValue Connected
    static constexpr const uint8_t Connected = 3u;
    // Get static field: static public ExitGames.Client.Photon.ConnectionStateValue Connected
    static ::ExitGames::Client::Photon::ConnectionStateValue _get_Connected();
    // Set static field: static public ExitGames.Client.Photon.ConnectionStateValue Connected
    static void _set_Connected(::ExitGames::Client::Photon::ConnectionStateValue value);
    // static field const value: static public ExitGames.Client.Photon.ConnectionStateValue Disconnecting
    static constexpr const uint8_t Disconnecting = 4u;
    // Get static field: static public ExitGames.Client.Photon.ConnectionStateValue Disconnecting
    static ::ExitGames::Client::Photon::ConnectionStateValue _get_Disconnecting();
    // Set static field: static public ExitGames.Client.Photon.ConnectionStateValue Disconnecting
    static void _set_Disconnecting(::ExitGames::Client::Photon::ConnectionStateValue value);
    // static field const value: static public ExitGames.Client.Photon.ConnectionStateValue AcknowledgingDisconnect
    static constexpr const uint8_t AcknowledgingDisconnect = 5u;
    // Get static field: static public ExitGames.Client.Photon.ConnectionStateValue AcknowledgingDisconnect
    static ::ExitGames::Client::Photon::ConnectionStateValue _get_AcknowledgingDisconnect();
    // Set static field: static public ExitGames.Client.Photon.ConnectionStateValue AcknowledgingDisconnect
    static void _set_AcknowledgingDisconnect(::ExitGames::Client::Photon::ConnectionStateValue value);
    // static field const value: static public ExitGames.Client.Photon.ConnectionStateValue Zombie
    static constexpr const uint8_t Zombie = 6u;
    // Get static field: static public ExitGames.Client.Photon.ConnectionStateValue Zombie
    static ::ExitGames::Client::Photon::ConnectionStateValue _get_Zombie();
    // Set static field: static public ExitGames.Client.Photon.ConnectionStateValue Zombie
    static void _set_Zombie(::ExitGames::Client::Photon::ConnectionStateValue value);
    // Get instance field reference: public System.Byte value__
    [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
  }; // ExitGames.Client.Photon.ConnectionStateValue
  #pragma pack(pop)
  static check_size<sizeof(ConnectionStateValue), 0 + sizeof(uint8_t)> __ExitGames_Client_Photon_ConnectionStateValueSizeCheck;
  static_assert(sizeof(ConnectionStateValue) == 0x1);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
