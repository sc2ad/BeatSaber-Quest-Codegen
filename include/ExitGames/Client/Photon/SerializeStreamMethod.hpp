// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: StreamBuffer
  class StreamBuffer;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: SerializeStreamMethod
  class SerializeStreamMethod;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExitGames::Client::Photon::SerializeStreamMethod);
DEFINE_IL2CPP_ARG_TYPE(::ExitGames::Client::Photon::SerializeStreamMethod*, "ExitGames.Client.Photon", "SerializeStreamMethod");
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: ExitGames.Client.Photon.SerializeStreamMethod
  // [TokenAttribute] Offset: FFFFFFFF
  class SerializeStreamMethod : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x16FB75C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SerializeStreamMethod* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::SerializeStreamMethod::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SerializeStreamMethod*, creationType>(object, method)));
    }
    // public System.Int16 Invoke(ExitGames.Client.Photon.StreamBuffer outStream, System.Object customObject)
    // Offset: 0x16ED018
    int16_t Invoke(::ExitGames::Client::Photon::StreamBuffer* outStream, ::Il2CppObject* customObject);
    // public System.IAsyncResult BeginInvoke(ExitGames.Client.Photon.StreamBuffer outStream, System.Object customObject, System.AsyncCallback callback, System.Object object)
    // Offset: 0x16FB76C
    ::System::IAsyncResult* BeginInvoke(::ExitGames::Client::Photon::StreamBuffer* outStream, ::Il2CppObject* customObject, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public System.Int16 EndInvoke(System.IAsyncResult result)
    // Offset: 0x16FB79C
    int16_t EndInvoke(::System::IAsyncResult* result);
  }; // ExitGames.Client.Photon.SerializeStreamMethod
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExitGames::Client::Photon::SerializeStreamMethod::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: ExitGames::Client::Photon::SerializeStreamMethod::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int16_t (ExitGames::Client::Photon::SerializeStreamMethod::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*)>(&ExitGames::Client::Photon::SerializeStreamMethod::Invoke)> {
  static const MethodInfo* get() {
    static auto* outStream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* customObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SerializeStreamMethod*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outStream, customObject});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::SerializeStreamMethod::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (ExitGames::Client::Photon::SerializeStreamMethod::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*, ::System::AsyncCallback*, ::Il2CppObject*)>(&ExitGames::Client::Photon::SerializeStreamMethod::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* outStream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* customObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SerializeStreamMethod*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outStream, customObject, callback, object});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::SerializeStreamMethod::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int16_t (ExitGames::Client::Photon::SerializeStreamMethod::*)(::System::IAsyncResult*)>(&ExitGames::Client::Photon::SerializeStreamMethod::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::SerializeStreamMethod*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
