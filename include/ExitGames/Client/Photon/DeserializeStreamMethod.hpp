// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: StreamBuffer
  class StreamBuffer;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: DeserializeStreamMethod
  class DeserializeStreamMethod;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExitGames::Client::Photon::DeserializeStreamMethod);
DEFINE_IL2CPP_ARG_TYPE(::ExitGames::Client::Photon::DeserializeStreamMethod*, "ExitGames.Client.Photon", "DeserializeStreamMethod");
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: ExitGames.Client.Photon.DeserializeStreamMethod
  // [TokenAttribute] Offset: FFFFFFFF
  class DeserializeStreamMethod : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x112A0D0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DeserializeStreamMethod* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::DeserializeStreamMethod::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DeserializeStreamMethod*, creationType>(object, method)));
    }
    // public System.Object Invoke(ExitGames.Client.Photon.StreamBuffer inStream, System.Int16 length)
    // Offset: 0x112A0E0
    ::Il2CppObject* Invoke(::ExitGames::Client::Photon::StreamBuffer* inStream, int16_t length);
    // public System.IAsyncResult BeginInvoke(ExitGames.Client.Photon.StreamBuffer inStream, System.Int16 length, System.AsyncCallback callback, System.Object object)
    // Offset: 0x112A514
    ::System::IAsyncResult* BeginInvoke(::ExitGames::Client::Photon::StreamBuffer* inStream, int16_t length, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public System.Object EndInvoke(System.IAsyncResult result)
    // Offset: 0x112A5B0
    ::Il2CppObject* EndInvoke(::System::IAsyncResult* result);
  }; // ExitGames.Client.Photon.DeserializeStreamMethod
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExitGames::Client::Photon::DeserializeStreamMethod::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: ExitGames::Client::Photon::DeserializeStreamMethod::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ExitGames::Client::Photon::DeserializeStreamMethod::*)(::ExitGames::Client::Photon::StreamBuffer*, int16_t)>(&ExitGames::Client::Photon::DeserializeStreamMethod::Invoke)> {
  static const MethodInfo* get() {
    static auto* inStream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::DeserializeStreamMethod*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inStream, length});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::DeserializeStreamMethod::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (ExitGames::Client::Photon::DeserializeStreamMethod::*)(::ExitGames::Client::Photon::StreamBuffer*, int16_t, ::System::AsyncCallback*, ::Il2CppObject*)>(&ExitGames::Client::Photon::DeserializeStreamMethod::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* inStream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::DeserializeStreamMethod*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inStream, length, callback, object});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::DeserializeStreamMethod::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ExitGames::Client::Photon::DeserializeStreamMethod::*)(::System::IAsyncResult*)>(&ExitGames::Client::Photon::DeserializeStreamMethod::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::DeserializeStreamMethod*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
