// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: ExitGames.Client.Photon.IProtocol
#include "ExitGames/Client/Photon/IProtocol.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: StreamBuffer
  class StreamBuffer;
  // Forward declaring type: ParameterDictionary
  class ParameterDictionary;
  // Forward declaring type: ByteArraySlice
  class ByteArraySlice;
  // Forward declaring type: Hashtable
  class Hashtable;
  // Forward declaring type: OperationRequest
  class OperationRequest;
  // Forward declaring type: CustomType
  class CustomType;
  // Forward declaring type: EventData
  class EventData;
  // Forward declaring type: OperationResponse
  class OperationResponse;
  // Forward declaring type: DisconnectMessage
  class DisconnectMessage;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: TypeCode
  struct TypeCode;
  // Forward declaring type: Array
  class Array;
  // Forward declaring type: ArraySegment`1<T>
  template<typename T>
  struct ArraySegment_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IDictionary
  class IDictionary;
  // Forward declaring type: IList
  class IList;
}
// Forward declaring namespace: ExitGames::Client::Photon::StructWrapping
namespace ExitGames::Client::Photon::StructWrapping {
  // Forward declaring type: StructWrapper
  class StructWrapper;
}
// Completed forward declares
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: Protocol18
  class Protocol18;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExitGames::Client::Photon::Protocol18);
DEFINE_IL2CPP_ARG_TYPE(::ExitGames::Client::Photon::Protocol18*, "ExitGames.Client.Photon", "Protocol18");
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: ExitGames.Client.Photon.Protocol18
  // [TokenAttribute] Offset: FFFFFFFF
  class Protocol18 : public ::ExitGames::Client::Photon::IProtocol {
    public:
    // Nested type: ::ExitGames::Client::Photon::Protocol18::GpType
    struct GpType;
    public:
    // private readonly System.Byte[] versionBytes
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<uint8_t> versionBytes;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private readonly System.Double[] memDoubleBlock
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<double> memDoubleBlock;
    // Field size check
    static_assert(sizeof(::ArrayW<double>) == 0x8);
    // private readonly System.Single[] memFloatBlock
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<float> memFloatBlock;
    // Field size check
    static_assert(sizeof(::ArrayW<float>) == 0x8);
    // private readonly System.Byte[] memCustomTypeBodyLengthSerialized
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<uint8_t> memCustomTypeBodyLengthSerialized;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private readonly System.Byte[] memCompressedUInt32
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<uint8_t> memCompressedUInt32;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private System.Byte[] memCompressedUInt64
    // Size: 0x8
    // Offset: 0x40
    ::ArrayW<uint8_t> memCompressedUInt64;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    public:
    // Deleting conversion operator: operator ::ExitGames::Client::Photon::ByteArraySlicePool*
    constexpr operator ::ExitGames::Client::Photon::ByteArraySlicePool*() const noexcept = delete;
    // Get static field: static private readonly System.Byte[] boolMasks
    static ::ArrayW<uint8_t> _get_boolMasks();
    // Set static field: static private readonly System.Byte[] boolMasks
    static void _set_boolMasks(::ArrayW<uint8_t> value);
    // Get instance field reference: private readonly System.Byte[] versionBytes
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_versionBytes();
    // Get instance field reference: private readonly System.Double[] memDoubleBlock
    [[deprecated("Use field access instead!")]] ::ArrayW<double>& dyn_memDoubleBlock();
    // Get instance field reference: private readonly System.Single[] memFloatBlock
    [[deprecated("Use field access instead!")]] ::ArrayW<float>& dyn_memFloatBlock();
    // Get instance field reference: private readonly System.Byte[] memCustomTypeBodyLengthSerialized
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_memCustomTypeBodyLengthSerialized();
    // Get instance field reference: private readonly System.Byte[] memCompressedUInt32
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_memCompressedUInt32();
    // Get instance field reference: private System.Byte[] memCompressedUInt64
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_memCompressedUInt64();
    // static private System.Void .cctor()
    // Offset: 0x16FB5A4
    static void _cctor();
    // static private System.Type GetAllowedDictionaryKeyTypes(ExitGames.Client.Photon.Protocol18/ExitGames.Client.Photon.GpType gpType)
    // Offset: 0x16F3CF8
    static ::System::Type* GetAllowedDictionaryKeyTypes(::ExitGames::Client::Photon::Protocol18::GpType gpType);
    // static private System.Type GetClrArrayType(ExitGames.Client.Photon.Protocol18/ExitGames.Client.Photon.GpType gpType)
    // Offset: 0x16F3E98
    static ::System::Type* GetClrArrayType(::ExitGames::Client::Photon::Protocol18::GpType gpType);
    // private ExitGames.Client.Photon.Protocol18/ExitGames.Client.Photon.GpType GetCodeOfType(System.Type type)
    // Offset: 0x16F4120
    ::ExitGames::Client::Photon::Protocol18::GpType GetCodeOfType(::System::Type* type);
    // private ExitGames.Client.Photon.Protocol18/ExitGames.Client.Photon.GpType GetCodeOfTypeCode(System.TypeCode type)
    // Offset: 0x16F4788
    ::ExitGames::Client::Photon::Protocol18::GpType GetCodeOfTypeCode(::System::TypeCode type);
    // private System.Object Read(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)
    // Offset: 0x16F47EC
    ::Il2CppObject* Read(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags, ::ExitGames::Client::Photon::ParameterDictionary* parameters);
    // private System.Object Read(ExitGames.Client.Photon.StreamBuffer stream, System.Byte gpType, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)
    // Offset: 0x16F3598
    ::Il2CppObject* Read(::ExitGames::Client::Photon::StreamBuffer* stream, uint8_t gpType, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags, ::ExitGames::Client::Photon::ParameterDictionary* parameters);
    // System.Boolean ReadBoolean(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F4A98
    bool ReadBoolean(::ExitGames::Client::Photon::StreamBuffer* stream);
    // System.Byte ReadByte(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F3CDC
    uint8_t ReadByte(::ExitGames::Client::Photon::StreamBuffer* stream);
    // System.Int16 ReadInt16(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F3C48
    int16_t ReadInt16(::ExitGames::Client::Photon::StreamBuffer* stream);
    // System.UInt16 ReadUShort(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F60A8
    uint16_t ReadUShort(::ExitGames::Client::Photon::StreamBuffer* stream);
    // System.Int32 ReadInt32(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F6120
    int ReadInt32(::ExitGames::Client::Photon::StreamBuffer* stream);
    // System.Int64 ReadInt64(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F61D4
    int64_t ReadInt64(::ExitGames::Client::Photon::StreamBuffer* stream);
    // System.Single ReadSingle(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F4AC4
    float ReadSingle(::ExitGames::Client::Photon::StreamBuffer* stream);
    // System.Double ReadDouble(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F4B68
    double ReadDouble(::ExitGames::Client::Photon::StreamBuffer* stream);
    // ExitGames.Client.Photon.ByteArraySlice ReadNonAllocByteArray(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F62F8
    ::ExitGames::Client::Photon::ByteArraySlice* ReadNonAllocByteArray(::ExitGames::Client::Photon::StreamBuffer* stream);
    // System.Byte[] ReadByteArray(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F5340
    ::ArrayW<uint8_t> ReadByteArray(::ExitGames::Client::Photon::StreamBuffer* stream);
    // public System.Object ReadCustomType(ExitGames.Client.Photon.StreamBuffer stream, System.Byte gpType)
    // Offset: 0x16F4844
    ::Il2CppObject* ReadCustomType(::ExitGames::Client::Photon::StreamBuffer* stream, uint8_t gpType);
    // private System.Collections.Generic.Dictionary`2<System.Byte,System.Object> ReadParameterTable(ExitGames.Client.Photon.StreamBuffer stream, System.Collections.Generic.Dictionary`2<System.Byte,System.Object> target, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    // Offset: 0x16F668C
    ::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>* ReadParameterTable(::ExitGames::Client::Photon::StreamBuffer* stream, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>* target, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags);
    // private ExitGames.Client.Photon.ParameterDictionary ReadParameterDictionary(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.ParameterDictionary target, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    // Offset: 0x16F67CC
    ::ExitGames::Client::Photon::ParameterDictionary* ReadParameterDictionary(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::ParameterDictionary* target, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags);
    // public ExitGames.Client.Photon.Hashtable ReadHashtable(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)
    // Offset: 0x16F4D74
    ::ExitGames::Client::Photon::Hashtable* ReadHashtable(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags, ::ExitGames::Client::Photon::ParameterDictionary* parameters);
    // public System.Int32[] ReadIntArray(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F68FC
    ::ArrayW<int> ReadIntArray(::ExitGames::Client::Photon::StreamBuffer* stream);
    // System.String ReadString(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F4C0C
    ::StringW ReadString(::ExitGames::Client::Photon::StreamBuffer* stream);
    // private System.Object ReadCustomTypeArray(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F59CC
    ::Il2CppObject* ReadCustomTypeArray(::ExitGames::Client::Photon::StreamBuffer* stream);
    // private System.Type ReadDictionaryType(ExitGames.Client.Photon.StreamBuffer stream, out ExitGames.Client.Photon.Protocol18/ExitGames.Client.Photon.GpType keyReadType, out ExitGames.Client.Photon.Protocol18/ExitGames.Client.Photon.GpType valueReadType)
    // Offset: 0x16F6C50
    ::System::Type* ReadDictionaryType(::ExitGames::Client::Photon::StreamBuffer* stream, ByRef<::ExitGames::Client::Photon::Protocol18::GpType> keyReadType, ByRef<::ExitGames::Client::Photon::Protocol18::GpType> valueReadType);
    // private System.Type ReadDictionaryType(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F6F0C
    ::System::Type* ReadDictionaryType(::ExitGames::Client::Photon::StreamBuffer* stream);
    // private System.Type GetDictArrayType(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F716C
    ::System::Type* GetDictArrayType(::ExitGames::Client::Photon::StreamBuffer* stream);
    // private System.Collections.IDictionary ReadDictionary(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)
    // Offset: 0x16F4EEC
    ::System::Collections::IDictionary* ReadDictionary(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags, ::ExitGames::Client::Photon::ParameterDictionary* parameters);
    // private System.Boolean ReadDictionaryElements(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.Protocol18/ExitGames.Client.Photon.GpType keyReadType, ExitGames.Client.Photon.Protocol18/ExitGames.Client.Photon.GpType valueReadType, System.Collections.IDictionary dictionary, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)
    // Offset: 0x16F7274
    bool ReadDictionaryElements(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::Protocol18::GpType keyReadType, ::ExitGames::Client::Photon::Protocol18::GpType valueReadType, ::System::Collections::IDictionary* dictionary, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags, ::ExitGames::Client::Photon::ParameterDictionary* parameters);
    // private System.Object[] ReadObjectArray(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)
    // Offset: 0x16F4FF4
    ::ArrayW<::Il2CppObject*> ReadObjectArray(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags, ::ExitGames::Client::Photon::ParameterDictionary* parameters);
    // private ExitGames.Client.Photon.StructWrapping.StructWrapper[] ReadWrapperArray(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)
    // Offset: 0x16F7400
    ::ArrayW<::ExitGames::Client::Photon::StructWrapping::StructWrapper*> ReadWrapperArray(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags, ::ExitGames::Client::Photon::ParameterDictionary* parameters);
    // private System.Boolean[] ReadBooleanArray(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F5108
    ::ArrayW<bool> ReadBooleanArray(::ExitGames::Client::Photon::StreamBuffer* stream);
    // System.Int16[] ReadInt16Array(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F53D4
    ::ArrayW<int16_t> ReadInt16Array(::ExitGames::Client::Photon::StreamBuffer* stream);
    // private System.Single[] ReadSingleArray(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F5544
    ::ArrayW<float> ReadSingleArray(::ExitGames::Client::Photon::StreamBuffer* stream);
    // private System.Double[] ReadDoubleArray(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F5494
    ::ArrayW<double> ReadDoubleArray(::ExitGames::Client::Photon::StreamBuffer* stream);
    // System.String[] ReadStringArray(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F55F4
    ::ArrayW<::StringW> ReadStringArray(::ExitGames::Client::Photon::StreamBuffer* stream);
    // private ExitGames.Client.Photon.Hashtable[] ReadHashtableArray(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)
    // Offset: 0x16F56EC
    ::ArrayW<::ExitGames::Client::Photon::Hashtable*> ReadHashtableArray(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags, ::ExitGames::Client::Photon::ParameterDictionary* parameters);
    // private System.Collections.IDictionary[] ReadDictionaryArray(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)
    // Offset: 0x16F5800
    ::ArrayW<::System::Collections::IDictionary*> ReadDictionaryArray(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags, ::ExitGames::Client::Photon::ParameterDictionary* parameters);
    // private System.Array ReadArrayInArray(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)
    // Offset: 0x16F5F20
    ::System::Array* ReadArrayInArray(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags, ::ExitGames::Client::Photon::ParameterDictionary* parameters);
    // System.Int32 ReadInt1(ExitGames.Client.Photon.StreamBuffer stream, System.Boolean signNegative)
    // Offset: 0x16F4CCC
    int ReadInt1(::ExitGames::Client::Photon::StreamBuffer* stream, bool signNegative);
    // System.Int32 ReadInt2(ExitGames.Client.Photon.StreamBuffer stream, System.Boolean signNegative)
    // Offset: 0x16F4D08
    int ReadInt2(::ExitGames::Client::Photon::StreamBuffer* stream, bool signNegative);
    // System.Int32 ReadCompressedInt32(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F4D34
    int ReadCompressedInt32(::ExitGames::Client::Photon::StreamBuffer* stream);
    // private System.UInt32 ReadCompressedUInt32(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F6370
    uint ReadCompressedUInt32(::ExitGames::Client::Photon::StreamBuffer* stream);
    // System.Int64 ReadCompressedInt64(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F4D54
    int64_t ReadCompressedInt64(::ExitGames::Client::Photon::StreamBuffer* stream);
    // private System.UInt64 ReadCompressedUInt64(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F760C
    uint64_t ReadCompressedUInt64(::ExitGames::Client::Photon::StreamBuffer* stream);
    // System.Int32[] ReadCompressedInt32Array(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F5D88
    ::ArrayW<int> ReadCompressedInt32Array(::ExitGames::Client::Photon::StreamBuffer* stream);
    // System.Int64[] ReadCompressedInt64Array(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F5E54
    ::ArrayW<int64_t> ReadCompressedInt64Array(::ExitGames::Client::Photon::StreamBuffer* stream);
    // private System.Int32 DecodeZigZag32(System.UInt32 value)
    // Offset: 0x16F75FC
    int DecodeZigZag32(uint value);
    // private System.Int64 DecodeZigZag64(System.UInt64 value)
    // Offset: 0x16F7718
    int64_t DecodeZigZag64(uint64_t value);
    // System.Void Write(ExitGames.Client.Photon.StreamBuffer stream, System.Object value, System.Boolean writeType)
    // Offset: 0x16F3324
    void Write(::ExitGames::Client::Photon::StreamBuffer* stream, ::Il2CppObject* value, bool writeType);
    // private System.Void Write(ExitGames.Client.Photon.StreamBuffer stream, System.Object value, ExitGames.Client.Photon.Protocol18/ExitGames.Client.Photon.GpType gpType, System.Boolean writeType)
    // Offset: 0x16F7728
    void Write(::ExitGames::Client::Photon::StreamBuffer* stream, ::Il2CppObject* value, ::ExitGames::Client::Photon::Protocol18::GpType gpType, bool writeType);
    // private System.Void WriteParameterTable(ExitGames.Client.Photon.StreamBuffer stream, System.Collections.Generic.Dictionary`2<System.Byte,System.Object> parameters)
    // Offset: 0x16FA02C
    void WriteParameterTable(::ExitGames::Client::Photon::StreamBuffer* stream, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>* parameters);
    // private System.Void WriteParameterTable(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.ParameterDictionary parameters)
    // Offset: 0x16F9EB0
    void WriteParameterTable(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::ParameterDictionary* parameters);
    // private System.Void SerializeOperationRequest(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.OperationRequest operation, System.Boolean setType)
    // Offset: 0x16F939C
    void SerializeOperationRequest(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::OperationRequest* operation, bool setType);
    // System.Void WriteByte(ExitGames.Client.Photon.StreamBuffer stream, System.Byte value, System.Boolean writeType)
    // Offset: 0x16F82D4
    void WriteByte(::ExitGames::Client::Photon::StreamBuffer* stream, uint8_t value, bool writeType);
    // System.Void WriteBoolean(ExitGames.Client.Photon.StreamBuffer stream, System.Boolean value, System.Boolean writeType)
    // Offset: 0x16F8294
    void WriteBoolean(::ExitGames::Client::Photon::StreamBuffer* stream, bool value, bool writeType);
    // System.Void WriteUShort(ExitGames.Client.Photon.StreamBuffer stream, System.UInt16 value)
    // Offset: 0x16FA358
    void WriteUShort(::ExitGames::Client::Photon::StreamBuffer* stream, uint16_t value);
    // System.Void WriteInt16(ExitGames.Client.Photon.StreamBuffer stream, System.Int16 value, System.Boolean writeType)
    // Offset: 0x16F33A0
    void WriteInt16(::ExitGames::Client::Photon::StreamBuffer* stream, int16_t value, bool writeType);
    // System.Void WriteDouble(ExitGames.Client.Photon.StreamBuffer stream, System.Double value, System.Boolean writeType)
    // Offset: 0x16F86E4
    void WriteDouble(::ExitGames::Client::Photon::StreamBuffer* stream, double value, bool writeType);
    // System.Void WriteSingle(ExitGames.Client.Photon.StreamBuffer stream, System.Single value, System.Boolean writeType)
    // Offset: 0x16F85B0
    void WriteSingle(::ExitGames::Client::Photon::StreamBuffer* stream, float value, bool writeType);
    // System.Void WriteString(ExitGames.Client.Photon.StreamBuffer stream, System.String value, System.Boolean writeType)
    // Offset: 0x16F341C
    void WriteString(::ExitGames::Client::Photon::StreamBuffer* stream, ::StringW value, bool writeType);
    // private System.Void WriteHashtable(ExitGames.Client.Photon.StreamBuffer stream, System.Object value, System.Boolean writeType)
    // Offset: 0x16F9050
    void WriteHashtable(::ExitGames::Client::Photon::StreamBuffer* stream, ::Il2CppObject* value, bool writeType);
    // System.Void WriteByteArray(ExitGames.Client.Photon.StreamBuffer stream, System.Byte[] value, System.Boolean writeType)
    // Offset: 0x16F93C8
    void WriteByteArray(::ExitGames::Client::Photon::StreamBuffer* stream, ::ArrayW<uint8_t> value, bool writeType);
    // private System.Void WriteArraySegmentByte(ExitGames.Client.Photon.StreamBuffer stream, System.ArraySegment`1<System.Byte> seg, System.Boolean writeType)
    // Offset: 0x16F81D0
    void WriteArraySegmentByte(::ExitGames::Client::Photon::StreamBuffer* stream, ::System::ArraySegment_1<uint8_t> seg, bool writeType);
    // private System.Void WriteByteArraySlice(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.ByteArraySlice buffer, System.Boolean writeType)
    // Offset: 0x16F814C
    void WriteByteArraySlice(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::ByteArraySlice* buffer, bool writeType);
    // System.Void WriteInt32ArrayCompressed(ExitGames.Client.Photon.StreamBuffer stream, System.Int32[] value, System.Boolean writeType)
    // Offset: 0x16F922C
    void WriteInt32ArrayCompressed(::ExitGames::Client::Photon::StreamBuffer* stream, ::ArrayW<int> value, bool writeType);
    // private System.Void WriteInt64ArrayCompressed(ExitGames.Client.Photon.StreamBuffer stream, System.Int64[] values, System.Boolean setType)
    // Offset: 0x16F92E4
    void WriteInt64ArrayCompressed(::ExitGames::Client::Photon::StreamBuffer* stream, ::ArrayW<int64_t> values, bool setType);
    // System.Void WriteBoolArray(ExitGames.Client.Photon.StreamBuffer stream, System.Boolean[] value, System.Boolean writeType)
    // Offset: 0x16F9A34
    void WriteBoolArray(::ExitGames::Client::Photon::StreamBuffer* stream, ::ArrayW<bool> value, bool writeType);
    // System.Void WriteInt16Array(ExitGames.Client.Photon.StreamBuffer stream, System.Int16[] value, System.Boolean writeType)
    // Offset: 0x16F9984
    void WriteInt16Array(::ExitGames::Client::Photon::StreamBuffer* stream, ::ArrayW<int16_t> value, bool writeType);
    // System.Void WriteSingleArray(ExitGames.Client.Photon.StreamBuffer stream, System.Single[] values, System.Boolean setType)
    // Offset: 0x16F97CC
    void WriteSingleArray(::ExitGames::Client::Photon::StreamBuffer* stream, ::ArrayW<float> values, bool setType);
    // System.Void WriteDoubleArray(ExitGames.Client.Photon.StreamBuffer stream, System.Double[] values, System.Boolean setType)
    // Offset: 0x16F9730
    void WriteDoubleArray(::ExitGames::Client::Photon::StreamBuffer* stream, ::ArrayW<double> values, bool setType);
    // System.Void WriteStringArray(ExitGames.Client.Photon.StreamBuffer stream, System.Object value0, System.Boolean writeType)
    // Offset: 0x16F9CAC
    void WriteStringArray(::ExitGames::Client::Photon::StreamBuffer* stream, ::Il2CppObject* value0, bool writeType);
    // private System.Void WriteObjectArray(ExitGames.Client.Photon.StreamBuffer stream, System.Object array, System.Boolean writeType)
    // Offset: 0x16FA384
    void WriteObjectArray(::ExitGames::Client::Photon::StreamBuffer* stream, ::Il2CppObject* array, bool writeType);
    // private System.Void WriteObjectArray(ExitGames.Client.Photon.StreamBuffer stream, System.Collections.IList array, System.Boolean writeType)
    // Offset: 0x16F943C
    void WriteObjectArray(::ExitGames::Client::Photon::StreamBuffer* stream, ::System::Collections::IList* array, bool writeType);
    // private System.Void WriteArrayInArray(ExitGames.Client.Photon.StreamBuffer stream, System.Object value, System.Boolean writeType)
    // Offset: 0x16F8E58
    void WriteArrayInArray(::ExitGames::Client::Photon::StreamBuffer* stream, ::Il2CppObject* value, bool writeType);
    // private System.Void WriteCustomTypeBody(ExitGames.Client.Photon.CustomType customType, ExitGames.Client.Photon.StreamBuffer stream, System.Object value)
    // Offset: 0x16FA420
    void WriteCustomTypeBody(::ExitGames::Client::Photon::CustomType* customType, ::ExitGames::Client::Photon::StreamBuffer* stream, ::Il2CppObject* value);
    // private System.Void WriteCustomType(ExitGames.Client.Photon.StreamBuffer stream, System.Object value, System.Boolean writeType)
    // Offset: 0x16F8818
    void WriteCustomType(::ExitGames::Client::Photon::StreamBuffer* stream, ::Il2CppObject* value, bool writeType);
    // private System.Void WriteCustomTypeArray(ExitGames.Client.Photon.StreamBuffer stream, System.Object value, System.Boolean writeType)
    // Offset: 0x16F8A00
    void WriteCustomTypeArray(::ExitGames::Client::Photon::StreamBuffer* stream, ::Il2CppObject* value, bool writeType);
    // private System.Boolean WriteArrayHeader(ExitGames.Client.Photon.StreamBuffer stream, System.Type type)
    // Offset: 0x16FA698
    bool WriteArrayHeader(::ExitGames::Client::Photon::StreamBuffer* stream, ::System::Type* type);
    // private System.Void WriteDictionaryElements(ExitGames.Client.Photon.StreamBuffer stream, System.Collections.IDictionary dictionary, ExitGames.Client.Photon.Protocol18/ExitGames.Client.Photon.GpType keyWriteType, ExitGames.Client.Photon.Protocol18/ExitGames.Client.Photon.GpType valueWriteType)
    // Offset: 0x16FA75C
    void WriteDictionaryElements(::ExitGames::Client::Photon::StreamBuffer* stream, ::System::Collections::IDictionary* dictionary, ::ExitGames::Client::Photon::Protocol18::GpType keyWriteType, ::ExitGames::Client::Photon::Protocol18::GpType valueWriteType);
    // private System.Void WriteDictionary(ExitGames.Client.Photon.StreamBuffer stream, System.Object dict, System.Boolean setType)
    // Offset: 0x16F8F68
    void WriteDictionary(::ExitGames::Client::Photon::StreamBuffer* stream, ::Il2CppObject* dict, bool setType);
    // private System.Void WriteDictionaryHeader(ExitGames.Client.Photon.StreamBuffer stream, System.Type type, out ExitGames.Client.Photon.Protocol18/ExitGames.Client.Photon.GpType keyWriteType, out ExitGames.Client.Photon.Protocol18/ExitGames.Client.Photon.GpType valueWriteType)
    // Offset: 0x16FAAC4
    void WriteDictionaryHeader(::ExitGames::Client::Photon::StreamBuffer* stream, ::System::Type* type, ByRef<::ExitGames::Client::Photon::Protocol18::GpType> keyWriteType, ByRef<::ExitGames::Client::Photon::Protocol18::GpType> valueWriteType);
    // private System.Boolean WriteArrayType(ExitGames.Client.Photon.StreamBuffer stream, System.Type type, out ExitGames.Client.Photon.Protocol18/ExitGames.Client.Photon.GpType writeType)
    // Offset: 0x16FAE78
    bool WriteArrayType(::ExitGames::Client::Photon::StreamBuffer* stream, ::System::Type* type, ByRef<::ExitGames::Client::Photon::Protocol18::GpType> writeType);
    // private System.Void WriteHashtableArray(ExitGames.Client.Photon.StreamBuffer stream, System.Object value, System.Boolean writeType)
    // Offset: 0x16F9868
    void WriteHashtableArray(::ExitGames::Client::Photon::StreamBuffer* stream, ::Il2CppObject* value, bool writeType);
    // private System.Void WriteDictionaryArray(ExitGames.Client.Photon.StreamBuffer stream, System.Collections.IDictionary[] dictArray, System.Boolean writeType)
    // Offset: 0x16F962C
    void WriteDictionaryArray(::ExitGames::Client::Photon::StreamBuffer* stream, ::ArrayW<::System::Collections::IDictionary*> dictArray, bool writeType);
    // private System.Void WriteIntLength(ExitGames.Client.Photon.StreamBuffer stream, System.Int32 value)
    // Offset: 0x16FA380
    void WriteIntLength(::ExitGames::Client::Photon::StreamBuffer* stream, int value);
    // private System.Void WriteVarInt32(ExitGames.Client.Photon.StreamBuffer stream, System.Int32 value, System.Boolean writeType)
    // Offset: 0x16FB30C
    void WriteVarInt32(::ExitGames::Client::Photon::StreamBuffer* stream, int value, bool writeType);
    // private System.Void WriteCompressedInt32(ExitGames.Client.Photon.StreamBuffer stream, System.Int32 value, System.Boolean writeType)
    // Offset: 0x16F8338
    void WriteCompressedInt32(::ExitGames::Client::Photon::StreamBuffer* stream, int value, bool writeType);
    // private System.Void WriteCompressedInt64(ExitGames.Client.Photon.StreamBuffer stream, System.Int64 value, System.Boolean writeType)
    // Offset: 0x16F8474
    void WriteCompressedInt64(::ExitGames::Client::Photon::StreamBuffer* stream, int64_t value, bool writeType);
    // private System.Void WriteCompressedUInt32(ExitGames.Client.Photon.StreamBuffer stream, System.UInt32 value)
    // Offset: 0x16FB238
    void WriteCompressedUInt32(::ExitGames::Client::Photon::StreamBuffer* stream, uint value);
    // private System.Int32 WriteCompressedUInt32(System.Byte[] buffer, System.UInt32 value)
    // Offset: 0x16FA618
    int WriteCompressedUInt32(::ArrayW<uint8_t> buffer, uint value);
    // private System.Void WriteCompressedUInt64(ExitGames.Client.Photon.StreamBuffer stream, System.UInt64 value)
    // Offset: 0x16FB32C
    void WriteCompressedUInt64(::ExitGames::Client::Photon::StreamBuffer* stream, uint64_t value);
    // private System.UInt32 EncodeZigZag32(System.Int32 value)
    // Offset: 0x16FB314
    uint EncodeZigZag32(int value);
    // private System.UInt64 EncodeZigZag64(System.Int64 value)
    // Offset: 0x16FB320
    uint64_t EncodeZigZag64(int64_t value);
    // public override System.String get_ProtocolType()
    // Offset: 0x16F32CC
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.String IProtocol::get_ProtocolType()
    ::StringW get_ProtocolType();
    // public override System.Byte[] get_VersionBytes()
    // Offset: 0x16F3314
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Byte[] IProtocol::get_VersionBytes()
    ::ArrayW<uint8_t> get_VersionBytes();
    // public System.Void .ctor()
    // Offset: 0x16FB4B0
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Void IProtocol::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Protocol18* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::Protocol18::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Protocol18*, creationType>()));
    }
    // public override System.Void Serialize(ExitGames.Client.Photon.StreamBuffer dout, System.Object serObject, System.Boolean setType)
    // Offset: 0x16F331C
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Void IProtocol::Serialize(ExitGames.Client.Photon.StreamBuffer dout, System.Object serObject, System.Boolean setType)
    void Serialize(::ExitGames::Client::Photon::StreamBuffer* dout, ::Il2CppObject* serObject, bool setType);
    // public override System.Void SerializeShort(ExitGames.Client.Photon.StreamBuffer dout, System.Int16 serObject, System.Boolean setType)
    // Offset: 0x16F3398
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Void IProtocol::SerializeShort(ExitGames.Client.Photon.StreamBuffer dout, System.Int16 serObject, System.Boolean setType)
    void SerializeShort(::ExitGames::Client::Photon::StreamBuffer* dout, int16_t serObject, bool setType);
    // public override System.Void SerializeString(ExitGames.Client.Photon.StreamBuffer dout, System.String serObject, System.Boolean setType)
    // Offset: 0x16F3414
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Void IProtocol::SerializeString(ExitGames.Client.Photon.StreamBuffer dout, System.String serObject, System.Boolean setType)
    void SerializeString(::ExitGames::Client::Photon::StreamBuffer* dout, ::StringW serObject, bool setType);
    // public override System.Object Deserialize(ExitGames.Client.Photon.StreamBuffer din, System.Byte type, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    // Offset: 0x16F358C
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Object IProtocol::Deserialize(ExitGames.Client.Photon.StreamBuffer din, System.Byte type, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    ::Il2CppObject* Deserialize(::ExitGames::Client::Photon::StreamBuffer* din, uint8_t type, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags);
    // public override System.Int16 DeserializeShort(ExitGames.Client.Photon.StreamBuffer din)
    // Offset: 0x16F3C44
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Int16 IProtocol::DeserializeShort(ExitGames.Client.Photon.StreamBuffer din)
    int16_t DeserializeShort(::ExitGames::Client::Photon::StreamBuffer* din);
    // public override System.Byte DeserializeByte(ExitGames.Client.Photon.StreamBuffer din)
    // Offset: 0x16F3CC0
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Byte IProtocol::DeserializeByte(ExitGames.Client.Photon.StreamBuffer din)
    uint8_t DeserializeByte(::ExitGames::Client::Photon::StreamBuffer* din);
    // public override ExitGames.Client.Photon.EventData DeserializeEventData(ExitGames.Client.Photon.StreamBuffer din, ExitGames.Client.Photon.EventData target, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    // Offset: 0x16F647C
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: ExitGames.Client.Photon.EventData IProtocol::DeserializeEventData(ExitGames.Client.Photon.StreamBuffer din, ExitGames.Client.Photon.EventData target, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    ::ExitGames::Client::Photon::EventData* DeserializeEventData(::ExitGames::Client::Photon::StreamBuffer* din, ::ExitGames::Client::Photon::EventData* target, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags);
    // public override ExitGames.Client.Photon.OperationRequest DeserializeOperationRequest(ExitGames.Client.Photon.StreamBuffer din, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    // Offset: 0x16F69C8
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: ExitGames.Client.Photon.OperationRequest IProtocol::DeserializeOperationRequest(ExitGames.Client.Photon.StreamBuffer din, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    ::ExitGames::Client::Photon::OperationRequest* DeserializeOperationRequest(::ExitGames::Client::Photon::StreamBuffer* din, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags);
    // public override ExitGames.Client.Photon.OperationResponse DeserializeOperationResponse(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    // Offset: 0x16F6A6C
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: ExitGames.Client.Photon.OperationResponse IProtocol::DeserializeOperationResponse(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/ExitGames.Client.Photon.DeserializationFlags flags)
    ::ExitGames::Client::Photon::OperationResponse* DeserializeOperationResponse(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags flags);
    // public override ExitGames.Client.Photon.DisconnectMessage DeserializeDisconnectMessage(ExitGames.Client.Photon.StreamBuffer stream)
    // Offset: 0x16F6B68
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: ExitGames.Client.Photon.DisconnectMessage IProtocol::DeserializeDisconnectMessage(ExitGames.Client.Photon.StreamBuffer stream)
    ::ExitGames::Client::Photon::DisconnectMessage* DeserializeDisconnectMessage(::ExitGames::Client::Photon::StreamBuffer* stream);
    // public override System.Void SerializeEventData(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.EventData serObject, System.Boolean setType)
    // Offset: 0x16F9E44
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Void IProtocol::SerializeEventData(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.EventData serObject, System.Boolean setType)
    void SerializeEventData(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::EventData* serObject, bool setType);
    // public override System.Void SerializeOperationRequest(ExitGames.Client.Photon.StreamBuffer stream, System.Byte operationCode, System.Collections.Generic.Dictionary`2<System.Byte,System.Object> parameters, System.Boolean setType)
    // Offset: 0x16FA1B0
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Void IProtocol::SerializeOperationRequest(ExitGames.Client.Photon.StreamBuffer stream, System.Byte operationCode, System.Collections.Generic.Dictionary`2<System.Byte,System.Object> parameters, System.Boolean setType)
    void SerializeOperationRequest(::ExitGames::Client::Photon::StreamBuffer* stream, uint8_t operationCode, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>* parameters, bool setType);
    // public override System.Void SerializeOperationRequest(ExitGames.Client.Photon.StreamBuffer stream, System.Byte operationCode, ExitGames.Client.Photon.ParameterDictionary parameters, System.Boolean setType)
    // Offset: 0x16FA220
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Void IProtocol::SerializeOperationRequest(ExitGames.Client.Photon.StreamBuffer stream, System.Byte operationCode, ExitGames.Client.Photon.ParameterDictionary parameters, System.Boolean setType)
    void SerializeOperationRequest(::ExitGames::Client::Photon::StreamBuffer* stream, uint8_t operationCode, ::ExitGames::Client::Photon::ParameterDictionary* parameters, bool setType);
    // public override System.Void SerializeOperationResponse(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.OperationResponse serObject, System.Boolean setType)
    // Offset: 0x16FA290
    // Implemented from: ExitGames.Client.Photon.IProtocol
    // Base method: System.Void IProtocol::SerializeOperationResponse(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.OperationResponse serObject, System.Boolean setType)
    void SerializeOperationResponse(::ExitGames::Client::Photon::StreamBuffer* stream, ::ExitGames::Client::Photon::OperationResponse* serObject, bool setType);
  }; // ExitGames.Client.Photon.Protocol18
  #pragma pack(pop)
  static check_size<sizeof(Protocol18), 64 + sizeof(::ArrayW<uint8_t>)> __ExitGames_Client_Photon_Protocol18SizeCheck;
  static_assert(sizeof(Protocol18) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExitGames::Client::Photon::Protocol18::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::GetAllowedDictionaryKeyTypes
// Il2CppName: GetAllowedDictionaryKeyTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (*)(::ExitGames::Client::Photon::Protocol18::GpType)>(&ExitGames::Client::Photon::Protocol18::GetAllowedDictionaryKeyTypes)> {
  static const MethodInfo* get() {
    static auto* gpType = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Protocol18/GpType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "GetAllowedDictionaryKeyTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gpType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::GetClrArrayType
// Il2CppName: GetClrArrayType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (*)(::ExitGames::Client::Photon::Protocol18::GpType)>(&ExitGames::Client::Photon::Protocol18::GetClrArrayType)> {
  static const MethodInfo* get() {
    static auto* gpType = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Protocol18/GpType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "GetClrArrayType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gpType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::GetCodeOfType
// Il2CppName: GetCodeOfType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::Protocol18::GpType (ExitGames::Client::Photon::Protocol18::*)(::System::Type*)>(&ExitGames::Client::Photon::Protocol18::GetCodeOfType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "GetCodeOfType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::GetCodeOfTypeCode
// Il2CppName: GetCodeOfTypeCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::Protocol18::GpType (ExitGames::Client::Photon::Protocol18::*)(::System::TypeCode)>(&ExitGames::Client::Photon::Protocol18::GetCodeOfTypeCode)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "TypeCode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "GetCodeOfTypeCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags, ::ExitGames::Client::Photon::ParameterDictionary*)>(&ExitGames::Client::Photon::Protocol18::Read)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, flags, parameters});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, uint8_t, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags, ::ExitGames::Client::Photon::ParameterDictionary*)>(&ExitGames::Client::Photon::Protocol18::Read)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* gpType = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, gpType, flags, parameters});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadBoolean
// Il2CppName: ReadBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadBoolean)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadByte
// Il2CppName: ReadByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadByte)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadInt16
// Il2CppName: ReadInt16
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int16_t (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadInt16)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadInt16", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadUShort
// Il2CppName: ReadUShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadUShort)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadUShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadInt32
// Il2CppName: ReadInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadInt32)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadInt64
// Il2CppName: ReadInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadInt64)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadSingle
// Il2CppName: ReadSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadSingle)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadDouble
// Il2CppName: ReadDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadDouble)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadNonAllocByteArray
// Il2CppName: ReadNonAllocByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::ByteArraySlice* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadNonAllocByteArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadNonAllocByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadByteArray
// Il2CppName: ReadByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadByteArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadCustomType
// Il2CppName: ReadCustomType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, uint8_t)>(&ExitGames::Client::Photon::Protocol18::ReadCustomType)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* gpType = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadCustomType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, gpType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadParameterTable
// Il2CppName: ReadParameterTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags)>(&ExitGames::Client::Photon::Protocol18::ReadParameterTable)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* target = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadParameterTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, target, flags});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadParameterDictionary
// Il2CppName: ReadParameterDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::ParameterDictionary* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::ParameterDictionary*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags)>(&ExitGames::Client::Photon::Protocol18::ReadParameterDictionary)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadParameterDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, target, flags});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadHashtable
// Il2CppName: ReadHashtable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::Hashtable* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags, ::ExitGames::Client::Photon::ParameterDictionary*)>(&ExitGames::Client::Photon::Protocol18::ReadHashtable)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadHashtable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, flags, parameters});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadIntArray
// Il2CppName: ReadIntArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadIntArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadIntArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadString
// Il2CppName: ReadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadString)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadCustomTypeArray
// Il2CppName: ReadCustomTypeArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadCustomTypeArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadCustomTypeArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadDictionaryType
// Il2CppName: ReadDictionaryType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ByRef<::ExitGames::Client::Photon::Protocol18::GpType>, ByRef<::ExitGames::Client::Photon::Protocol18::GpType>)>(&ExitGames::Client::Photon::Protocol18::ReadDictionaryType)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* keyReadType = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Protocol18/GpType")->this_arg;
    static auto* valueReadType = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Protocol18/GpType")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadDictionaryType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, keyReadType, valueReadType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadDictionaryType
// Il2CppName: ReadDictionaryType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadDictionaryType)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadDictionaryType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::GetDictArrayType
// Il2CppName: GetDictArrayType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::GetDictArrayType)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "GetDictArrayType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadDictionary
// Il2CppName: ReadDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IDictionary* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags, ::ExitGames::Client::Photon::ParameterDictionary*)>(&ExitGames::Client::Photon::Protocol18::ReadDictionary)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, flags, parameters});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadDictionaryElements
// Il2CppName: ReadDictionaryElements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::Protocol18::GpType, ::ExitGames::Client::Photon::Protocol18::GpType, ::System::Collections::IDictionary*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags, ::ExitGames::Client::Photon::ParameterDictionary*)>(&ExitGames::Client::Photon::Protocol18::ReadDictionaryElements)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* keyReadType = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Protocol18/GpType")->byval_arg;
    static auto* valueReadType = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Protocol18/GpType")->byval_arg;
    static auto* dictionary = &::il2cpp_utils::GetClassFromName("System.Collections", "IDictionary")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadDictionaryElements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, keyReadType, valueReadType, dictionary, flags, parameters});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadObjectArray
// Il2CppName: ReadObjectArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppObject*> (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags, ::ExitGames::Client::Photon::ParameterDictionary*)>(&ExitGames::Client::Photon::Protocol18::ReadObjectArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadObjectArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, flags, parameters});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadWrapperArray
// Il2CppName: ReadWrapperArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::ExitGames::Client::Photon::StructWrapping::StructWrapper*> (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags, ::ExitGames::Client::Photon::ParameterDictionary*)>(&ExitGames::Client::Photon::Protocol18::ReadWrapperArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadWrapperArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, flags, parameters});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadBooleanArray
// Il2CppName: ReadBooleanArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<bool> (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadBooleanArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadBooleanArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadInt16Array
// Il2CppName: ReadInt16Array
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int16_t> (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadInt16Array)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadInt16Array", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadSingleArray
// Il2CppName: ReadSingleArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<float> (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadSingleArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadSingleArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadDoubleArray
// Il2CppName: ReadDoubleArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<double> (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadDoubleArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadDoubleArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadStringArray
// Il2CppName: ReadStringArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadStringArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadStringArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadHashtableArray
// Il2CppName: ReadHashtableArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::ExitGames::Client::Photon::Hashtable*> (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags, ::ExitGames::Client::Photon::ParameterDictionary*)>(&ExitGames::Client::Photon::Protocol18::ReadHashtableArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadHashtableArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, flags, parameters});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadDictionaryArray
// Il2CppName: ReadDictionaryArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Collections::IDictionary*> (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags, ::ExitGames::Client::Photon::ParameterDictionary*)>(&ExitGames::Client::Photon::Protocol18::ReadDictionaryArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadDictionaryArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, flags, parameters});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadArrayInArray
// Il2CppName: ReadArrayInArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Array* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags, ::ExitGames::Client::Photon::ParameterDictionary*)>(&ExitGames::Client::Photon::Protocol18::ReadArrayInArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadArrayInArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, flags, parameters});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadInt1
// Il2CppName: ReadInt1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, bool)>(&ExitGames::Client::Photon::Protocol18::ReadInt1)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* signNegative = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadInt1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, signNegative});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadInt2
// Il2CppName: ReadInt2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, bool)>(&ExitGames::Client::Photon::Protocol18::ReadInt2)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* signNegative = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadInt2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, signNegative});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadCompressedInt32
// Il2CppName: ReadCompressedInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadCompressedInt32)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadCompressedInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadCompressedUInt32
// Il2CppName: ReadCompressedUInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadCompressedUInt32)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadCompressedUInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadCompressedInt64
// Il2CppName: ReadCompressedInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadCompressedInt64)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadCompressedInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadCompressedUInt64
// Il2CppName: ReadCompressedUInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadCompressedUInt64)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadCompressedUInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadCompressedInt32Array
// Il2CppName: ReadCompressedInt32Array
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadCompressedInt32Array)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadCompressedInt32Array", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::ReadCompressedInt64Array
// Il2CppName: ReadCompressedInt64Array
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int64_t> (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::ReadCompressedInt64Array)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "ReadCompressedInt64Array", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::DecodeZigZag32
// Il2CppName: DecodeZigZag32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ExitGames::Client::Photon::Protocol18::*)(uint)>(&ExitGames::Client::Photon::Protocol18::DecodeZigZag32)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "DecodeZigZag32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::DecodeZigZag64
// Il2CppName: DecodeZigZag64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (ExitGames::Client::Photon::Protocol18::*)(uint64_t)>(&ExitGames::Client::Photon::Protocol18::DecodeZigZag64)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "DecodeZigZag64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*, bool)>(&ExitGames::Client::Photon::Protocol18::Write)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*, ::ExitGames::Client::Photon::Protocol18::GpType, bool)>(&ExitGames::Client::Photon::Protocol18::Write)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* gpType = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Protocol18/GpType")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, gpType, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteParameterTable
// Il2CppName: WriteParameterTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>*)>(&ExitGames::Client::Photon::Protocol18::WriteParameterTable)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* parameters = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteParameterTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, parameters});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteParameterTable
// Il2CppName: WriteParameterTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::ParameterDictionary*)>(&ExitGames::Client::Photon::Protocol18::WriteParameterTable)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteParameterTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, parameters});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::SerializeOperationRequest
// Il2CppName: SerializeOperationRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::OperationRequest*, bool)>(&ExitGames::Client::Photon::Protocol18::SerializeOperationRequest)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* operation = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "OperationRequest")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "SerializeOperationRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, operation, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteByte
// Il2CppName: WriteByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, uint8_t, bool)>(&ExitGames::Client::Photon::Protocol18::WriteByte)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteBoolean
// Il2CppName: WriteBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, bool, bool)>(&ExitGames::Client::Photon::Protocol18::WriteBoolean)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteUShort
// Il2CppName: WriteUShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, uint16_t)>(&ExitGames::Client::Photon::Protocol18::WriteUShort)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteUShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteInt16
// Il2CppName: WriteInt16
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, int16_t, bool)>(&ExitGames::Client::Photon::Protocol18::WriteInt16)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteInt16", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteDouble
// Il2CppName: WriteDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, double, bool)>(&ExitGames::Client::Photon::Protocol18::WriteDouble)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteSingle
// Il2CppName: WriteSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, float, bool)>(&ExitGames::Client::Photon::Protocol18::WriteSingle)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteString
// Il2CppName: WriteString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::StringW, bool)>(&ExitGames::Client::Photon::Protocol18::WriteString)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteHashtable
// Il2CppName: WriteHashtable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*, bool)>(&ExitGames::Client::Photon::Protocol18::WriteHashtable)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteHashtable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteByteArray
// Il2CppName: WriteByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ArrayW<uint8_t>, bool)>(&ExitGames::Client::Photon::Protocol18::WriteByteArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteArraySegmentByte
// Il2CppName: WriteArraySegmentByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::System::ArraySegment_1<uint8_t>, bool)>(&ExitGames::Client::Photon::Protocol18::WriteArraySegmentByte)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* seg = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ArraySegment`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte")})->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteArraySegmentByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, seg, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteByteArraySlice
// Il2CppName: WriteByteArraySlice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::ByteArraySlice*, bool)>(&ExitGames::Client::Photon::Protocol18::WriteByteArraySlice)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ByteArraySlice")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteByteArraySlice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, buffer, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteInt32ArrayCompressed
// Il2CppName: WriteInt32ArrayCompressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ArrayW<int>, bool)>(&ExitGames::Client::Photon::Protocol18::WriteInt32ArrayCompressed)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteInt32ArrayCompressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteInt64ArrayCompressed
// Il2CppName: WriteInt64ArrayCompressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ArrayW<int64_t>, bool)>(&ExitGames::Client::Photon::Protocol18::WriteInt64ArrayCompressed)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int64"), 1)->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteInt64ArrayCompressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, values, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteBoolArray
// Il2CppName: WriteBoolArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ArrayW<bool>, bool)>(&ExitGames::Client::Photon::Protocol18::WriteBoolArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Boolean"), 1)->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteBoolArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteInt16Array
// Il2CppName: WriteInt16Array
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ArrayW<int16_t>, bool)>(&ExitGames::Client::Photon::Protocol18::WriteInt16Array)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteInt16Array", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteSingleArray
// Il2CppName: WriteSingleArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ArrayW<float>, bool)>(&ExitGames::Client::Photon::Protocol18::WriteSingleArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteSingleArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, values, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteDoubleArray
// Il2CppName: WriteDoubleArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ArrayW<double>, bool)>(&ExitGames::Client::Photon::Protocol18::WriteDoubleArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Double"), 1)->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteDoubleArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, values, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteStringArray
// Il2CppName: WriteStringArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*, bool)>(&ExitGames::Client::Photon::Protocol18::WriteStringArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteStringArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value0, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteObjectArray
// Il2CppName: WriteObjectArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*, bool)>(&ExitGames::Client::Photon::Protocol18::WriteObjectArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* array = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteObjectArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, array, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteObjectArray
// Il2CppName: WriteObjectArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::System::Collections::IList*, bool)>(&ExitGames::Client::Photon::Protocol18::WriteObjectArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* array = &::il2cpp_utils::GetClassFromName("System.Collections", "IList")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteObjectArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, array, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteArrayInArray
// Il2CppName: WriteArrayInArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*, bool)>(&ExitGames::Client::Photon::Protocol18::WriteArrayInArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteArrayInArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteCustomTypeBody
// Il2CppName: WriteCustomTypeBody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::CustomType*, ::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*)>(&ExitGames::Client::Photon::Protocol18::WriteCustomTypeBody)> {
  static const MethodInfo* get() {
    static auto* customType = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "CustomType")->byval_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteCustomTypeBody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{customType, stream, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteCustomType
// Il2CppName: WriteCustomType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*, bool)>(&ExitGames::Client::Photon::Protocol18::WriteCustomType)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteCustomType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteCustomTypeArray
// Il2CppName: WriteCustomTypeArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*, bool)>(&ExitGames::Client::Photon::Protocol18::WriteCustomTypeArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteCustomTypeArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteArrayHeader
// Il2CppName: WriteArrayHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::System::Type*)>(&ExitGames::Client::Photon::Protocol18::WriteArrayHeader)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteArrayHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, type});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteDictionaryElements
// Il2CppName: WriteDictionaryElements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::System::Collections::IDictionary*, ::ExitGames::Client::Photon::Protocol18::GpType, ::ExitGames::Client::Photon::Protocol18::GpType)>(&ExitGames::Client::Photon::Protocol18::WriteDictionaryElements)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* dictionary = &::il2cpp_utils::GetClassFromName("System.Collections", "IDictionary")->byval_arg;
    static auto* keyWriteType = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Protocol18/GpType")->byval_arg;
    static auto* valueWriteType = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Protocol18/GpType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteDictionaryElements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, dictionary, keyWriteType, valueWriteType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteDictionary
// Il2CppName: WriteDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*, bool)>(&ExitGames::Client::Photon::Protocol18::WriteDictionary)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* dict = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, dict, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteDictionaryHeader
// Il2CppName: WriteDictionaryHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::System::Type*, ByRef<::ExitGames::Client::Photon::Protocol18::GpType>, ByRef<::ExitGames::Client::Photon::Protocol18::GpType>)>(&ExitGames::Client::Photon::Protocol18::WriteDictionaryHeader)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* keyWriteType = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Protocol18/GpType")->this_arg;
    static auto* valueWriteType = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Protocol18/GpType")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteDictionaryHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, type, keyWriteType, valueWriteType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteArrayType
// Il2CppName: WriteArrayType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::System::Type*, ByRef<::ExitGames::Client::Photon::Protocol18::GpType>)>(&ExitGames::Client::Photon::Protocol18::WriteArrayType)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Protocol18/GpType")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteArrayType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, type, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteHashtableArray
// Il2CppName: WriteHashtableArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*, bool)>(&ExitGames::Client::Photon::Protocol18::WriteHashtableArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteHashtableArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteDictionaryArray
// Il2CppName: WriteDictionaryArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ArrayW<::System::Collections::IDictionary*>, bool)>(&ExitGames::Client::Photon::Protocol18::WriteDictionaryArray)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* dictArray = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Collections", "IDictionary"), 1)->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteDictionaryArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, dictArray, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteIntLength
// Il2CppName: WriteIntLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, int)>(&ExitGames::Client::Photon::Protocol18::WriteIntLength)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteIntLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteVarInt32
// Il2CppName: WriteVarInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, int, bool)>(&ExitGames::Client::Photon::Protocol18::WriteVarInt32)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteVarInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteCompressedInt32
// Il2CppName: WriteCompressedInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, int, bool)>(&ExitGames::Client::Photon::Protocol18::WriteCompressedInt32)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteCompressedInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteCompressedInt64
// Il2CppName: WriteCompressedInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, int64_t, bool)>(&ExitGames::Client::Photon::Protocol18::WriteCompressedInt64)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* writeType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteCompressedInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value, writeType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteCompressedUInt32
// Il2CppName: WriteCompressedUInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, uint)>(&ExitGames::Client::Photon::Protocol18::WriteCompressedUInt32)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteCompressedUInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteCompressedUInt32
// Il2CppName: WriteCompressedUInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ExitGames::Client::Photon::Protocol18::*)(::ArrayW<uint8_t>, uint)>(&ExitGames::Client::Photon::Protocol18::WriteCompressedUInt32)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteCompressedUInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::WriteCompressedUInt64
// Il2CppName: WriteCompressedUInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, uint64_t)>(&ExitGames::Client::Photon::Protocol18::WriteCompressedUInt64)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "WriteCompressedUInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::EncodeZigZag32
// Il2CppName: EncodeZigZag32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (ExitGames::Client::Photon::Protocol18::*)(int)>(&ExitGames::Client::Photon::Protocol18::EncodeZigZag32)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "EncodeZigZag32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::EncodeZigZag64
// Il2CppName: EncodeZigZag64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (ExitGames::Client::Photon::Protocol18::*)(int64_t)>(&ExitGames::Client::Photon::Protocol18::EncodeZigZag64)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "EncodeZigZag64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::get_ProtocolType
// Il2CppName: get_ProtocolType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (ExitGames::Client::Photon::Protocol18::*)()>(&ExitGames::Client::Photon::Protocol18::get_ProtocolType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "get_ProtocolType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::get_VersionBytes
// Il2CppName: get_VersionBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (ExitGames::Client::Photon::Protocol18::*)()>(&ExitGames::Client::Photon::Protocol18::get_VersionBytes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "get_VersionBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*, bool)>(&ExitGames::Client::Photon::Protocol18::Serialize)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::SerializeShort
// Il2CppName: SerializeShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, int16_t, bool)>(&ExitGames::Client::Photon::Protocol18::SerializeShort)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "SerializeShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::SerializeString
// Il2CppName: SerializeString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::StringW, bool)>(&ExitGames::Client::Photon::Protocol18::SerializeString)> {
  static const MethodInfo* get() {
    static auto* dout = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "SerializeString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dout, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::Deserialize
// Il2CppName: Deserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, uint8_t, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags)>(&ExitGames::Client::Photon::Protocol18::Deserialize)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "Deserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din, type, flags});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::DeserializeShort
// Il2CppName: DeserializeShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int16_t (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::DeserializeShort)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "DeserializeShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::DeserializeByte
// Il2CppName: DeserializeByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::DeserializeByte)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "DeserializeByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::DeserializeEventData
// Il2CppName: DeserializeEventData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::EventData* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::EventData*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags)>(&ExitGames::Client::Photon::Protocol18::DeserializeEventData)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "EventData")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "DeserializeEventData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din, target, flags});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::DeserializeOperationRequest
// Il2CppName: DeserializeOperationRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::OperationRequest* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags)>(&ExitGames::Client::Photon::Protocol18::DeserializeOperationRequest)> {
  static const MethodInfo* get() {
    static auto* din = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "DeserializeOperationRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{din, flags});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::DeserializeOperationResponse
// Il2CppName: DeserializeOperationResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::OperationResponse* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::IProtocol::DeserializationFlags)>(&ExitGames::Client::Photon::Protocol18::DeserializeOperationResponse)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* flags = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "IProtocol/DeserializationFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "DeserializeOperationResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, flags});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::DeserializeDisconnectMessage
// Il2CppName: DeserializeDisconnectMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::DisconnectMessage* (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*)>(&ExitGames::Client::Photon::Protocol18::DeserializeDisconnectMessage)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "DeserializeDisconnectMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::SerializeEventData
// Il2CppName: SerializeEventData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::EventData*, bool)>(&ExitGames::Client::Photon::Protocol18::SerializeEventData)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "EventData")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "SerializeEventData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, serObject, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::SerializeOperationRequest
// Il2CppName: SerializeOperationRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, uint8_t, ::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>*, bool)>(&ExitGames::Client::Photon::Protocol18::SerializeOperationRequest)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* operationCode = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* parameters = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "SerializeOperationRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, operationCode, parameters, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::SerializeOperationRequest
// Il2CppName: SerializeOperationRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, uint8_t, ::ExitGames::Client::Photon::ParameterDictionary*, bool)>(&ExitGames::Client::Photon::Protocol18::SerializeOperationRequest)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* operationCode = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "SerializeOperationRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, operationCode, parameters, setType});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::Protocol18::SerializeOperationResponse
// Il2CppName: SerializeOperationResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::Protocol18::*)(::ExitGames::Client::Photon::StreamBuffer*, ::ExitGames::Client::Photon::OperationResponse*, bool)>(&ExitGames::Client::Photon::Protocol18::SerializeOperationResponse)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* serObject = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "OperationResponse")->byval_arg;
    static auto* setType = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::Protocol18*), "SerializeOperationResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, serObject, setType});
  }
};
