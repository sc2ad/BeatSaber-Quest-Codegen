// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: ExitGames.Client.Photon.StructWrapping
namespace ExitGames::Client::Photon::StructWrapping {
  // Forward declaring type: Pooling
  struct Pooling;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::ExitGames::Client::Photon::StructWrapping::Pooling, "ExitGames.Client.Photon.StructWrapping", "Pooling");
// Type namespace: ExitGames.Client.Photon.StructWrapping
namespace ExitGames::Client::Photon::StructWrapping {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: ExitGames.Client.Photon.StructWrapping.Pooling
  // [TokenAttribute] Offset: FFFFFFFF
  struct Pooling/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: Pooling
    constexpr Pooling(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public ExitGames.Client.Photon.StructWrapping.Pooling Disconnected
    static constexpr const int Disconnected = 0;
    // Get static field: static public ExitGames.Client.Photon.StructWrapping.Pooling Disconnected
    static ::ExitGames::Client::Photon::StructWrapping::Pooling _get_Disconnected();
    // Set static field: static public ExitGames.Client.Photon.StructWrapping.Pooling Disconnected
    static void _set_Disconnected(::ExitGames::Client::Photon::StructWrapping::Pooling value);
    // static field const value: static public ExitGames.Client.Photon.StructWrapping.Pooling Connected
    static constexpr const int Connected = 1;
    // Get static field: static public ExitGames.Client.Photon.StructWrapping.Pooling Connected
    static ::ExitGames::Client::Photon::StructWrapping::Pooling _get_Connected();
    // Set static field: static public ExitGames.Client.Photon.StructWrapping.Pooling Connected
    static void _set_Connected(::ExitGames::Client::Photon::StructWrapping::Pooling value);
    // static field const value: static public ExitGames.Client.Photon.StructWrapping.Pooling ReleaseOnUnwrap
    static constexpr const int ReleaseOnUnwrap = 2;
    // Get static field: static public ExitGames.Client.Photon.StructWrapping.Pooling ReleaseOnUnwrap
    static ::ExitGames::Client::Photon::StructWrapping::Pooling _get_ReleaseOnUnwrap();
    // Set static field: static public ExitGames.Client.Photon.StructWrapping.Pooling ReleaseOnUnwrap
    static void _set_ReleaseOnUnwrap(::ExitGames::Client::Photon::StructWrapping::Pooling value);
    // static field const value: static public ExitGames.Client.Photon.StructWrapping.Pooling Readonly
    static constexpr const int Readonly = 4;
    // Get static field: static public ExitGames.Client.Photon.StructWrapping.Pooling Readonly
    static ::ExitGames::Client::Photon::StructWrapping::Pooling _get_Readonly();
    // Set static field: static public ExitGames.Client.Photon.StructWrapping.Pooling Readonly
    static void _set_Readonly(::ExitGames::Client::Photon::StructWrapping::Pooling value);
    // static field const value: static public ExitGames.Client.Photon.StructWrapping.Pooling CheckedOut
    static constexpr const int CheckedOut = 8;
    // Get static field: static public ExitGames.Client.Photon.StructWrapping.Pooling CheckedOut
    static ::ExitGames::Client::Photon::StructWrapping::Pooling _get_CheckedOut();
    // Set static field: static public ExitGames.Client.Photon.StructWrapping.Pooling CheckedOut
    static void _set_CheckedOut(::ExitGames::Client::Photon::StructWrapping::Pooling value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // ExitGames.Client.Photon.StructWrapping.Pooling
  #pragma pack(pop)
  static check_size<sizeof(Pooling), 0 + sizeof(int)> __ExitGames_Client_Photon_StructWrapping_PoolingSizeCheck;
  static_assert(sizeof(Pooling) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
