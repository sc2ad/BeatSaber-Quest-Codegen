// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExitGames::Client::Photon::StructWrapping
namespace ExitGames::Client::Photon::StructWrapping {
  // Forward declaring type: WrappedType
  struct WrappedType;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: ExitGames.Client.Photon.StructWrapping
namespace ExitGames::Client::Photon::StructWrapping {
  // Forward declaring type: StructWrapperPool
  class StructWrapperPool;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExitGames::Client::Photon::StructWrapping::StructWrapperPool);
DEFINE_IL2CPP_ARG_TYPE(::ExitGames::Client::Photon::StructWrapping::StructWrapperPool*, "ExitGames.Client.Photon.StructWrapping", "StructWrapperPool");
// Type namespace: ExitGames.Client.Photon.StructWrapping
namespace ExitGames::Client::Photon::StructWrapping {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: ExitGames.Client.Photon.StructWrapping.StructWrapperPool
  // [TokenAttribute] Offset: FFFFFFFF
  class StructWrapperPool : public ::Il2CppObject {
    public:
    // public System.Void .ctor()
    // Offset: 0x1B68C0C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StructWrapperPool* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::StructWrapping::StructWrapperPool::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StructWrapperPool*, creationType>()));
    }
    // static public ExitGames.Client.Photon.StructWrapping.WrappedType GetWrappedType(System.Type type)
    // Offset: 0x1B689A8
    static ::ExitGames::Client::Photon::StructWrapping::WrappedType GetWrappedType(::System::Type* type);
  }; // ExitGames.Client.Photon.StructWrapping.StructWrapperPool
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExitGames::Client::Photon::StructWrapping::StructWrapperPool::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: ExitGames::Client::Photon::StructWrapping::StructWrapperPool::GetWrappedType
// Il2CppName: GetWrappedType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::StructWrapping::WrappedType (*)(::System::Type*)>(&ExitGames::Client::Photon::StructWrapping::StructWrapperPool::GetWrappedType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::StructWrapping::StructWrapperPool*), "GetWrappedType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
