// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: ParameterDictionary
  class ParameterDictionary;
}
// Completed forward declares
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: EventData
  class EventData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExitGames::Client::Photon::EventData);
DEFINE_IL2CPP_ARG_TYPE(::ExitGames::Client::Photon::EventData*, "ExitGames.Client.Photon", "EventData");
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: ExitGames.Client.Photon.EventData
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 94C668
  class EventData : public ::Il2CppObject {
    public:
    public:
    // public System.Byte Code
    // Size: 0x1
    // Offset: 0x10
    uint8_t Code;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: Code and: Parameters
    char __padding0[0x7] = {};
    // public readonly ExitGames.Client.Photon.ParameterDictionary Parameters
    // Size: 0x8
    // Offset: 0x18
    ::ExitGames::Client::Photon::ParameterDictionary* Parameters;
    // Field size check
    static_assert(sizeof(::ExitGames::Client::Photon::ParameterDictionary*) == 0x8);
    // public System.Byte SenderKey
    // Size: 0x1
    // Offset: 0x20
    uint8_t SenderKey;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: SenderKey and: sender
    char __padding2[0x3] = {};
    // private System.Int32 sender
    // Size: 0x4
    // Offset: 0x24
    int sender;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Byte CustomDataKey
    // Size: 0x1
    // Offset: 0x28
    uint8_t CustomDataKey;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: CustomDataKey and: customData
    char __padding4[0x7] = {};
    // private System.Object customData
    // Size: 0x8
    // Offset: 0x30
    ::Il2CppObject* customData;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    public:
    // Get instance field reference: public System.Byte Code
    [[deprecated("Use field access instead!")]] uint8_t& dyn_Code();
    // Get instance field reference: public readonly ExitGames.Client.Photon.ParameterDictionary Parameters
    [[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::ParameterDictionary*& dyn_Parameters();
    // Get instance field reference: public System.Byte SenderKey
    [[deprecated("Use field access instead!")]] uint8_t& dyn_SenderKey();
    // Get instance field reference: private System.Int32 sender
    [[deprecated("Use field access instead!")]] int& dyn_sender();
    // Get instance field reference: public System.Byte CustomDataKey
    [[deprecated("Use field access instead!")]] uint8_t& dyn_CustomDataKey();
    // Get instance field reference: private System.Object customData
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_customData();
    // public System.Object get_Item(System.Byte key)
    // Offset: 0x1134824
    ::Il2CppObject* get_Item(uint8_t key);
    // System.Void set_Item(System.Byte key, System.Object value)
    // Offset: 0x11348C8
    void set_Item(uint8_t key, ::Il2CppObject* value);
    // public System.Int32 get_Sender()
    // Offset: 0x11349D4
    int get_Sender();
    // System.Void set_Sender(System.Int32 value)
    // Offset: 0x1134A60
    void set_Sender(int value);
    // public System.Object get_CustomData()
    // Offset: 0x1134A68
    ::Il2CppObject* get_CustomData();
    // System.Void set_CustomData(System.Object value)
    // Offset: 0x1134AA8
    void set_CustomData(::Il2CppObject* value);
    // public System.Void .ctor()
    // Offset: 0x113470C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EventData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExitGames::Client::Photon::EventData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EventData*, creationType>()));
    }
    // System.Void Reset()
    // Offset: 0x1134AB0
    void Reset();
    // public System.String ToStringFull()
    // Offset: 0x1134BB8
    ::StringW ToStringFull();
    // public override System.String ToString()
    // Offset: 0x1134B54
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // ExitGames.Client.Photon.EventData
  #pragma pack(pop)
  static check_size<sizeof(EventData), 48 + sizeof(::Il2CppObject*)> __ExitGames_Client_Photon_EventDataSizeCheck;
  static_assert(sizeof(EventData) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExitGames::Client::Photon::EventData::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ExitGames::Client::Photon::EventData::*)(uint8_t)>(&ExitGames::Client::Photon::EventData::get_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::EventData*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::EventData::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::EventData::*)(uint8_t, ::Il2CppObject*)>(&ExitGames::Client::Photon::EventData::set_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::EventData*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::EventData::get_Sender
// Il2CppName: get_Sender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ExitGames::Client::Photon::EventData::*)()>(&ExitGames::Client::Photon::EventData::get_Sender)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::EventData*), "get_Sender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::EventData::set_Sender
// Il2CppName: set_Sender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::EventData::*)(int)>(&ExitGames::Client::Photon::EventData::set_Sender)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::EventData*), "set_Sender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::EventData::get_CustomData
// Il2CppName: get_CustomData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ExitGames::Client::Photon::EventData::*)()>(&ExitGames::Client::Photon::EventData::get_CustomData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::EventData*), "get_CustomData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::EventData::set_CustomData
// Il2CppName: set_CustomData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::EventData::*)(::Il2CppObject*)>(&ExitGames::Client::Photon::EventData::set_CustomData)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::EventData*), "set_CustomData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::EventData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: ExitGames::Client::Photon::EventData::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExitGames::Client::Photon::EventData::*)()>(&ExitGames::Client::Photon::EventData::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::EventData*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::EventData::ToStringFull
// Il2CppName: ToStringFull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (ExitGames::Client::Photon::EventData::*)()>(&ExitGames::Client::Photon::EventData::ToStringFull)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::EventData*), "ToStringFull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExitGames::Client::Photon::EventData::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (ExitGames::Client::Photon::EventData::*)()>(&ExitGames::Client::Photon::EventData::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExitGames::Client::Photon::EventData*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
