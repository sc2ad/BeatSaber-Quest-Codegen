// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: InitV3Flags
  struct InitV3Flags;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::ExitGames::Client::Photon::InitV3Flags, "ExitGames.Client.Photon", "InitV3Flags");
// Type namespace: ExitGames.Client.Photon
namespace ExitGames::Client::Photon {
  // Size: 0x2
  #pragma pack(push, 1)
  // Autogenerated type: ExitGames.Client.Photon.InitV3Flags
  // [TokenAttribute] Offset: FFFFFFFF
  // [FlagsAttribute] Offset: FFFFFFFF
  struct InitV3Flags/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int16 value__
    // Size: 0x2
    // Offset: 0x0
    int16_t value;
    // Field size check
    static_assert(sizeof(int16_t) == 0x2);
    public:
    // Creating value type constructor for type: InitV3Flags
    constexpr InitV3Flags(int16_t value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int16_t
    constexpr operator int16_t() const noexcept {
      return value;
    }
    // static field const value: static public ExitGames.Client.Photon.InitV3Flags NoFlags
    static constexpr const int16_t NoFlags = 0;
    // Get static field: static public ExitGames.Client.Photon.InitV3Flags NoFlags
    static ::ExitGames::Client::Photon::InitV3Flags _get_NoFlags();
    // Set static field: static public ExitGames.Client.Photon.InitV3Flags NoFlags
    static void _set_NoFlags(::ExitGames::Client::Photon::InitV3Flags value);
    // static field const value: static public ExitGames.Client.Photon.InitV3Flags EncryptionFlag
    static constexpr const int16_t EncryptionFlag = 1;
    // Get static field: static public ExitGames.Client.Photon.InitV3Flags EncryptionFlag
    static ::ExitGames::Client::Photon::InitV3Flags _get_EncryptionFlag();
    // Set static field: static public ExitGames.Client.Photon.InitV3Flags EncryptionFlag
    static void _set_EncryptionFlag(::ExitGames::Client::Photon::InitV3Flags value);
    // static field const value: static public ExitGames.Client.Photon.InitV3Flags IPv6Flag
    static constexpr const int16_t IPv6Flag = 2;
    // Get static field: static public ExitGames.Client.Photon.InitV3Flags IPv6Flag
    static ::ExitGames::Client::Photon::InitV3Flags _get_IPv6Flag();
    // Set static field: static public ExitGames.Client.Photon.InitV3Flags IPv6Flag
    static void _set_IPv6Flag(::ExitGames::Client::Photon::InitV3Flags value);
    // static field const value: static public ExitGames.Client.Photon.InitV3Flags ReleaseSdkFlag
    static constexpr const int16_t ReleaseSdkFlag = 4;
    // Get static field: static public ExitGames.Client.Photon.InitV3Flags ReleaseSdkFlag
    static ::ExitGames::Client::Photon::InitV3Flags _get_ReleaseSdkFlag();
    // Set static field: static public ExitGames.Client.Photon.InitV3Flags ReleaseSdkFlag
    static void _set_ReleaseSdkFlag(::ExitGames::Client::Photon::InitV3Flags value);
    // Get instance field reference: public System.Int16 value__
    [[deprecated("Use field access instead!")]] int16_t& dyn_value__();
  }; // ExitGames.Client.Photon.InitV3Flags
  #pragma pack(pop)
  static check_size<sizeof(InitV3Flags), 0 + sizeof(int16_t)> __ExitGames_Client_Photon_InitV3FlagsSizeCheck;
  static_assert(sizeof(InitV3Flags) == 0x2);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
