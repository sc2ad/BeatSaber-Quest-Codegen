// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.UInt32
#include "System/UInt32.hpp"
// Including type: System.UInt64
#include "System/UInt64.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Valve::VR
namespace Valve::VR {
  // Forward declaring type: CVRSystem
  class CVRSystem;
  // Forward declaring type: CVRChaperone
  class CVRChaperone;
  // Forward declaring type: CVRChaperoneSetup
  class CVRChaperoneSetup;
  // Forward declaring type: CVRCompositor
  class CVRCompositor;
  // Forward declaring type: CVROverlay
  class CVROverlay;
  // Forward declaring type: CVRRenderModels
  class CVRRenderModels;
  // Forward declaring type: CVRExtendedDisplay
  class CVRExtendedDisplay;
  // Forward declaring type: CVRSettings
  class CVRSettings;
  // Forward declaring type: CVRApplications
  class CVRApplications;
  // Forward declaring type: CVRScreenshots
  class CVRScreenshots;
  // Forward declaring type: CVRTrackedCamera
  class CVRTrackedCamera;
  // Forward declaring type: EVRInitError
  struct EVRInitError;
  // Forward declaring type: EVRApplicationType
  struct EVRApplicationType;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Completed forward declares
// Type namespace: Valve.VR
namespace Valve::VR {
  // Forward declaring type: OpenVR
  class OpenVR;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Valve::VR::OpenVR);
DEFINE_IL2CPP_ARG_TYPE(::Valve::VR::OpenVR*, "Valve.VR", "OpenVR");
// Type namespace: Valve.VR
namespace Valve::VR {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Valve.VR.OpenVR
  // [TokenAttribute] Offset: FFFFFFFF
  class OpenVR : public ::Il2CppObject {
    public:
    // Nested type: ::Valve::VR::OpenVR::COpenVRContext
    class COpenVRContext;
    // static field const value: static public System.UInt32 k_nDriverNone
    static constexpr const uint k_nDriverNone = 4294967295u;
    // Get static field: static public System.UInt32 k_nDriverNone
    static uint _get_k_nDriverNone();
    // Set static field: static public System.UInt32 k_nDriverNone
    static void _set_k_nDriverNone(uint value);
    // static field const value: static public System.UInt32 k_unMaxDriverDebugResponseSize
    static constexpr const uint k_unMaxDriverDebugResponseSize = 32768u;
    // Get static field: static public System.UInt32 k_unMaxDriverDebugResponseSize
    static uint _get_k_unMaxDriverDebugResponseSize();
    // Set static field: static public System.UInt32 k_unMaxDriverDebugResponseSize
    static void _set_k_unMaxDriverDebugResponseSize(uint value);
    // static field const value: static public System.UInt32 k_unTrackedDeviceIndex_Hmd
    static constexpr const uint k_unTrackedDeviceIndex_Hmd = 0u;
    // Get static field: static public System.UInt32 k_unTrackedDeviceIndex_Hmd
    static uint _get_k_unTrackedDeviceIndex_Hmd();
    // Set static field: static public System.UInt32 k_unTrackedDeviceIndex_Hmd
    static void _set_k_unTrackedDeviceIndex_Hmd(uint value);
    // static field const value: static public System.UInt32 k_unMaxTrackedDeviceCount
    static constexpr const uint k_unMaxTrackedDeviceCount = 64u;
    // Get static field: static public System.UInt32 k_unMaxTrackedDeviceCount
    static uint _get_k_unMaxTrackedDeviceCount();
    // Set static field: static public System.UInt32 k_unMaxTrackedDeviceCount
    static void _set_k_unMaxTrackedDeviceCount(uint value);
    // static field const value: static public System.UInt32 k_unTrackedDeviceIndexOther
    static constexpr const uint k_unTrackedDeviceIndexOther = 4294967294u;
    // Get static field: static public System.UInt32 k_unTrackedDeviceIndexOther
    static uint _get_k_unTrackedDeviceIndexOther();
    // Set static field: static public System.UInt32 k_unTrackedDeviceIndexOther
    static void _set_k_unTrackedDeviceIndexOther(uint value);
    // static field const value: static public System.UInt32 k_unTrackedDeviceIndexInvalid
    static constexpr const uint k_unTrackedDeviceIndexInvalid = 4294967295u;
    // Get static field: static public System.UInt32 k_unTrackedDeviceIndexInvalid
    static uint _get_k_unTrackedDeviceIndexInvalid();
    // Set static field: static public System.UInt32 k_unTrackedDeviceIndexInvalid
    static void _set_k_unTrackedDeviceIndexInvalid(uint value);
    // static field const value: static public System.UInt64 k_ulInvalidPropertyContainer
    static constexpr const uint64_t k_ulInvalidPropertyContainer = 0u;
    // Get static field: static public System.UInt64 k_ulInvalidPropertyContainer
    static uint64_t _get_k_ulInvalidPropertyContainer();
    // Set static field: static public System.UInt64 k_ulInvalidPropertyContainer
    static void _set_k_ulInvalidPropertyContainer(uint64_t value);
    // static field const value: static public System.UInt32 k_unInvalidPropertyTag
    static constexpr const uint k_unInvalidPropertyTag = 0u;
    // Get static field: static public System.UInt32 k_unInvalidPropertyTag
    static uint _get_k_unInvalidPropertyTag();
    // Set static field: static public System.UInt32 k_unInvalidPropertyTag
    static void _set_k_unInvalidPropertyTag(uint value);
    // static field const value: static public System.UInt32 k_unFloatPropertyTag
    static constexpr const uint k_unFloatPropertyTag = 1u;
    // Get static field: static public System.UInt32 k_unFloatPropertyTag
    static uint _get_k_unFloatPropertyTag();
    // Set static field: static public System.UInt32 k_unFloatPropertyTag
    static void _set_k_unFloatPropertyTag(uint value);
    // static field const value: static public System.UInt32 k_unInt32PropertyTag
    static constexpr const uint k_unInt32PropertyTag = 2u;
    // Get static field: static public System.UInt32 k_unInt32PropertyTag
    static uint _get_k_unInt32PropertyTag();
    // Set static field: static public System.UInt32 k_unInt32PropertyTag
    static void _set_k_unInt32PropertyTag(uint value);
    // static field const value: static public System.UInt32 k_unUint64PropertyTag
    static constexpr const uint k_unUint64PropertyTag = 3u;
    // Get static field: static public System.UInt32 k_unUint64PropertyTag
    static uint _get_k_unUint64PropertyTag();
    // Set static field: static public System.UInt32 k_unUint64PropertyTag
    static void _set_k_unUint64PropertyTag(uint value);
    // static field const value: static public System.UInt32 k_unBoolPropertyTag
    static constexpr const uint k_unBoolPropertyTag = 4u;
    // Get static field: static public System.UInt32 k_unBoolPropertyTag
    static uint _get_k_unBoolPropertyTag();
    // Set static field: static public System.UInt32 k_unBoolPropertyTag
    static void _set_k_unBoolPropertyTag(uint value);
    // static field const value: static public System.UInt32 k_unStringPropertyTag
    static constexpr const uint k_unStringPropertyTag = 5u;
    // Get static field: static public System.UInt32 k_unStringPropertyTag
    static uint _get_k_unStringPropertyTag();
    // Set static field: static public System.UInt32 k_unStringPropertyTag
    static void _set_k_unStringPropertyTag(uint value);
    // static field const value: static public System.UInt32 k_unHmdMatrix34PropertyTag
    static constexpr const uint k_unHmdMatrix34PropertyTag = 20u;
    // Get static field: static public System.UInt32 k_unHmdMatrix34PropertyTag
    static uint _get_k_unHmdMatrix34PropertyTag();
    // Set static field: static public System.UInt32 k_unHmdMatrix34PropertyTag
    static void _set_k_unHmdMatrix34PropertyTag(uint value);
    // static field const value: static public System.UInt32 k_unHmdMatrix44PropertyTag
    static constexpr const uint k_unHmdMatrix44PropertyTag = 21u;
    // Get static field: static public System.UInt32 k_unHmdMatrix44PropertyTag
    static uint _get_k_unHmdMatrix44PropertyTag();
    // Set static field: static public System.UInt32 k_unHmdMatrix44PropertyTag
    static void _set_k_unHmdMatrix44PropertyTag(uint value);
    // static field const value: static public System.UInt32 k_unHmdVector3PropertyTag
    static constexpr const uint k_unHmdVector3PropertyTag = 22u;
    // Get static field: static public System.UInt32 k_unHmdVector3PropertyTag
    static uint _get_k_unHmdVector3PropertyTag();
    // Set static field: static public System.UInt32 k_unHmdVector3PropertyTag
    static void _set_k_unHmdVector3PropertyTag(uint value);
    // static field const value: static public System.UInt32 k_unHmdVector4PropertyTag
    static constexpr const uint k_unHmdVector4PropertyTag = 23u;
    // Get static field: static public System.UInt32 k_unHmdVector4PropertyTag
    static uint _get_k_unHmdVector4PropertyTag();
    // Set static field: static public System.UInt32 k_unHmdVector4PropertyTag
    static void _set_k_unHmdVector4PropertyTag(uint value);
    // static field const value: static public System.UInt32 k_unHiddenAreaPropertyTag
    static constexpr const uint k_unHiddenAreaPropertyTag = 30u;
    // Get static field: static public System.UInt32 k_unHiddenAreaPropertyTag
    static uint _get_k_unHiddenAreaPropertyTag();
    // Set static field: static public System.UInt32 k_unHiddenAreaPropertyTag
    static void _set_k_unHiddenAreaPropertyTag(uint value);
    // static field const value: static public System.UInt32 k_unPathHandleInfoTag
    static constexpr const uint k_unPathHandleInfoTag = 31u;
    // Get static field: static public System.UInt32 k_unPathHandleInfoTag
    static uint _get_k_unPathHandleInfoTag();
    // Set static field: static public System.UInt32 k_unPathHandleInfoTag
    static void _set_k_unPathHandleInfoTag(uint value);
    // static field const value: static public System.UInt32 k_unActionPropertyTag
    static constexpr const uint k_unActionPropertyTag = 32u;
    // Get static field: static public System.UInt32 k_unActionPropertyTag
    static uint _get_k_unActionPropertyTag();
    // Set static field: static public System.UInt32 k_unActionPropertyTag
    static void _set_k_unActionPropertyTag(uint value);
    // static field const value: static public System.UInt32 k_unInputValuePropertyTag
    static constexpr const uint k_unInputValuePropertyTag = 33u;
    // Get static field: static public System.UInt32 k_unInputValuePropertyTag
    static uint _get_k_unInputValuePropertyTag();
    // Set static field: static public System.UInt32 k_unInputValuePropertyTag
    static void _set_k_unInputValuePropertyTag(uint value);
    // static field const value: static public System.UInt32 k_unWildcardPropertyTag
    static constexpr const uint k_unWildcardPropertyTag = 34u;
    // Get static field: static public System.UInt32 k_unWildcardPropertyTag
    static uint _get_k_unWildcardPropertyTag();
    // Set static field: static public System.UInt32 k_unWildcardPropertyTag
    static void _set_k_unWildcardPropertyTag(uint value);
    // static field const value: static public System.UInt32 k_unHapticVibrationPropertyTag
    static constexpr const uint k_unHapticVibrationPropertyTag = 35u;
    // Get static field: static public System.UInt32 k_unHapticVibrationPropertyTag
    static uint _get_k_unHapticVibrationPropertyTag();
    // Set static field: static public System.UInt32 k_unHapticVibrationPropertyTag
    static void _set_k_unHapticVibrationPropertyTag(uint value);
    // static field const value: static public System.UInt32 k_unOpenVRInternalReserved_Start
    static constexpr const uint k_unOpenVRInternalReserved_Start = 1000u;
    // Get static field: static public System.UInt32 k_unOpenVRInternalReserved_Start
    static uint _get_k_unOpenVRInternalReserved_Start();
    // Set static field: static public System.UInt32 k_unOpenVRInternalReserved_Start
    static void _set_k_unOpenVRInternalReserved_Start(uint value);
    // static field const value: static public System.UInt32 k_unOpenVRInternalReserved_End
    static constexpr const uint k_unOpenVRInternalReserved_End = 10000u;
    // Get static field: static public System.UInt32 k_unOpenVRInternalReserved_End
    static uint _get_k_unOpenVRInternalReserved_End();
    // Set static field: static public System.UInt32 k_unOpenVRInternalReserved_End
    static void _set_k_unOpenVRInternalReserved_End(uint value);
    // static field const value: static public System.UInt32 k_unMaxPropertyStringSize
    static constexpr const uint k_unMaxPropertyStringSize = 32768u;
    // Get static field: static public System.UInt32 k_unMaxPropertyStringSize
    static uint _get_k_unMaxPropertyStringSize();
    // Set static field: static public System.UInt32 k_unMaxPropertyStringSize
    static void _set_k_unMaxPropertyStringSize(uint value);
    // static field const value: static public System.UInt32 k_unControllerStateAxisCount
    static constexpr const uint k_unControllerStateAxisCount = 5u;
    // Get static field: static public System.UInt32 k_unControllerStateAxisCount
    static uint _get_k_unControllerStateAxisCount();
    // Set static field: static public System.UInt32 k_unControllerStateAxisCount
    static void _set_k_unControllerStateAxisCount(uint value);
    // static field const value: static public System.UInt64 k_ulOverlayHandleInvalid
    static constexpr const uint64_t k_ulOverlayHandleInvalid = 0u;
    // Get static field: static public System.UInt64 k_ulOverlayHandleInvalid
    static uint64_t _get_k_ulOverlayHandleInvalid();
    // Set static field: static public System.UInt64 k_ulOverlayHandleInvalid
    static void _set_k_ulOverlayHandleInvalid(uint64_t value);
    // static field const value: static public System.UInt32 k_unScreenshotHandleInvalid
    static constexpr const uint k_unScreenshotHandleInvalid = 0u;
    // Get static field: static public System.UInt32 k_unScreenshotHandleInvalid
    static uint _get_k_unScreenshotHandleInvalid();
    // Set static field: static public System.UInt32 k_unScreenshotHandleInvalid
    static void _set_k_unScreenshotHandleInvalid(uint value);
    // static field const value: static public System.String IVRSystem_Version
    static constexpr const char* IVRSystem_Version = "IVRSystem_019";
    // Get static field: static public System.String IVRSystem_Version
    static ::StringW _get_IVRSystem_Version();
    // Set static field: static public System.String IVRSystem_Version
    static void _set_IVRSystem_Version(::StringW value);
    // static field const value: static public System.String IVRExtendedDisplay_Version
    static constexpr const char* IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";
    // Get static field: static public System.String IVRExtendedDisplay_Version
    static ::StringW _get_IVRExtendedDisplay_Version();
    // Set static field: static public System.String IVRExtendedDisplay_Version
    static void _set_IVRExtendedDisplay_Version(::StringW value);
    // static field const value: static public System.String IVRTrackedCamera_Version
    static constexpr const char* IVRTrackedCamera_Version = "IVRTrackedCamera_003";
    // Get static field: static public System.String IVRTrackedCamera_Version
    static ::StringW _get_IVRTrackedCamera_Version();
    // Set static field: static public System.String IVRTrackedCamera_Version
    static void _set_IVRTrackedCamera_Version(::StringW value);
    // static field const value: static public System.UInt32 k_unMaxApplicationKeyLength
    static constexpr const uint k_unMaxApplicationKeyLength = 128u;
    // Get static field: static public System.UInt32 k_unMaxApplicationKeyLength
    static uint _get_k_unMaxApplicationKeyLength();
    // Set static field: static public System.UInt32 k_unMaxApplicationKeyLength
    static void _set_k_unMaxApplicationKeyLength(uint value);
    // static field const value: static public System.String k_pch_MimeType_HomeApp
    static constexpr const char* k_pch_MimeType_HomeApp = "vr/home";
    // Get static field: static public System.String k_pch_MimeType_HomeApp
    static ::StringW _get_k_pch_MimeType_HomeApp();
    // Set static field: static public System.String k_pch_MimeType_HomeApp
    static void _set_k_pch_MimeType_HomeApp(::StringW value);
    // static field const value: static public System.String k_pch_MimeType_GameTheater
    static constexpr const char* k_pch_MimeType_GameTheater = "vr/game_theater";
    // Get static field: static public System.String k_pch_MimeType_GameTheater
    static ::StringW _get_k_pch_MimeType_GameTheater();
    // Set static field: static public System.String k_pch_MimeType_GameTheater
    static void _set_k_pch_MimeType_GameTheater(::StringW value);
    // static field const value: static public System.String IVRApplications_Version
    static constexpr const char* IVRApplications_Version = "IVRApplications_006";
    // Get static field: static public System.String IVRApplications_Version
    static ::StringW _get_IVRApplications_Version();
    // Set static field: static public System.String IVRApplications_Version
    static void _set_IVRApplications_Version(::StringW value);
    // static field const value: static public System.String IVRChaperone_Version
    static constexpr const char* IVRChaperone_Version = "IVRChaperone_003";
    // Get static field: static public System.String IVRChaperone_Version
    static ::StringW _get_IVRChaperone_Version();
    // Set static field: static public System.String IVRChaperone_Version
    static void _set_IVRChaperone_Version(::StringW value);
    // static field const value: static public System.String IVRChaperoneSetup_Version
    static constexpr const char* IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";
    // Get static field: static public System.String IVRChaperoneSetup_Version
    static ::StringW _get_IVRChaperoneSetup_Version();
    // Set static field: static public System.String IVRChaperoneSetup_Version
    static void _set_IVRChaperoneSetup_Version(::StringW value);
    // static field const value: static public System.String IVRCompositor_Version
    static constexpr const char* IVRCompositor_Version = "IVRCompositor_022";
    // Get static field: static public System.String IVRCompositor_Version
    static ::StringW _get_IVRCompositor_Version();
    // Set static field: static public System.String IVRCompositor_Version
    static void _set_IVRCompositor_Version(::StringW value);
    // static field const value: static public System.UInt32 k_unVROverlayMaxKeyLength
    static constexpr const uint k_unVROverlayMaxKeyLength = 128u;
    // Get static field: static public System.UInt32 k_unVROverlayMaxKeyLength
    static uint _get_k_unVROverlayMaxKeyLength();
    // Set static field: static public System.UInt32 k_unVROverlayMaxKeyLength
    static void _set_k_unVROverlayMaxKeyLength(uint value);
    // static field const value: static public System.UInt32 k_unVROverlayMaxNameLength
    static constexpr const uint k_unVROverlayMaxNameLength = 128u;
    // Get static field: static public System.UInt32 k_unVROverlayMaxNameLength
    static uint _get_k_unVROverlayMaxNameLength();
    // Set static field: static public System.UInt32 k_unVROverlayMaxNameLength
    static void _set_k_unVROverlayMaxNameLength(uint value);
    // static field const value: static public System.UInt32 k_unMaxOverlayCount
    static constexpr const uint k_unMaxOverlayCount = 64u;
    // Get static field: static public System.UInt32 k_unMaxOverlayCount
    static uint _get_k_unMaxOverlayCount();
    // Set static field: static public System.UInt32 k_unMaxOverlayCount
    static void _set_k_unMaxOverlayCount(uint value);
    // static field const value: static public System.UInt32 k_unMaxOverlayIntersectionMaskPrimitivesCount
    static constexpr const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;
    // Get static field: static public System.UInt32 k_unMaxOverlayIntersectionMaskPrimitivesCount
    static uint _get_k_unMaxOverlayIntersectionMaskPrimitivesCount();
    // Set static field: static public System.UInt32 k_unMaxOverlayIntersectionMaskPrimitivesCount
    static void _set_k_unMaxOverlayIntersectionMaskPrimitivesCount(uint value);
    // static field const value: static public System.String IVROverlay_Version
    static constexpr const char* IVROverlay_Version = "IVROverlay_018";
    // Get static field: static public System.String IVROverlay_Version
    static ::StringW _get_IVROverlay_Version();
    // Set static field: static public System.String IVROverlay_Version
    static void _set_IVROverlay_Version(::StringW value);
    // static field const value: static public System.String k_pch_Controller_Component_GDC2015
    static constexpr const char* k_pch_Controller_Component_GDC2015 = "gdc2015";
    // Get static field: static public System.String k_pch_Controller_Component_GDC2015
    static ::StringW _get_k_pch_Controller_Component_GDC2015();
    // Set static field: static public System.String k_pch_Controller_Component_GDC2015
    static void _set_k_pch_Controller_Component_GDC2015(::StringW value);
    // static field const value: static public System.String k_pch_Controller_Component_Base
    static constexpr const char* k_pch_Controller_Component_Base = "base";
    // Get static field: static public System.String k_pch_Controller_Component_Base
    static ::StringW _get_k_pch_Controller_Component_Base();
    // Set static field: static public System.String k_pch_Controller_Component_Base
    static void _set_k_pch_Controller_Component_Base(::StringW value);
    // static field const value: static public System.String k_pch_Controller_Component_Tip
    static constexpr const char* k_pch_Controller_Component_Tip = "tip";
    // Get static field: static public System.String k_pch_Controller_Component_Tip
    static ::StringW _get_k_pch_Controller_Component_Tip();
    // Set static field: static public System.String k_pch_Controller_Component_Tip
    static void _set_k_pch_Controller_Component_Tip(::StringW value);
    // static field const value: static public System.String k_pch_Controller_Component_HandGrip
    static constexpr const char* k_pch_Controller_Component_HandGrip = "handgrip";
    // Get static field: static public System.String k_pch_Controller_Component_HandGrip
    static ::StringW _get_k_pch_Controller_Component_HandGrip();
    // Set static field: static public System.String k_pch_Controller_Component_HandGrip
    static void _set_k_pch_Controller_Component_HandGrip(::StringW value);
    // static field const value: static public System.String k_pch_Controller_Component_Status
    static constexpr const char* k_pch_Controller_Component_Status = "status";
    // Get static field: static public System.String k_pch_Controller_Component_Status
    static ::StringW _get_k_pch_Controller_Component_Status();
    // Set static field: static public System.String k_pch_Controller_Component_Status
    static void _set_k_pch_Controller_Component_Status(::StringW value);
    // static field const value: static public System.String IVRRenderModels_Version
    static constexpr const char* IVRRenderModels_Version = "IVRRenderModels_005";
    // Get static field: static public System.String IVRRenderModels_Version
    static ::StringW _get_IVRRenderModels_Version();
    // Set static field: static public System.String IVRRenderModels_Version
    static void _set_IVRRenderModels_Version(::StringW value);
    // static field const value: static public System.UInt32 k_unNotificationTextMaxSize
    static constexpr const uint k_unNotificationTextMaxSize = 256u;
    // Get static field: static public System.UInt32 k_unNotificationTextMaxSize
    static uint _get_k_unNotificationTextMaxSize();
    // Set static field: static public System.UInt32 k_unNotificationTextMaxSize
    static void _set_k_unNotificationTextMaxSize(uint value);
    // static field const value: static public System.String IVRNotifications_Version
    static constexpr const char* IVRNotifications_Version = "IVRNotifications_002";
    // Get static field: static public System.String IVRNotifications_Version
    static ::StringW _get_IVRNotifications_Version();
    // Set static field: static public System.String IVRNotifications_Version
    static void _set_IVRNotifications_Version(::StringW value);
    // static field const value: static public System.UInt32 k_unMaxSettingsKeyLength
    static constexpr const uint k_unMaxSettingsKeyLength = 128u;
    // Get static field: static public System.UInt32 k_unMaxSettingsKeyLength
    static uint _get_k_unMaxSettingsKeyLength();
    // Set static field: static public System.UInt32 k_unMaxSettingsKeyLength
    static void _set_k_unMaxSettingsKeyLength(uint value);
    // static field const value: static public System.String IVRSettings_Version
    static constexpr const char* IVRSettings_Version = "IVRSettings_002";
    // Get static field: static public System.String IVRSettings_Version
    static ::StringW _get_IVRSettings_Version();
    // Set static field: static public System.String IVRSettings_Version
    static void _set_IVRSettings_Version(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_Section
    static constexpr const char* k_pch_SteamVR_Section = "steamvr";
    // Get static field: static public System.String k_pch_SteamVR_Section
    static ::StringW _get_k_pch_SteamVR_Section();
    // Set static field: static public System.String k_pch_SteamVR_Section
    static void _set_k_pch_SteamVR_Section(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_RequireHmd_String
    static constexpr const char* k_pch_SteamVR_RequireHmd_String = "requireHmd";
    // Get static field: static public System.String k_pch_SteamVR_RequireHmd_String
    static ::StringW _get_k_pch_SteamVR_RequireHmd_String();
    // Set static field: static public System.String k_pch_SteamVR_RequireHmd_String
    static void _set_k_pch_SteamVR_RequireHmd_String(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_ForcedDriverKey_String
    static constexpr const char* k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";
    // Get static field: static public System.String k_pch_SteamVR_ForcedDriverKey_String
    static ::StringW _get_k_pch_SteamVR_ForcedDriverKey_String();
    // Set static field: static public System.String k_pch_SteamVR_ForcedDriverKey_String
    static void _set_k_pch_SteamVR_ForcedDriverKey_String(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_ForcedHmdKey_String
    static constexpr const char* k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";
    // Get static field: static public System.String k_pch_SteamVR_ForcedHmdKey_String
    static ::StringW _get_k_pch_SteamVR_ForcedHmdKey_String();
    // Set static field: static public System.String k_pch_SteamVR_ForcedHmdKey_String
    static void _set_k_pch_SteamVR_ForcedHmdKey_String(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_DisplayDebug_Bool
    static constexpr const char* k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";
    // Get static field: static public System.String k_pch_SteamVR_DisplayDebug_Bool
    static ::StringW _get_k_pch_SteamVR_DisplayDebug_Bool();
    // Set static field: static public System.String k_pch_SteamVR_DisplayDebug_Bool
    static void _set_k_pch_SteamVR_DisplayDebug_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_DebugProcessPipe_String
    static constexpr const char* k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";
    // Get static field: static public System.String k_pch_SteamVR_DebugProcessPipe_String
    static ::StringW _get_k_pch_SteamVR_DebugProcessPipe_String();
    // Set static field: static public System.String k_pch_SteamVR_DebugProcessPipe_String
    static void _set_k_pch_SteamVR_DebugProcessPipe_String(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_DisplayDebugX_Int32
    static constexpr const char* k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";
    // Get static field: static public System.String k_pch_SteamVR_DisplayDebugX_Int32
    static ::StringW _get_k_pch_SteamVR_DisplayDebugX_Int32();
    // Set static field: static public System.String k_pch_SteamVR_DisplayDebugX_Int32
    static void _set_k_pch_SteamVR_DisplayDebugX_Int32(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_DisplayDebugY_Int32
    static constexpr const char* k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";
    // Get static field: static public System.String k_pch_SteamVR_DisplayDebugY_Int32
    static ::StringW _get_k_pch_SteamVR_DisplayDebugY_Int32();
    // Set static field: static public System.String k_pch_SteamVR_DisplayDebugY_Int32
    static void _set_k_pch_SteamVR_DisplayDebugY_Int32(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_SendSystemButtonToAllApps_Bool
    static constexpr const char* k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";
    // Get static field: static public System.String k_pch_SteamVR_SendSystemButtonToAllApps_Bool
    static ::StringW _get_k_pch_SteamVR_SendSystemButtonToAllApps_Bool();
    // Set static field: static public System.String k_pch_SteamVR_SendSystemButtonToAllApps_Bool
    static void _set_k_pch_SteamVR_SendSystemButtonToAllApps_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_LogLevel_Int32
    static constexpr const char* k_pch_SteamVR_LogLevel_Int32 = "loglevel";
    // Get static field: static public System.String k_pch_SteamVR_LogLevel_Int32
    static ::StringW _get_k_pch_SteamVR_LogLevel_Int32();
    // Set static field: static public System.String k_pch_SteamVR_LogLevel_Int32
    static void _set_k_pch_SteamVR_LogLevel_Int32(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_IPD_Float
    static constexpr const char* k_pch_SteamVR_IPD_Float = "ipd";
    // Get static field: static public System.String k_pch_SteamVR_IPD_Float
    static ::StringW _get_k_pch_SteamVR_IPD_Float();
    // Set static field: static public System.String k_pch_SteamVR_IPD_Float
    static void _set_k_pch_SteamVR_IPD_Float(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_Background_String
    static constexpr const char* k_pch_SteamVR_Background_String = "background";
    // Get static field: static public System.String k_pch_SteamVR_Background_String
    static ::StringW _get_k_pch_SteamVR_Background_String();
    // Set static field: static public System.String k_pch_SteamVR_Background_String
    static void _set_k_pch_SteamVR_Background_String(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_BackgroundUseDomeProjection_Bool
    static constexpr const char* k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";
    // Get static field: static public System.String k_pch_SteamVR_BackgroundUseDomeProjection_Bool
    static ::StringW _get_k_pch_SteamVR_BackgroundUseDomeProjection_Bool();
    // Set static field: static public System.String k_pch_SteamVR_BackgroundUseDomeProjection_Bool
    static void _set_k_pch_SteamVR_BackgroundUseDomeProjection_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_BackgroundCameraHeight_Float
    static constexpr const char* k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";
    // Get static field: static public System.String k_pch_SteamVR_BackgroundCameraHeight_Float
    static ::StringW _get_k_pch_SteamVR_BackgroundCameraHeight_Float();
    // Set static field: static public System.String k_pch_SteamVR_BackgroundCameraHeight_Float
    static void _set_k_pch_SteamVR_BackgroundCameraHeight_Float(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_BackgroundDomeRadius_Float
    static constexpr const char* k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";
    // Get static field: static public System.String k_pch_SteamVR_BackgroundDomeRadius_Float
    static ::StringW _get_k_pch_SteamVR_BackgroundDomeRadius_Float();
    // Set static field: static public System.String k_pch_SteamVR_BackgroundDomeRadius_Float
    static void _set_k_pch_SteamVR_BackgroundDomeRadius_Float(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_GridColor_String
    static constexpr const char* k_pch_SteamVR_GridColor_String = "gridColor";
    // Get static field: static public System.String k_pch_SteamVR_GridColor_String
    static ::StringW _get_k_pch_SteamVR_GridColor_String();
    // Set static field: static public System.String k_pch_SteamVR_GridColor_String
    static void _set_k_pch_SteamVR_GridColor_String(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_PlayAreaColor_String
    static constexpr const char* k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";
    // Get static field: static public System.String k_pch_SteamVR_PlayAreaColor_String
    static ::StringW _get_k_pch_SteamVR_PlayAreaColor_String();
    // Set static field: static public System.String k_pch_SteamVR_PlayAreaColor_String
    static void _set_k_pch_SteamVR_PlayAreaColor_String(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_ShowStage_Bool
    static constexpr const char* k_pch_SteamVR_ShowStage_Bool = "showStage";
    // Get static field: static public System.String k_pch_SteamVR_ShowStage_Bool
    static ::StringW _get_k_pch_SteamVR_ShowStage_Bool();
    // Set static field: static public System.String k_pch_SteamVR_ShowStage_Bool
    static void _set_k_pch_SteamVR_ShowStage_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_ActivateMultipleDrivers_Bool
    static constexpr const char* k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";
    // Get static field: static public System.String k_pch_SteamVR_ActivateMultipleDrivers_Bool
    static ::StringW _get_k_pch_SteamVR_ActivateMultipleDrivers_Bool();
    // Set static field: static public System.String k_pch_SteamVR_ActivateMultipleDrivers_Bool
    static void _set_k_pch_SteamVR_ActivateMultipleDrivers_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_DirectMode_Bool
    static constexpr const char* k_pch_SteamVR_DirectMode_Bool = "directMode";
    // Get static field: static public System.String k_pch_SteamVR_DirectMode_Bool
    static ::StringW _get_k_pch_SteamVR_DirectMode_Bool();
    // Set static field: static public System.String k_pch_SteamVR_DirectMode_Bool
    static void _set_k_pch_SteamVR_DirectMode_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_DirectModeEdidVid_Int32
    static constexpr const char* k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";
    // Get static field: static public System.String k_pch_SteamVR_DirectModeEdidVid_Int32
    static ::StringW _get_k_pch_SteamVR_DirectModeEdidVid_Int32();
    // Set static field: static public System.String k_pch_SteamVR_DirectModeEdidVid_Int32
    static void _set_k_pch_SteamVR_DirectModeEdidVid_Int32(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_DirectModeEdidPid_Int32
    static constexpr const char* k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";
    // Get static field: static public System.String k_pch_SteamVR_DirectModeEdidPid_Int32
    static ::StringW _get_k_pch_SteamVR_DirectModeEdidPid_Int32();
    // Set static field: static public System.String k_pch_SteamVR_DirectModeEdidPid_Int32
    static void _set_k_pch_SteamVR_DirectModeEdidPid_Int32(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_UsingSpeakers_Bool
    static constexpr const char* k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";
    // Get static field: static public System.String k_pch_SteamVR_UsingSpeakers_Bool
    static ::StringW _get_k_pch_SteamVR_UsingSpeakers_Bool();
    // Set static field: static public System.String k_pch_SteamVR_UsingSpeakers_Bool
    static void _set_k_pch_SteamVR_UsingSpeakers_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float
    static constexpr const char* k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";
    // Get static field: static public System.String k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float
    static ::StringW _get_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float();
    // Set static field: static public System.String k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float
    static void _set_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_BaseStationPowerManagement_Bool
    static constexpr const char* k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";
    // Get static field: static public System.String k_pch_SteamVR_BaseStationPowerManagement_Bool
    static ::StringW _get_k_pch_SteamVR_BaseStationPowerManagement_Bool();
    // Set static field: static public System.String k_pch_SteamVR_BaseStationPowerManagement_Bool
    static void _set_k_pch_SteamVR_BaseStationPowerManagement_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_NeverKillProcesses_Bool
    static constexpr const char* k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";
    // Get static field: static public System.String k_pch_SteamVR_NeverKillProcesses_Bool
    static ::StringW _get_k_pch_SteamVR_NeverKillProcesses_Bool();
    // Set static field: static public System.String k_pch_SteamVR_NeverKillProcesses_Bool
    static void _set_k_pch_SteamVR_NeverKillProcesses_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_SupersampleScale_Float
    static constexpr const char* k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";
    // Get static field: static public System.String k_pch_SteamVR_SupersampleScale_Float
    static ::StringW _get_k_pch_SteamVR_SupersampleScale_Float();
    // Set static field: static public System.String k_pch_SteamVR_SupersampleScale_Float
    static void _set_k_pch_SteamVR_SupersampleScale_Float(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_AllowAsyncReprojection_Bool
    static constexpr const char* k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";
    // Get static field: static public System.String k_pch_SteamVR_AllowAsyncReprojection_Bool
    static ::StringW _get_k_pch_SteamVR_AllowAsyncReprojection_Bool();
    // Set static field: static public System.String k_pch_SteamVR_AllowAsyncReprojection_Bool
    static void _set_k_pch_SteamVR_AllowAsyncReprojection_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_AllowReprojection_Bool
    static constexpr const char* k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";
    // Get static field: static public System.String k_pch_SteamVR_AllowReprojection_Bool
    static ::StringW _get_k_pch_SteamVR_AllowReprojection_Bool();
    // Set static field: static public System.String k_pch_SteamVR_AllowReprojection_Bool
    static void _set_k_pch_SteamVR_AllowReprojection_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_ForceReprojection_Bool
    static constexpr const char* k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";
    // Get static field: static public System.String k_pch_SteamVR_ForceReprojection_Bool
    static ::StringW _get_k_pch_SteamVR_ForceReprojection_Bool();
    // Set static field: static public System.String k_pch_SteamVR_ForceReprojection_Bool
    static void _set_k_pch_SteamVR_ForceReprojection_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_ForceFadeOnBadTracking_Bool
    static constexpr const char* k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";
    // Get static field: static public System.String k_pch_SteamVR_ForceFadeOnBadTracking_Bool
    static ::StringW _get_k_pch_SteamVR_ForceFadeOnBadTracking_Bool();
    // Set static field: static public System.String k_pch_SteamVR_ForceFadeOnBadTracking_Bool
    static void _set_k_pch_SteamVR_ForceFadeOnBadTracking_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_DefaultMirrorView_Int32
    static constexpr const char* k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";
    // Get static field: static public System.String k_pch_SteamVR_DefaultMirrorView_Int32
    static ::StringW _get_k_pch_SteamVR_DefaultMirrorView_Int32();
    // Set static field: static public System.String k_pch_SteamVR_DefaultMirrorView_Int32
    static void _set_k_pch_SteamVR_DefaultMirrorView_Int32(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_ShowMirrorView_Bool
    static constexpr const char* k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";
    // Get static field: static public System.String k_pch_SteamVR_ShowMirrorView_Bool
    static ::StringW _get_k_pch_SteamVR_ShowMirrorView_Bool();
    // Set static field: static public System.String k_pch_SteamVR_ShowMirrorView_Bool
    static void _set_k_pch_SteamVR_ShowMirrorView_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_MirrorViewGeometry_String
    static constexpr const char* k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";
    // Get static field: static public System.String k_pch_SteamVR_MirrorViewGeometry_String
    static ::StringW _get_k_pch_SteamVR_MirrorViewGeometry_String();
    // Set static field: static public System.String k_pch_SteamVR_MirrorViewGeometry_String
    static void _set_k_pch_SteamVR_MirrorViewGeometry_String(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_StartMonitorFromAppLaunch
    static constexpr const char* k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";
    // Get static field: static public System.String k_pch_SteamVR_StartMonitorFromAppLaunch
    static ::StringW _get_k_pch_SteamVR_StartMonitorFromAppLaunch();
    // Set static field: static public System.String k_pch_SteamVR_StartMonitorFromAppLaunch
    static void _set_k_pch_SteamVR_StartMonitorFromAppLaunch(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_StartCompositorFromAppLaunch_Bool
    static constexpr const char* k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";
    // Get static field: static public System.String k_pch_SteamVR_StartCompositorFromAppLaunch_Bool
    static ::StringW _get_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool();
    // Set static field: static public System.String k_pch_SteamVR_StartCompositorFromAppLaunch_Bool
    static void _set_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_StartDashboardFromAppLaunch_Bool
    static constexpr const char* k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";
    // Get static field: static public System.String k_pch_SteamVR_StartDashboardFromAppLaunch_Bool
    static ::StringW _get_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool();
    // Set static field: static public System.String k_pch_SteamVR_StartDashboardFromAppLaunch_Bool
    static void _set_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool
    static constexpr const char* k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";
    // Get static field: static public System.String k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool
    static ::StringW _get_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool();
    // Set static field: static public System.String k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool
    static void _set_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_EnableHomeApp
    static constexpr const char* k_pch_SteamVR_EnableHomeApp = "enableHomeApp";
    // Get static field: static public System.String k_pch_SteamVR_EnableHomeApp
    static ::StringW _get_k_pch_SteamVR_EnableHomeApp();
    // Set static field: static public System.String k_pch_SteamVR_EnableHomeApp
    static void _set_k_pch_SteamVR_EnableHomeApp(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32
    static constexpr const char* k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";
    // Get static field: static public System.String k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32
    static ::StringW _get_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32();
    // Set static field: static public System.String k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32
    static void _set_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_RetailDemo_Bool
    static constexpr const char* k_pch_SteamVR_RetailDemo_Bool = "retailDemo";
    // Get static field: static public System.String k_pch_SteamVR_RetailDemo_Bool
    static ::StringW _get_k_pch_SteamVR_RetailDemo_Bool();
    // Set static field: static public System.String k_pch_SteamVR_RetailDemo_Bool
    static void _set_k_pch_SteamVR_RetailDemo_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_IpdOffset_Float
    static constexpr const char* k_pch_SteamVR_IpdOffset_Float = "ipdOffset";
    // Get static field: static public System.String k_pch_SteamVR_IpdOffset_Float
    static ::StringW _get_k_pch_SteamVR_IpdOffset_Float();
    // Set static field: static public System.String k_pch_SteamVR_IpdOffset_Float
    static void _set_k_pch_SteamVR_IpdOffset_Float(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_AllowSupersampleFiltering_Bool
    static constexpr const char* k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";
    // Get static field: static public System.String k_pch_SteamVR_AllowSupersampleFiltering_Bool
    static ::StringW _get_k_pch_SteamVR_AllowSupersampleFiltering_Bool();
    // Set static field: static public System.String k_pch_SteamVR_AllowSupersampleFiltering_Bool
    static void _set_k_pch_SteamVR_AllowSupersampleFiltering_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_EnableLinuxVulkanAsync_Bool
    static constexpr const char* k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";
    // Get static field: static public System.String k_pch_SteamVR_EnableLinuxVulkanAsync_Bool
    static ::StringW _get_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool();
    // Set static field: static public System.String k_pch_SteamVR_EnableLinuxVulkanAsync_Bool
    static void _set_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_AllowDisplayLockedMode_Bool
    static constexpr const char* k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";
    // Get static field: static public System.String k_pch_SteamVR_AllowDisplayLockedMode_Bool
    static ::StringW _get_k_pch_SteamVR_AllowDisplayLockedMode_Bool();
    // Set static field: static public System.String k_pch_SteamVR_AllowDisplayLockedMode_Bool
    static void _set_k_pch_SteamVR_AllowDisplayLockedMode_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool
    static constexpr const char* k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";
    // Get static field: static public System.String k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool
    static ::StringW _get_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool();
    // Set static field: static public System.String k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool
    static void _set_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool(::StringW value);
    // static field const value: static public System.String k_pch_SteamVR_ForceWindows32bitVRMonitor
    static constexpr const char* k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";
    // Get static field: static public System.String k_pch_SteamVR_ForceWindows32bitVRMonitor
    static ::StringW _get_k_pch_SteamVR_ForceWindows32bitVRMonitor();
    // Set static field: static public System.String k_pch_SteamVR_ForceWindows32bitVRMonitor
    static void _set_k_pch_SteamVR_ForceWindows32bitVRMonitor(::StringW value);
    // static field const value: static public System.String k_pch_Lighthouse_Section
    static constexpr const char* k_pch_Lighthouse_Section = "driver_lighthouse";
    // Get static field: static public System.String k_pch_Lighthouse_Section
    static ::StringW _get_k_pch_Lighthouse_Section();
    // Set static field: static public System.String k_pch_Lighthouse_Section
    static void _set_k_pch_Lighthouse_Section(::StringW value);
    // static field const value: static public System.String k_pch_Lighthouse_DisableIMU_Bool
    static constexpr const char* k_pch_Lighthouse_DisableIMU_Bool = "disableimu";
    // Get static field: static public System.String k_pch_Lighthouse_DisableIMU_Bool
    static ::StringW _get_k_pch_Lighthouse_DisableIMU_Bool();
    // Set static field: static public System.String k_pch_Lighthouse_DisableIMU_Bool
    static void _set_k_pch_Lighthouse_DisableIMU_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Lighthouse_DisableIMUExceptHMD_Bool
    static constexpr const char* k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";
    // Get static field: static public System.String k_pch_Lighthouse_DisableIMUExceptHMD_Bool
    static ::StringW _get_k_pch_Lighthouse_DisableIMUExceptHMD_Bool();
    // Set static field: static public System.String k_pch_Lighthouse_DisableIMUExceptHMD_Bool
    static void _set_k_pch_Lighthouse_DisableIMUExceptHMD_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Lighthouse_UseDisambiguation_String
    static constexpr const char* k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";
    // Get static field: static public System.String k_pch_Lighthouse_UseDisambiguation_String
    static ::StringW _get_k_pch_Lighthouse_UseDisambiguation_String();
    // Set static field: static public System.String k_pch_Lighthouse_UseDisambiguation_String
    static void _set_k_pch_Lighthouse_UseDisambiguation_String(::StringW value);
    // static field const value: static public System.String k_pch_Lighthouse_DisambiguationDebug_Int32
    static constexpr const char* k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";
    // Get static field: static public System.String k_pch_Lighthouse_DisambiguationDebug_Int32
    static ::StringW _get_k_pch_Lighthouse_DisambiguationDebug_Int32();
    // Set static field: static public System.String k_pch_Lighthouse_DisambiguationDebug_Int32
    static void _set_k_pch_Lighthouse_DisambiguationDebug_Int32(::StringW value);
    // static field const value: static public System.String k_pch_Lighthouse_PrimaryBasestation_Int32
    static constexpr const char* k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";
    // Get static field: static public System.String k_pch_Lighthouse_PrimaryBasestation_Int32
    static ::StringW _get_k_pch_Lighthouse_PrimaryBasestation_Int32();
    // Set static field: static public System.String k_pch_Lighthouse_PrimaryBasestation_Int32
    static void _set_k_pch_Lighthouse_PrimaryBasestation_Int32(::StringW value);
    // static field const value: static public System.String k_pch_Lighthouse_DBHistory_Bool
    static constexpr const char* k_pch_Lighthouse_DBHistory_Bool = "dbhistory";
    // Get static field: static public System.String k_pch_Lighthouse_DBHistory_Bool
    static ::StringW _get_k_pch_Lighthouse_DBHistory_Bool();
    // Set static field: static public System.String k_pch_Lighthouse_DBHistory_Bool
    static void _set_k_pch_Lighthouse_DBHistory_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Lighthouse_EnableBluetooth_Bool
    static constexpr const char* k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";
    // Get static field: static public System.String k_pch_Lighthouse_EnableBluetooth_Bool
    static ::StringW _get_k_pch_Lighthouse_EnableBluetooth_Bool();
    // Set static field: static public System.String k_pch_Lighthouse_EnableBluetooth_Bool
    static void _set_k_pch_Lighthouse_EnableBluetooth_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Null_Section
    static constexpr const char* k_pch_Null_Section = "driver_null";
    // Get static field: static public System.String k_pch_Null_Section
    static ::StringW _get_k_pch_Null_Section();
    // Set static field: static public System.String k_pch_Null_Section
    static void _set_k_pch_Null_Section(::StringW value);
    // static field const value: static public System.String k_pch_Null_SerialNumber_String
    static constexpr const char* k_pch_Null_SerialNumber_String = "serialNumber";
    // Get static field: static public System.String k_pch_Null_SerialNumber_String
    static ::StringW _get_k_pch_Null_SerialNumber_String();
    // Set static field: static public System.String k_pch_Null_SerialNumber_String
    static void _set_k_pch_Null_SerialNumber_String(::StringW value);
    // static field const value: static public System.String k_pch_Null_ModelNumber_String
    static constexpr const char* k_pch_Null_ModelNumber_String = "modelNumber";
    // Get static field: static public System.String k_pch_Null_ModelNumber_String
    static ::StringW _get_k_pch_Null_ModelNumber_String();
    // Set static field: static public System.String k_pch_Null_ModelNumber_String
    static void _set_k_pch_Null_ModelNumber_String(::StringW value);
    // static field const value: static public System.String k_pch_Null_WindowX_Int32
    static constexpr const char* k_pch_Null_WindowX_Int32 = "windowX";
    // Get static field: static public System.String k_pch_Null_WindowX_Int32
    static ::StringW _get_k_pch_Null_WindowX_Int32();
    // Set static field: static public System.String k_pch_Null_WindowX_Int32
    static void _set_k_pch_Null_WindowX_Int32(::StringW value);
    // static field const value: static public System.String k_pch_Null_WindowY_Int32
    static constexpr const char* k_pch_Null_WindowY_Int32 = "windowY";
    // Get static field: static public System.String k_pch_Null_WindowY_Int32
    static ::StringW _get_k_pch_Null_WindowY_Int32();
    // Set static field: static public System.String k_pch_Null_WindowY_Int32
    static void _set_k_pch_Null_WindowY_Int32(::StringW value);
    // static field const value: static public System.String k_pch_Null_WindowWidth_Int32
    static constexpr const char* k_pch_Null_WindowWidth_Int32 = "windowWidth";
    // Get static field: static public System.String k_pch_Null_WindowWidth_Int32
    static ::StringW _get_k_pch_Null_WindowWidth_Int32();
    // Set static field: static public System.String k_pch_Null_WindowWidth_Int32
    static void _set_k_pch_Null_WindowWidth_Int32(::StringW value);
    // static field const value: static public System.String k_pch_Null_WindowHeight_Int32
    static constexpr const char* k_pch_Null_WindowHeight_Int32 = "windowHeight";
    // Get static field: static public System.String k_pch_Null_WindowHeight_Int32
    static ::StringW _get_k_pch_Null_WindowHeight_Int32();
    // Set static field: static public System.String k_pch_Null_WindowHeight_Int32
    static void _set_k_pch_Null_WindowHeight_Int32(::StringW value);
    // static field const value: static public System.String k_pch_Null_RenderWidth_Int32
    static constexpr const char* k_pch_Null_RenderWidth_Int32 = "renderWidth";
    // Get static field: static public System.String k_pch_Null_RenderWidth_Int32
    static ::StringW _get_k_pch_Null_RenderWidth_Int32();
    // Set static field: static public System.String k_pch_Null_RenderWidth_Int32
    static void _set_k_pch_Null_RenderWidth_Int32(::StringW value);
    // static field const value: static public System.String k_pch_Null_RenderHeight_Int32
    static constexpr const char* k_pch_Null_RenderHeight_Int32 = "renderHeight";
    // Get static field: static public System.String k_pch_Null_RenderHeight_Int32
    static ::StringW _get_k_pch_Null_RenderHeight_Int32();
    // Set static field: static public System.String k_pch_Null_RenderHeight_Int32
    static void _set_k_pch_Null_RenderHeight_Int32(::StringW value);
    // static field const value: static public System.String k_pch_Null_SecondsFromVsyncToPhotons_Float
    static constexpr const char* k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";
    // Get static field: static public System.String k_pch_Null_SecondsFromVsyncToPhotons_Float
    static ::StringW _get_k_pch_Null_SecondsFromVsyncToPhotons_Float();
    // Set static field: static public System.String k_pch_Null_SecondsFromVsyncToPhotons_Float
    static void _set_k_pch_Null_SecondsFromVsyncToPhotons_Float(::StringW value);
    // static field const value: static public System.String k_pch_Null_DisplayFrequency_Float
    static constexpr const char* k_pch_Null_DisplayFrequency_Float = "displayFrequency";
    // Get static field: static public System.String k_pch_Null_DisplayFrequency_Float
    static ::StringW _get_k_pch_Null_DisplayFrequency_Float();
    // Set static field: static public System.String k_pch_Null_DisplayFrequency_Float
    static void _set_k_pch_Null_DisplayFrequency_Float(::StringW value);
    // static field const value: static public System.String k_pch_UserInterface_Section
    static constexpr const char* k_pch_UserInterface_Section = "userinterface";
    // Get static field: static public System.String k_pch_UserInterface_Section
    static ::StringW _get_k_pch_UserInterface_Section();
    // Set static field: static public System.String k_pch_UserInterface_Section
    static void _set_k_pch_UserInterface_Section(::StringW value);
    // static field const value: static public System.String k_pch_UserInterface_StatusAlwaysOnTop_Bool
    static constexpr const char* k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";
    // Get static field: static public System.String k_pch_UserInterface_StatusAlwaysOnTop_Bool
    static ::StringW _get_k_pch_UserInterface_StatusAlwaysOnTop_Bool();
    // Set static field: static public System.String k_pch_UserInterface_StatusAlwaysOnTop_Bool
    static void _set_k_pch_UserInterface_StatusAlwaysOnTop_Bool(::StringW value);
    // static field const value: static public System.String k_pch_UserInterface_MinimizeToTray_Bool
    static constexpr const char* k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";
    // Get static field: static public System.String k_pch_UserInterface_MinimizeToTray_Bool
    static ::StringW _get_k_pch_UserInterface_MinimizeToTray_Bool();
    // Set static field: static public System.String k_pch_UserInterface_MinimizeToTray_Bool
    static void _set_k_pch_UserInterface_MinimizeToTray_Bool(::StringW value);
    // static field const value: static public System.String k_pch_UserInterface_Screenshots_Bool
    static constexpr const char* k_pch_UserInterface_Screenshots_Bool = "screenshots";
    // Get static field: static public System.String k_pch_UserInterface_Screenshots_Bool
    static ::StringW _get_k_pch_UserInterface_Screenshots_Bool();
    // Set static field: static public System.String k_pch_UserInterface_Screenshots_Bool
    static void _set_k_pch_UserInterface_Screenshots_Bool(::StringW value);
    // static field const value: static public System.String k_pch_UserInterface_ScreenshotType_Int
    static constexpr const char* k_pch_UserInterface_ScreenshotType_Int = "screenshotType";
    // Get static field: static public System.String k_pch_UserInterface_ScreenshotType_Int
    static ::StringW _get_k_pch_UserInterface_ScreenshotType_Int();
    // Set static field: static public System.String k_pch_UserInterface_ScreenshotType_Int
    static void _set_k_pch_UserInterface_ScreenshotType_Int(::StringW value);
    // static field const value: static public System.String k_pch_Notifications_Section
    static constexpr const char* k_pch_Notifications_Section = "notifications";
    // Get static field: static public System.String k_pch_Notifications_Section
    static ::StringW _get_k_pch_Notifications_Section();
    // Set static field: static public System.String k_pch_Notifications_Section
    static void _set_k_pch_Notifications_Section(::StringW value);
    // static field const value: static public System.String k_pch_Notifications_DoNotDisturb_Bool
    static constexpr const char* k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";
    // Get static field: static public System.String k_pch_Notifications_DoNotDisturb_Bool
    static ::StringW _get_k_pch_Notifications_DoNotDisturb_Bool();
    // Set static field: static public System.String k_pch_Notifications_DoNotDisturb_Bool
    static void _set_k_pch_Notifications_DoNotDisturb_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Keyboard_Section
    static constexpr const char* k_pch_Keyboard_Section = "keyboard";
    // Get static field: static public System.String k_pch_Keyboard_Section
    static ::StringW _get_k_pch_Keyboard_Section();
    // Set static field: static public System.String k_pch_Keyboard_Section
    static void _set_k_pch_Keyboard_Section(::StringW value);
    // static field const value: static public System.String k_pch_Keyboard_TutorialCompletions
    static constexpr const char* k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";
    // Get static field: static public System.String k_pch_Keyboard_TutorialCompletions
    static ::StringW _get_k_pch_Keyboard_TutorialCompletions();
    // Set static field: static public System.String k_pch_Keyboard_TutorialCompletions
    static void _set_k_pch_Keyboard_TutorialCompletions(::StringW value);
    // static field const value: static public System.String k_pch_Keyboard_ScaleX
    static constexpr const char* k_pch_Keyboard_ScaleX = "ScaleX";
    // Get static field: static public System.String k_pch_Keyboard_ScaleX
    static ::StringW _get_k_pch_Keyboard_ScaleX();
    // Set static field: static public System.String k_pch_Keyboard_ScaleX
    static void _set_k_pch_Keyboard_ScaleX(::StringW value);
    // static field const value: static public System.String k_pch_Keyboard_ScaleY
    static constexpr const char* k_pch_Keyboard_ScaleY = "ScaleY";
    // Get static field: static public System.String k_pch_Keyboard_ScaleY
    static ::StringW _get_k_pch_Keyboard_ScaleY();
    // Set static field: static public System.String k_pch_Keyboard_ScaleY
    static void _set_k_pch_Keyboard_ScaleY(::StringW value);
    // static field const value: static public System.String k_pch_Keyboard_OffsetLeftX
    static constexpr const char* k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";
    // Get static field: static public System.String k_pch_Keyboard_OffsetLeftX
    static ::StringW _get_k_pch_Keyboard_OffsetLeftX();
    // Set static field: static public System.String k_pch_Keyboard_OffsetLeftX
    static void _set_k_pch_Keyboard_OffsetLeftX(::StringW value);
    // static field const value: static public System.String k_pch_Keyboard_OffsetRightX
    static constexpr const char* k_pch_Keyboard_OffsetRightX = "OffsetRightX";
    // Get static field: static public System.String k_pch_Keyboard_OffsetRightX
    static ::StringW _get_k_pch_Keyboard_OffsetRightX();
    // Set static field: static public System.String k_pch_Keyboard_OffsetRightX
    static void _set_k_pch_Keyboard_OffsetRightX(::StringW value);
    // static field const value: static public System.String k_pch_Keyboard_OffsetY
    static constexpr const char* k_pch_Keyboard_OffsetY = "OffsetY";
    // Get static field: static public System.String k_pch_Keyboard_OffsetY
    static ::StringW _get_k_pch_Keyboard_OffsetY();
    // Set static field: static public System.String k_pch_Keyboard_OffsetY
    static void _set_k_pch_Keyboard_OffsetY(::StringW value);
    // static field const value: static public System.String k_pch_Keyboard_Smoothing
    static constexpr const char* k_pch_Keyboard_Smoothing = "Smoothing";
    // Get static field: static public System.String k_pch_Keyboard_Smoothing
    static ::StringW _get_k_pch_Keyboard_Smoothing();
    // Set static field: static public System.String k_pch_Keyboard_Smoothing
    static void _set_k_pch_Keyboard_Smoothing(::StringW value);
    // static field const value: static public System.String k_pch_Perf_Section
    static constexpr const char* k_pch_Perf_Section = "perfcheck";
    // Get static field: static public System.String k_pch_Perf_Section
    static ::StringW _get_k_pch_Perf_Section();
    // Set static field: static public System.String k_pch_Perf_Section
    static void _set_k_pch_Perf_Section(::StringW value);
    // static field const value: static public System.String k_pch_Perf_HeuristicActive_Bool
    static constexpr const char* k_pch_Perf_HeuristicActive_Bool = "heuristicActive";
    // Get static field: static public System.String k_pch_Perf_HeuristicActive_Bool
    static ::StringW _get_k_pch_Perf_HeuristicActive_Bool();
    // Set static field: static public System.String k_pch_Perf_HeuristicActive_Bool
    static void _set_k_pch_Perf_HeuristicActive_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Perf_NotifyInHMD_Bool
    static constexpr const char* k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";
    // Get static field: static public System.String k_pch_Perf_NotifyInHMD_Bool
    static ::StringW _get_k_pch_Perf_NotifyInHMD_Bool();
    // Set static field: static public System.String k_pch_Perf_NotifyInHMD_Bool
    static void _set_k_pch_Perf_NotifyInHMD_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Perf_NotifyOnlyOnce_Bool
    static constexpr const char* k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";
    // Get static field: static public System.String k_pch_Perf_NotifyOnlyOnce_Bool
    static ::StringW _get_k_pch_Perf_NotifyOnlyOnce_Bool();
    // Set static field: static public System.String k_pch_Perf_NotifyOnlyOnce_Bool
    static void _set_k_pch_Perf_NotifyOnlyOnce_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Perf_AllowTimingStore_Bool
    static constexpr const char* k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";
    // Get static field: static public System.String k_pch_Perf_AllowTimingStore_Bool
    static ::StringW _get_k_pch_Perf_AllowTimingStore_Bool();
    // Set static field: static public System.String k_pch_Perf_AllowTimingStore_Bool
    static void _set_k_pch_Perf_AllowTimingStore_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Perf_SaveTimingsOnExit_Bool
    static constexpr const char* k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";
    // Get static field: static public System.String k_pch_Perf_SaveTimingsOnExit_Bool
    static ::StringW _get_k_pch_Perf_SaveTimingsOnExit_Bool();
    // Set static field: static public System.String k_pch_Perf_SaveTimingsOnExit_Bool
    static void _set_k_pch_Perf_SaveTimingsOnExit_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Perf_TestData_Float
    static constexpr const char* k_pch_Perf_TestData_Float = "perfTestData";
    // Get static field: static public System.String k_pch_Perf_TestData_Float
    static ::StringW _get_k_pch_Perf_TestData_Float();
    // Set static field: static public System.String k_pch_Perf_TestData_Float
    static void _set_k_pch_Perf_TestData_Float(::StringW value);
    // static field const value: static public System.String k_pch_Perf_LinuxGPUProfiling_Bool
    static constexpr const char* k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";
    // Get static field: static public System.String k_pch_Perf_LinuxGPUProfiling_Bool
    static ::StringW _get_k_pch_Perf_LinuxGPUProfiling_Bool();
    // Set static field: static public System.String k_pch_Perf_LinuxGPUProfiling_Bool
    static void _set_k_pch_Perf_LinuxGPUProfiling_Bool(::StringW value);
    // static field const value: static public System.String k_pch_CollisionBounds_Section
    static constexpr const char* k_pch_CollisionBounds_Section = "collisionBounds";
    // Get static field: static public System.String k_pch_CollisionBounds_Section
    static ::StringW _get_k_pch_CollisionBounds_Section();
    // Set static field: static public System.String k_pch_CollisionBounds_Section
    static void _set_k_pch_CollisionBounds_Section(::StringW value);
    // static field const value: static public System.String k_pch_CollisionBounds_Style_Int32
    static constexpr const char* k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";
    // Get static field: static public System.String k_pch_CollisionBounds_Style_Int32
    static ::StringW _get_k_pch_CollisionBounds_Style_Int32();
    // Set static field: static public System.String k_pch_CollisionBounds_Style_Int32
    static void _set_k_pch_CollisionBounds_Style_Int32(::StringW value);
    // static field const value: static public System.String k_pch_CollisionBounds_GroundPerimeterOn_Bool
    static constexpr const char* k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";
    // Get static field: static public System.String k_pch_CollisionBounds_GroundPerimeterOn_Bool
    static ::StringW _get_k_pch_CollisionBounds_GroundPerimeterOn_Bool();
    // Set static field: static public System.String k_pch_CollisionBounds_GroundPerimeterOn_Bool
    static void _set_k_pch_CollisionBounds_GroundPerimeterOn_Bool(::StringW value);
    // static field const value: static public System.String k_pch_CollisionBounds_CenterMarkerOn_Bool
    static constexpr const char* k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";
    // Get static field: static public System.String k_pch_CollisionBounds_CenterMarkerOn_Bool
    static ::StringW _get_k_pch_CollisionBounds_CenterMarkerOn_Bool();
    // Set static field: static public System.String k_pch_CollisionBounds_CenterMarkerOn_Bool
    static void _set_k_pch_CollisionBounds_CenterMarkerOn_Bool(::StringW value);
    // static field const value: static public System.String k_pch_CollisionBounds_PlaySpaceOn_Bool
    static constexpr const char* k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";
    // Get static field: static public System.String k_pch_CollisionBounds_PlaySpaceOn_Bool
    static ::StringW _get_k_pch_CollisionBounds_PlaySpaceOn_Bool();
    // Set static field: static public System.String k_pch_CollisionBounds_PlaySpaceOn_Bool
    static void _set_k_pch_CollisionBounds_PlaySpaceOn_Bool(::StringW value);
    // static field const value: static public System.String k_pch_CollisionBounds_FadeDistance_Float
    static constexpr const char* k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";
    // Get static field: static public System.String k_pch_CollisionBounds_FadeDistance_Float
    static ::StringW _get_k_pch_CollisionBounds_FadeDistance_Float();
    // Set static field: static public System.String k_pch_CollisionBounds_FadeDistance_Float
    static void _set_k_pch_CollisionBounds_FadeDistance_Float(::StringW value);
    // static field const value: static public System.String k_pch_CollisionBounds_ColorGammaR_Int32
    static constexpr const char* k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";
    // Get static field: static public System.String k_pch_CollisionBounds_ColorGammaR_Int32
    static ::StringW _get_k_pch_CollisionBounds_ColorGammaR_Int32();
    // Set static field: static public System.String k_pch_CollisionBounds_ColorGammaR_Int32
    static void _set_k_pch_CollisionBounds_ColorGammaR_Int32(::StringW value);
    // static field const value: static public System.String k_pch_CollisionBounds_ColorGammaG_Int32
    static constexpr const char* k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";
    // Get static field: static public System.String k_pch_CollisionBounds_ColorGammaG_Int32
    static ::StringW _get_k_pch_CollisionBounds_ColorGammaG_Int32();
    // Set static field: static public System.String k_pch_CollisionBounds_ColorGammaG_Int32
    static void _set_k_pch_CollisionBounds_ColorGammaG_Int32(::StringW value);
    // static field const value: static public System.String k_pch_CollisionBounds_ColorGammaB_Int32
    static constexpr const char* k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";
    // Get static field: static public System.String k_pch_CollisionBounds_ColorGammaB_Int32
    static ::StringW _get_k_pch_CollisionBounds_ColorGammaB_Int32();
    // Set static field: static public System.String k_pch_CollisionBounds_ColorGammaB_Int32
    static void _set_k_pch_CollisionBounds_ColorGammaB_Int32(::StringW value);
    // static field const value: static public System.String k_pch_CollisionBounds_ColorGammaA_Int32
    static constexpr const char* k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";
    // Get static field: static public System.String k_pch_CollisionBounds_ColorGammaA_Int32
    static ::StringW _get_k_pch_CollisionBounds_ColorGammaA_Int32();
    // Set static field: static public System.String k_pch_CollisionBounds_ColorGammaA_Int32
    static void _set_k_pch_CollisionBounds_ColorGammaA_Int32(::StringW value);
    // static field const value: static public System.String k_pch_Camera_Section
    static constexpr const char* k_pch_Camera_Section = "camera";
    // Get static field: static public System.String k_pch_Camera_Section
    static ::StringW _get_k_pch_Camera_Section();
    // Set static field: static public System.String k_pch_Camera_Section
    static void _set_k_pch_Camera_Section(::StringW value);
    // static field const value: static public System.String k_pch_Camera_EnableCamera_Bool
    static constexpr const char* k_pch_Camera_EnableCamera_Bool = "enableCamera";
    // Get static field: static public System.String k_pch_Camera_EnableCamera_Bool
    static ::StringW _get_k_pch_Camera_EnableCamera_Bool();
    // Set static field: static public System.String k_pch_Camera_EnableCamera_Bool
    static void _set_k_pch_Camera_EnableCamera_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Camera_EnableCameraInDashboard_Bool
    static constexpr const char* k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";
    // Get static field: static public System.String k_pch_Camera_EnableCameraInDashboard_Bool
    static ::StringW _get_k_pch_Camera_EnableCameraInDashboard_Bool();
    // Set static field: static public System.String k_pch_Camera_EnableCameraInDashboard_Bool
    static void _set_k_pch_Camera_EnableCameraInDashboard_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Camera_EnableCameraForCollisionBounds_Bool
    static constexpr const char* k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";
    // Get static field: static public System.String k_pch_Camera_EnableCameraForCollisionBounds_Bool
    static ::StringW _get_k_pch_Camera_EnableCameraForCollisionBounds_Bool();
    // Set static field: static public System.String k_pch_Camera_EnableCameraForCollisionBounds_Bool
    static void _set_k_pch_Camera_EnableCameraForCollisionBounds_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Camera_EnableCameraForRoomView_Bool
    static constexpr const char* k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";
    // Get static field: static public System.String k_pch_Camera_EnableCameraForRoomView_Bool
    static ::StringW _get_k_pch_Camera_EnableCameraForRoomView_Bool();
    // Set static field: static public System.String k_pch_Camera_EnableCameraForRoomView_Bool
    static void _set_k_pch_Camera_EnableCameraForRoomView_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Camera_BoundsColorGammaR_Int32
    static constexpr const char* k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";
    // Get static field: static public System.String k_pch_Camera_BoundsColorGammaR_Int32
    static ::StringW _get_k_pch_Camera_BoundsColorGammaR_Int32();
    // Set static field: static public System.String k_pch_Camera_BoundsColorGammaR_Int32
    static void _set_k_pch_Camera_BoundsColorGammaR_Int32(::StringW value);
    // static field const value: static public System.String k_pch_Camera_BoundsColorGammaG_Int32
    static constexpr const char* k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";
    // Get static field: static public System.String k_pch_Camera_BoundsColorGammaG_Int32
    static ::StringW _get_k_pch_Camera_BoundsColorGammaG_Int32();
    // Set static field: static public System.String k_pch_Camera_BoundsColorGammaG_Int32
    static void _set_k_pch_Camera_BoundsColorGammaG_Int32(::StringW value);
    // static field const value: static public System.String k_pch_Camera_BoundsColorGammaB_Int32
    static constexpr const char* k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";
    // Get static field: static public System.String k_pch_Camera_BoundsColorGammaB_Int32
    static ::StringW _get_k_pch_Camera_BoundsColorGammaB_Int32();
    // Set static field: static public System.String k_pch_Camera_BoundsColorGammaB_Int32
    static void _set_k_pch_Camera_BoundsColorGammaB_Int32(::StringW value);
    // static field const value: static public System.String k_pch_Camera_BoundsColorGammaA_Int32
    static constexpr const char* k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";
    // Get static field: static public System.String k_pch_Camera_BoundsColorGammaA_Int32
    static ::StringW _get_k_pch_Camera_BoundsColorGammaA_Int32();
    // Set static field: static public System.String k_pch_Camera_BoundsColorGammaA_Int32
    static void _set_k_pch_Camera_BoundsColorGammaA_Int32(::StringW value);
    // static field const value: static public System.String k_pch_Camera_BoundsStrength_Int32
    static constexpr const char* k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";
    // Get static field: static public System.String k_pch_Camera_BoundsStrength_Int32
    static ::StringW _get_k_pch_Camera_BoundsStrength_Int32();
    // Set static field: static public System.String k_pch_Camera_BoundsStrength_Int32
    static void _set_k_pch_Camera_BoundsStrength_Int32(::StringW value);
    // static field const value: static public System.String k_pch_audio_Section
    static constexpr const char* k_pch_audio_Section = "audio";
    // Get static field: static public System.String k_pch_audio_Section
    static ::StringW _get_k_pch_audio_Section();
    // Set static field: static public System.String k_pch_audio_Section
    static void _set_k_pch_audio_Section(::StringW value);
    // static field const value: static public System.String k_pch_audio_OnPlaybackDevice_String
    static constexpr const char* k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";
    // Get static field: static public System.String k_pch_audio_OnPlaybackDevice_String
    static ::StringW _get_k_pch_audio_OnPlaybackDevice_String();
    // Set static field: static public System.String k_pch_audio_OnPlaybackDevice_String
    static void _set_k_pch_audio_OnPlaybackDevice_String(::StringW value);
    // static field const value: static public System.String k_pch_audio_OnRecordDevice_String
    static constexpr const char* k_pch_audio_OnRecordDevice_String = "onRecordDevice";
    // Get static field: static public System.String k_pch_audio_OnRecordDevice_String
    static ::StringW _get_k_pch_audio_OnRecordDevice_String();
    // Set static field: static public System.String k_pch_audio_OnRecordDevice_String
    static void _set_k_pch_audio_OnRecordDevice_String(::StringW value);
    // static field const value: static public System.String k_pch_audio_OnPlaybackMirrorDevice_String
    static constexpr const char* k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";
    // Get static field: static public System.String k_pch_audio_OnPlaybackMirrorDevice_String
    static ::StringW _get_k_pch_audio_OnPlaybackMirrorDevice_String();
    // Set static field: static public System.String k_pch_audio_OnPlaybackMirrorDevice_String
    static void _set_k_pch_audio_OnPlaybackMirrorDevice_String(::StringW value);
    // static field const value: static public System.String k_pch_audio_OffPlaybackDevice_String
    static constexpr const char* k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";
    // Get static field: static public System.String k_pch_audio_OffPlaybackDevice_String
    static ::StringW _get_k_pch_audio_OffPlaybackDevice_String();
    // Set static field: static public System.String k_pch_audio_OffPlaybackDevice_String
    static void _set_k_pch_audio_OffPlaybackDevice_String(::StringW value);
    // static field const value: static public System.String k_pch_audio_OffRecordDevice_String
    static constexpr const char* k_pch_audio_OffRecordDevice_String = "offRecordDevice";
    // Get static field: static public System.String k_pch_audio_OffRecordDevice_String
    static ::StringW _get_k_pch_audio_OffRecordDevice_String();
    // Set static field: static public System.String k_pch_audio_OffRecordDevice_String
    static void _set_k_pch_audio_OffRecordDevice_String(::StringW value);
    // static field const value: static public System.String k_pch_audio_VIVEHDMIGain
    static constexpr const char* k_pch_audio_VIVEHDMIGain = "viveHDMIGain";
    // Get static field: static public System.String k_pch_audio_VIVEHDMIGain
    static ::StringW _get_k_pch_audio_VIVEHDMIGain();
    // Set static field: static public System.String k_pch_audio_VIVEHDMIGain
    static void _set_k_pch_audio_VIVEHDMIGain(::StringW value);
    // static field const value: static public System.String k_pch_Power_Section
    static constexpr const char* k_pch_Power_Section = "power";
    // Get static field: static public System.String k_pch_Power_Section
    static ::StringW _get_k_pch_Power_Section();
    // Set static field: static public System.String k_pch_Power_Section
    static void _set_k_pch_Power_Section(::StringW value);
    // static field const value: static public System.String k_pch_Power_PowerOffOnExit_Bool
    static constexpr const char* k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";
    // Get static field: static public System.String k_pch_Power_PowerOffOnExit_Bool
    static ::StringW _get_k_pch_Power_PowerOffOnExit_Bool();
    // Set static field: static public System.String k_pch_Power_PowerOffOnExit_Bool
    static void _set_k_pch_Power_PowerOffOnExit_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Power_TurnOffScreensTimeout_Float
    static constexpr const char* k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";
    // Get static field: static public System.String k_pch_Power_TurnOffScreensTimeout_Float
    static ::StringW _get_k_pch_Power_TurnOffScreensTimeout_Float();
    // Set static field: static public System.String k_pch_Power_TurnOffScreensTimeout_Float
    static void _set_k_pch_Power_TurnOffScreensTimeout_Float(::StringW value);
    // static field const value: static public System.String k_pch_Power_TurnOffControllersTimeout_Float
    static constexpr const char* k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";
    // Get static field: static public System.String k_pch_Power_TurnOffControllersTimeout_Float
    static ::StringW _get_k_pch_Power_TurnOffControllersTimeout_Float();
    // Set static field: static public System.String k_pch_Power_TurnOffControllersTimeout_Float
    static void _set_k_pch_Power_TurnOffControllersTimeout_Float(::StringW value);
    // static field const value: static public System.String k_pch_Power_ReturnToWatchdogTimeout_Float
    static constexpr const char* k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";
    // Get static field: static public System.String k_pch_Power_ReturnToWatchdogTimeout_Float
    static ::StringW _get_k_pch_Power_ReturnToWatchdogTimeout_Float();
    // Set static field: static public System.String k_pch_Power_ReturnToWatchdogTimeout_Float
    static void _set_k_pch_Power_ReturnToWatchdogTimeout_Float(::StringW value);
    // static field const value: static public System.String k_pch_Power_AutoLaunchSteamVROnButtonPress
    static constexpr const char* k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";
    // Get static field: static public System.String k_pch_Power_AutoLaunchSteamVROnButtonPress
    static ::StringW _get_k_pch_Power_AutoLaunchSteamVROnButtonPress();
    // Set static field: static public System.String k_pch_Power_AutoLaunchSteamVROnButtonPress
    static void _set_k_pch_Power_AutoLaunchSteamVROnButtonPress(::StringW value);
    // static field const value: static public System.String k_pch_Power_PauseCompositorOnStandby_Bool
    static constexpr const char* k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";
    // Get static field: static public System.String k_pch_Power_PauseCompositorOnStandby_Bool
    static ::StringW _get_k_pch_Power_PauseCompositorOnStandby_Bool();
    // Set static field: static public System.String k_pch_Power_PauseCompositorOnStandby_Bool
    static void _set_k_pch_Power_PauseCompositorOnStandby_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Dashboard_Section
    static constexpr const char* k_pch_Dashboard_Section = "dashboard";
    // Get static field: static public System.String k_pch_Dashboard_Section
    static ::StringW _get_k_pch_Dashboard_Section();
    // Set static field: static public System.String k_pch_Dashboard_Section
    static void _set_k_pch_Dashboard_Section(::StringW value);
    // static field const value: static public System.String k_pch_Dashboard_EnableDashboard_Bool
    static constexpr const char* k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";
    // Get static field: static public System.String k_pch_Dashboard_EnableDashboard_Bool
    static ::StringW _get_k_pch_Dashboard_EnableDashboard_Bool();
    // Set static field: static public System.String k_pch_Dashboard_EnableDashboard_Bool
    static void _set_k_pch_Dashboard_EnableDashboard_Bool(::StringW value);
    // static field const value: static public System.String k_pch_Dashboard_ArcadeMode_Bool
    static constexpr const char* k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";
    // Get static field: static public System.String k_pch_Dashboard_ArcadeMode_Bool
    static ::StringW _get_k_pch_Dashboard_ArcadeMode_Bool();
    // Set static field: static public System.String k_pch_Dashboard_ArcadeMode_Bool
    static void _set_k_pch_Dashboard_ArcadeMode_Bool(::StringW value);
    // static field const value: static public System.String k_pch_modelskin_Section
    static constexpr const char* k_pch_modelskin_Section = "modelskins";
    // Get static field: static public System.String k_pch_modelskin_Section
    static ::StringW _get_k_pch_modelskin_Section();
    // Set static field: static public System.String k_pch_modelskin_Section
    static void _set_k_pch_modelskin_Section(::StringW value);
    // static field const value: static public System.String k_pch_Driver_Enable_Bool
    static constexpr const char* k_pch_Driver_Enable_Bool = "enable";
    // Get static field: static public System.String k_pch_Driver_Enable_Bool
    static ::StringW _get_k_pch_Driver_Enable_Bool();
    // Set static field: static public System.String k_pch_Driver_Enable_Bool
    static void _set_k_pch_Driver_Enable_Bool(::StringW value);
    // static field const value: static public System.String IVRScreenshots_Version
    static constexpr const char* IVRScreenshots_Version = "IVRScreenshots_001";
    // Get static field: static public System.String IVRScreenshots_Version
    static ::StringW _get_IVRScreenshots_Version();
    // Set static field: static public System.String IVRScreenshots_Version
    static void _set_IVRScreenshots_Version(::StringW value);
    // static field const value: static public System.String IVRResources_Version
    static constexpr const char* IVRResources_Version = "IVRResources_001";
    // Get static field: static public System.String IVRResources_Version
    static ::StringW _get_IVRResources_Version();
    // Set static field: static public System.String IVRResources_Version
    static void _set_IVRResources_Version(::StringW value);
    // static field const value: static public System.String IVRDriverManager_Version
    static constexpr const char* IVRDriverManager_Version = "IVRDriverManager_001";
    // Get static field: static public System.String IVRDriverManager_Version
    static ::StringW _get_IVRDriverManager_Version();
    // Set static field: static public System.String IVRDriverManager_Version
    static void _set_IVRDriverManager_Version(::StringW value);
    // Get static field: static private System.UInt32 <VRToken>k__BackingField
    static uint _get_$VRToken$k__BackingField();
    // Set static field: static private System.UInt32 <VRToken>k__BackingField
    static void _set_$VRToken$k__BackingField(uint value);
    // static field const value: static private System.String FnTable_Prefix
    static constexpr const char* FnTable_Prefix = "FnTable:";
    // Get static field: static private System.String FnTable_Prefix
    static ::StringW _get_FnTable_Prefix();
    // Set static field: static private System.String FnTable_Prefix
    static void _set_FnTable_Prefix(::StringW value);
    // Get static field: static private Valve.VR.OpenVR/Valve.VR.COpenVRContext _OpenVRInternal_ModuleContext
    static ::Valve::VR::OpenVR::COpenVRContext* _get__OpenVRInternal_ModuleContext();
    // Set static field: static private Valve.VR.OpenVR/Valve.VR.COpenVRContext _OpenVRInternal_ModuleContext
    static void _set__OpenVRInternal_ModuleContext(::Valve::VR::OpenVR::COpenVRContext* value);
    // static private System.UInt32 get_VRToken()
    // Offset: 0x22D4194
    static uint get_VRToken();
    // static private System.Void set_VRToken(System.UInt32 value)
    // Offset: 0x22D41FC
    static void set_VRToken(uint value);
    // static private Valve.VR.OpenVR/Valve.VR.COpenVRContext get_OpenVRInternal_ModuleContext()
    // Offset: 0x22D4268
    static ::Valve::VR::OpenVR::COpenVRContext* get_OpenVRInternal_ModuleContext();
    // static public Valve.VR.CVRSystem get_System()
    // Offset: 0x22D4334
    static ::Valve::VR::CVRSystem* get_System();
    // static public Valve.VR.CVRChaperone get_Chaperone()
    // Offset: 0x22D43A0
    static ::Valve::VR::CVRChaperone* get_Chaperone();
    // static public Valve.VR.CVRChaperoneSetup get_ChaperoneSetup()
    // Offset: 0x22D440C
    static ::Valve::VR::CVRChaperoneSetup* get_ChaperoneSetup();
    // static public Valve.VR.CVRCompositor get_Compositor()
    // Offset: 0x22D4478
    static ::Valve::VR::CVRCompositor* get_Compositor();
    // static public Valve.VR.CVROverlay get_Overlay()
    // Offset: 0x22D44E4
    static ::Valve::VR::CVROverlay* get_Overlay();
    // static public Valve.VR.CVRRenderModels get_RenderModels()
    // Offset: 0x22D4550
    static ::Valve::VR::CVRRenderModels* get_RenderModels();
    // static public Valve.VR.CVRExtendedDisplay get_ExtendedDisplay()
    // Offset: 0x22D45BC
    static ::Valve::VR::CVRExtendedDisplay* get_ExtendedDisplay();
    // static public Valve.VR.CVRSettings get_Settings()
    // Offset: 0x22D4628
    static ::Valve::VR::CVRSettings* get_Settings();
    // static public Valve.VR.CVRApplications get_Applications()
    // Offset: 0x22D4694
    static ::Valve::VR::CVRApplications* get_Applications();
    // static public Valve.VR.CVRScreenshots get_Screenshots()
    // Offset: 0x22D4700
    static ::Valve::VR::CVRScreenshots* get_Screenshots();
    // static public Valve.VR.CVRTrackedCamera get_TrackedCamera()
    // Offset: 0x22D476C
    static ::Valve::VR::CVRTrackedCamera* get_TrackedCamera();
    // public System.Void .ctor()
    // Offset: 0x22D49A0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OpenVR* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::OpenVR::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OpenVR*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x22D49A8
    static void _cctor();
    // static public System.UInt32 InitInternal(ref Valve.VR.EVRInitError peError, Valve.VR.EVRApplicationType eApplicationType)
    // Offset: 0x22D40E0
    static uint InitInternal(ByRef<::Valve::VR::EVRInitError> peError, ::Valve::VR::EVRApplicationType eApplicationType);
    // static public System.Void ShutdownInternal()
    // Offset: 0x22D40E8
    static void ShutdownInternal();
    // static public System.Boolean IsHmdPresent()
    // Offset: 0x22D40F0
    static bool IsHmdPresent();
    // static public System.Boolean IsRuntimeInstalled()
    // Offset: 0x22D40F8
    static bool IsRuntimeInstalled();
    // static public System.String GetStringForHmdError(Valve.VR.EVRInitError error)
    // Offset: 0x22D4100
    static ::StringW GetStringForHmdError(::Valve::VR::EVRInitError error);
    // static public System.IntPtr GetGenericInterface(System.String pchInterfaceVersion, ref Valve.VR.EVRInitError peError)
    // Offset: 0x22D417C
    static ::System::IntPtr GetGenericInterface(::StringW pchInterfaceVersion, ByRef<::Valve::VR::EVRInitError> peError);
    // static public System.Boolean IsInterfaceVersionValid(System.String pchInterfaceVersion)
    // Offset: 0x22D4184
    static bool IsInterfaceVersionValid(::StringW pchInterfaceVersion);
    // static public System.UInt32 GetInitToken()
    // Offset: 0x22D418C
    static uint GetInitToken();
    // static public Valve.VR.CVRSystem Init(ref Valve.VR.EVRInitError peError, Valve.VR.EVRApplicationType eApplicationType)
    // Offset: 0x22D47D8
    static ::Valve::VR::CVRSystem* Init(ByRef<::Valve::VR::EVRInitError> peError, ::Valve::VR::EVRApplicationType eApplicationType);
    // static public System.Void Shutdown()
    // Offset: 0x22D4940
    static void Shutdown();
  }; // Valve.VR.OpenVR
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Valve::VR::OpenVR::get_VRToken
// Il2CppName: get_VRToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)()>(&Valve::VR::OpenVR::get_VRToken)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "get_VRToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::set_VRToken
// Il2CppName: set_VRToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint)>(&Valve::VR::OpenVR::set_VRToken)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "set_VRToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::get_OpenVRInternal_ModuleContext
// Il2CppName: get_OpenVRInternal_ModuleContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Valve::VR::OpenVR::COpenVRContext* (*)()>(&Valve::VR::OpenVR::get_OpenVRInternal_ModuleContext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "get_OpenVRInternal_ModuleContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::get_System
// Il2CppName: get_System
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Valve::VR::CVRSystem* (*)()>(&Valve::VR::OpenVR::get_System)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "get_System", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::get_Chaperone
// Il2CppName: get_Chaperone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Valve::VR::CVRChaperone* (*)()>(&Valve::VR::OpenVR::get_Chaperone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "get_Chaperone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::get_ChaperoneSetup
// Il2CppName: get_ChaperoneSetup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Valve::VR::CVRChaperoneSetup* (*)()>(&Valve::VR::OpenVR::get_ChaperoneSetup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "get_ChaperoneSetup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::get_Compositor
// Il2CppName: get_Compositor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Valve::VR::CVRCompositor* (*)()>(&Valve::VR::OpenVR::get_Compositor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "get_Compositor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::get_Overlay
// Il2CppName: get_Overlay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Valve::VR::CVROverlay* (*)()>(&Valve::VR::OpenVR::get_Overlay)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "get_Overlay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::get_RenderModels
// Il2CppName: get_RenderModels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Valve::VR::CVRRenderModels* (*)()>(&Valve::VR::OpenVR::get_RenderModels)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "get_RenderModels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::get_ExtendedDisplay
// Il2CppName: get_ExtendedDisplay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Valve::VR::CVRExtendedDisplay* (*)()>(&Valve::VR::OpenVR::get_ExtendedDisplay)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "get_ExtendedDisplay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::get_Settings
// Il2CppName: get_Settings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Valve::VR::CVRSettings* (*)()>(&Valve::VR::OpenVR::get_Settings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "get_Settings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::get_Applications
// Il2CppName: get_Applications
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Valve::VR::CVRApplications* (*)()>(&Valve::VR::OpenVR::get_Applications)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "get_Applications", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::get_Screenshots
// Il2CppName: get_Screenshots
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Valve::VR::CVRScreenshots* (*)()>(&Valve::VR::OpenVR::get_Screenshots)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "get_Screenshots", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::get_TrackedCamera
// Il2CppName: get_TrackedCamera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Valve::VR::CVRTrackedCamera* (*)()>(&Valve::VR::OpenVR::get_TrackedCamera)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "get_TrackedCamera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Valve::VR::OpenVR::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Valve::VR::OpenVR::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::InitInternal
// Il2CppName: InitInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(ByRef<::Valve::VR::EVRInitError>, ::Valve::VR::EVRApplicationType)>(&Valve::VR::OpenVR::InitInternal)> {
  static const MethodInfo* get() {
    static auto* peError = &::il2cpp_utils::GetClassFromName("Valve.VR", "EVRInitError")->this_arg;
    static auto* eApplicationType = &::il2cpp_utils::GetClassFromName("Valve.VR", "EVRApplicationType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "InitInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{peError, eApplicationType});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::ShutdownInternal
// Il2CppName: ShutdownInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Valve::VR::OpenVR::ShutdownInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "ShutdownInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::IsHmdPresent
// Il2CppName: IsHmdPresent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Valve::VR::OpenVR::IsHmdPresent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "IsHmdPresent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::IsRuntimeInstalled
// Il2CppName: IsRuntimeInstalled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Valve::VR::OpenVR::IsRuntimeInstalled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "IsRuntimeInstalled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::GetStringForHmdError
// Il2CppName: GetStringForHmdError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::Valve::VR::EVRInitError)>(&Valve::VR::OpenVR::GetStringForHmdError)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("Valve.VR", "EVRInitError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "GetStringForHmdError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::GetGenericInterface
// Il2CppName: GetGenericInterface
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::StringW, ByRef<::Valve::VR::EVRInitError>)>(&Valve::VR::OpenVR::GetGenericInterface)> {
  static const MethodInfo* get() {
    static auto* pchInterfaceVersion = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* peError = &::il2cpp_utils::GetClassFromName("Valve.VR", "EVRInitError")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "GetGenericInterface", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchInterfaceVersion, peError});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::IsInterfaceVersionValid
// Il2CppName: IsInterfaceVersionValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&Valve::VR::OpenVR::IsInterfaceVersionValid)> {
  static const MethodInfo* get() {
    static auto* pchInterfaceVersion = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "IsInterfaceVersionValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pchInterfaceVersion});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::GetInitToken
// Il2CppName: GetInitToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)()>(&Valve::VR::OpenVR::GetInitToken)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "GetInitToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Valve::VR::CVRSystem* (*)(ByRef<::Valve::VR::EVRInitError>, ::Valve::VR::EVRApplicationType)>(&Valve::VR::OpenVR::Init)> {
  static const MethodInfo* get() {
    static auto* peError = &::il2cpp_utils::GetClassFromName("Valve.VR", "EVRInitError")->this_arg;
    static auto* eApplicationType = &::il2cpp_utils::GetClassFromName("Valve.VR", "EVRApplicationType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{peError, eApplicationType});
  }
};
// Writing MetadataGetter for method: Valve::VR::OpenVR::Shutdown
// Il2CppName: Shutdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Valve::VR::OpenVR::Shutdown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::OpenVR*), "Shutdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
