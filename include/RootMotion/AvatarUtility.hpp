// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Quaternion
  struct Quaternion;
  // Forward declaring type: Avatar
  class Avatar;
  // Forward declaring type: AvatarIKGoal
  struct AvatarIKGoal;
  // Forward declaring type: HumanBodyBones
  struct HumanBodyBones;
}
// Forward declaring namespace: RootMotion
namespace RootMotion {
  // Forward declaring type: TQ
  class TQ;
}
// Completed forward declares
// Type namespace: RootMotion
namespace RootMotion {
  // Forward declaring type: AvatarUtility
  class AvatarUtility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::RootMotion::AvatarUtility);
DEFINE_IL2CPP_ARG_TYPE(::RootMotion::AvatarUtility*, "RootMotion", "AvatarUtility");
// Type namespace: RootMotion
namespace RootMotion {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: RootMotion.AvatarUtility
  // [TokenAttribute] Offset: FFFFFFFF
  class AvatarUtility : public ::Il2CppObject {
    public:
    // public System.Void .ctor()
    // Offset: 0x22A0EE8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AvatarUtility* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::AvatarUtility::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AvatarUtility*, creationType>()));
    }
    // static public UnityEngine.Quaternion GetPostRotation(UnityEngine.Avatar avatar, UnityEngine.AvatarIKGoal avatarIKGoal)
    // Offset: 0x22A0654
    static ::UnityEngine::Quaternion GetPostRotation(::UnityEngine::Avatar* avatar, ::UnityEngine::AvatarIKGoal avatarIKGoal);
    // static public RootMotion.TQ GetIKGoalTQ(UnityEngine.Avatar avatar, System.Single humanScale, UnityEngine.AvatarIKGoal avatarIKGoal, RootMotion.TQ bodyPositionRotation, RootMotion.TQ boneTQ)
    // Offset: 0x22A0868
    static ::RootMotion::TQ* GetIKGoalTQ(::UnityEngine::Avatar* avatar, float humanScale, ::UnityEngine::AvatarIKGoal avatarIKGoal, ::RootMotion::TQ* bodyPositionRotation, ::RootMotion::TQ* boneTQ);
    // static public UnityEngine.HumanBodyBones HumanIDFromAvatarIKGoal(UnityEngine.AvatarIKGoal avatarIKGoal)
    // Offset: 0x22A0848
    static ::UnityEngine::HumanBodyBones HumanIDFromAvatarIKGoal(::UnityEngine::AvatarIKGoal avatarIKGoal);
  }; // RootMotion.AvatarUtility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: RootMotion::AvatarUtility::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: RootMotion::AvatarUtility::GetPostRotation
// Il2CppName: GetPostRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (*)(::UnityEngine::Avatar*, ::UnityEngine::AvatarIKGoal)>(&RootMotion::AvatarUtility::GetPostRotation)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("UnityEngine", "Avatar")->byval_arg;
    static auto* avatarIKGoal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::AvatarUtility*), "GetPostRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, avatarIKGoal});
  }
};
// Writing MetadataGetter for method: RootMotion::AvatarUtility::GetIKGoalTQ
// Il2CppName: GetIKGoalTQ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::TQ* (*)(::UnityEngine::Avatar*, float, ::UnityEngine::AvatarIKGoal, ::RootMotion::TQ*, ::RootMotion::TQ*)>(&RootMotion::AvatarUtility::GetIKGoalTQ)> {
  static const MethodInfo* get() {
    static auto* avatar = &::il2cpp_utils::GetClassFromName("UnityEngine", "Avatar")->byval_arg;
    static auto* humanScale = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* avatarIKGoal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    static auto* bodyPositionRotation = &::il2cpp_utils::GetClassFromName("RootMotion", "TQ")->byval_arg;
    static auto* boneTQ = &::il2cpp_utils::GetClassFromName("RootMotion", "TQ")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::AvatarUtility*), "GetIKGoalTQ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatar, humanScale, avatarIKGoal, bodyPositionRotation, boneTQ});
  }
};
// Writing MetadataGetter for method: RootMotion::AvatarUtility::HumanIDFromAvatarIKGoal
// Il2CppName: HumanIDFromAvatarIKGoal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::HumanBodyBones (*)(::UnityEngine::AvatarIKGoal)>(&RootMotion::AvatarUtility::HumanIDFromAvatarIKGoal)> {
  static const MethodInfo* get() {
    static auto* avatarIKGoal = &::il2cpp_utils::GetClassFromName("UnityEngine", "AvatarIKGoal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::AvatarUtility*), "HumanIDFromAvatarIKGoal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatarIKGoal});
  }
};
