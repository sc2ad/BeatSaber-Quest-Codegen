// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: RootMotion.BipedLimbOrientations
#include "RootMotion/BipedLimbOrientations.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: RootMotion::FinalIK
namespace RootMotion::FinalIK {
  // Forward declaring type: IKEffector
  class IKEffector;
  // Forward declaring type: FBIKChain
  class FBIKChain;
  // Forward declaring type: IKMappingLimb
  class IKMappingLimb;
  // Forward declaring type: IKMappingBone
  class IKMappingBone;
  // Forward declaring type: FullBodyBipedChain
  struct FullBodyBipedChain;
  // Forward declaring type: FullBodyBipedEffector
  struct FullBodyBipedEffector;
  // Forward declaring type: IKMappingSpine
  class IKMappingSpine;
  // Forward declaring type: IKConstraintBend
  class IKConstraintBend;
}
// Forward declaring namespace: RootMotion
namespace RootMotion {
  // Forward declaring type: BipedReferences
  class BipedReferences;
}
// Completed forward declares
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Forward declaring type: IKSolverFullBodyBiped
  class IKSolverFullBodyBiped;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::RootMotion::FinalIK::IKSolverFullBodyBiped);
DEFINE_IL2CPP_ARG_TYPE(::RootMotion::FinalIK::IKSolverFullBodyBiped*, "RootMotion.FinalIK", "IKSolverFullBodyBiped");
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Size: 0xFC
  #pragma pack(push, 1)
  // Autogenerated type: RootMotion.FinalIK.IKSolverFullBodyBiped
  // [TokenAttribute] Offset: FFFFFFFF
  class IKSolverFullBodyBiped : public ::RootMotion::FinalIK::IKSolverFullBody {
    public:
    public:
    // public UnityEngine.Transform rootNode
    // Size: 0x8
    // Offset: 0xD0
    ::UnityEngine::Transform* rootNode;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // [RangeAttribute] Offset: 0x1104B6C
    // public System.Single spineStiffness
    // Size: 0x4
    // Offset: 0xD8
    float spineStiffness;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x1104B84
    // public System.Single pullBodyVertical
    // Size: 0x4
    // Offset: 0xDC
    float pullBodyVertical;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0x1104B9C
    // public System.Single pullBodyHorizontal
    // Size: 0x4
    // Offset: 0xE0
    float pullBodyHorizontal;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector3 <pullBodyOffset>k__BackingField
    // Size: 0xC
    // Offset: 0xE4
    ::UnityEngine::Vector3 pullBodyOffset;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 offset
    // Size: 0xC
    // Offset: 0xF0
    ::UnityEngine::Vector3 offset;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Get instance field reference: public UnityEngine.Transform rootNode
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_rootNode();
    // Get instance field reference: public System.Single spineStiffness
    [[deprecated("Use field access instead!")]] float& dyn_spineStiffness();
    // Get instance field reference: public System.Single pullBodyVertical
    [[deprecated("Use field access instead!")]] float& dyn_pullBodyVertical();
    // Get instance field reference: public System.Single pullBodyHorizontal
    [[deprecated("Use field access instead!")]] float& dyn_pullBodyHorizontal();
    // Get instance field reference: private UnityEngine.Vector3 <pullBodyOffset>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_$pullBodyOffset$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector3 offset
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_offset();
    // public RootMotion.FinalIK.IKEffector get_bodyEffector()
    // Offset: 0x21F5600
    ::RootMotion::FinalIK::IKEffector* get_bodyEffector();
    // public RootMotion.FinalIK.IKEffector get_leftShoulderEffector()
    // Offset: 0x21F5748
    ::RootMotion::FinalIK::IKEffector* get_leftShoulderEffector();
    // public RootMotion.FinalIK.IKEffector get_rightShoulderEffector()
    // Offset: 0x21F5750
    ::RootMotion::FinalIK::IKEffector* get_rightShoulderEffector();
    // public RootMotion.FinalIK.IKEffector get_leftThighEffector()
    // Offset: 0x21F5758
    ::RootMotion::FinalIK::IKEffector* get_leftThighEffector();
    // public RootMotion.FinalIK.IKEffector get_rightThighEffector()
    // Offset: 0x21F5760
    ::RootMotion::FinalIK::IKEffector* get_rightThighEffector();
    // public RootMotion.FinalIK.IKEffector get_leftHandEffector()
    // Offset: 0x21F5768
    ::RootMotion::FinalIK::IKEffector* get_leftHandEffector();
    // public RootMotion.FinalIK.IKEffector get_rightHandEffector()
    // Offset: 0x21F5770
    ::RootMotion::FinalIK::IKEffector* get_rightHandEffector();
    // public RootMotion.FinalIK.IKEffector get_leftFootEffector()
    // Offset: 0x21F5778
    ::RootMotion::FinalIK::IKEffector* get_leftFootEffector();
    // public RootMotion.FinalIK.IKEffector get_rightFootEffector()
    // Offset: 0x21F5780
    ::RootMotion::FinalIK::IKEffector* get_rightFootEffector();
    // public RootMotion.FinalIK.FBIKChain get_leftArmChain()
    // Offset: 0x21F5788
    ::RootMotion::FinalIK::FBIKChain* get_leftArmChain();
    // public RootMotion.FinalIK.FBIKChain get_rightArmChain()
    // Offset: 0x21F57C0
    ::RootMotion::FinalIK::FBIKChain* get_rightArmChain();
    // public RootMotion.FinalIK.FBIKChain get_leftLegChain()
    // Offset: 0x21F57F8
    ::RootMotion::FinalIK::FBIKChain* get_leftLegChain();
    // public RootMotion.FinalIK.FBIKChain get_rightLegChain()
    // Offset: 0x21F5830
    ::RootMotion::FinalIK::FBIKChain* get_rightLegChain();
    // public RootMotion.FinalIK.IKMappingLimb get_leftArmMapping()
    // Offset: 0x21F5868
    ::RootMotion::FinalIK::IKMappingLimb* get_leftArmMapping();
    // public RootMotion.FinalIK.IKMappingLimb get_rightArmMapping()
    // Offset: 0x21F589C
    ::RootMotion::FinalIK::IKMappingLimb* get_rightArmMapping();
    // public RootMotion.FinalIK.IKMappingLimb get_leftLegMapping()
    // Offset: 0x21F58D4
    ::RootMotion::FinalIK::IKMappingLimb* get_leftLegMapping();
    // public RootMotion.FinalIK.IKMappingLimb get_rightLegMapping()
    // Offset: 0x21F590C
    ::RootMotion::FinalIK::IKMappingLimb* get_rightLegMapping();
    // public RootMotion.FinalIK.IKMappingBone get_headMapping()
    // Offset: 0x21F5944
    ::RootMotion::FinalIK::IKMappingBone* get_headMapping();
    // public UnityEngine.Vector3 get_pullBodyOffset()
    // Offset: 0x21F7908
    ::UnityEngine::Vector3 get_pullBodyOffset();
    // private System.Void set_pullBodyOffset(UnityEngine.Vector3 value)
    // Offset: 0x21F7914
    void set_pullBodyOffset(::UnityEngine::Vector3 value);
    // public System.Void SetChainWeights(RootMotion.FinalIK.FullBodyBipedChain c, System.Single pull, System.Single reach)
    // Offset: 0x21F5978
    void SetChainWeights(::RootMotion::FinalIK::FullBodyBipedChain c, float pull, float reach);
    // public System.Void SetEffectorWeights(RootMotion.FinalIK.FullBodyBipedEffector effector, System.Single positionWeight, System.Single rotationWeight)
    // Offset: 0x21F5A84
    void SetEffectorWeights(::RootMotion::FinalIK::FullBodyBipedEffector effector, float positionWeight, float rotationWeight);
    // public RootMotion.FinalIK.FBIKChain GetChain(RootMotion.FinalIK.FullBodyBipedChain c)
    // Offset: 0x21F59CC
    ::RootMotion::FinalIK::FBIKChain* GetChain(::RootMotion::FinalIK::FullBodyBipedChain c);
    // public RootMotion.FinalIK.FBIKChain GetChain(RootMotion.FinalIK.FullBodyBipedEffector effector)
    // Offset: 0x21F5B60
    ::RootMotion::FinalIK::FBIKChain* GetChain(::RootMotion::FinalIK::FullBodyBipedEffector effector);
    // public RootMotion.FinalIK.IKEffector GetEffector(RootMotion.FinalIK.FullBodyBipedEffector effector)
    // Offset: 0x21F5608
    ::RootMotion::FinalIK::IKEffector* GetEffector(::RootMotion::FinalIK::FullBodyBipedEffector effector);
    // public RootMotion.FinalIK.IKEffector GetEndEffector(RootMotion.FinalIK.FullBodyBipedChain c)
    // Offset: 0x21F5C30
    ::RootMotion::FinalIK::IKEffector* GetEndEffector(::RootMotion::FinalIK::FullBodyBipedChain c);
    // public RootMotion.FinalIK.IKMappingLimb GetLimbMapping(RootMotion.FinalIK.FullBodyBipedChain chain)
    // Offset: 0x21F5CE8
    ::RootMotion::FinalIK::IKMappingLimb* GetLimbMapping(::RootMotion::FinalIK::FullBodyBipedChain chain);
    // public RootMotion.FinalIK.IKMappingLimb GetLimbMapping(RootMotion.FinalIK.FullBodyBipedEffector effector)
    // Offset: 0x21F5D9C
    ::RootMotion::FinalIK::IKMappingLimb* GetLimbMapping(::RootMotion::FinalIK::FullBodyBipedEffector effector);
    // public RootMotion.FinalIK.IKMappingSpine GetSpineMapping()
    // Offset: 0x21F5E50
    ::RootMotion::FinalIK::IKMappingSpine* GetSpineMapping();
    // public RootMotion.FinalIK.IKMappingBone GetHeadMapping()
    // Offset: 0x21F5E58
    ::RootMotion::FinalIK::IKMappingBone* GetHeadMapping();
    // public RootMotion.FinalIK.IKConstraintBend GetBendConstraint(RootMotion.FinalIK.FullBodyBipedChain limb)
    // Offset: 0x21F5E8C
    ::RootMotion::FinalIK::IKConstraintBend* GetBendConstraint(::RootMotion::FinalIK::FullBodyBipedChain limb);
    // public System.Void SetToReferences(RootMotion.BipedReferences references, UnityEngine.Transform rootNode)
    // Offset: 0x21F60E4
    void SetToReferences(::RootMotion::BipedReferences* references, ::UnityEngine::Transform* rootNode);
    // static public UnityEngine.Transform DetectRootNodeBone(RootMotion.BipedReferences references)
    // Offset: 0x21F7220
    static ::UnityEngine::Transform* DetectRootNodeBone(::RootMotion::BipedReferences* references);
    // public System.Void SetLimbOrientations(RootMotion.BipedLimbOrientations o)
    // Offset: 0x21F76B4
    void SetLimbOrientations(::RootMotion::BipedLimbOrientations* o);
    // private System.Void SetLimbOrientation(RootMotion.FinalIK.FullBodyBipedChain chain, RootMotion.BipedLimbOrientations/RootMotion.LimbOrientation limbOrientation)
    // Offset: 0x21F7714
    void SetLimbOrientation(::RootMotion::FinalIK::FullBodyBipedChain chain, ::RootMotion::BipedLimbOrientations::LimbOrientation* limbOrientation);
    // static private UnityEngine.Transform GetLeftClavicle(RootMotion.BipedReferences references)
    // Offset: 0x21F7534
    static ::UnityEngine::Transform* GetLeftClavicle(::RootMotion::BipedReferences* references);
    // static private UnityEngine.Transform GetRightClavicle(RootMotion.BipedReferences references)
    // Offset: 0x21F75F4
    static ::UnityEngine::Transform* GetRightClavicle(::RootMotion::BipedReferences* references);
    // static private System.Boolean Contains(UnityEngine.Transform[] array, UnityEngine.Transform transform)
    // Offset: 0x21F7920
    static bool Contains(::ArrayW<::UnityEngine::Transform*> array, ::UnityEngine::Transform* transform);
    // private System.Void PullBody()
    // Offset: 0x21F7B44
    void PullBody();
    // private UnityEngine.Vector3 GetBodyOffset()
    // Offset: 0x21F7CD4
    ::UnityEngine::Vector3 GetBodyOffset();
    // private UnityEngine.Vector3 GetHandBodyPull(RootMotion.FinalIK.IKEffector effector, RootMotion.FinalIK.FBIKChain arm, UnityEngine.Vector3 offset)
    // Offset: 0x21F7ED4
    ::UnityEngine::Vector3 GetHandBodyPull(::RootMotion::FinalIK::IKEffector* effector, ::RootMotion::FinalIK::FBIKChain* arm, ::UnityEngine::Vector3 offset);
    // public System.Void .ctor()
    // Offset: 0x21F8508
    // Implemented from: RootMotion.FinalIK.IKSolverFullBody
    // Base method: System.Void IKSolverFullBody::.ctor()
    // Base method: System.Void IKSolver::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static IKSolverFullBodyBiped* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<IKSolverFullBodyBiped*, creationType>()));
    }
    // public override System.Boolean IsValid(ref System.String message)
    // Offset: 0x21F5F54
    // Implemented from: RootMotion.FinalIK.IKSolverFullBody
    // Base method: System.Boolean IKSolverFullBody::IsValid(ref System.String message)
    bool IsValid(ByRef<::StringW> message);
    // protected override System.Void ReadPose()
    // Offset: 0x21F79FC
    // Implemented from: RootMotion.FinalIK.IKSolverFullBody
    // Base method: System.Void IKSolverFullBody::ReadPose()
    void ReadPose();
    // protected override System.Void ApplyBendConstraints()
    // Offset: 0x21F80D4
    // Implemented from: RootMotion.FinalIK.IKSolverFullBody
    // Base method: System.Void IKSolverFullBody::ApplyBendConstraints()
    void ApplyBendConstraints();
    // protected override System.Void WritePose()
    // Offset: 0x21F8408
    // Implemented from: RootMotion.FinalIK.IKSolverFullBody
    // Base method: System.Void IKSolverFullBody::WritePose()
    void WritePose();
  }; // RootMotion.FinalIK.IKSolverFullBodyBiped
  #pragma pack(pop)
  static check_size<sizeof(IKSolverFullBodyBiped), 240 + sizeof(::UnityEngine::Vector3)> __RootMotion_FinalIK_IKSolverFullBodyBipedSizeCheck;
  static_assert(sizeof(IKSolverFullBodyBiped) == 0xFC);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_bodyEffector
// Il2CppName: get_bodyEffector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKEffector* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_bodyEffector)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_bodyEffector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftShoulderEffector
// Il2CppName: get_leftShoulderEffector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKEffector* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftShoulderEffector)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_leftShoulderEffector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightShoulderEffector
// Il2CppName: get_rightShoulderEffector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKEffector* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightShoulderEffector)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_rightShoulderEffector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftThighEffector
// Il2CppName: get_leftThighEffector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKEffector* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftThighEffector)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_leftThighEffector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightThighEffector
// Il2CppName: get_rightThighEffector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKEffector* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightThighEffector)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_rightThighEffector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftHandEffector
// Il2CppName: get_leftHandEffector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKEffector* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftHandEffector)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_leftHandEffector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightHandEffector
// Il2CppName: get_rightHandEffector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKEffector* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightHandEffector)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_rightHandEffector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftFootEffector
// Il2CppName: get_leftFootEffector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKEffector* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftFootEffector)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_leftFootEffector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightFootEffector
// Il2CppName: get_rightFootEffector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKEffector* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightFootEffector)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_rightFootEffector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftArmChain
// Il2CppName: get_leftArmChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::FBIKChain* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftArmChain)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_leftArmChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightArmChain
// Il2CppName: get_rightArmChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::FBIKChain* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightArmChain)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_rightArmChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftLegChain
// Il2CppName: get_leftLegChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::FBIKChain* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftLegChain)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_leftLegChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightLegChain
// Il2CppName: get_rightLegChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::FBIKChain* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightLegChain)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_rightLegChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftArmMapping
// Il2CppName: get_leftArmMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKMappingLimb* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftArmMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_leftArmMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightArmMapping
// Il2CppName: get_rightArmMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKMappingLimb* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightArmMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_rightArmMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftLegMapping
// Il2CppName: get_leftLegMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKMappingLimb* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftLegMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_leftLegMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightLegMapping
// Il2CppName: get_rightLegMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKMappingLimb* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightLegMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_rightLegMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_headMapping
// Il2CppName: get_headMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKMappingBone* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_headMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_headMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::get_pullBodyOffset
// Il2CppName: get_pullBodyOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::get_pullBodyOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "get_pullBodyOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::set_pullBodyOffset
// Il2CppName: set_pullBodyOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::IKSolverFullBodyBiped::*)(::UnityEngine::Vector3)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::set_pullBodyOffset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "set_pullBodyOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::SetChainWeights
// Il2CppName: SetChainWeights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::IKSolverFullBodyBiped::*)(::RootMotion::FinalIK::FullBodyBipedChain, float, float)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::SetChainWeights)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "FullBodyBipedChain")->byval_arg;
    static auto* pull = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* reach = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "SetChainWeights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c, pull, reach});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::SetEffectorWeights
// Il2CppName: SetEffectorWeights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::IKSolverFullBodyBiped::*)(::RootMotion::FinalIK::FullBodyBipedEffector, float, float)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::SetEffectorWeights)> {
  static const MethodInfo* get() {
    static auto* effector = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "FullBodyBipedEffector")->byval_arg;
    static auto* positionWeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* rotationWeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "SetEffectorWeights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{effector, positionWeight, rotationWeight});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::GetChain
// Il2CppName: GetChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::FBIKChain* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)(::RootMotion::FinalIK::FullBodyBipedChain)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::GetChain)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "FullBodyBipedChain")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "GetChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::GetChain
// Il2CppName: GetChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::FBIKChain* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)(::RootMotion::FinalIK::FullBodyBipedEffector)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::GetChain)> {
  static const MethodInfo* get() {
    static auto* effector = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "FullBodyBipedEffector")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "GetChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{effector});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::GetEffector
// Il2CppName: GetEffector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKEffector* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)(::RootMotion::FinalIK::FullBodyBipedEffector)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::GetEffector)> {
  static const MethodInfo* get() {
    static auto* effector = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "FullBodyBipedEffector")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "GetEffector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{effector});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::GetEndEffector
// Il2CppName: GetEndEffector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKEffector* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)(::RootMotion::FinalIK::FullBodyBipedChain)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::GetEndEffector)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "FullBodyBipedChain")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "GetEndEffector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::GetLimbMapping
// Il2CppName: GetLimbMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKMappingLimb* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)(::RootMotion::FinalIK::FullBodyBipedChain)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::GetLimbMapping)> {
  static const MethodInfo* get() {
    static auto* chain = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "FullBodyBipedChain")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "GetLimbMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chain});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::GetLimbMapping
// Il2CppName: GetLimbMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKMappingLimb* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)(::RootMotion::FinalIK::FullBodyBipedEffector)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::GetLimbMapping)> {
  static const MethodInfo* get() {
    static auto* effector = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "FullBodyBipedEffector")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "GetLimbMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{effector});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::GetSpineMapping
// Il2CppName: GetSpineMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKMappingSpine* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::GetSpineMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "GetSpineMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::GetHeadMapping
// Il2CppName: GetHeadMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKMappingBone* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::GetHeadMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "GetHeadMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::GetBendConstraint
// Il2CppName: GetBendConstraint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::IKConstraintBend* (RootMotion::FinalIK::IKSolverFullBodyBiped::*)(::RootMotion::FinalIK::FullBodyBipedChain)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::GetBendConstraint)> {
  static const MethodInfo* get() {
    static auto* limb = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "FullBodyBipedChain")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "GetBendConstraint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{limb});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::SetToReferences
// Il2CppName: SetToReferences
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::IKSolverFullBodyBiped::*)(::RootMotion::BipedReferences*, ::UnityEngine::Transform*)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::SetToReferences)> {
  static const MethodInfo* get() {
    static auto* references = &::il2cpp_utils::GetClassFromName("RootMotion", "BipedReferences")->byval_arg;
    static auto* rootNode = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "SetToReferences", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{references, rootNode});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::DetectRootNodeBone
// Il2CppName: DetectRootNodeBone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (*)(::RootMotion::BipedReferences*)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::DetectRootNodeBone)> {
  static const MethodInfo* get() {
    static auto* references = &::il2cpp_utils::GetClassFromName("RootMotion", "BipedReferences")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "DetectRootNodeBone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{references});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::SetLimbOrientations
// Il2CppName: SetLimbOrientations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::IKSolverFullBodyBiped::*)(::RootMotion::BipedLimbOrientations*)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::SetLimbOrientations)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("RootMotion", "BipedLimbOrientations")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "SetLimbOrientations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::SetLimbOrientation
// Il2CppName: SetLimbOrientation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::IKSolverFullBodyBiped::*)(::RootMotion::FinalIK::FullBodyBipedChain, ::RootMotion::BipedLimbOrientations::LimbOrientation*)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::SetLimbOrientation)> {
  static const MethodInfo* get() {
    static auto* chain = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "FullBodyBipedChain")->byval_arg;
    static auto* limbOrientation = &::il2cpp_utils::GetClassFromName("RootMotion", "BipedLimbOrientations/LimbOrientation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "SetLimbOrientation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chain, limbOrientation});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::GetLeftClavicle
// Il2CppName: GetLeftClavicle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (*)(::RootMotion::BipedReferences*)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::GetLeftClavicle)> {
  static const MethodInfo* get() {
    static auto* references = &::il2cpp_utils::GetClassFromName("RootMotion", "BipedReferences")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "GetLeftClavicle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{references});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::GetRightClavicle
// Il2CppName: GetRightClavicle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (*)(::RootMotion::BipedReferences*)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::GetRightClavicle)> {
  static const MethodInfo* get() {
    static auto* references = &::il2cpp_utils::GetClassFromName("RootMotion", "BipedReferences")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "GetRightClavicle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{references});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ArrayW<::UnityEngine::Transform*>, ::UnityEngine::Transform*)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::Contains)> {
  static const MethodInfo* get() {
    static auto* array = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Transform"), 1)->byval_arg;
    static auto* transform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, transform});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::PullBody
// Il2CppName: PullBody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::PullBody)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "PullBody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::GetBodyOffset
// Il2CppName: GetBodyOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::GetBodyOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "GetBodyOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::GetHandBodyPull
// Il2CppName: GetHandBodyPull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (RootMotion::FinalIK::IKSolverFullBodyBiped::*)(::RootMotion::FinalIK::IKEffector*, ::RootMotion::FinalIK::FBIKChain*, ::UnityEngine::Vector3)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::GetHandBodyPull)> {
  static const MethodInfo* get() {
    static auto* effector = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "IKEffector")->byval_arg;
    static auto* arm = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "FBIKChain")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "GetHandBodyPull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{effector, arm, offset});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::IsValid
// Il2CppName: IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RootMotion::FinalIK::IKSolverFullBodyBiped::*)(ByRef<::StringW>)>(&RootMotion::FinalIK::IKSolverFullBodyBiped::IsValid)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::ReadPose
// Il2CppName: ReadPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::ReadPose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "ReadPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::ApplyBendConstraints
// Il2CppName: ApplyBendConstraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::ApplyBendConstraints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "ApplyBendConstraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::IKSolverFullBodyBiped::WritePose
// Il2CppName: WritePose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::IKSolverFullBodyBiped::*)()>(&RootMotion::FinalIK::IKSolverFullBodyBiped::WritePose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::IKSolverFullBodyBiped*), "WritePose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
