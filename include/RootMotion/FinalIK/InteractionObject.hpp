// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: RootMotion::FinalIK
namespace RootMotion::FinalIK {
  // Forward declaring type: IKSolverFullBodyBiped
  class IKSolverFullBodyBiped;
  // Forward declaring type: InteractionSystem
  class InteractionSystem;
  // Forward declaring type: InteractionTarget
  class InteractionTarget;
  // Forward declaring type: FullBodyBipedEffector
  struct FullBodyBipedEffector;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: AnimationCurve
  class AnimationCurve;
}
// Completed forward declares
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Forward declaring type: InteractionObject
  class InteractionObject;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::RootMotion::FinalIK::InteractionObject);
DEFINE_IL2CPP_ARG_TYPE(::RootMotion::FinalIK::InteractionObject*, "RootMotion.FinalIK", "InteractionObject");
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: RootMotion.FinalIK.InteractionObject
  // [TokenAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: 1102914
  // [AddComponentMenu] Offset: 1102914
  class InteractionObject : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::RootMotion::FinalIK::InteractionObject::InteractionEvent
    class InteractionEvent;
    // Nested type: ::RootMotion::FinalIK::InteractionObject::Message
    class Message;
    // Nested type: ::RootMotion::FinalIK::InteractionObject::AnimatorEvent
    class AnimatorEvent;
    // Nested type: ::RootMotion::FinalIK::InteractionObject::WeightCurve
    class WeightCurve;
    // Nested type: ::RootMotion::FinalIK::InteractionObject::Multiplier
    class Multiplier;
    // Size: 0x20
    #pragma pack(push, 1)
    // Autogenerated type: RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve
    // [TokenAttribute] Offset: FFFFFFFF
    class WeightCurve : public ::Il2CppObject {
      public:
      // Nested type: ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type
      struct Type;
      // Size: 0x4
      #pragma pack(push, 1)
      // Autogenerated type: RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type
      // [TokenAttribute] Offset: FFFFFFFF
      struct Type/*, public ::System::Enum*/ {
        public:
        public:
        // public System.Int32 value__
        // Size: 0x4
        // Offset: 0x0
        int value;
        // Field size check
        static_assert(sizeof(int) == 0x4);
        public:
        // Creating value type constructor for type: Type
        constexpr Type(int value_ = {}) noexcept : value{value_} {}
        // Creating interface conversion operator: operator ::System::Enum
        operator ::System::Enum() noexcept {
          return *reinterpret_cast<::System::Enum*>(this);
        }
        // Creating interface conversion operator: i_Enum
        inline ::System::Enum* i_Enum() noexcept {
          return reinterpret_cast<::System::Enum*>(this);
        }
        // Creating conversion operator: operator int
        constexpr operator int() const noexcept {
          return value;
        }
        // static field const value: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PositionWeight
        static constexpr const int PositionWeight = 0;
        // Get static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PositionWeight
        static ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type _get_PositionWeight();
        // Set static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PositionWeight
        static void _set_PositionWeight(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type value);
        // static field const value: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type RotationWeight
        static constexpr const int RotationWeight = 1;
        // Get static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type RotationWeight
        static ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type _get_RotationWeight();
        // Set static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type RotationWeight
        static void _set_RotationWeight(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type value);
        // static field const value: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PositionOffsetX
        static constexpr const int PositionOffsetX = 2;
        // Get static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PositionOffsetX
        static ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type _get_PositionOffsetX();
        // Set static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PositionOffsetX
        static void _set_PositionOffsetX(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type value);
        // static field const value: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PositionOffsetY
        static constexpr const int PositionOffsetY = 3;
        // Get static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PositionOffsetY
        static ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type _get_PositionOffsetY();
        // Set static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PositionOffsetY
        static void _set_PositionOffsetY(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type value);
        // static field const value: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PositionOffsetZ
        static constexpr const int PositionOffsetZ = 4;
        // Get static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PositionOffsetZ
        static ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type _get_PositionOffsetZ();
        // Set static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PositionOffsetZ
        static void _set_PositionOffsetZ(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type value);
        // static field const value: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type Pull
        static constexpr const int Pull = 5;
        // Get static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type Pull
        static ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type _get_Pull();
        // Set static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type Pull
        static void _set_Pull(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type value);
        // static field const value: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type Reach
        static constexpr const int Reach = 6;
        // Get static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type Reach
        static ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type _get_Reach();
        // Set static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type Reach
        static void _set_Reach(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type value);
        // static field const value: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type RotateBoneWeight
        static constexpr const int RotateBoneWeight = 7;
        // Get static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type RotateBoneWeight
        static ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type _get_RotateBoneWeight();
        // Set static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type RotateBoneWeight
        static void _set_RotateBoneWeight(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type value);
        // static field const value: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type Push
        static constexpr const int Push = 8;
        // Get static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type Push
        static ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type _get_Push();
        // Set static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type Push
        static void _set_Push(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type value);
        // static field const value: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PushParent
        static constexpr const int PushParent = 9;
        // Get static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PushParent
        static ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type _get_PushParent();
        // Set static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PushParent
        static void _set_PushParent(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type value);
        // static field const value: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PoserWeight
        static constexpr const int PoserWeight = 10;
        // Get static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PoserWeight
        static ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type _get_PoserWeight();
        // Set static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type PoserWeight
        static void _set_PoserWeight(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type value);
        // static field const value: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type BendGoalWeight
        static constexpr const int BendGoalWeight = 11;
        // Get static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type BendGoalWeight
        static ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type _get_BendGoalWeight();
        // Set static field: static public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type BendGoalWeight
        static void _set_BendGoalWeight(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type value);
        // Get instance field reference: public System.Int32 value__
        [[deprecated("Use field access instead!")]] int& dyn_value__();
      }; // RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type
      #pragma pack(pop)
      static check_size<sizeof(InteractionObject::WeightCurve::Type), 0 + sizeof(int)> __RootMotion_FinalIK_InteractionObject_WeightCurve_TypeSizeCheck;
      static_assert(sizeof(InteractionObject::WeightCurve::Type) == 0x4);
      public:
      // [TooltipAttribute] Offset: 0x1108278
      // public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type type
      // Size: 0x4
      // Offset: 0x10
      ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type type;
      // Field size check
      static_assert(sizeof(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type) == 0x4);
      // Padding between fields: type and: curve
      char __padding0[0x4] = {};
      // [TooltipAttribute] Offset: 0x11082B0
      // public UnityEngine.AnimationCurve curve
      // Size: 0x8
      // Offset: 0x18
      ::UnityEngine::AnimationCurve* curve;
      // Field size check
      static_assert(sizeof(::UnityEngine::AnimationCurve*) == 0x8);
      public:
      // Get instance field reference: public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type type
      [[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type& dyn_type();
      // Get instance field reference: public UnityEngine.AnimationCurve curve
      [[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& dyn_curve();
      // public System.Void .ctor()
      // Offset: 0x23ADCA4
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static InteractionObject::WeightCurve* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionObject::WeightCurve::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<InteractionObject::WeightCurve*, creationType>()));
      }
      // public System.Single GetValue(System.Single timer)
      // Offset: 0x23AD10C
      float GetValue(float timer);
    }; // RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve
    #pragma pack(pop)
    static check_size<sizeof(InteractionObject::WeightCurve), 24 + sizeof(::UnityEngine::AnimationCurve*)> __RootMotion_FinalIK_InteractionObject_WeightCurveSizeCheck;
    static_assert(sizeof(InteractionObject::WeightCurve) == 0x20);
    public:
    // [TooltipAttribute] Offset: 0x1105114
    // public UnityEngine.Transform otherLookAtTarget
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Transform* otherLookAtTarget;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // [TooltipAttribute] Offset: 0x110514C
    // public UnityEngine.Transform otherTargetsRoot
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Transform* otherTargetsRoot;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // [TooltipAttribute] Offset: 0x1105184
    // public UnityEngine.Transform positionOffsetSpace
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Transform* positionOffsetSpace;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve[] weightCurves
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<::RootMotion::FinalIK::InteractionObject::WeightCurve*> weightCurves;
    // Field size check
    static_assert(sizeof(::ArrayW<::RootMotion::FinalIK::InteractionObject::WeightCurve*>) == 0x8);
    // public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.Multiplier[] multipliers
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<::RootMotion::FinalIK::InteractionObject::Multiplier*> multipliers;
    // Field size check
    static_assert(sizeof(::ArrayW<::RootMotion::FinalIK::InteractionObject::Multiplier*>) == 0x8);
    // public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.InteractionEvent[] events
    // Size: 0x8
    // Offset: 0x40
    ::ArrayW<::RootMotion::FinalIK::InteractionObject::InteractionEvent*> events;
    // Field size check
    static_assert(sizeof(::ArrayW<::RootMotion::FinalIK::InteractionObject::InteractionEvent*>) == 0x8);
    // private System.Single <length>k__BackingField
    // Size: 0x4
    // Offset: 0x48
    float length;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: length and: lastUsedInteractionSystem
    char __padding6[0x4] = {};
    // private RootMotion.FinalIK.InteractionSystem <lastUsedInteractionSystem>k__BackingField
    // Size: 0x8
    // Offset: 0x50
    ::RootMotion::FinalIK::InteractionSystem* lastUsedInteractionSystem;
    // Field size check
    static_assert(sizeof(::RootMotion::FinalIK::InteractionSystem*) == 0x8);
    // private RootMotion.FinalIK.InteractionTarget[] targets
    // Size: 0x8
    // Offset: 0x58
    ::ArrayW<::RootMotion::FinalIK::InteractionTarget*> targets;
    // Field size check
    static_assert(sizeof(::ArrayW<::RootMotion::FinalIK::InteractionTarget*>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.Transform otherLookAtTarget
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_otherLookAtTarget();
    // Get instance field reference: public UnityEngine.Transform otherTargetsRoot
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_otherTargetsRoot();
    // Get instance field reference: public UnityEngine.Transform positionOffsetSpace
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_positionOffsetSpace();
    // Get instance field reference: public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve[] weightCurves
    [[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::InteractionObject::WeightCurve*>& dyn_weightCurves();
    // Get instance field reference: public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.Multiplier[] multipliers
    [[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::InteractionObject::Multiplier*>& dyn_multipliers();
    // Get instance field reference: public RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.InteractionEvent[] events
    [[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::InteractionObject::InteractionEvent*>& dyn_events();
    // Get instance field reference: private System.Single <length>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$length$k__BackingField();
    // Get instance field reference: private RootMotion.FinalIK.InteractionSystem <lastUsedInteractionSystem>k__BackingField
    [[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::InteractionSystem*& dyn_$lastUsedInteractionSystem$k__BackingField();
    // Get instance field reference: private RootMotion.FinalIK.InteractionTarget[] targets
    [[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::InteractionTarget*>& dyn_targets();
    // public System.Single get_length()
    // Offset: 0x23ACBDC
    float get_length();
    // private System.Void set_length(System.Single value)
    // Offset: 0x23ACBE4
    void set_length(float value);
    // public RootMotion.FinalIK.InteractionSystem get_lastUsedInteractionSystem()
    // Offset: 0x23ACBEC
    ::RootMotion::FinalIK::InteractionSystem* get_lastUsedInteractionSystem();
    // private System.Void set_lastUsedInteractionSystem(RootMotion.FinalIK.InteractionSystem value)
    // Offset: 0x23ACBF4
    void set_lastUsedInteractionSystem(::RootMotion::FinalIK::InteractionSystem* value);
    // public UnityEngine.Transform get_lookAtTarget()
    // Offset: 0x23ACE10
    ::UnityEngine::Transform* get_lookAtTarget();
    // public UnityEngine.Transform get_targetsRoot()
    // Offset: 0x23ABFB0
    ::UnityEngine::Transform* get_targetsRoot();
    // public System.Void .ctor()
    // Offset: 0x23AD894
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InteractionObject* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionObject::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InteractionObject*, creationType>()));
    }
    // private System.Void OpenUserManual()
    // Offset: 0x23AC97C
    void OpenUserManual();
    // private System.Void OpenScriptReference()
    // Offset: 0x23AC9C8
    void OpenScriptReference();
    // private System.Void OpenTutorial1()
    // Offset: 0x23ACA14
    void OpenTutorial1();
    // private System.Void OpenTutorial2()
    // Offset: 0x23ACA60
    void OpenTutorial2();
    // private System.Void OpenTutorial3()
    // Offset: 0x23ACAAC
    void OpenTutorial3();
    // private System.Void OpenTutorial4()
    // Offset: 0x23ACAF8
    void OpenTutorial4();
    // private System.Void SupportGroup()
    // Offset: 0x23ACB44
    void SupportGroup();
    // private System.Void ASThread()
    // Offset: 0x23ACB90
    void ASThread();
    // public System.Void Initiate()
    // Offset: 0x23ACBFC
    void Initiate();
    // public RootMotion.FinalIK.InteractionTarget GetTarget(RootMotion.FinalIK.FullBodyBipedEffector effectorType, RootMotion.FinalIK.InteractionSystem interactionSystem)
    // Offset: 0x23ACEA0
    ::RootMotion::FinalIK::InteractionTarget* GetTarget(::RootMotion::FinalIK::FullBodyBipedEffector effectorType, ::RootMotion::FinalIK::InteractionSystem* interactionSystem);
    // public System.Boolean CurveUsed(RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type type)
    // Offset: 0x23AA384
    bool CurveUsed(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type type);
    // public RootMotion.FinalIK.InteractionTarget[] GetTargets()
    // Offset: 0x23AD024
    ::ArrayW<::RootMotion::FinalIK::InteractionTarget*> GetTargets();
    // public UnityEngine.Transform GetTarget(RootMotion.FinalIK.FullBodyBipedEffector effectorType, System.String tag)
    // Offset: 0x23AA238
    ::UnityEngine::Transform* GetTarget(::RootMotion::FinalIK::FullBodyBipedEffector effectorType, ::StringW tag);
    // public System.Void OnStartInteraction(RootMotion.FinalIK.InteractionSystem interactionSystem)
    // Offset: 0x23AA37C
    void OnStartInteraction(::RootMotion::FinalIK::InteractionSystem* interactionSystem);
    // public System.Void Apply(RootMotion.FinalIK.IKSolverFullBodyBiped solver, RootMotion.FinalIK.FullBodyBipedEffector effector, RootMotion.FinalIK.InteractionTarget target, System.Single timer, System.Single weight)
    // Offset: 0x23AB020
    void Apply(::RootMotion::FinalIK::IKSolverFullBodyBiped* solver, ::RootMotion::FinalIK::FullBodyBipedEffector effector, ::RootMotion::FinalIK::InteractionTarget* target, float timer, float weight);
    // public System.Single GetValue(RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type weightCurveType, RootMotion.FinalIK.InteractionTarget target, System.Single timer)
    // Offset: 0x23AB878
    float GetValue(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type weightCurveType, ::RootMotion::FinalIK::InteractionTarget* target, float timer);
    // private System.Void Start()
    // Offset: 0x23AD828
    void Start();
    // private System.Void Apply(RootMotion.FinalIK.IKSolverFullBodyBiped solver, RootMotion.FinalIK.FullBodyBipedEffector effector, RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type type, System.Single value, System.Single weight)
    // Offset: 0x23AD128
    void Apply(::RootMotion::FinalIK::IKSolverFullBodyBiped* solver, ::RootMotion::FinalIK::FullBodyBipedEffector effector, ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type type, float value, float weight);
    // private UnityEngine.Transform GetTarget(RootMotion.FinalIK.FullBodyBipedEffector effectorType)
    // Offset: 0x23AD02C
    ::UnityEngine::Transform* GetTarget(::RootMotion::FinalIK::FullBodyBipedEffector effectorType);
    // private System.Int32 GetWeightCurveIndex(RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type weightCurveType)
    // Offset: 0x23AD784
    int GetWeightCurveIndex(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type weightCurveType);
    // private System.Int32 GetMultiplierIndex(RootMotion.FinalIK.InteractionObject/RootMotion.FinalIK.WeightCurve/RootMotion.FinalIK.Type weightCurveType)
    // Offset: 0x23AD82C
    int GetMultiplierIndex(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type weightCurveType);
  }; // RootMotion.FinalIK.InteractionObject
  #pragma pack(pop)
  static check_size<sizeof(InteractionObject), 88 + sizeof(::ArrayW<::RootMotion::FinalIK::InteractionTarget*>)> __RootMotion_FinalIK_InteractionObjectSizeCheck;
  static_assert(sizeof(InteractionObject) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::RootMotion::FinalIK::InteractionObject::WeightCurve);
DEFINE_IL2CPP_ARG_TYPE(::RootMotion::FinalIK::InteractionObject::WeightCurve*, "RootMotion.FinalIK", "InteractionObject/WeightCurve");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type, "RootMotion.FinalIK", "InteractionObject/WeightCurve/Type");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::get_length
// Il2CppName: get_length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (RootMotion::FinalIK::InteractionObject::*)()>(&RootMotion::FinalIK::InteractionObject::get_length)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "get_length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::set_length
// Il2CppName: set_length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::InteractionObject::*)(float)>(&RootMotion::FinalIK::InteractionObject::set_length)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "set_length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::get_lastUsedInteractionSystem
// Il2CppName: get_lastUsedInteractionSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::InteractionSystem* (RootMotion::FinalIK::InteractionObject::*)()>(&RootMotion::FinalIK::InteractionObject::get_lastUsedInteractionSystem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "get_lastUsedInteractionSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::set_lastUsedInteractionSystem
// Il2CppName: set_lastUsedInteractionSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::InteractionObject::*)(::RootMotion::FinalIK::InteractionSystem*)>(&RootMotion::FinalIK::InteractionObject::set_lastUsedInteractionSystem)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "InteractionSystem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "set_lastUsedInteractionSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::get_lookAtTarget
// Il2CppName: get_lookAtTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (RootMotion::FinalIK::InteractionObject::*)()>(&RootMotion::FinalIK::InteractionObject::get_lookAtTarget)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "get_lookAtTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::get_targetsRoot
// Il2CppName: get_targetsRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (RootMotion::FinalIK::InteractionObject::*)()>(&RootMotion::FinalIK::InteractionObject::get_targetsRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "get_targetsRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::OpenUserManual
// Il2CppName: OpenUserManual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::InteractionObject::*)()>(&RootMotion::FinalIK::InteractionObject::OpenUserManual)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "OpenUserManual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::OpenScriptReference
// Il2CppName: OpenScriptReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::InteractionObject::*)()>(&RootMotion::FinalIK::InteractionObject::OpenScriptReference)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "OpenScriptReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::OpenTutorial1
// Il2CppName: OpenTutorial1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::InteractionObject::*)()>(&RootMotion::FinalIK::InteractionObject::OpenTutorial1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "OpenTutorial1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::OpenTutorial2
// Il2CppName: OpenTutorial2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::InteractionObject::*)()>(&RootMotion::FinalIK::InteractionObject::OpenTutorial2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "OpenTutorial2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::OpenTutorial3
// Il2CppName: OpenTutorial3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::InteractionObject::*)()>(&RootMotion::FinalIK::InteractionObject::OpenTutorial3)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "OpenTutorial3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::OpenTutorial4
// Il2CppName: OpenTutorial4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::InteractionObject::*)()>(&RootMotion::FinalIK::InteractionObject::OpenTutorial4)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "OpenTutorial4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::SupportGroup
// Il2CppName: SupportGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::InteractionObject::*)()>(&RootMotion::FinalIK::InteractionObject::SupportGroup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "SupportGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::ASThread
// Il2CppName: ASThread
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::InteractionObject::*)()>(&RootMotion::FinalIK::InteractionObject::ASThread)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "ASThread", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::Initiate
// Il2CppName: Initiate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::InteractionObject::*)()>(&RootMotion::FinalIK::InteractionObject::Initiate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "Initiate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::GetTarget
// Il2CppName: GetTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RootMotion::FinalIK::InteractionTarget* (RootMotion::FinalIK::InteractionObject::*)(::RootMotion::FinalIK::FullBodyBipedEffector, ::RootMotion::FinalIK::InteractionSystem*)>(&RootMotion::FinalIK::InteractionObject::GetTarget)> {
  static const MethodInfo* get() {
    static auto* effectorType = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "FullBodyBipedEffector")->byval_arg;
    static auto* interactionSystem = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "InteractionSystem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "GetTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{effectorType, interactionSystem});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::CurveUsed
// Il2CppName: CurveUsed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RootMotion::FinalIK::InteractionObject::*)(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type)>(&RootMotion::FinalIK::InteractionObject::CurveUsed)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "CurveUsed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::GetTargets
// Il2CppName: GetTargets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::RootMotion::FinalIK::InteractionTarget*> (RootMotion::FinalIK::InteractionObject::*)()>(&RootMotion::FinalIK::InteractionObject::GetTargets)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "GetTargets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::GetTarget
// Il2CppName: GetTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (RootMotion::FinalIK::InteractionObject::*)(::RootMotion::FinalIK::FullBodyBipedEffector, ::StringW)>(&RootMotion::FinalIK::InteractionObject::GetTarget)> {
  static const MethodInfo* get() {
    static auto* effectorType = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "FullBodyBipedEffector")->byval_arg;
    static auto* tag = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "GetTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{effectorType, tag});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::OnStartInteraction
// Il2CppName: OnStartInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::InteractionObject::*)(::RootMotion::FinalIK::InteractionSystem*)>(&RootMotion::FinalIK::InteractionObject::OnStartInteraction)> {
  static const MethodInfo* get() {
    static auto* interactionSystem = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "InteractionSystem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "OnStartInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{interactionSystem});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::InteractionObject::*)(::RootMotion::FinalIK::IKSolverFullBodyBiped*, ::RootMotion::FinalIK::FullBodyBipedEffector, ::RootMotion::FinalIK::InteractionTarget*, float, float)>(&RootMotion::FinalIK::InteractionObject::Apply)> {
  static const MethodInfo* get() {
    static auto* solver = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "IKSolverFullBodyBiped")->byval_arg;
    static auto* effector = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "FullBodyBipedEffector")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "InteractionTarget")->byval_arg;
    static auto* timer = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* weight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{solver, effector, target, timer, weight});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::GetValue
// Il2CppName: GetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (RootMotion::FinalIK::InteractionObject::*)(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type, ::RootMotion::FinalIK::InteractionTarget*, float)>(&RootMotion::FinalIK::InteractionObject::GetValue)> {
  static const MethodInfo* get() {
    static auto* weightCurveType = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "InteractionTarget")->byval_arg;
    static auto* timer = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "GetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{weightCurveType, target, timer});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::InteractionObject::*)()>(&RootMotion::FinalIK::InteractionObject::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RootMotion::FinalIK::InteractionObject::*)(::RootMotion::FinalIK::IKSolverFullBodyBiped*, ::RootMotion::FinalIK::FullBodyBipedEffector, ::RootMotion::FinalIK::InteractionObject::WeightCurve::Type, float, float)>(&RootMotion::FinalIK::InteractionObject::Apply)> {
  static const MethodInfo* get() {
    static auto* solver = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "IKSolverFullBodyBiped")->byval_arg;
    static auto* effector = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "FullBodyBipedEffector")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* weight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{solver, effector, type, value, weight});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::GetTarget
// Il2CppName: GetTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (RootMotion::FinalIK::InteractionObject::*)(::RootMotion::FinalIK::FullBodyBipedEffector)>(&RootMotion::FinalIK::InteractionObject::GetTarget)> {
  static const MethodInfo* get() {
    static auto* effectorType = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "FullBodyBipedEffector")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "GetTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{effectorType});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::GetWeightCurveIndex
// Il2CppName: GetWeightCurveIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RootMotion::FinalIK::InteractionObject::*)(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type)>(&RootMotion::FinalIK::InteractionObject::GetWeightCurveIndex)> {
  static const MethodInfo* get() {
    static auto* weightCurveType = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "GetWeightCurveIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{weightCurveType});
  }
};
// Writing MetadataGetter for method: RootMotion::FinalIK::InteractionObject::GetMultiplierIndex
// Il2CppName: GetMultiplierIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RootMotion::FinalIK::InteractionObject::*)(::RootMotion::FinalIK::InteractionObject::WeightCurve::Type)>(&RootMotion::FinalIK::InteractionObject::GetMultiplierIndex)> {
  static const MethodInfo* get() {
    static auto* weightCurveType = &::il2cpp_utils::GetClassFromName("RootMotion.FinalIK", "InteractionObject/WeightCurve/Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RootMotion::FinalIK::InteractionObject*), "GetMultiplierIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{weightCurveType});
  }
};
