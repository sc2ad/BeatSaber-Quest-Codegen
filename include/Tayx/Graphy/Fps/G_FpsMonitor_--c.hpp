// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Tayx.Graphy.Fps.G_FpsMonitor
#include "Tayx/Graphy/Fps/G_FpsMonitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Comparison`1<T>
  template<typename T>
  class Comparison_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Tayx::Graphy::Fps::G_FpsMonitor::$$c);
DEFINE_IL2CPP_ARG_TYPE(::Tayx::Graphy::Fps::G_FpsMonitor::$$c*, "Tayx.Graphy.Fps", "G_FpsMonitor/<>c");
// Type namespace: Tayx.Graphy.Fps
namespace Tayx::Graphy::Fps {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Tayx.Graphy.Fps.G_FpsMonitor/Tayx.Graphy.Fps.<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class G_FpsMonitor::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly Tayx.Graphy.Fps.G_FpsMonitor/Tayx.Graphy.Fps.<>c <>9
    static ::Tayx::Graphy::Fps::G_FpsMonitor::$$c* _get_$$9();
    // Set static field: static public readonly Tayx.Graphy.Fps.G_FpsMonitor/Tayx.Graphy.Fps.<>c <>9
    static void _set_$$9(::Tayx::Graphy::Fps::G_FpsMonitor::$$c* value);
    // Get static field: static public System.Comparison`1<System.Int16> <>9__25_0
    static ::System::Comparison_1<int16_t>* _get_$$9__25_0();
    // Set static field: static public System.Comparison`1<System.Int16> <>9__25_0
    static void _set_$$9__25_0(::System::Comparison_1<int16_t>* value);
    // static private System.Void .cctor()
    // Offset: 0x2ADDF58
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x2ADDFBC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static G_FpsMonitor::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Fps::G_FpsMonitor::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<G_FpsMonitor::$$c*, creationType>()));
    }
    // System.Int32 <Update>b__25_0(System.Int16 x, System.Int16 y)
    // Offset: 0x2ADDFC4
    int $Update$b__25_0(int16_t x, int16_t y);
  }; // Tayx.Graphy.Fps.G_FpsMonitor/Tayx.Graphy.Fps.<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Tayx::Graphy::Fps::G_FpsMonitor::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Tayx::Graphy::Fps::G_FpsMonitor::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tayx::Graphy::Fps::G_FpsMonitor::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tayx::Graphy::Fps::G_FpsMonitor::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Tayx::Graphy::Fps::G_FpsMonitor::$$c::$Update$b__25_0
// Il2CppName: <Update>b__25_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Tayx::Graphy::Fps::G_FpsMonitor::$$c::*)(int16_t, int16_t)>(&Tayx::Graphy::Fps::G_FpsMonitor::$$c::$Update$b__25_0)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Tayx::Graphy::Fps::G_FpsMonitor::$$c*), "<Update>b__25_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y});
  }
};
