// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Tayx.Graphy.GraphyDebugger
#include "Tayx/Graphy/GraphyDebugger.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Tayx::Graphy::GraphyDebugger::MessageType, "Tayx.Graphy", "GraphyDebugger/MessageType");
// Type namespace: Tayx.Graphy
namespace Tayx::Graphy {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Tayx.Graphy.GraphyDebugger/Tayx.Graphy.MessageType
  // [TokenAttribute] Offset: FFFFFFFF
  struct GraphyDebugger::MessageType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: MessageType
    constexpr MessageType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating interface conversion operator: i_Enum
    inline ::System::Enum* i_Enum() noexcept {
      return reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Tayx.Graphy.GraphyDebugger/Tayx.Graphy.MessageType Log
    static constexpr const int Log = 0;
    // Get static field: static public Tayx.Graphy.GraphyDebugger/Tayx.Graphy.MessageType Log
    static ::Tayx::Graphy::GraphyDebugger::MessageType _get_Log();
    // Set static field: static public Tayx.Graphy.GraphyDebugger/Tayx.Graphy.MessageType Log
    static void _set_Log(::Tayx::Graphy::GraphyDebugger::MessageType value);
    // static field const value: static public Tayx.Graphy.GraphyDebugger/Tayx.Graphy.MessageType Warning
    static constexpr const int Warning = 1;
    // Get static field: static public Tayx.Graphy.GraphyDebugger/Tayx.Graphy.MessageType Warning
    static ::Tayx::Graphy::GraphyDebugger::MessageType _get_Warning();
    // Set static field: static public Tayx.Graphy.GraphyDebugger/Tayx.Graphy.MessageType Warning
    static void _set_Warning(::Tayx::Graphy::GraphyDebugger::MessageType value);
    // static field const value: static public Tayx.Graphy.GraphyDebugger/Tayx.Graphy.MessageType Error
    static constexpr const int Error = 2;
    // Get static field: static public Tayx.Graphy.GraphyDebugger/Tayx.Graphy.MessageType Error
    static ::Tayx::Graphy::GraphyDebugger::MessageType _get_Error();
    // Set static field: static public Tayx.Graphy.GraphyDebugger/Tayx.Graphy.MessageType Error
    static void _set_Error(::Tayx::Graphy::GraphyDebugger::MessageType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Tayx.Graphy.GraphyDebugger/Tayx.Graphy.MessageType
  #pragma pack(pop)
  static check_size<sizeof(GraphyDebugger::MessageType), 0 + sizeof(int)> __Tayx_Graphy_GraphyDebugger_MessageTypeSizeCheck;
  static_assert(sizeof(GraphyDebugger::MessageType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
