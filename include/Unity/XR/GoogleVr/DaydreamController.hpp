// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.InputSystem.XR.XRController
#include "UnityEngine/InputSystem/XR/XRController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::InputSystem::Controls
namespace UnityEngine::InputSystem::Controls {
  // Forward declaring type: Vector2Control
  class Vector2Control;
  // Forward declaring type: ButtonControl
  class ButtonControl;
  // Forward declaring type: Vector3Control
  class Vector3Control;
}
// Completed forward declares
// Type namespace: Unity.XR.GoogleVr
namespace Unity::XR::GoogleVr {
  // Forward declaring type: DaydreamController
  class DaydreamController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Unity::XR::GoogleVr::DaydreamController);
DEFINE_IL2CPP_ARG_TYPE(::Unity::XR::GoogleVr::DaydreamController*, "Unity.XR.GoogleVr", "DaydreamController");
// Type namespace: Unity.XR.GoogleVr
namespace Unity::XR::GoogleVr {
  // Size: 0x1C8
  #pragma pack(push, 1)
  // Autogenerated type: Unity.XR.GoogleVr.DaydreamController
  // [TokenAttribute] Offset: FFFFFFFF
  // [InputControlLayoutAttribute] Offset: 9572A0
  // [PreserveAttribute] Offset: FFFFFFFF
  class DaydreamController : public ::UnityEngine::InputSystem::XR::XRController {
    public:
    public:
    // private UnityEngine.InputSystem.Controls.Vector2Control <touchpad>k__BackingField
    // Size: 0x8
    // Offset: 0x170
    ::UnityEngine::InputSystem::Controls::Vector2Control* touchpad;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::Vector2Control*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <volumeUp>k__BackingField
    // Size: 0x8
    // Offset: 0x178
    ::UnityEngine::InputSystem::Controls::ButtonControl* volumeUp;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <recentered>k__BackingField
    // Size: 0x8
    // Offset: 0x180
    ::UnityEngine::InputSystem::Controls::ButtonControl* recentered;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <volumeDown>k__BackingField
    // Size: 0x8
    // Offset: 0x188
    ::UnityEngine::InputSystem::Controls::ButtonControl* volumeDown;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <recentering>k__BackingField
    // Size: 0x8
    // Offset: 0x190
    ::UnityEngine::InputSystem::Controls::ButtonControl* recentering;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <app>k__BackingField
    // Size: 0x8
    // Offset: 0x198
    ::UnityEngine::InputSystem::Controls::ButtonControl* app;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <home>k__BackingField
    // Size: 0x8
    // Offset: 0x1A0
    ::UnityEngine::InputSystem::Controls::ButtonControl* home;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <touchpadClicked>k__BackingField
    // Size: 0x8
    // Offset: 0x1A8
    ::UnityEngine::InputSystem::Controls::ButtonControl* touchpadClicked;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.ButtonControl <touchpadTouched>k__BackingField
    // Size: 0x8
    // Offset: 0x1B0
    ::UnityEngine::InputSystem::Controls::ButtonControl* touchpadTouched;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::ButtonControl*) == 0x8);
    // private UnityEngine.InputSystem.Controls.Vector3Control <deviceVelocity>k__BackingField
    // Size: 0x8
    // Offset: 0x1B8
    ::UnityEngine::InputSystem::Controls::Vector3Control* deviceVelocity;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::Vector3Control*) == 0x8);
    // private UnityEngine.InputSystem.Controls.Vector3Control <deviceAcceleration>k__BackingField
    // Size: 0x8
    // Offset: 0x1C0
    ::UnityEngine::InputSystem::Controls::Vector3Control* deviceAcceleration;
    // Field size check
    static_assert(sizeof(::UnityEngine::InputSystem::Controls::Vector3Control*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.InputSystem.Controls.Vector2Control <touchpad>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector2Control*& dyn_$touchpad$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <volumeUp>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$volumeUp$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <recentered>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$recentered$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <volumeDown>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$volumeDown$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <recentering>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$recentering$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <app>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$app$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <home>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$home$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <touchpadClicked>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$touchpadClicked$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.ButtonControl <touchpadTouched>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& dyn_$touchpadTouched$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.Vector3Control <deviceVelocity>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& dyn_$deviceVelocity$k__BackingField();
    // Get instance field reference: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAcceleration>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& dyn_$deviceAcceleration$k__BackingField();
    // public UnityEngine.InputSystem.Controls.Vector2Control get_touchpad()
    // Offset: 0xE0F168
    ::UnityEngine::InputSystem::Controls::Vector2Control* get_touchpad();
    // private System.Void set_touchpad(UnityEngine.InputSystem.Controls.Vector2Control value)
    // Offset: 0xE0F170
    void set_touchpad(::UnityEngine::InputSystem::Controls::Vector2Control* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_volumeUp()
    // Offset: 0xE0F178
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_volumeUp();
    // private System.Void set_volumeUp(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xE0F180
    void set_volumeUp(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_recentered()
    // Offset: 0xE0F188
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_recentered();
    // private System.Void set_recentered(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xE0F190
    void set_recentered(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_volumeDown()
    // Offset: 0xE0F198
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_volumeDown();
    // private System.Void set_volumeDown(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xE0F1A0
    void set_volumeDown(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_recentering()
    // Offset: 0xE0F1A8
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_recentering();
    // private System.Void set_recentering(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xE0F1B0
    void set_recentering(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_app()
    // Offset: 0xE0F1B8
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_app();
    // private System.Void set_app(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xE0F1C0
    void set_app(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_home()
    // Offset: 0xE0F1C8
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_home();
    // private System.Void set_home(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xE0F1D0
    void set_home(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_touchpadClicked()
    // Offset: 0xE0F1D8
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_touchpadClicked();
    // private System.Void set_touchpadClicked(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xE0F1E0
    void set_touchpadClicked(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.ButtonControl get_touchpadTouched()
    // Offset: 0xE0F1E8
    ::UnityEngine::InputSystem::Controls::ButtonControl* get_touchpadTouched();
    // private System.Void set_touchpadTouched(UnityEngine.InputSystem.Controls.ButtonControl value)
    // Offset: 0xE0F1F0
    void set_touchpadTouched(::UnityEngine::InputSystem::Controls::ButtonControl* value);
    // public UnityEngine.InputSystem.Controls.Vector3Control get_deviceVelocity()
    // Offset: 0xE0F1F8
    ::UnityEngine::InputSystem::Controls::Vector3Control* get_deviceVelocity();
    // private System.Void set_deviceVelocity(UnityEngine.InputSystem.Controls.Vector3Control value)
    // Offset: 0xE0F200
    void set_deviceVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value);
    // public UnityEngine.InputSystem.Controls.Vector3Control get_deviceAcceleration()
    // Offset: 0xE0F208
    ::UnityEngine::InputSystem::Controls::Vector3Control* get_deviceAcceleration();
    // private System.Void set_deviceAcceleration(UnityEngine.InputSystem.Controls.Vector3Control value)
    // Offset: 0xE0F210
    void set_deviceAcceleration(::UnityEngine::InputSystem::Controls::Vector3Control* value);
    // public System.Void .ctor()
    // Offset: 0xE0F3B0
    // Implemented from: UnityEngine.InputSystem.XR.XRController
    // Base method: System.Void XRController::.ctor()
    // Base method: System.Void TrackedDevice::.ctor()
    // Base method: System.Void InputDevice::.ctor()
    // Base method: System.Void InputControl::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DaydreamController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DaydreamController*, creationType>()));
    }
    // protected override System.Void FinishSetup()
    // Offset: 0xE0F218
    // Implemented from: UnityEngine.InputSystem.XR.XRController
    // Base method: System.Void XRController::FinishSetup()
    void FinishSetup();
  }; // Unity.XR.GoogleVr.DaydreamController
  #pragma pack(pop)
  static check_size<sizeof(DaydreamController), 448 + sizeof(::UnityEngine::InputSystem::Controls::Vector3Control*)> __Unity_XR_GoogleVr_DaydreamControllerSizeCheck;
  static_assert(sizeof(DaydreamController) == 0x1C8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::get_touchpad
// Il2CppName: get_touchpad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::Vector2Control* (Unity::XR::GoogleVr::DaydreamController::*)()>(&Unity::XR::GoogleVr::DaydreamController::get_touchpad)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "get_touchpad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::set_touchpad
// Il2CppName: set_touchpad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::GoogleVr::DaydreamController::*)(::UnityEngine::InputSystem::Controls::Vector2Control*)>(&Unity::XR::GoogleVr::DaydreamController::set_touchpad)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "Vector2Control")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "set_touchpad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::get_volumeUp
// Il2CppName: get_volumeUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::GoogleVr::DaydreamController::*)()>(&Unity::XR::GoogleVr::DaydreamController::get_volumeUp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "get_volumeUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::set_volumeUp
// Il2CppName: set_volumeUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::GoogleVr::DaydreamController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::GoogleVr::DaydreamController::set_volumeUp)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "set_volumeUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::get_recentered
// Il2CppName: get_recentered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::GoogleVr::DaydreamController::*)()>(&Unity::XR::GoogleVr::DaydreamController::get_recentered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "get_recentered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::set_recentered
// Il2CppName: set_recentered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::GoogleVr::DaydreamController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::GoogleVr::DaydreamController::set_recentered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "set_recentered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::get_volumeDown
// Il2CppName: get_volumeDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::GoogleVr::DaydreamController::*)()>(&Unity::XR::GoogleVr::DaydreamController::get_volumeDown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "get_volumeDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::set_volumeDown
// Il2CppName: set_volumeDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::GoogleVr::DaydreamController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::GoogleVr::DaydreamController::set_volumeDown)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "set_volumeDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::get_recentering
// Il2CppName: get_recentering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::GoogleVr::DaydreamController::*)()>(&Unity::XR::GoogleVr::DaydreamController::get_recentering)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "get_recentering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::set_recentering
// Il2CppName: set_recentering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::GoogleVr::DaydreamController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::GoogleVr::DaydreamController::set_recentering)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "set_recentering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::get_app
// Il2CppName: get_app
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::GoogleVr::DaydreamController::*)()>(&Unity::XR::GoogleVr::DaydreamController::get_app)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "get_app", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::set_app
// Il2CppName: set_app
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::GoogleVr::DaydreamController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::GoogleVr::DaydreamController::set_app)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "set_app", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::get_home
// Il2CppName: get_home
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::GoogleVr::DaydreamController::*)()>(&Unity::XR::GoogleVr::DaydreamController::get_home)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "get_home", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::set_home
// Il2CppName: set_home
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::GoogleVr::DaydreamController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::GoogleVr::DaydreamController::set_home)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "set_home", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::get_touchpadClicked
// Il2CppName: get_touchpadClicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::GoogleVr::DaydreamController::*)()>(&Unity::XR::GoogleVr::DaydreamController::get_touchpadClicked)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "get_touchpadClicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::set_touchpadClicked
// Il2CppName: set_touchpadClicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::GoogleVr::DaydreamController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::GoogleVr::DaydreamController::set_touchpadClicked)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "set_touchpadClicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::get_touchpadTouched
// Il2CppName: get_touchpadTouched
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::ButtonControl* (Unity::XR::GoogleVr::DaydreamController::*)()>(&Unity::XR::GoogleVr::DaydreamController::get_touchpadTouched)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "get_touchpadTouched", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::set_touchpadTouched
// Il2CppName: set_touchpadTouched
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::GoogleVr::DaydreamController::*)(::UnityEngine::InputSystem::Controls::ButtonControl*)>(&Unity::XR::GoogleVr::DaydreamController::set_touchpadTouched)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "ButtonControl")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "set_touchpadTouched", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::get_deviceVelocity
// Il2CppName: get_deviceVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::Vector3Control* (Unity::XR::GoogleVr::DaydreamController::*)()>(&Unity::XR::GoogleVr::DaydreamController::get_deviceVelocity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "get_deviceVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::set_deviceVelocity
// Il2CppName: set_deviceVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::GoogleVr::DaydreamController::*)(::UnityEngine::InputSystem::Controls::Vector3Control*)>(&Unity::XR::GoogleVr::DaydreamController::set_deviceVelocity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "Vector3Control")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "set_deviceVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::get_deviceAcceleration
// Il2CppName: get_deviceAcceleration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::InputSystem::Controls::Vector3Control* (Unity::XR::GoogleVr::DaydreamController::*)()>(&Unity::XR::GoogleVr::DaydreamController::get_deviceAcceleration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "get_deviceAcceleration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::set_deviceAcceleration
// Il2CppName: set_deviceAcceleration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::GoogleVr::DaydreamController::*)(::UnityEngine::InputSystem::Controls::Vector3Control*)>(&Unity::XR::GoogleVr::DaydreamController::set_deviceAcceleration)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine.InputSystem.Controls", "Vector3Control")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "set_deviceAcceleration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Unity::XR::GoogleVr::DaydreamController::FinishSetup
// Il2CppName: FinishSetup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Unity::XR::GoogleVr::DaydreamController::*)()>(&Unity::XR::GoogleVr::DaydreamController::FinishSetup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Unity::XR::GoogleVr::DaydreamController*), "FinishSetup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
