// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Oculus.Platform.Models
namespace Oculus::Platform::Models {
  // Forward declaring type: Product
  class Product;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Platform::Models::Product);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Platform::Models::Product*, "Oculus.Platform.Models", "Product");
// Type namespace: Oculus.Platform.Models
namespace Oculus::Platform::Models {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Platform.Models.Product
  // [TokenAttribute] Offset: FFFFFFFF
  class Product : public ::Il2CppObject {
    public:
    public:
    // public readonly System.String Description
    // Size: 0x8
    // Offset: 0x10
    ::StringW Description;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public readonly System.String FormattedPrice
    // Size: 0x8
    // Offset: 0x18
    ::StringW FormattedPrice;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public readonly System.String Name
    // Size: 0x8
    // Offset: 0x20
    ::StringW Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public readonly System.String Sku
    // Size: 0x8
    // Offset: 0x28
    ::StringW Sku;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public readonly System.String Description
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Description();
    // Get instance field reference: public readonly System.String FormattedPrice
    [[deprecated("Use field access instead!")]] ::StringW& dyn_FormattedPrice();
    // Get instance field reference: public readonly System.String Name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Name();
    // Get instance field reference: public readonly System.String Sku
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Sku();
    // public System.Void .ctor(System.IntPtr o)
    // Offset: 0x19F23A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Product* New_ctor(::System::IntPtr o) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::Models::Product::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Product*, creationType>(o)));
    }
  }; // Oculus.Platform.Models.Product
  #pragma pack(pop)
  static check_size<sizeof(Product), 40 + sizeof(::StringW)> __Oculus_Platform_Models_ProductSizeCheck;
  static_assert(sizeof(Product) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Platform::Models::Product::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
