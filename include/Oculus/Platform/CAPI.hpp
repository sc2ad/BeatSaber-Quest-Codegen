// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.KeyValuePairType
#include "Oculus/Platform/KeyValuePairType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: Oculus::Platform
namespace Oculus::Platform {
  // Forward declaring type: LaunchResult
  struct LaunchResult;
  // Forward declaring type: VoipMuteState
  struct VoipMuteState;
  // Forward declaring type: SendPolicy
  struct SendPolicy;
  // Forward declaring type: SystemVoipStatus
  struct SystemVoipStatus;
  // Forward declaring type: VoipDtxState
  struct VoipDtxState;
  // Forward declaring type: VoipBitrate
  struct VoipBitrate;
  // Forward declaring type: VoipSampleRate
  struct VoipSampleRate;
  // Forward declaring type: LeaderboardFilterType
  struct LeaderboardFilterType;
  // Forward declaring type: LeaderboardStartAt
  struct LeaderboardStartAt;
  // Forward declaring type: LivestreamingAudience
  struct LivestreamingAudience;
  // Forward declaring type: LivestreamingMicrophoneStatus
  struct LivestreamingMicrophoneStatus;
  // Forward declaring type: MatchmakingStatApproach
  struct MatchmakingStatApproach;
  // Forward declaring type: MediaContentType
  struct MediaContentType;
  // Forward declaring type: NetSyncVoipMicSource
  struct NetSyncVoipMicSource;
  // Forward declaring type: NetSyncVoipStreamMode
  struct NetSyncVoipStreamMode;
  // Forward declaring type: RoomJoinPolicy
  struct RoomJoinPolicy;
  // Forward declaring type: RoomMembershipLockStatus
  struct RoomMembershipLockStatus;
  // Forward declaring type: PermissionType
  struct PermissionType;
  // Forward declaring type: AchievementType
  struct AchievementType;
  // Forward declaring type: ChallengeCreationType
  struct ChallengeCreationType;
  // Forward declaring type: ChallengeVisibility
  struct ChallengeVisibility;
  // Forward declaring type: CloudStorageDataStatus
  struct CloudStorageDataStatus;
  // Forward declaring type: CloudStorageUpdateStatus
  struct CloudStorageUpdateStatus;
  // Forward declaring type: LaunchType
  struct LaunchType;
  // Forward declaring type: ServiceProvider
  struct ServiceProvider;
  // Forward declaring type: LivestreamingStartStatus
  struct LivestreamingStartStatus;
  // Forward declaring type: NetSyncDisconnectReason
  struct NetSyncDisconnectReason;
  // Forward declaring type: NetSyncConnectionStatus
  struct NetSyncConnectionStatus;
  // Forward declaring type: PeerConnectionState
  struct PeerConnectionState;
  // Forward declaring type: PartyUpdateAction
  struct PartyUpdateAction;
  // Forward declaring type: PlatformInitializeResult
  struct PlatformInitializeResult;
  // Forward declaring type: RoomJoinability
  struct RoomJoinability;
  // Forward declaring type: RoomType
  struct RoomType;
  // Forward declaring type: SdkAccountType
  struct SdkAccountType;
  // Forward declaring type: ShareMediaStatus
  struct ShareMediaStatus;
  // Forward declaring type: PermissionGrantStatus
  struct PermissionGrantStatus;
  // Forward declaring type: UserPresenceStatus
  struct UserPresenceStatus;
  // Forward declaring type: AbuseReportType
  struct AbuseReportType;
  // Forward declaring type: AbuseReportVideoMode
  struct AbuseReportVideoMode;
  // Forward declaring type: ChallengeViewerFilter
  struct ChallengeViewerFilter;
  // Forward declaring type: RichPresenceExtraContext
  struct RichPresenceExtraContext;
  // Forward declaring type: UserOrdering
  struct UserOrdering;
  // Forward declaring type: TimeWindow
  struct TimeWindow;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Array
  class Array;
  // Forward declaring type: DateTime
  struct DateTime;
  // Forward declaring type: UIntPtr
  struct UIntPtr;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: UTF8Encoding
  class UTF8Encoding;
}
// Completed forward declares
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Forward declaring type: CAPI
  class CAPI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Platform::CAPI);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Platform::CAPI*, "Oculus.Platform", "CAPI");
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Platform.CAPI
  // [TokenAttribute] Offset: FFFFFFFF
  class CAPI : public ::Il2CppObject {
    public:
    // Nested type: ::Oculus::Platform::CAPI::ovrKeyValuePair
    struct ovrKeyValuePair;
    // Nested type: ::Oculus::Platform::CAPI::ovrNetSyncVec3
    struct ovrNetSyncVec3;
    // Nested type: ::Oculus::Platform::CAPI::ovrMatchmakingCriterion
    struct ovrMatchmakingCriterion;
    // Nested type: ::Oculus::Platform::CAPI::ovrMatchmakingCustomQueryData
    struct ovrMatchmakingCustomQueryData;
    // Nested type: ::Oculus::Platform::CAPI::OculusInitParams
    struct OculusInitParams;
    // Nested type: ::Oculus::Platform::CAPI::FilterCallback
    class FilterCallback;
    // Size: 0x28
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair
    // [TokenAttribute] Offset: FFFFFFFF
    struct ovrKeyValuePair/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.String key_
      // Size: 0x8
      // Offset: 0x0
      ::StringW key;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // private Oculus.Platform.KeyValuePairType valueType_
      // Size: 0x4
      // Offset: 0x8
      ::Oculus::Platform::KeyValuePairType valueType;
      // Field size check
      static_assert(sizeof(::Oculus::Platform::KeyValuePairType) == 0x4);
      // Padding between fields: valueType and: stringValue
      char __padding1[0x4] = {};
      // public System.String stringValue_
      // Size: 0x8
      // Offset: 0x10
      ::StringW stringValue;
      // Field size check
      static_assert(sizeof(::StringW) == 0x8);
      // public System.Int32 intValue_
      // Size: 0x4
      // Offset: 0x18
      int intValue;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // Padding between fields: intValue and: doubleValue
      char __padding3[0x4] = {};
      // public System.Double doubleValue_
      // Size: 0x8
      // Offset: 0x20
      double doubleValue;
      // Field size check
      static_assert(sizeof(double) == 0x8);
      public:
      // Creating value type constructor for type: ovrKeyValuePair
      constexpr ovrKeyValuePair(::StringW key_ = {}, ::Oculus::Platform::KeyValuePairType valueType_ = {}, ::StringW stringValue_ = {}, int intValue_ = {}, double doubleValue_ = {}) noexcept : key{key_}, valueType{valueType_}, stringValue{stringValue_}, intValue{intValue_}, doubleValue{doubleValue_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Creating interface conversion operator: i_ValueType
      inline ::System::ValueType* i_ValueType() noexcept {
        return reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public System.String key_
      [[deprecated("Use field access instead!")]] ::StringW& dyn_key_();
      // Get instance field reference: private Oculus.Platform.KeyValuePairType valueType_
      [[deprecated("Use field access instead!")]] ::Oculus::Platform::KeyValuePairType& dyn_valueType_();
      // Get instance field reference: public System.String stringValue_
      [[deprecated("Use field access instead!")]] ::StringW& dyn_stringValue_();
      // Get instance field reference: public System.Int32 intValue_
      [[deprecated("Use field access instead!")]] int& dyn_intValue_();
      // Get instance field reference: public System.Double doubleValue_
      [[deprecated("Use field access instead!")]] double& dyn_doubleValue_();
      // public System.Void .ctor(System.String key, System.String value)
      // Offset: 0x1A2A914
      ovrKeyValuePair(::StringW key, ::StringW value);
      // public System.Void .ctor(System.String key, System.Int32 value)
      // Offset: 0x1A2A92C
      ovrKeyValuePair(::StringW key, int value);
      // public System.Void .ctor(System.String key, System.Double value)
      // Offset: 0x1A2A948
      ovrKeyValuePair(::StringW key, double value);
    }; // Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair
    #pragma pack(pop)
    static check_size<sizeof(CAPI::ovrKeyValuePair), 32 + sizeof(double)> __Oculus_Platform_CAPI_ovrKeyValuePairSizeCheck;
    static_assert(sizeof(CAPI::ovrKeyValuePair) == 0x28);
    // static field const value: static public System.String DLL_NAME
    static constexpr const char* DLL_NAME = "ovrplatformloader";
    // Get static field: static public System.String DLL_NAME
    static ::StringW _get_DLL_NAME();
    // Set static field: static public System.String DLL_NAME
    static void _set_DLL_NAME(::StringW value);
    // Get static field: static private System.Text.UTF8Encoding nativeStringEncoding
    static ::System::Text::UTF8Encoding* _get_nativeStringEncoding();
    // Set static field: static private System.Text.UTF8Encoding nativeStringEncoding
    static void _set_nativeStringEncoding(::System::Text::UTF8Encoding* value);
    // static field const value: static public System.Int32 VoipFilterBufferSize
    static constexpr const int VoipFilterBufferSize = 480;
    // Get static field: static public System.Int32 VoipFilterBufferSize
    static int _get_VoipFilterBufferSize();
    // Set static field: static public System.Int32 VoipFilterBufferSize
    static void _set_VoipFilterBufferSize(int value);
    // public System.Void .ctor()
    // Offset: 0x2185090
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CAPI* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CAPI*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x2185098
    static void _cctor();
    // static public System.IntPtr ArrayOfStructsToIntPtr(System.Array ar)
    // Offset: 0x2160880
    static ::System::IntPtr ArrayOfStructsToIntPtr(::System::Array* ar);
    // static public Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(System.Collections.Generic.Dictionary`2<System.String,System.Object> dict)
    // Offset: 0x2160A40
    static ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> DictionaryToOVRKeyValuePairs(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* dict);
    // static public System.Byte[] IntPtrToByteArray(System.IntPtr data, System.UInt64 size)
    // Offset: 0x2160EEC
    static ::ArrayW<uint8_t> IntPtrToByteArray(::System::IntPtr data, uint64_t size);
    // static public System.Collections.Generic.Dictionary`2<System.String,System.String> DataStoreFromNative(System.IntPtr pointer)
    // Offset: 0x2160FA8
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* DataStoreFromNative(::System::IntPtr pointer);
    // static public System.String StringFromNative(System.IntPtr pointer)
    // Offset: 0x21612B0
    static ::StringW StringFromNative(::System::IntPtr pointer);
    // static public System.Int32 GetNativeStringLengthNotIncludingNullTerminator(System.IntPtr pointer)
    // Offset: 0x21613C8
    static int GetNativeStringLengthNotIncludingNullTerminator(::System::IntPtr pointer);
    // static public System.DateTime DateTimeFromNative(System.UInt64 seconds_since_the_one_true_epoch)
    // Offset: 0x2161454
    static ::System::DateTime DateTimeFromNative(uint64_t seconds_since_the_one_true_epoch);
    // static public System.UInt64 DateTimeToNative(System.DateTime dt)
    // Offset: 0x21614C4
    static uint64_t DateTimeToNative(::System::DateTime dt);
    // static public System.Byte[] BlobFromNative(System.UInt32 size, System.IntPtr pointer)
    // Offset: 0x21615C0
    static ::ArrayW<uint8_t> BlobFromNative(uint size, ::System::IntPtr pointer);
    // static public System.Byte[] FiledataFromNative(System.UInt32 size, System.IntPtr pointer)
    // Offset: 0x21616A4
    static ::ArrayW<uint8_t> FiledataFromNative(uint size, ::System::IntPtr pointer);
    // static public System.IntPtr StringToNative(System.String s)
    // Offset: 0x2161748
    static ::System::IntPtr StringToNative(::StringW s);
    // static public System.Boolean ovr_UnityInitWrapper(System.String appId)
    // Offset: 0x215E72C
    static bool ovr_UnityInitWrapper(::StringW appId);
    // static public System.Void ovr_UnityInitGlobals(System.IntPtr loggingCB)
    // Offset: 0x21618B8
    static void ovr_UnityInitGlobals(::System::IntPtr loggingCB);
    // static public System.UInt64 ovr_UnityInitWrapperAsynchronous(System.String appId)
    // Offset: 0x215E8B0
    static uint64_t ovr_UnityInitWrapperAsynchronous(::StringW appId);
    // static public System.Boolean ovr_UnityInitWrapperStandalone(System.String accessToken, System.IntPtr loggingCB)
    // Offset: 0x2161938
    static bool ovr_UnityInitWrapperStandalone(::StringW accessToken, ::System::IntPtr loggingCB);
    // static public System.UInt64 ovr_Platform_InitializeStandaloneOculus(ref Oculus.Platform.CAPI/Oculus.Platform.OculusInitParams init)
    // Offset: 0x21619E4
    static uint64_t ovr_Platform_InitializeStandaloneOculus(ByRef<::Oculus::Platform::CAPI::OculusInitParams> init);
    // static public System.UInt64 ovr_PlatformInitializeWithAccessToken(System.UInt64 appId, System.String accessToken)
    // Offset: 0x2161ABC
    static uint64_t ovr_PlatformInitializeWithAccessToken(uint64_t appId, ::StringW accessToken);
    // static public System.Boolean ovr_UnityInitWrapperWindows(System.String appId, System.IntPtr loggingCB)
    // Offset: 0x2161B68
    static bool ovr_UnityInitWrapperWindows(::StringW appId, ::System::IntPtr loggingCB);
    // static public System.UInt64 ovr_UnityInitWrapperWindowsAsynchronous(System.String appId, System.IntPtr loggingCB)
    // Offset: 0x2161C14
    static uint64_t ovr_UnityInitWrapperWindowsAsynchronous(::StringW appId, ::System::IntPtr loggingCB);
    // static public System.Boolean ovr_SetDeveloperAccessToken(System.String accessToken)
    // Offset: 0x2161CBC
    static bool ovr_SetDeveloperAccessToken(::StringW accessToken);
    // static public System.String ovr_GetLoggedInUserLocale()
    // Offset: 0x2161D58
    static ::StringW ovr_GetLoggedInUserLocale();
    // static private System.IntPtr ovr_GetLoggedInUserLocale_Native()
    // Offset: 0x2161DB8
    static ::System::IntPtr ovr_GetLoggedInUserLocale_Native();
    // static public System.IntPtr ovr_PopMessage()
    // Offset: 0x2161E2C
    static ::System::IntPtr ovr_PopMessage();
    // static public System.Void ovr_FreeMessage(System.IntPtr message)
    // Offset: 0x2161EA0
    static void ovr_FreeMessage(::System::IntPtr message);
    // static public System.IntPtr ovr_Voip_CreateEncoder()
    // Offset: 0x2161F20
    static ::System::IntPtr ovr_Voip_CreateEncoder();
    // static public System.Void ovr_Voip_DestroyEncoder(System.IntPtr encoder)
    // Offset: 0x2161F94
    static void ovr_Voip_DestroyEncoder(::System::IntPtr encoder);
    // static public System.IntPtr ovr_Voip_CreateDecoder()
    // Offset: 0x2162014
    static ::System::IntPtr ovr_Voip_CreateDecoder();
    // static public System.Void ovr_Voip_DestroyDecoder(System.IntPtr decoder)
    // Offset: 0x2162088
    static void ovr_Voip_DestroyDecoder(::System::IntPtr decoder);
    // static public System.Void ovr_VoipDecoder_Decode(System.IntPtr obj, System.Byte[] compressedData, System.UInt64 compressedSize)
    // Offset: 0x2162108
    static void ovr_VoipDecoder_Decode(::System::IntPtr obj, ::ArrayW<uint8_t> compressedData, uint64_t compressedSize);
    // static public System.IntPtr ovr_Microphone_Create()
    // Offset: 0x21621A8
    static ::System::IntPtr ovr_Microphone_Create();
    // static public System.Void ovr_Microphone_Destroy(System.IntPtr obj)
    // Offset: 0x216221C
    static void ovr_Microphone_Destroy(::System::IntPtr obj);
    // static public System.Void ovr_Voip_SetSystemVoipPassthrough(System.Boolean passthrough)
    // Offset: 0x216229C
    static void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);
    // static public System.Void ovr_Voip_SetSystemVoipMicrophoneMuted(Oculus.Platform.VoipMuteState muted)
    // Offset: 0x216231C
    static void ovr_Voip_SetSystemVoipMicrophoneMuted(::Oculus::Platform::VoipMuteState muted);
    // static public System.Void ovr_UnityResetTestPlatform()
    // Offset: 0x216239C
    static void ovr_UnityResetTestPlatform();
    // static public System.UInt64 ovr_HTTP_GetWithMessageType(System.String url, System.Int32 messageType)
    // Offset: 0x215DEBC
    static uint64_t ovr_HTTP_GetWithMessageType(::StringW url, int messageType);
    // static public System.Void ovr_CrashApplication()
    // Offset: 0x216240C
    static void ovr_CrashApplication();
    // static public System.Void ovr_Voip_SetMicrophoneFilterCallback(Oculus.Platform.CAPI/Oculus.Platform.FilterCallback cb)
    // Offset: 0x216247C
    static void ovr_Voip_SetMicrophoneFilterCallback(::Oculus::Platform::CAPI::FilterCallback* cb);
    // static public System.Void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(Oculus.Platform.CAPI/Oculus.Platform.FilterCallback cb, System.UIntPtr bufferSizeElements)
    // Offset: 0x2162500
    static void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(::Oculus::Platform::CAPI::FilterCallback* cb, ::System::UIntPtr bufferSizeElements);
    // static public System.Void LogNewEvent(System.String eventName, System.Collections.Generic.Dictionary`2<System.String,System.String> values)
    // Offset: 0x2162594
    static void LogNewEvent(::StringW eventName, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* values);
    // static public System.Void ovr_Log_NewEvent(System.IntPtr eventName, System.IntPtr[] values, System.UIntPtr length)
    // Offset: 0x2162898
    static void ovr_Log_NewEvent(::System::IntPtr eventName, ::ArrayW<::System::IntPtr> values, ::System::UIntPtr length);
    // static public System.IntPtr ovr_ApplicationLifecycle_GetLaunchDetails()
    // Offset: 0x215ED84
    static ::System::IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();
    // static public System.Void ovr_ApplicationLifecycle_LogDeeplinkResult(System.String trackingID, Oculus.Platform.LaunchResult result)
    // Offset: 0x215EE6C
    static void ovr_ApplicationLifecycle_LogDeeplinkResult(::StringW trackingID, ::Oculus::Platform::LaunchResult result);
    // static private System.Void ovr_ApplicationLifecycle_LogDeeplinkResult_Native(System.IntPtr trackingID, Oculus.Platform.LaunchResult result)
    // Offset: 0x2162938
    static void ovr_ApplicationLifecycle_LogDeeplinkResult_Native(::System::IntPtr trackingID, ::Oculus::Platform::LaunchResult result);
    // static public System.UInt64 ovr_HTTP_StartTransfer(System.String url, Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair[] headers)
    // Offset: 0x21629C8
    static uint64_t ovr_HTTP_StartTransfer(::StringW url, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> headers);
    // static private System.UInt64 ovr_HTTP_StartTransfer_Native(System.IntPtr url, Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair[] headers, System.UIntPtr numItems)
    // Offset: 0x2162ABC
    static uint64_t ovr_HTTP_StartTransfer_Native(::System::IntPtr url, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> headers, ::System::UIntPtr numItems);
    // static public System.Boolean ovr_HTTP_Write(System.UInt64 transferId, System.Byte[] bytes, System.UIntPtr length)
    // Offset: 0x2162C18
    static bool ovr_HTTP_Write(uint64_t transferId, ::ArrayW<uint8_t> bytes, ::System::UIntPtr length);
    // static public System.Void ovr_HTTP_WriteEOM(System.UInt64 transferId)
    // Offset: 0x2162CC0
    static void ovr_HTTP_WriteEOM(uint64_t transferId);
    // static public System.String ovr_Message_GetStringForJavascript(System.IntPtr message)
    // Offset: 0x2162D3C
    static ::StringW ovr_Message_GetStringForJavascript(::System::IntPtr message);
    // static private System.IntPtr ovr_Message_GetStringForJavascript_Native(System.IntPtr message)
    // Offset: 0x2162DA4
    static ::System::IntPtr ovr_Message_GetStringForJavascript_Native(::System::IntPtr message);
    // static public System.UIntPtr ovr_NetSync_GetAmbisonicFloatPCM(System.Int64 connection_id, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x2162E24
    static ::System::UIntPtr ovr_NetSync_GetAmbisonicFloatPCM(int64_t connection_id, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetAmbisonicInt16PCM(System.Int64 connection_id, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x2162EC4
    static ::System::UIntPtr ovr_NetSync_GetAmbisonicInt16PCM(int64_t connection_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetAmbisonicInterleavedFloatPCM(System.Int64 connection_id, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x2162F64
    static ::System::UIntPtr ovr_NetSync_GetAmbisonicInterleavedFloatPCM(int64_t connection_id, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetAmbisonicInterleavedInt16PCM(System.Int64 connection_id, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x2163004
    static ::System::UIntPtr ovr_NetSync_GetAmbisonicInterleavedInt16PCM(int64_t connection_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.Boolean ovr_NetSync_GetListenerPosition(System.Int64 connection_id, System.UInt64 sessionId, ref Oculus.Platform.CAPI/Oculus.Platform.ovrNetSyncVec3 position)
    // Offset: 0x21630A4
    static bool ovr_NetSync_GetListenerPosition(int64_t connection_id, uint64_t sessionId, ByRef<::Oculus::Platform::CAPI::ovrNetSyncVec3> position);
    // static public System.UIntPtr ovr_NetSync_GetMonostreamFloatPCM(System.Int64 connection_id, System.UInt64 sessionId, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x2163144
    static ::System::UIntPtr ovr_NetSync_GetMonostreamFloatPCM(int64_t connection_id, uint64_t sessionId, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetMonostreamInt16PCM(System.Int64 connection_id, System.UInt64 session_id, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x21631F4
    static ::System::UIntPtr ovr_NetSync_GetMonostreamInt16PCM(int64_t connection_id, uint64_t session_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_NetSync_GetPcmBufferMaxSamples()
    // Offset: 0x21632A4
    static ::System::UIntPtr ovr_NetSync_GetPcmBufferMaxSamples();
    // static public System.Boolean ovr_NetSync_GetVoipAmplitude(System.Int64 connection_id, System.UInt64 sessionId, ref System.Single amplitude)
    // Offset: 0x2163318
    static bool ovr_NetSync_GetVoipAmplitude(int64_t connection_id, uint64_t sessionId, ByRef<float> amplitude);
    // static public System.Void ovr_NetSync_SetListenerPosition(System.Int64 connection_id, ref Oculus.Platform.CAPI/Oculus.Platform.ovrNetSyncVec3 position)
    // Offset: 0x21633B8
    static void ovr_NetSync_SetListenerPosition(int64_t connection_id, ByRef<::Oculus::Platform::CAPI::ovrNetSyncVec3> position);
    // static public System.Void ovr_Net_Accept(System.UInt64 peerID)
    // Offset: 0x2163448
    static void ovr_Net_Accept(uint64_t peerID);
    // static public System.Boolean ovr_Net_AcceptForCurrentRoom()
    // Offset: 0x21634C8
    static bool ovr_Net_AcceptForCurrentRoom();
    // static public System.Void ovr_Net_Close(System.UInt64 peerID)
    // Offset: 0x2163544
    static void ovr_Net_Close(uint64_t peerID);
    // static public System.Void ovr_Net_CloseForCurrentRoom()
    // Offset: 0x21635C4
    static void ovr_Net_CloseForCurrentRoom();
    // static public System.Void ovr_Net_Connect(System.UInt64 peerID)
    // Offset: 0x2163634
    static void ovr_Net_Connect(uint64_t peerID);
    // static public System.Boolean ovr_Net_IsConnected(System.UInt64 peerID)
    // Offset: 0x21636B4
    static bool ovr_Net_IsConnected(uint64_t peerID);
    // static public System.UInt64 ovr_Net_Ping(System.UInt64 peerID)
    // Offset: 0x216373C
    static uint64_t ovr_Net_Ping(uint64_t peerID);
    // static public System.IntPtr ovr_Net_ReadPacket()
    // Offset: 0x21637BC
    static ::System::IntPtr ovr_Net_ReadPacket();
    // static public System.Boolean ovr_Net_SendPacket(System.UInt64 userID, System.UIntPtr length, System.Byte[] bytes, Oculus.Platform.SendPolicy policy)
    // Offset: 0x2163830
    static bool ovr_Net_SendPacket(uint64_t userID, ::System::UIntPtr length, ::ArrayW<uint8_t> bytes, ::Oculus::Platform::SendPolicy policy);
    // static public System.Boolean ovr_Net_SendPacketToCurrentRoom(System.UIntPtr length, System.Byte[] bytes, Oculus.Platform.SendPolicy policy)
    // Offset: 0x21638E8
    static bool ovr_Net_SendPacketToCurrentRoom(::System::UIntPtr length, ::ArrayW<uint8_t> bytes, ::Oculus::Platform::SendPolicy policy);
    // static public System.Int32 ovr_Party_PluginGetSharedMemHandle()
    // Offset: 0x2163990
    static int ovr_Party_PluginGetSharedMemHandle();
    // static public Oculus.Platform.VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted()
    // Offset: 0x2163A04
    static ::Oculus::Platform::VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();
    // static public System.Boolean ovr_Party_PluginGetVoipPassthrough()
    // Offset: 0x2163A78
    static bool ovr_Party_PluginGetVoipPassthrough();
    // static public Oculus.Platform.SystemVoipStatus ovr_Party_PluginGetVoipStatus()
    // Offset: 0x2163AF4
    static ::Oculus::Platform::SystemVoipStatus ovr_Party_PluginGetVoipStatus();
    // static public System.Void ovr_Voip_Accept(System.UInt64 userID)
    // Offset: 0x2163B68
    static void ovr_Voip_Accept(uint64_t userID);
    // static public Oculus.Platform.VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(System.UInt64 peerID)
    // Offset: 0x2163BE8
    static ::Oculus::Platform::VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(uint64_t peerID);
    // static public Oculus.Platform.VoipBitrate ovr_Voip_GetLocalBitrate(System.UInt64 peerID)
    // Offset: 0x2163C68
    static ::Oculus::Platform::VoipBitrate ovr_Voip_GetLocalBitrate(uint64_t peerID);
    // static public System.UIntPtr ovr_Voip_GetOutputBufferMaxSize()
    // Offset: 0x2163CE8
    static ::System::UIntPtr ovr_Voip_GetOutputBufferMaxSize();
    // static public System.UIntPtr ovr_Voip_GetPCM(System.UInt64 senderID, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x2163D5C
    static ::System::UIntPtr ovr_Voip_GetPCM(uint64_t senderID, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_Voip_GetPCMFloat(System.UInt64 senderID, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x2163DFC
    static ::System::UIntPtr ovr_Voip_GetPCMFloat(uint64_t senderID, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_Voip_GetPCMSize(System.UInt64 senderID)
    // Offset: 0x2163E9C
    static ::System::UIntPtr ovr_Voip_GetPCMSize(uint64_t senderID);
    // static public System.UIntPtr ovr_Voip_GetPCMWithTimestamp(System.UInt64 senderID, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements, System.UInt32[] timestamp)
    // Offset: 0x2163F1C
    static ::System::UIntPtr ovr_Voip_GetPCMWithTimestamp(uint64_t senderID, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements, ::ArrayW<uint> timestamp);
    // static public System.UIntPtr ovr_Voip_GetPCMWithTimestampFloat(System.UInt64 senderID, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements, System.UInt32[] timestamp)
    // Offset: 0x2163FD4
    static ::System::UIntPtr ovr_Voip_GetPCMWithTimestampFloat(uint64_t senderID, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements, ::ArrayW<uint> timestamp);
    // static public Oculus.Platform.VoipBitrate ovr_Voip_GetRemoteBitrate(System.UInt64 peerID)
    // Offset: 0x216408C
    static ::Oculus::Platform::VoipBitrate ovr_Voip_GetRemoteBitrate(uint64_t peerID);
    // static public System.UInt32 ovr_Voip_GetSyncTimestamp(System.UInt64 userID)
    // Offset: 0x216410C
    static uint ovr_Voip_GetSyncTimestamp(uint64_t userID);
    // static public System.Int64 ovr_Voip_GetSyncTimestampDifference(System.UInt32 lhs, System.UInt32 rhs)
    // Offset: 0x216418C
    static int64_t ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);
    // static public Oculus.Platform.VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted()
    // Offset: 0x216421C
    static ::Oculus::Platform::VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();
    // static public Oculus.Platform.SystemVoipStatus ovr_Voip_GetSystemVoipStatus()
    // Offset: 0x2164290
    static ::Oculus::Platform::SystemVoipStatus ovr_Voip_GetSystemVoipStatus();
    // static public System.Void ovr_Voip_SetMicrophoneMuted(Oculus.Platform.VoipMuteState state)
    // Offset: 0x2164304
    static void ovr_Voip_SetMicrophoneMuted(::Oculus::Platform::VoipMuteState state);
    // static public System.Void ovr_Voip_SetNewConnectionOptions(System.IntPtr voipOptions)
    // Offset: 0x2164384
    static void ovr_Voip_SetNewConnectionOptions(::System::IntPtr voipOptions);
    // static public System.Void ovr_Voip_SetOutputSampleRate(Oculus.Platform.VoipSampleRate rate)
    // Offset: 0x2164404
    static void ovr_Voip_SetOutputSampleRate(::Oculus::Platform::VoipSampleRate rate);
    // static public System.Void ovr_Voip_Start(System.UInt64 userID)
    // Offset: 0x2164484
    static void ovr_Voip_Start(uint64_t userID);
    // static public System.Void ovr_Voip_Stop(System.UInt64 userID)
    // Offset: 0x2164504
    static void ovr_Voip_Stop(uint64_t userID);
    // static public System.UInt64 ovr_AbuseReport_LaunchAdvancedReportFlow(System.UInt64 content_id, System.IntPtr abuse_report_options)
    // Offset: 0x2164584
    static uint64_t ovr_AbuseReport_LaunchAdvancedReportFlow(uint64_t content_id, ::System::IntPtr abuse_report_options);
    // static public System.UInt64 ovr_Achievements_AddCount(System.String name, System.UInt64 count)
    // Offset: 0x215D0E0
    static uint64_t ovr_Achievements_AddCount(::StringW name, uint64_t count);
    // static private System.UInt64 ovr_Achievements_AddCount_Native(System.IntPtr name, System.UInt64 count)
    // Offset: 0x2164614
    static uint64_t ovr_Achievements_AddCount_Native(::System::IntPtr name, uint64_t count);
    // static public System.UInt64 ovr_Achievements_AddFields(System.String name, System.String fields)
    // Offset: 0x215D2B8
    static uint64_t ovr_Achievements_AddFields(::StringW name, ::StringW fields);
    // static private System.UInt64 ovr_Achievements_AddFields_Native(System.IntPtr name, System.IntPtr fields)
    // Offset: 0x21646A4
    static uint64_t ovr_Achievements_AddFields_Native(::System::IntPtr name, ::System::IntPtr fields);
    // static public System.UInt64 ovr_Achievements_GetAllDefinitions()
    // Offset: 0x215D494
    static uint64_t ovr_Achievements_GetAllDefinitions();
    // static public System.UInt64 ovr_Achievements_GetAllProgress()
    // Offset: 0x215D610
    static uint64_t ovr_Achievements_GetAllProgress();
    // static public System.UInt64 ovr_Achievements_GetDefinitionsByName(System.String[] names, System.Int32 count)
    // Offset: 0x215D7B0
    static uint64_t ovr_Achievements_GetDefinitionsByName(::ArrayW<::StringW> names, int count);
    // static public System.UInt64 ovr_Achievements_GetProgressByName(System.String[] names, System.Int32 count)
    // Offset: 0x215DA30
    static uint64_t ovr_Achievements_GetProgressByName(::ArrayW<::StringW> names, int count);
    // static public System.UInt64 ovr_Achievements_Unlock(System.String name)
    // Offset: 0x215DC9C
    static uint64_t ovr_Achievements_Unlock(::StringW name);
    // static private System.UInt64 ovr_Achievements_Unlock_Native(System.IntPtr name)
    // Offset: 0x2164734
    static uint64_t ovr_Achievements_Unlock_Native(::System::IntPtr name);
    // static public System.UInt64 ovr_Application_ExecuteCoordinatedLaunch(System.UInt64 appID, System.UInt64 roomID)
    // Offset: 0x21647B4
    static uint64_t ovr_Application_ExecuteCoordinatedLaunch(uint64_t appID, uint64_t roomID);
    // static public System.UInt64 ovr_Application_GetInstalledApplications()
    // Offset: 0x2164844
    static uint64_t ovr_Application_GetInstalledApplications();
    // static public System.UInt64 ovr_Application_GetVersion()
    // Offset: 0x215EA58
    static uint64_t ovr_Application_GetVersion();
    // static public System.UInt64 ovr_Application_LaunchOtherApp(System.UInt64 appID, System.IntPtr deeplink_options)
    // Offset: 0x215EC68
    static uint64_t ovr_Application_LaunchOtherApp(uint64_t appID, ::System::IntPtr deeplink_options);
    // static public System.UInt64 ovr_ApplicationLifecycle_GetRegisteredPIDs()
    // Offset: 0x21648B8
    static uint64_t ovr_ApplicationLifecycle_GetRegisteredPIDs();
    // static public System.UInt64 ovr_ApplicationLifecycle_GetSessionKey()
    // Offset: 0x216492C
    static uint64_t ovr_ApplicationLifecycle_GetSessionKey();
    // static public System.UInt64 ovr_ApplicationLifecycle_RegisterSessionKey(System.String sessionKey)
    // Offset: 0x21649A0
    static uint64_t ovr_ApplicationLifecycle_RegisterSessionKey(::StringW sessionKey);
    // static private System.UInt64 ovr_ApplicationLifecycle_RegisterSessionKey_Native(System.IntPtr sessionKey)
    // Offset: 0x2164A48
    static uint64_t ovr_ApplicationLifecycle_RegisterSessionKey_Native(::System::IntPtr sessionKey);
    // static public System.UInt64 ovr_AssetFile_Delete(System.UInt64 assetFileID)
    // Offset: 0x215F3E4
    static uint64_t ovr_AssetFile_Delete(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DeleteById(System.UInt64 assetFileID)
    // Offset: 0x215F57C
    static uint64_t ovr_AssetFile_DeleteById(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DeleteByName(System.String assetFileName)
    // Offset: 0x215F714
    static uint64_t ovr_AssetFile_DeleteByName(::StringW assetFileName);
    // static private System.UInt64 ovr_AssetFile_DeleteByName_Native(System.IntPtr assetFileName)
    // Offset: 0x2164AC8
    static uint64_t ovr_AssetFile_DeleteByName_Native(::System::IntPtr assetFileName);
    // static public System.UInt64 ovr_AssetFile_Download(System.UInt64 assetFileID)
    // Offset: 0x215F8D4
    static uint64_t ovr_AssetFile_Download(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DownloadById(System.UInt64 assetFileID)
    // Offset: 0x215FA6C
    static uint64_t ovr_AssetFile_DownloadById(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DownloadByName(System.String assetFileName)
    // Offset: 0x215FC04
    static uint64_t ovr_AssetFile_DownloadByName(::StringW assetFileName);
    // static private System.UInt64 ovr_AssetFile_DownloadByName_Native(System.IntPtr assetFileName)
    // Offset: 0x2164B48
    static uint64_t ovr_AssetFile_DownloadByName_Native(::System::IntPtr assetFileName);
    // static public System.UInt64 ovr_AssetFile_DownloadCancel(System.UInt64 assetFileID)
    // Offset: 0x215FDC4
    static uint64_t ovr_AssetFile_DownloadCancel(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DownloadCancelById(System.UInt64 assetFileID)
    // Offset: 0x215FF5C
    static uint64_t ovr_AssetFile_DownloadCancelById(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_DownloadCancelByName(System.String assetFileName)
    // Offset: 0x21600F4
    static uint64_t ovr_AssetFile_DownloadCancelByName(::StringW assetFileName);
    // static private System.UInt64 ovr_AssetFile_DownloadCancelByName_Native(System.IntPtr assetFileName)
    // Offset: 0x2164BC8
    static uint64_t ovr_AssetFile_DownloadCancelByName_Native(::System::IntPtr assetFileName);
    // static public System.UInt64 ovr_AssetFile_GetList()
    // Offset: 0x21602A4
    static uint64_t ovr_AssetFile_GetList();
    // static public System.UInt64 ovr_AssetFile_Status(System.UInt64 assetFileID)
    // Offset: 0x2160430
    static uint64_t ovr_AssetFile_Status(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_StatusById(System.UInt64 assetFileID)
    // Offset: 0x21605C8
    static uint64_t ovr_AssetFile_StatusById(uint64_t assetFileID);
    // static public System.UInt64 ovr_AssetFile_StatusByName(System.String assetFileName)
    // Offset: 0x2160760
    static uint64_t ovr_AssetFile_StatusByName(::StringW assetFileName);
    // static private System.UInt64 ovr_AssetFile_StatusByName_Native(System.IntPtr assetFileName)
    // Offset: 0x2164C48
    static uint64_t ovr_AssetFile_StatusByName_Native(::System::IntPtr assetFileName);
    // static public System.UInt64 ovr_Avatar_UpdateMetaData(System.String avatarMetaData, System.String imageFilePath)
    // Offset: 0x2164CC8
    static uint64_t ovr_Avatar_UpdateMetaData(::StringW avatarMetaData, ::StringW imageFilePath);
    // static private System.UInt64 ovr_Avatar_UpdateMetaData_Native(System.IntPtr avatarMetaData, System.IntPtr imageFilePath)
    // Offset: 0x2164D9C
    static uint64_t ovr_Avatar_UpdateMetaData_Native(::System::IntPtr avatarMetaData, ::System::IntPtr imageFilePath);
    // static public System.UInt64 ovr_Cal_FinalizeApplication(System.UInt64 groupingObject, System.UInt64[] userIDs, System.Int32 numUserIDs, System.UInt64 finalized_application_ID)
    // Offset: 0x2164E2C
    static uint64_t ovr_Cal_FinalizeApplication(uint64_t groupingObject, ::ArrayW<uint64_t> userIDs, int numUserIDs, uint64_t finalized_application_ID);
    // static public System.UInt64 ovr_Cal_GetSuggestedApplications(System.UInt64 groupingObject, System.UInt64[] userIDs, System.Int32 numUserIDs)
    // Offset: 0x2164EDC
    static uint64_t ovr_Cal_GetSuggestedApplications(uint64_t groupingObject, ::ArrayW<uint64_t> userIDs, int numUserIDs);
    // static public System.UInt64 ovr_Cal_ProposeApplication(System.UInt64 groupingObject, System.UInt64[] userIDs, System.Int32 numUserIDs, System.UInt64 proposed_application_ID)
    // Offset: 0x2164F7C
    static uint64_t ovr_Cal_ProposeApplication(uint64_t groupingObject, ::ArrayW<uint64_t> userIDs, int numUserIDs, uint64_t proposed_application_ID);
    // static public System.UInt64 ovr_Challenges_Create(System.String leaderboardName, System.IntPtr challengeOptions)
    // Offset: 0x216502C
    static uint64_t ovr_Challenges_Create(::StringW leaderboardName, ::System::IntPtr challengeOptions);
    // static private System.UInt64 ovr_Challenges_Create_Native(System.IntPtr leaderboardName, System.IntPtr challengeOptions)
    // Offset: 0x21650E4
    static uint64_t ovr_Challenges_Create_Native(::System::IntPtr leaderboardName, ::System::IntPtr challengeOptions);
    // static public System.UInt64 ovr_Challenges_DeclineInvite(System.UInt64 challengeID)
    // Offset: 0x2165174
    static uint64_t ovr_Challenges_DeclineInvite(uint64_t challengeID);
    // static public System.UInt64 ovr_Challenges_Delete(System.UInt64 challengeID)
    // Offset: 0x21651F4
    static uint64_t ovr_Challenges_Delete(uint64_t challengeID);
    // static public System.UInt64 ovr_Challenges_Get(System.UInt64 challengeID)
    // Offset: 0x2165274
    static uint64_t ovr_Challenges_Get(uint64_t challengeID);
    // static public System.UInt64 ovr_Challenges_GetEntries(System.UInt64 challengeID, System.Int32 limit, Oculus.Platform.LeaderboardFilterType filter, Oculus.Platform.LeaderboardStartAt startAt)
    // Offset: 0x21652F4
    static uint64_t ovr_Challenges_GetEntries(uint64_t challengeID, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt);
    // static public System.UInt64 ovr_Challenges_GetEntriesAfterRank(System.UInt64 challengeID, System.Int32 limit, System.UInt64 afterRank)
    // Offset: 0x216539C
    static uint64_t ovr_Challenges_GetEntriesAfterRank(uint64_t challengeID, int limit, uint64_t afterRank);
    // static public System.UInt64 ovr_Challenges_GetEntriesByIds(System.UInt64 challengeID, System.Int32 limit, Oculus.Platform.LeaderboardStartAt startAt, System.UInt64[] userIDs, System.UInt32 userIDLength)
    // Offset: 0x2165434
    static uint64_t ovr_Challenges_GetEntriesByIds(uint64_t challengeID, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength);
    // static public System.UInt64 ovr_Challenges_GetList(System.IntPtr challengeOptions, System.Int32 limit)
    // Offset: 0x21654EC
    static uint64_t ovr_Challenges_GetList(::System::IntPtr challengeOptions, int limit);
    // static public System.UInt64 ovr_Challenges_GetNextChallenges(System.IntPtr handle)
    // Offset: 0x216557C
    static uint64_t ovr_Challenges_GetNextChallenges(::System::IntPtr handle);
    // static public System.UInt64 ovr_Challenges_GetNextEntries(System.IntPtr handle)
    // Offset: 0x21655FC
    static uint64_t ovr_Challenges_GetNextEntries(::System::IntPtr handle);
    // static public System.UInt64 ovr_Challenges_GetPreviousChallenges(System.IntPtr handle)
    // Offset: 0x216567C
    static uint64_t ovr_Challenges_GetPreviousChallenges(::System::IntPtr handle);
    // static public System.UInt64 ovr_Challenges_GetPreviousEntries(System.IntPtr handle)
    // Offset: 0x21656FC
    static uint64_t ovr_Challenges_GetPreviousEntries(::System::IntPtr handle);
    // static public System.UInt64 ovr_Challenges_Join(System.UInt64 challengeID)
    // Offset: 0x216577C
    static uint64_t ovr_Challenges_Join(uint64_t challengeID);
    // static public System.UInt64 ovr_Challenges_Leave(System.UInt64 challengeID)
    // Offset: 0x21657FC
    static uint64_t ovr_Challenges_Leave(uint64_t challengeID);
    // static public System.UInt64 ovr_Challenges_UpdateInfo(System.UInt64 challengeID, System.IntPtr challengeOptions)
    // Offset: 0x216587C
    static uint64_t ovr_Challenges_UpdateInfo(uint64_t challengeID, ::System::IntPtr challengeOptions);
    // static public System.UInt64 ovr_CloudStorage_Delete(System.String bucket, System.String key)
    // Offset: 0x216590C
    static uint64_t ovr_CloudStorage_Delete(::StringW bucket, ::StringW key);
    // static private System.UInt64 ovr_CloudStorage_Delete_Native(System.IntPtr bucket, System.IntPtr key)
    // Offset: 0x21659E0
    static uint64_t ovr_CloudStorage_Delete_Native(::System::IntPtr bucket, ::System::IntPtr key);
    // static public System.UInt64 ovr_CloudStorage_Load(System.String bucket, System.String key)
    // Offset: 0x2165A70
    static uint64_t ovr_CloudStorage_Load(::StringW bucket, ::StringW key);
    // static private System.UInt64 ovr_CloudStorage_Load_Native(System.IntPtr bucket, System.IntPtr key)
    // Offset: 0x2165B44
    static uint64_t ovr_CloudStorage_Load_Native(::System::IntPtr bucket, ::System::IntPtr key);
    // static public System.UInt64 ovr_CloudStorage_LoadBucketMetadata(System.String bucket)
    // Offset: 0x2165BD4
    static uint64_t ovr_CloudStorage_LoadBucketMetadata(::StringW bucket);
    // static private System.UInt64 ovr_CloudStorage_LoadBucketMetadata_Native(System.IntPtr bucket)
    // Offset: 0x2165C7C
    static uint64_t ovr_CloudStorage_LoadBucketMetadata_Native(::System::IntPtr bucket);
    // static public System.UInt64 ovr_CloudStorage_LoadConflictMetadata(System.String bucket, System.String key)
    // Offset: 0x2165CFC
    static uint64_t ovr_CloudStorage_LoadConflictMetadata(::StringW bucket, ::StringW key);
    // static private System.UInt64 ovr_CloudStorage_LoadConflictMetadata_Native(System.IntPtr bucket, System.IntPtr key)
    // Offset: 0x2165DD0
    static uint64_t ovr_CloudStorage_LoadConflictMetadata_Native(::System::IntPtr bucket, ::System::IntPtr key);
    // static public System.UInt64 ovr_CloudStorage_LoadHandle(System.String handle)
    // Offset: 0x2165E60
    static uint64_t ovr_CloudStorage_LoadHandle(::StringW handle);
    // static private System.UInt64 ovr_CloudStorage_LoadHandle_Native(System.IntPtr handle)
    // Offset: 0x2165F08
    static uint64_t ovr_CloudStorage_LoadHandle_Native(::System::IntPtr handle);
    // static public System.UInt64 ovr_CloudStorage_LoadMetadata(System.String bucket, System.String key)
    // Offset: 0x2165F88
    static uint64_t ovr_CloudStorage_LoadMetadata(::StringW bucket, ::StringW key);
    // static private System.UInt64 ovr_CloudStorage_LoadMetadata_Native(System.IntPtr bucket, System.IntPtr key)
    // Offset: 0x216605C
    static uint64_t ovr_CloudStorage_LoadMetadata_Native(::System::IntPtr bucket, ::System::IntPtr key);
    // static public System.UInt64 ovr_CloudStorage_ResolveKeepLocal(System.String bucket, System.String key, System.String remoteHandle)
    // Offset: 0x21660EC
    static uint64_t ovr_CloudStorage_ResolveKeepLocal(::StringW bucket, ::StringW key, ::StringW remoteHandle);
    // static private System.UInt64 ovr_CloudStorage_ResolveKeepLocal_Native(System.IntPtr bucket, System.IntPtr key, System.IntPtr remoteHandle)
    // Offset: 0x21661E0
    static uint64_t ovr_CloudStorage_ResolveKeepLocal_Native(::System::IntPtr bucket, ::System::IntPtr key, ::System::IntPtr remoteHandle);
    // static public System.UInt64 ovr_CloudStorage_ResolveKeepRemote(System.String bucket, System.String key, System.String remoteHandle)
    // Offset: 0x2166278
    static uint64_t ovr_CloudStorage_ResolveKeepRemote(::StringW bucket, ::StringW key, ::StringW remoteHandle);
    // static private System.UInt64 ovr_CloudStorage_ResolveKeepRemote_Native(System.IntPtr bucket, System.IntPtr key, System.IntPtr remoteHandle)
    // Offset: 0x216636C
    static uint64_t ovr_CloudStorage_ResolveKeepRemote_Native(::System::IntPtr bucket, ::System::IntPtr key, ::System::IntPtr remoteHandle);
    // static public System.UInt64 ovr_CloudStorage_Save(System.String bucket, System.String key, System.Byte[] data, System.UInt32 dataSize, System.Int64 counter, System.String extraData)
    // Offset: 0x2166404
    static uint64_t ovr_CloudStorage_Save(::StringW bucket, ::StringW key, ::ArrayW<uint8_t> data, uint dataSize, int64_t counter, ::StringW extraData);
    // static private System.UInt64 ovr_CloudStorage_Save_Native(System.IntPtr bucket, System.IntPtr key, System.Byte[] data, System.UInt32 dataSize, System.Int64 counter, System.IntPtr extraData)
    // Offset: 0x2166520
    static uint64_t ovr_CloudStorage_Save_Native(::System::IntPtr bucket, ::System::IntPtr key, ::ArrayW<uint8_t> data, uint dataSize, int64_t counter, ::System::IntPtr extraData);
    // static public System.UInt64 ovr_CloudStorage2_GetUserDirectoryPath()
    // Offset: 0x21665E8
    static uint64_t ovr_CloudStorage2_GetUserDirectoryPath();
    // static public System.UInt64 ovr_Colocation_GetCurrentMapUuid()
    // Offset: 0x216665C
    static uint64_t ovr_Colocation_GetCurrentMapUuid();
    // static public System.UInt64 ovr_Colocation_RequestMap(System.String uuid)
    // Offset: 0x21666D0
    static uint64_t ovr_Colocation_RequestMap(::StringW uuid);
    // static private System.UInt64 ovr_Colocation_RequestMap_Native(System.IntPtr uuid)
    // Offset: 0x2166778
    static uint64_t ovr_Colocation_RequestMap_Native(::System::IntPtr uuid);
    // static public System.UInt64 ovr_Colocation_ShareMap(System.String uuid)
    // Offset: 0x21667F8
    static uint64_t ovr_Colocation_ShareMap(::StringW uuid);
    // static private System.UInt64 ovr_Colocation_ShareMap_Native(System.IntPtr uuid)
    // Offset: 0x21668A0
    static uint64_t ovr_Colocation_ShareMap_Native(::System::IntPtr uuid);
    // static public System.UInt64 ovr_Entitlement_GetIsViewerEntitled()
    // Offset: 0x2166920
    static uint64_t ovr_Entitlement_GetIsViewerEntitled();
    // static public System.UInt64 ovr_GraphAPI_Get(System.String url)
    // Offset: 0x2166994
    static uint64_t ovr_GraphAPI_Get(::StringW url);
    // static private System.UInt64 ovr_GraphAPI_Get_Native(System.IntPtr url)
    // Offset: 0x2166A3C
    static uint64_t ovr_GraphAPI_Get_Native(::System::IntPtr url);
    // static public System.UInt64 ovr_GraphAPI_Post(System.String url)
    // Offset: 0x2166ABC
    static uint64_t ovr_GraphAPI_Post(::StringW url);
    // static private System.UInt64 ovr_GraphAPI_Post_Native(System.IntPtr url)
    // Offset: 0x2166B64
    static uint64_t ovr_GraphAPI_Post_Native(::System::IntPtr url);
    // static public System.UInt64 ovr_GroupPresence_Clear()
    // Offset: 0x2166BE0
    static uint64_t ovr_GroupPresence_Clear();
    // static public System.UInt64 ovr_GroupPresence_LaunchInvitePanel(System.IntPtr options)
    // Offset: 0x2166C54
    static uint64_t ovr_GroupPresence_LaunchInvitePanel(::System::IntPtr options);
    // static public System.UInt64 ovr_GroupPresence_LaunchRosterPanel(System.IntPtr options)
    // Offset: 0x2166CD4
    static uint64_t ovr_GroupPresence_LaunchRosterPanel(::System::IntPtr options);
    // static public System.UInt64 ovr_GroupPresence_Set(System.IntPtr groupPresenceOptions)
    // Offset: 0x2166D54
    static uint64_t ovr_GroupPresence_Set(::System::IntPtr groupPresenceOptions);
    // static public System.UInt64 ovr_GroupPresence_SetDestination(System.String api_name)
    // Offset: 0x2166DD4
    static uint64_t ovr_GroupPresence_SetDestination(::StringW api_name);
    // static private System.UInt64 ovr_GroupPresence_SetDestination_Native(System.IntPtr api_name)
    // Offset: 0x2166E7C
    static uint64_t ovr_GroupPresence_SetDestination_Native(::System::IntPtr api_name);
    // static public System.UInt64 ovr_GroupPresence_SetIsJoinable(System.Boolean is_joinable)
    // Offset: 0x2166EFC
    static uint64_t ovr_GroupPresence_SetIsJoinable(bool is_joinable);
    // static public System.UInt64 ovr_GroupPresence_SetLobbySession(System.String id)
    // Offset: 0x2166F7C
    static uint64_t ovr_GroupPresence_SetLobbySession(::StringW id);
    // static private System.UInt64 ovr_GroupPresence_SetLobbySession_Native(System.IntPtr id)
    // Offset: 0x2167024
    static uint64_t ovr_GroupPresence_SetLobbySession_Native(::System::IntPtr id);
    // static public System.UInt64 ovr_GroupPresence_SetMatchSession(System.String id)
    // Offset: 0x21670A4
    static uint64_t ovr_GroupPresence_SetMatchSession(::StringW id);
    // static private System.UInt64 ovr_GroupPresence_SetMatchSession_Native(System.IntPtr id)
    // Offset: 0x216714C
    static uint64_t ovr_GroupPresence_SetMatchSession_Native(::System::IntPtr id);
    // static public System.UInt64 ovr_HTTP_Get(System.String url)
    // Offset: 0x21671CC
    static uint64_t ovr_HTTP_Get(::StringW url);
    // static private System.UInt64 ovr_HTTP_Get_Native(System.IntPtr url)
    // Offset: 0x2167274
    static uint64_t ovr_HTTP_Get_Native(::System::IntPtr url);
    // static public System.UInt64 ovr_HTTP_GetToFile(System.String url, System.String diskFile)
    // Offset: 0x21672F4
    static uint64_t ovr_HTTP_GetToFile(::StringW url, ::StringW diskFile);
    // static private System.UInt64 ovr_HTTP_GetToFile_Native(System.IntPtr url, System.IntPtr diskFile)
    // Offset: 0x21673C8
    static uint64_t ovr_HTTP_GetToFile_Native(::System::IntPtr url, ::System::IntPtr diskFile);
    // static public System.UInt64 ovr_HTTP_MultiPartPost(System.String url, System.String filepath_param_name, System.String filepath, System.String access_token, Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair[] post_params)
    // Offset: 0x2167458
    static uint64_t ovr_HTTP_MultiPartPost(::StringW url, ::StringW filepath_param_name, ::StringW filepath, ::StringW access_token, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> post_params);
    // static private System.UInt64 ovr_HTTP_MultiPartPost_Native(System.IntPtr url, System.IntPtr filepath_param_name, System.IntPtr filepath, System.IntPtr access_token, Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair[] post_params, System.UIntPtr numItems)
    // Offset: 0x21675B4
    static uint64_t ovr_HTTP_MultiPartPost_Native(::System::IntPtr url, ::System::IntPtr filepath_param_name, ::System::IntPtr filepath, ::System::IntPtr access_token, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> post_params, ::System::UIntPtr numItems);
    // static public System.UInt64 ovr_HTTP_Post(System.String url)
    // Offset: 0x2167740
    static uint64_t ovr_HTTP_Post(::StringW url);
    // static private System.UInt64 ovr_HTTP_Post_Native(System.IntPtr url)
    // Offset: 0x21677E8
    static uint64_t ovr_HTTP_Post_Native(::System::IntPtr url);
    // static public System.UInt64 ovr_IAP_ConsumePurchase(System.String sku)
    // Offset: 0x2167868
    static uint64_t ovr_IAP_ConsumePurchase(::StringW sku);
    // static private System.UInt64 ovr_IAP_ConsumePurchase_Native(System.IntPtr sku)
    // Offset: 0x2167910
    static uint64_t ovr_IAP_ConsumePurchase_Native(::System::IntPtr sku);
    // static public System.UInt64 ovr_IAP_GetProductsBySKU(System.String[] skus, System.Int32 count)
    // Offset: 0x2167990
    static uint64_t ovr_IAP_GetProductsBySKU(::ArrayW<::StringW> skus, int count);
    // static public System.UInt64 ovr_IAP_GetViewerPurchases()
    // Offset: 0x2167AE4
    static uint64_t ovr_IAP_GetViewerPurchases();
    // static public System.UInt64 ovr_IAP_GetViewerPurchasesDurableCache()
    // Offset: 0x2167B58
    static uint64_t ovr_IAP_GetViewerPurchasesDurableCache();
    // static public System.UInt64 ovr_IAP_LaunchCheckoutFlow(System.String sku)
    // Offset: 0x2167BCC
    static uint64_t ovr_IAP_LaunchCheckoutFlow(::StringW sku);
    // static private System.UInt64 ovr_IAP_LaunchCheckoutFlow_Native(System.IntPtr sku)
    // Offset: 0x2167C74
    static uint64_t ovr_IAP_LaunchCheckoutFlow_Native(::System::IntPtr sku);
    // static public System.UInt64 ovr_LanguagePack_GetCurrent()
    // Offset: 0x2167CF4
    static uint64_t ovr_LanguagePack_GetCurrent();
    // static public System.UInt64 ovr_LanguagePack_SetCurrent(System.String tag)
    // Offset: 0x2167D68
    static uint64_t ovr_LanguagePack_SetCurrent(::StringW tag);
    // static private System.UInt64 ovr_LanguagePack_SetCurrent_Native(System.IntPtr tag)
    // Offset: 0x2167E10
    static uint64_t ovr_LanguagePack_SetCurrent_Native(::System::IntPtr tag);
    // static public System.UInt64 ovr_Leaderboard_Get(System.String leaderboardName)
    // Offset: 0x2167E90
    static uint64_t ovr_Leaderboard_Get(::StringW leaderboardName);
    // static private System.UInt64 ovr_Leaderboard_Get_Native(System.IntPtr leaderboardName)
    // Offset: 0x2167F38
    static uint64_t ovr_Leaderboard_Get_Native(::System::IntPtr leaderboardName);
    // static public System.UInt64 ovr_Leaderboard_GetEntries(System.String leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardFilterType filter, Oculus.Platform.LeaderboardStartAt startAt)
    // Offset: 0x2167FB8
    static uint64_t ovr_Leaderboard_GetEntries(::StringW leaderboardName, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt);
    // static private System.UInt64 ovr_Leaderboard_GetEntries_Native(System.IntPtr leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardFilterType filter, Oculus.Platform.LeaderboardStartAt startAt)
    // Offset: 0x2168088
    static uint64_t ovr_Leaderboard_GetEntries_Native(::System::IntPtr leaderboardName, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt);
    // static public System.UInt64 ovr_Leaderboard_GetEntriesAfterRank(System.String leaderboardName, System.Int32 limit, System.UInt64 afterRank)
    // Offset: 0x2168130
    static uint64_t ovr_Leaderboard_GetEntriesAfterRank(::StringW leaderboardName, int limit, uint64_t afterRank);
    // static private System.UInt64 ovr_Leaderboard_GetEntriesAfterRank_Native(System.IntPtr leaderboardName, System.Int32 limit, System.UInt64 afterRank)
    // Offset: 0x21681F0
    static uint64_t ovr_Leaderboard_GetEntriesAfterRank_Native(::System::IntPtr leaderboardName, int limit, uint64_t afterRank);
    // static public System.UInt64 ovr_Leaderboard_GetEntriesByIds(System.String leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardStartAt startAt, System.UInt64[] userIDs, System.UInt32 userIDLength)
    // Offset: 0x2168288
    static uint64_t ovr_Leaderboard_GetEntriesByIds(::StringW leaderboardName, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength);
    // static private System.UInt64 ovr_Leaderboard_GetEntriesByIds_Native(System.IntPtr leaderboardName, System.Int32 limit, Oculus.Platform.LeaderboardStartAt startAt, System.UInt64[] userIDs, System.UInt32 userIDLength)
    // Offset: 0x2168360
    static uint64_t ovr_Leaderboard_GetEntriesByIds_Native(::System::IntPtr leaderboardName, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength);
    // static public System.UInt64 ovr_Leaderboard_GetNextEntries(System.IntPtr handle)
    // Offset: 0x2168418
    static uint64_t ovr_Leaderboard_GetNextEntries(::System::IntPtr handle);
    // static public System.UInt64 ovr_Leaderboard_GetPreviousEntries(System.IntPtr handle)
    // Offset: 0x2168498
    static uint64_t ovr_Leaderboard_GetPreviousEntries(::System::IntPtr handle);
    // static public System.UInt64 ovr_Leaderboard_WriteEntry(System.String leaderboardName, System.Int64 score, System.Byte[] extraData, System.UInt32 extraDataLength, System.Boolean forceUpdate)
    // Offset: 0x2168518
    static uint64_t ovr_Leaderboard_WriteEntry(::StringW leaderboardName, int64_t score, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate);
    // static private System.UInt64 ovr_Leaderboard_WriteEntry_Native(System.IntPtr leaderboardName, System.Int64 score, System.Byte[] extraData, System.UInt32 extraDataLength, System.Boolean forceUpdate)
    // Offset: 0x21685F0
    static uint64_t ovr_Leaderboard_WriteEntry_Native(::System::IntPtr leaderboardName, int64_t score, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate);
    // static public System.UInt64 ovr_Leaderboard_WriteEntryWithSupplementaryMetric(System.String leaderboardName, System.Int64 score, System.Int64 supplementaryMetric, System.Byte[] extraData, System.UInt32 extraDataLength, System.Boolean forceUpdate)
    // Offset: 0x21686A8
    static uint64_t ovr_Leaderboard_WriteEntryWithSupplementaryMetric(::StringW leaderboardName, int64_t score, int64_t supplementaryMetric, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate);
    // static private System.UInt64 ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native(System.IntPtr leaderboardName, System.Int64 score, System.Int64 supplementaryMetric, System.Byte[] extraData, System.UInt32 extraDataLength, System.Boolean forceUpdate)
    // Offset: 0x2168790
    static uint64_t ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native(::System::IntPtr leaderboardName, int64_t score, int64_t supplementaryMetric, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate);
    // static public System.UInt64 ovr_Livestreaming_GetStatus()
    // Offset: 0x2168858
    static uint64_t ovr_Livestreaming_GetStatus();
    // static public System.UInt64 ovr_Livestreaming_IsAllowedForApplication(System.String packageName)
    // Offset: 0x21688CC
    static uint64_t ovr_Livestreaming_IsAllowedForApplication(::StringW packageName);
    // static private System.UInt64 ovr_Livestreaming_IsAllowedForApplication_Native(System.IntPtr packageName)
    // Offset: 0x2168974
    static uint64_t ovr_Livestreaming_IsAllowedForApplication_Native(::System::IntPtr packageName);
    // static public System.UInt64 ovr_Livestreaming_LaunchLivestreamingFlow()
    // Offset: 0x21689F4
    static uint64_t ovr_Livestreaming_LaunchLivestreamingFlow();
    // static public System.UInt64 ovr_Livestreaming_PauseStream()
    // Offset: 0x2168A68
    static uint64_t ovr_Livestreaming_PauseStream();
    // static public System.UInt64 ovr_Livestreaming_ResumeStream()
    // Offset: 0x2168ADC
    static uint64_t ovr_Livestreaming_ResumeStream();
    // static public System.UInt64 ovr_Livestreaming_StartPartyStream()
    // Offset: 0x2168B50
    static uint64_t ovr_Livestreaming_StartPartyStream();
    // static public System.UInt64 ovr_Livestreaming_StartStream(Oculus.Platform.LivestreamingAudience audience, Oculus.Platform.LivestreamingMicrophoneStatus micStatus)
    // Offset: 0x2168BC4
    static uint64_t ovr_Livestreaming_StartStream(::Oculus::Platform::LivestreamingAudience audience, ::Oculus::Platform::LivestreamingMicrophoneStatus micStatus);
    // static public System.UInt64 ovr_Livestreaming_StopPartyStream()
    // Offset: 0x2168C54
    static uint64_t ovr_Livestreaming_StopPartyStream();
    // static public System.UInt64 ovr_Livestreaming_StopStream()
    // Offset: 0x2168CC8
    static uint64_t ovr_Livestreaming_StopStream();
    // static public System.UInt64 ovr_Livestreaming_UpdateCommentsOverlayVisibility(System.Boolean isVisible)
    // Offset: 0x2168D3C
    static uint64_t ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);
    // static public System.UInt64 ovr_Livestreaming_UpdateMicStatus(Oculus.Platform.LivestreamingMicrophoneStatus micStatus)
    // Offset: 0x2168DBC
    static uint64_t ovr_Livestreaming_UpdateMicStatus(::Oculus::Platform::LivestreamingMicrophoneStatus micStatus);
    // static public System.UInt64 ovr_Matchmaking_Browse(System.String pool, System.IntPtr customQueryData)
    // Offset: 0x2168E3C
    static uint64_t ovr_Matchmaking_Browse(::StringW pool, ::System::IntPtr customQueryData);
    // static private System.UInt64 ovr_Matchmaking_Browse_Native(System.IntPtr pool, System.IntPtr customQueryData)
    // Offset: 0x2168EF4
    static uint64_t ovr_Matchmaking_Browse_Native(::System::IntPtr pool, ::System::IntPtr customQueryData);
    // static public System.UInt64 ovr_Matchmaking_Browse2(System.String pool, System.IntPtr matchmakingOptions)
    // Offset: 0x2168F84
    static uint64_t ovr_Matchmaking_Browse2(::StringW pool, ::System::IntPtr matchmakingOptions);
    // static private System.UInt64 ovr_Matchmaking_Browse2_Native(System.IntPtr pool, System.IntPtr matchmakingOptions)
    // Offset: 0x216903C
    static uint64_t ovr_Matchmaking_Browse2_Native(::System::IntPtr pool, ::System::IntPtr matchmakingOptions);
    // static public System.UInt64 ovr_Matchmaking_Cancel(System.String pool, System.String requestHash)
    // Offset: 0x21690CC
    static uint64_t ovr_Matchmaking_Cancel(::StringW pool, ::StringW requestHash);
    // static private System.UInt64 ovr_Matchmaking_Cancel_Native(System.IntPtr pool, System.IntPtr requestHash)
    // Offset: 0x21691A0
    static uint64_t ovr_Matchmaking_Cancel_Native(::System::IntPtr pool, ::System::IntPtr requestHash);
    // static public System.UInt64 ovr_Matchmaking_Cancel2()
    // Offset: 0x2169230
    static uint64_t ovr_Matchmaking_Cancel2();
    // static public System.UInt64 ovr_Matchmaking_CreateAndEnqueueRoom(System.String pool, System.UInt32 maxUsers, System.Boolean subscribeToUpdates, System.IntPtr customQueryData)
    // Offset: 0x21692A4
    static uint64_t ovr_Matchmaking_CreateAndEnqueueRoom(::StringW pool, uint maxUsers, bool subscribeToUpdates, ::System::IntPtr customQueryData);
    // static private System.UInt64 ovr_Matchmaking_CreateAndEnqueueRoom_Native(System.IntPtr pool, System.UInt32 maxUsers, System.Boolean subscribeToUpdates, System.IntPtr customQueryData)
    // Offset: 0x2169374
    static uint64_t ovr_Matchmaking_CreateAndEnqueueRoom_Native(::System::IntPtr pool, uint maxUsers, bool subscribeToUpdates, ::System::IntPtr customQueryData);
    // static public System.UInt64 ovr_Matchmaking_CreateAndEnqueueRoom2(System.String pool, System.IntPtr matchmakingOptions)
    // Offset: 0x216941C
    static uint64_t ovr_Matchmaking_CreateAndEnqueueRoom2(::StringW pool, ::System::IntPtr matchmakingOptions);
    // static private System.UInt64 ovr_Matchmaking_CreateAndEnqueueRoom2_Native(System.IntPtr pool, System.IntPtr matchmakingOptions)
    // Offset: 0x21694D4
    static uint64_t ovr_Matchmaking_CreateAndEnqueueRoom2_Native(::System::IntPtr pool, ::System::IntPtr matchmakingOptions);
    // static public System.UInt64 ovr_Matchmaking_CreateRoom(System.String pool, System.UInt32 maxUsers, System.Boolean subscribeToUpdates)
    // Offset: 0x2169564
    static uint64_t ovr_Matchmaking_CreateRoom(::StringW pool, uint maxUsers, bool subscribeToUpdates);
    // static private System.UInt64 ovr_Matchmaking_CreateRoom_Native(System.IntPtr pool, System.UInt32 maxUsers, System.Boolean subscribeToUpdates)
    // Offset: 0x2169624
    static uint64_t ovr_Matchmaking_CreateRoom_Native(::System::IntPtr pool, uint maxUsers, bool subscribeToUpdates);
    // static public System.UInt64 ovr_Matchmaking_CreateRoom2(System.String pool, System.IntPtr matchmakingOptions)
    // Offset: 0x21696BC
    static uint64_t ovr_Matchmaking_CreateRoom2(::StringW pool, ::System::IntPtr matchmakingOptions);
    // static private System.UInt64 ovr_Matchmaking_CreateRoom2_Native(System.IntPtr pool, System.IntPtr matchmakingOptions)
    // Offset: 0x2169774
    static uint64_t ovr_Matchmaking_CreateRoom2_Native(::System::IntPtr pool, ::System::IntPtr matchmakingOptions);
    // static public System.UInt64 ovr_Matchmaking_Enqueue(System.String pool, System.IntPtr customQueryData)
    // Offset: 0x2169804
    static uint64_t ovr_Matchmaking_Enqueue(::StringW pool, ::System::IntPtr customQueryData);
    // static private System.UInt64 ovr_Matchmaking_Enqueue_Native(System.IntPtr pool, System.IntPtr customQueryData)
    // Offset: 0x21698BC
    static uint64_t ovr_Matchmaking_Enqueue_Native(::System::IntPtr pool, ::System::IntPtr customQueryData);
    // static public System.UInt64 ovr_Matchmaking_Enqueue2(System.String pool, System.IntPtr matchmakingOptions)
    // Offset: 0x216994C
    static uint64_t ovr_Matchmaking_Enqueue2(::StringW pool, ::System::IntPtr matchmakingOptions);
    // static private System.UInt64 ovr_Matchmaking_Enqueue2_Native(System.IntPtr pool, System.IntPtr matchmakingOptions)
    // Offset: 0x2169A04
    static uint64_t ovr_Matchmaking_Enqueue2_Native(::System::IntPtr pool, ::System::IntPtr matchmakingOptions);
    // static public System.UInt64 ovr_Matchmaking_EnqueueRoom(System.UInt64 roomID, System.IntPtr customQueryData)
    // Offset: 0x2169A94
    static uint64_t ovr_Matchmaking_EnqueueRoom(uint64_t roomID, ::System::IntPtr customQueryData);
    // static public System.UInt64 ovr_Matchmaking_EnqueueRoom2(System.UInt64 roomID, System.IntPtr matchmakingOptions)
    // Offset: 0x2169B24
    static uint64_t ovr_Matchmaking_EnqueueRoom2(uint64_t roomID, ::System::IntPtr matchmakingOptions);
    // static public System.UInt64 ovr_Matchmaking_GetAdminSnapshot()
    // Offset: 0x2169BB4
    static uint64_t ovr_Matchmaking_GetAdminSnapshot();
    // static public System.UInt64 ovr_Matchmaking_GetStats(System.String pool, System.UInt32 maxLevel, Oculus.Platform.MatchmakingStatApproach approach)
    // Offset: 0x2169C28
    static uint64_t ovr_Matchmaking_GetStats(::StringW pool, uint maxLevel, ::Oculus::Platform::MatchmakingStatApproach approach);
    // static private System.UInt64 ovr_Matchmaking_GetStats_Native(System.IntPtr pool, System.UInt32 maxLevel, Oculus.Platform.MatchmakingStatApproach approach)
    // Offset: 0x2169CE8
    static uint64_t ovr_Matchmaking_GetStats_Native(::System::IntPtr pool, uint maxLevel, ::Oculus::Platform::MatchmakingStatApproach approach);
    // static public System.UInt64 ovr_Matchmaking_JoinRoom(System.UInt64 roomID, System.Boolean subscribeToUpdates)
    // Offset: 0x2169D80
    static uint64_t ovr_Matchmaking_JoinRoom(uint64_t roomID, bool subscribeToUpdates);
    // static public System.UInt64 ovr_Matchmaking_ReportResultInsecure(System.UInt64 roomID, Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair[] data)
    // Offset: 0x2169E10
    static uint64_t ovr_Matchmaking_ReportResultInsecure(uint64_t roomID, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> data);
    // static private System.UInt64 ovr_Matchmaking_ReportResultInsecure_Native(System.UInt64 roomID, Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair[] data, System.UIntPtr numItems)
    // Offset: 0x2169EC4
    static uint64_t ovr_Matchmaking_ReportResultInsecure_Native(uint64_t roomID, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> data, ::System::UIntPtr numItems);
    // static public System.UInt64 ovr_Matchmaking_StartMatch(System.UInt64 roomID)
    // Offset: 0x216A020
    static uint64_t ovr_Matchmaking_StartMatch(uint64_t roomID);
    // static public System.UInt64 ovr_Media_ShareToFacebook(System.String postTextSuggestion, System.String filePath, Oculus.Platform.MediaContentType contentType)
    // Offset: 0x216A0A0
    static uint64_t ovr_Media_ShareToFacebook(::StringW postTextSuggestion, ::StringW filePath, ::Oculus::Platform::MediaContentType contentType);
    // static private System.UInt64 ovr_Media_ShareToFacebook_Native(System.IntPtr postTextSuggestion, System.IntPtr filePath, Oculus.Platform.MediaContentType contentType)
    // Offset: 0x216A17C
    static uint64_t ovr_Media_ShareToFacebook_Native(::System::IntPtr postTextSuggestion, ::System::IntPtr filePath, ::Oculus::Platform::MediaContentType contentType);
    // static public System.UInt64 ovr_NetSync_Connect(System.IntPtr connect_options)
    // Offset: 0x216A214
    static uint64_t ovr_NetSync_Connect(::System::IntPtr connect_options);
    // static public System.UInt64 ovr_NetSync_Disconnect(System.Int64 connection_id)
    // Offset: 0x216A294
    static uint64_t ovr_NetSync_Disconnect(int64_t connection_id);
    // static public System.UInt64 ovr_NetSync_GetSessions(System.Int64 connection_id)
    // Offset: 0x216A314
    static uint64_t ovr_NetSync_GetSessions(int64_t connection_id);
    // static public System.UInt64 ovr_NetSync_GetVoipAttenuation(System.Int64 connection_id)
    // Offset: 0x216A394
    static uint64_t ovr_NetSync_GetVoipAttenuation(int64_t connection_id);
    // static public System.UInt64 ovr_NetSync_GetVoipAttenuationDefault()
    // Offset: 0x216A414
    static uint64_t ovr_NetSync_GetVoipAttenuationDefault();
    // static public System.UInt64 ovr_NetSync_SetVoipAttenuation(System.Int64 connection_id, System.Single[] distances, System.Single[] decibels, System.UIntPtr count)
    // Offset: 0x216A488
    static uint64_t ovr_NetSync_SetVoipAttenuation(int64_t connection_id, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count);
    // static public System.UInt64 ovr_NetSync_SetVoipAttenuationModel(System.Int64 connection_id, System.String name, System.Single[] distances, System.Single[] decibels, System.UIntPtr count)
    // Offset: 0x216A540
    static uint64_t ovr_NetSync_SetVoipAttenuationModel(int64_t connection_id, ::StringW name, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count);
    // static private System.UInt64 ovr_NetSync_SetVoipAttenuationModel_Native(System.Int64 connection_id, System.IntPtr name, System.Single[] distances, System.Single[] decibels, System.UIntPtr count)
    // Offset: 0x216A61C
    static uint64_t ovr_NetSync_SetVoipAttenuationModel_Native(int64_t connection_id, ::System::IntPtr name, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count);
    // static public System.UInt64 ovr_NetSync_SetVoipChannelCfg(System.Int64 connection_id, System.String channel_name, System.String attnmodel, System.Boolean disable_spatialization)
    // Offset: 0x216A6DC
    static uint64_t ovr_NetSync_SetVoipChannelCfg(int64_t connection_id, ::StringW channel_name, ::StringW attnmodel, bool disable_spatialization);
    // static private System.UInt64 ovr_NetSync_SetVoipChannelCfg_Native(System.Int64 connection_id, System.IntPtr channel_name, System.IntPtr attnmodel, System.Boolean disable_spatialization)
    // Offset: 0x216A7C8
    static uint64_t ovr_NetSync_SetVoipChannelCfg_Native(int64_t connection_id, ::System::IntPtr channel_name, ::System::IntPtr attnmodel, bool disable_spatialization);
    // static public System.UInt64 ovr_NetSync_SetVoipGroup(System.Int64 connection_id, System.String group_id)
    // Offset: 0x216A870
    static uint64_t ovr_NetSync_SetVoipGroup(int64_t connection_id, ::StringW group_id);
    // static private System.UInt64 ovr_NetSync_SetVoipGroup_Native(System.Int64 connection_id, System.IntPtr group_id)
    // Offset: 0x216A92C
    static uint64_t ovr_NetSync_SetVoipGroup_Native(int64_t connection_id, ::System::IntPtr group_id);
    // static public System.UInt64 ovr_NetSync_SetVoipListentoChannels(System.Int64 connection_id, System.String[] listento_channels, System.UIntPtr count)
    // Offset: 0x216A9BC
    static uint64_t ovr_NetSync_SetVoipListentoChannels(int64_t connection_id, ::ArrayW<::StringW> listento_channels, ::System::UIntPtr count);
    // static public System.UInt64 ovr_NetSync_SetVoipMicSource(System.Int64 connection_id, Oculus.Platform.NetSyncVoipMicSource mic_source)
    // Offset: 0x216AB20
    static uint64_t ovr_NetSync_SetVoipMicSource(int64_t connection_id, ::Oculus::Platform::NetSyncVoipMicSource mic_source);
    // static public System.UInt64 ovr_NetSync_SetVoipSessionMuted(System.Int64 connection_id, System.UInt64 session_id, System.Boolean muted)
    // Offset: 0x216ABB0
    static uint64_t ovr_NetSync_SetVoipSessionMuted(int64_t connection_id, uint64_t session_id, bool muted);
    // static public System.UInt64 ovr_NetSync_SetVoipSpeaktoChannels(System.Int64 connection_id, System.String[] speakto_channels, System.UIntPtr count)
    // Offset: 0x216AC48
    static uint64_t ovr_NetSync_SetVoipSpeaktoChannels(int64_t connection_id, ::ArrayW<::StringW> speakto_channels, ::System::UIntPtr count);
    // static public System.UInt64 ovr_NetSync_SetVoipStreamMode(System.Int64 connection_id, System.UInt64 sessionId, Oculus.Platform.NetSyncVoipStreamMode streamMode)
    // Offset: 0x216ADAC
    static uint64_t ovr_NetSync_SetVoipStreamMode(int64_t connection_id, uint64_t sessionId, ::Oculus::Platform::NetSyncVoipStreamMode streamMode);
    // static public System.UInt64 ovr_Notification_GetRoomInvites()
    // Offset: 0x216AE44
    static uint64_t ovr_Notification_GetRoomInvites();
    // static public System.UInt64 ovr_Notification_MarkAsRead(System.UInt64 notificationID)
    // Offset: 0x216AEB8
    static uint64_t ovr_Notification_MarkAsRead(uint64_t notificationID);
    // static public System.UInt64 ovr_Party_Create()
    // Offset: 0x216AF38
    static uint64_t ovr_Party_Create();
    // static public System.UInt64 ovr_Party_GatherInApplication(System.UInt64 partyID, System.UInt64 appID)
    // Offset: 0x216AFAC
    static uint64_t ovr_Party_GatherInApplication(uint64_t partyID, uint64_t appID);
    // static public System.UInt64 ovr_Party_Get(System.UInt64 partyID)
    // Offset: 0x216B03C
    static uint64_t ovr_Party_Get(uint64_t partyID);
    // static public System.UInt64 ovr_Party_GetCurrent()
    // Offset: 0x216B0BC
    static uint64_t ovr_Party_GetCurrent();
    // static public System.UInt64 ovr_Party_GetCurrentForUser(System.UInt64 userID)
    // Offset: 0x216B130
    static uint64_t ovr_Party_GetCurrentForUser(uint64_t userID);
    // static public System.UInt64 ovr_Party_Invite(System.UInt64 partyID, System.UInt64 userID)
    // Offset: 0x216B1B0
    static uint64_t ovr_Party_Invite(uint64_t partyID, uint64_t userID);
    // static public System.UInt64 ovr_Party_Join(System.UInt64 partyID)
    // Offset: 0x216B23C
    static uint64_t ovr_Party_Join(uint64_t partyID);
    // static public System.UInt64 ovr_Party_Leave(System.UInt64 partyID)
    // Offset: 0x216B2BC
    static uint64_t ovr_Party_Leave(uint64_t partyID);
    // static public System.UInt64 ovr_RichPresence_Clear()
    // Offset: 0x216B33C
    static uint64_t ovr_RichPresence_Clear();
    // static public System.UInt64 ovr_RichPresence_GetDestinations()
    // Offset: 0x216B3B0
    static uint64_t ovr_RichPresence_GetDestinations();
    // static public System.UInt64 ovr_RichPresence_Set(System.IntPtr richPresenceOptions)
    // Offset: 0x216B424
    static uint64_t ovr_RichPresence_Set(::System::IntPtr richPresenceOptions);
    // static public System.UInt64 ovr_RichPresence_SetDestination(System.String api_name)
    // Offset: 0x216B4A4
    static uint64_t ovr_RichPresence_SetDestination(::StringW api_name);
    // static private System.UInt64 ovr_RichPresence_SetDestination_Native(System.IntPtr api_name)
    // Offset: 0x216B54C
    static uint64_t ovr_RichPresence_SetDestination_Native(::System::IntPtr api_name);
    // static public System.UInt64 ovr_RichPresence_SetIsJoinable(System.Boolean is_joinable)
    // Offset: 0x216B5CC
    static uint64_t ovr_RichPresence_SetIsJoinable(bool is_joinable);
    // static public System.UInt64 ovr_RichPresence_SetLobbySession(System.String id)
    // Offset: 0x216B64C
    static uint64_t ovr_RichPresence_SetLobbySession(::StringW id);
    // static private System.UInt64 ovr_RichPresence_SetLobbySession_Native(System.IntPtr id)
    // Offset: 0x216B6F4
    static uint64_t ovr_RichPresence_SetLobbySession_Native(::System::IntPtr id);
    // static public System.UInt64 ovr_RichPresence_SetMatchSession(System.String id)
    // Offset: 0x216B774
    static uint64_t ovr_RichPresence_SetMatchSession(::StringW id);
    // static private System.UInt64 ovr_RichPresence_SetMatchSession_Native(System.IntPtr id)
    // Offset: 0x216B81C
    static uint64_t ovr_RichPresence_SetMatchSession_Native(::System::IntPtr id);
    // static public System.UInt64 ovr_Room_CreateAndJoinPrivate(Oculus.Platform.RoomJoinPolicy joinPolicy, System.UInt32 maxUsers, System.Boolean subscribeToUpdates)
    // Offset: 0x216B89C
    static uint64_t ovr_Room_CreateAndJoinPrivate(::Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);
    // static public System.UInt64 ovr_Room_CreateAndJoinPrivate2(Oculus.Platform.RoomJoinPolicy joinPolicy, System.UInt32 maxUsers, System.IntPtr roomOptions)
    // Offset: 0x216B934
    static uint64_t ovr_Room_CreateAndJoinPrivate2(::Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, ::System::IntPtr roomOptions);
    // static public System.UInt64 ovr_Room_Get(System.UInt64 roomID)
    // Offset: 0x216B9CC
    static uint64_t ovr_Room_Get(uint64_t roomID);
    // static public System.UInt64 ovr_Room_GetCurrent()
    // Offset: 0x216BA4C
    static uint64_t ovr_Room_GetCurrent();
    // static public System.UInt64 ovr_Room_GetCurrentForUser(System.UInt64 userID)
    // Offset: 0x216BAC0
    static uint64_t ovr_Room_GetCurrentForUser(uint64_t userID);
    // static public System.UInt64 ovr_Room_GetInvitableUsers()
    // Offset: 0x216BB40
    static uint64_t ovr_Room_GetInvitableUsers();
    // static public System.UInt64 ovr_Room_GetInvitableUsers2(System.IntPtr roomOptions)
    // Offset: 0x216BBB4
    static uint64_t ovr_Room_GetInvitableUsers2(::System::IntPtr roomOptions);
    // static public System.UInt64 ovr_Room_GetModeratedRooms()
    // Offset: 0x216BC34
    static uint64_t ovr_Room_GetModeratedRooms();
    // static public System.UInt64 ovr_Room_GetSocialRooms(System.UInt64 appID)
    // Offset: 0x216BCA8
    static uint64_t ovr_Room_GetSocialRooms(uint64_t appID);
    // static public System.UInt64 ovr_Room_InviteUser(System.UInt64 roomID, System.String inviteToken)
    // Offset: 0x216BD28
    static uint64_t ovr_Room_InviteUser(uint64_t roomID, ::StringW inviteToken);
    // static private System.UInt64 ovr_Room_InviteUser_Native(System.UInt64 roomID, System.IntPtr inviteToken)
    // Offset: 0x216BDE4
    static uint64_t ovr_Room_InviteUser_Native(uint64_t roomID, ::System::IntPtr inviteToken);
    // static public System.UInt64 ovr_Room_Join(System.UInt64 roomID, System.Boolean subscribeToUpdates)
    // Offset: 0x216BE74
    static uint64_t ovr_Room_Join(uint64_t roomID, bool subscribeToUpdates);
    // static public System.UInt64 ovr_Room_Join2(System.UInt64 roomID, System.IntPtr roomOptions)
    // Offset: 0x216BF04
    static uint64_t ovr_Room_Join2(uint64_t roomID, ::System::IntPtr roomOptions);
    // static public System.UInt64 ovr_Room_KickUser(System.UInt64 roomID, System.UInt64 userID, System.Int32 kickDurationSeconds)
    // Offset: 0x216BF94
    static uint64_t ovr_Room_KickUser(uint64_t roomID, uint64_t userID, int kickDurationSeconds);
    // static public System.UInt64 ovr_Room_LaunchInvitableUserFlow(System.UInt64 roomID)
    // Offset: 0x216C028
    static uint64_t ovr_Room_LaunchInvitableUserFlow(uint64_t roomID);
    // static public System.UInt64 ovr_Room_Leave(System.UInt64 roomID)
    // Offset: 0x216C0A8
    static uint64_t ovr_Room_Leave(uint64_t roomID);
    // static public System.UInt64 ovr_Room_SetDescription(System.UInt64 roomID, System.String description)
    // Offset: 0x216C128
    static uint64_t ovr_Room_SetDescription(uint64_t roomID, ::StringW description);
    // static private System.UInt64 ovr_Room_SetDescription_Native(System.UInt64 roomID, System.IntPtr description)
    // Offset: 0x216C1E4
    static uint64_t ovr_Room_SetDescription_Native(uint64_t roomID, ::System::IntPtr description);
    // static public System.UInt64 ovr_Room_UpdateDataStore(System.UInt64 roomID, Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair[] data)
    // Offset: 0x216C274
    static uint64_t ovr_Room_UpdateDataStore(uint64_t roomID, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> data);
    // static private System.UInt64 ovr_Room_UpdateDataStore_Native(System.UInt64 roomID, Oculus.Platform.CAPI/Oculus.Platform.ovrKeyValuePair[] data, System.UIntPtr numItems)
    // Offset: 0x216C328
    static uint64_t ovr_Room_UpdateDataStore_Native(uint64_t roomID, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> data, ::System::UIntPtr numItems);
    // static public System.UInt64 ovr_Room_UpdateMembershipLockStatus(System.UInt64 roomID, Oculus.Platform.RoomMembershipLockStatus membershipLockStatus)
    // Offset: 0x216C480
    static uint64_t ovr_Room_UpdateMembershipLockStatus(uint64_t roomID, ::Oculus::Platform::RoomMembershipLockStatus membershipLockStatus);
    // static public System.UInt64 ovr_Room_UpdateOwner(System.UInt64 roomID, System.UInt64 userID)
    // Offset: 0x216C510
    static uint64_t ovr_Room_UpdateOwner(uint64_t roomID, uint64_t userID);
    // static public System.UInt64 ovr_Room_UpdatePrivateRoomJoinPolicy(System.UInt64 roomID, Oculus.Platform.RoomJoinPolicy newJoinPolicy)
    // Offset: 0x216C5A0
    static uint64_t ovr_Room_UpdatePrivateRoomJoinPolicy(uint64_t roomID, ::Oculus::Platform::RoomJoinPolicy newJoinPolicy);
    // static public System.UInt64 ovr_SystemPermissions_GetStatus(Oculus.Platform.PermissionType permType)
    // Offset: 0x216C630
    static uint64_t ovr_SystemPermissions_GetStatus(::Oculus::Platform::PermissionType permType);
    // static public System.UInt64 ovr_SystemPermissions_LaunchDeeplink(Oculus.Platform.PermissionType permType)
    // Offset: 0x216C6B0
    static uint64_t ovr_SystemPermissions_LaunchDeeplink(::Oculus::Platform::PermissionType permType);
    // static public System.UInt64 ovr_User_CancelRecordingForReportFlow(System.String recordingUUID)
    // Offset: 0x216C730
    static uint64_t ovr_User_CancelRecordingForReportFlow(::StringW recordingUUID);
    // static private System.UInt64 ovr_User_CancelRecordingForReportFlow_Native(System.IntPtr recordingUUID)
    // Offset: 0x216C7D8
    static uint64_t ovr_User_CancelRecordingForReportFlow_Native(::System::IntPtr recordingUUID);
    // static public System.UInt64 ovr_User_Get(System.UInt64 userID)
    // Offset: 0x216C858
    static uint64_t ovr_User_Get(uint64_t userID);
    // static public System.UInt64 ovr_User_GetAccessToken()
    // Offset: 0x216C8D8
    static uint64_t ovr_User_GetAccessToken();
    // static public System.UInt64 ovr_User_GetLinkedAccounts(System.IntPtr userOptions)
    // Offset: 0x216C94C
    static uint64_t ovr_User_GetLinkedAccounts(::System::IntPtr userOptions);
    // static public System.UInt64 ovr_User_GetLoggedInUser()
    // Offset: 0x216C9CC
    static uint64_t ovr_User_GetLoggedInUser();
    // static public System.UInt64 ovr_User_GetLoggedInUserFriends()
    // Offset: 0x216CA40
    static uint64_t ovr_User_GetLoggedInUserFriends();
    // static public System.UInt64 ovr_User_GetLoggedInUserFriendsAndRooms()
    // Offset: 0x216CAB4
    static uint64_t ovr_User_GetLoggedInUserFriendsAndRooms();
    // static public System.UInt64 ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(System.IntPtr userOptions)
    // Offset: 0x216CB28
    static uint64_t ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(::System::IntPtr userOptions);
    // static public System.UInt64 ovr_User_GetOrgScopedID(System.UInt64 userID)
    // Offset: 0x216CBA8
    static uint64_t ovr_User_GetOrgScopedID(uint64_t userID);
    // static public System.UInt64 ovr_User_GetSdkAccounts()
    // Offset: 0x216CC28
    static uint64_t ovr_User_GetSdkAccounts();
    // static public System.UInt64 ovr_User_GetUserProof()
    // Offset: 0x216CC9C
    static uint64_t ovr_User_GetUserProof();
    // static public System.UInt64 ovr_User_LaunchBlockFlow(System.UInt64 userID)
    // Offset: 0x216CD10
    static uint64_t ovr_User_LaunchBlockFlow(uint64_t userID);
    // static public System.UInt64 ovr_User_LaunchFriendRequestFlow(System.UInt64 userID)
    // Offset: 0x216CD90
    static uint64_t ovr_User_LaunchFriendRequestFlow(uint64_t userID);
    // static public System.UInt64 ovr_User_LaunchProfile(System.UInt64 userID)
    // Offset: 0x216CE10
    static uint64_t ovr_User_LaunchProfile(uint64_t userID);
    // static public System.UInt64 ovr_User_LaunchReportFlow(System.UInt64 userID)
    // Offset: 0x216CE90
    static uint64_t ovr_User_LaunchReportFlow(uint64_t userID);
    // static public System.UInt64 ovr_User_LaunchReportFlow2(System.UInt64 optionalUserID, System.IntPtr abuseReportOptions)
    // Offset: 0x216CF10
    static uint64_t ovr_User_LaunchReportFlow2(uint64_t optionalUserID, ::System::IntPtr abuseReportOptions);
    // static public System.UInt64 ovr_User_LaunchUnblockFlow(System.UInt64 userID)
    // Offset: 0x216CFA0
    static uint64_t ovr_User_LaunchUnblockFlow(uint64_t userID);
    // static public System.UInt64 ovr_User_NewEntitledTestUser()
    // Offset: 0x216D020
    static uint64_t ovr_User_NewEntitledTestUser();
    // static public System.UInt64 ovr_User_NewTestUser()
    // Offset: 0x216D094
    static uint64_t ovr_User_NewTestUser();
    // static public System.UInt64 ovr_User_NewTestUserFriends()
    // Offset: 0x216D108
    static uint64_t ovr_User_NewTestUserFriends();
    // static public System.UInt64 ovr_User_StartRecordingForReportFlow()
    // Offset: 0x216D17C
    static uint64_t ovr_User_StartRecordingForReportFlow();
    // static public System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow(System.UInt64 optionalUserID, System.String optionalRecordingUUID)
    // Offset: 0x216D1F0
    static uint64_t ovr_User_StopRecordingAndLaunchReportFlow(uint64_t optionalUserID, ::StringW optionalRecordingUUID);
    // static private System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow_Native(System.UInt64 optionalUserID, System.IntPtr optionalRecordingUUID)
    // Offset: 0x216D2AC
    static uint64_t ovr_User_StopRecordingAndLaunchReportFlow_Native(uint64_t optionalUserID, ::System::IntPtr optionalRecordingUUID);
    // static public System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow2(System.UInt64 optionalUserID, System.String optionalRecordingUUID, System.IntPtr abuseReportOptions)
    // Offset: 0x216D33C
    static uint64_t ovr_User_StopRecordingAndLaunchReportFlow2(uint64_t optionalUserID, ::StringW optionalRecordingUUID, ::System::IntPtr abuseReportOptions);
    // static private System.UInt64 ovr_User_StopRecordingAndLaunchReportFlow2_Native(System.UInt64 optionalUserID, System.IntPtr optionalRecordingUUID, System.IntPtr abuseReportOptions)
    // Offset: 0x216D400
    static uint64_t ovr_User_StopRecordingAndLaunchReportFlow2_Native(uint64_t optionalUserID, ::System::IntPtr optionalRecordingUUID, ::System::IntPtr abuseReportOptions);
    // static public System.UInt64 ovr_User_TestUserCreateDeviceManifest(System.String deviceID, System.UInt64[] appIDs, System.Int32 numAppIDs)
    // Offset: 0x216D498
    static uint64_t ovr_User_TestUserCreateDeviceManifest(::StringW deviceID, ::ArrayW<uint64_t> appIDs, int numAppIDs);
    // static private System.UInt64 ovr_User_TestUserCreateDeviceManifest_Native(System.IntPtr deviceID, System.UInt64[] appIDs, System.Int32 numAppIDs)
    // Offset: 0x216D558
    static uint64_t ovr_User_TestUserCreateDeviceManifest_Native(::System::IntPtr deviceID, ::ArrayW<uint64_t> appIDs, int numAppIDs);
    // static public System.UInt64 ovr_UserDataStore_PrivateDeleteEntryByKey(System.UInt64 userID, System.String key)
    // Offset: 0x216D5F8
    static uint64_t ovr_UserDataStore_PrivateDeleteEntryByKey(uint64_t userID, ::StringW key);
    // static private System.UInt64 ovr_UserDataStore_PrivateDeleteEntryByKey_Native(System.UInt64 userID, System.IntPtr key)
    // Offset: 0x216D6B4
    static uint64_t ovr_UserDataStore_PrivateDeleteEntryByKey_Native(uint64_t userID, ::System::IntPtr key);
    // static public System.UInt64 ovr_UserDataStore_PrivateGetEntries(System.UInt64 userID)
    // Offset: 0x216D744
    static uint64_t ovr_UserDataStore_PrivateGetEntries(uint64_t userID);
    // static public System.UInt64 ovr_UserDataStore_PrivateGetEntryByKey(System.UInt64 userID, System.String key)
    // Offset: 0x216D7C4
    static uint64_t ovr_UserDataStore_PrivateGetEntryByKey(uint64_t userID, ::StringW key);
    // static private System.UInt64 ovr_UserDataStore_PrivateGetEntryByKey_Native(System.UInt64 userID, System.IntPtr key)
    // Offset: 0x216D880
    static uint64_t ovr_UserDataStore_PrivateGetEntryByKey_Native(uint64_t userID, ::System::IntPtr key);
    // static public System.UInt64 ovr_UserDataStore_PrivateWriteEntry(System.UInt64 userID, System.String key, System.String value)
    // Offset: 0x216D910
    static uint64_t ovr_UserDataStore_PrivateWriteEntry(uint64_t userID, ::StringW key, ::StringW value);
    // static private System.UInt64 ovr_UserDataStore_PrivateWriteEntry_Native(System.UInt64 userID, System.IntPtr key, System.IntPtr value)
    // Offset: 0x216D9EC
    static uint64_t ovr_UserDataStore_PrivateWriteEntry_Native(uint64_t userID, ::System::IntPtr key, ::System::IntPtr value);
    // static public System.UInt64 ovr_UserDataStore_PublicDeleteEntryByKey(System.UInt64 userID, System.String key)
    // Offset: 0x216DA84
    static uint64_t ovr_UserDataStore_PublicDeleteEntryByKey(uint64_t userID, ::StringW key);
    // static private System.UInt64 ovr_UserDataStore_PublicDeleteEntryByKey_Native(System.UInt64 userID, System.IntPtr key)
    // Offset: 0x216DB40
    static uint64_t ovr_UserDataStore_PublicDeleteEntryByKey_Native(uint64_t userID, ::System::IntPtr key);
    // static public System.UInt64 ovr_UserDataStore_PublicGetEntries(System.UInt64 userID)
    // Offset: 0x216DBD0
    static uint64_t ovr_UserDataStore_PublicGetEntries(uint64_t userID);
    // static public System.UInt64 ovr_UserDataStore_PublicGetEntryByKey(System.UInt64 userID, System.String key)
    // Offset: 0x216DC50
    static uint64_t ovr_UserDataStore_PublicGetEntryByKey(uint64_t userID, ::StringW key);
    // static private System.UInt64 ovr_UserDataStore_PublicGetEntryByKey_Native(System.UInt64 userID, System.IntPtr key)
    // Offset: 0x216DD0C
    static uint64_t ovr_UserDataStore_PublicGetEntryByKey_Native(uint64_t userID, ::System::IntPtr key);
    // static public System.UInt64 ovr_UserDataStore_PublicWriteEntry(System.UInt64 userID, System.String key, System.String value)
    // Offset: 0x216DD9C
    static uint64_t ovr_UserDataStore_PublicWriteEntry(uint64_t userID, ::StringW key, ::StringW value);
    // static private System.UInt64 ovr_UserDataStore_PublicWriteEntry_Native(System.UInt64 userID, System.IntPtr key, System.IntPtr value)
    // Offset: 0x216DE78
    static uint64_t ovr_UserDataStore_PublicWriteEntry_Native(uint64_t userID, ::System::IntPtr key, ::System::IntPtr value);
    // static public System.UInt64 ovr_Voip_GetMicrophoneAvailability()
    // Offset: 0x216DF10
    static uint64_t ovr_Voip_GetMicrophoneAvailability();
    // static public System.UInt64 ovr_Voip_SetSystemVoipSuppressed(System.Boolean suppressed)
    // Offset: 0x216DF84
    static uint64_t ovr_Voip_SetSystemVoipSuppressed(bool suppressed);
    // static public System.String ovr_AbuseReportRecording_GetRecordingUuid(System.IntPtr obj)
    // Offset: 0x216E004
    static ::StringW ovr_AbuseReportRecording_GetRecordingUuid(::System::IntPtr obj);
    // static private System.IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(System.IntPtr obj)
    // Offset: 0x216E06C
    static ::System::IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(::System::IntPtr obj);
    // static public System.UInt32 ovr_AchievementDefinition_GetBitfieldLength(System.IntPtr obj)
    // Offset: 0x216E0EC
    static uint ovr_AchievementDefinition_GetBitfieldLength(::System::IntPtr obj);
    // static public System.String ovr_AchievementDefinition_GetName(System.IntPtr obj)
    // Offset: 0x216E16C
    static ::StringW ovr_AchievementDefinition_GetName(::System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementDefinition_GetName_Native(System.IntPtr obj)
    // Offset: 0x216E1D4
    static ::System::IntPtr ovr_AchievementDefinition_GetName_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_AchievementDefinition_GetTarget(System.IntPtr obj)
    // Offset: 0x216E254
    static uint64_t ovr_AchievementDefinition_GetTarget(::System::IntPtr obj);
    // static public Oculus.Platform.AchievementType ovr_AchievementDefinition_GetType(System.IntPtr obj)
    // Offset: 0x216E2D4
    static ::Oculus::Platform::AchievementType ovr_AchievementDefinition_GetType(::System::IntPtr obj);
    // static public System.IntPtr ovr_AchievementDefinitionArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x216E354
    static ::System::IntPtr ovr_AchievementDefinitionArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_AchievementDefinitionArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x216E3E4
    static ::StringW ovr_AchievementDefinitionArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x216E44C
    static ::System::IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_AchievementDefinitionArray_GetSize(System.IntPtr obj)
    // Offset: 0x216E4CC
    static ::System::UIntPtr ovr_AchievementDefinitionArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_AchievementDefinitionArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x216E54C
    static bool ovr_AchievementDefinitionArray_HasNextPage(::System::IntPtr obj);
    // static public System.String ovr_AchievementProgress_GetBitfield(System.IntPtr obj)
    // Offset: 0x216E5D4
    static ::StringW ovr_AchievementProgress_GetBitfield(::System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementProgress_GetBitfield_Native(System.IntPtr obj)
    // Offset: 0x216E63C
    static ::System::IntPtr ovr_AchievementProgress_GetBitfield_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_AchievementProgress_GetCount(System.IntPtr obj)
    // Offset: 0x216E6BC
    static uint64_t ovr_AchievementProgress_GetCount(::System::IntPtr obj);
    // static public System.Boolean ovr_AchievementProgress_GetIsUnlocked(System.IntPtr obj)
    // Offset: 0x216E73C
    static bool ovr_AchievementProgress_GetIsUnlocked(::System::IntPtr obj);
    // static public System.String ovr_AchievementProgress_GetName(System.IntPtr obj)
    // Offset: 0x216E7C4
    static ::StringW ovr_AchievementProgress_GetName(::System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementProgress_GetName_Native(System.IntPtr obj)
    // Offset: 0x216E82C
    static ::System::IntPtr ovr_AchievementProgress_GetName_Native(::System::IntPtr obj);
    // static public System.DateTime ovr_AchievementProgress_GetUnlockTime(System.IntPtr obj)
    // Offset: 0x216E8AC
    static ::System::DateTime ovr_AchievementProgress_GetUnlockTime(::System::IntPtr obj);
    // static private System.UInt64 ovr_AchievementProgress_GetUnlockTime_Native(System.IntPtr obj)
    // Offset: 0x216E914
    static uint64_t ovr_AchievementProgress_GetUnlockTime_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_AchievementProgressArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x216E994
    static ::System::IntPtr ovr_AchievementProgressArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_AchievementProgressArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x216EA24
    static ::StringW ovr_AchievementProgressArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x216EA8C
    static ::System::IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_AchievementProgressArray_GetSize(System.IntPtr obj)
    // Offset: 0x216EB0C
    static ::System::UIntPtr ovr_AchievementProgressArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_AchievementProgressArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x216EB8C
    static bool ovr_AchievementProgressArray_HasNextPage(::System::IntPtr obj);
    // static public System.Boolean ovr_AchievementUpdate_GetJustUnlocked(System.IntPtr obj)
    // Offset: 0x216EC14
    static bool ovr_AchievementUpdate_GetJustUnlocked(::System::IntPtr obj);
    // static public System.String ovr_AchievementUpdate_GetName(System.IntPtr obj)
    // Offset: 0x216EC9C
    static ::StringW ovr_AchievementUpdate_GetName(::System::IntPtr obj);
    // static private System.IntPtr ovr_AchievementUpdate_GetName_Native(System.IntPtr obj)
    // Offset: 0x216ED04
    static ::System::IntPtr ovr_AchievementUpdate_GetName_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_Application_GetID(System.IntPtr obj)
    // Offset: 0x216ED84
    static uint64_t ovr_Application_GetID(::System::IntPtr obj);
    // static public System.Int32 ovr_ApplicationVersion_GetCurrentCode(System.IntPtr obj)
    // Offset: 0x216EE04
    static int ovr_ApplicationVersion_GetCurrentCode(::System::IntPtr obj);
    // static public System.String ovr_ApplicationVersion_GetCurrentName(System.IntPtr obj)
    // Offset: 0x216EE84
    static ::StringW ovr_ApplicationVersion_GetCurrentName(::System::IntPtr obj);
    // static private System.IntPtr ovr_ApplicationVersion_GetCurrentName_Native(System.IntPtr obj)
    // Offset: 0x216EEEC
    static ::System::IntPtr ovr_ApplicationVersion_GetCurrentName_Native(::System::IntPtr obj);
    // static public System.Int32 ovr_ApplicationVersion_GetLatestCode(System.IntPtr obj)
    // Offset: 0x216EF6C
    static int ovr_ApplicationVersion_GetLatestCode(::System::IntPtr obj);
    // static public System.String ovr_ApplicationVersion_GetLatestName(System.IntPtr obj)
    // Offset: 0x216EFEC
    static ::StringW ovr_ApplicationVersion_GetLatestName(::System::IntPtr obj);
    // static private System.IntPtr ovr_ApplicationVersion_GetLatestName_Native(System.IntPtr obj)
    // Offset: 0x216F054
    static ::System::IntPtr ovr_ApplicationVersion_GetLatestName_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetDetails_GetAssetId(System.IntPtr obj)
    // Offset: 0x216F0D4
    static uint64_t ovr_AssetDetails_GetAssetId(::System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetAssetType(System.IntPtr obj)
    // Offset: 0x216F154
    static ::StringW ovr_AssetDetails_GetAssetType(::System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetAssetType_Native(System.IntPtr obj)
    // Offset: 0x216F1BC
    static ::System::IntPtr ovr_AssetDetails_GetAssetType_Native(::System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetDownloadStatus(System.IntPtr obj)
    // Offset: 0x216F23C
    static ::StringW ovr_AssetDetails_GetDownloadStatus(::System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetDownloadStatus_Native(System.IntPtr obj)
    // Offset: 0x216F2A4
    static ::System::IntPtr ovr_AssetDetails_GetDownloadStatus_Native(::System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetFilepath(System.IntPtr obj)
    // Offset: 0x216F324
    static ::StringW ovr_AssetDetails_GetFilepath(::System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetFilepath_Native(System.IntPtr obj)
    // Offset: 0x216F38C
    static ::System::IntPtr ovr_AssetDetails_GetFilepath_Native(::System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetIapStatus(System.IntPtr obj)
    // Offset: 0x216F40C
    static ::StringW ovr_AssetDetails_GetIapStatus(::System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetIapStatus_Native(System.IntPtr obj)
    // Offset: 0x216F474
    static ::System::IntPtr ovr_AssetDetails_GetIapStatus_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_AssetDetails_GetLanguage(System.IntPtr obj)
    // Offset: 0x216F4F4
    static ::System::IntPtr ovr_AssetDetails_GetLanguage(::System::IntPtr obj);
    // static public System.String ovr_AssetDetails_GetMetadata(System.IntPtr obj)
    // Offset: 0x216F574
    static ::StringW ovr_AssetDetails_GetMetadata(::System::IntPtr obj);
    // static private System.IntPtr ovr_AssetDetails_GetMetadata_Native(System.IntPtr obj)
    // Offset: 0x216F5DC
    static ::System::IntPtr ovr_AssetDetails_GetMetadata_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_AssetDetailsArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x216F65C
    static ::System::IntPtr ovr_AssetDetailsArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_AssetDetailsArray_GetSize(System.IntPtr obj)
    // Offset: 0x216F6EC
    static ::System::UIntPtr ovr_AssetDetailsArray_GetSize(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDeleteResult_GetAssetFileId(System.IntPtr obj)
    // Offset: 0x216F76C
    static uint64_t ovr_AssetFileDeleteResult_GetAssetFileId(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDeleteResult_GetAssetId(System.IntPtr obj)
    // Offset: 0x216F7EC
    static uint64_t ovr_AssetFileDeleteResult_GetAssetId(::System::IntPtr obj);
    // static public System.String ovr_AssetFileDeleteResult_GetFilepath(System.IntPtr obj)
    // Offset: 0x216F86C
    static ::StringW ovr_AssetFileDeleteResult_GetFilepath(::System::IntPtr obj);
    // static private System.IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(System.IntPtr obj)
    // Offset: 0x216F8D4
    static ::System::IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(::System::IntPtr obj);
    // static public System.Boolean ovr_AssetFileDeleteResult_GetSuccess(System.IntPtr obj)
    // Offset: 0x216F954
    static bool ovr_AssetFileDeleteResult_GetSuccess(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadCancelResult_GetAssetFileId(System.IntPtr obj)
    // Offset: 0x216F9DC
    static uint64_t ovr_AssetFileDownloadCancelResult_GetAssetFileId(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadCancelResult_GetAssetId(System.IntPtr obj)
    // Offset: 0x216FA5C
    static uint64_t ovr_AssetFileDownloadCancelResult_GetAssetId(::System::IntPtr obj);
    // static public System.String ovr_AssetFileDownloadCancelResult_GetFilepath(System.IntPtr obj)
    // Offset: 0x216FADC
    static ::StringW ovr_AssetFileDownloadCancelResult_GetFilepath(::System::IntPtr obj);
    // static private System.IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(System.IntPtr obj)
    // Offset: 0x216FB44
    static ::System::IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(::System::IntPtr obj);
    // static public System.Boolean ovr_AssetFileDownloadCancelResult_GetSuccess(System.IntPtr obj)
    // Offset: 0x216FBC4
    static bool ovr_AssetFileDownloadCancelResult_GetSuccess(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadResult_GetAssetId(System.IntPtr obj)
    // Offset: 0x216FC4C
    static uint64_t ovr_AssetFileDownloadResult_GetAssetId(::System::IntPtr obj);
    // static public System.String ovr_AssetFileDownloadResult_GetFilepath(System.IntPtr obj)
    // Offset: 0x216FCCC
    static ::StringW ovr_AssetFileDownloadResult_GetFilepath(::System::IntPtr obj);
    // static private System.IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(System.IntPtr obj)
    // Offset: 0x216FD34
    static ::System::IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadUpdate_GetAssetFileId(System.IntPtr obj)
    // Offset: 0x216FDB4
    static uint64_t ovr_AssetFileDownloadUpdate_GetAssetFileId(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadUpdate_GetAssetId(System.IntPtr obj)
    // Offset: 0x216FE34
    static uint64_t ovr_AssetFileDownloadUpdate_GetAssetId(::System::IntPtr obj);
    // static public System.UInt32 ovr_AssetFileDownloadUpdate_GetBytesTotal(System.IntPtr obj)
    // Offset: 0x216FEB4
    static uint ovr_AssetFileDownloadUpdate_GetBytesTotal(::System::IntPtr obj);
    // static public System.UInt64 ovr_AssetFileDownloadUpdate_GetBytesTotalLong(System.IntPtr obj)
    // Offset: 0x216FF34
    static uint64_t ovr_AssetFileDownloadUpdate_GetBytesTotalLong(::System::IntPtr obj);
    // static public System.Int32 ovr_AssetFileDownloadUpdate_GetBytesTransferred(System.IntPtr obj)
    // Offset: 0x216FFB4
    static int ovr_AssetFileDownloadUpdate_GetBytesTransferred(::System::IntPtr obj);
    // static public System.Int64 ovr_AssetFileDownloadUpdate_GetBytesTransferredLong(System.IntPtr obj)
    // Offset: 0x2170034
    static int64_t ovr_AssetFileDownloadUpdate_GetBytesTransferredLong(::System::IntPtr obj);
    // static public System.Boolean ovr_AssetFileDownloadUpdate_GetCompleted(System.IntPtr obj)
    // Offset: 0x21700B4
    static bool ovr_AssetFileDownloadUpdate_GetCompleted(::System::IntPtr obj);
    // static public System.Int32 ovr_CalApplicationFinalized_GetCountdownMS(System.IntPtr obj)
    // Offset: 0x217013C
    static int ovr_CalApplicationFinalized_GetCountdownMS(::System::IntPtr obj);
    // static public System.UInt64 ovr_CalApplicationFinalized_GetID(System.IntPtr obj)
    // Offset: 0x21701BC
    static uint64_t ovr_CalApplicationFinalized_GetID(::System::IntPtr obj);
    // static public System.String ovr_CalApplicationFinalized_GetLaunchDetails(System.IntPtr obj)
    // Offset: 0x217023C
    static ::StringW ovr_CalApplicationFinalized_GetLaunchDetails(::System::IntPtr obj);
    // static private System.IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(System.IntPtr obj)
    // Offset: 0x21702A4
    static ::System::IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_CalApplicationProposed_GetID(System.IntPtr obj)
    // Offset: 0x2170324
    static uint64_t ovr_CalApplicationProposed_GetID(::System::IntPtr obj);
    // static public System.UInt64 ovr_CalApplicationSuggestion_GetID(System.IntPtr obj)
    // Offset: 0x21703A4
    static uint64_t ovr_CalApplicationSuggestion_GetID(::System::IntPtr obj);
    // static public System.String ovr_CalApplicationSuggestion_GetSocialContext(System.IntPtr obj)
    // Offset: 0x2170424
    static ::StringW ovr_CalApplicationSuggestion_GetSocialContext(::System::IntPtr obj);
    // static private System.IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(System.IntPtr obj)
    // Offset: 0x217048C
    static ::System::IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_CalApplicationSuggestionArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x217050C
    static ::System::IntPtr ovr_CalApplicationSuggestionArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_CalApplicationSuggestionArray_GetSize(System.IntPtr obj)
    // Offset: 0x217059C
    static ::System::UIntPtr ovr_CalApplicationSuggestionArray_GetSize(::System::IntPtr obj);
    // static public Oculus.Platform.ChallengeCreationType ovr_Challenge_GetCreationType(System.IntPtr obj)
    // Offset: 0x217061C
    static ::Oculus::Platform::ChallengeCreationType ovr_Challenge_GetCreationType(::System::IntPtr obj);
    // static public System.String ovr_Challenge_GetDescription(System.IntPtr obj)
    // Offset: 0x217069C
    static ::StringW ovr_Challenge_GetDescription(::System::IntPtr obj);
    // static private System.IntPtr ovr_Challenge_GetDescription_Native(System.IntPtr obj)
    // Offset: 0x2170704
    static ::System::IntPtr ovr_Challenge_GetDescription_Native(::System::IntPtr obj);
    // static public System.DateTime ovr_Challenge_GetEndDate(System.IntPtr obj)
    // Offset: 0x2170784
    static ::System::DateTime ovr_Challenge_GetEndDate(::System::IntPtr obj);
    // static private System.UInt64 ovr_Challenge_GetEndDate_Native(System.IntPtr obj)
    // Offset: 0x21707EC
    static uint64_t ovr_Challenge_GetEndDate_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_Challenge_GetID(System.IntPtr obj)
    // Offset: 0x217086C
    static uint64_t ovr_Challenge_GetID(::System::IntPtr obj);
    // static public System.IntPtr ovr_Challenge_GetInvitedUsers(System.IntPtr obj)
    // Offset: 0x21708EC
    static ::System::IntPtr ovr_Challenge_GetInvitedUsers(::System::IntPtr obj);
    // static public System.IntPtr ovr_Challenge_GetLeaderboard(System.IntPtr obj)
    // Offset: 0x217096C
    static ::System::IntPtr ovr_Challenge_GetLeaderboard(::System::IntPtr obj);
    // static public System.IntPtr ovr_Challenge_GetParticipants(System.IntPtr obj)
    // Offset: 0x21709EC
    static ::System::IntPtr ovr_Challenge_GetParticipants(::System::IntPtr obj);
    // static public System.DateTime ovr_Challenge_GetStartDate(System.IntPtr obj)
    // Offset: 0x2170A6C
    static ::System::DateTime ovr_Challenge_GetStartDate(::System::IntPtr obj);
    // static private System.UInt64 ovr_Challenge_GetStartDate_Native(System.IntPtr obj)
    // Offset: 0x2170AD4
    static uint64_t ovr_Challenge_GetStartDate_Native(::System::IntPtr obj);
    // static public System.String ovr_Challenge_GetTitle(System.IntPtr obj)
    // Offset: 0x2170B54
    static ::StringW ovr_Challenge_GetTitle(::System::IntPtr obj);
    // static private System.IntPtr ovr_Challenge_GetTitle_Native(System.IntPtr obj)
    // Offset: 0x2170BBC
    static ::System::IntPtr ovr_Challenge_GetTitle_Native(::System::IntPtr obj);
    // static public Oculus.Platform.ChallengeVisibility ovr_Challenge_GetVisibility(System.IntPtr obj)
    // Offset: 0x2170C3C
    static ::Oculus::Platform::ChallengeVisibility ovr_Challenge_GetVisibility(::System::IntPtr obj);
    // static public System.IntPtr ovr_ChallengeArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x2170CBC
    static ::System::IntPtr ovr_ChallengeArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_ChallengeArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x2170D4C
    static ::StringW ovr_ChallengeArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x2170DB4
    static ::System::IntPtr ovr_ChallengeArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.String ovr_ChallengeArray_GetPreviousUrl(System.IntPtr obj)
    // Offset: 0x2170E34
    static ::StringW ovr_ChallengeArray_GetPreviousUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeArray_GetPreviousUrl_Native(System.IntPtr obj)
    // Offset: 0x2170E9C
    static ::System::IntPtr ovr_ChallengeArray_GetPreviousUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_ChallengeArray_GetSize(System.IntPtr obj)
    // Offset: 0x2170F1C
    static ::System::UIntPtr ovr_ChallengeArray_GetSize(::System::IntPtr obj);
    // static public System.UInt64 ovr_ChallengeArray_GetTotalCount(System.IntPtr obj)
    // Offset: 0x2170F9C
    static uint64_t ovr_ChallengeArray_GetTotalCount(::System::IntPtr obj);
    // static public System.Boolean ovr_ChallengeArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x217101C
    static bool ovr_ChallengeArray_HasNextPage(::System::IntPtr obj);
    // static public System.Boolean ovr_ChallengeArray_HasPreviousPage(System.IntPtr obj)
    // Offset: 0x21710A4
    static bool ovr_ChallengeArray_HasPreviousPage(::System::IntPtr obj);
    // static public System.String ovr_ChallengeEntry_GetDisplayScore(System.IntPtr obj)
    // Offset: 0x217112C
    static ::StringW ovr_ChallengeEntry_GetDisplayScore(::System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeEntry_GetDisplayScore_Native(System.IntPtr obj)
    // Offset: 0x2171194
    static ::System::IntPtr ovr_ChallengeEntry_GetDisplayScore_Native(::System::IntPtr obj);
    // static public System.Byte[] ovr_ChallengeEntry_GetExtraData(System.IntPtr obj)
    // Offset: 0x2171214
    static ::ArrayW<uint8_t> ovr_ChallengeEntry_GetExtraData(::System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeEntry_GetExtraData_Native(System.IntPtr obj)
    // Offset: 0x2171310
    static ::System::IntPtr ovr_ChallengeEntry_GetExtraData_Native(::System::IntPtr obj);
    // static public System.UInt32 ovr_ChallengeEntry_GetExtraDataLength(System.IntPtr obj)
    // Offset: 0x2171390
    static uint ovr_ChallengeEntry_GetExtraDataLength(::System::IntPtr obj);
    // static public System.Int32 ovr_ChallengeEntry_GetRank(System.IntPtr obj)
    // Offset: 0x2171410
    static int ovr_ChallengeEntry_GetRank(::System::IntPtr obj);
    // static public System.Int64 ovr_ChallengeEntry_GetScore(System.IntPtr obj)
    // Offset: 0x2171490
    static int64_t ovr_ChallengeEntry_GetScore(::System::IntPtr obj);
    // static public System.DateTime ovr_ChallengeEntry_GetTimestamp(System.IntPtr obj)
    // Offset: 0x2171510
    static ::System::DateTime ovr_ChallengeEntry_GetTimestamp(::System::IntPtr obj);
    // static private System.UInt64 ovr_ChallengeEntry_GetTimestamp_Native(System.IntPtr obj)
    // Offset: 0x2171578
    static uint64_t ovr_ChallengeEntry_GetTimestamp_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_ChallengeEntry_GetUser(System.IntPtr obj)
    // Offset: 0x21715F8
    static ::System::IntPtr ovr_ChallengeEntry_GetUser(::System::IntPtr obj);
    // static public System.IntPtr ovr_ChallengeEntryArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x2171678
    static ::System::IntPtr ovr_ChallengeEntryArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_ChallengeEntryArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x2171708
    static ::StringW ovr_ChallengeEntryArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeEntryArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x2171770
    static ::System::IntPtr ovr_ChallengeEntryArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.String ovr_ChallengeEntryArray_GetPreviousUrl(System.IntPtr obj)
    // Offset: 0x21717F0
    static ::StringW ovr_ChallengeEntryArray_GetPreviousUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_ChallengeEntryArray_GetPreviousUrl_Native(System.IntPtr obj)
    // Offset: 0x2171858
    static ::System::IntPtr ovr_ChallengeEntryArray_GetPreviousUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_ChallengeEntryArray_GetSize(System.IntPtr obj)
    // Offset: 0x21718D8
    static ::System::UIntPtr ovr_ChallengeEntryArray_GetSize(::System::IntPtr obj);
    // static public System.UInt64 ovr_ChallengeEntryArray_GetTotalCount(System.IntPtr obj)
    // Offset: 0x2171958
    static uint64_t ovr_ChallengeEntryArray_GetTotalCount(::System::IntPtr obj);
    // static public System.Boolean ovr_ChallengeEntryArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x21719D8
    static bool ovr_ChallengeEntryArray_HasNextPage(::System::IntPtr obj);
    // static public System.Boolean ovr_ChallengeEntryArray_HasPreviousPage(System.IntPtr obj)
    // Offset: 0x2171A60
    static bool ovr_ChallengeEntryArray_HasPreviousPage(::System::IntPtr obj);
    // static public System.String ovr_CloudStorage2UserDirectoryPathResponse_GetPath(System.IntPtr obj)
    // Offset: 0x2171AE8
    static ::StringW ovr_CloudStorage2UserDirectoryPathResponse_GetPath(::System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(System.IntPtr obj)
    // Offset: 0x2171B50
    static ::System::IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_CloudStorageConflictMetadata_GetLocal(System.IntPtr obj)
    // Offset: 0x2171BD0
    static ::System::IntPtr ovr_CloudStorageConflictMetadata_GetLocal(::System::IntPtr obj);
    // static public System.IntPtr ovr_CloudStorageConflictMetadata_GetRemote(System.IntPtr obj)
    // Offset: 0x2171C50
    static ::System::IntPtr ovr_CloudStorageConflictMetadata_GetRemote(::System::IntPtr obj);
    // static public System.String ovr_CloudStorageData_GetBucket(System.IntPtr obj)
    // Offset: 0x2171CD0
    static ::StringW ovr_CloudStorageData_GetBucket(::System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageData_GetBucket_Native(System.IntPtr obj)
    // Offset: 0x2171D38
    static ::System::IntPtr ovr_CloudStorageData_GetBucket_Native(::System::IntPtr obj);
    // static public System.Byte[] ovr_CloudStorageData_GetData(System.IntPtr obj)
    // Offset: 0x2171DB8
    static ::ArrayW<uint8_t> ovr_CloudStorageData_GetData(::System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageData_GetData_Native(System.IntPtr obj)
    // Offset: 0x2171EB4
    static ::System::IntPtr ovr_CloudStorageData_GetData_Native(::System::IntPtr obj);
    // static public System.UInt32 ovr_CloudStorageData_GetDataSize(System.IntPtr obj)
    // Offset: 0x2171E34
    static uint ovr_CloudStorageData_GetDataSize(::System::IntPtr obj);
    // static public System.String ovr_CloudStorageData_GetKey(System.IntPtr obj)
    // Offset: 0x2171F34
    static ::StringW ovr_CloudStorageData_GetKey(::System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageData_GetKey_Native(System.IntPtr obj)
    // Offset: 0x2171F9C
    static ::System::IntPtr ovr_CloudStorageData_GetKey_Native(::System::IntPtr obj);
    // static public System.String ovr_CloudStorageMetadata_GetBucket(System.IntPtr obj)
    // Offset: 0x217201C
    static ::StringW ovr_CloudStorageMetadata_GetBucket(::System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageMetadata_GetBucket_Native(System.IntPtr obj)
    // Offset: 0x2172084
    static ::System::IntPtr ovr_CloudStorageMetadata_GetBucket_Native(::System::IntPtr obj);
    // static public System.Int64 ovr_CloudStorageMetadata_GetCounter(System.IntPtr obj)
    // Offset: 0x2172104
    static int64_t ovr_CloudStorageMetadata_GetCounter(::System::IntPtr obj);
    // static public System.UInt32 ovr_CloudStorageMetadata_GetDataSize(System.IntPtr obj)
    // Offset: 0x2172184
    static uint ovr_CloudStorageMetadata_GetDataSize(::System::IntPtr obj);
    // static public System.String ovr_CloudStorageMetadata_GetExtraData(System.IntPtr obj)
    // Offset: 0x2172204
    static ::StringW ovr_CloudStorageMetadata_GetExtraData(::System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(System.IntPtr obj)
    // Offset: 0x217226C
    static ::System::IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(::System::IntPtr obj);
    // static public System.String ovr_CloudStorageMetadata_GetKey(System.IntPtr obj)
    // Offset: 0x21722EC
    static ::StringW ovr_CloudStorageMetadata_GetKey(::System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageMetadata_GetKey_Native(System.IntPtr obj)
    // Offset: 0x2172354
    static ::System::IntPtr ovr_CloudStorageMetadata_GetKey_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_CloudStorageMetadata_GetSaveTime(System.IntPtr obj)
    // Offset: 0x21723D4
    static uint64_t ovr_CloudStorageMetadata_GetSaveTime(::System::IntPtr obj);
    // static public Oculus.Platform.CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(System.IntPtr obj)
    // Offset: 0x2172454
    static ::Oculus::Platform::CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(::System::IntPtr obj);
    // static public System.String ovr_CloudStorageMetadata_GetVersionHandle(System.IntPtr obj)
    // Offset: 0x21724D4
    static ::StringW ovr_CloudStorageMetadata_GetVersionHandle(::System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(System.IntPtr obj)
    // Offset: 0x217253C
    static ::System::IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_CloudStorageMetadataArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x21725BC
    static ::System::IntPtr ovr_CloudStorageMetadataArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_CloudStorageMetadataArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x217264C
    static ::StringW ovr_CloudStorageMetadataArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x21726B4
    static ::System::IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_CloudStorageMetadataArray_GetSize(System.IntPtr obj)
    // Offset: 0x2172734
    static ::System::UIntPtr ovr_CloudStorageMetadataArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_CloudStorageMetadataArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x21727B4
    static bool ovr_CloudStorageMetadataArray_HasNextPage(::System::IntPtr obj);
    // static public System.String ovr_CloudStorageUpdateResponse_GetBucket(System.IntPtr obj)
    // Offset: 0x217283C
    static ::StringW ovr_CloudStorageUpdateResponse_GetBucket(::System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(System.IntPtr obj)
    // Offset: 0x21728A4
    static ::System::IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(::System::IntPtr obj);
    // static public System.String ovr_CloudStorageUpdateResponse_GetKey(System.IntPtr obj)
    // Offset: 0x2172924
    static ::StringW ovr_CloudStorageUpdateResponse_GetKey(::System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(System.IntPtr obj)
    // Offset: 0x217298C
    static ::System::IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(::System::IntPtr obj);
    // static public Oculus.Platform.CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(System.IntPtr obj)
    // Offset: 0x2172A0C
    static ::Oculus::Platform::CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(::System::IntPtr obj);
    // static public System.String ovr_CloudStorageUpdateResponse_GetVersionHandle(System.IntPtr obj)
    // Offset: 0x2172A8C
    static ::StringW ovr_CloudStorageUpdateResponse_GetVersionHandle(::System::IntPtr obj);
    // static private System.IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(System.IntPtr obj)
    // Offset: 0x2172AF4
    static ::System::IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(::System::IntPtr obj);
    // static public System.UInt32 ovr_DataStore_Contains(System.IntPtr obj, System.String key)
    // Offset: 0x2172B74
    static uint ovr_DataStore_Contains(::System::IntPtr obj, ::StringW key);
    // static private System.UInt32 ovr_DataStore_Contains_Native(System.IntPtr obj, System.IntPtr key)
    // Offset: 0x2172C30
    static uint ovr_DataStore_Contains_Native(::System::IntPtr obj, ::System::IntPtr key);
    // static public System.String ovr_DataStore_GetKey(System.IntPtr obj, System.Int32 index)
    // Offset: 0x2161178
    static ::StringW ovr_DataStore_GetKey(::System::IntPtr obj, int index);
    // static private System.IntPtr ovr_DataStore_GetKey_Native(System.IntPtr obj, System.Int32 index)
    // Offset: 0x2172CC0
    static ::System::IntPtr ovr_DataStore_GetKey_Native(::System::IntPtr obj, int index);
    // static public System.UIntPtr ovr_DataStore_GetNumKeys(System.IntPtr obj)
    // Offset: 0x21610F8
    static ::System::UIntPtr ovr_DataStore_GetNumKeys(::System::IntPtr obj);
    // static public System.String ovr_DataStore_GetValue(System.IntPtr obj, System.String key)
    // Offset: 0x21611F0
    static ::StringW ovr_DataStore_GetValue(::System::IntPtr obj, ::StringW key);
    // static private System.IntPtr ovr_DataStore_GetValue_Native(System.IntPtr obj, System.IntPtr key)
    // Offset: 0x2172D50
    static ::System::IntPtr ovr_DataStore_GetValue_Native(::System::IntPtr obj, ::System::IntPtr key);
    // static public System.String ovr_Destination_GetApiName(System.IntPtr obj)
    // Offset: 0x2172DE0
    static ::StringW ovr_Destination_GetApiName(::System::IntPtr obj);
    // static private System.IntPtr ovr_Destination_GetApiName_Native(System.IntPtr obj)
    // Offset: 0x2172E48
    static ::System::IntPtr ovr_Destination_GetApiName_Native(::System::IntPtr obj);
    // static public System.String ovr_Destination_GetDeeplinkMessage(System.IntPtr obj)
    // Offset: 0x2172EC8
    static ::StringW ovr_Destination_GetDeeplinkMessage(::System::IntPtr obj);
    // static private System.IntPtr ovr_Destination_GetDeeplinkMessage_Native(System.IntPtr obj)
    // Offset: 0x2172F30
    static ::System::IntPtr ovr_Destination_GetDeeplinkMessage_Native(::System::IntPtr obj);
    // static public System.String ovr_Destination_GetDisplayName(System.IntPtr obj)
    // Offset: 0x2172FB0
    static ::StringW ovr_Destination_GetDisplayName(::System::IntPtr obj);
    // static private System.IntPtr ovr_Destination_GetDisplayName_Native(System.IntPtr obj)
    // Offset: 0x2173018
    static ::System::IntPtr ovr_Destination_GetDisplayName_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_DestinationArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x2173098
    static ::System::IntPtr ovr_DestinationArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_DestinationArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x2173128
    static ::StringW ovr_DestinationArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_DestinationArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x2173190
    static ::System::IntPtr ovr_DestinationArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_DestinationArray_GetSize(System.IntPtr obj)
    // Offset: 0x2173210
    static ::System::UIntPtr ovr_DestinationArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_DestinationArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x2173290
    static bool ovr_DestinationArray_HasNextPage(::System::IntPtr obj);
    // static public System.Int32 ovr_Error_GetCode(System.IntPtr obj)
    // Offset: 0x2173318
    static int ovr_Error_GetCode(::System::IntPtr obj);
    // static public System.String ovr_Error_GetDisplayableMessage(System.IntPtr obj)
    // Offset: 0x2173394
    static ::StringW ovr_Error_GetDisplayableMessage(::System::IntPtr obj);
    // static private System.IntPtr ovr_Error_GetDisplayableMessage_Native(System.IntPtr obj)
    // Offset: 0x21733FC
    static ::System::IntPtr ovr_Error_GetDisplayableMessage_Native(::System::IntPtr obj);
    // static public System.Int32 ovr_Error_GetHttpCode(System.IntPtr obj)
    // Offset: 0x217347C
    static int ovr_Error_GetHttpCode(::System::IntPtr obj);
    // static public System.String ovr_Error_GetMessage(System.IntPtr obj)
    // Offset: 0x21734FC
    static ::StringW ovr_Error_GetMessage(::System::IntPtr obj);
    // static private System.IntPtr ovr_Error_GetMessage_Native(System.IntPtr obj)
    // Offset: 0x2173564
    static ::System::IntPtr ovr_Error_GetMessage_Native(::System::IntPtr obj);
    // static public System.String ovr_GroupPresenceJoinIntent_GetDeeplinkMessage(System.IntPtr obj)
    // Offset: 0x21735E4
    static ::StringW ovr_GroupPresenceJoinIntent_GetDeeplinkMessage(::System::IntPtr obj);
    // static private System.IntPtr ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native(System.IntPtr obj)
    // Offset: 0x217364C
    static ::System::IntPtr ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native(::System::IntPtr obj);
    // static public System.String ovr_GroupPresenceJoinIntent_GetDestinationApiName(System.IntPtr obj)
    // Offset: 0x21736CC
    static ::StringW ovr_GroupPresenceJoinIntent_GetDestinationApiName(::System::IntPtr obj);
    // static private System.IntPtr ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native(System.IntPtr obj)
    // Offset: 0x2173734
    static ::System::IntPtr ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native(::System::IntPtr obj);
    // static public System.String ovr_GroupPresenceJoinIntent_GetLobbySessionId(System.IntPtr obj)
    // Offset: 0x21737B4
    static ::StringW ovr_GroupPresenceJoinIntent_GetLobbySessionId(::System::IntPtr obj);
    // static private System.IntPtr ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native(System.IntPtr obj)
    // Offset: 0x217381C
    static ::System::IntPtr ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native(::System::IntPtr obj);
    // static public System.String ovr_GroupPresenceJoinIntent_GetMatchSessionId(System.IntPtr obj)
    // Offset: 0x217389C
    static ::StringW ovr_GroupPresenceJoinIntent_GetMatchSessionId(::System::IntPtr obj);
    // static private System.IntPtr ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native(System.IntPtr obj)
    // Offset: 0x2173904
    static ::System::IntPtr ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native(::System::IntPtr obj);
    // static public System.String ovr_GroupPresenceLeaveIntent_GetDestinationApiName(System.IntPtr obj)
    // Offset: 0x2173984
    static ::StringW ovr_GroupPresenceLeaveIntent_GetDestinationApiName(::System::IntPtr obj);
    // static private System.IntPtr ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native(System.IntPtr obj)
    // Offset: 0x21739EC
    static ::System::IntPtr ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native(::System::IntPtr obj);
    // static public System.String ovr_GroupPresenceLeaveIntent_GetLobbySessionId(System.IntPtr obj)
    // Offset: 0x2173A6C
    static ::StringW ovr_GroupPresenceLeaveIntent_GetLobbySessionId(::System::IntPtr obj);
    // static private System.IntPtr ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native(System.IntPtr obj)
    // Offset: 0x2173AD4
    static ::System::IntPtr ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native(::System::IntPtr obj);
    // static public System.String ovr_GroupPresenceLeaveIntent_GetMatchSessionId(System.IntPtr obj)
    // Offset: 0x2173B54
    static ::StringW ovr_GroupPresenceLeaveIntent_GetMatchSessionId(::System::IntPtr obj);
    // static private System.IntPtr ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native(System.IntPtr obj)
    // Offset: 0x2173BBC
    static ::System::IntPtr ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_HttpTransferUpdate_GetBytes(System.IntPtr obj)
    // Offset: 0x2173C3C
    static ::System::IntPtr ovr_HttpTransferUpdate_GetBytes(::System::IntPtr obj);
    // static public System.UInt64 ovr_HttpTransferUpdate_GetID(System.IntPtr obj)
    // Offset: 0x2173CBC
    static uint64_t ovr_HttpTransferUpdate_GetID(::System::IntPtr obj);
    // static public System.UIntPtr ovr_HttpTransferUpdate_GetSize(System.IntPtr obj)
    // Offset: 0x2173D3C
    static ::System::UIntPtr ovr_HttpTransferUpdate_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_HttpTransferUpdate_IsCompleted(System.IntPtr obj)
    // Offset: 0x2173DBC
    static bool ovr_HttpTransferUpdate_IsCompleted(::System::IntPtr obj);
    // static public System.String ovr_InstalledApplication_GetApplicationId(System.IntPtr obj)
    // Offset: 0x2173E44
    static ::StringW ovr_InstalledApplication_GetApplicationId(::System::IntPtr obj);
    // static private System.IntPtr ovr_InstalledApplication_GetApplicationId_Native(System.IntPtr obj)
    // Offset: 0x2173EAC
    static ::System::IntPtr ovr_InstalledApplication_GetApplicationId_Native(::System::IntPtr obj);
    // static public System.String ovr_InstalledApplication_GetPackageName(System.IntPtr obj)
    // Offset: 0x2173F2C
    static ::StringW ovr_InstalledApplication_GetPackageName(::System::IntPtr obj);
    // static private System.IntPtr ovr_InstalledApplication_GetPackageName_Native(System.IntPtr obj)
    // Offset: 0x2173F94
    static ::System::IntPtr ovr_InstalledApplication_GetPackageName_Native(::System::IntPtr obj);
    // static public System.String ovr_InstalledApplication_GetStatus(System.IntPtr obj)
    // Offset: 0x2174014
    static ::StringW ovr_InstalledApplication_GetStatus(::System::IntPtr obj);
    // static private System.IntPtr ovr_InstalledApplication_GetStatus_Native(System.IntPtr obj)
    // Offset: 0x217407C
    static ::System::IntPtr ovr_InstalledApplication_GetStatus_Native(::System::IntPtr obj);
    // static public System.Int32 ovr_InstalledApplication_GetVersionCode(System.IntPtr obj)
    // Offset: 0x21740FC
    static int ovr_InstalledApplication_GetVersionCode(::System::IntPtr obj);
    // static public System.String ovr_InstalledApplication_GetVersionName(System.IntPtr obj)
    // Offset: 0x217417C
    static ::StringW ovr_InstalledApplication_GetVersionName(::System::IntPtr obj);
    // static private System.IntPtr ovr_InstalledApplication_GetVersionName_Native(System.IntPtr obj)
    // Offset: 0x21741E4
    static ::System::IntPtr ovr_InstalledApplication_GetVersionName_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_InstalledApplicationArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x2174264
    static ::System::IntPtr ovr_InstalledApplicationArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_InstalledApplicationArray_GetSize(System.IntPtr obj)
    // Offset: 0x21742F4
    static ::System::UIntPtr ovr_InstalledApplicationArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_InvitePanelResultInfo_GetInvitesSent(System.IntPtr obj)
    // Offset: 0x2174374
    static bool ovr_InvitePanelResultInfo_GetInvitesSent(::System::IntPtr obj);
    // static public System.String ovr_LanguagePackInfo_GetEnglishName(System.IntPtr obj)
    // Offset: 0x21743FC
    static ::StringW ovr_LanguagePackInfo_GetEnglishName(::System::IntPtr obj);
    // static private System.IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(System.IntPtr obj)
    // Offset: 0x2174464
    static ::System::IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(::System::IntPtr obj);
    // static public System.String ovr_LanguagePackInfo_GetNativeName(System.IntPtr obj)
    // Offset: 0x21744E4
    static ::StringW ovr_LanguagePackInfo_GetNativeName(::System::IntPtr obj);
    // static private System.IntPtr ovr_LanguagePackInfo_GetNativeName_Native(System.IntPtr obj)
    // Offset: 0x217454C
    static ::System::IntPtr ovr_LanguagePackInfo_GetNativeName_Native(::System::IntPtr obj);
    // static public System.String ovr_LanguagePackInfo_GetTag(System.IntPtr obj)
    // Offset: 0x21745CC
    static ::StringW ovr_LanguagePackInfo_GetTag(::System::IntPtr obj);
    // static private System.IntPtr ovr_LanguagePackInfo_GetTag_Native(System.IntPtr obj)
    // Offset: 0x2174634
    static ::System::IntPtr ovr_LanguagePackInfo_GetTag_Native(::System::IntPtr obj);
    // static public System.Boolean ovr_LaunchBlockFlowResult_GetDidBlock(System.IntPtr obj)
    // Offset: 0x21746B4
    static bool ovr_LaunchBlockFlowResult_GetDidBlock(::System::IntPtr obj);
    // static public System.Boolean ovr_LaunchBlockFlowResult_GetDidCancel(System.IntPtr obj)
    // Offset: 0x217473C
    static bool ovr_LaunchBlockFlowResult_GetDidCancel(::System::IntPtr obj);
    // static public System.String ovr_LaunchDetails_GetDeeplinkMessage(System.IntPtr obj)
    // Offset: 0x21747C4
    static ::StringW ovr_LaunchDetails_GetDeeplinkMessage(::System::IntPtr obj);
    // static private System.IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(System.IntPtr obj)
    // Offset: 0x217482C
    static ::System::IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(::System::IntPtr obj);
    // static public System.String ovr_LaunchDetails_GetDestinationApiName(System.IntPtr obj)
    // Offset: 0x21748AC
    static ::StringW ovr_LaunchDetails_GetDestinationApiName(::System::IntPtr obj);
    // static private System.IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(System.IntPtr obj)
    // Offset: 0x2174914
    static ::System::IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(::System::IntPtr obj);
    // static public System.String ovr_LaunchDetails_GetLaunchSource(System.IntPtr obj)
    // Offset: 0x2174994
    static ::StringW ovr_LaunchDetails_GetLaunchSource(::System::IntPtr obj);
    // static private System.IntPtr ovr_LaunchDetails_GetLaunchSource_Native(System.IntPtr obj)
    // Offset: 0x21749FC
    static ::System::IntPtr ovr_LaunchDetails_GetLaunchSource_Native(::System::IntPtr obj);
    // static public Oculus.Platform.LaunchType ovr_LaunchDetails_GetLaunchType(System.IntPtr obj)
    // Offset: 0x2174A7C
    static ::Oculus::Platform::LaunchType ovr_LaunchDetails_GetLaunchType(::System::IntPtr obj);
    // static public System.UInt64 ovr_LaunchDetails_GetRoomID(System.IntPtr obj)
    // Offset: 0x2174AFC
    static uint64_t ovr_LaunchDetails_GetRoomID(::System::IntPtr obj);
    // static public System.String ovr_LaunchDetails_GetTrackingID(System.IntPtr obj)
    // Offset: 0x2174B7C
    static ::StringW ovr_LaunchDetails_GetTrackingID(::System::IntPtr obj);
    // static private System.IntPtr ovr_LaunchDetails_GetTrackingID_Native(System.IntPtr obj)
    // Offset: 0x2174BE4
    static ::System::IntPtr ovr_LaunchDetails_GetTrackingID_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_LaunchDetails_GetUsers(System.IntPtr obj)
    // Offset: 0x2174C64
    static ::System::IntPtr ovr_LaunchDetails_GetUsers(::System::IntPtr obj);
    // static public System.Boolean ovr_LaunchFriendRequestFlowResult_GetDidCancel(System.IntPtr obj)
    // Offset: 0x2174CE4
    static bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(::System::IntPtr obj);
    // static public System.Boolean ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(System.IntPtr obj)
    // Offset: 0x2174D6C
    static bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(::System::IntPtr obj);
    // static public System.IntPtr ovr_LaunchInvitePanelFlowResult_GetInvitedUsers(System.IntPtr obj)
    // Offset: 0x2174DF4
    static ::System::IntPtr ovr_LaunchInvitePanelFlowResult_GetInvitedUsers(::System::IntPtr obj);
    // static public System.Boolean ovr_LaunchReportFlowResult_GetDidCancel(System.IntPtr obj)
    // Offset: 0x2174E74
    static bool ovr_LaunchReportFlowResult_GetDidCancel(::System::IntPtr obj);
    // static public System.UInt64 ovr_LaunchReportFlowResult_GetUserReportId(System.IntPtr obj)
    // Offset: 0x2174EFC
    static uint64_t ovr_LaunchReportFlowResult_GetUserReportId(::System::IntPtr obj);
    // static public System.Boolean ovr_LaunchUnblockFlowResult_GetDidCancel(System.IntPtr obj)
    // Offset: 0x2174F7C
    static bool ovr_LaunchUnblockFlowResult_GetDidCancel(::System::IntPtr obj);
    // static public System.Boolean ovr_LaunchUnblockFlowResult_GetDidUnblock(System.IntPtr obj)
    // Offset: 0x2175004
    static bool ovr_LaunchUnblockFlowResult_GetDidUnblock(::System::IntPtr obj);
    // static public System.String ovr_Leaderboard_GetApiName(System.IntPtr obj)
    // Offset: 0x217508C
    static ::StringW ovr_Leaderboard_GetApiName(::System::IntPtr obj);
    // static private System.IntPtr ovr_Leaderboard_GetApiName_Native(System.IntPtr obj)
    // Offset: 0x21750F4
    static ::System::IntPtr ovr_Leaderboard_GetApiName_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_Leaderboard_GetDestination(System.IntPtr obj)
    // Offset: 0x2175174
    static ::System::IntPtr ovr_Leaderboard_GetDestination(::System::IntPtr obj);
    // static public System.UInt64 ovr_Leaderboard_GetID(System.IntPtr obj)
    // Offset: 0x21751F4
    static uint64_t ovr_Leaderboard_GetID(::System::IntPtr obj);
    // static public System.IntPtr ovr_LeaderboardArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x2175274
    static ::System::IntPtr ovr_LeaderboardArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_LeaderboardArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x2175304
    static ::StringW ovr_LeaderboardArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_LeaderboardArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x217536C
    static ::System::IntPtr ovr_LeaderboardArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_LeaderboardArray_GetSize(System.IntPtr obj)
    // Offset: 0x21753EC
    static ::System::UIntPtr ovr_LeaderboardArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_LeaderboardArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x217546C
    static bool ovr_LeaderboardArray_HasNextPage(::System::IntPtr obj);
    // static public System.String ovr_LeaderboardEntry_GetDisplayScore(System.IntPtr obj)
    // Offset: 0x21754F4
    static ::StringW ovr_LeaderboardEntry_GetDisplayScore(::System::IntPtr obj);
    // static private System.IntPtr ovr_LeaderboardEntry_GetDisplayScore_Native(System.IntPtr obj)
    // Offset: 0x217555C
    static ::System::IntPtr ovr_LeaderboardEntry_GetDisplayScore_Native(::System::IntPtr obj);
    // static public System.Byte[] ovr_LeaderboardEntry_GetExtraData(System.IntPtr obj)
    // Offset: 0x21755DC
    static ::ArrayW<uint8_t> ovr_LeaderboardEntry_GetExtraData(::System::IntPtr obj);
    // static private System.IntPtr ovr_LeaderboardEntry_GetExtraData_Native(System.IntPtr obj)
    // Offset: 0x2175658
    static ::System::IntPtr ovr_LeaderboardEntry_GetExtraData_Native(::System::IntPtr obj);
    // static public System.UInt32 ovr_LeaderboardEntry_GetExtraDataLength(System.IntPtr obj)
    // Offset: 0x2171290
    static uint ovr_LeaderboardEntry_GetExtraDataLength(::System::IntPtr obj);
    // static public System.Int32 ovr_LeaderboardEntry_GetRank(System.IntPtr obj)
    // Offset: 0x21756D8
    static int ovr_LeaderboardEntry_GetRank(::System::IntPtr obj);
    // static public System.Int64 ovr_LeaderboardEntry_GetScore(System.IntPtr obj)
    // Offset: 0x2175758
    static int64_t ovr_LeaderboardEntry_GetScore(::System::IntPtr obj);
    // static public System.IntPtr ovr_LeaderboardEntry_GetSupplementaryMetric(System.IntPtr obj)
    // Offset: 0x21757D8
    static ::System::IntPtr ovr_LeaderboardEntry_GetSupplementaryMetric(::System::IntPtr obj);
    // static public System.DateTime ovr_LeaderboardEntry_GetTimestamp(System.IntPtr obj)
    // Offset: 0x2175858
    static ::System::DateTime ovr_LeaderboardEntry_GetTimestamp(::System::IntPtr obj);
    // static private System.UInt64 ovr_LeaderboardEntry_GetTimestamp_Native(System.IntPtr obj)
    // Offset: 0x21758C0
    static uint64_t ovr_LeaderboardEntry_GetTimestamp_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_LeaderboardEntry_GetUser(System.IntPtr obj)
    // Offset: 0x2175940
    static ::System::IntPtr ovr_LeaderboardEntry_GetUser(::System::IntPtr obj);
    // static public System.IntPtr ovr_LeaderboardEntryArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x21759C0
    static ::System::IntPtr ovr_LeaderboardEntryArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_LeaderboardEntryArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x2175A50
    static ::StringW ovr_LeaderboardEntryArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x2175AB8
    static ::System::IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.String ovr_LeaderboardEntryArray_GetPreviousUrl(System.IntPtr obj)
    // Offset: 0x2175B38
    static ::StringW ovr_LeaderboardEntryArray_GetPreviousUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(System.IntPtr obj)
    // Offset: 0x2175BA0
    static ::System::IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_LeaderboardEntryArray_GetSize(System.IntPtr obj)
    // Offset: 0x2175C20
    static ::System::UIntPtr ovr_LeaderboardEntryArray_GetSize(::System::IntPtr obj);
    // static public System.UInt64 ovr_LeaderboardEntryArray_GetTotalCount(System.IntPtr obj)
    // Offset: 0x2175CA0
    static uint64_t ovr_LeaderboardEntryArray_GetTotalCount(::System::IntPtr obj);
    // static public System.Boolean ovr_LeaderboardEntryArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x2175D20
    static bool ovr_LeaderboardEntryArray_HasNextPage(::System::IntPtr obj);
    // static public System.Boolean ovr_LeaderboardEntryArray_HasPreviousPage(System.IntPtr obj)
    // Offset: 0x2175DA8
    static bool ovr_LeaderboardEntryArray_HasPreviousPage(::System::IntPtr obj);
    // static public System.Boolean ovr_LeaderboardUpdateStatus_GetDidUpdate(System.IntPtr obj)
    // Offset: 0x2175E30
    static bool ovr_LeaderboardUpdateStatus_GetDidUpdate(::System::IntPtr obj);
    // static public System.UInt64 ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId(System.IntPtr obj, System.UInt32 index)
    // Offset: 0x2175EB8
    static uint64_t ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId(::System::IntPtr obj, uint index);
    // static public System.UInt32 ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize(System.IntPtr obj)
    // Offset: 0x2175F48
    static uint ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize(::System::IntPtr obj);
    // static public System.String ovr_LinkedAccount_GetAccessToken(System.IntPtr obj)
    // Offset: 0x2175FC8
    static ::StringW ovr_LinkedAccount_GetAccessToken(::System::IntPtr obj);
    // static private System.IntPtr ovr_LinkedAccount_GetAccessToken_Native(System.IntPtr obj)
    // Offset: 0x2176030
    static ::System::IntPtr ovr_LinkedAccount_GetAccessToken_Native(::System::IntPtr obj);
    // static public Oculus.Platform.ServiceProvider ovr_LinkedAccount_GetServiceProvider(System.IntPtr obj)
    // Offset: 0x21760B0
    static ::Oculus::Platform::ServiceProvider ovr_LinkedAccount_GetServiceProvider(::System::IntPtr obj);
    // static public System.String ovr_LinkedAccount_GetUserId(System.IntPtr obj)
    // Offset: 0x2176130
    static ::StringW ovr_LinkedAccount_GetUserId(::System::IntPtr obj);
    // static private System.IntPtr ovr_LinkedAccount_GetUserId_Native(System.IntPtr obj)
    // Offset: 0x2176198
    static ::System::IntPtr ovr_LinkedAccount_GetUserId_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_LinkedAccountArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x2176218
    static ::System::IntPtr ovr_LinkedAccountArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_LinkedAccountArray_GetSize(System.IntPtr obj)
    // Offset: 0x21762A8
    static ::System::UIntPtr ovr_LinkedAccountArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingApplicationStatus_GetStreamingEnabled(System.IntPtr obj)
    // Offset: 0x2176328
    static bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(::System::IntPtr obj);
    // static public Oculus.Platform.LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(System.IntPtr obj)
    // Offset: 0x21763B0
    static ::Oculus::Platform::LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(::System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingStatus_GetCommentsVisible(System.IntPtr obj)
    // Offset: 0x2176430
    static bool ovr_LivestreamingStatus_GetCommentsVisible(::System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingStatus_GetIsPaused(System.IntPtr obj)
    // Offset: 0x21764B8
    static bool ovr_LivestreamingStatus_GetIsPaused(::System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingStatus_GetLivestreamingEnabled(System.IntPtr obj)
    // Offset: 0x2176540
    static bool ovr_LivestreamingStatus_GetLivestreamingEnabled(::System::IntPtr obj);
    // static public System.Int32 ovr_LivestreamingStatus_GetLivestreamingType(System.IntPtr obj)
    // Offset: 0x21765C8
    static int ovr_LivestreamingStatus_GetLivestreamingType(::System::IntPtr obj);
    // static public System.Boolean ovr_LivestreamingStatus_GetMicEnabled(System.IntPtr obj)
    // Offset: 0x2176648
    static bool ovr_LivestreamingStatus_GetMicEnabled(::System::IntPtr obj);
    // static public System.Int32 ovr_LivestreamingVideoStats_GetCommentCount(System.IntPtr obj)
    // Offset: 0x21766D0
    static int ovr_LivestreamingVideoStats_GetCommentCount(::System::IntPtr obj);
    // static public System.Int32 ovr_LivestreamingVideoStats_GetReactionCount(System.IntPtr obj)
    // Offset: 0x2176750
    static int ovr_LivestreamingVideoStats_GetReactionCount(::System::IntPtr obj);
    // static public System.String ovr_LivestreamingVideoStats_GetTotalViews(System.IntPtr obj)
    // Offset: 0x21767D0
    static ::StringW ovr_LivestreamingVideoStats_GetTotalViews(::System::IntPtr obj);
    // static private System.IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(System.IntPtr obj)
    // Offset: 0x2176838
    static ::System::IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(System.IntPtr obj)
    // Offset: 0x21768B8
    static ::System::IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(::System::IntPtr obj);
    // static public System.Double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(System.IntPtr obj)
    // Offset: 0x2176938
    static double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(::System::IntPtr obj);
    // static public System.Boolean ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(System.IntPtr obj)
    // Offset: 0x21769B8
    static bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(::System::IntPtr obj);
    // static public System.Double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(System.IntPtr obj)
    // Offset: 0x2176A40
    static double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(::System::IntPtr obj);
    // static public System.Double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(System.IntPtr obj)
    // Offset: 0x2176AC0
    static double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(::System::IntPtr obj);
    // static public System.Double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(System.IntPtr obj)
    // Offset: 0x2176B40
    static double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(::System::IntPtr obj);
    // static public System.String ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(System.IntPtr obj)
    // Offset: 0x2176BC0
    static ::StringW ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(::System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(System.IntPtr obj)
    // Offset: 0x2176C28
    static ::System::IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x2176CA8
    static ::System::IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(System.IntPtr obj)
    // Offset: 0x2176D38
    static ::System::UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(::System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(System.IntPtr obj)
    // Offset: 0x2176DB8
    static ::System::IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingBrowseResult_GetRooms(System.IntPtr obj)
    // Offset: 0x2176E38
    static ::System::IntPtr ovr_MatchmakingBrowseResult_GetRooms(::System::IntPtr obj);
    // static public System.String ovr_MatchmakingCandidate_GetEntryHash(System.IntPtr obj)
    // Offset: 0x2176EB8
    static ::StringW ovr_MatchmakingCandidate_GetEntryHash(::System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(System.IntPtr obj)
    // Offset: 0x2176F20
    static ::System::IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_MatchmakingCandidate_GetUserId(System.IntPtr obj)
    // Offset: 0x2176FA0
    static uint64_t ovr_MatchmakingCandidate_GetUserId(::System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingCandidateArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x2177020
    static ::System::IntPtr ovr_MatchmakingCandidateArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_MatchmakingCandidateArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x21770B0
    static ::StringW ovr_MatchmakingCandidateArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x2177118
    static ::System::IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_MatchmakingCandidateArray_GetSize(System.IntPtr obj)
    // Offset: 0x2177198
    static ::System::UIntPtr ovr_MatchmakingCandidateArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_MatchmakingCandidateArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x2177218
    static bool ovr_MatchmakingCandidateArray_HasNextPage(::System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(System.IntPtr obj)
    // Offset: 0x21772A0
    static ::System::IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(::System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingEnqueueResult_GetAverageWait(System.IntPtr obj)
    // Offset: 0x2177320
    static uint ovr_MatchmakingEnqueueResult_GetAverageWait(::System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(System.IntPtr obj)
    // Offset: 0x21773A0
    static uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(::System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(System.IntPtr obj)
    // Offset: 0x2177420
    static uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(::System::IntPtr obj);
    // static public System.String ovr_MatchmakingEnqueueResult_GetPool(System.IntPtr obj)
    // Offset: 0x21774A0
    static ::StringW ovr_MatchmakingEnqueueResult_GetPool(::System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(System.IntPtr obj)
    // Offset: 0x2177508
    static ::System::IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(::System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(System.IntPtr obj)
    // Offset: 0x2177588
    static uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(::System::IntPtr obj);
    // static public System.String ovr_MatchmakingEnqueueResult_GetRequestHash(System.IntPtr obj)
    // Offset: 0x2177608
    static ::StringW ovr_MatchmakingEnqueueResult_GetRequestHash(::System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(System.IntPtr obj)
    // Offset: 0x2177670
    static ::System::IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(System.IntPtr obj)
    // Offset: 0x21776F0
    static ::System::IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(System.IntPtr obj)
    // Offset: 0x2177770
    static ::System::IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(::System::IntPtr obj);
    // static public System.UInt64 ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(System.IntPtr obj, System.UInt32 index)
    // Offset: 0x21777F0
    static uint64_t ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(::System::IntPtr obj, uint index);
    // static public System.UInt32 ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(System.IntPtr obj)
    // Offset: 0x2177880
    static uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(::System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(System.IntPtr obj)
    // Offset: 0x2177900
    static ::System::IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(::System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueuedUser_GetUser(System.IntPtr obj)
    // Offset: 0x2177980
    static ::System::IntPtr ovr_MatchmakingEnqueuedUser_GetUser(::System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x2177A00
    static ::System::IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(System.IntPtr obj)
    // Offset: 0x2177A90
    static ::System::UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(::System::IntPtr obj);
    // static public System.UInt64 ovr_MatchmakingNotification_GetAddedByUserId(System.IntPtr obj)
    // Offset: 0x2177B10
    static uint64_t ovr_MatchmakingNotification_GetAddedByUserId(::System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingNotification_GetRoom(System.IntPtr obj)
    // Offset: 0x2177B90
    static ::System::IntPtr ovr_MatchmakingNotification_GetRoom(::System::IntPtr obj);
    // static public System.String ovr_MatchmakingNotification_GetTraceId(System.IntPtr obj)
    // Offset: 0x2177C10
    static ::StringW ovr_MatchmakingNotification_GetTraceId(::System::IntPtr obj);
    // static private System.IntPtr ovr_MatchmakingNotification_GetTraceId_Native(System.IntPtr obj)
    // Offset: 0x2177C78
    static ::System::IntPtr ovr_MatchmakingNotification_GetTraceId_Native(::System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingRoom_GetPingTime(System.IntPtr obj)
    // Offset: 0x2177CF8
    static uint ovr_MatchmakingRoom_GetPingTime(::System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingRoom_GetRoom(System.IntPtr obj)
    // Offset: 0x2177D78
    static ::System::IntPtr ovr_MatchmakingRoom_GetRoom(::System::IntPtr obj);
    // static public System.Boolean ovr_MatchmakingRoom_HasPingTime(System.IntPtr obj)
    // Offset: 0x2177DF8
    static bool ovr_MatchmakingRoom_HasPingTime(::System::IntPtr obj);
    // static public System.IntPtr ovr_MatchmakingRoomArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x2177E80
    static ::System::IntPtr ovr_MatchmakingRoomArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_MatchmakingRoomArray_GetSize(System.IntPtr obj)
    // Offset: 0x2177F10
    static ::System::UIntPtr ovr_MatchmakingRoomArray_GetSize(::System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingStats_GetDrawCount(System.IntPtr obj)
    // Offset: 0x2177F90
    static uint ovr_MatchmakingStats_GetDrawCount(::System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingStats_GetLossCount(System.IntPtr obj)
    // Offset: 0x2178010
    static uint ovr_MatchmakingStats_GetLossCount(::System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingStats_GetSkillLevel(System.IntPtr obj)
    // Offset: 0x2178090
    static uint ovr_MatchmakingStats_GetSkillLevel(::System::IntPtr obj);
    // static public System.Double ovr_MatchmakingStats_GetSkillMean(System.IntPtr obj)
    // Offset: 0x2178110
    static double ovr_MatchmakingStats_GetSkillMean(::System::IntPtr obj);
    // static public System.Double ovr_MatchmakingStats_GetSkillStandardDeviation(System.IntPtr obj)
    // Offset: 0x2178190
    static double ovr_MatchmakingStats_GetSkillStandardDeviation(::System::IntPtr obj);
    // static public System.UInt32 ovr_MatchmakingStats_GetWinCount(System.IntPtr obj)
    // Offset: 0x2178210
    static uint ovr_MatchmakingStats_GetWinCount(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAbuseReportRecording(System.IntPtr obj)
    // Offset: 0x2178290
    static ::System::IntPtr ovr_Message_GetAbuseReportRecording(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAchievementDefinitionArray(System.IntPtr obj)
    // Offset: 0x2178310
    static ::System::IntPtr ovr_Message_GetAchievementDefinitionArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAchievementProgressArray(System.IntPtr obj)
    // Offset: 0x2178390
    static ::System::IntPtr ovr_Message_GetAchievementProgressArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAchievementUpdate(System.IntPtr obj)
    // Offset: 0x2178410
    static ::System::IntPtr ovr_Message_GetAchievementUpdate(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetApplicationVersion(System.IntPtr obj)
    // Offset: 0x2178490
    static ::System::IntPtr ovr_Message_GetApplicationVersion(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetDetails(System.IntPtr obj)
    // Offset: 0x2178510
    static ::System::IntPtr ovr_Message_GetAssetDetails(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetDetailsArray(System.IntPtr obj)
    // Offset: 0x2178590
    static ::System::IntPtr ovr_Message_GetAssetDetailsArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetFileDeleteResult(System.IntPtr obj)
    // Offset: 0x2178610
    static ::System::IntPtr ovr_Message_GetAssetFileDeleteResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetFileDownloadCancelResult(System.IntPtr obj)
    // Offset: 0x2178690
    static ::System::IntPtr ovr_Message_GetAssetFileDownloadCancelResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetFileDownloadResult(System.IntPtr obj)
    // Offset: 0x2178710
    static ::System::IntPtr ovr_Message_GetAssetFileDownloadResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetAssetFileDownloadUpdate(System.IntPtr obj)
    // Offset: 0x2178790
    static ::System::IntPtr ovr_Message_GetAssetFileDownloadUpdate(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCalApplicationFinalized(System.IntPtr obj)
    // Offset: 0x2178810
    static ::System::IntPtr ovr_Message_GetCalApplicationFinalized(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCalApplicationProposed(System.IntPtr obj)
    // Offset: 0x2178890
    static ::System::IntPtr ovr_Message_GetCalApplicationProposed(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCalApplicationSuggestionArray(System.IntPtr obj)
    // Offset: 0x2178910
    static ::System::IntPtr ovr_Message_GetCalApplicationSuggestionArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetChallenge(System.IntPtr obj)
    // Offset: 0x2178990
    static ::System::IntPtr ovr_Message_GetChallenge(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetChallengeArray(System.IntPtr obj)
    // Offset: 0x2178A10
    static ::System::IntPtr ovr_Message_GetChallengeArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetChallengeEntryArray(System.IntPtr obj)
    // Offset: 0x2178A90
    static ::System::IntPtr ovr_Message_GetChallengeEntryArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCloudStorageConflictMetadata(System.IntPtr obj)
    // Offset: 0x2178B10
    static ::System::IntPtr ovr_Message_GetCloudStorageConflictMetadata(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCloudStorageData(System.IntPtr obj)
    // Offset: 0x2178B90
    static ::System::IntPtr ovr_Message_GetCloudStorageData(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCloudStorageMetadata(System.IntPtr obj)
    // Offset: 0x2178C10
    static ::System::IntPtr ovr_Message_GetCloudStorageMetadata(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCloudStorageMetadataArray(System.IntPtr obj)
    // Offset: 0x2178C90
    static ::System::IntPtr ovr_Message_GetCloudStorageMetadataArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetCloudStorageUpdateResponse(System.IntPtr obj)
    // Offset: 0x2178D10
    static ::System::IntPtr ovr_Message_GetCloudStorageUpdateResponse(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetDataStore(System.IntPtr obj)
    // Offset: 0x2178D90
    static ::System::IntPtr ovr_Message_GetDataStore(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetDestinationArray(System.IntPtr obj)
    // Offset: 0x2178E10
    static ::System::IntPtr ovr_Message_GetDestinationArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetError(System.IntPtr obj)
    // Offset: 0x2178E90
    static ::System::IntPtr ovr_Message_GetError(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetGroupPresenceJoinIntent(System.IntPtr obj)
    // Offset: 0x2178F10
    static ::System::IntPtr ovr_Message_GetGroupPresenceJoinIntent(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetGroupPresenceLeaveIntent(System.IntPtr obj)
    // Offset: 0x2178F90
    static ::System::IntPtr ovr_Message_GetGroupPresenceLeaveIntent(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetHttpTransferUpdate(System.IntPtr obj)
    // Offset: 0x2179010
    static ::System::IntPtr ovr_Message_GetHttpTransferUpdate(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetInstalledApplicationArray(System.IntPtr obj)
    // Offset: 0x2179090
    static ::System::IntPtr ovr_Message_GetInstalledApplicationArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetInvitePanelResultInfo(System.IntPtr obj)
    // Offset: 0x2179110
    static ::System::IntPtr ovr_Message_GetInvitePanelResultInfo(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchBlockFlowResult(System.IntPtr obj)
    // Offset: 0x2179190
    static ::System::IntPtr ovr_Message_GetLaunchBlockFlowResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(System.IntPtr obj)
    // Offset: 0x2179210
    static ::System::IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchInvitePanelFlowResult(System.IntPtr obj)
    // Offset: 0x2179290
    static ::System::IntPtr ovr_Message_GetLaunchInvitePanelFlowResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchReportFlowResult(System.IntPtr obj)
    // Offset: 0x2179310
    static ::System::IntPtr ovr_Message_GetLaunchReportFlowResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLaunchUnblockFlowResult(System.IntPtr obj)
    // Offset: 0x2179390
    static ::System::IntPtr ovr_Message_GetLaunchUnblockFlowResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLeaderboardArray(System.IntPtr obj)
    // Offset: 0x2179410
    static ::System::IntPtr ovr_Message_GetLeaderboardArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLeaderboardEntryArray(System.IntPtr obj)
    // Offset: 0x2179490
    static ::System::IntPtr ovr_Message_GetLeaderboardEntryArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLeaderboardUpdateStatus(System.IntPtr obj)
    // Offset: 0x2179510
    static ::System::IntPtr ovr_Message_GetLeaderboardUpdateStatus(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLinkedAccountArray(System.IntPtr obj)
    // Offset: 0x2179590
    static ::System::IntPtr ovr_Message_GetLinkedAccountArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLivestreamingApplicationStatus(System.IntPtr obj)
    // Offset: 0x2179610
    static ::System::IntPtr ovr_Message_GetLivestreamingApplicationStatus(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLivestreamingStartResult(System.IntPtr obj)
    // Offset: 0x2179690
    static ::System::IntPtr ovr_Message_GetLivestreamingStartResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLivestreamingStatus(System.IntPtr obj)
    // Offset: 0x2179710
    static ::System::IntPtr ovr_Message_GetLivestreamingStatus(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetLivestreamingVideoStats(System.IntPtr obj)
    // Offset: 0x2179790
    static ::System::IntPtr ovr_Message_GetLivestreamingVideoStats(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingAdminSnapshot(System.IntPtr obj)
    // Offset: 0x2179810
    static ::System::IntPtr ovr_Message_GetMatchmakingAdminSnapshot(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingBrowseResult(System.IntPtr obj)
    // Offset: 0x2179890
    static ::System::IntPtr ovr_Message_GetMatchmakingBrowseResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingEnqueueResult(System.IntPtr obj)
    // Offset: 0x2179910
    static ::System::IntPtr ovr_Message_GetMatchmakingEnqueueResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(System.IntPtr obj)
    // Offset: 0x2179990
    static ::System::IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingRoomArray(System.IntPtr obj)
    // Offset: 0x2179A10
    static ::System::IntPtr ovr_Message_GetMatchmakingRoomArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMatchmakingStats(System.IntPtr obj)
    // Offset: 0x2179A90
    static ::System::IntPtr ovr_Message_GetMatchmakingStats(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetMicrophoneAvailabilityState(System.IntPtr obj)
    // Offset: 0x2179B10
    static ::System::IntPtr ovr_Message_GetMicrophoneAvailabilityState(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNativeMessage(System.IntPtr obj)
    // Offset: 0x2179B90
    static ::System::IntPtr ovr_Message_GetNativeMessage(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncConnection(System.IntPtr obj)
    // Offset: 0x2179C10
    static ::System::IntPtr ovr_Message_GetNetSyncConnection(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncSessionArray(System.IntPtr obj)
    // Offset: 0x2179C90
    static ::System::IntPtr ovr_Message_GetNetSyncSessionArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncSessionsChangedNotification(System.IntPtr obj)
    // Offset: 0x2179D10
    static ::System::IntPtr ovr_Message_GetNetSyncSessionsChangedNotification(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncSetSessionPropertyResult(System.IntPtr obj)
    // Offset: 0x2179D90
    static ::System::IntPtr ovr_Message_GetNetSyncSetSessionPropertyResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetSyncVoipAttenuationValueArray(System.IntPtr obj)
    // Offset: 0x2179E10
    static ::System::IntPtr ovr_Message_GetNetSyncVoipAttenuationValueArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetNetworkingPeer(System.IntPtr obj)
    // Offset: 0x2179E90
    static ::System::IntPtr ovr_Message_GetNetworkingPeer(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetOrgScopedID(System.IntPtr obj)
    // Offset: 0x2179F10
    static ::System::IntPtr ovr_Message_GetOrgScopedID(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetParty(System.IntPtr obj)
    // Offset: 0x2179F90
    static ::System::IntPtr ovr_Message_GetParty(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPartyID(System.IntPtr obj)
    // Offset: 0x217A010
    static ::System::IntPtr ovr_Message_GetPartyID(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPartyUpdateNotification(System.IntPtr obj)
    // Offset: 0x217A090
    static ::System::IntPtr ovr_Message_GetPartyUpdateNotification(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPidArray(System.IntPtr obj)
    // Offset: 0x217A110
    static ::System::IntPtr ovr_Message_GetPidArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPingResult(System.IntPtr obj)
    // Offset: 0x217A190
    static ::System::IntPtr ovr_Message_GetPingResult(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPlatformInitialize(System.IntPtr obj)
    // Offset: 0x217A210
    static ::System::IntPtr ovr_Message_GetPlatformInitialize(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetProductArray(System.IntPtr obj)
    // Offset: 0x217A290
    static ::System::IntPtr ovr_Message_GetProductArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPurchase(System.IntPtr obj)
    // Offset: 0x217A310
    static ::System::IntPtr ovr_Message_GetPurchase(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetPurchaseArray(System.IntPtr obj)
    // Offset: 0x217A390
    static ::System::IntPtr ovr_Message_GetPurchaseArray(::System::IntPtr obj);
    // static public System.UInt64 ovr_Message_GetRequestID(System.IntPtr obj)
    // Offset: 0x217A410
    static uint64_t ovr_Message_GetRequestID(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetRoom(System.IntPtr obj)
    // Offset: 0x217A490
    static ::System::IntPtr ovr_Message_GetRoom(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetRoomArray(System.IntPtr obj)
    // Offset: 0x217A510
    static ::System::IntPtr ovr_Message_GetRoomArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetRoomInviteNotification(System.IntPtr obj)
    // Offset: 0x217A590
    static ::System::IntPtr ovr_Message_GetRoomInviteNotification(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetRoomInviteNotificationArray(System.IntPtr obj)
    // Offset: 0x217A610
    static ::System::IntPtr ovr_Message_GetRoomInviteNotificationArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetSdkAccountArray(System.IntPtr obj)
    // Offset: 0x217A690
    static ::System::IntPtr ovr_Message_GetSdkAccountArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetShareMediaResult(System.IntPtr obj)
    // Offset: 0x217A710
    static ::System::IntPtr ovr_Message_GetShareMediaResult(::System::IntPtr obj);
    // static public System.String ovr_Message_GetString(System.IntPtr obj)
    // Offset: 0x217A790
    static ::StringW ovr_Message_GetString(::System::IntPtr obj);
    // static private System.IntPtr ovr_Message_GetString_Native(System.IntPtr obj)
    // Offset: 0x217A7F8
    static ::System::IntPtr ovr_Message_GetString_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetSystemPermission(System.IntPtr obj)
    // Offset: 0x217A878
    static ::System::IntPtr ovr_Message_GetSystemPermission(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetSystemVoipState(System.IntPtr obj)
    // Offset: 0x217A8F8
    static ::System::IntPtr ovr_Message_GetSystemVoipState(::System::IntPtr obj);
    // static public Oculus.Platform.Message/Oculus.Platform.MessageType ovr_Message_GetType(System.IntPtr obj)
    // Offset: 0x217A978
    static ::Oculus::Platform::Message::MessageType ovr_Message_GetType(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUser(System.IntPtr obj)
    // Offset: 0x217A9F8
    static ::System::IntPtr ovr_Message_GetUser(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserAndRoomArray(System.IntPtr obj)
    // Offset: 0x217AA78
    static ::System::IntPtr ovr_Message_GetUserAndRoomArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserArray(System.IntPtr obj)
    // Offset: 0x217AAF8
    static ::System::IntPtr ovr_Message_GetUserArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserDataStoreUpdateResponse(System.IntPtr obj)
    // Offset: 0x217AB78
    static ::System::IntPtr ovr_Message_GetUserDataStoreUpdateResponse(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserProof(System.IntPtr obj)
    // Offset: 0x217ABF8
    static ::System::IntPtr ovr_Message_GetUserProof(::System::IntPtr obj);
    // static public System.IntPtr ovr_Message_GetUserReportID(System.IntPtr obj)
    // Offset: 0x217AC78
    static ::System::IntPtr ovr_Message_GetUserReportID(::System::IntPtr obj);
    // static public System.Boolean ovr_Message_IsError(System.IntPtr obj)
    // Offset: 0x217ACF8
    static bool ovr_Message_IsError(::System::IntPtr obj);
    // static public System.UIntPtr ovr_Microphone_GetNumSamplesAvailable(System.IntPtr obj)
    // Offset: 0x217AD80
    static ::System::UIntPtr ovr_Microphone_GetNumSamplesAvailable(::System::IntPtr obj);
    // static public System.UIntPtr ovr_Microphone_GetOutputBufferMaxSize(System.IntPtr obj)
    // Offset: 0x217AE00
    static ::System::UIntPtr ovr_Microphone_GetOutputBufferMaxSize(::System::IntPtr obj);
    // static public System.UIntPtr ovr_Microphone_GetPCM(System.IntPtr obj, System.Int16[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x217AE80
    static ::System::UIntPtr ovr_Microphone_GetPCM(::System::IntPtr obj, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_Microphone_GetPCMFloat(System.IntPtr obj, System.Single[] outputBuffer, System.UIntPtr outputBufferNumElements)
    // Offset: 0x217AF20
    static ::System::UIntPtr ovr_Microphone_GetPCMFloat(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements);
    // static public System.UIntPtr ovr_Microphone_ReadData(System.IntPtr obj, System.Single[] outputBuffer, System.UIntPtr outputBufferSize)
    // Offset: 0x217AFC0
    static ::System::UIntPtr ovr_Microphone_ReadData(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferSize);
    // static public System.Void ovr_Microphone_SetAcceptableRecordingDelayHint(System.IntPtr obj, System.UIntPtr delayMs)
    // Offset: 0x217B060
    static void ovr_Microphone_SetAcceptableRecordingDelayHint(::System::IntPtr obj, ::System::UIntPtr delayMs);
    // static public System.Void ovr_Microphone_Start(System.IntPtr obj)
    // Offset: 0x217B0F0
    static void ovr_Microphone_Start(::System::IntPtr obj);
    // static public System.Void ovr_Microphone_Stop(System.IntPtr obj)
    // Offset: 0x217B170
    static void ovr_Microphone_Stop(::System::IntPtr obj);
    // static public System.Boolean ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable(System.IntPtr obj)
    // Offset: 0x217B1F0
    static bool ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable(::System::IntPtr obj);
    // static public System.Int64 ovr_NetSyncConnection_GetConnectionId(System.IntPtr obj)
    // Offset: 0x217B278
    static int64_t ovr_NetSyncConnection_GetConnectionId(::System::IntPtr obj);
    // static public Oculus.Platform.NetSyncDisconnectReason ovr_NetSyncConnection_GetDisconnectReason(System.IntPtr obj)
    // Offset: 0x217B2F8
    static ::Oculus::Platform::NetSyncDisconnectReason ovr_NetSyncConnection_GetDisconnectReason(::System::IntPtr obj);
    // static public System.UInt64 ovr_NetSyncConnection_GetSessionId(System.IntPtr obj)
    // Offset: 0x217B378
    static uint64_t ovr_NetSyncConnection_GetSessionId(::System::IntPtr obj);
    // static public Oculus.Platform.NetSyncConnectionStatus ovr_NetSyncConnection_GetStatus(System.IntPtr obj)
    // Offset: 0x217B3F8
    static ::Oculus::Platform::NetSyncConnectionStatus ovr_NetSyncConnection_GetStatus(::System::IntPtr obj);
    // static public System.String ovr_NetSyncConnection_GetZoneId(System.IntPtr obj)
    // Offset: 0x217B478
    static ::StringW ovr_NetSyncConnection_GetZoneId(::System::IntPtr obj);
    // static private System.IntPtr ovr_NetSyncConnection_GetZoneId_Native(System.IntPtr obj)
    // Offset: 0x217B4E0
    static ::System::IntPtr ovr_NetSyncConnection_GetZoneId_Native(::System::IntPtr obj);
    // static public System.Int64 ovr_NetSyncSession_GetConnectionId(System.IntPtr obj)
    // Offset: 0x217B560
    static int64_t ovr_NetSyncSession_GetConnectionId(::System::IntPtr obj);
    // static public System.Boolean ovr_NetSyncSession_GetMuted(System.IntPtr obj)
    // Offset: 0x217B5E0
    static bool ovr_NetSyncSession_GetMuted(::System::IntPtr obj);
    // static public System.UInt64 ovr_NetSyncSession_GetSessionId(System.IntPtr obj)
    // Offset: 0x217B668
    static uint64_t ovr_NetSyncSession_GetSessionId(::System::IntPtr obj);
    // static public System.UInt64 ovr_NetSyncSession_GetUserId(System.IntPtr obj)
    // Offset: 0x217B6E8
    static uint64_t ovr_NetSyncSession_GetUserId(::System::IntPtr obj);
    // static public System.String ovr_NetSyncSession_GetVoipGroup(System.IntPtr obj)
    // Offset: 0x217B768
    static ::StringW ovr_NetSyncSession_GetVoipGroup(::System::IntPtr obj);
    // static private System.IntPtr ovr_NetSyncSession_GetVoipGroup_Native(System.IntPtr obj)
    // Offset: 0x217B7D0
    static ::System::IntPtr ovr_NetSyncSession_GetVoipGroup_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_NetSyncSessionArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x217B850
    static ::System::IntPtr ovr_NetSyncSessionArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_NetSyncSessionArray_GetSize(System.IntPtr obj)
    // Offset: 0x217B8E0
    static ::System::UIntPtr ovr_NetSyncSessionArray_GetSize(::System::IntPtr obj);
    // static public System.Int64 ovr_NetSyncSessionsChangedNotification_GetConnectionId(System.IntPtr obj)
    // Offset: 0x217B960
    static int64_t ovr_NetSyncSessionsChangedNotification_GetConnectionId(::System::IntPtr obj);
    // static public System.IntPtr ovr_NetSyncSessionsChangedNotification_GetSessions(System.IntPtr obj)
    // Offset: 0x217B9E0
    static ::System::IntPtr ovr_NetSyncSessionsChangedNotification_GetSessions(::System::IntPtr obj);
    // static public System.IntPtr ovr_NetSyncSetSessionPropertyResult_GetSession(System.IntPtr obj)
    // Offset: 0x217BA60
    static ::System::IntPtr ovr_NetSyncSetSessionPropertyResult_GetSession(::System::IntPtr obj);
    // static public System.Single ovr_NetSyncVoipAttenuationValue_GetDecibels(System.IntPtr obj)
    // Offset: 0x217BAE0
    static float ovr_NetSyncVoipAttenuationValue_GetDecibels(::System::IntPtr obj);
    // static public System.Single ovr_NetSyncVoipAttenuationValue_GetDistance(System.IntPtr obj)
    // Offset: 0x217BB60
    static float ovr_NetSyncVoipAttenuationValue_GetDistance(::System::IntPtr obj);
    // static public System.IntPtr ovr_NetSyncVoipAttenuationValueArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x217BBE0
    static ::System::IntPtr ovr_NetSyncVoipAttenuationValueArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_NetSyncVoipAttenuationValueArray_GetSize(System.IntPtr obj)
    // Offset: 0x217BC70
    static ::System::UIntPtr ovr_NetSyncVoipAttenuationValueArray_GetSize(::System::IntPtr obj);
    // static public System.UInt64 ovr_NetworkingPeer_GetID(System.IntPtr obj)
    // Offset: 0x217BCF0
    static uint64_t ovr_NetworkingPeer_GetID(::System::IntPtr obj);
    // static public Oculus.Platform.PeerConnectionState ovr_NetworkingPeer_GetState(System.IntPtr obj)
    // Offset: 0x217BD70
    static ::Oculus::Platform::PeerConnectionState ovr_NetworkingPeer_GetState(::System::IntPtr obj);
    // static public System.UInt64 ovr_OrgScopedID_GetID(System.IntPtr obj)
    // Offset: 0x217BDF0
    static uint64_t ovr_OrgScopedID_GetID(::System::IntPtr obj);
    // static public System.Void ovr_Packet_Free(System.IntPtr obj)
    // Offset: 0x217BE70
    static void ovr_Packet_Free(::System::IntPtr obj);
    // static public System.IntPtr ovr_Packet_GetBytes(System.IntPtr obj)
    // Offset: 0x217BEF0
    static ::System::IntPtr ovr_Packet_GetBytes(::System::IntPtr obj);
    // static public Oculus.Platform.SendPolicy ovr_Packet_GetSendPolicy(System.IntPtr obj)
    // Offset: 0x217BF70
    static ::Oculus::Platform::SendPolicy ovr_Packet_GetSendPolicy(::System::IntPtr obj);
    // static public System.UInt64 ovr_Packet_GetSenderID(System.IntPtr obj)
    // Offset: 0x217BFF0
    static uint64_t ovr_Packet_GetSenderID(::System::IntPtr obj);
    // static public System.UIntPtr ovr_Packet_GetSize(System.IntPtr obj)
    // Offset: 0x217C070
    static ::System::UIntPtr ovr_Packet_GetSize(::System::IntPtr obj);
    // static public System.UInt64 ovr_Party_GetID(System.IntPtr obj)
    // Offset: 0x217C0F0
    static uint64_t ovr_Party_GetID(::System::IntPtr obj);
    // static public System.IntPtr ovr_Party_GetInvitedUsers(System.IntPtr obj)
    // Offset: 0x217C170
    static ::System::IntPtr ovr_Party_GetInvitedUsers(::System::IntPtr obj);
    // static public System.IntPtr ovr_Party_GetLeader(System.IntPtr obj)
    // Offset: 0x217C1F0
    static ::System::IntPtr ovr_Party_GetLeader(::System::IntPtr obj);
    // static public System.IntPtr ovr_Party_GetRoom(System.IntPtr obj)
    // Offset: 0x217C270
    static ::System::IntPtr ovr_Party_GetRoom(::System::IntPtr obj);
    // static public System.IntPtr ovr_Party_GetUsers(System.IntPtr obj)
    // Offset: 0x217C2EC
    static ::System::IntPtr ovr_Party_GetUsers(::System::IntPtr obj);
    // static public System.UInt64 ovr_PartyID_GetID(System.IntPtr obj)
    // Offset: 0x217C36C
    static uint64_t ovr_PartyID_GetID(::System::IntPtr obj);
    // static public Oculus.Platform.PartyUpdateAction ovr_PartyUpdateNotification_GetAction(System.IntPtr obj)
    // Offset: 0x217C3E8
    static ::Oculus::Platform::PartyUpdateAction ovr_PartyUpdateNotification_GetAction(::System::IntPtr obj);
    // static public System.UInt64 ovr_PartyUpdateNotification_GetPartyId(System.IntPtr obj)
    // Offset: 0x217C468
    static uint64_t ovr_PartyUpdateNotification_GetPartyId(::System::IntPtr obj);
    // static public System.UInt64 ovr_PartyUpdateNotification_GetSenderId(System.IntPtr obj)
    // Offset: 0x217C4E8
    static uint64_t ovr_PartyUpdateNotification_GetSenderId(::System::IntPtr obj);
    // static public System.String ovr_PartyUpdateNotification_GetUpdateTimestamp(System.IntPtr obj)
    // Offset: 0x217C568
    static ::StringW ovr_PartyUpdateNotification_GetUpdateTimestamp(::System::IntPtr obj);
    // static private System.IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(System.IntPtr obj)
    // Offset: 0x217C5D0
    static ::System::IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(::System::IntPtr obj);
    // static public System.String ovr_PartyUpdateNotification_GetUserAlias(System.IntPtr obj)
    // Offset: 0x217C650
    static ::StringW ovr_PartyUpdateNotification_GetUserAlias(::System::IntPtr obj);
    // static private System.IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(System.IntPtr obj)
    // Offset: 0x217C6B8
    static ::System::IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_PartyUpdateNotification_GetUserId(System.IntPtr obj)
    // Offset: 0x217C738
    static uint64_t ovr_PartyUpdateNotification_GetUserId(::System::IntPtr obj);
    // static public System.String ovr_PartyUpdateNotification_GetUserName(System.IntPtr obj)
    // Offset: 0x217C7B8
    static ::StringW ovr_PartyUpdateNotification_GetUserName(::System::IntPtr obj);
    // static private System.IntPtr ovr_PartyUpdateNotification_GetUserName_Native(System.IntPtr obj)
    // Offset: 0x217C820
    static ::System::IntPtr ovr_PartyUpdateNotification_GetUserName_Native(::System::IntPtr obj);
    // static public System.String ovr_Pid_GetId(System.IntPtr obj)
    // Offset: 0x217C8A0
    static ::StringW ovr_Pid_GetId(::System::IntPtr obj);
    // static private System.IntPtr ovr_Pid_GetId_Native(System.IntPtr obj)
    // Offset: 0x217C908
    static ::System::IntPtr ovr_Pid_GetId_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_PidArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x217C988
    static ::System::IntPtr ovr_PidArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_PidArray_GetSize(System.IntPtr obj)
    // Offset: 0x217CA18
    static ::System::UIntPtr ovr_PidArray_GetSize(::System::IntPtr obj);
    // static public System.UInt64 ovr_PingResult_GetID(System.IntPtr obj)
    // Offset: 0x217CA98
    static uint64_t ovr_PingResult_GetID(::System::IntPtr obj);
    // static public System.UInt64 ovr_PingResult_GetPingTimeUsec(System.IntPtr obj)
    // Offset: 0x217CB18
    static uint64_t ovr_PingResult_GetPingTimeUsec(::System::IntPtr obj);
    // static public System.Boolean ovr_PingResult_IsTimeout(System.IntPtr obj)
    // Offset: 0x217CB98
    static bool ovr_PingResult_IsTimeout(::System::IntPtr obj);
    // static public Oculus.Platform.PlatformInitializeResult ovr_PlatformInitialize_GetResult(System.IntPtr obj)
    // Offset: 0x217CC20
    static ::Oculus::Platform::PlatformInitializeResult ovr_PlatformInitialize_GetResult(::System::IntPtr obj);
    // static public System.UInt32 ovr_Price_GetAmountInHundredths(System.IntPtr obj)
    // Offset: 0x217CCA0
    static uint ovr_Price_GetAmountInHundredths(::System::IntPtr obj);
    // static public System.String ovr_Price_GetCurrency(System.IntPtr obj)
    // Offset: 0x217CD20
    static ::StringW ovr_Price_GetCurrency(::System::IntPtr obj);
    // static private System.IntPtr ovr_Price_GetCurrency_Native(System.IntPtr obj)
    // Offset: 0x217CD88
    static ::System::IntPtr ovr_Price_GetCurrency_Native(::System::IntPtr obj);
    // static public System.String ovr_Price_GetFormatted(System.IntPtr obj)
    // Offset: 0x217CE08
    static ::StringW ovr_Price_GetFormatted(::System::IntPtr obj);
    // static private System.IntPtr ovr_Price_GetFormatted_Native(System.IntPtr obj)
    // Offset: 0x217CE70
    static ::System::IntPtr ovr_Price_GetFormatted_Native(::System::IntPtr obj);
    // static public System.String ovr_Product_GetDescription(System.IntPtr obj)
    // Offset: 0x217CEF0
    static ::StringW ovr_Product_GetDescription(::System::IntPtr obj);
    // static private System.IntPtr ovr_Product_GetDescription_Native(System.IntPtr obj)
    // Offset: 0x217CF58
    static ::System::IntPtr ovr_Product_GetDescription_Native(::System::IntPtr obj);
    // static public System.String ovr_Product_GetFormattedPrice(System.IntPtr obj)
    // Offset: 0x217CFD8
    static ::StringW ovr_Product_GetFormattedPrice(::System::IntPtr obj);
    // static private System.IntPtr ovr_Product_GetFormattedPrice_Native(System.IntPtr obj)
    // Offset: 0x217D040
    static ::System::IntPtr ovr_Product_GetFormattedPrice_Native(::System::IntPtr obj);
    // static public System.String ovr_Product_GetName(System.IntPtr obj)
    // Offset: 0x217D0C0
    static ::StringW ovr_Product_GetName(::System::IntPtr obj);
    // static private System.IntPtr ovr_Product_GetName_Native(System.IntPtr obj)
    // Offset: 0x217D128
    static ::System::IntPtr ovr_Product_GetName_Native(::System::IntPtr obj);
    // static public System.String ovr_Product_GetSKU(System.IntPtr obj)
    // Offset: 0x217D1A8
    static ::StringW ovr_Product_GetSKU(::System::IntPtr obj);
    // static private System.IntPtr ovr_Product_GetSKU_Native(System.IntPtr obj)
    // Offset: 0x217D210
    static ::System::IntPtr ovr_Product_GetSKU_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_ProductArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x217D290
    static ::System::IntPtr ovr_ProductArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_ProductArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x217D320
    static ::StringW ovr_ProductArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_ProductArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x217D388
    static ::System::IntPtr ovr_ProductArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_ProductArray_GetSize(System.IntPtr obj)
    // Offset: 0x217D408
    static ::System::UIntPtr ovr_ProductArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_ProductArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x217D488
    static bool ovr_ProductArray_HasNextPage(::System::IntPtr obj);
    // static public System.DateTime ovr_Purchase_GetExpirationTime(System.IntPtr obj)
    // Offset: 0x217D510
    static ::System::DateTime ovr_Purchase_GetExpirationTime(::System::IntPtr obj);
    // static private System.UInt64 ovr_Purchase_GetExpirationTime_Native(System.IntPtr obj)
    // Offset: 0x217D578
    static uint64_t ovr_Purchase_GetExpirationTime_Native(::System::IntPtr obj);
    // static public System.DateTime ovr_Purchase_GetGrantTime(System.IntPtr obj)
    // Offset: 0x217D5F8
    static ::System::DateTime ovr_Purchase_GetGrantTime(::System::IntPtr obj);
    // static private System.UInt64 ovr_Purchase_GetGrantTime_Native(System.IntPtr obj)
    // Offset: 0x217D660
    static uint64_t ovr_Purchase_GetGrantTime_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_Purchase_GetPurchaseID(System.IntPtr obj)
    // Offset: 0x217D6E0
    static uint64_t ovr_Purchase_GetPurchaseID(::System::IntPtr obj);
    // static public System.String ovr_Purchase_GetPurchaseStrID(System.IntPtr obj)
    // Offset: 0x217D760
    static ::StringW ovr_Purchase_GetPurchaseStrID(::System::IntPtr obj);
    // static private System.IntPtr ovr_Purchase_GetPurchaseStrID_Native(System.IntPtr obj)
    // Offset: 0x217D7C8
    static ::System::IntPtr ovr_Purchase_GetPurchaseStrID_Native(::System::IntPtr obj);
    // static public System.String ovr_Purchase_GetSKU(System.IntPtr obj)
    // Offset: 0x217D848
    static ::StringW ovr_Purchase_GetSKU(::System::IntPtr obj);
    // static private System.IntPtr ovr_Purchase_GetSKU_Native(System.IntPtr obj)
    // Offset: 0x217D8B0
    static ::System::IntPtr ovr_Purchase_GetSKU_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_PurchaseArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x217D930
    static ::System::IntPtr ovr_PurchaseArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_PurchaseArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x217D9C0
    static ::StringW ovr_PurchaseArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_PurchaseArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x217DA28
    static ::System::IntPtr ovr_PurchaseArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_PurchaseArray_GetSize(System.IntPtr obj)
    // Offset: 0x217DAA8
    static ::System::UIntPtr ovr_PurchaseArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_PurchaseArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x217DB28
    static bool ovr_PurchaseArray_HasNextPage(::System::IntPtr obj);
    // static public System.UInt64 ovr_Room_GetApplicationID(System.IntPtr obj)
    // Offset: 0x217DBB0
    static uint64_t ovr_Room_GetApplicationID(::System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetDataStore(System.IntPtr obj)
    // Offset: 0x217DC30
    static ::System::IntPtr ovr_Room_GetDataStore(::System::IntPtr obj);
    // static public System.String ovr_Room_GetDescription(System.IntPtr obj)
    // Offset: 0x217DCB0
    static ::StringW ovr_Room_GetDescription(::System::IntPtr obj);
    // static private System.IntPtr ovr_Room_GetDescription_Native(System.IntPtr obj)
    // Offset: 0x217DD18
    static ::System::IntPtr ovr_Room_GetDescription_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_Room_GetID(System.IntPtr obj)
    // Offset: 0x217DD98
    static uint64_t ovr_Room_GetID(::System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetInvitedUsers(System.IntPtr obj)
    // Offset: 0x217DE18
    static ::System::IntPtr ovr_Room_GetInvitedUsers(::System::IntPtr obj);
    // static public System.Boolean ovr_Room_GetIsMembershipLocked(System.IntPtr obj)
    // Offset: 0x217DE98
    static bool ovr_Room_GetIsMembershipLocked(::System::IntPtr obj);
    // static public Oculus.Platform.RoomJoinPolicy ovr_Room_GetJoinPolicy(System.IntPtr obj)
    // Offset: 0x217DF20
    static ::Oculus::Platform::RoomJoinPolicy ovr_Room_GetJoinPolicy(::System::IntPtr obj);
    // static public Oculus.Platform.RoomJoinability ovr_Room_GetJoinability(System.IntPtr obj)
    // Offset: 0x217DFA0
    static ::Oculus::Platform::RoomJoinability ovr_Room_GetJoinability(::System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetMatchedUsers(System.IntPtr obj)
    // Offset: 0x217E020
    static ::System::IntPtr ovr_Room_GetMatchedUsers(::System::IntPtr obj);
    // static public System.UInt32 ovr_Room_GetMaxUsers(System.IntPtr obj)
    // Offset: 0x217E0A0
    static uint ovr_Room_GetMaxUsers(::System::IntPtr obj);
    // static public System.String ovr_Room_GetName(System.IntPtr obj)
    // Offset: 0x217E120
    static ::StringW ovr_Room_GetName(::System::IntPtr obj);
    // static private System.IntPtr ovr_Room_GetName_Native(System.IntPtr obj)
    // Offset: 0x217E188
    static ::System::IntPtr ovr_Room_GetName_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetOwner(System.IntPtr obj)
    // Offset: 0x217E208
    static ::System::IntPtr ovr_Room_GetOwner(::System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetTeams(System.IntPtr obj)
    // Offset: 0x217E284
    static ::System::IntPtr ovr_Room_GetTeams(::System::IntPtr obj);
    // static public Oculus.Platform.RoomType ovr_Room_GetType(System.IntPtr obj)
    // Offset: 0x217E300
    static ::Oculus::Platform::RoomType ovr_Room_GetType(::System::IntPtr obj);
    // static public System.IntPtr ovr_Room_GetUsers(System.IntPtr obj)
    // Offset: 0x217E380
    static ::System::IntPtr ovr_Room_GetUsers(::System::IntPtr obj);
    // static public System.UInt32 ovr_Room_GetVersion(System.IntPtr obj)
    // Offset: 0x217E3FC
    static uint ovr_Room_GetVersion(::System::IntPtr obj);
    // static public System.IntPtr ovr_RoomArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x217E47C
    static ::System::IntPtr ovr_RoomArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_RoomArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x217E50C
    static ::StringW ovr_RoomArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_RoomArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x217E574
    static ::System::IntPtr ovr_RoomArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_RoomArray_GetSize(System.IntPtr obj)
    // Offset: 0x217E5F4
    static ::System::UIntPtr ovr_RoomArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_RoomArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x217E674
    static bool ovr_RoomArray_HasNextPage(::System::IntPtr obj);
    // static public System.UInt64 ovr_RoomInviteNotification_GetID(System.IntPtr obj)
    // Offset: 0x217E6FC
    static uint64_t ovr_RoomInviteNotification_GetID(::System::IntPtr obj);
    // static public System.UInt64 ovr_RoomInviteNotification_GetRoomID(System.IntPtr obj)
    // Offset: 0x217E77C
    static uint64_t ovr_RoomInviteNotification_GetRoomID(::System::IntPtr obj);
    // static public System.UInt64 ovr_RoomInviteNotification_GetSenderID(System.IntPtr obj)
    // Offset: 0x217E7FC
    static uint64_t ovr_RoomInviteNotification_GetSenderID(::System::IntPtr obj);
    // static public System.DateTime ovr_RoomInviteNotification_GetSentTime(System.IntPtr obj)
    // Offset: 0x217E87C
    static ::System::DateTime ovr_RoomInviteNotification_GetSentTime(::System::IntPtr obj);
    // static private System.UInt64 ovr_RoomInviteNotification_GetSentTime_Native(System.IntPtr obj)
    // Offset: 0x217E8E4
    static uint64_t ovr_RoomInviteNotification_GetSentTime_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_RoomInviteNotificationArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x217E964
    static ::System::IntPtr ovr_RoomInviteNotificationArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_RoomInviteNotificationArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x217E9F4
    static ::StringW ovr_RoomInviteNotificationArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x217EA5C
    static ::System::IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_RoomInviteNotificationArray_GetSize(System.IntPtr obj)
    // Offset: 0x217EADC
    static ::System::UIntPtr ovr_RoomInviteNotificationArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_RoomInviteNotificationArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x217EB5C
    static bool ovr_RoomInviteNotificationArray_HasNextPage(::System::IntPtr obj);
    // static public Oculus.Platform.SdkAccountType ovr_SdkAccount_GetAccountType(System.IntPtr obj)
    // Offset: 0x217EBE4
    static ::Oculus::Platform::SdkAccountType ovr_SdkAccount_GetAccountType(::System::IntPtr obj);
    // static public System.UInt64 ovr_SdkAccount_GetUserId(System.IntPtr obj)
    // Offset: 0x217EC64
    static uint64_t ovr_SdkAccount_GetUserId(::System::IntPtr obj);
    // static public System.IntPtr ovr_SdkAccountArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x217ECE4
    static ::System::IntPtr ovr_SdkAccountArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_SdkAccountArray_GetSize(System.IntPtr obj)
    // Offset: 0x217ED74
    static ::System::UIntPtr ovr_SdkAccountArray_GetSize(::System::IntPtr obj);
    // static public Oculus.Platform.ShareMediaStatus ovr_ShareMediaResult_GetStatus(System.IntPtr obj)
    // Offset: 0x217EDF4
    static ::Oculus::Platform::ShareMediaStatus ovr_ShareMediaResult_GetStatus(::System::IntPtr obj);
    // static public System.UInt64 ovr_SupplementaryMetric_GetID(System.IntPtr obj)
    // Offset: 0x217EE74
    static uint64_t ovr_SupplementaryMetric_GetID(::System::IntPtr obj);
    // static public System.Int64 ovr_SupplementaryMetric_GetMetric(System.IntPtr obj)
    // Offset: 0x217EEF4
    static int64_t ovr_SupplementaryMetric_GetMetric(::System::IntPtr obj);
    // static public System.Boolean ovr_SystemPermission_GetHasPermission(System.IntPtr obj)
    // Offset: 0x217EF74
    static bool ovr_SystemPermission_GetHasPermission(::System::IntPtr obj);
    // static public Oculus.Platform.PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(System.IntPtr obj)
    // Offset: 0x217EFFC
    static ::Oculus::Platform::PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(::System::IntPtr obj);
    // static public Oculus.Platform.VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(System.IntPtr obj)
    // Offset: 0x217F07C
    static ::Oculus::Platform::VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(::System::IntPtr obj);
    // static public Oculus.Platform.SystemVoipStatus ovr_SystemVoipState_GetStatus(System.IntPtr obj)
    // Offset: 0x217F0FC
    static ::Oculus::Platform::SystemVoipStatus ovr_SystemVoipState_GetStatus(::System::IntPtr obj);
    // static public System.IntPtr ovr_Team_GetAssignedUsers(System.IntPtr obj)
    // Offset: 0x217F17C
    static ::System::IntPtr ovr_Team_GetAssignedUsers(::System::IntPtr obj);
    // static public System.Int32 ovr_Team_GetMaxUsers(System.IntPtr obj)
    // Offset: 0x217F1FC
    static int ovr_Team_GetMaxUsers(::System::IntPtr obj);
    // static public System.Int32 ovr_Team_GetMinUsers(System.IntPtr obj)
    // Offset: 0x217F27C
    static int ovr_Team_GetMinUsers(::System::IntPtr obj);
    // static public System.String ovr_Team_GetName(System.IntPtr obj)
    // Offset: 0x217F2FC
    static ::StringW ovr_Team_GetName(::System::IntPtr obj);
    // static private System.IntPtr ovr_Team_GetName_Native(System.IntPtr obj)
    // Offset: 0x217F364
    static ::System::IntPtr ovr_Team_GetName_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_TeamArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x217F3E4
    static ::System::IntPtr ovr_TeamArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_TeamArray_GetSize(System.IntPtr obj)
    // Offset: 0x217F474
    static ::System::UIntPtr ovr_TeamArray_GetSize(::System::IntPtr obj);
    // static public System.String ovr_TestUser_GetAccessToken(System.IntPtr obj)
    // Offset: 0x217F4F4
    static ::StringW ovr_TestUser_GetAccessToken(::System::IntPtr obj);
    // static private System.IntPtr ovr_TestUser_GetAccessToken_Native(System.IntPtr obj)
    // Offset: 0x217F55C
    static ::System::IntPtr ovr_TestUser_GetAccessToken_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_TestUser_GetAppAccessArray(System.IntPtr obj)
    // Offset: 0x217F5DC
    static ::System::IntPtr ovr_TestUser_GetAppAccessArray(::System::IntPtr obj);
    // static public System.IntPtr ovr_TestUser_GetFbAppAccessArray(System.IntPtr obj)
    // Offset: 0x217F65C
    static ::System::IntPtr ovr_TestUser_GetFbAppAccessArray(::System::IntPtr obj);
    // static public System.String ovr_TestUser_GetFriendAccessToken(System.IntPtr obj)
    // Offset: 0x217F6DC
    static ::StringW ovr_TestUser_GetFriendAccessToken(::System::IntPtr obj);
    // static private System.IntPtr ovr_TestUser_GetFriendAccessToken_Native(System.IntPtr obj)
    // Offset: 0x217F744
    static ::System::IntPtr ovr_TestUser_GetFriendAccessToken_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_TestUser_GetFriendAppAccessArray(System.IntPtr obj)
    // Offset: 0x217F7C4
    static ::System::IntPtr ovr_TestUser_GetFriendAppAccessArray(::System::IntPtr obj);
    // static public System.String ovr_TestUser_GetUserAlias(System.IntPtr obj)
    // Offset: 0x217F844
    static ::StringW ovr_TestUser_GetUserAlias(::System::IntPtr obj);
    // static private System.IntPtr ovr_TestUser_GetUserAlias_Native(System.IntPtr obj)
    // Offset: 0x217F8AC
    static ::System::IntPtr ovr_TestUser_GetUserAlias_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_TestUser_GetUserFbid(System.IntPtr obj)
    // Offset: 0x217F92C
    static uint64_t ovr_TestUser_GetUserFbid(::System::IntPtr obj);
    // static public System.UInt64 ovr_TestUser_GetUserId(System.IntPtr obj)
    // Offset: 0x217F9AC
    static uint64_t ovr_TestUser_GetUserId(::System::IntPtr obj);
    // static public System.String ovr_TestUserAppAccess_GetAccessToken(System.IntPtr obj)
    // Offset: 0x217FA2C
    static ::StringW ovr_TestUserAppAccess_GetAccessToken(::System::IntPtr obj);
    // static private System.IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(System.IntPtr obj)
    // Offset: 0x217FA94
    static ::System::IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_TestUserAppAccess_GetAppId(System.IntPtr obj)
    // Offset: 0x217FB14
    static uint64_t ovr_TestUserAppAccess_GetAppId(::System::IntPtr obj);
    // static public System.UInt64 ovr_TestUserAppAccess_GetUserId(System.IntPtr obj)
    // Offset: 0x217FB94
    static uint64_t ovr_TestUserAppAccess_GetUserId(::System::IntPtr obj);
    // static public System.IntPtr ovr_TestUserAppAccessArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x217FC14
    static ::System::IntPtr ovr_TestUserAppAccessArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.UIntPtr ovr_TestUserAppAccessArray_GetSize(System.IntPtr obj)
    // Offset: 0x217FCA4
    static ::System::UIntPtr ovr_TestUserAppAccessArray_GetSize(::System::IntPtr obj);
    // static public System.String ovr_User_GetDisplayName(System.IntPtr obj)
    // Offset: 0x217FD24
    static ::StringW ovr_User_GetDisplayName(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetDisplayName_Native(System.IntPtr obj)
    // Offset: 0x217FD8C
    static ::System::IntPtr ovr_User_GetDisplayName_Native(::System::IntPtr obj);
    // static public System.UInt64 ovr_User_GetID(System.IntPtr obj)
    // Offset: 0x217FE0C
    static uint64_t ovr_User_GetID(::System::IntPtr obj);
    // static public System.String ovr_User_GetImageUrl(System.IntPtr obj)
    // Offset: 0x217FE8C
    static ::StringW ovr_User_GetImageUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetImageUrl_Native(System.IntPtr obj)
    // Offset: 0x217FEF4
    static ::System::IntPtr ovr_User_GetImageUrl_Native(::System::IntPtr obj);
    // static public System.String ovr_User_GetInviteToken(System.IntPtr obj)
    // Offset: 0x217FF74
    static ::StringW ovr_User_GetInviteToken(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetInviteToken_Native(System.IntPtr obj)
    // Offset: 0x217FFDC
    static ::System::IntPtr ovr_User_GetInviteToken_Native(::System::IntPtr obj);
    // static public System.String ovr_User_GetOculusID(System.IntPtr obj)
    // Offset: 0x218005C
    static ::StringW ovr_User_GetOculusID(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetOculusID_Native(System.IntPtr obj)
    // Offset: 0x21800C4
    static ::System::IntPtr ovr_User_GetOculusID_Native(::System::IntPtr obj);
    // static public System.String ovr_User_GetPresence(System.IntPtr obj)
    // Offset: 0x2180144
    static ::StringW ovr_User_GetPresence(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetPresence_Native(System.IntPtr obj)
    // Offset: 0x21801AC
    static ::System::IntPtr ovr_User_GetPresence_Native(::System::IntPtr obj);
    // static public System.String ovr_User_GetPresenceDeeplinkMessage(System.IntPtr obj)
    // Offset: 0x218022C
    static ::StringW ovr_User_GetPresenceDeeplinkMessage(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(System.IntPtr obj)
    // Offset: 0x2180294
    static ::System::IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(::System::IntPtr obj);
    // static public System.String ovr_User_GetPresenceDestinationApiName(System.IntPtr obj)
    // Offset: 0x2180314
    static ::StringW ovr_User_GetPresenceDestinationApiName(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetPresenceDestinationApiName_Native(System.IntPtr obj)
    // Offset: 0x218037C
    static ::System::IntPtr ovr_User_GetPresenceDestinationApiName_Native(::System::IntPtr obj);
    // static public System.String ovr_User_GetPresenceLobbySessionId(System.IntPtr obj)
    // Offset: 0x21803FC
    static ::StringW ovr_User_GetPresenceLobbySessionId(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetPresenceLobbySessionId_Native(System.IntPtr obj)
    // Offset: 0x2180464
    static ::System::IntPtr ovr_User_GetPresenceLobbySessionId_Native(::System::IntPtr obj);
    // static public System.String ovr_User_GetPresenceMatchSessionId(System.IntPtr obj)
    // Offset: 0x21804E4
    static ::StringW ovr_User_GetPresenceMatchSessionId(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetPresenceMatchSessionId_Native(System.IntPtr obj)
    // Offset: 0x218054C
    static ::System::IntPtr ovr_User_GetPresenceMatchSessionId_Native(::System::IntPtr obj);
    // static public Oculus.Platform.UserPresenceStatus ovr_User_GetPresenceStatus(System.IntPtr obj)
    // Offset: 0x21805CC
    static ::Oculus::Platform::UserPresenceStatus ovr_User_GetPresenceStatus(::System::IntPtr obj);
    // static public System.String ovr_User_GetSmallImageUrl(System.IntPtr obj)
    // Offset: 0x218064C
    static ::StringW ovr_User_GetSmallImageUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_User_GetSmallImageUrl_Native(System.IntPtr obj)
    // Offset: 0x21806B4
    static ::System::IntPtr ovr_User_GetSmallImageUrl_Native(::System::IntPtr obj);
    // static public System.IntPtr ovr_UserAndRoom_GetRoom(System.IntPtr obj)
    // Offset: 0x2180734
    static ::System::IntPtr ovr_UserAndRoom_GetRoom(::System::IntPtr obj);
    // static public System.IntPtr ovr_UserAndRoom_GetUser(System.IntPtr obj)
    // Offset: 0x21807B4
    static ::System::IntPtr ovr_UserAndRoom_GetUser(::System::IntPtr obj);
    // static public System.IntPtr ovr_UserAndRoomArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x2180834
    static ::System::IntPtr ovr_UserAndRoomArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_UserAndRoomArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x21808C4
    static ::StringW ovr_UserAndRoomArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x218092C
    static ::System::IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_UserAndRoomArray_GetSize(System.IntPtr obj)
    // Offset: 0x21809AC
    static ::System::UIntPtr ovr_UserAndRoomArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_UserAndRoomArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x2180A2C
    static bool ovr_UserAndRoomArray_HasNextPage(::System::IntPtr obj);
    // static public System.IntPtr ovr_UserArray_GetElement(System.IntPtr obj, System.UIntPtr index)
    // Offset: 0x2180AB4
    static ::System::IntPtr ovr_UserArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index);
    // static public System.String ovr_UserArray_GetNextUrl(System.IntPtr obj)
    // Offset: 0x2180B44
    static ::StringW ovr_UserArray_GetNextUrl(::System::IntPtr obj);
    // static private System.IntPtr ovr_UserArray_GetNextUrl_Native(System.IntPtr obj)
    // Offset: 0x2180BAC
    static ::System::IntPtr ovr_UserArray_GetNextUrl_Native(::System::IntPtr obj);
    // static public System.UIntPtr ovr_UserArray_GetSize(System.IntPtr obj)
    // Offset: 0x2180C2C
    static ::System::UIntPtr ovr_UserArray_GetSize(::System::IntPtr obj);
    // static public System.Boolean ovr_UserArray_HasNextPage(System.IntPtr obj)
    // Offset: 0x2180CAC
    static bool ovr_UserArray_HasNextPage(::System::IntPtr obj);
    // static public System.Boolean ovr_UserDataStoreUpdateResponse_GetSuccess(System.IntPtr obj)
    // Offset: 0x2180D34
    static bool ovr_UserDataStoreUpdateResponse_GetSuccess(::System::IntPtr obj);
    // static public System.String ovr_UserProof_GetNonce(System.IntPtr obj)
    // Offset: 0x2180DBC
    static ::StringW ovr_UserProof_GetNonce(::System::IntPtr obj);
    // static private System.IntPtr ovr_UserProof_GetNonce_Native(System.IntPtr obj)
    // Offset: 0x2180E24
    static ::System::IntPtr ovr_UserProof_GetNonce_Native(::System::IntPtr obj);
    // static public System.Boolean ovr_UserReportID_GetDidCancel(System.IntPtr obj)
    // Offset: 0x2180EA4
    static bool ovr_UserReportID_GetDidCancel(::System::IntPtr obj);
    // static public System.UInt64 ovr_UserReportID_GetID(System.IntPtr obj)
    // Offset: 0x2180F2C
    static uint64_t ovr_UserReportID_GetID(::System::IntPtr obj);
    // static public System.Void ovr_VoipDecoder_Decode(System.IntPtr obj, System.Byte[] compressedData, System.UIntPtr compressedSize)
    // Offset: 0x2180FAC
    static void ovr_VoipDecoder_Decode(::System::IntPtr obj, ::ArrayW<uint8_t> compressedData, ::System::UIntPtr compressedSize);
    // static public System.UIntPtr ovr_VoipDecoder_GetDecodedPCM(System.IntPtr obj, System.Single[] outputBuffer, System.UIntPtr outputBufferSize)
    // Offset: 0x218104C
    static ::System::UIntPtr ovr_VoipDecoder_GetDecodedPCM(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferSize);
    // static public System.Void ovr_VoipEncoder_AddPCM(System.IntPtr obj, System.Single[] inputData, System.UInt32 inputSize)
    // Offset: 0x21810EC
    static void ovr_VoipEncoder_AddPCM(::System::IntPtr obj, ::ArrayW<float> inputData, uint inputSize);
    // static public System.UIntPtr ovr_VoipEncoder_GetCompressedData(System.IntPtr obj, System.Byte[] outputBuffer, System.UIntPtr intputSize)
    // Offset: 0x218118C
    static ::System::UIntPtr ovr_VoipEncoder_GetCompressedData(::System::IntPtr obj, ::ArrayW<uint8_t> outputBuffer, ::System::UIntPtr intputSize);
    // static public System.UIntPtr ovr_VoipEncoder_GetCompressedDataSize(System.IntPtr obj)
    // Offset: 0x218122C
    static ::System::UIntPtr ovr_VoipEncoder_GetCompressedDataSize(::System::IntPtr obj);
    // static public System.IntPtr ovr_AbuseReportOptions_Create()
    // Offset: 0x215CBB8
    static ::System::IntPtr ovr_AbuseReportOptions_Create();
    // static public System.Void ovr_AbuseReportOptions_Destroy(System.IntPtr handle)
    // Offset: 0x215CF40
    static void ovr_AbuseReportOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_AbuseReportOptions_SetPreventPeopleChooser(System.IntPtr handle, System.Boolean value)
    // Offset: 0x215CCA4
    static void ovr_AbuseReportOptions_SetPreventPeopleChooser(::System::IntPtr handle, bool value);
    // static public System.Void ovr_AbuseReportOptions_SetReportType(System.IntPtr handle, Oculus.Platform.AbuseReportType value)
    // Offset: 0x215CDAC
    static void ovr_AbuseReportOptions_SetReportType(::System::IntPtr handle, ::Oculus::Platform::AbuseReportType value);
    // static public System.IntPtr ovr_AdvancedAbuseReportOptions_Create()
    // Offset: 0x215E150
    static ::System::IntPtr ovr_AdvancedAbuseReportOptions_Create();
    // static public System.Void ovr_AdvancedAbuseReportOptions_Destroy(System.IntPtr handle)
    // Offset: 0x215E5FC
    static void ovr_AdvancedAbuseReportOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_AdvancedAbuseReportOptions_SetObjectType(System.IntPtr handle, System.String value)
    // Offset: 0x215E23C
    static void ovr_AdvancedAbuseReportOptions_SetObjectType(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_AdvancedAbuseReportOptions_SetObjectType_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x21812AC
    static void ovr_AdvancedAbuseReportOptions_SetObjectType_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_AdvancedAbuseReportOptions_SetReportType(System.IntPtr handle, Oculus.Platform.AbuseReportType value)
    // Offset: 0x215E360
    static void ovr_AdvancedAbuseReportOptions_SetReportType(::System::IntPtr handle, ::Oculus::Platform::AbuseReportType value);
    // static public System.Void ovr_AdvancedAbuseReportOptions_SetVideoMode(System.IntPtr handle, Oculus.Platform.AbuseReportVideoMode value)
    // Offset: 0x215E468
    static void ovr_AdvancedAbuseReportOptions_SetVideoMode(::System::IntPtr handle, ::Oculus::Platform::AbuseReportVideoMode value);
    // static public System.IntPtr ovr_ApplicationOptions_Create()
    // Offset: 0x215F000
    static ::System::IntPtr ovr_ApplicationOptions_Create();
    // static public System.Void ovr_ApplicationOptions_Destroy(System.IntPtr handle)
    // Offset: 0x215F24C
    static void ovr_ApplicationOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_ApplicationOptions_SetDeeplinkMessage(System.IntPtr handle, System.String value)
    // Offset: 0x215F0EC
    static void ovr_ApplicationOptions_SetDeeplinkMessage(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_ApplicationOptions_SetDeeplinkMessage_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x218133C
    static void ovr_ApplicationOptions_SetDeeplinkMessage_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.IntPtr ovr_ChallengeOptions_Create()
    // Offset: 0x21813CC
    static ::System::IntPtr ovr_ChallengeOptions_Create();
    // static public System.Void ovr_ChallengeOptions_Destroy(System.IntPtr handle)
    // Offset: 0x2181440
    static void ovr_ChallengeOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_ChallengeOptions_SetDescription(System.IntPtr handle, System.String value)
    // Offset: 0x21814C0
    static void ovr_ChallengeOptions_SetDescription(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_ChallengeOptions_SetDescription_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x218156C
    static void ovr_ChallengeOptions_SetDescription_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_ChallengeOptions_SetEndDate(System.IntPtr handle, System.DateTime value)
    // Offset: 0x21815FC
    static void ovr_ChallengeOptions_SetEndDate(::System::IntPtr handle, ::System::DateTime value);
    // static private System.Void ovr_ChallengeOptions_SetEndDate_Native(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x2181678
    static void ovr_ChallengeOptions_SetEndDate_Native(::System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_ChallengeOptions_SetIncludeActiveChallenges(System.IntPtr handle, System.Boolean value)
    // Offset: 0x2181708
    static void ovr_ChallengeOptions_SetIncludeActiveChallenges(::System::IntPtr handle, bool value);
    // static public System.Void ovr_ChallengeOptions_SetIncludeFutureChallenges(System.IntPtr handle, System.Boolean value)
    // Offset: 0x2181798
    static void ovr_ChallengeOptions_SetIncludeFutureChallenges(::System::IntPtr handle, bool value);
    // static public System.Void ovr_ChallengeOptions_SetIncludePastChallenges(System.IntPtr handle, System.Boolean value)
    // Offset: 0x2181828
    static void ovr_ChallengeOptions_SetIncludePastChallenges(::System::IntPtr handle, bool value);
    // static public System.Void ovr_ChallengeOptions_SetLeaderboardName(System.IntPtr handle, System.String value)
    // Offset: 0x21818B8
    static void ovr_ChallengeOptions_SetLeaderboardName(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_ChallengeOptions_SetLeaderboardName_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x2181964
    static void ovr_ChallengeOptions_SetLeaderboardName_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_ChallengeOptions_SetStartDate(System.IntPtr handle, System.DateTime value)
    // Offset: 0x21819F4
    static void ovr_ChallengeOptions_SetStartDate(::System::IntPtr handle, ::System::DateTime value);
    // static private System.Void ovr_ChallengeOptions_SetStartDate_Native(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x2181A70
    static void ovr_ChallengeOptions_SetStartDate_Native(::System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_ChallengeOptions_SetTitle(System.IntPtr handle, System.String value)
    // Offset: 0x2181B00
    static void ovr_ChallengeOptions_SetTitle(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_ChallengeOptions_SetTitle_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x2181BAC
    static void ovr_ChallengeOptions_SetTitle_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_ChallengeOptions_SetViewerFilter(System.IntPtr handle, Oculus.Platform.ChallengeViewerFilter value)
    // Offset: 0x2181C3C
    static void ovr_ChallengeOptions_SetViewerFilter(::System::IntPtr handle, ::Oculus::Platform::ChallengeViewerFilter value);
    // static public System.Void ovr_ChallengeOptions_SetVisibility(System.IntPtr handle, Oculus.Platform.ChallengeVisibility value)
    // Offset: 0x2181CCC
    static void ovr_ChallengeOptions_SetVisibility(::System::IntPtr handle, ::Oculus::Platform::ChallengeVisibility value);
    // static public System.IntPtr ovr_GroupPresenceOptions_Create()
    // Offset: 0x2181D5C
    static ::System::IntPtr ovr_GroupPresenceOptions_Create();
    // static public System.Void ovr_GroupPresenceOptions_Destroy(System.IntPtr handle)
    // Offset: 0x2181DD0
    static void ovr_GroupPresenceOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_GroupPresenceOptions_SetDestinationApiName(System.IntPtr handle, System.String value)
    // Offset: 0x2181E50
    static void ovr_GroupPresenceOptions_SetDestinationApiName(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_GroupPresenceOptions_SetDestinationApiName_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x2181EFC
    static void ovr_GroupPresenceOptions_SetDestinationApiName_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_GroupPresenceOptions_SetIsJoinable(System.IntPtr handle, System.Boolean value)
    // Offset: 0x2181F8C
    static void ovr_GroupPresenceOptions_SetIsJoinable(::System::IntPtr handle, bool value);
    // static public System.Void ovr_GroupPresenceOptions_SetLobbySessionId(System.IntPtr handle, System.String value)
    // Offset: 0x218201C
    static void ovr_GroupPresenceOptions_SetLobbySessionId(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_GroupPresenceOptions_SetLobbySessionId_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x21820C8
    static void ovr_GroupPresenceOptions_SetLobbySessionId_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_GroupPresenceOptions_SetMatchSessionId(System.IntPtr handle, System.String value)
    // Offset: 0x2182158
    static void ovr_GroupPresenceOptions_SetMatchSessionId(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_GroupPresenceOptions_SetMatchSessionId_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x2182204
    static void ovr_GroupPresenceOptions_SetMatchSessionId_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.IntPtr ovr_InviteOptions_Create()
    // Offset: 0x2182294
    static ::System::IntPtr ovr_InviteOptions_Create();
    // static public System.Void ovr_InviteOptions_Destroy(System.IntPtr handle)
    // Offset: 0x2182308
    static void ovr_InviteOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_InviteOptions_AddSuggestedUser(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x2182388
    static void ovr_InviteOptions_AddSuggestedUser(::System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_InviteOptions_ClearSuggestedUsers(System.IntPtr handle)
    // Offset: 0x2182418
    static void ovr_InviteOptions_ClearSuggestedUsers(::System::IntPtr handle);
    // static public System.IntPtr ovr_MatchmakingOptions_Create()
    // Offset: 0x2182498
    static ::System::IntPtr ovr_MatchmakingOptions_Create();
    // static public System.Void ovr_MatchmakingOptions_Destroy(System.IntPtr handle)
    // Offset: 0x218250C
    static void ovr_MatchmakingOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(System.IntPtr handle, System.String key, System.String value)
    // Offset: 0x218258C
    static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(::System::IntPtr handle, ::StringW key, ::StringW value);
    // static private System.Void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(System.IntPtr handle, System.IntPtr key, System.IntPtr value)
    // Offset: 0x2182658
    static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value);
    // static public System.Void ovr_MatchmakingOptions_ClearCreateRoomDataStore(System.IntPtr handle)
    // Offset: 0x21826F0
    static void ovr_MatchmakingOptions_ClearCreateRoomDataStore(::System::IntPtr handle);
    // static public System.Void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(System.IntPtr handle, Oculus.Platform.RoomJoinPolicy value)
    // Offset: 0x2182770
    static void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(::System::IntPtr handle, ::Oculus::Platform::RoomJoinPolicy value);
    // static public System.Void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(System.IntPtr handle, System.UInt32 value)
    // Offset: 0x2182800
    static void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(::System::IntPtr handle, uint value);
    // static public System.Void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x2182890
    static void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(::System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(System.IntPtr handle)
    // Offset: 0x2182920
    static void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(::System::IntPtr handle);
    // static public System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(System.IntPtr handle, System.String key, System.Int32 value)
    // Offset: 0x21829A0
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(::System::IntPtr handle, ::StringW key, int value);
    // static private System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(System.IntPtr handle, System.IntPtr key, System.Int32 value)
    // Offset: 0x2182A54
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(::System::IntPtr handle, ::System::IntPtr key, int value);
    // static public System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(System.IntPtr handle, System.String key, System.Double value)
    // Offset: 0x2182AEC
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(::System::IntPtr handle, ::StringW key, double value);
    // static private System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(System.IntPtr handle, System.IntPtr key, System.Double value)
    // Offset: 0x2182BA8
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(::System::IntPtr handle, ::System::IntPtr key, double value);
    // static public System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(System.IntPtr handle, System.String key, System.String value)
    // Offset: 0x2182C48
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(::System::IntPtr handle, ::StringW key, ::StringW value);
    // static private System.Void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(System.IntPtr handle, System.IntPtr key, System.IntPtr value)
    // Offset: 0x2182D14
    static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value);
    // static public System.Void ovr_MatchmakingOptions_ClearEnqueueDataSettings(System.IntPtr handle)
    // Offset: 0x2182DAC
    static void ovr_MatchmakingOptions_ClearEnqueueDataSettings(::System::IntPtr handle);
    // static public System.Void ovr_MatchmakingOptions_SetEnqueueIsDebug(System.IntPtr handle, System.Boolean value)
    // Offset: 0x2182E2C
    static void ovr_MatchmakingOptions_SetEnqueueIsDebug(::System::IntPtr handle, bool value);
    // static public System.Void ovr_MatchmakingOptions_SetEnqueueQueryKey(System.IntPtr handle, System.String value)
    // Offset: 0x2182EBC
    static void ovr_MatchmakingOptions_SetEnqueueQueryKey(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x2182F68
    static void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.IntPtr ovr_NetSyncOptions_Create()
    // Offset: 0x2182FF8
    static ::System::IntPtr ovr_NetSyncOptions_Create();
    // static public System.Void ovr_NetSyncOptions_Destroy(System.IntPtr handle)
    // Offset: 0x218306C
    static void ovr_NetSyncOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_NetSyncOptions_SetVoipGroup(System.IntPtr handle, System.String value)
    // Offset: 0x21830EC
    static void ovr_NetSyncOptions_SetVoipGroup(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_NetSyncOptions_SetVoipGroup_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x2183198
    static void ovr_NetSyncOptions_SetVoipGroup_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_NetSyncOptions_SetVoipStreamDefault(System.IntPtr handle, Oculus.Platform.NetSyncVoipStreamMode value)
    // Offset: 0x2183228
    static void ovr_NetSyncOptions_SetVoipStreamDefault(::System::IntPtr handle, ::Oculus::Platform::NetSyncVoipStreamMode value);
    // static public System.Void ovr_NetSyncOptions_SetZoneId(System.IntPtr handle, System.String value)
    // Offset: 0x21832B8
    static void ovr_NetSyncOptions_SetZoneId(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_NetSyncOptions_SetZoneId_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x2183364
    static void ovr_NetSyncOptions_SetZoneId_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.IntPtr ovr_RichPresenceOptions_Create()
    // Offset: 0x21833F4
    static ::System::IntPtr ovr_RichPresenceOptions_Create();
    // static public System.Void ovr_RichPresenceOptions_Destroy(System.IntPtr handle)
    // Offset: 0x2183468
    static void ovr_RichPresenceOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_RichPresenceOptions_SetApiName(System.IntPtr handle, System.String value)
    // Offset: 0x21834E8
    static void ovr_RichPresenceOptions_SetApiName(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_RichPresenceOptions_SetApiName_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x2183594
    static void ovr_RichPresenceOptions_SetApiName_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_SetArgsString(System.IntPtr handle, System.String key, System.String value)
    // Offset: 0x2183624
    static void ovr_RichPresenceOptions_SetArgsString(::System::IntPtr handle, ::StringW key, ::StringW value);
    // static private System.Void ovr_RichPresenceOptions_SetArgsString_Native(System.IntPtr handle, System.IntPtr key, System.IntPtr value)
    // Offset: 0x21836F0
    static void ovr_RichPresenceOptions_SetArgsString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_ClearArgs(System.IntPtr handle)
    // Offset: 0x2183788
    static void ovr_RichPresenceOptions_ClearArgs(::System::IntPtr handle);
    // static public System.Void ovr_RichPresenceOptions_SetCurrentCapacity(System.IntPtr handle, System.UInt32 value)
    // Offset: 0x2183808
    static void ovr_RichPresenceOptions_SetCurrentCapacity(::System::IntPtr handle, uint value);
    // static public System.Void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(System.IntPtr handle, System.String value)
    // Offset: 0x2183898
    static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x2183944
    static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_SetEndTime(System.IntPtr handle, System.DateTime value)
    // Offset: 0x21839D4
    static void ovr_RichPresenceOptions_SetEndTime(::System::IntPtr handle, ::System::DateTime value);
    // static private System.Void ovr_RichPresenceOptions_SetEndTime_Native(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x2183A50
    static void ovr_RichPresenceOptions_SetEndTime_Native(::System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_RichPresenceOptions_SetExtraContext(System.IntPtr handle, Oculus.Platform.RichPresenceExtraContext value)
    // Offset: 0x2183AE0
    static void ovr_RichPresenceOptions_SetExtraContext(::System::IntPtr handle, ::Oculus::Platform::RichPresenceExtraContext value);
    // static public System.Void ovr_RichPresenceOptions_SetInstanceId(System.IntPtr handle, System.String value)
    // Offset: 0x2183B70
    static void ovr_RichPresenceOptions_SetInstanceId(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_RichPresenceOptions_SetInstanceId_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x2183C1C
    static void ovr_RichPresenceOptions_SetInstanceId_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_SetIsIdle(System.IntPtr handle, System.Boolean value)
    // Offset: 0x2183CAC
    static void ovr_RichPresenceOptions_SetIsIdle(::System::IntPtr handle, bool value);
    // static public System.Void ovr_RichPresenceOptions_SetIsJoinable(System.IntPtr handle, System.Boolean value)
    // Offset: 0x2183D3C
    static void ovr_RichPresenceOptions_SetIsJoinable(::System::IntPtr handle, bool value);
    // static public System.Void ovr_RichPresenceOptions_SetJoinableId(System.IntPtr handle, System.String value)
    // Offset: 0x2183DCC
    static void ovr_RichPresenceOptions_SetJoinableId(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_RichPresenceOptions_SetJoinableId_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x2183E78
    static void ovr_RichPresenceOptions_SetJoinableId_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_SetLobbySessionId(System.IntPtr handle, System.String value)
    // Offset: 0x2183F08
    static void ovr_RichPresenceOptions_SetLobbySessionId(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_RichPresenceOptions_SetLobbySessionId_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x2183FB4
    static void ovr_RichPresenceOptions_SetLobbySessionId_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_SetMatchSessionId(System.IntPtr handle, System.String value)
    // Offset: 0x2184044
    static void ovr_RichPresenceOptions_SetMatchSessionId(::System::IntPtr handle, ::StringW value);
    // static private System.Void ovr_RichPresenceOptions_SetMatchSessionId_Native(System.IntPtr handle, System.IntPtr value)
    // Offset: 0x21840F0
    static void ovr_RichPresenceOptions_SetMatchSessionId_Native(::System::IntPtr handle, ::System::IntPtr value);
    // static public System.Void ovr_RichPresenceOptions_SetMaxCapacity(System.IntPtr handle, System.UInt32 value)
    // Offset: 0x2184180
    static void ovr_RichPresenceOptions_SetMaxCapacity(::System::IntPtr handle, uint value);
    // static public System.Void ovr_RichPresenceOptions_SetStartTime(System.IntPtr handle, System.DateTime value)
    // Offset: 0x2184210
    static void ovr_RichPresenceOptions_SetStartTime(::System::IntPtr handle, ::System::DateTime value);
    // static private System.Void ovr_RichPresenceOptions_SetStartTime_Native(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x218428C
    static void ovr_RichPresenceOptions_SetStartTime_Native(::System::IntPtr handle, uint64_t value);
    // static public System.IntPtr ovr_RoomOptions_Create()
    // Offset: 0x218431C
    static ::System::IntPtr ovr_RoomOptions_Create();
    // static public System.Void ovr_RoomOptions_Destroy(System.IntPtr handle)
    // Offset: 0x2184390
    static void ovr_RoomOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_RoomOptions_SetDataStoreString(System.IntPtr handle, System.String key, System.String value)
    // Offset: 0x2184410
    static void ovr_RoomOptions_SetDataStoreString(::System::IntPtr handle, ::StringW key, ::StringW value);
    // static private System.Void ovr_RoomOptions_SetDataStoreString_Native(System.IntPtr handle, System.IntPtr key, System.IntPtr value)
    // Offset: 0x21844DC
    static void ovr_RoomOptions_SetDataStoreString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value);
    // static public System.Void ovr_RoomOptions_ClearDataStore(System.IntPtr handle)
    // Offset: 0x2184574
    static void ovr_RoomOptions_ClearDataStore(::System::IntPtr handle);
    // static public System.Void ovr_RoomOptions_SetExcludeRecentlyMet(System.IntPtr handle, System.Boolean value)
    // Offset: 0x21845F4
    static void ovr_RoomOptions_SetExcludeRecentlyMet(::System::IntPtr handle, bool value);
    // static public System.Void ovr_RoomOptions_SetMaxUserResults(System.IntPtr handle, System.UInt32 value)
    // Offset: 0x2184684
    static void ovr_RoomOptions_SetMaxUserResults(::System::IntPtr handle, uint value);
    // static public System.Void ovr_RoomOptions_SetOrdering(System.IntPtr handle, Oculus.Platform.UserOrdering value)
    // Offset: 0x2184714
    static void ovr_RoomOptions_SetOrdering(::System::IntPtr handle, ::Oculus::Platform::UserOrdering value);
    // static public System.Void ovr_RoomOptions_SetRecentlyMetTimeWindow(System.IntPtr handle, Oculus.Platform.TimeWindow value)
    // Offset: 0x21847A4
    static void ovr_RoomOptions_SetRecentlyMetTimeWindow(::System::IntPtr handle, ::Oculus::Platform::TimeWindow value);
    // static public System.Void ovr_RoomOptions_SetRoomId(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x2184834
    static void ovr_RoomOptions_SetRoomId(::System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_RoomOptions_SetTurnOffUpdates(System.IntPtr handle, System.Boolean value)
    // Offset: 0x21848C4
    static void ovr_RoomOptions_SetTurnOffUpdates(::System::IntPtr handle, bool value);
    // static public System.IntPtr ovr_RosterOptions_Create()
    // Offset: 0x2184954
    static ::System::IntPtr ovr_RosterOptions_Create();
    // static public System.Void ovr_RosterOptions_Destroy(System.IntPtr handle)
    // Offset: 0x21849C8
    static void ovr_RosterOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_RosterOptions_AddSuggestedUser(System.IntPtr handle, System.UInt64 value)
    // Offset: 0x2184A48
    static void ovr_RosterOptions_AddSuggestedUser(::System::IntPtr handle, uint64_t value);
    // static public System.Void ovr_RosterOptions_ClearSuggestedUsers(System.IntPtr handle)
    // Offset: 0x2184AD8
    static void ovr_RosterOptions_ClearSuggestedUsers(::System::IntPtr handle);
    // static public System.IntPtr ovr_UserOptions_Create()
    // Offset: 0x2184B58
    static ::System::IntPtr ovr_UserOptions_Create();
    // static public System.Void ovr_UserOptions_Destroy(System.IntPtr handle)
    // Offset: 0x2184BCC
    static void ovr_UserOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_UserOptions_SetMaxUsers(System.IntPtr handle, System.UInt32 value)
    // Offset: 0x2184C4C
    static void ovr_UserOptions_SetMaxUsers(::System::IntPtr handle, uint value);
    // static public System.Void ovr_UserOptions_AddServiceProvider(System.IntPtr handle, Oculus.Platform.ServiceProvider value)
    // Offset: 0x2184CDC
    static void ovr_UserOptions_AddServiceProvider(::System::IntPtr handle, ::Oculus::Platform::ServiceProvider value);
    // static public System.Void ovr_UserOptions_ClearServiceProviders(System.IntPtr handle)
    // Offset: 0x2184D6C
    static void ovr_UserOptions_ClearServiceProviders(::System::IntPtr handle);
    // static public System.Void ovr_UserOptions_SetTimeWindow(System.IntPtr handle, Oculus.Platform.TimeWindow value)
    // Offset: 0x2184DEC
    static void ovr_UserOptions_SetTimeWindow(::System::IntPtr handle, ::Oculus::Platform::TimeWindow value);
    // static public System.IntPtr ovr_VoipOptions_Create()
    // Offset: 0x2184E7C
    static ::System::IntPtr ovr_VoipOptions_Create();
    // static public System.Void ovr_VoipOptions_Destroy(System.IntPtr handle)
    // Offset: 0x2184EF0
    static void ovr_VoipOptions_Destroy(::System::IntPtr handle);
    // static public System.Void ovr_VoipOptions_SetBitrateForNewConnections(System.IntPtr handle, Oculus.Platform.VoipBitrate value)
    // Offset: 0x2184F70
    static void ovr_VoipOptions_SetBitrateForNewConnections(::System::IntPtr handle, ::Oculus::Platform::VoipBitrate value);
    // static public System.Void ovr_VoipOptions_SetCreateNewConnectionUseDtx(System.IntPtr handle, Oculus.Platform.VoipDtxState value)
    // Offset: 0x2185000
    static void ovr_VoipOptions_SetCreateNewConnectionUseDtx(::System::IntPtr handle, ::Oculus::Platform::VoipDtxState value);
  }; // Oculus.Platform.CAPI
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Platform::CAPI::ovrKeyValuePair, "Oculus.Platform", "CAPI/ovrKeyValuePair");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Platform::CAPI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Oculus::Platform::CAPI::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Platform::CAPI::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ArrayOfStructsToIntPtr
// Il2CppName: ArrayOfStructsToIntPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::Array*)>(&Oculus::Platform::CAPI::ArrayOfStructsToIntPtr)> {
  static const MethodInfo* get() {
    static auto* ar = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ArrayOfStructsToIntPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ar});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs
// Il2CppName: DictionaryToOVRKeyValuePairs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> (*)(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*)>(&Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs)> {
  static const MethodInfo* get() {
    static auto* dict = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "DictionaryToOVRKeyValuePairs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dict});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::IntPtrToByteArray
// Il2CppName: IntPtrToByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::IntPtrToByteArray)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "IntPtrToByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, size});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::DataStoreFromNative
// Il2CppName: DataStoreFromNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::DataStoreFromNative)> {
  static const MethodInfo* get() {
    static auto* pointer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "DataStoreFromNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointer});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::StringFromNative
// Il2CppName: StringFromNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::StringFromNative)> {
  static const MethodInfo* get() {
    static auto* pointer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "StringFromNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointer});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::GetNativeStringLengthNotIncludingNullTerminator
// Il2CppName: GetNativeStringLengthNotIncludingNullTerminator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::GetNativeStringLengthNotIncludingNullTerminator)> {
  static const MethodInfo* get() {
    static auto* pointer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "GetNativeStringLengthNotIncludingNullTerminator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pointer});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::DateTimeFromNative
// Il2CppName: DateTimeFromNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(uint64_t)>(&Oculus::Platform::CAPI::DateTimeFromNative)> {
  static const MethodInfo* get() {
    static auto* seconds_since_the_one_true_epoch = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "DateTimeFromNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{seconds_since_the_one_true_epoch});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::DateTimeToNative
// Il2CppName: DateTimeToNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::DateTime)>(&Oculus::Platform::CAPI::DateTimeToNative)> {
  static const MethodInfo* get() {
    static auto* dt = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "DateTimeToNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dt});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::BlobFromNative
// Il2CppName: BlobFromNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(uint, ::System::IntPtr)>(&Oculus::Platform::CAPI::BlobFromNative)> {
  static const MethodInfo* get() {
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* pointer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "BlobFromNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{size, pointer});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::FiledataFromNative
// Il2CppName: FiledataFromNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(uint, ::System::IntPtr)>(&Oculus::Platform::CAPI::FiledataFromNative)> {
  static const MethodInfo* get() {
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* pointer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "FiledataFromNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{size, pointer});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::StringToNative
// Il2CppName: StringToNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::StringW)>(&Oculus::Platform::CAPI::StringToNative)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "StringToNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UnityInitWrapper
// Il2CppName: ovr_UnityInitWrapper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_UnityInitWrapper)> {
  static const MethodInfo* get() {
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UnityInitWrapper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appId});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UnityInitGlobals
// Il2CppName: ovr_UnityInitGlobals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UnityInitGlobals)> {
  static const MethodInfo* get() {
    static auto* loggingCB = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UnityInitGlobals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{loggingCB});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UnityInitWrapperAsynchronous
// Il2CppName: ovr_UnityInitWrapperAsynchronous
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_UnityInitWrapperAsynchronous)> {
  static const MethodInfo* get() {
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UnityInitWrapperAsynchronous", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appId});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UnityInitWrapperStandalone
// Il2CppName: ovr_UnityInitWrapperStandalone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UnityInitWrapperStandalone)> {
  static const MethodInfo* get() {
    static auto* accessToken = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* loggingCB = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UnityInitWrapperStandalone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accessToken, loggingCB});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Platform_InitializeStandaloneOculus
// Il2CppName: ovr_Platform_InitializeStandaloneOculus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(ByRef<::Oculus::Platform::CAPI::OculusInitParams>)>(&Oculus::Platform::CAPI::ovr_Platform_InitializeStandaloneOculus)> {
  static const MethodInfo* get() {
    static auto* init = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/OculusInitParams")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Platform_InitializeStandaloneOculus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{init});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessToken
// Il2CppName: ovr_PlatformInitializeWithAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessToken)> {
  static const MethodInfo* get() {
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* accessToken = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PlatformInitializeWithAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appId, accessToken});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UnityInitWrapperWindows
// Il2CppName: ovr_UnityInitWrapperWindows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UnityInitWrapperWindows)> {
  static const MethodInfo* get() {
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* loggingCB = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UnityInitWrapperWindows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appId, loggingCB});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UnityInitWrapperWindowsAsynchronous
// Il2CppName: ovr_UnityInitWrapperWindowsAsynchronous
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UnityInitWrapperWindowsAsynchronous)> {
  static const MethodInfo* get() {
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* loggingCB = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UnityInitWrapperWindowsAsynchronous", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appId, loggingCB});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SetDeveloperAccessToken
// Il2CppName: ovr_SetDeveloperAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_SetDeveloperAccessToken)> {
  static const MethodInfo* get() {
    static auto* accessToken = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SetDeveloperAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accessToken});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale
// Il2CppName: ovr_GetLoggedInUserLocale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GetLoggedInUserLocale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale_Native
// Il2CppName: ovr_GetLoggedInUserLocale_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale_Native)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GetLoggedInUserLocale_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PopMessage
// Il2CppName: ovr_PopMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_PopMessage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PopMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_FreeMessage
// Il2CppName: ovr_FreeMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_FreeMessage)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_FreeMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_CreateEncoder
// Il2CppName: ovr_Voip_CreateEncoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_Voip_CreateEncoder)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_CreateEncoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_DestroyEncoder
// Il2CppName: ovr_Voip_DestroyEncoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Voip_DestroyEncoder)> {
  static const MethodInfo* get() {
    static auto* encoder = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_DestroyEncoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{encoder});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_CreateDecoder
// Il2CppName: ovr_Voip_CreateDecoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_Voip_CreateDecoder)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_CreateDecoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_DestroyDecoder
// Il2CppName: ovr_Voip_DestroyDecoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Voip_DestroyDecoder)> {
  static const MethodInfo* get() {
    static auto* decoder = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_DestroyDecoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{decoder});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipDecoder_Decode
// Il2CppName: ovr_VoipDecoder_Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::ArrayW<uint8_t>, uint64_t)>(&Oculus::Platform::CAPI::ovr_VoipDecoder_Decode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* compressedData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* compressedSize = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipDecoder_Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, compressedData, compressedSize});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_Create
// Il2CppName: ovr_Microphone_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_Microphone_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_Destroy
// Il2CppName: ovr_Microphone_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_Destroy)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipPassthrough
// Il2CppName: ovr_Voip_SetSystemVoipPassthrough
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipPassthrough)> {
  static const MethodInfo* get() {
    static auto* passthrough = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_SetSystemVoipPassthrough", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{passthrough});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipMicrophoneMuted
// Il2CppName: ovr_Voip_SetSystemVoipMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Platform::VoipMuteState)>(&Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipMicrophoneMuted)> {
  static const MethodInfo* get() {
    static auto* muted = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "VoipMuteState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_SetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{muted});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UnityResetTestPlatform
// Il2CppName: ovr_UnityResetTestPlatform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Platform::CAPI::ovr_UnityResetTestPlatform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UnityResetTestPlatform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_GetWithMessageType
// Il2CppName: ovr_HTTP_GetWithMessageType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, int)>(&Oculus::Platform::CAPI::ovr_HTTP_GetWithMessageType)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* messageType = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_GetWithMessageType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, messageType});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CrashApplication
// Il2CppName: ovr_CrashApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Platform::CAPI::ovr_CrashApplication)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CrashApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallback
// Il2CppName: ovr_Voip_SetMicrophoneFilterCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Platform::CAPI::FilterCallback*)>(&Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallback)> {
  static const MethodInfo* get() {
    static auto* cb = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/FilterCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_SetMicrophoneFilterCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cb});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer
// Il2CppName: ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Platform::CAPI::FilterCallback*, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer)> {
  static const MethodInfo* get() {
    static auto* cb = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/FilterCallback")->byval_arg;
    static auto* bufferSizeElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cb, bufferSizeElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::LogNewEvent
// Il2CppName: LogNewEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&Oculus::Platform::CAPI::LogNewEvent)> {
  static const MethodInfo* get() {
    static auto* eventName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* values = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "LogNewEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventName, values});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Log_NewEvent
// Il2CppName: ovr_Log_NewEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::ArrayW<::System::IntPtr>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Log_NewEvent)> {
  static const MethodInfo* get() {
    static auto* eventName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* values = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "IntPtr"), 1)->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Log_NewEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventName, values, length});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetLaunchDetails
// Il2CppName: ovr_ApplicationLifecycle_GetLaunchDetails
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetLaunchDetails)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationLifecycle_GetLaunchDetails", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult
// Il2CppName: ovr_ApplicationLifecycle_LogDeeplinkResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::Oculus::Platform::LaunchResult)>(&Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult)> {
  static const MethodInfo* get() {
    static auto* trackingID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LaunchResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationLifecycle_LogDeeplinkResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{trackingID, result});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult_Native
// Il2CppName: ovr_ApplicationLifecycle_LogDeeplinkResult_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::LaunchResult)>(&Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult_Native)> {
  static const MethodInfo* get() {
    static auto* trackingID = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LaunchResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationLifecycle_LogDeeplinkResult_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{trackingID, result});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_StartTransfer
// Il2CppName: ovr_HTTP_StartTransfer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>)>(&Oculus::Platform::CAPI::ovr_HTTP_StartTransfer)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* headers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrKeyValuePair"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_StartTransfer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, headers});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_StartTransfer_Native
// Il2CppName: ovr_HTTP_StartTransfer_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_HTTP_StartTransfer_Native)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* headers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrKeyValuePair"), 1)->byval_arg;
    static auto* numItems = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_StartTransfer_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, headers, numItems});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_Write
// Il2CppName: ovr_HTTP_Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::ArrayW<uint8_t>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_HTTP_Write)> {
  static const MethodInfo* get() {
    static auto* transferId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transferId, bytes, length});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_WriteEOM
// Il2CppName: ovr_HTTP_WriteEOM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_HTTP_WriteEOM)> {
  static const MethodInfo* get() {
    static auto* transferId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_WriteEOM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transferId});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript
// Il2CppName: ovr_Message_GetStringForJavascript
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetStringForJavascript", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript_Native
// Il2CppName: ovr_Message_GetStringForJavascript_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript_Native)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetStringForJavascript_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicFloatPCM
// Il2CppName: ovr_NetSync_GetAmbisonicFloatPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(int64_t, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicFloatPCM)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetAmbisonicFloatPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInt16PCM
// Il2CppName: ovr_NetSync_GetAmbisonicInt16PCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(int64_t, ::ArrayW<int16_t>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInt16PCM)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetAmbisonicInt16PCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedFloatPCM
// Il2CppName: ovr_NetSync_GetAmbisonicInterleavedFloatPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(int64_t, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedFloatPCM)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetAmbisonicInterleavedFloatPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedInt16PCM
// Il2CppName: ovr_NetSync_GetAmbisonicInterleavedInt16PCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(int64_t, ::ArrayW<int16_t>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedInt16PCM)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetAmbisonicInterleavedInt16PCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetListenerPosition
// Il2CppName: ovr_NetSync_GetListenerPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int64_t, uint64_t, ByRef<::Oculus::Platform::CAPI::ovrNetSyncVec3>)>(&Oculus::Platform::CAPI::ovr_NetSync_GetListenerPosition)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrNetSyncVec3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetListenerPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, sessionId, position});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamFloatPCM
// Il2CppName: ovr_NetSync_GetMonostreamFloatPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(int64_t, uint64_t, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamFloatPCM)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetMonostreamFloatPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, sessionId, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamInt16PCM
// Il2CppName: ovr_NetSync_GetMonostreamInt16PCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(int64_t, uint64_t, ::ArrayW<int16_t>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamInt16PCM)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* session_id = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetMonostreamInt16PCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, session_id, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetPcmBufferMaxSamples
// Il2CppName: ovr_NetSync_GetPcmBufferMaxSamples
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)()>(&Oculus::Platform::CAPI::ovr_NetSync_GetPcmBufferMaxSamples)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetPcmBufferMaxSamples", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetVoipAmplitude
// Il2CppName: ovr_NetSync_GetVoipAmplitude
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int64_t, uint64_t, ByRef<float>)>(&Oculus::Platform::CAPI::ovr_NetSync_GetVoipAmplitude)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* amplitude = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetVoipAmplitude", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, sessionId, amplitude});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetListenerPosition
// Il2CppName: ovr_NetSync_SetListenerPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int64_t, ByRef<::Oculus::Platform::CAPI::ovrNetSyncVec3>)>(&Oculus::Platform::CAPI::ovr_NetSync_SetListenerPosition)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrNetSyncVec3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetListenerPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, position});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Net_Accept
// Il2CppName: ovr_Net_Accept
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Net_Accept)> {
  static const MethodInfo* get() {
    static auto* peerID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Net_Accept", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{peerID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Net_AcceptForCurrentRoom
// Il2CppName: ovr_Net_AcceptForCurrentRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Oculus::Platform::CAPI::ovr_Net_AcceptForCurrentRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Net_AcceptForCurrentRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Net_Close
// Il2CppName: ovr_Net_Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Net_Close)> {
  static const MethodInfo* get() {
    static auto* peerID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Net_Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{peerID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Net_CloseForCurrentRoom
// Il2CppName: ovr_Net_CloseForCurrentRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Oculus::Platform::CAPI::ovr_Net_CloseForCurrentRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Net_CloseForCurrentRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Net_Connect
// Il2CppName: ovr_Net_Connect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Net_Connect)> {
  static const MethodInfo* get() {
    static auto* peerID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Net_Connect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{peerID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Net_IsConnected
// Il2CppName: ovr_Net_IsConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Net_IsConnected)> {
  static const MethodInfo* get() {
    static auto* peerID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Net_IsConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{peerID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Net_Ping
// Il2CppName: ovr_Net_Ping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Net_Ping)> {
  static const MethodInfo* get() {
    static auto* peerID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Net_Ping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{peerID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Net_ReadPacket
// Il2CppName: ovr_Net_ReadPacket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_Net_ReadPacket)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Net_ReadPacket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Net_SendPacket
// Il2CppName: ovr_Net_SendPacket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::System::UIntPtr, ::ArrayW<uint8_t>, ::Oculus::Platform::SendPolicy)>(&Oculus::Platform::CAPI::ovr_Net_SendPacket)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* policy = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "SendPolicy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Net_SendPacket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, length, bytes, policy});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Net_SendPacketToCurrentRoom
// Il2CppName: ovr_Net_SendPacketToCurrentRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::UIntPtr, ::ArrayW<uint8_t>, ::Oculus::Platform::SendPolicy)>(&Oculus::Platform::CAPI::ovr_Net_SendPacketToCurrentRoom)> {
  static const MethodInfo* get() {
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* policy = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "SendPolicy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Net_SendPacketToCurrentRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{length, bytes, policy});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_PluginGetSharedMemHandle
// Il2CppName: ovr_Party_PluginGetSharedMemHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Oculus::Platform::CAPI::ovr_Party_PluginGetSharedMemHandle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_PluginGetSharedMemHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_PluginGetVoipMicrophoneMuted
// Il2CppName: ovr_Party_PluginGetVoipMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::VoipMuteState (*)()>(&Oculus::Platform::CAPI::ovr_Party_PluginGetVoipMicrophoneMuted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_PluginGetVoipMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_PluginGetVoipPassthrough
// Il2CppName: ovr_Party_PluginGetVoipPassthrough
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Oculus::Platform::CAPI::ovr_Party_PluginGetVoipPassthrough)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_PluginGetVoipPassthrough", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_PluginGetVoipStatus
// Il2CppName: ovr_Party_PluginGetVoipStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::SystemVoipStatus (*)()>(&Oculus::Platform::CAPI::ovr_Party_PluginGetVoipStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_PluginGetVoipStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_Accept
// Il2CppName: ovr_Voip_Accept
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Voip_Accept)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_Accept", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetIsConnectionUsingDtx
// Il2CppName: ovr_Voip_GetIsConnectionUsingDtx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::VoipDtxState (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Voip_GetIsConnectionUsingDtx)> {
  static const MethodInfo* get() {
    static auto* peerID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetIsConnectionUsingDtx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{peerID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetLocalBitrate
// Il2CppName: ovr_Voip_GetLocalBitrate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::VoipBitrate (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Voip_GetLocalBitrate)> {
  static const MethodInfo* get() {
    static auto* peerID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetLocalBitrate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{peerID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetOutputBufferMaxSize
// Il2CppName: ovr_Voip_GetOutputBufferMaxSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)()>(&Oculus::Platform::CAPI::ovr_Voip_GetOutputBufferMaxSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetOutputBufferMaxSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetPCM
// Il2CppName: ovr_Voip_GetPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(uint64_t, ::ArrayW<int16_t>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Voip_GetPCM)> {
  static const MethodInfo* get() {
    static auto* senderID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{senderID, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetPCMFloat
// Il2CppName: ovr_Voip_GetPCMFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(uint64_t, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Voip_GetPCMFloat)> {
  static const MethodInfo* get() {
    static auto* senderID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetPCMFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{senderID, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetPCMSize
// Il2CppName: ovr_Voip_GetPCMSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Voip_GetPCMSize)> {
  static const MethodInfo* get() {
    static auto* senderID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetPCMSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{senderID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestamp
// Il2CppName: ovr_Voip_GetPCMWithTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(uint64_t, ::ArrayW<int16_t>, ::System::UIntPtr, ::ArrayW<uint>)>(&Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestamp)> {
  static const MethodInfo* get() {
    static auto* senderID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    static auto* timestamp = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetPCMWithTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{senderID, outputBuffer, outputBufferNumElements, timestamp});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestampFloat
// Il2CppName: ovr_Voip_GetPCMWithTimestampFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(uint64_t, ::ArrayW<float>, ::System::UIntPtr, ::ArrayW<uint>)>(&Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestampFloat)> {
  static const MethodInfo* get() {
    static auto* senderID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    static auto* timestamp = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetPCMWithTimestampFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{senderID, outputBuffer, outputBufferNumElements, timestamp});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetRemoteBitrate
// Il2CppName: ovr_Voip_GetRemoteBitrate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::VoipBitrate (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Voip_GetRemoteBitrate)> {
  static const MethodInfo* get() {
    static auto* peerID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetRemoteBitrate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{peerID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestamp
// Il2CppName: ovr_Voip_GetSyncTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestamp)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetSyncTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestampDifference
// Il2CppName: ovr_Voip_GetSyncTimestampDifference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(uint, uint)>(&Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestampDifference)> {
  static const MethodInfo* get() {
    static auto* lhs = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* rhs = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetSyncTimestampDifference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lhs, rhs});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipMicrophoneMuted
// Il2CppName: ovr_Voip_GetSystemVoipMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::VoipMuteState (*)()>(&Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipMicrophoneMuted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipStatus
// Il2CppName: ovr_Voip_GetSystemVoipStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::SystemVoipStatus (*)()>(&Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetSystemVoipStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneMuted
// Il2CppName: ovr_Voip_SetMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Platform::VoipMuteState)>(&Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneMuted)> {
  static const MethodInfo* get() {
    static auto* state = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "VoipMuteState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_SetMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{state});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_SetNewConnectionOptions
// Il2CppName: ovr_Voip_SetNewConnectionOptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Voip_SetNewConnectionOptions)> {
  static const MethodInfo* get() {
    static auto* voipOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_SetNewConnectionOptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{voipOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_SetOutputSampleRate
// Il2CppName: ovr_Voip_SetOutputSampleRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Platform::VoipSampleRate)>(&Oculus::Platform::CAPI::ovr_Voip_SetOutputSampleRate)> {
  static const MethodInfo* get() {
    static auto* rate = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "VoipSampleRate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_SetOutputSampleRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rate});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_Start
// Il2CppName: ovr_Voip_Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Voip_Start)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_Stop
// Il2CppName: ovr_Voip_Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Voip_Stop)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AbuseReport_LaunchAdvancedReportFlow
// Il2CppName: ovr_AbuseReport_LaunchAdvancedReportFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AbuseReport_LaunchAdvancedReportFlow)> {
  static const MethodInfo* get() {
    static auto* content_id = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* abuse_report_options = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AbuseReport_LaunchAdvancedReportFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{content_id, abuse_report_options});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_AddCount
// Il2CppName: ovr_Achievements_AddCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, uint64_t)>(&Oculus::Platform::CAPI::ovr_Achievements_AddCount)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_AddCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_AddCount_Native
// Il2CppName: ovr_Achievements_AddCount_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::ovr_Achievements_AddCount_Native)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_AddCount_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_AddFields
// Il2CppName: ovr_Achievements_AddFields
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_Achievements_AddFields)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fields = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_AddFields", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, fields});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_AddFields_Native
// Il2CppName: ovr_Achievements_AddFields_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Achievements_AddFields_Native)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* fields = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_AddFields_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, fields});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_GetAllDefinitions
// Il2CppName: ovr_Achievements_GetAllDefinitions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Achievements_GetAllDefinitions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_GetAllDefinitions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_GetAllProgress
// Il2CppName: ovr_Achievements_GetAllProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Achievements_GetAllProgress)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_GetAllProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_GetDefinitionsByName
// Il2CppName: ovr_Achievements_GetDefinitionsByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::ArrayW<::StringW>, int)>(&Oculus::Platform::CAPI::ovr_Achievements_GetDefinitionsByName)> {
  static const MethodInfo* get() {
    static auto* names = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_GetDefinitionsByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{names, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_GetProgressByName
// Il2CppName: ovr_Achievements_GetProgressByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::ArrayW<::StringW>, int)>(&Oculus::Platform::CAPI::ovr_Achievements_GetProgressByName)> {
  static const MethodInfo* get() {
    static auto* names = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_GetProgressByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{names, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_Unlock
// Il2CppName: ovr_Achievements_Unlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_Achievements_Unlock)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_Unlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Achievements_Unlock_Native
// Il2CppName: ovr_Achievements_Unlock_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Achievements_Unlock_Native)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Achievements_Unlock_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Application_ExecuteCoordinatedLaunch
// Il2CppName: ovr_Application_ExecuteCoordinatedLaunch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t)>(&Oculus::Platform::CAPI::ovr_Application_ExecuteCoordinatedLaunch)> {
  static const MethodInfo* get() {
    static auto* appID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Application_ExecuteCoordinatedLaunch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appID, roomID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Application_GetInstalledApplications
// Il2CppName: ovr_Application_GetInstalledApplications
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Application_GetInstalledApplications)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Application_GetInstalledApplications", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Application_GetVersion
// Il2CppName: ovr_Application_GetVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Application_GetVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Application_GetVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Application_LaunchOtherApp
// Il2CppName: ovr_Application_LaunchOtherApp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Application_LaunchOtherApp)> {
  static const MethodInfo* get() {
    static auto* appID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* deeplink_options = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Application_LaunchOtherApp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appID, deeplink_options});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetRegisteredPIDs
// Il2CppName: ovr_ApplicationLifecycle_GetRegisteredPIDs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetRegisteredPIDs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationLifecycle_GetRegisteredPIDs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetSessionKey
// Il2CppName: ovr_ApplicationLifecycle_GetSessionKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetSessionKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationLifecycle_GetSessionKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey
// Il2CppName: ovr_ApplicationLifecycle_RegisterSessionKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey)> {
  static const MethodInfo* get() {
    static auto* sessionKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationLifecycle_RegisterSessionKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionKey});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey_Native
// Il2CppName: ovr_ApplicationLifecycle_RegisterSessionKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey_Native)> {
  static const MethodInfo* get() {
    static auto* sessionKey = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationLifecycle_RegisterSessionKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionKey});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_Delete
// Il2CppName: ovr_AssetFile_Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_AssetFile_Delete)> {
  static const MethodInfo* get() {
    static auto* assetFileID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DeleteById
// Il2CppName: ovr_AssetFile_DeleteById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_AssetFile_DeleteById)> {
  static const MethodInfo* get() {
    static auto* assetFileID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DeleteById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName
// Il2CppName: ovr_AssetFile_DeleteByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName)> {
  static const MethodInfo* get() {
    static auto* assetFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DeleteByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName_Native
// Il2CppName: ovr_AssetFile_DeleteByName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName_Native)> {
  static const MethodInfo* get() {
    static auto* assetFileName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DeleteByName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_Download
// Il2CppName: ovr_AssetFile_Download
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_AssetFile_Download)> {
  static const MethodInfo* get() {
    static auto* assetFileID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_Download", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DownloadById
// Il2CppName: ovr_AssetFile_DownloadById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_AssetFile_DownloadById)> {
  static const MethodInfo* get() {
    static auto* assetFileID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DownloadById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName
// Il2CppName: ovr_AssetFile_DownloadByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName)> {
  static const MethodInfo* get() {
    static auto* assetFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DownloadByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName_Native
// Il2CppName: ovr_AssetFile_DownloadByName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName_Native)> {
  static const MethodInfo* get() {
    static auto* assetFileName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DownloadByName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancel
// Il2CppName: ovr_AssetFile_DownloadCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancel)> {
  static const MethodInfo* get() {
    static auto* assetFileID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DownloadCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelById
// Il2CppName: ovr_AssetFile_DownloadCancelById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelById)> {
  static const MethodInfo* get() {
    static auto* assetFileID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DownloadCancelById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName
// Il2CppName: ovr_AssetFile_DownloadCancelByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName)> {
  static const MethodInfo* get() {
    static auto* assetFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DownloadCancelByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName_Native
// Il2CppName: ovr_AssetFile_DownloadCancelByName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName_Native)> {
  static const MethodInfo* get() {
    static auto* assetFileName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_DownloadCancelByName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_GetList
// Il2CppName: ovr_AssetFile_GetList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_AssetFile_GetList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_GetList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_Status
// Il2CppName: ovr_AssetFile_Status
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_AssetFile_Status)> {
  static const MethodInfo* get() {
    static auto* assetFileID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_Status", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_StatusById
// Il2CppName: ovr_AssetFile_StatusById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_AssetFile_StatusById)> {
  static const MethodInfo* get() {
    static auto* assetFileID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_StatusById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_StatusByName
// Il2CppName: ovr_AssetFile_StatusByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_AssetFile_StatusByName)> {
  static const MethodInfo* get() {
    static auto* assetFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_StatusByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFile_StatusByName_Native
// Il2CppName: ovr_AssetFile_StatusByName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFile_StatusByName_Native)> {
  static const MethodInfo* get() {
    static auto* assetFileName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFile_StatusByName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assetFileName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData
// Il2CppName: ovr_Avatar_UpdateMetaData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData)> {
  static const MethodInfo* get() {
    static auto* avatarMetaData = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* imageFilePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Avatar_UpdateMetaData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatarMetaData, imageFilePath});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData_Native
// Il2CppName: ovr_Avatar_UpdateMetaData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData_Native)> {
  static const MethodInfo* get() {
    static auto* avatarMetaData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* imageFilePath = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Avatar_UpdateMetaData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{avatarMetaData, imageFilePath});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Cal_FinalizeApplication
// Il2CppName: ovr_Cal_FinalizeApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::ArrayW<uint64_t>, int, uint64_t)>(&Oculus::Platform::CAPI::ovr_Cal_FinalizeApplication)> {
  static const MethodInfo* get() {
    static auto* groupingObject = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* userIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* numUserIDs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* finalized_application_ID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Cal_FinalizeApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupingObject, userIDs, numUserIDs, finalized_application_ID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Cal_GetSuggestedApplications
// Il2CppName: ovr_Cal_GetSuggestedApplications
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::ArrayW<uint64_t>, int)>(&Oculus::Platform::CAPI::ovr_Cal_GetSuggestedApplications)> {
  static const MethodInfo* get() {
    static auto* groupingObject = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* userIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* numUserIDs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Cal_GetSuggestedApplications", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupingObject, userIDs, numUserIDs});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Cal_ProposeApplication
// Il2CppName: ovr_Cal_ProposeApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::ArrayW<uint64_t>, int, uint64_t)>(&Oculus::Platform::CAPI::ovr_Cal_ProposeApplication)> {
  static const MethodInfo* get() {
    static auto* groupingObject = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* userIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* numUserIDs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* proposed_application_ID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Cal_ProposeApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupingObject, userIDs, numUserIDs, proposed_application_ID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_Create
// Il2CppName: ovr_Challenges_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenges_Create)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* challengeOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, challengeOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_Create_Native
// Il2CppName: ovr_Challenges_Create_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenges_Create_Native)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* challengeOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_Create_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, challengeOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_DeclineInvite
// Il2CppName: ovr_Challenges_DeclineInvite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Challenges_DeclineInvite)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_DeclineInvite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_Delete
// Il2CppName: ovr_Challenges_Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Challenges_Delete)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_Get
// Il2CppName: ovr_Challenges_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Challenges_Get)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_GetEntries
// Il2CppName: ovr_Challenges_GetEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, int, ::Oculus::Platform::LeaderboardFilterType, ::Oculus::Platform::LeaderboardStartAt)>(&Oculus::Platform::CAPI::ovr_Challenges_GetEntries)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* filter = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardFilterType")->byval_arg;
    static auto* startAt = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardStartAt")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_GetEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID, limit, filter, startAt});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_GetEntriesAfterRank
// Il2CppName: ovr_Challenges_GetEntriesAfterRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, int, uint64_t)>(&Oculus::Platform::CAPI::ovr_Challenges_GetEntriesAfterRank)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* afterRank = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_GetEntriesAfterRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID, limit, afterRank});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_GetEntriesByIds
// Il2CppName: ovr_Challenges_GetEntriesByIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, int, ::Oculus::Platform::LeaderboardStartAt, ::ArrayW<uint64_t>, uint)>(&Oculus::Platform::CAPI::ovr_Challenges_GetEntriesByIds)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* startAt = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardStartAt")->byval_arg;
    static auto* userIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* userIDLength = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_GetEntriesByIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID, limit, startAt, userIDs, userIDLength});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_GetList
// Il2CppName: ovr_Challenges_GetList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, int)>(&Oculus::Platform::CAPI::ovr_Challenges_GetList)> {
  static const MethodInfo* get() {
    static auto* challengeOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_GetList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeOptions, limit});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_GetNextChallenges
// Il2CppName: ovr_Challenges_GetNextChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenges_GetNextChallenges)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_GetNextChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_GetNextEntries
// Il2CppName: ovr_Challenges_GetNextEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenges_GetNextEntries)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_GetNextEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_GetPreviousChallenges
// Il2CppName: ovr_Challenges_GetPreviousChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenges_GetPreviousChallenges)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_GetPreviousChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_GetPreviousEntries
// Il2CppName: ovr_Challenges_GetPreviousEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenges_GetPreviousEntries)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_GetPreviousEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_Join
// Il2CppName: ovr_Challenges_Join
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Challenges_Join)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_Join", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_Leave
// Il2CppName: ovr_Challenges_Leave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Challenges_Leave)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_Leave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenges_UpdateInfo
// Il2CppName: ovr_Challenges_UpdateInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenges_UpdateInfo)> {
  static const MethodInfo* get() {
    static auto* challengeID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* challengeOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenges_UpdateInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{challengeID, challengeOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_Delete
// Il2CppName: ovr_CloudStorage_Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_CloudStorage_Delete)> {
  static const MethodInfo* get() {
    static auto* bucket = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bucket, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_Delete_Native
// Il2CppName: ovr_CloudStorage_Delete_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorage_Delete_Native)> {
  static const MethodInfo* get() {
    static auto* bucket = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_Delete_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bucket, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_Load
// Il2CppName: ovr_CloudStorage_Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_CloudStorage_Load)> {
  static const MethodInfo* get() {
    static auto* bucket = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bucket, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_Load_Native
// Il2CppName: ovr_CloudStorage_Load_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorage_Load_Native)> {
  static const MethodInfo* get() {
    static auto* bucket = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_Load_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bucket, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata
// Il2CppName: ovr_CloudStorage_LoadBucketMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata)> {
  static const MethodInfo* get() {
    static auto* bucket = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_LoadBucketMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bucket});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata_Native
// Il2CppName: ovr_CloudStorage_LoadBucketMetadata_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata_Native)> {
  static const MethodInfo* get() {
    static auto* bucket = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_LoadBucketMetadata_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bucket});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata
// Il2CppName: ovr_CloudStorage_LoadConflictMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata)> {
  static const MethodInfo* get() {
    static auto* bucket = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_LoadConflictMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bucket, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata_Native
// Il2CppName: ovr_CloudStorage_LoadConflictMetadata_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata_Native)> {
  static const MethodInfo* get() {
    static auto* bucket = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_LoadConflictMetadata_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bucket, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle
// Il2CppName: ovr_CloudStorage_LoadHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_LoadHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle_Native
// Il2CppName: ovr_CloudStorage_LoadHandle_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_LoadHandle_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata
// Il2CppName: ovr_CloudStorage_LoadMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata)> {
  static const MethodInfo* get() {
    static auto* bucket = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_LoadMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bucket, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata_Native
// Il2CppName: ovr_CloudStorage_LoadMetadata_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata_Native)> {
  static const MethodInfo* get() {
    static auto* bucket = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_LoadMetadata_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bucket, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal
// Il2CppName: ovr_CloudStorage_ResolveKeepLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal)> {
  static const MethodInfo* get() {
    static auto* bucket = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* remoteHandle = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_ResolveKeepLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bucket, key, remoteHandle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal_Native
// Il2CppName: ovr_CloudStorage_ResolveKeepLocal_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal_Native)> {
  static const MethodInfo* get() {
    static auto* bucket = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* remoteHandle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_ResolveKeepLocal_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bucket, key, remoteHandle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote
// Il2CppName: ovr_CloudStorage_ResolveKeepRemote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote)> {
  static const MethodInfo* get() {
    static auto* bucket = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* remoteHandle = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_ResolveKeepRemote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bucket, key, remoteHandle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote_Native
// Il2CppName: ovr_CloudStorage_ResolveKeepRemote_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote_Native)> {
  static const MethodInfo* get() {
    static auto* bucket = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* remoteHandle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_ResolveKeepRemote_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bucket, key, remoteHandle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_Save
// Il2CppName: ovr_CloudStorage_Save
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW, ::ArrayW<uint8_t>, uint, int64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_CloudStorage_Save)> {
  static const MethodInfo* get() {
    static auto* bucket = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* dataSize = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* counter = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* extraData = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_Save", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bucket, key, data, dataSize, counter, extraData});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage_Save_Native
// Il2CppName: ovr_CloudStorage_Save_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr, ::ArrayW<uint8_t>, uint, int64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorage_Save_Native)> {
  static const MethodInfo* get() {
    static auto* bucket = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* dataSize = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* counter = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* extraData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage_Save_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bucket, key, data, dataSize, counter, extraData});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage2_GetUserDirectoryPath
// Il2CppName: ovr_CloudStorage2_GetUserDirectoryPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_CloudStorage2_GetUserDirectoryPath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage2_GetUserDirectoryPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Colocation_GetCurrentMapUuid
// Il2CppName: ovr_Colocation_GetCurrentMapUuid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Colocation_GetCurrentMapUuid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Colocation_GetCurrentMapUuid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Colocation_RequestMap
// Il2CppName: ovr_Colocation_RequestMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_Colocation_RequestMap)> {
  static const MethodInfo* get() {
    static auto* uuid = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Colocation_RequestMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uuid});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Colocation_RequestMap_Native
// Il2CppName: ovr_Colocation_RequestMap_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Colocation_RequestMap_Native)> {
  static const MethodInfo* get() {
    static auto* uuid = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Colocation_RequestMap_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uuid});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Colocation_ShareMap
// Il2CppName: ovr_Colocation_ShareMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_Colocation_ShareMap)> {
  static const MethodInfo* get() {
    static auto* uuid = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Colocation_ShareMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uuid});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Colocation_ShareMap_Native
// Il2CppName: ovr_Colocation_ShareMap_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Colocation_ShareMap_Native)> {
  static const MethodInfo* get() {
    static auto* uuid = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Colocation_ShareMap_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uuid});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Entitlement_GetIsViewerEntitled
// Il2CppName: ovr_Entitlement_GetIsViewerEntitled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Entitlement_GetIsViewerEntitled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Entitlement_GetIsViewerEntitled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GraphAPI_Get
// Il2CppName: ovr_GraphAPI_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_GraphAPI_Get)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GraphAPI_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GraphAPI_Get_Native
// Il2CppName: ovr_GraphAPI_Get_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GraphAPI_Get_Native)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GraphAPI_Get_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GraphAPI_Post
// Il2CppName: ovr_GraphAPI_Post
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_GraphAPI_Post)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GraphAPI_Post", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GraphAPI_Post_Native
// Il2CppName: ovr_GraphAPI_Post_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GraphAPI_Post_Native)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GraphAPI_Post_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_Clear
// Il2CppName: ovr_GroupPresence_Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_GroupPresence_Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_LaunchInvitePanel
// Il2CppName: ovr_GroupPresence_LaunchInvitePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresence_LaunchInvitePanel)> {
  static const MethodInfo* get() {
    static auto* options = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_LaunchInvitePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{options});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRosterPanel
// Il2CppName: ovr_GroupPresence_LaunchRosterPanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRosterPanel)> {
  static const MethodInfo* get() {
    static auto* options = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_LaunchRosterPanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{options});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_Set
// Il2CppName: ovr_GroupPresence_Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresence_Set)> {
  static const MethodInfo* get() {
    static auto* groupPresenceOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupPresenceOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination
// Il2CppName: ovr_GroupPresence_SetDestination
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination)> {
  static const MethodInfo* get() {
    static auto* api_name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SetDestination", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{api_name});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination_Native
// Il2CppName: ovr_GroupPresence_SetDestination_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination_Native)> {
  static const MethodInfo* get() {
    static auto* api_name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SetDestination_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{api_name});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SetIsJoinable
// Il2CppName: ovr_GroupPresence_SetIsJoinable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(bool)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SetIsJoinable)> {
  static const MethodInfo* get() {
    static auto* is_joinable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SetIsJoinable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{is_joinable});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession
// Il2CppName: ovr_GroupPresence_SetLobbySession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SetLobbySession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession_Native
// Il2CppName: ovr_GroupPresence_SetLobbySession_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession_Native)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SetLobbySession_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession
// Il2CppName: ovr_GroupPresence_SetMatchSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SetMatchSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession_Native
// Il2CppName: ovr_GroupPresence_SetMatchSession_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession_Native)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresence_SetMatchSession_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_Get
// Il2CppName: ovr_HTTP_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_HTTP_Get)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_Get_Native
// Il2CppName: ovr_HTTP_Get_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_HTTP_Get_Native)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_Get_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_GetToFile
// Il2CppName: ovr_HTTP_GetToFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_HTTP_GetToFile)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* diskFile = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_GetToFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, diskFile});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_GetToFile_Native
// Il2CppName: ovr_HTTP_GetToFile_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_HTTP_GetToFile_Native)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* diskFile = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_GetToFile_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, diskFile});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost
// Il2CppName: ovr_HTTP_MultiPartPost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW, ::StringW, ::StringW, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>)>(&Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* filepath_param_name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* filepath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* access_token = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* post_params = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrKeyValuePair"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_MultiPartPost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, filepath_param_name, filepath, access_token, post_params});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost_Native
// Il2CppName: ovr_HTTP_MultiPartPost_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr, ::System::IntPtr, ::System::IntPtr, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost_Native)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* filepath_param_name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* filepath = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* access_token = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* post_params = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrKeyValuePair"), 1)->byval_arg;
    static auto* numItems = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_MultiPartPost_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, filepath_param_name, filepath, access_token, post_params, numItems});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_Post
// Il2CppName: ovr_HTTP_Post
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_HTTP_Post)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_Post", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HTTP_Post_Native
// Il2CppName: ovr_HTTP_Post_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_HTTP_Post_Native)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HTTP_Post_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase
// Il2CppName: ovr_IAP_ConsumePurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase)> {
  static const MethodInfo* get() {
    static auto* sku = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_IAP_ConsumePurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sku});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase_Native
// Il2CppName: ovr_IAP_ConsumePurchase_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase_Native)> {
  static const MethodInfo* get() {
    static auto* sku = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_IAP_ConsumePurchase_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sku});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_IAP_GetProductsBySKU
// Il2CppName: ovr_IAP_GetProductsBySKU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::ArrayW<::StringW>, int)>(&Oculus::Platform::CAPI::ovr_IAP_GetProductsBySKU)> {
  static const MethodInfo* get() {
    static auto* skus = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_IAP_GetProductsBySKU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{skus, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchases
// Il2CppName: ovr_IAP_GetViewerPurchases
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchases)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_IAP_GetViewerPurchases", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchasesDurableCache
// Il2CppName: ovr_IAP_GetViewerPurchasesDurableCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchasesDurableCache)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_IAP_GetViewerPurchasesDurableCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow
// Il2CppName: ovr_IAP_LaunchCheckoutFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow)> {
  static const MethodInfo* get() {
    static auto* sku = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_IAP_LaunchCheckoutFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sku});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow_Native
// Il2CppName: ovr_IAP_LaunchCheckoutFlow_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow_Native)> {
  static const MethodInfo* get() {
    static auto* sku = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_IAP_LaunchCheckoutFlow_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sku});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePack_GetCurrent
// Il2CppName: ovr_LanguagePack_GetCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_LanguagePack_GetCurrent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePack_GetCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent
// Il2CppName: ovr_LanguagePack_SetCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent)> {
  static const MethodInfo* get() {
    static auto* tag = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePack_SetCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tag});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent_Native
// Il2CppName: ovr_LanguagePack_SetCurrent_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent_Native)> {
  static const MethodInfo* get() {
    static auto* tag = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePack_SetCurrent_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tag});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_Get
// Il2CppName: ovr_Leaderboard_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_Leaderboard_Get)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_Get_Native
// Il2CppName: ovr_Leaderboard_Get_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Leaderboard_Get_Native)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_Get_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries
// Il2CppName: ovr_Leaderboard_GetEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, int, ::Oculus::Platform::LeaderboardFilterType, ::Oculus::Platform::LeaderboardStartAt)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* filter = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardFilterType")->byval_arg;
    static auto* startAt = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardStartAt")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, limit, filter, startAt});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries_Native
// Il2CppName: ovr_Leaderboard_GetEntries_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, int, ::Oculus::Platform::LeaderboardFilterType, ::Oculus::Platform::LeaderboardStartAt)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries_Native)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* filter = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardFilterType")->byval_arg;
    static auto* startAt = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardStartAt")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetEntries_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, limit, filter, startAt});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank
// Il2CppName: ovr_Leaderboard_GetEntriesAfterRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, int, uint64_t)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* afterRank = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetEntriesAfterRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, limit, afterRank});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank_Native
// Il2CppName: ovr_Leaderboard_GetEntriesAfterRank_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, int, uint64_t)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank_Native)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* afterRank = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetEntriesAfterRank_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, limit, afterRank});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds
// Il2CppName: ovr_Leaderboard_GetEntriesByIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, int, ::Oculus::Platform::LeaderboardStartAt, ::ArrayW<uint64_t>, uint)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* startAt = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardStartAt")->byval_arg;
    static auto* userIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* userIDLength = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetEntriesByIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, limit, startAt, userIDs, userIDLength});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds_Native
// Il2CppName: ovr_Leaderboard_GetEntriesByIds_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, int, ::Oculus::Platform::LeaderboardStartAt, ::ArrayW<uint64_t>, uint)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds_Native)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* limit = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* startAt = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LeaderboardStartAt")->byval_arg;
    static auto* userIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* userIDLength = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetEntriesByIds_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, limit, startAt, userIDs, userIDLength});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetNextEntries
// Il2CppName: ovr_Leaderboard_GetNextEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetNextEntries)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetNextEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetPreviousEntries
// Il2CppName: ovr_Leaderboard_GetPreviousEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetPreviousEntries)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetPreviousEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry
// Il2CppName: ovr_Leaderboard_WriteEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, int64_t, ::ArrayW<uint8_t>, uint, bool)>(&Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* score = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* extraData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* extraDataLength = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* forceUpdate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_WriteEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, score, extraData, extraDataLength, forceUpdate});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry_Native
// Il2CppName: ovr_Leaderboard_WriteEntry_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, int64_t, ::ArrayW<uint8_t>, uint, bool)>(&Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry_Native)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* score = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* extraData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* extraDataLength = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* forceUpdate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_WriteEntry_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, score, extraData, extraDataLength, forceUpdate});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric
// Il2CppName: ovr_Leaderboard_WriteEntryWithSupplementaryMetric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, int64_t, int64_t, ::ArrayW<uint8_t>, uint, bool)>(&Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* score = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* supplementaryMetric = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* extraData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* extraDataLength = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* forceUpdate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_WriteEntryWithSupplementaryMetric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, score, supplementaryMetric, extraData, extraDataLength, forceUpdate});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native
// Il2CppName: ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, int64_t, int64_t, ::ArrayW<uint8_t>, uint, bool)>(&Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native)> {
  static const MethodInfo* get() {
    static auto* leaderboardName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* score = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* supplementaryMetric = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* extraData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* extraDataLength = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* forceUpdate = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardName, score, supplementaryMetric, extraData, extraDataLength, forceUpdate});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_GetStatus
// Il2CppName: ovr_Livestreaming_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Livestreaming_GetStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication
// Il2CppName: ovr_Livestreaming_IsAllowedForApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication)> {
  static const MethodInfo* get() {
    static auto* packageName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_IsAllowedForApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{packageName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication_Native
// Il2CppName: ovr_Livestreaming_IsAllowedForApplication_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication_Native)> {
  static const MethodInfo* get() {
    static auto* packageName = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_IsAllowedForApplication_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{packageName});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_LaunchLivestreamingFlow
// Il2CppName: ovr_Livestreaming_LaunchLivestreamingFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Livestreaming_LaunchLivestreamingFlow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_LaunchLivestreamingFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_PauseStream
// Il2CppName: ovr_Livestreaming_PauseStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Livestreaming_PauseStream)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_PauseStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_ResumeStream
// Il2CppName: ovr_Livestreaming_ResumeStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Livestreaming_ResumeStream)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_ResumeStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_StartPartyStream
// Il2CppName: ovr_Livestreaming_StartPartyStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Livestreaming_StartPartyStream)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_StartPartyStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_StartStream
// Il2CppName: ovr_Livestreaming_StartStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Oculus::Platform::LivestreamingAudience, ::Oculus::Platform::LivestreamingMicrophoneStatus)>(&Oculus::Platform::CAPI::ovr_Livestreaming_StartStream)> {
  static const MethodInfo* get() {
    static auto* audience = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LivestreamingAudience")->byval_arg;
    static auto* micStatus = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LivestreamingMicrophoneStatus")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_StartStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{audience, micStatus});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_StopPartyStream
// Il2CppName: ovr_Livestreaming_StopPartyStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Livestreaming_StopPartyStream)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_StopPartyStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_StopStream
// Il2CppName: ovr_Livestreaming_StopStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Livestreaming_StopStream)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_StopStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_UpdateCommentsOverlayVisibility
// Il2CppName: ovr_Livestreaming_UpdateCommentsOverlayVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(bool)>(&Oculus::Platform::CAPI::ovr_Livestreaming_UpdateCommentsOverlayVisibility)> {
  static const MethodInfo* get() {
    static auto* isVisible = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_UpdateCommentsOverlayVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isVisible});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Livestreaming_UpdateMicStatus
// Il2CppName: ovr_Livestreaming_UpdateMicStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Oculus::Platform::LivestreamingMicrophoneStatus)>(&Oculus::Platform::CAPI::ovr_Livestreaming_UpdateMicStatus)> {
  static const MethodInfo* get() {
    static auto* micStatus = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "LivestreamingMicrophoneStatus")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Livestreaming_UpdateMicStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{micStatus});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_Browse
// Il2CppName: ovr_Matchmaking_Browse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_Browse)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* customQueryData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_Browse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, customQueryData});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_Browse_Native
// Il2CppName: ovr_Matchmaking_Browse_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_Browse_Native)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* customQueryData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_Browse_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, customQueryData});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_Browse2
// Il2CppName: ovr_Matchmaking_Browse2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_Browse2)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* matchmakingOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_Browse2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, matchmakingOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_Browse2_Native
// Il2CppName: ovr_Matchmaking_Browse2_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_Browse2_Native)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* matchmakingOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_Browse2_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, matchmakingOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_Cancel
// Il2CppName: ovr_Matchmaking_Cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_Matchmaking_Cancel)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* requestHash = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_Cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, requestHash});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_Cancel_Native
// Il2CppName: ovr_Matchmaking_Cancel_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_Cancel_Native)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* requestHash = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_Cancel_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, requestHash});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_Cancel2
// Il2CppName: ovr_Matchmaking_Cancel2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Matchmaking_Cancel2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_Cancel2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom
// Il2CppName: ovr_Matchmaking_CreateAndEnqueueRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, uint, bool, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* maxUsers = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* subscribeToUpdates = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* customQueryData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_CreateAndEnqueueRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, maxUsers, subscribeToUpdates, customQueryData});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom_Native
// Il2CppName: ovr_Matchmaking_CreateAndEnqueueRoom_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, uint, bool, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom_Native)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* maxUsers = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* subscribeToUpdates = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* customQueryData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_CreateAndEnqueueRoom_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, maxUsers, subscribeToUpdates, customQueryData});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2
// Il2CppName: ovr_Matchmaking_CreateAndEnqueueRoom2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* matchmakingOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_CreateAndEnqueueRoom2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, matchmakingOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2_Native
// Il2CppName: ovr_Matchmaking_CreateAndEnqueueRoom2_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2_Native)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* matchmakingOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_CreateAndEnqueueRoom2_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, matchmakingOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom
// Il2CppName: ovr_Matchmaking_CreateRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, uint, bool)>(&Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* maxUsers = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* subscribeToUpdates = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_CreateRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, maxUsers, subscribeToUpdates});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom_Native
// Il2CppName: ovr_Matchmaking_CreateRoom_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, uint, bool)>(&Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom_Native)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* maxUsers = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* subscribeToUpdates = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_CreateRoom_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, maxUsers, subscribeToUpdates});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2
// Il2CppName: ovr_Matchmaking_CreateRoom2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* matchmakingOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_CreateRoom2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, matchmakingOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2_Native
// Il2CppName: ovr_Matchmaking_CreateRoom2_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2_Native)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* matchmakingOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_CreateRoom2_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, matchmakingOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue
// Il2CppName: ovr_Matchmaking_Enqueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* customQueryData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_Enqueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, customQueryData});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue_Native
// Il2CppName: ovr_Matchmaking_Enqueue_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue_Native)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* customQueryData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_Enqueue_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, customQueryData});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2
// Il2CppName: ovr_Matchmaking_Enqueue2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* matchmakingOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_Enqueue2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, matchmakingOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2_Native
// Il2CppName: ovr_Matchmaking_Enqueue2_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2_Native)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* matchmakingOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_Enqueue2_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, matchmakingOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom
// Il2CppName: ovr_Matchmaking_EnqueueRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* customQueryData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_EnqueueRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, customQueryData});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom2
// Il2CppName: ovr_Matchmaking_EnqueueRoom2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom2)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* matchmakingOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_EnqueueRoom2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, matchmakingOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_GetAdminSnapshot
// Il2CppName: ovr_Matchmaking_GetAdminSnapshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Matchmaking_GetAdminSnapshot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_GetAdminSnapshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_GetStats
// Il2CppName: ovr_Matchmaking_GetStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, uint, ::Oculus::Platform::MatchmakingStatApproach)>(&Oculus::Platform::CAPI::ovr_Matchmaking_GetStats)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* maxLevel = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* approach = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "MatchmakingStatApproach")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_GetStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, maxLevel, approach});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_GetStats_Native
// Il2CppName: ovr_Matchmaking_GetStats_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, uint, ::Oculus::Platform::MatchmakingStatApproach)>(&Oculus::Platform::CAPI::ovr_Matchmaking_GetStats_Native)> {
  static const MethodInfo* get() {
    static auto* pool = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* maxLevel = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* approach = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "MatchmakingStatApproach")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_GetStats_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pool, maxLevel, approach});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_JoinRoom
// Il2CppName: ovr_Matchmaking_JoinRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, bool)>(&Oculus::Platform::CAPI::ovr_Matchmaking_JoinRoom)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* subscribeToUpdates = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_JoinRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, subscribeToUpdates});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure
// Il2CppName: ovr_Matchmaking_ReportResultInsecure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>)>(&Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrKeyValuePair"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_ReportResultInsecure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, data});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure_Native
// Il2CppName: ovr_Matchmaking_ReportResultInsecure_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure_Native)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrKeyValuePair"), 1)->byval_arg;
    static auto* numItems = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_ReportResultInsecure_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, data, numItems});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Matchmaking_StartMatch
// Il2CppName: ovr_Matchmaking_StartMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Matchmaking_StartMatch)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Matchmaking_StartMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Media_ShareToFacebook
// Il2CppName: ovr_Media_ShareToFacebook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::StringW, ::Oculus::Platform::MediaContentType)>(&Oculus::Platform::CAPI::ovr_Media_ShareToFacebook)> {
  static const MethodInfo* get() {
    static auto* postTextSuggestion = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* contentType = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "MediaContentType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Media_ShareToFacebook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{postTextSuggestion, filePath, contentType});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Media_ShareToFacebook_Native
// Il2CppName: ovr_Media_ShareToFacebook_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::System::IntPtr, ::Oculus::Platform::MediaContentType)>(&Oculus::Platform::CAPI::ovr_Media_ShareToFacebook_Native)> {
  static const MethodInfo* get() {
    static auto* postTextSuggestion = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* filePath = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* contentType = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "MediaContentType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Media_ShareToFacebook_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{postTextSuggestion, filePath, contentType});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_Connect
// Il2CppName: ovr_NetSync_Connect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_Connect)> {
  static const MethodInfo* get() {
    static auto* connect_options = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_Connect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connect_options});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_Disconnect
// Il2CppName: ovr_NetSync_Disconnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t)>(&Oculus::Platform::CAPI::ovr_NetSync_Disconnect)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_Disconnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetSessions
// Il2CppName: ovr_NetSync_GetSessions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t)>(&Oculus::Platform::CAPI::ovr_NetSync_GetSessions)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetSessions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuation
// Il2CppName: ovr_NetSync_GetVoipAttenuation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t)>(&Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuation)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetVoipAttenuation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuationDefault
// Il2CppName: ovr_NetSync_GetVoipAttenuationDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuationDefault)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_GetVoipAttenuationDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuation
// Il2CppName: ovr_NetSync_SetVoipAttenuation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::ArrayW<float>, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuation)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* distances = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* decibels = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipAttenuation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, distances, decibels, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel
// Il2CppName: ovr_NetSync_SetVoipAttenuationModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::StringW, ::ArrayW<float>, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* distances = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* decibels = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipAttenuationModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, name, distances, decibels, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel_Native
// Il2CppName: ovr_NetSync_SetVoipAttenuationModel_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::System::IntPtr, ::ArrayW<float>, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel_Native)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* distances = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* decibels = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipAttenuationModel_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, name, distances, decibels, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg
// Il2CppName: ovr_NetSync_SetVoipChannelCfg
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::StringW, ::StringW, bool)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* channel_name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* attnmodel = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* disable_spatialization = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipChannelCfg", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, channel_name, attnmodel, disable_spatialization});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg_Native
// Il2CppName: ovr_NetSync_SetVoipChannelCfg_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::System::IntPtr, ::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg_Native)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* channel_name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* attnmodel = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* disable_spatialization = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipChannelCfg_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, channel_name, attnmodel, disable_spatialization});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup
// Il2CppName: ovr_NetSync_SetVoipGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* group_id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, group_id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup_Native
// Il2CppName: ovr_NetSync_SetVoipGroup_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup_Native)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* group_id = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipGroup_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, group_id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipListentoChannels
// Il2CppName: ovr_NetSync_SetVoipListentoChannels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::ArrayW<::StringW>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipListentoChannels)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* listento_channels = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipListentoChannels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, listento_channels, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipMicSource
// Il2CppName: ovr_NetSync_SetVoipMicSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::Oculus::Platform::NetSyncVoipMicSource)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipMicSource)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* mic_source = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "NetSyncVoipMicSource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipMicSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, mic_source});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipSessionMuted
// Il2CppName: ovr_NetSync_SetVoipSessionMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, uint64_t, bool)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipSessionMuted)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* session_id = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* muted = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipSessionMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, session_id, muted});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipSpeaktoChannels
// Il2CppName: ovr_NetSync_SetVoipSpeaktoChannels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::ArrayW<::StringW>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipSpeaktoChannels)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* speakto_channels = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipSpeaktoChannels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, speakto_channels, count});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSync_SetVoipStreamMode
// Il2CppName: ovr_NetSync_SetVoipStreamMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, uint64_t, ::Oculus::Platform::NetSyncVoipStreamMode)>(&Oculus::Platform::CAPI::ovr_NetSync_SetVoipStreamMode)> {
  static const MethodInfo* get() {
    static auto* connection_id = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* streamMode = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "NetSyncVoipStreamMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSync_SetVoipStreamMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connection_id, sessionId, streamMode});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Notification_GetRoomInvites
// Il2CppName: ovr_Notification_GetRoomInvites
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Notification_GetRoomInvites)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Notification_GetRoomInvites", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Notification_MarkAsRead
// Il2CppName: ovr_Notification_MarkAsRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Notification_MarkAsRead)> {
  static const MethodInfo* get() {
    static auto* notificationID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Notification_MarkAsRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{notificationID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_Create
// Il2CppName: ovr_Party_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Party_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_GatherInApplication
// Il2CppName: ovr_Party_GatherInApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t)>(&Oculus::Platform::CAPI::ovr_Party_GatherInApplication)> {
  static const MethodInfo* get() {
    static auto* partyID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* appID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_GatherInApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partyID, appID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_Get
// Il2CppName: ovr_Party_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Party_Get)> {
  static const MethodInfo* get() {
    static auto* partyID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partyID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_GetCurrent
// Il2CppName: ovr_Party_GetCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Party_GetCurrent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_GetCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_GetCurrentForUser
// Il2CppName: ovr_Party_GetCurrentForUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Party_GetCurrentForUser)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_GetCurrentForUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_Invite
// Il2CppName: ovr_Party_Invite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t)>(&Oculus::Platform::CAPI::ovr_Party_Invite)> {
  static const MethodInfo* get() {
    static auto* partyID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_Invite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partyID, userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_Join
// Il2CppName: ovr_Party_Join
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Party_Join)> {
  static const MethodInfo* get() {
    static auto* partyID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_Join", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partyID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_Leave
// Il2CppName: ovr_Party_Leave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Party_Leave)> {
  static const MethodInfo* get() {
    static auto* partyID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_Leave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{partyID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_Clear
// Il2CppName: ovr_RichPresence_Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_RichPresence_Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_GetDestinations
// Il2CppName: ovr_RichPresence_GetDestinations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_RichPresence_GetDestinations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_GetDestinations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_Set
// Il2CppName: ovr_RichPresence_Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresence_Set)> {
  static const MethodInfo* get() {
    static auto* richPresenceOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{richPresenceOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_SetDestination
// Il2CppName: ovr_RichPresence_SetDestination
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_RichPresence_SetDestination)> {
  static const MethodInfo* get() {
    static auto* api_name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_SetDestination", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{api_name});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_SetDestination_Native
// Il2CppName: ovr_RichPresence_SetDestination_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresence_SetDestination_Native)> {
  static const MethodInfo* get() {
    static auto* api_name = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_SetDestination_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{api_name});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_SetIsJoinable
// Il2CppName: ovr_RichPresence_SetIsJoinable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(bool)>(&Oculus::Platform::CAPI::ovr_RichPresence_SetIsJoinable)> {
  static const MethodInfo* get() {
    static auto* is_joinable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_SetIsJoinable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{is_joinable});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession
// Il2CppName: ovr_RichPresence_SetLobbySession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_SetLobbySession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession_Native
// Il2CppName: ovr_RichPresence_SetLobbySession_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession_Native)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_SetLobbySession_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession
// Il2CppName: ovr_RichPresence_SetMatchSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_SetMatchSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession_Native
// Il2CppName: ovr_RichPresence_SetMatchSession_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession_Native)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresence_SetMatchSession_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate
// Il2CppName: ovr_Room_CreateAndJoinPrivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Oculus::Platform::RoomJoinPolicy, uint, bool)>(&Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate)> {
  static const MethodInfo* get() {
    static auto* joinPolicy = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "RoomJoinPolicy")->byval_arg;
    static auto* maxUsers = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* subscribeToUpdates = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_CreateAndJoinPrivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{joinPolicy, maxUsers, subscribeToUpdates});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate2
// Il2CppName: ovr_Room_CreateAndJoinPrivate2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Oculus::Platform::RoomJoinPolicy, uint, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate2)> {
  static const MethodInfo* get() {
    static auto* joinPolicy = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "RoomJoinPolicy")->byval_arg;
    static auto* maxUsers = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* roomOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_CreateAndJoinPrivate2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{joinPolicy, maxUsers, roomOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_Get
// Il2CppName: ovr_Room_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Room_Get)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetCurrent
// Il2CppName: ovr_Room_GetCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Room_GetCurrent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetCurrentForUser
// Il2CppName: ovr_Room_GetCurrentForUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Room_GetCurrentForUser)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetCurrentForUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers
// Il2CppName: ovr_Room_GetInvitableUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetInvitableUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers2
// Il2CppName: ovr_Room_GetInvitableUsers2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers2)> {
  static const MethodInfo* get() {
    static auto* roomOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetInvitableUsers2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetModeratedRooms
// Il2CppName: ovr_Room_GetModeratedRooms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Room_GetModeratedRooms)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetModeratedRooms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetSocialRooms
// Il2CppName: ovr_Room_GetSocialRooms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Room_GetSocialRooms)> {
  static const MethodInfo* get() {
    static auto* appID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetSocialRooms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_InviteUser
// Il2CppName: ovr_Room_InviteUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_Room_InviteUser)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* inviteToken = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_InviteUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, inviteToken});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_InviteUser_Native
// Il2CppName: ovr_Room_InviteUser_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_InviteUser_Native)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* inviteToken = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_InviteUser_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, inviteToken});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_Join
// Il2CppName: ovr_Room_Join
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, bool)>(&Oculus::Platform::CAPI::ovr_Room_Join)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* subscribeToUpdates = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_Join", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, subscribeToUpdates});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_Join2
// Il2CppName: ovr_Room_Join2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_Join2)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* roomOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_Join2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, roomOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_KickUser
// Il2CppName: ovr_Room_KickUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t, int)>(&Oculus::Platform::CAPI::ovr_Room_KickUser)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* kickDurationSeconds = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_KickUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, userID, kickDurationSeconds});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_LaunchInvitableUserFlow
// Il2CppName: ovr_Room_LaunchInvitableUserFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Room_LaunchInvitableUserFlow)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_LaunchInvitableUserFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_Leave
// Il2CppName: ovr_Room_Leave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_Room_Leave)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_Leave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_SetDescription
// Il2CppName: ovr_Room_SetDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_Room_SetDescription)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* description = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_SetDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, description});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_SetDescription_Native
// Il2CppName: ovr_Room_SetDescription_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_SetDescription_Native)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* description = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_SetDescription_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, description});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_UpdateDataStore
// Il2CppName: ovr_Room_UpdateDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>)>(&Oculus::Platform::CAPI::ovr_Room_UpdateDataStore)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrKeyValuePair"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_UpdateDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, data});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_UpdateDataStore_Native
// Il2CppName: ovr_Room_UpdateDataStore_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Room_UpdateDataStore_Native)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Oculus.Platform", "CAPI/ovrKeyValuePair"), 1)->byval_arg;
    static auto* numItems = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_UpdateDataStore_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, data, numItems});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_UpdateMembershipLockStatus
// Il2CppName: ovr_Room_UpdateMembershipLockStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Oculus::Platform::RoomMembershipLockStatus)>(&Oculus::Platform::CAPI::ovr_Room_UpdateMembershipLockStatus)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* membershipLockStatus = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "RoomMembershipLockStatus")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_UpdateMembershipLockStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, membershipLockStatus});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_UpdateOwner
// Il2CppName: ovr_Room_UpdateOwner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t)>(&Oculus::Platform::CAPI::ovr_Room_UpdateOwner)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_UpdateOwner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_UpdatePrivateRoomJoinPolicy
// Il2CppName: ovr_Room_UpdatePrivateRoomJoinPolicy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Oculus::Platform::RoomJoinPolicy)>(&Oculus::Platform::CAPI::ovr_Room_UpdatePrivateRoomJoinPolicy)> {
  static const MethodInfo* get() {
    static auto* roomID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* newJoinPolicy = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "RoomJoinPolicy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_UpdatePrivateRoomJoinPolicy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomID, newJoinPolicy});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SystemPermissions_GetStatus
// Il2CppName: ovr_SystemPermissions_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Oculus::Platform::PermissionType)>(&Oculus::Platform::CAPI::ovr_SystemPermissions_GetStatus)> {
  static const MethodInfo* get() {
    static auto* permType = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "PermissionType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SystemPermissions_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{permType});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SystemPermissions_LaunchDeeplink
// Il2CppName: ovr_SystemPermissions_LaunchDeeplink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Oculus::Platform::PermissionType)>(&Oculus::Platform::CAPI::ovr_SystemPermissions_LaunchDeeplink)> {
  static const MethodInfo* get() {
    static auto* permType = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "PermissionType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SystemPermissions_LaunchDeeplink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{permType});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow
// Il2CppName: ovr_User_CancelRecordingForReportFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW)>(&Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow)> {
  static const MethodInfo* get() {
    static auto* recordingUUID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_CancelRecordingForReportFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordingUUID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow_Native
// Il2CppName: ovr_User_CancelRecordingForReportFlow_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow_Native)> {
  static const MethodInfo* get() {
    static auto* recordingUUID = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_CancelRecordingForReportFlow_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recordingUUID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_Get
// Il2CppName: ovr_User_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_User_Get)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetAccessToken
// Il2CppName: ovr_User_GetAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_GetAccessToken)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetLinkedAccounts
// Il2CppName: ovr_User_GetLinkedAccounts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetLinkedAccounts)> {
  static const MethodInfo* get() {
    static auto* userOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetLinkedAccounts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetLoggedInUser
// Il2CppName: ovr_User_GetLoggedInUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_GetLoggedInUser)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetLoggedInUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriends
// Il2CppName: ovr_User_GetLoggedInUserFriends
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriends)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetLoggedInUserFriends", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriendsAndRooms
// Il2CppName: ovr_User_GetLoggedInUserFriendsAndRooms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriendsAndRooms)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetLoggedInUserFriendsAndRooms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms
// Il2CppName: ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms)> {
  static const MethodInfo* get() {
    static auto* userOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetOrgScopedID
// Il2CppName: ovr_User_GetOrgScopedID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_User_GetOrgScopedID)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetOrgScopedID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetSdkAccounts
// Il2CppName: ovr_User_GetSdkAccounts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_GetSdkAccounts)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetSdkAccounts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetUserProof
// Il2CppName: ovr_User_GetUserProof
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_GetUserProof)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetUserProof", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_LaunchBlockFlow
// Il2CppName: ovr_User_LaunchBlockFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_User_LaunchBlockFlow)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_LaunchBlockFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_LaunchFriendRequestFlow
// Il2CppName: ovr_User_LaunchFriendRequestFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_User_LaunchFriendRequestFlow)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_LaunchFriendRequestFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_LaunchProfile
// Il2CppName: ovr_User_LaunchProfile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_User_LaunchProfile)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_LaunchProfile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_LaunchReportFlow
// Il2CppName: ovr_User_LaunchReportFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_User_LaunchReportFlow)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_LaunchReportFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_LaunchReportFlow2
// Il2CppName: ovr_User_LaunchReportFlow2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_LaunchReportFlow2)> {
  static const MethodInfo* get() {
    static auto* optionalUserID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* abuseReportOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_LaunchReportFlow2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{optionalUserID, abuseReportOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_LaunchUnblockFlow
// Il2CppName: ovr_User_LaunchUnblockFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_User_LaunchUnblockFlow)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_LaunchUnblockFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_NewEntitledTestUser
// Il2CppName: ovr_User_NewEntitledTestUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_NewEntitledTestUser)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_NewEntitledTestUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_NewTestUser
// Il2CppName: ovr_User_NewTestUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_NewTestUser)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_NewTestUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_NewTestUserFriends
// Il2CppName: ovr_User_NewTestUserFriends
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_NewTestUserFriends)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_NewTestUserFriends", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_StartRecordingForReportFlow
// Il2CppName: ovr_User_StartRecordingForReportFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_User_StartRecordingForReportFlow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_StartRecordingForReportFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow
// Il2CppName: ovr_User_StopRecordingAndLaunchReportFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow)> {
  static const MethodInfo* get() {
    static auto* optionalUserID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* optionalRecordingUUID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_StopRecordingAndLaunchReportFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{optionalUserID, optionalRecordingUUID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow_Native
// Il2CppName: ovr_User_StopRecordingAndLaunchReportFlow_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow_Native)> {
  static const MethodInfo* get() {
    static auto* optionalUserID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* optionalRecordingUUID = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_StopRecordingAndLaunchReportFlow_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{optionalUserID, optionalRecordingUUID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2
// Il2CppName: ovr_User_StopRecordingAndLaunchReportFlow2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2)> {
  static const MethodInfo* get() {
    static auto* optionalUserID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* optionalRecordingUUID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* abuseReportOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_StopRecordingAndLaunchReportFlow2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{optionalUserID, optionalRecordingUUID, abuseReportOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2_Native
// Il2CppName: ovr_User_StopRecordingAndLaunchReportFlow2_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2_Native)> {
  static const MethodInfo* get() {
    static auto* optionalUserID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* optionalRecordingUUID = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* abuseReportOptions = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_StopRecordingAndLaunchReportFlow2_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{optionalUserID, optionalRecordingUUID, abuseReportOptions});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest
// Il2CppName: ovr_User_TestUserCreateDeviceManifest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::ArrayW<uint64_t>, int)>(&Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest)> {
  static const MethodInfo* get() {
    static auto* deviceID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* appIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* numAppIDs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_TestUserCreateDeviceManifest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deviceID, appIDs, numAppIDs});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest_Native
// Il2CppName: ovr_User_TestUserCreateDeviceManifest_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, ::ArrayW<uint64_t>, int)>(&Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest_Native)> {
  static const MethodInfo* get() {
    static auto* deviceID = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* appIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "UInt64"), 1)->byval_arg;
    static auto* numAppIDs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_TestUserCreateDeviceManifest_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deviceID, appIDs, numAppIDs});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey
// Il2CppName: ovr_UserDataStore_PrivateDeleteEntryByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PrivateDeleteEntryByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey_Native
// Il2CppName: ovr_UserDataStore_PrivateDeleteEntryByKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey_Native)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PrivateDeleteEntryByKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntries
// Il2CppName: ovr_UserDataStore_PrivateGetEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntries)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PrivateGetEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey
// Il2CppName: ovr_UserDataStore_PrivateGetEntryByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PrivateGetEntryByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey_Native
// Il2CppName: ovr_UserDataStore_PrivateGetEntryByKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey_Native)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PrivateGetEntryByKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry
// Il2CppName: ovr_UserDataStore_PrivateWriteEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PrivateWriteEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry_Native
// Il2CppName: ovr_UserDataStore_PrivateWriteEntry_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry_Native)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PrivateWriteEntry_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey
// Il2CppName: ovr_UserDataStore_PublicDeleteEntryByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PublicDeleteEntryByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey_Native
// Il2CppName: ovr_UserDataStore_PublicDeleteEntryByKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey_Native)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PublicDeleteEntryByKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntries
// Il2CppName: ovr_UserDataStore_PublicGetEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntries)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PublicGetEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey
// Il2CppName: ovr_UserDataStore_PublicGetEntryByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PublicGetEntryByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey_Native
// Il2CppName: ovr_UserDataStore_PublicGetEntryByKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey_Native)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PublicGetEntryByKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry
// Il2CppName: ovr_UserDataStore_PublicWriteEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PublicWriteEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry_Native
// Il2CppName: ovr_UserDataStore_PublicWriteEntry_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry_Native)> {
  static const MethodInfo* get() {
    static auto* userID = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStore_PublicWriteEntry_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userID, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_GetMicrophoneAvailability
// Il2CppName: ovr_Voip_GetMicrophoneAvailability
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&Oculus::Platform::CAPI::ovr_Voip_GetMicrophoneAvailability)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_GetMicrophoneAvailability", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipSuppressed
// Il2CppName: ovr_Voip_SetSystemVoipSuppressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(bool)>(&Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipSuppressed)> {
  static const MethodInfo* get() {
    static auto* suppressed = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Voip_SetSystemVoipSuppressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{suppressed});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid
// Il2CppName: ovr_AbuseReportRecording_GetRecordingUuid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AbuseReportRecording_GetRecordingUuid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid_Native
// Il2CppName: ovr_AbuseReportRecording_GetRecordingUuid_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AbuseReportRecording_GetRecordingUuid_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinition_GetBitfieldLength
// Il2CppName: ovr_AchievementDefinition_GetBitfieldLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinition_GetBitfieldLength)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinition_GetBitfieldLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName
// Il2CppName: ovr_AchievementDefinition_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinition_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName_Native
// Il2CppName: ovr_AchievementDefinition_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinition_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinition_GetTarget
// Il2CppName: ovr_AchievementDefinition_GetTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinition_GetTarget)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinition_GetTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinition_GetType
// Il2CppName: ovr_AchievementDefinition_GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::AchievementType (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinition_GetType)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinition_GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetElement
// Il2CppName: ovr_AchievementDefinitionArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinitionArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl
// Il2CppName: ovr_AchievementDefinitionArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinitionArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl_Native
// Il2CppName: ovr_AchievementDefinitionArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinitionArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetSize
// Il2CppName: ovr_AchievementDefinitionArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinitionArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_HasNextPage
// Il2CppName: ovr_AchievementDefinitionArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementDefinitionArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield
// Il2CppName: ovr_AchievementProgress_GetBitfield
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgress_GetBitfield", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield_Native
// Il2CppName: ovr_AchievementProgress_GetBitfield_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgress_GetBitfield_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgress_GetCount
// Il2CppName: ovr_AchievementProgress_GetCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgress_GetCount)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgress_GetCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgress_GetIsUnlocked
// Il2CppName: ovr_AchievementProgress_GetIsUnlocked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgress_GetIsUnlocked)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgress_GetIsUnlocked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgress_GetName
// Il2CppName: ovr_AchievementProgress_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgress_GetName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgress_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgress_GetName_Native
// Il2CppName: ovr_AchievementProgress_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgress_GetName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgress_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime
// Il2CppName: ovr_AchievementProgress_GetUnlockTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgress_GetUnlockTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime_Native
// Il2CppName: ovr_AchievementProgress_GetUnlockTime_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgress_GetUnlockTime_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetElement
// Il2CppName: ovr_AchievementProgressArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgressArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl
// Il2CppName: ovr_AchievementProgressArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgressArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl_Native
// Il2CppName: ovr_AchievementProgressArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgressArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetSize
// Il2CppName: ovr_AchievementProgressArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgressArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementProgressArray_HasNextPage
// Il2CppName: ovr_AchievementProgressArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementProgressArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementProgressArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementUpdate_GetJustUnlocked
// Il2CppName: ovr_AchievementUpdate_GetJustUnlocked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementUpdate_GetJustUnlocked)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementUpdate_GetJustUnlocked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName
// Il2CppName: ovr_AchievementUpdate_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementUpdate_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName_Native
// Il2CppName: ovr_AchievementUpdate_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AchievementUpdate_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Application_GetID
// Il2CppName: ovr_Application_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Application_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Application_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentCode
// Il2CppName: ovr_ApplicationVersion_GetCurrentCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentCode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationVersion_GetCurrentCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName
// Il2CppName: ovr_ApplicationVersion_GetCurrentName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationVersion_GetCurrentName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName_Native
// Il2CppName: ovr_ApplicationVersion_GetCurrentName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationVersion_GetCurrentName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestCode
// Il2CppName: ovr_ApplicationVersion_GetLatestCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestCode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationVersion_GetLatestCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName
// Il2CppName: ovr_ApplicationVersion_GetLatestName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationVersion_GetLatestName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName_Native
// Il2CppName: ovr_ApplicationVersion_GetLatestName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationVersion_GetLatestName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetId
// Il2CppName: ovr_AssetDetails_GetAssetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetAssetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType
// Il2CppName: ovr_AssetDetails_GetAssetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetAssetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType_Native
// Il2CppName: ovr_AssetDetails_GetAssetType_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetAssetType_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus
// Il2CppName: ovr_AssetDetails_GetDownloadStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetDownloadStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus_Native
// Il2CppName: ovr_AssetDetails_GetDownloadStatus_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetDownloadStatus_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath
// Il2CppName: ovr_AssetDetails_GetFilepath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetFilepath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath_Native
// Il2CppName: ovr_AssetDetails_GetFilepath_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetFilepath_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus
// Il2CppName: ovr_AssetDetails_GetIapStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetIapStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus_Native
// Il2CppName: ovr_AssetDetails_GetIapStatus_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetIapStatus_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetLanguage
// Il2CppName: ovr_AssetDetails_GetLanguage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetLanguage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetLanguage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata
// Il2CppName: ovr_AssetDetails_GetMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata_Native
// Il2CppName: ovr_AssetDetails_GetMetadata_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetails_GetMetadata_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetElement
// Il2CppName: ovr_AssetDetailsArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetailsArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetSize
// Il2CppName: ovr_AssetDetailsArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetDetailsArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetFileId
// Il2CppName: ovr_AssetFileDeleteResult_GetAssetFileId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetFileId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDeleteResult_GetAssetFileId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetId
// Il2CppName: ovr_AssetFileDeleteResult_GetAssetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDeleteResult_GetAssetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath
// Il2CppName: ovr_AssetFileDeleteResult_GetFilepath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDeleteResult_GetFilepath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath_Native
// Il2CppName: ovr_AssetFileDeleteResult_GetFilepath_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDeleteResult_GetFilepath_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetSuccess
// Il2CppName: ovr_AssetFileDeleteResult_GetSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetSuccess)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDeleteResult_GetSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetFileId
// Il2CppName: ovr_AssetFileDownloadCancelResult_GetAssetFileId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetFileId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadCancelResult_GetAssetFileId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetId
// Il2CppName: ovr_AssetFileDownloadCancelResult_GetAssetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadCancelResult_GetAssetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath
// Il2CppName: ovr_AssetFileDownloadCancelResult_GetFilepath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadCancelResult_GetFilepath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath_Native
// Il2CppName: ovr_AssetFileDownloadCancelResult_GetFilepath_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadCancelResult_GetFilepath_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetSuccess
// Il2CppName: ovr_AssetFileDownloadCancelResult_GetSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetSuccess)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadCancelResult_GetSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetAssetId
// Il2CppName: ovr_AssetFileDownloadResult_GetAssetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetAssetId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadResult_GetAssetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath
// Il2CppName: ovr_AssetFileDownloadResult_GetFilepath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadResult_GetFilepath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath_Native
// Il2CppName: ovr_AssetFileDownloadResult_GetFilepath_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadResult_GetFilepath_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetFileId
// Il2CppName: ovr_AssetFileDownloadUpdate_GetAssetFileId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetFileId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadUpdate_GetAssetFileId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetId
// Il2CppName: ovr_AssetFileDownloadUpdate_GetAssetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadUpdate_GetAssetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotal
// Il2CppName: ovr_AssetFileDownloadUpdate_GetBytesTotal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotal)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadUpdate_GetBytesTotal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotalLong
// Il2CppName: ovr_AssetFileDownloadUpdate_GetBytesTotalLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotalLong)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadUpdate_GetBytesTotalLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferred
// Il2CppName: ovr_AssetFileDownloadUpdate_GetBytesTransferred
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferred)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadUpdate_GetBytesTransferred", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferredLong
// Il2CppName: ovr_AssetFileDownloadUpdate_GetBytesTransferredLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferredLong)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadUpdate_GetBytesTransferredLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetCompleted
// Il2CppName: ovr_AssetFileDownloadUpdate_GetCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetCompleted)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AssetFileDownloadUpdate_GetCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetCountdownMS
// Il2CppName: ovr_CalApplicationFinalized_GetCountdownMS
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetCountdownMS)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CalApplicationFinalized_GetCountdownMS", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetID
// Il2CppName: ovr_CalApplicationFinalized_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CalApplicationFinalized_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails
// Il2CppName: ovr_CalApplicationFinalized_GetLaunchDetails
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CalApplicationFinalized_GetLaunchDetails", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails_Native
// Il2CppName: ovr_CalApplicationFinalized_GetLaunchDetails_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CalApplicationFinalized_GetLaunchDetails_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CalApplicationProposed_GetID
// Il2CppName: ovr_CalApplicationProposed_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CalApplicationProposed_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CalApplicationProposed_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetID
// Il2CppName: ovr_CalApplicationSuggestion_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CalApplicationSuggestion_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext
// Il2CppName: ovr_CalApplicationSuggestion_GetSocialContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CalApplicationSuggestion_GetSocialContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext_Native
// Il2CppName: ovr_CalApplicationSuggestion_GetSocialContext_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CalApplicationSuggestion_GetSocialContext_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetElement
// Il2CppName: ovr_CalApplicationSuggestionArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CalApplicationSuggestionArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetSize
// Il2CppName: ovr_CalApplicationSuggestionArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CalApplicationSuggestionArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetCreationType
// Il2CppName: ovr_Challenge_GetCreationType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::ChallengeCreationType (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetCreationType)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetCreationType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetDescription
// Il2CppName: ovr_Challenge_GetDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetDescription)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetDescription_Native
// Il2CppName: ovr_Challenge_GetDescription_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetDescription_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetDescription_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetEndDate
// Il2CppName: ovr_Challenge_GetEndDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetEndDate)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetEndDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetEndDate_Native
// Il2CppName: ovr_Challenge_GetEndDate_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetEndDate_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetEndDate_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetID
// Il2CppName: ovr_Challenge_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetInvitedUsers
// Il2CppName: ovr_Challenge_GetInvitedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetInvitedUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetInvitedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetLeaderboard
// Il2CppName: ovr_Challenge_GetLeaderboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetLeaderboard)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetLeaderboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetParticipants
// Il2CppName: ovr_Challenge_GetParticipants
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetParticipants)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetParticipants", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetStartDate
// Il2CppName: ovr_Challenge_GetStartDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetStartDate)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetStartDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetStartDate_Native
// Il2CppName: ovr_Challenge_GetStartDate_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetStartDate_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetStartDate_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetTitle
// Il2CppName: ovr_Challenge_GetTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetTitle)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetTitle_Native
// Il2CppName: ovr_Challenge_GetTitle_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetTitle_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetTitle_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Challenge_GetVisibility
// Il2CppName: ovr_Challenge_GetVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::ChallengeVisibility (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Challenge_GetVisibility)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Challenge_GetVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_GetElement
// Il2CppName: ovr_ChallengeArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl
// Il2CppName: ovr_ChallengeArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl_Native
// Il2CppName: ovr_ChallengeArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl
// Il2CppName: ovr_ChallengeArray_GetPreviousUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_GetPreviousUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl_Native
// Il2CppName: ovr_ChallengeArray_GetPreviousUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_GetSize
// Il2CppName: ovr_ChallengeArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_GetTotalCount
// Il2CppName: ovr_ChallengeArray_GetTotalCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_GetTotalCount)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_GetTotalCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_HasNextPage
// Il2CppName: ovr_ChallengeArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeArray_HasPreviousPage
// Il2CppName: ovr_ChallengeArray_HasPreviousPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeArray_HasPreviousPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeArray_HasPreviousPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore
// Il2CppName: ovr_ChallengeEntry_GetDisplayScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetDisplayScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore_Native
// Il2CppName: ovr_ChallengeEntry_GetDisplayScore_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetDisplayScore_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData
// Il2CppName: ovr_ChallengeEntry_GetExtraData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetExtraData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData_Native
// Il2CppName: ovr_ChallengeEntry_GetExtraData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetExtraData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraDataLength
// Il2CppName: ovr_ChallengeEntry_GetExtraDataLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraDataLength)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetExtraDataLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetRank
// Il2CppName: ovr_ChallengeEntry_GetRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetRank)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetScore
// Il2CppName: ovr_ChallengeEntry_GetScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetScore)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp
// Il2CppName: ovr_ChallengeEntry_GetTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp_Native
// Il2CppName: ovr_ChallengeEntry_GetTimestamp_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetTimestamp_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntry_GetUser
// Il2CppName: ovr_ChallengeEntry_GetUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntry_GetUser)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntry_GetUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetElement
// Il2CppName: ovr_ChallengeEntryArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl
// Il2CppName: ovr_ChallengeEntryArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl_Native
// Il2CppName: ovr_ChallengeEntryArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl
// Il2CppName: ovr_ChallengeEntryArray_GetPreviousUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_GetPreviousUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl_Native
// Il2CppName: ovr_ChallengeEntryArray_GetPreviousUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetSize
// Il2CppName: ovr_ChallengeEntryArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetTotalCount
// Il2CppName: ovr_ChallengeEntryArray_GetTotalCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetTotalCount)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_GetTotalCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasNextPage
// Il2CppName: ovr_ChallengeEntryArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasPreviousPage
// Il2CppName: ovr_ChallengeEntryArray_HasPreviousPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasPreviousPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeEntryArray_HasPreviousPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath
// Il2CppName: ovr_CloudStorage2UserDirectoryPathResponse_GetPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage2UserDirectoryPathResponse_GetPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native
// Il2CppName: ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetLocal
// Il2CppName: ovr_CloudStorageConflictMetadata_GetLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetLocal)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageConflictMetadata_GetLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetRemote
// Il2CppName: ovr_CloudStorageConflictMetadata_GetRemote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetRemote)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageConflictMetadata_GetRemote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket
// Il2CppName: ovr_CloudStorageData_GetBucket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageData_GetBucket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket_Native
// Il2CppName: ovr_CloudStorageData_GetBucket_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageData_GetBucket_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageData_GetData
// Il2CppName: ovr_CloudStorageData_GetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageData_GetData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageData_GetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageData_GetData_Native
// Il2CppName: ovr_CloudStorageData_GetData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageData_GetData_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageData_GetData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageData_GetDataSize
// Il2CppName: ovr_CloudStorageData_GetDataSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageData_GetDataSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageData_GetDataSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey
// Il2CppName: ovr_CloudStorageData_GetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageData_GetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey_Native
// Il2CppName: ovr_CloudStorageData_GetKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageData_GetKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket
// Il2CppName: ovr_CloudStorageMetadata_GetBucket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadata_GetBucket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket_Native
// Il2CppName: ovr_CloudStorageMetadata_GetBucket_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadata_GetBucket_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetCounter
// Il2CppName: ovr_CloudStorageMetadata_GetCounter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetCounter)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadata_GetCounter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetDataSize
// Il2CppName: ovr_CloudStorageMetadata_GetDataSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetDataSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadata_GetDataSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData
// Il2CppName: ovr_CloudStorageMetadata_GetExtraData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadata_GetExtraData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData_Native
// Il2CppName: ovr_CloudStorageMetadata_GetExtraData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadata_GetExtraData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey
// Il2CppName: ovr_CloudStorageMetadata_GetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadata_GetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey_Native
// Il2CppName: ovr_CloudStorageMetadata_GetKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadata_GetKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetSaveTime
// Il2CppName: ovr_CloudStorageMetadata_GetSaveTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetSaveTime)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadata_GetSaveTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetStatus
// Il2CppName: ovr_CloudStorageMetadata_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::CloudStorageDataStatus (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadata_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle
// Il2CppName: ovr_CloudStorageMetadata_GetVersionHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadata_GetVersionHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle_Native
// Il2CppName: ovr_CloudStorageMetadata_GetVersionHandle_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadata_GetVersionHandle_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetElement
// Il2CppName: ovr_CloudStorageMetadataArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadataArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl
// Il2CppName: ovr_CloudStorageMetadataArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadataArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl_Native
// Il2CppName: ovr_CloudStorageMetadataArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadataArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetSize
// Il2CppName: ovr_CloudStorageMetadataArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadataArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_HasNextPage
// Il2CppName: ovr_CloudStorageMetadataArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageMetadataArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket
// Il2CppName: ovr_CloudStorageUpdateResponse_GetBucket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageUpdateResponse_GetBucket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket_Native
// Il2CppName: ovr_CloudStorageUpdateResponse_GetBucket_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageUpdateResponse_GetBucket_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey
// Il2CppName: ovr_CloudStorageUpdateResponse_GetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageUpdateResponse_GetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey_Native
// Il2CppName: ovr_CloudStorageUpdateResponse_GetKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageUpdateResponse_GetKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetStatus
// Il2CppName: ovr_CloudStorageUpdateResponse_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::CloudStorageUpdateStatus (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageUpdateResponse_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle
// Il2CppName: ovr_CloudStorageUpdateResponse_GetVersionHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageUpdateResponse_GetVersionHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle_Native
// Il2CppName: ovr_CloudStorageUpdateResponse_GetVersionHandle_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_CloudStorageUpdateResponse_GetVersionHandle_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DataStore_Contains
// Il2CppName: ovr_DataStore_Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_DataStore_Contains)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DataStore_Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DataStore_Contains_Native
// Il2CppName: ovr_DataStore_Contains_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_DataStore_Contains_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DataStore_Contains_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DataStore_GetKey
// Il2CppName: ovr_DataStore_GetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr, int)>(&Oculus::Platform::CAPI::ovr_DataStore_GetKey)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DataStore_GetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DataStore_GetKey_Native
// Il2CppName: ovr_DataStore_GetKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, int)>(&Oculus::Platform::CAPI::ovr_DataStore_GetKey_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DataStore_GetKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DataStore_GetNumKeys
// Il2CppName: ovr_DataStore_GetNumKeys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_DataStore_GetNumKeys)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DataStore_GetNumKeys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DataStore_GetValue
// Il2CppName: ovr_DataStore_GetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_DataStore_GetValue)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DataStore_GetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DataStore_GetValue_Native
// Il2CppName: ovr_DataStore_GetValue_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_DataStore_GetValue_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DataStore_GetValue_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, key});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Destination_GetApiName
// Il2CppName: ovr_Destination_GetApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Destination_GetApiName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Destination_GetApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Destination_GetApiName_Native
// Il2CppName: ovr_Destination_GetApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Destination_GetApiName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Destination_GetApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage
// Il2CppName: ovr_Destination_GetDeeplinkMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Destination_GetDeeplinkMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage_Native
// Il2CppName: ovr_Destination_GetDeeplinkMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Destination_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Destination_GetDisplayName
// Il2CppName: ovr_Destination_GetDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Destination_GetDisplayName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Destination_GetDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Destination_GetDisplayName_Native
// Il2CppName: ovr_Destination_GetDisplayName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Destination_GetDisplayName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Destination_GetDisplayName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DestinationArray_GetElement
// Il2CppName: ovr_DestinationArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_DestinationArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DestinationArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl
// Il2CppName: ovr_DestinationArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DestinationArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl_Native
// Il2CppName: ovr_DestinationArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DestinationArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DestinationArray_GetSize
// Il2CppName: ovr_DestinationArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_DestinationArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DestinationArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_DestinationArray_HasNextPage
// Il2CppName: ovr_DestinationArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_DestinationArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_DestinationArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Error_GetCode
// Il2CppName: ovr_Error_GetCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Error_GetCode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Error_GetCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage
// Il2CppName: ovr_Error_GetDisplayableMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Error_GetDisplayableMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage_Native
// Il2CppName: ovr_Error_GetDisplayableMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Error_GetDisplayableMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Error_GetHttpCode
// Il2CppName: ovr_Error_GetHttpCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Error_GetHttpCode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Error_GetHttpCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Error_GetMessage
// Il2CppName: ovr_Error_GetMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Error_GetMessage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Error_GetMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Error_GetMessage_Native
// Il2CppName: ovr_Error_GetMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Error_GetMessage_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Error_GetMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage
// Il2CppName: ovr_GroupPresenceJoinIntent_GetDeeplinkMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceJoinIntent_GetDeeplinkMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native
// Il2CppName: ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName
// Il2CppName: ovr_GroupPresenceJoinIntent_GetDestinationApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceJoinIntent_GetDestinationApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native
// Il2CppName: ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId
// Il2CppName: ovr_GroupPresenceJoinIntent_GetLobbySessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceJoinIntent_GetLobbySessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native
// Il2CppName: ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId
// Il2CppName: ovr_GroupPresenceJoinIntent_GetMatchSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceJoinIntent_GetMatchSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native
// Il2CppName: ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetDestinationApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceLeaveIntent_GetDestinationApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetLobbySessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceLeaveIntent_GetLobbySessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetMatchSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceLeaveIntent_GetMatchSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetBytes
// Il2CppName: ovr_HttpTransferUpdate_GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetBytes)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HttpTransferUpdate_GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetID
// Il2CppName: ovr_HttpTransferUpdate_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HttpTransferUpdate_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetSize
// Il2CppName: ovr_HttpTransferUpdate_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HttpTransferUpdate_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_HttpTransferUpdate_IsCompleted
// Il2CppName: ovr_HttpTransferUpdate_IsCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_HttpTransferUpdate_IsCompleted)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_HttpTransferUpdate_IsCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId
// Il2CppName: ovr_InstalledApplication_GetApplicationId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetApplicationId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId_Native
// Il2CppName: ovr_InstalledApplication_GetApplicationId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetApplicationId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName
// Il2CppName: ovr_InstalledApplication_GetPackageName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetPackageName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName_Native
// Il2CppName: ovr_InstalledApplication_GetPackageName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetPackageName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus
// Il2CppName: ovr_InstalledApplication_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus_Native
// Il2CppName: ovr_InstalledApplication_GetStatus_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetStatus_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionCode
// Il2CppName: ovr_InstalledApplication_GetVersionCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionCode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetVersionCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName
// Il2CppName: ovr_InstalledApplication_GetVersionName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetVersionName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName_Native
// Il2CppName: ovr_InstalledApplication_GetVersionName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplication_GetVersionName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetElement
// Il2CppName: ovr_InstalledApplicationArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplicationArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetSize
// Il2CppName: ovr_InstalledApplicationArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InstalledApplicationArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InvitePanelResultInfo_GetInvitesSent
// Il2CppName: ovr_InvitePanelResultInfo_GetInvitesSent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InvitePanelResultInfo_GetInvitesSent)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InvitePanelResultInfo_GetInvitesSent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName
// Il2CppName: ovr_LanguagePackInfo_GetEnglishName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePackInfo_GetEnglishName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName_Native
// Il2CppName: ovr_LanguagePackInfo_GetEnglishName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePackInfo_GetEnglishName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName
// Il2CppName: ovr_LanguagePackInfo_GetNativeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePackInfo_GetNativeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName_Native
// Il2CppName: ovr_LanguagePackInfo_GetNativeName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePackInfo_GetNativeName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag
// Il2CppName: ovr_LanguagePackInfo_GetTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePackInfo_GetTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag_Native
// Il2CppName: ovr_LanguagePackInfo_GetTag_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LanguagePackInfo_GetTag_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidBlock
// Il2CppName: ovr_LaunchBlockFlowResult_GetDidBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidBlock)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchBlockFlowResult_GetDidBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidCancel
// Il2CppName: ovr_LaunchBlockFlowResult_GetDidCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidCancel)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchBlockFlowResult_GetDidCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage
// Il2CppName: ovr_LaunchDetails_GetDeeplinkMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetDeeplinkMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage_Native
// Il2CppName: ovr_LaunchDetails_GetDeeplinkMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName
// Il2CppName: ovr_LaunchDetails_GetDestinationApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetDestinationApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName_Native
// Il2CppName: ovr_LaunchDetails_GetDestinationApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetDestinationApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource
// Il2CppName: ovr_LaunchDetails_GetLaunchSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetLaunchSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource_Native
// Il2CppName: ovr_LaunchDetails_GetLaunchSource_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetLaunchSource_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchType
// Il2CppName: ovr_LaunchDetails_GetLaunchType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::LaunchType (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchType)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetLaunchType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetRoomID
// Il2CppName: ovr_LaunchDetails_GetRoomID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetRoomID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetRoomID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID
// Il2CppName: ovr_LaunchDetails_GetTrackingID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetTrackingID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID_Native
// Il2CppName: ovr_LaunchDetails_GetTrackingID_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetTrackingID_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchDetails_GetUsers
// Il2CppName: ovr_LaunchDetails_GetUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchDetails_GetUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchDetails_GetUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidCancel
// Il2CppName: ovr_LaunchFriendRequestFlowResult_GetDidCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidCancel)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchFriendRequestFlowResult_GetDidCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidSendRequest
// Il2CppName: ovr_LaunchFriendRequestFlowResult_GetDidSendRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidSendRequest)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchFriendRequestFlowResult_GetDidSendRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchInvitePanelFlowResult_GetInvitedUsers
// Il2CppName: ovr_LaunchInvitePanelFlowResult_GetInvitedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchInvitePanelFlowResult_GetInvitedUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchInvitePanelFlowResult_GetInvitedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetDidCancel
// Il2CppName: ovr_LaunchReportFlowResult_GetDidCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetDidCancel)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchReportFlowResult_GetDidCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetUserReportId
// Il2CppName: ovr_LaunchReportFlowResult_GetUserReportId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetUserReportId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchReportFlowResult_GetUserReportId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidCancel
// Il2CppName: ovr_LaunchUnblockFlowResult_GetDidCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidCancel)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchUnblockFlowResult_GetDidCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidUnblock
// Il2CppName: ovr_LaunchUnblockFlowResult_GetDidUnblock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidUnblock)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LaunchUnblockFlowResult_GetDidUnblock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName
// Il2CppName: ovr_Leaderboard_GetApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName_Native
// Il2CppName: ovr_Leaderboard_GetApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetDestination
// Il2CppName: ovr_Leaderboard_GetDestination
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetDestination)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetDestination", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Leaderboard_GetID
// Il2CppName: ovr_Leaderboard_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Leaderboard_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Leaderboard_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardArray_GetElement
// Il2CppName: ovr_LeaderboardArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl
// Il2CppName: ovr_LeaderboardArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl_Native
// Il2CppName: ovr_LeaderboardArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardArray_GetSize
// Il2CppName: ovr_LeaderboardArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardArray_HasNextPage
// Il2CppName: ovr_LeaderboardArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore
// Il2CppName: ovr_LeaderboardEntry_GetDisplayScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetDisplayScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore_Native
// Il2CppName: ovr_LeaderboardEntry_GetDisplayScore_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetDisplayScore_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData
// Il2CppName: ovr_LeaderboardEntry_GetExtraData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetExtraData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData_Native
// Il2CppName: ovr_LeaderboardEntry_GetExtraData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetExtraData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraDataLength
// Il2CppName: ovr_LeaderboardEntry_GetExtraDataLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraDataLength)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetExtraDataLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetRank
// Il2CppName: ovr_LeaderboardEntry_GetRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetRank)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetScore
// Il2CppName: ovr_LeaderboardEntry_GetScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetScore)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetSupplementaryMetric
// Il2CppName: ovr_LeaderboardEntry_GetSupplementaryMetric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetSupplementaryMetric)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetSupplementaryMetric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp
// Il2CppName: ovr_LeaderboardEntry_GetTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp_Native
// Il2CppName: ovr_LeaderboardEntry_GetTimestamp_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetTimestamp_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetUser
// Il2CppName: ovr_LeaderboardEntry_GetUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetUser)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntry_GetUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetElement
// Il2CppName: ovr_LeaderboardEntryArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl
// Il2CppName: ovr_LeaderboardEntryArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl_Native
// Il2CppName: ovr_LeaderboardEntryArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl
// Il2CppName: ovr_LeaderboardEntryArray_GetPreviousUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_GetPreviousUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl_Native
// Il2CppName: ovr_LeaderboardEntryArray_GetPreviousUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetSize
// Il2CppName: ovr_LeaderboardEntryArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetTotalCount
// Il2CppName: ovr_LeaderboardEntryArray_GetTotalCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetTotalCount)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_GetTotalCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasNextPage
// Il2CppName: ovr_LeaderboardEntryArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasPreviousPage
// Il2CppName: ovr_LeaderboardEntryArray_HasPreviousPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasPreviousPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardEntryArray_HasPreviousPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetDidUpdate
// Il2CppName: ovr_LeaderboardUpdateStatus_GetDidUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetDidUpdate)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardUpdateStatus_GetDidUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId
// Il2CppName: ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, uint)>(&Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize
// Il2CppName: ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken
// Il2CppName: ovr_LinkedAccount_GetAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LinkedAccount_GetAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken_Native
// Il2CppName: ovr_LinkedAccount_GetAccessToken_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LinkedAccount_GetAccessToken_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LinkedAccount_GetServiceProvider
// Il2CppName: ovr_LinkedAccount_GetServiceProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::ServiceProvider (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LinkedAccount_GetServiceProvider)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LinkedAccount_GetServiceProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId
// Il2CppName: ovr_LinkedAccount_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LinkedAccount_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId_Native
// Il2CppName: ovr_LinkedAccount_GetUserId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LinkedAccount_GetUserId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetElement
// Il2CppName: ovr_LinkedAccountArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LinkedAccountArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetSize
// Il2CppName: ovr_LinkedAccountArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LinkedAccountArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingApplicationStatus_GetStreamingEnabled
// Il2CppName: ovr_LivestreamingApplicationStatus_GetStreamingEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingApplicationStatus_GetStreamingEnabled)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingApplicationStatus_GetStreamingEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingStartResult_GetStreamingResult
// Il2CppName: ovr_LivestreamingStartResult_GetStreamingResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::LivestreamingStartStatus (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingStartResult_GetStreamingResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingStartResult_GetStreamingResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetCommentsVisible
// Il2CppName: ovr_LivestreamingStatus_GetCommentsVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetCommentsVisible)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingStatus_GetCommentsVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetIsPaused
// Il2CppName: ovr_LivestreamingStatus_GetIsPaused
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetIsPaused)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingStatus_GetIsPaused", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingEnabled
// Il2CppName: ovr_LivestreamingStatus_GetLivestreamingEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingEnabled)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingStatus_GetLivestreamingEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingType
// Il2CppName: ovr_LivestreamingStatus_GetLivestreamingType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingType)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingStatus_GetLivestreamingType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetMicEnabled
// Il2CppName: ovr_LivestreamingStatus_GetMicEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetMicEnabled)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingStatus_GetMicEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetCommentCount
// Il2CppName: ovr_LivestreamingVideoStats_GetCommentCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetCommentCount)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingVideoStats_GetCommentCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetReactionCount
// Il2CppName: ovr_LivestreamingVideoStats_GetReactionCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetReactionCount)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingVideoStats_GetReactionCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews
// Il2CppName: ovr_LivestreamingVideoStats_GetTotalViews
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingVideoStats_GetTotalViews", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews_Native
// Il2CppName: ovr_LivestreamingVideoStats_GetTotalViews_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_LivestreamingVideoStats_GetTotalViews_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetCandidates
// Il2CppName: ovr_MatchmakingAdminSnapshot_GetCandidates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetCandidates)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingAdminSnapshot_GetCandidates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold
// Il2CppName: ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch
// Il2CppName: ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore
// Il2CppName: ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold
// Il2CppName: ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore
// Il2CppName: ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId
// Il2CppName: ovr_MatchmakingAdminSnapshotCandidate_GetTraceId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingAdminSnapshotCandidate_GetTraceId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native
// Il2CppName: ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetElement
// Il2CppName: ovr_MatchmakingAdminSnapshotCandidateArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingAdminSnapshotCandidateArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetSize
// Il2CppName: ovr_MatchmakingAdminSnapshotCandidateArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingAdminSnapshotCandidateArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetEnqueueResult
// Il2CppName: ovr_MatchmakingBrowseResult_GetEnqueueResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetEnqueueResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingBrowseResult_GetEnqueueResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetRooms
// Il2CppName: ovr_MatchmakingBrowseResult_GetRooms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetRooms)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingBrowseResult_GetRooms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash
// Il2CppName: ovr_MatchmakingCandidate_GetEntryHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingCandidate_GetEntryHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash_Native
// Il2CppName: ovr_MatchmakingCandidate_GetEntryHash_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingCandidate_GetEntryHash_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetUserId
// Il2CppName: ovr_MatchmakingCandidate_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetUserId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingCandidate_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetElement
// Il2CppName: ovr_MatchmakingCandidateArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingCandidateArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl
// Il2CppName: ovr_MatchmakingCandidateArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingCandidateArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl_Native
// Il2CppName: ovr_MatchmakingCandidateArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingCandidateArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetSize
// Il2CppName: ovr_MatchmakingCandidateArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingCandidateArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_HasNextPage
// Il2CppName: ovr_MatchmakingCandidateArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingCandidateArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAdminSnapshot
// Il2CppName: ovr_MatchmakingEnqueueResult_GetAdminSnapshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAdminSnapshot)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueueResult_GetAdminSnapshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAverageWait
// Il2CppName: ovr_MatchmakingEnqueueResult_GetAverageWait
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAverageWait)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueueResult_GetAverageWait", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount
// Il2CppName: ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMaxExpectedWait
// Il2CppName: ovr_MatchmakingEnqueueResult_GetMaxExpectedWait
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMaxExpectedWait)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueueResult_GetMaxExpectedWait", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool
// Il2CppName: ovr_MatchmakingEnqueueResult_GetPool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueueResult_GetPool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool_Native
// Il2CppName: ovr_MatchmakingEnqueueResult_GetPool_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueueResult_GetPool_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage
// Il2CppName: ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash
// Il2CppName: ovr_MatchmakingEnqueueResult_GetRequestHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueueResult_GetRequestHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash_Native
// Il2CppName: ovr_MatchmakingEnqueueResult_GetRequestHash_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueueResult_GetRequestHash_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult
// Il2CppName: ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetRoom
// Il2CppName: ovr_MatchmakingEnqueueResultAndRoom_GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetRoom)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueueResultAndRoom_GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserID
// Il2CppName: ovr_MatchmakingEnqueuedUser_GetAdditionalUserID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr, uint)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueuedUser_GetAdditionalUserID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize
// Il2CppName: ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetCustomData
// Il2CppName: ovr_MatchmakingEnqueuedUser_GetCustomData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetCustomData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueuedUser_GetCustomData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetUser
// Il2CppName: ovr_MatchmakingEnqueuedUser_GetUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetUser)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueuedUser_GetUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetElement
// Il2CppName: ovr_MatchmakingEnqueuedUserArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueuedUserArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetSize
// Il2CppName: ovr_MatchmakingEnqueuedUserArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingEnqueuedUserArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetAddedByUserId
// Il2CppName: ovr_MatchmakingNotification_GetAddedByUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetAddedByUserId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingNotification_GetAddedByUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetRoom
// Il2CppName: ovr_MatchmakingNotification_GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetRoom)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingNotification_GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId
// Il2CppName: ovr_MatchmakingNotification_GetTraceId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingNotification_GetTraceId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId_Native
// Il2CppName: ovr_MatchmakingNotification_GetTraceId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingNotification_GetTraceId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetPingTime
// Il2CppName: ovr_MatchmakingRoom_GetPingTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetPingTime)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingRoom_GetPingTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetRoom
// Il2CppName: ovr_MatchmakingRoom_GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetRoom)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingRoom_GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingRoom_HasPingTime
// Il2CppName: ovr_MatchmakingRoom_HasPingTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingRoom_HasPingTime)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingRoom_HasPingTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetElement
// Il2CppName: ovr_MatchmakingRoomArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingRoomArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetSize
// Il2CppName: ovr_MatchmakingRoomArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingRoomArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingStats_GetDrawCount
// Il2CppName: ovr_MatchmakingStats_GetDrawCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingStats_GetDrawCount)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingStats_GetDrawCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingStats_GetLossCount
// Il2CppName: ovr_MatchmakingStats_GetLossCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingStats_GetLossCount)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingStats_GetLossCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillLevel
// Il2CppName: ovr_MatchmakingStats_GetSkillLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillLevel)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingStats_GetSkillLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillMean
// Il2CppName: ovr_MatchmakingStats_GetSkillMean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillMean)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingStats_GetSkillMean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillStandardDeviation
// Il2CppName: ovr_MatchmakingStats_GetSkillStandardDeviation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillStandardDeviation)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingStats_GetSkillStandardDeviation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingStats_GetWinCount
// Il2CppName: ovr_MatchmakingStats_GetWinCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingStats_GetWinCount)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingStats_GetWinCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAbuseReportRecording
// Il2CppName: ovr_Message_GetAbuseReportRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAbuseReportRecording)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAbuseReportRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAchievementDefinitionArray
// Il2CppName: ovr_Message_GetAchievementDefinitionArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAchievementDefinitionArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAchievementDefinitionArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAchievementProgressArray
// Il2CppName: ovr_Message_GetAchievementProgressArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAchievementProgressArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAchievementProgressArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAchievementUpdate
// Il2CppName: ovr_Message_GetAchievementUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAchievementUpdate)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAchievementUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetApplicationVersion
// Il2CppName: ovr_Message_GetApplicationVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetApplicationVersion)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetApplicationVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAssetDetails
// Il2CppName: ovr_Message_GetAssetDetails
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAssetDetails)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAssetDetails", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAssetDetailsArray
// Il2CppName: ovr_Message_GetAssetDetailsArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAssetDetailsArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAssetDetailsArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAssetFileDeleteResult
// Il2CppName: ovr_Message_GetAssetFileDeleteResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAssetFileDeleteResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAssetFileDeleteResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadCancelResult
// Il2CppName: ovr_Message_GetAssetFileDownloadCancelResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadCancelResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAssetFileDownloadCancelResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadResult
// Il2CppName: ovr_Message_GetAssetFileDownloadResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAssetFileDownloadResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadUpdate
// Il2CppName: ovr_Message_GetAssetFileDownloadUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadUpdate)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetAssetFileDownloadUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetCalApplicationFinalized
// Il2CppName: ovr_Message_GetCalApplicationFinalized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetCalApplicationFinalized)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetCalApplicationFinalized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetCalApplicationProposed
// Il2CppName: ovr_Message_GetCalApplicationProposed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetCalApplicationProposed)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetCalApplicationProposed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetCalApplicationSuggestionArray
// Il2CppName: ovr_Message_GetCalApplicationSuggestionArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetCalApplicationSuggestionArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetCalApplicationSuggestionArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetChallenge
// Il2CppName: ovr_Message_GetChallenge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetChallenge)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetChallenge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetChallengeArray
// Il2CppName: ovr_Message_GetChallengeArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetChallengeArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetChallengeArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetChallengeEntryArray
// Il2CppName: ovr_Message_GetChallengeEntryArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetChallengeEntryArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetChallengeEntryArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetCloudStorageConflictMetadata
// Il2CppName: ovr_Message_GetCloudStorageConflictMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetCloudStorageConflictMetadata)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetCloudStorageConflictMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetCloudStorageData
// Il2CppName: ovr_Message_GetCloudStorageData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetCloudStorageData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetCloudStorageData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadata
// Il2CppName: ovr_Message_GetCloudStorageMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadata)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetCloudStorageMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadataArray
// Il2CppName: ovr_Message_GetCloudStorageMetadataArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadataArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetCloudStorageMetadataArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetCloudStorageUpdateResponse
// Il2CppName: ovr_Message_GetCloudStorageUpdateResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetCloudStorageUpdateResponse)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetCloudStorageUpdateResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetDataStore
// Il2CppName: ovr_Message_GetDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetDataStore)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetDestinationArray
// Il2CppName: ovr_Message_GetDestinationArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetDestinationArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetDestinationArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetError
// Il2CppName: ovr_Message_GetError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetError)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceJoinIntent
// Il2CppName: ovr_Message_GetGroupPresenceJoinIntent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceJoinIntent)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetGroupPresenceJoinIntent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceLeaveIntent
// Il2CppName: ovr_Message_GetGroupPresenceLeaveIntent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceLeaveIntent)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetGroupPresenceLeaveIntent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetHttpTransferUpdate
// Il2CppName: ovr_Message_GetHttpTransferUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetHttpTransferUpdate)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetHttpTransferUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetInstalledApplicationArray
// Il2CppName: ovr_Message_GetInstalledApplicationArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetInstalledApplicationArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetInstalledApplicationArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetInvitePanelResultInfo
// Il2CppName: ovr_Message_GetInvitePanelResultInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetInvitePanelResultInfo)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetInvitePanelResultInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLaunchBlockFlowResult
// Il2CppName: ovr_Message_GetLaunchBlockFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLaunchBlockFlowResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLaunchBlockFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLaunchFriendRequestFlowResult
// Il2CppName: ovr_Message_GetLaunchFriendRequestFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLaunchFriendRequestFlowResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLaunchFriendRequestFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLaunchInvitePanelFlowResult
// Il2CppName: ovr_Message_GetLaunchInvitePanelFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLaunchInvitePanelFlowResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLaunchInvitePanelFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLaunchReportFlowResult
// Il2CppName: ovr_Message_GetLaunchReportFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLaunchReportFlowResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLaunchReportFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLaunchUnblockFlowResult
// Il2CppName: ovr_Message_GetLaunchUnblockFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLaunchUnblockFlowResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLaunchUnblockFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLeaderboardArray
// Il2CppName: ovr_Message_GetLeaderboardArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLeaderboardArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLeaderboardArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLeaderboardEntryArray
// Il2CppName: ovr_Message_GetLeaderboardEntryArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLeaderboardEntryArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLeaderboardEntryArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLeaderboardUpdateStatus
// Il2CppName: ovr_Message_GetLeaderboardUpdateStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLeaderboardUpdateStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLeaderboardUpdateStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLinkedAccountArray
// Il2CppName: ovr_Message_GetLinkedAccountArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLinkedAccountArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLinkedAccountArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLivestreamingApplicationStatus
// Il2CppName: ovr_Message_GetLivestreamingApplicationStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLivestreamingApplicationStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLivestreamingApplicationStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStartResult
// Il2CppName: ovr_Message_GetLivestreamingStartResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStartResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLivestreamingStartResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStatus
// Il2CppName: ovr_Message_GetLivestreamingStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLivestreamingStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetLivestreamingVideoStats
// Il2CppName: ovr_Message_GetLivestreamingVideoStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetLivestreamingVideoStats)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetLivestreamingVideoStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetMatchmakingAdminSnapshot
// Il2CppName: ovr_Message_GetMatchmakingAdminSnapshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetMatchmakingAdminSnapshot)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetMatchmakingAdminSnapshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetMatchmakingBrowseResult
// Il2CppName: ovr_Message_GetMatchmakingBrowseResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetMatchmakingBrowseResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetMatchmakingBrowseResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResult
// Il2CppName: ovr_Message_GetMatchmakingEnqueueResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResultAndRoom
// Il2CppName: ovr_Message_GetMatchmakingEnqueueResultAndRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResultAndRoom)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetMatchmakingEnqueueResultAndRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetMatchmakingRoomArray
// Il2CppName: ovr_Message_GetMatchmakingRoomArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetMatchmakingRoomArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetMatchmakingRoomArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetMatchmakingStats
// Il2CppName: ovr_Message_GetMatchmakingStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetMatchmakingStats)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetMatchmakingStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetMicrophoneAvailabilityState
// Il2CppName: ovr_Message_GetMicrophoneAvailabilityState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetMicrophoneAvailabilityState)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetMicrophoneAvailabilityState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetNativeMessage
// Il2CppName: ovr_Message_GetNativeMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetNativeMessage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetNativeMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetNetSyncConnection
// Il2CppName: ovr_Message_GetNetSyncConnection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetNetSyncConnection)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetNetSyncConnection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionArray
// Il2CppName: ovr_Message_GetNetSyncSessionArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetNetSyncSessionArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionsChangedNotification
// Il2CppName: ovr_Message_GetNetSyncSessionsChangedNotification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionsChangedNotification)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetNetSyncSessionsChangedNotification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetNetSyncSetSessionPropertyResult
// Il2CppName: ovr_Message_GetNetSyncSetSessionPropertyResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetNetSyncSetSessionPropertyResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetNetSyncSetSessionPropertyResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetNetSyncVoipAttenuationValueArray
// Il2CppName: ovr_Message_GetNetSyncVoipAttenuationValueArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetNetSyncVoipAttenuationValueArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetNetSyncVoipAttenuationValueArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetNetworkingPeer
// Il2CppName: ovr_Message_GetNetworkingPeer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetNetworkingPeer)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetNetworkingPeer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetOrgScopedID
// Il2CppName: ovr_Message_GetOrgScopedID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetOrgScopedID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetOrgScopedID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetParty
// Il2CppName: ovr_Message_GetParty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetParty)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetParty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetPartyID
// Il2CppName: ovr_Message_GetPartyID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetPartyID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetPartyID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetPartyUpdateNotification
// Il2CppName: ovr_Message_GetPartyUpdateNotification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetPartyUpdateNotification)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetPartyUpdateNotification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetPidArray
// Il2CppName: ovr_Message_GetPidArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetPidArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetPidArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetPingResult
// Il2CppName: ovr_Message_GetPingResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetPingResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetPingResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetPlatformInitialize
// Il2CppName: ovr_Message_GetPlatformInitialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetPlatformInitialize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetPlatformInitialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetProductArray
// Il2CppName: ovr_Message_GetProductArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetProductArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetProductArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetPurchase
// Il2CppName: ovr_Message_GetPurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetPurchase)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetPurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetPurchaseArray
// Il2CppName: ovr_Message_GetPurchaseArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetPurchaseArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetPurchaseArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetRequestID
// Il2CppName: ovr_Message_GetRequestID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetRequestID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetRequestID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetRoom
// Il2CppName: ovr_Message_GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetRoom)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetRoomArray
// Il2CppName: ovr_Message_GetRoomArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetRoomArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetRoomArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotification
// Il2CppName: ovr_Message_GetRoomInviteNotification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotification)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetRoomInviteNotification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotificationArray
// Il2CppName: ovr_Message_GetRoomInviteNotificationArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotificationArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetRoomInviteNotificationArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetSdkAccountArray
// Il2CppName: ovr_Message_GetSdkAccountArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetSdkAccountArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetSdkAccountArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetShareMediaResult
// Il2CppName: ovr_Message_GetShareMediaResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetShareMediaResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetShareMediaResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetString
// Il2CppName: ovr_Message_GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetString)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetString_Native
// Il2CppName: ovr_Message_GetString_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetString_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetString_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetSystemPermission
// Il2CppName: ovr_Message_GetSystemPermission
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetSystemPermission)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetSystemPermission", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetSystemVoipState
// Il2CppName: ovr_Message_GetSystemVoipState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetSystemVoipState)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetSystemVoipState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetType
// Il2CppName: ovr_Message_GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::Message::MessageType (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetType)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetUser
// Il2CppName: ovr_Message_GetUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetUser)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetUserAndRoomArray
// Il2CppName: ovr_Message_GetUserAndRoomArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetUserAndRoomArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetUserAndRoomArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetUserArray
// Il2CppName: ovr_Message_GetUserArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetUserArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetUserArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetUserDataStoreUpdateResponse
// Il2CppName: ovr_Message_GetUserDataStoreUpdateResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetUserDataStoreUpdateResponse)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetUserDataStoreUpdateResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetUserProof
// Il2CppName: ovr_Message_GetUserProof
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetUserProof)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetUserProof", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_GetUserReportID
// Il2CppName: ovr_Message_GetUserReportID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_GetUserReportID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_GetUserReportID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Message_IsError
// Il2CppName: ovr_Message_IsError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Message_IsError)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Message_IsError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_GetNumSamplesAvailable
// Il2CppName: ovr_Microphone_GetNumSamplesAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_GetNumSamplesAvailable)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_GetNumSamplesAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_GetOutputBufferMaxSize
// Il2CppName: ovr_Microphone_GetOutputBufferMaxSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_GetOutputBufferMaxSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_GetOutputBufferMaxSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_GetPCM
// Il2CppName: ovr_Microphone_GetPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr, ::ArrayW<int16_t>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_GetPCM)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_GetPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_GetPCMFloat
// Il2CppName: ovr_Microphone_GetPCMFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_GetPCMFloat)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* outputBufferNumElements = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_GetPCMFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, outputBuffer, outputBufferNumElements});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_ReadData
// Il2CppName: ovr_Microphone_ReadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_ReadData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* outputBufferSize = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_ReadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, outputBuffer, outputBufferSize});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_SetAcceptableRecordingDelayHint
// Il2CppName: ovr_Microphone_SetAcceptableRecordingDelayHint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_SetAcceptableRecordingDelayHint)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* delayMs = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_SetAcceptableRecordingDelayHint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, delayMs});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_Start
// Il2CppName: ovr_Microphone_Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_Start)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Microphone_Stop
// Il2CppName: ovr_Microphone_Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Microphone_Stop)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Microphone_Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable
// Il2CppName: ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncConnection_GetConnectionId
// Il2CppName: ovr_NetSyncConnection_GetConnectionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncConnection_GetConnectionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncConnection_GetConnectionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncConnection_GetDisconnectReason
// Il2CppName: ovr_NetSyncConnection_GetDisconnectReason
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::NetSyncDisconnectReason (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncConnection_GetDisconnectReason)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncConnection_GetDisconnectReason", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncConnection_GetSessionId
// Il2CppName: ovr_NetSyncConnection_GetSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncConnection_GetSessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncConnection_GetSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncConnection_GetStatus
// Il2CppName: ovr_NetSyncConnection_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::NetSyncConnectionStatus (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncConnection_GetStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncConnection_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId
// Il2CppName: ovr_NetSyncConnection_GetZoneId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncConnection_GetZoneId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId_Native
// Il2CppName: ovr_NetSyncConnection_GetZoneId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncConnection_GetZoneId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSession_GetConnectionId
// Il2CppName: ovr_NetSyncSession_GetConnectionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSession_GetConnectionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSession_GetConnectionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSession_GetMuted
// Il2CppName: ovr_NetSyncSession_GetMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSession_GetMuted)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSession_GetMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSession_GetSessionId
// Il2CppName: ovr_NetSyncSession_GetSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSession_GetSessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSession_GetSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSession_GetUserId
// Il2CppName: ovr_NetSyncSession_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSession_GetUserId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSession_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup
// Il2CppName: ovr_NetSyncSession_GetVoipGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSession_GetVoipGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup_Native
// Il2CppName: ovr_NetSyncSession_GetVoipGroup_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSession_GetVoipGroup_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetElement
// Il2CppName: ovr_NetSyncSessionArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSessionArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetSize
// Il2CppName: ovr_NetSyncSessionArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSessionArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetConnectionId
// Il2CppName: ovr_NetSyncSessionsChangedNotification_GetConnectionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetConnectionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSessionsChangedNotification_GetConnectionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetSessions
// Il2CppName: ovr_NetSyncSessionsChangedNotification_GetSessions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetSessions)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSessionsChangedNotification_GetSessions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncSetSessionPropertyResult_GetSession
// Il2CppName: ovr_NetSyncSetSessionPropertyResult_GetSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncSetSessionPropertyResult_GetSession)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncSetSessionPropertyResult_GetSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDecibels
// Il2CppName: ovr_NetSyncVoipAttenuationValue_GetDecibels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDecibels)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncVoipAttenuationValue_GetDecibels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDistance
// Il2CppName: ovr_NetSyncVoipAttenuationValue_GetDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDistance)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncVoipAttenuationValue_GetDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetElement
// Il2CppName: ovr_NetSyncVoipAttenuationValueArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncVoipAttenuationValueArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetSize
// Il2CppName: ovr_NetSyncVoipAttenuationValueArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncVoipAttenuationValueArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetworkingPeer_GetID
// Il2CppName: ovr_NetworkingPeer_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetworkingPeer_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetworkingPeer_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetworkingPeer_GetState
// Il2CppName: ovr_NetworkingPeer_GetState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::PeerConnectionState (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetworkingPeer_GetState)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetworkingPeer_GetState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_OrgScopedID_GetID
// Il2CppName: ovr_OrgScopedID_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_OrgScopedID_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_OrgScopedID_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Packet_Free
// Il2CppName: ovr_Packet_Free
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Packet_Free)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Packet_Free", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Packet_GetBytes
// Il2CppName: ovr_Packet_GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Packet_GetBytes)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Packet_GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Packet_GetSendPolicy
// Il2CppName: ovr_Packet_GetSendPolicy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::SendPolicy (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Packet_GetSendPolicy)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Packet_GetSendPolicy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Packet_GetSenderID
// Il2CppName: ovr_Packet_GetSenderID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Packet_GetSenderID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Packet_GetSenderID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Packet_GetSize
// Il2CppName: ovr_Packet_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Packet_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Packet_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_GetID
// Il2CppName: ovr_Party_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Party_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_GetInvitedUsers
// Il2CppName: ovr_Party_GetInvitedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Party_GetInvitedUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_GetInvitedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_GetLeader
// Il2CppName: ovr_Party_GetLeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Party_GetLeader)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_GetLeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_GetRoom
// Il2CppName: ovr_Party_GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Party_GetRoom)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Party_GetUsers
// Il2CppName: ovr_Party_GetUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Party_GetUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Party_GetUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyID_GetID
// Il2CppName: ovr_PartyID_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyID_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyID_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetAction
// Il2CppName: ovr_PartyUpdateNotification_GetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::PartyUpdateAction (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetAction)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetPartyId
// Il2CppName: ovr_PartyUpdateNotification_GetPartyId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetPartyId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetPartyId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetSenderId
// Il2CppName: ovr_PartyUpdateNotification_GetSenderId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetSenderId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetSenderId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp
// Il2CppName: ovr_PartyUpdateNotification_GetUpdateTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetUpdateTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp_Native
// Il2CppName: ovr_PartyUpdateNotification_GetUpdateTimestamp_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetUpdateTimestamp_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias
// Il2CppName: ovr_PartyUpdateNotification_GetUserAlias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetUserAlias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias_Native
// Il2CppName: ovr_PartyUpdateNotification_GetUserAlias_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetUserAlias_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserId
// Il2CppName: ovr_PartyUpdateNotification_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName
// Il2CppName: ovr_PartyUpdateNotification_GetUserName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetUserName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName_Native
// Il2CppName: ovr_PartyUpdateNotification_GetUserName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PartyUpdateNotification_GetUserName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Pid_GetId
// Il2CppName: ovr_Pid_GetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Pid_GetId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Pid_GetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Pid_GetId_Native
// Il2CppName: ovr_Pid_GetId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Pid_GetId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Pid_GetId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PidArray_GetElement
// Il2CppName: ovr_PidArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_PidArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PidArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PidArray_GetSize
// Il2CppName: ovr_PidArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PidArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PidArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PingResult_GetID
// Il2CppName: ovr_PingResult_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PingResult_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PingResult_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PingResult_GetPingTimeUsec
// Il2CppName: ovr_PingResult_GetPingTimeUsec
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PingResult_GetPingTimeUsec)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PingResult_GetPingTimeUsec", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PingResult_IsTimeout
// Il2CppName: ovr_PingResult_IsTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PingResult_IsTimeout)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PingResult_IsTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PlatformInitialize_GetResult
// Il2CppName: ovr_PlatformInitialize_GetResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::PlatformInitializeResult (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PlatformInitialize_GetResult)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PlatformInitialize_GetResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Price_GetAmountInHundredths
// Il2CppName: ovr_Price_GetAmountInHundredths
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Price_GetAmountInHundredths)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Price_GetAmountInHundredths", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Price_GetCurrency
// Il2CppName: ovr_Price_GetCurrency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Price_GetCurrency)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Price_GetCurrency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Price_GetCurrency_Native
// Il2CppName: ovr_Price_GetCurrency_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Price_GetCurrency_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Price_GetCurrency_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Price_GetFormatted
// Il2CppName: ovr_Price_GetFormatted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Price_GetFormatted)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Price_GetFormatted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Price_GetFormatted_Native
// Il2CppName: ovr_Price_GetFormatted_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Price_GetFormatted_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Price_GetFormatted_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Product_GetDescription
// Il2CppName: ovr_Product_GetDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Product_GetDescription)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Product_GetDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Product_GetDescription_Native
// Il2CppName: ovr_Product_GetDescription_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Product_GetDescription_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Product_GetDescription_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice
// Il2CppName: ovr_Product_GetFormattedPrice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Product_GetFormattedPrice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice_Native
// Il2CppName: ovr_Product_GetFormattedPrice_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Product_GetFormattedPrice_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Product_GetName
// Il2CppName: ovr_Product_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Product_GetName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Product_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Product_GetName_Native
// Il2CppName: ovr_Product_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Product_GetName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Product_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Product_GetSKU
// Il2CppName: ovr_Product_GetSKU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Product_GetSKU)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Product_GetSKU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Product_GetSKU_Native
// Il2CppName: ovr_Product_GetSKU_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Product_GetSKU_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Product_GetSKU_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ProductArray_GetElement
// Il2CppName: ovr_ProductArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_ProductArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ProductArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl
// Il2CppName: ovr_ProductArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ProductArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl_Native
// Il2CppName: ovr_ProductArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ProductArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ProductArray_GetSize
// Il2CppName: ovr_ProductArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ProductArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ProductArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ProductArray_HasNextPage
// Il2CppName: ovr_ProductArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ProductArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ProductArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime
// Il2CppName: ovr_Purchase_GetExpirationTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetExpirationTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime_Native
// Il2CppName: ovr_Purchase_GetExpirationTime_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetExpirationTime_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime
// Il2CppName: ovr_Purchase_GetGrantTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetGrantTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime_Native
// Il2CppName: ovr_Purchase_GetGrantTime_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetGrantTime_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseID
// Il2CppName: ovr_Purchase_GetPurchaseID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetPurchaseID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID
// Il2CppName: ovr_Purchase_GetPurchaseStrID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetPurchaseStrID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID_Native
// Il2CppName: ovr_Purchase_GetPurchaseStrID_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetPurchaseStrID_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetSKU
// Il2CppName: ovr_Purchase_GetSKU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetSKU)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetSKU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Purchase_GetSKU_Native
// Il2CppName: ovr_Purchase_GetSKU_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Purchase_GetSKU_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Purchase_GetSKU_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PurchaseArray_GetElement
// Il2CppName: ovr_PurchaseArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_PurchaseArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PurchaseArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl
// Il2CppName: ovr_PurchaseArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PurchaseArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl_Native
// Il2CppName: ovr_PurchaseArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PurchaseArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PurchaseArray_GetSize
// Il2CppName: ovr_PurchaseArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PurchaseArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PurchaseArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_PurchaseArray_HasNextPage
// Il2CppName: ovr_PurchaseArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_PurchaseArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_PurchaseArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetApplicationID
// Il2CppName: ovr_Room_GetApplicationID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetApplicationID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetApplicationID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetDataStore
// Il2CppName: ovr_Room_GetDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetDataStore)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetDescription
// Il2CppName: ovr_Room_GetDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetDescription)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetDescription_Native
// Il2CppName: ovr_Room_GetDescription_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetDescription_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetDescription_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetID
// Il2CppName: ovr_Room_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetInvitedUsers
// Il2CppName: ovr_Room_GetInvitedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetInvitedUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetInvitedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetIsMembershipLocked
// Il2CppName: ovr_Room_GetIsMembershipLocked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetIsMembershipLocked)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetIsMembershipLocked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetJoinPolicy
// Il2CppName: ovr_Room_GetJoinPolicy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::RoomJoinPolicy (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetJoinPolicy)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetJoinPolicy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetJoinability
// Il2CppName: ovr_Room_GetJoinability
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::RoomJoinability (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetJoinability)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetJoinability", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetMatchedUsers
// Il2CppName: ovr_Room_GetMatchedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetMatchedUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetMatchedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetMaxUsers
// Il2CppName: ovr_Room_GetMaxUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetMaxUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetMaxUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetName
// Il2CppName: ovr_Room_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetName_Native
// Il2CppName: ovr_Room_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetOwner
// Il2CppName: ovr_Room_GetOwner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetOwner)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetOwner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetTeams
// Il2CppName: ovr_Room_GetTeams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetTeams)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetTeams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetType
// Il2CppName: ovr_Room_GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::RoomType (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetType)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetUsers
// Il2CppName: ovr_Room_GetUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Room_GetVersion
// Il2CppName: ovr_Room_GetVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Room_GetVersion)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Room_GetVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomArray_GetElement
// Il2CppName: ovr_RoomArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_RoomArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl
// Il2CppName: ovr_RoomArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl_Native
// Il2CppName: ovr_RoomArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomArray_GetSize
// Il2CppName: ovr_RoomArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RoomArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomArray_HasNextPage
// Il2CppName: ovr_RoomArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RoomArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetID
// Il2CppName: ovr_RoomInviteNotification_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomInviteNotification_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetRoomID
// Il2CppName: ovr_RoomInviteNotification_GetRoomID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetRoomID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomInviteNotification_GetRoomID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSenderID
// Il2CppName: ovr_RoomInviteNotification_GetSenderID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSenderID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomInviteNotification_GetSenderID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime
// Il2CppName: ovr_RoomInviteNotification_GetSentTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomInviteNotification_GetSentTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime_Native
// Il2CppName: ovr_RoomInviteNotification_GetSentTime_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomInviteNotification_GetSentTime_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetElement
// Il2CppName: ovr_RoomInviteNotificationArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomInviteNotificationArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl
// Il2CppName: ovr_RoomInviteNotificationArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomInviteNotificationArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl_Native
// Il2CppName: ovr_RoomInviteNotificationArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomInviteNotificationArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetSize
// Il2CppName: ovr_RoomInviteNotificationArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomInviteNotificationArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_HasNextPage
// Il2CppName: ovr_RoomInviteNotificationArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomInviteNotificationArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SdkAccount_GetAccountType
// Il2CppName: ovr_SdkAccount_GetAccountType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::SdkAccountType (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SdkAccount_GetAccountType)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SdkAccount_GetAccountType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SdkAccount_GetUserId
// Il2CppName: ovr_SdkAccount_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SdkAccount_GetUserId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SdkAccount_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SdkAccountArray_GetElement
// Il2CppName: ovr_SdkAccountArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_SdkAccountArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SdkAccountArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SdkAccountArray_GetSize
// Il2CppName: ovr_SdkAccountArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SdkAccountArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SdkAccountArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ShareMediaResult_GetStatus
// Il2CppName: ovr_ShareMediaResult_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::ShareMediaStatus (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ShareMediaResult_GetStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ShareMediaResult_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetID
// Il2CppName: ovr_SupplementaryMetric_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SupplementaryMetric_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetMetric
// Il2CppName: ovr_SupplementaryMetric_GetMetric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetMetric)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SupplementaryMetric_GetMetric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SystemPermission_GetHasPermission
// Il2CppName: ovr_SystemPermission_GetHasPermission
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SystemPermission_GetHasPermission)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SystemPermission_GetHasPermission", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SystemPermission_GetPermissionGrantStatus
// Il2CppName: ovr_SystemPermission_GetPermissionGrantStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::PermissionGrantStatus (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SystemPermission_GetPermissionGrantStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SystemPermission_GetPermissionGrantStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SystemVoipState_GetMicrophoneMuted
// Il2CppName: ovr_SystemVoipState_GetMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::VoipMuteState (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SystemVoipState_GetMicrophoneMuted)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SystemVoipState_GetMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_SystemVoipState_GetStatus
// Il2CppName: ovr_SystemVoipState_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::SystemVoipStatus (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_SystemVoipState_GetStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_SystemVoipState_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Team_GetAssignedUsers
// Il2CppName: ovr_Team_GetAssignedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Team_GetAssignedUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Team_GetAssignedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Team_GetMaxUsers
// Il2CppName: ovr_Team_GetMaxUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Team_GetMaxUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Team_GetMaxUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Team_GetMinUsers
// Il2CppName: ovr_Team_GetMinUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Team_GetMinUsers)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Team_GetMinUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Team_GetName
// Il2CppName: ovr_Team_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Team_GetName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Team_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_Team_GetName_Native
// Il2CppName: ovr_Team_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_Team_GetName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_Team_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TeamArray_GetElement
// Il2CppName: ovr_TeamArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_TeamArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TeamArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TeamArray_GetSize
// Il2CppName: ovr_TeamArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TeamArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TeamArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken
// Il2CppName: ovr_TestUser_GetAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken_Native
// Il2CppName: ovr_TestUser_GetAccessToken_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetAccessToken_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetAppAccessArray
// Il2CppName: ovr_TestUser_GetAppAccessArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetAppAccessArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetAppAccessArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetFbAppAccessArray
// Il2CppName: ovr_TestUser_GetFbAppAccessArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetFbAppAccessArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetFbAppAccessArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken
// Il2CppName: ovr_TestUser_GetFriendAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetFriendAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken_Native
// Il2CppName: ovr_TestUser_GetFriendAccessToken_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetFriendAccessToken_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetFriendAppAccessArray
// Il2CppName: ovr_TestUser_GetFriendAppAccessArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetFriendAppAccessArray)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetFriendAppAccessArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias
// Il2CppName: ovr_TestUser_GetUserAlias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetUserAlias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias_Native
// Il2CppName: ovr_TestUser_GetUserAlias_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetUserAlias_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetUserFbid
// Il2CppName: ovr_TestUser_GetUserFbid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetUserFbid)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetUserFbid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUser_GetUserId
// Il2CppName: ovr_TestUser_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUser_GetUserId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUser_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken
// Il2CppName: ovr_TestUserAppAccess_GetAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUserAppAccess_GetAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken_Native
// Il2CppName: ovr_TestUserAppAccess_GetAccessToken_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUserAppAccess_GetAccessToken_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAppId
// Il2CppName: ovr_TestUserAppAccess_GetAppId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAppId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUserAppAccess_GetAppId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetUserId
// Il2CppName: ovr_TestUserAppAccess_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetUserId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUserAppAccess_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetElement
// Il2CppName: ovr_TestUserAppAccessArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUserAppAccessArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetSize
// Il2CppName: ovr_TestUserAppAccessArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_TestUserAppAccessArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetDisplayName
// Il2CppName: ovr_User_GetDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetDisplayName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetDisplayName_Native
// Il2CppName: ovr_User_GetDisplayName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetDisplayName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetDisplayName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetID
// Il2CppName: ovr_User_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetImageUrl
// Il2CppName: ovr_User_GetImageUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetImageUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetImageUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetImageUrl_Native
// Il2CppName: ovr_User_GetImageUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetImageUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetImageUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetInviteToken
// Il2CppName: ovr_User_GetInviteToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetInviteToken)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetInviteToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetInviteToken_Native
// Il2CppName: ovr_User_GetInviteToken_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetInviteToken_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetInviteToken_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetOculusID
// Il2CppName: ovr_User_GetOculusID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetOculusID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetOculusID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetOculusID_Native
// Il2CppName: ovr_User_GetOculusID_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetOculusID_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetOculusID_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresence
// Il2CppName: ovr_User_GetPresence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresence)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresence_Native
// Il2CppName: ovr_User_GetPresence_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresence_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresence_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage
// Il2CppName: ovr_User_GetPresenceDeeplinkMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceDeeplinkMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage_Native
// Il2CppName: ovr_User_GetPresenceDeeplinkMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceDeeplinkMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName
// Il2CppName: ovr_User_GetPresenceDestinationApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceDestinationApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName_Native
// Il2CppName: ovr_User_GetPresenceDestinationApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceDestinationApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId
// Il2CppName: ovr_User_GetPresenceLobbySessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceLobbySessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId_Native
// Il2CppName: ovr_User_GetPresenceLobbySessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceLobbySessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId
// Il2CppName: ovr_User_GetPresenceMatchSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceMatchSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId_Native
// Il2CppName: ovr_User_GetPresenceMatchSessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceMatchSessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetPresenceStatus
// Il2CppName: ovr_User_GetPresenceStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Oculus::Platform::UserPresenceStatus (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetPresenceStatus)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetPresenceStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl
// Il2CppName: ovr_User_GetSmallImageUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetSmallImageUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl_Native
// Il2CppName: ovr_User_GetSmallImageUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_User_GetSmallImageUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserAndRoom_GetRoom
// Il2CppName: ovr_UserAndRoom_GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserAndRoom_GetRoom)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserAndRoom_GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserAndRoom_GetUser
// Il2CppName: ovr_UserAndRoom_GetUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserAndRoom_GetUser)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserAndRoom_GetUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetElement
// Il2CppName: ovr_UserAndRoomArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserAndRoomArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl
// Il2CppName: ovr_UserAndRoomArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserAndRoomArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl_Native
// Il2CppName: ovr_UserAndRoomArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserAndRoomArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetSize
// Il2CppName: ovr_UserAndRoomArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserAndRoomArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserAndRoomArray_HasNextPage
// Il2CppName: ovr_UserAndRoomArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserAndRoomArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserAndRoomArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserArray_GetElement
// Il2CppName: ovr_UserArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_UserArray_GetElement)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl
// Il2CppName: ovr_UserArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl_Native
// Il2CppName: ovr_UserArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserArray_GetSize
// Il2CppName: ovr_UserArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserArray_GetSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserArray_HasNextPage
// Il2CppName: ovr_UserArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserArray_HasNextPage)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserDataStoreUpdateResponse_GetSuccess
// Il2CppName: ovr_UserDataStoreUpdateResponse_GetSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserDataStoreUpdateResponse_GetSuccess)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserDataStoreUpdateResponse_GetSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserProof_GetNonce
// Il2CppName: ovr_UserProof_GetNonce
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserProof_GetNonce)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserProof_GetNonce", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserProof_GetNonce_Native
// Il2CppName: ovr_UserProof_GetNonce_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserProof_GetNonce_Native)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserProof_GetNonce_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserReportID_GetDidCancel
// Il2CppName: ovr_UserReportID_GetDidCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserReportID_GetDidCancel)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserReportID_GetDidCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserReportID_GetID
// Il2CppName: ovr_UserReportID_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserReportID_GetID)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserReportID_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipDecoder_Decode
// Il2CppName: ovr_VoipDecoder_Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::ArrayW<uint8_t>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_VoipDecoder_Decode)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* compressedData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* compressedSize = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipDecoder_Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, compressedData, compressedSize});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipDecoder_GetDecodedPCM
// Il2CppName: ovr_VoipDecoder_GetDecodedPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr, ::ArrayW<float>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_VoipDecoder_GetDecodedPCM)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* outputBufferSize = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipDecoder_GetDecodedPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, outputBuffer, outputBufferSize});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipEncoder_AddPCM
// Il2CppName: ovr_VoipEncoder_AddPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::ArrayW<float>, uint)>(&Oculus::Platform::CAPI::ovr_VoipEncoder_AddPCM)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* inputData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* inputSize = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipEncoder_AddPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, inputData, inputSize});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedData
// Il2CppName: ovr_VoipEncoder_GetCompressedData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr, ::ArrayW<uint8_t>, ::System::UIntPtr)>(&Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* outputBuffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* intputSize = &::il2cpp_utils::GetClassFromName("System", "UIntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipEncoder_GetCompressedData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, outputBuffer, intputSize});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedDataSize
// Il2CppName: ovr_VoipEncoder_GetCompressedDataSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::UIntPtr (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedDataSize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipEncoder_GetCompressedDataSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AbuseReportOptions_Create
// Il2CppName: ovr_AbuseReportOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_AbuseReportOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AbuseReportOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AbuseReportOptions_Destroy
// Il2CppName: ovr_AbuseReportOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AbuseReportOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AbuseReportOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetPreventPeopleChooser
// Il2CppName: ovr_AbuseReportOptions_SetPreventPeopleChooser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetPreventPeopleChooser)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AbuseReportOptions_SetPreventPeopleChooser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetReportType
// Il2CppName: ovr_AbuseReportOptions_SetReportType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::AbuseReportType)>(&Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetReportType)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "AbuseReportType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AbuseReportOptions_SetReportType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Create
// Il2CppName: ovr_AdvancedAbuseReportOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Destroy
// Il2CppName: ovr_AdvancedAbuseReportOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType
// Il2CppName: ovr_AdvancedAbuseReportOptions_SetObjectType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_SetObjectType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType_Native
// Il2CppName: ovr_AdvancedAbuseReportOptions_SetObjectType_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_SetObjectType_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetReportType
// Il2CppName: ovr_AdvancedAbuseReportOptions_SetReportType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::AbuseReportType)>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetReportType)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "AbuseReportType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_SetReportType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetVideoMode
// Il2CppName: ovr_AdvancedAbuseReportOptions_SetVideoMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::AbuseReportVideoMode)>(&Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetVideoMode)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "AbuseReportVideoMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_AdvancedAbuseReportOptions_SetVideoMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationOptions_Create
// Il2CppName: ovr_ApplicationOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_ApplicationOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationOptions_Destroy
// Il2CppName: ovr_ApplicationOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage
// Il2CppName: ovr_ApplicationOptions_SetDeeplinkMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationOptions_SetDeeplinkMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage_Native
// Il2CppName: ovr_ApplicationOptions_SetDeeplinkMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ApplicationOptions_SetDeeplinkMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_Create
// Il2CppName: ovr_ChallengeOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_Destroy
// Il2CppName: ovr_ChallengeOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription
// Il2CppName: ovr_ChallengeOptions_SetDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription_Native
// Il2CppName: ovr_ChallengeOptions_SetDescription_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetDescription_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate
// Il2CppName: ovr_ChallengeOptions_SetEndDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::DateTime)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetEndDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate_Native
// Il2CppName: ovr_ChallengeOptions_SetEndDate_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetEndDate_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeActiveChallenges
// Il2CppName: ovr_ChallengeOptions_SetIncludeActiveChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeActiveChallenges)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetIncludeActiveChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeFutureChallenges
// Il2CppName: ovr_ChallengeOptions_SetIncludeFutureChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeFutureChallenges)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetIncludeFutureChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludePastChallenges
// Il2CppName: ovr_ChallengeOptions_SetIncludePastChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludePastChallenges)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetIncludePastChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName
// Il2CppName: ovr_ChallengeOptions_SetLeaderboardName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetLeaderboardName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName_Native
// Il2CppName: ovr_ChallengeOptions_SetLeaderboardName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetLeaderboardName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate
// Il2CppName: ovr_ChallengeOptions_SetStartDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::DateTime)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetStartDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate_Native
// Il2CppName: ovr_ChallengeOptions_SetStartDate_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetStartDate_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle
// Il2CppName: ovr_ChallengeOptions_SetTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle_Native
// Il2CppName: ovr_ChallengeOptions_SetTitle_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetTitle_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetViewerFilter
// Il2CppName: ovr_ChallengeOptions_SetViewerFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::ChallengeViewerFilter)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetViewerFilter)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "ChallengeViewerFilter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetViewerFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_ChallengeOptions_SetVisibility
// Il2CppName: ovr_ChallengeOptions_SetVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::ChallengeVisibility)>(&Oculus::Platform::CAPI::ovr_ChallengeOptions_SetVisibility)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "ChallengeVisibility")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_ChallengeOptions_SetVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Create
// Il2CppName: ovr_GroupPresenceOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Destroy
// Il2CppName: ovr_GroupPresenceOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName
// Il2CppName: ovr_GroupPresenceOptions_SetDestinationApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_SetDestinationApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName_Native
// Il2CppName: ovr_GroupPresenceOptions_SetDestinationApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_SetDestinationApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetIsJoinable
// Il2CppName: ovr_GroupPresenceOptions_SetIsJoinable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetIsJoinable)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_SetIsJoinable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId
// Il2CppName: ovr_GroupPresenceOptions_SetLobbySessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_SetLobbySessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId_Native
// Il2CppName: ovr_GroupPresenceOptions_SetLobbySessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_SetLobbySessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId
// Il2CppName: ovr_GroupPresenceOptions_SetMatchSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_SetMatchSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId_Native
// Il2CppName: ovr_GroupPresenceOptions_SetMatchSessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_GroupPresenceOptions_SetMatchSessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InviteOptions_Create
// Il2CppName: ovr_InviteOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_InviteOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InviteOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InviteOptions_Destroy
// Il2CppName: ovr_InviteOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InviteOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InviteOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InviteOptions_AddSuggestedUser
// Il2CppName: ovr_InviteOptions_AddSuggestedUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::ovr_InviteOptions_AddSuggestedUser)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InviteOptions_AddSuggestedUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_InviteOptions_ClearSuggestedUsers
// Il2CppName: ovr_InviteOptions_ClearSuggestedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_InviteOptions_ClearSuggestedUsers)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_InviteOptions_ClearSuggestedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_Create
// Il2CppName: ovr_MatchmakingOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_Destroy
// Il2CppName: ovr_MatchmakingOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString
// Il2CppName: ovr_MatchmakingOptions_SetCreateRoomDataStoreString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_SetCreateRoomDataStoreString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native
// Il2CppName: ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearCreateRoomDataStore
// Il2CppName: ovr_MatchmakingOptions_ClearCreateRoomDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearCreateRoomDataStore)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_ClearCreateRoomDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomJoinPolicy
// Il2CppName: ovr_MatchmakingOptions_SetCreateRoomJoinPolicy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::RoomJoinPolicy)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomJoinPolicy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "RoomJoinPolicy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_SetCreateRoomJoinPolicy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomMaxUsers
// Il2CppName: ovr_MatchmakingOptions_SetCreateRoomMaxUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomMaxUsers)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_SetCreateRoomMaxUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_AddEnqueueAdditionalUser
// Il2CppName: ovr_MatchmakingOptions_AddEnqueueAdditionalUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_AddEnqueueAdditionalUser)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_AddEnqueueAdditionalUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers
// Il2CppName: ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueDataSettingsInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW, int)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_SetEnqueueDataSettingsInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr, int)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW, double)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr, double)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueDataSettingsString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_SetEnqueueDataSettingsString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueDataSettings
// Il2CppName: ovr_MatchmakingOptions_ClearEnqueueDataSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueDataSettings)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_ClearEnqueueDataSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueIsDebug
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueIsDebug
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueIsDebug)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_SetEnqueueIsDebug", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueQueryKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_SetEnqueueQueryKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey_Native
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueQueryKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_MatchmakingOptions_SetEnqueueQueryKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncOptions_Create
// Il2CppName: ovr_NetSyncOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_NetSyncOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncOptions_Destroy
// Il2CppName: ovr_NetSyncOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup
// Il2CppName: ovr_NetSyncOptions_SetVoipGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncOptions_SetVoipGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup_Native
// Il2CppName: ovr_NetSyncOptions_SetVoipGroup_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncOptions_SetVoipGroup_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipStreamDefault
// Il2CppName: ovr_NetSyncOptions_SetVoipStreamDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::NetSyncVoipStreamMode)>(&Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipStreamDefault)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "NetSyncVoipStreamMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncOptions_SetVoipStreamDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId
// Il2CppName: ovr_NetSyncOptions_SetZoneId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncOptions_SetZoneId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId_Native
// Il2CppName: ovr_NetSyncOptions_SetZoneId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_NetSyncOptions_SetZoneId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_Create
// Il2CppName: ovr_RichPresenceOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_Destroy
// Il2CppName: ovr_RichPresenceOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName
// Il2CppName: ovr_RichPresenceOptions_SetApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName_Native
// Il2CppName: ovr_RichPresenceOptions_SetApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString
// Il2CppName: ovr_RichPresenceOptions_SetArgsString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetArgsString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString_Native
// Il2CppName: ovr_RichPresenceOptions_SetArgsString_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetArgsString_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_ClearArgs
// Il2CppName: ovr_RichPresenceOptions_ClearArgs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_ClearArgs)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_ClearArgs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetCurrentCapacity
// Il2CppName: ovr_RichPresenceOptions_SetCurrentCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetCurrentCapacity)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetCurrentCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride
// Il2CppName: ovr_RichPresenceOptions_SetDeeplinkMessageOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetDeeplinkMessageOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native
// Il2CppName: ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime
// Il2CppName: ovr_RichPresenceOptions_SetEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::DateTime)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime_Native
// Il2CppName: ovr_RichPresenceOptions_SetEndTime_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetEndTime_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetExtraContext
// Il2CppName: ovr_RichPresenceOptions_SetExtraContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::RichPresenceExtraContext)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetExtraContext)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "RichPresenceExtraContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetExtraContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetInstanceId
// Il2CppName: ovr_RichPresenceOptions_SetInstanceId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetInstanceId)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetInstanceId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetInstanceId_Native
// Il2CppName: ovr_RichPresenceOptions_SetInstanceId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetInstanceId_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetInstanceId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsIdle
// Il2CppName: ovr_RichPresenceOptions_SetIsIdle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsIdle)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetIsIdle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsJoinable
// Il2CppName: ovr_RichPresenceOptions_SetIsJoinable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsJoinable)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetIsJoinable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId
// Il2CppName: ovr_RichPresenceOptions_SetJoinableId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetJoinableId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId_Native
// Il2CppName: ovr_RichPresenceOptions_SetJoinableId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetJoinableId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetLobbySessionId
// Il2CppName: ovr_RichPresenceOptions_SetLobbySessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetLobbySessionId)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetLobbySessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetLobbySessionId_Native
// Il2CppName: ovr_RichPresenceOptions_SetLobbySessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetLobbySessionId_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetLobbySessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMatchSessionId
// Il2CppName: ovr_RichPresenceOptions_SetMatchSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMatchSessionId)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetMatchSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMatchSessionId_Native
// Il2CppName: ovr_RichPresenceOptions_SetMatchSessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMatchSessionId_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetMatchSessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMaxCapacity
// Il2CppName: ovr_RichPresenceOptions_SetMaxCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMaxCapacity)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetMaxCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime
// Il2CppName: ovr_RichPresenceOptions_SetStartTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::DateTime)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetStartTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime_Native
// Il2CppName: ovr_RichPresenceOptions_SetStartTime_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RichPresenceOptions_SetStartTime_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomOptions_Create
// Il2CppName: ovr_RoomOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_RoomOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomOptions_Destroy
// Il2CppName: ovr_RoomOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RoomOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString
// Il2CppName: ovr_RoomOptions_SetDataStoreString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::StringW, ::StringW)>(&Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomOptions_SetDataStoreString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString_Native
// Il2CppName: ovr_RoomOptions_SetDataStoreString_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::IntPtr, ::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString_Native)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomOptions_SetDataStoreString_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, key, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomOptions_ClearDataStore
// Il2CppName: ovr_RoomOptions_ClearDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RoomOptions_ClearDataStore)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomOptions_ClearDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomOptions_SetExcludeRecentlyMet
// Il2CppName: ovr_RoomOptions_SetExcludeRecentlyMet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_RoomOptions_SetExcludeRecentlyMet)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomOptions_SetExcludeRecentlyMet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomOptions_SetMaxUserResults
// Il2CppName: ovr_RoomOptions_SetMaxUserResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint)>(&Oculus::Platform::CAPI::ovr_RoomOptions_SetMaxUserResults)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomOptions_SetMaxUserResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomOptions_SetOrdering
// Il2CppName: ovr_RoomOptions_SetOrdering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::UserOrdering)>(&Oculus::Platform::CAPI::ovr_RoomOptions_SetOrdering)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "UserOrdering")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomOptions_SetOrdering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomOptions_SetRecentlyMetTimeWindow
// Il2CppName: ovr_RoomOptions_SetRecentlyMetTimeWindow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::TimeWindow)>(&Oculus::Platform::CAPI::ovr_RoomOptions_SetRecentlyMetTimeWindow)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "TimeWindow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomOptions_SetRecentlyMetTimeWindow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomOptions_SetRoomId
// Il2CppName: ovr_RoomOptions_SetRoomId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::ovr_RoomOptions_SetRoomId)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomOptions_SetRoomId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RoomOptions_SetTurnOffUpdates
// Il2CppName: ovr_RoomOptions_SetTurnOffUpdates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&Oculus::Platform::CAPI::ovr_RoomOptions_SetTurnOffUpdates)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RoomOptions_SetTurnOffUpdates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RosterOptions_Create
// Il2CppName: ovr_RosterOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_RosterOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RosterOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RosterOptions_Destroy
// Il2CppName: ovr_RosterOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RosterOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RosterOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RosterOptions_AddSuggestedUser
// Il2CppName: ovr_RosterOptions_AddSuggestedUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint64_t)>(&Oculus::Platform::CAPI::ovr_RosterOptions_AddSuggestedUser)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RosterOptions_AddSuggestedUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_RosterOptions_ClearSuggestedUsers
// Il2CppName: ovr_RosterOptions_ClearSuggestedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_RosterOptions_ClearSuggestedUsers)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_RosterOptions_ClearSuggestedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserOptions_Create
// Il2CppName: ovr_UserOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_UserOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserOptions_Destroy
// Il2CppName: ovr_UserOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserOptions_SetMaxUsers
// Il2CppName: ovr_UserOptions_SetMaxUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, uint)>(&Oculus::Platform::CAPI::ovr_UserOptions_SetMaxUsers)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserOptions_SetMaxUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserOptions_AddServiceProvider
// Il2CppName: ovr_UserOptions_AddServiceProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::ServiceProvider)>(&Oculus::Platform::CAPI::ovr_UserOptions_AddServiceProvider)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "ServiceProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserOptions_AddServiceProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserOptions_ClearServiceProviders
// Il2CppName: ovr_UserOptions_ClearServiceProviders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_UserOptions_ClearServiceProviders)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserOptions_ClearServiceProviders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_UserOptions_SetTimeWindow
// Il2CppName: ovr_UserOptions_SetTimeWindow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::TimeWindow)>(&Oculus::Platform::CAPI::ovr_UserOptions_SetTimeWindow)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "TimeWindow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_UserOptions_SetTimeWindow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipOptions_Create
// Il2CppName: ovr_VoipOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&Oculus::Platform::CAPI::ovr_VoipOptions_Create)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipOptions_Destroy
// Il2CppName: ovr_VoipOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&Oculus::Platform::CAPI::ovr_VoipOptions_Destroy)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipOptions_SetBitrateForNewConnections
// Il2CppName: ovr_VoipOptions_SetBitrateForNewConnections
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::VoipBitrate)>(&Oculus::Platform::CAPI::ovr_VoipOptions_SetBitrateForNewConnections)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "VoipBitrate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipOptions_SetBitrateForNewConnections", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
// Writing MetadataGetter for method: Oculus::Platform::CAPI::ovr_VoipOptions_SetCreateNewConnectionUseDtx
// Il2CppName: ovr_VoipOptions_SetCreateNewConnectionUseDtx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::Oculus::Platform::VoipDtxState)>(&Oculus::Platform::CAPI::ovr_VoipOptions_SetCreateNewConnectionUseDtx)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "VoipDtxState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Platform::CAPI*), "ovr_VoipOptions_SetCreateNewConnectionUseDtx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle, value});
  }
};
