// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabResultCommon
#include "PlayFab/SharedModels/PlayFabResultCommon.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PlayFab::GroupsModels
namespace PlayFab::GroupsModels {
  // Forward declaring type: EntityKey
  class EntityKey;
  // Forward declaring type: EntityWithLineage
  class EntityWithLineage;
}
// Completed forward declares
// Type namespace: PlayFab.GroupsModels
namespace PlayFab::GroupsModels {
  // Forward declaring type: InviteToGroupResponse
  class InviteToGroupResponse;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::GroupsModels::InviteToGroupResponse);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::GroupsModels::InviteToGroupResponse*, "PlayFab.GroupsModels", "InviteToGroupResponse");
// Type namespace: PlayFab.GroupsModels
namespace PlayFab::GroupsModels {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.GroupsModels.InviteToGroupResponse
  // [TokenAttribute] Offset: FFFFFFFF
  class InviteToGroupResponse : public ::PlayFab::SharedModels::PlayFabResultCommon {
    public:
    public:
    // public System.DateTime Expires
    // Size: 0x8
    // Offset: 0x20
    ::System::DateTime Expires;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    // public PlayFab.GroupsModels.EntityKey Group
    // Size: 0x8
    // Offset: 0x28
    ::PlayFab::GroupsModels::EntityKey* Group;
    // Field size check
    static_assert(sizeof(::PlayFab::GroupsModels::EntityKey*) == 0x8);
    // public PlayFab.GroupsModels.EntityWithLineage InvitedByEntity
    // Size: 0x8
    // Offset: 0x30
    ::PlayFab::GroupsModels::EntityWithLineage* InvitedByEntity;
    // Field size check
    static_assert(sizeof(::PlayFab::GroupsModels::EntityWithLineage*) == 0x8);
    // public PlayFab.GroupsModels.EntityWithLineage InvitedEntity
    // Size: 0x8
    // Offset: 0x38
    ::PlayFab::GroupsModels::EntityWithLineage* InvitedEntity;
    // Field size check
    static_assert(sizeof(::PlayFab::GroupsModels::EntityWithLineage*) == 0x8);
    // public System.String RoleId
    // Size: 0x8
    // Offset: 0x40
    ::StringW RoleId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.DateTime Expires
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn_Expires();
    // Get instance field reference: public PlayFab.GroupsModels.EntityKey Group
    [[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& dyn_Group();
    // Get instance field reference: public PlayFab.GroupsModels.EntityWithLineage InvitedByEntity
    [[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityWithLineage*& dyn_InvitedByEntity();
    // Get instance field reference: public PlayFab.GroupsModels.EntityWithLineage InvitedEntity
    [[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityWithLineage*& dyn_InvitedEntity();
    // Get instance field reference: public System.String RoleId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_RoleId();
    // public System.Void .ctor()
    // Offset: 0xBB71B8
    // Implemented from: PlayFab.SharedModels.PlayFabResultCommon
    // Base method: System.Void PlayFabResultCommon::.ctor()
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InviteToGroupResponse* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::InviteToGroupResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InviteToGroupResponse*, creationType>()));
    }
  }; // PlayFab.GroupsModels.InviteToGroupResponse
  #pragma pack(pop)
  static check_size<sizeof(InviteToGroupResponse), 64 + sizeof(::StringW)> __PlayFab_GroupsModels_InviteToGroupResponseSizeCheck;
  static_assert(sizeof(InviteToGroupResponse) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::GroupsModels::InviteToGroupResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
