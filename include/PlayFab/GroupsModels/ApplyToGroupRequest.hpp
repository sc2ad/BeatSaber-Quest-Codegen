// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabRequestCommon
#include "PlayFab/SharedModels/PlayFabRequestCommon.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PlayFab::GroupsModels
namespace PlayFab::GroupsModels {
  // Forward declaring type: EntityKey
  class EntityKey;
}
// Completed forward declares
// Type namespace: PlayFab.GroupsModels
namespace PlayFab::GroupsModels {
  // Forward declaring type: ApplyToGroupRequest
  class ApplyToGroupRequest;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::GroupsModels::ApplyToGroupRequest);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::GroupsModels::ApplyToGroupRequest*, "PlayFab.GroupsModels", "ApplyToGroupRequest");
// Type namespace: PlayFab.GroupsModels
namespace PlayFab::GroupsModels {
  // WARNING Size may be invalid!
  // Autogenerated type: PlayFab.GroupsModels.ApplyToGroupRequest
  // [TokenAttribute] Offset: FFFFFFFF
  class ApplyToGroupRequest : public ::PlayFab::SharedModels::PlayFabRequestCommon {
    public:
    public:
    // public System.Nullable`1<System.Boolean> AutoAcceptOutstandingInvite
    // Size: 0xFFFFFFFF
    // Offset: 0x18
    ::System::Nullable_1<bool> AutoAcceptOutstandingInvite;
    // public PlayFab.GroupsModels.EntityKey Entity
    // Size: 0x8
    // Offset: 0x20
    ::PlayFab::GroupsModels::EntityKey* Entity;
    // Field size check
    static_assert(sizeof(::PlayFab::GroupsModels::EntityKey*) == 0x8);
    // public PlayFab.GroupsModels.EntityKey Group
    // Size: 0x8
    // Offset: 0x28
    ::PlayFab::GroupsModels::EntityKey* Group;
    // Field size check
    static_assert(sizeof(::PlayFab::GroupsModels::EntityKey*) == 0x8);
    public:
    // Deleting conversion operator: operator ::PlayFab::PlayFabAuthenticationContext*
    constexpr operator ::PlayFab::PlayFabAuthenticationContext*() const noexcept = delete;
    // Get instance field reference: public System.Nullable`1<System.Boolean> AutoAcceptOutstandingInvite
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& dyn_AutoAcceptOutstandingInvite();
    // Get instance field reference: public PlayFab.GroupsModels.EntityKey Entity
    [[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& dyn_Entity();
    // Get instance field reference: public PlayFab.GroupsModels.EntityKey Group
    [[deprecated("Use field access instead!")]] ::PlayFab::GroupsModels::EntityKey*& dyn_Group();
    // public System.Void .ctor()
    // Offset: 0xBB7108
    // Implemented from: PlayFab.SharedModels.PlayFabRequestCommon
    // Base method: System.Void PlayFabRequestCommon::.ctor()
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ApplyToGroupRequest* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::GroupsModels::ApplyToGroupRequest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ApplyToGroupRequest*, creationType>()));
    }
  }; // PlayFab.GroupsModels.ApplyToGroupRequest
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::GroupsModels::ApplyToGroupRequest::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
