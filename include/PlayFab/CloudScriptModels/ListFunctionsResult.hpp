// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabResultCommon
#include "PlayFab/SharedModels/PlayFabResultCommon.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: PlayFab::CloudScriptModels
namespace PlayFab::CloudScriptModels {
  // Forward declaring type: FunctionModel
  class FunctionModel;
}
// Completed forward declares
// Type namespace: PlayFab.CloudScriptModels
namespace PlayFab::CloudScriptModels {
  // Forward declaring type: ListFunctionsResult
  class ListFunctionsResult;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::CloudScriptModels::ListFunctionsResult);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::CloudScriptModels::ListFunctionsResult*, "PlayFab.CloudScriptModels", "ListFunctionsResult");
// Type namespace: PlayFab.CloudScriptModels
namespace PlayFab::CloudScriptModels {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.CloudScriptModels.ListFunctionsResult
  // [TokenAttribute] Offset: FFFFFFFF
  class ListFunctionsResult : public ::PlayFab::SharedModels::PlayFabResultCommon {
    public:
    public:
    // public System.Collections.Generic.List`1<PlayFab.CloudScriptModels.FunctionModel> Functions
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::PlayFab::CloudScriptModels::FunctionModel*>* Functions;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::PlayFab::CloudScriptModels::FunctionModel*>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Collections::Generic::List_1<::PlayFab::CloudScriptModels::FunctionModel*>*
    constexpr operator ::System::Collections::Generic::List_1<::PlayFab::CloudScriptModels::FunctionModel*>*() const noexcept {
      return Functions;
    }
    // Get instance field reference: public System.Collections.Generic.List`1<PlayFab.CloudScriptModels.FunctionModel> Functions
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::CloudScriptModels::FunctionModel*>*& dyn_Functions();
    // public System.Void .ctor()
    // Offset: 0xB5DE08
    // Implemented from: PlayFab.SharedModels.PlayFabResultCommon
    // Base method: System.Void PlayFabResultCommon::.ctor()
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ListFunctionsResult* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::CloudScriptModels::ListFunctionsResult::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ListFunctionsResult*, creationType>()));
    }
  }; // PlayFab.CloudScriptModels.ListFunctionsResult
  #pragma pack(pop)
  static check_size<sizeof(ListFunctionsResult), 32 + sizeof(::System::Collections::Generic::List_1<::PlayFab::CloudScriptModels::FunctionModel*>*)> __PlayFab_CloudScriptModels_ListFunctionsResultSizeCheck;
  static_assert(sizeof(ListFunctionsResult) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::CloudScriptModels::ListFunctionsResult::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
