// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: PlayFab.CloudScriptModels
namespace PlayFab::CloudScriptModels {
  // Forward declaring type: PlayStreamEventEnvelopeModel
  class PlayStreamEventEnvelopeModel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::CloudScriptModels::PlayStreamEventEnvelopeModel);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::CloudScriptModels::PlayStreamEventEnvelopeModel*, "PlayFab.CloudScriptModels", "PlayStreamEventEnvelopeModel");
// Type namespace: PlayFab.CloudScriptModels
namespace PlayFab::CloudScriptModels {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.CloudScriptModels.PlayStreamEventEnvelopeModel
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayStreamEventEnvelopeModel : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public System.String EntityId
    // Size: 0x8
    // Offset: 0x10
    ::StringW EntityId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String EntityType
    // Size: 0x8
    // Offset: 0x18
    ::StringW EntityType;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String EventData
    // Size: 0x8
    // Offset: 0x20
    ::StringW EventData;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String EventName
    // Size: 0x8
    // Offset: 0x28
    ::StringW EventName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String EventNamespace
    // Size: 0x8
    // Offset: 0x30
    ::StringW EventNamespace;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String EventSettings
    // Size: 0x8
    // Offset: 0x38
    ::StringW EventSettings;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.String EntityId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_EntityId();
    // Get instance field reference: public System.String EntityType
    [[deprecated("Use field access instead!")]] ::StringW& dyn_EntityType();
    // Get instance field reference: public System.String EventData
    [[deprecated("Use field access instead!")]] ::StringW& dyn_EventData();
    // Get instance field reference: public System.String EventName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_EventName();
    // Get instance field reference: public System.String EventNamespace
    [[deprecated("Use field access instead!")]] ::StringW& dyn_EventNamespace();
    // Get instance field reference: public System.String EventSettings
    [[deprecated("Use field access instead!")]] ::StringW& dyn_EventSettings();
    // public System.Void .ctor()
    // Offset: 0xB5DE40
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayStreamEventEnvelopeModel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::CloudScriptModels::PlayStreamEventEnvelopeModel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayStreamEventEnvelopeModel*, creationType>()));
    }
  }; // PlayFab.CloudScriptModels.PlayStreamEventEnvelopeModel
  #pragma pack(pop)
  static check_size<sizeof(PlayStreamEventEnvelopeModel), 56 + sizeof(::StringW)> __PlayFab_CloudScriptModels_PlayStreamEventEnvelopeModelSizeCheck;
  static_assert(sizeof(PlayStreamEventEnvelopeModel) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::CloudScriptModels::PlayStreamEventEnvelopeModel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
