// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabResultCommon
#include "PlayFab/SharedModels/PlayFabResultCommon.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PlayFab::ProfilesModels
namespace PlayFab::ProfilesModels {
  // Forward declaring type: EntityProfileBody
  class EntityProfileBody;
}
// Completed forward declares
// Type namespace: PlayFab.ProfilesModels
namespace PlayFab::ProfilesModels {
  // Forward declaring type: GetEntityProfileResponse
  class GetEntityProfileResponse;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::ProfilesModels::GetEntityProfileResponse);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ProfilesModels::GetEntityProfileResponse*, "PlayFab.ProfilesModels", "GetEntityProfileResponse");
// Type namespace: PlayFab.ProfilesModels
namespace PlayFab::ProfilesModels {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.ProfilesModels.GetEntityProfileResponse
  // [TokenAttribute] Offset: FFFFFFFF
  class GetEntityProfileResponse : public ::PlayFab::SharedModels::PlayFabResultCommon {
    public:
    public:
    // public PlayFab.ProfilesModels.EntityProfileBody Profile
    // Size: 0x8
    // Offset: 0x20
    ::PlayFab::ProfilesModels::EntityProfileBody* Profile;
    // Field size check
    static_assert(sizeof(::PlayFab::ProfilesModels::EntityProfileBody*) == 0x8);
    public:
    // Creating conversion operator: operator ::PlayFab::ProfilesModels::EntityProfileBody*
    constexpr operator ::PlayFab::ProfilesModels::EntityProfileBody*() const noexcept {
      return Profile;
    }
    // Get instance field reference: public PlayFab.ProfilesModels.EntityProfileBody Profile
    [[deprecated("Use field access instead!")]] ::PlayFab::ProfilesModels::EntityProfileBody*& dyn_Profile();
    // public System.Void .ctor()
    // Offset: 0x1A55DC4
    // Implemented from: PlayFab.SharedModels.PlayFabResultCommon
    // Base method: System.Void PlayFabResultCommon::.ctor()
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GetEntityProfileResponse* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::GetEntityProfileResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GetEntityProfileResponse*, creationType>()));
    }
  }; // PlayFab.ProfilesModels.GetEntityProfileResponse
  #pragma pack(pop)
  static check_size<sizeof(GetEntityProfileResponse), 32 + sizeof(::PlayFab::ProfilesModels::EntityProfileBody*)> __PlayFab_ProfilesModels_GetEntityProfileResponseSizeCheck;
  static_assert(sizeof(GetEntityProfileResponse) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::ProfilesModels::GetEntityProfileResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
