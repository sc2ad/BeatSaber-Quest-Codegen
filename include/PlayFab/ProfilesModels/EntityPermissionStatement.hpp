// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
// Including type: PlayFab.ProfilesModels.EffectType
#include "PlayFab/ProfilesModels/EffectType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: PlayFab.ProfilesModels
namespace PlayFab::ProfilesModels {
  // Forward declaring type: EntityPermissionStatement
  class EntityPermissionStatement;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::ProfilesModels::EntityPermissionStatement);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ProfilesModels::EntityPermissionStatement*, "PlayFab.ProfilesModels", "EntityPermissionStatement");
// Type namespace: PlayFab.ProfilesModels
namespace PlayFab::ProfilesModels {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.ProfilesModels.EntityPermissionStatement
  // [TokenAttribute] Offset: FFFFFFFF
  class EntityPermissionStatement : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public System.String Action
    // Size: 0x8
    // Offset: 0x10
    ::StringW Action;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String Comment
    // Size: 0x8
    // Offset: 0x18
    ::StringW Comment;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Object Condition
    // Size: 0x8
    // Offset: 0x20
    ::Il2CppObject* Condition;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // public PlayFab.ProfilesModels.EffectType Effect
    // Size: 0x4
    // Offset: 0x28
    ::PlayFab::ProfilesModels::EffectType Effect;
    // Field size check
    static_assert(sizeof(::PlayFab::ProfilesModels::EffectType) == 0x4);
    // Padding between fields: Effect and: Principal
    char __padding3[0x4] = {};
    // public System.Object Principal
    // Size: 0x8
    // Offset: 0x30
    ::Il2CppObject* Principal;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // public System.String Resource
    // Size: 0x8
    // Offset: 0x38
    ::StringW Resource;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.String Action
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Action();
    // Get instance field reference: public System.String Comment
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Comment();
    // Get instance field reference: public System.Object Condition
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_Condition();
    // Get instance field reference: public PlayFab.ProfilesModels.EffectType Effect
    [[deprecated("Use field access instead!")]] ::PlayFab::ProfilesModels::EffectType& dyn_Effect();
    // Get instance field reference: public System.Object Principal
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_Principal();
    // Get instance field reference: public System.String Resource
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Resource();
    // public System.Void .ctor()
    // Offset: 0x1A55D8C
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EntityPermissionStatement* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::EntityPermissionStatement::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EntityPermissionStatement*, creationType>()));
    }
  }; // PlayFab.ProfilesModels.EntityPermissionStatement
  #pragma pack(pop)
  static check_size<sizeof(EntityPermissionStatement), 56 + sizeof(::StringW)> __PlayFab_ProfilesModels_EntityPermissionStatementSizeCheck;
  static_assert(sizeof(EntityPermissionStatement) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::ProfilesModels::EntityPermissionStatement::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
