// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabResultCommon
#include "PlayFab/SharedModels/PlayFabResultCommon.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: PlayFab::ProfilesModels
namespace PlayFab::ProfilesModels {
  // Forward declaring type: EntityKey
  class EntityKey;
}
// Completed forward declares
// Type namespace: PlayFab.ProfilesModels
namespace PlayFab::ProfilesModels {
  // Forward declaring type: GetTitlePlayersFromMasterPlayerAccountIdsResponse
  class GetTitlePlayersFromMasterPlayerAccountIdsResponse;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::ProfilesModels::GetTitlePlayersFromMasterPlayerAccountIdsResponse);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ProfilesModels::GetTitlePlayersFromMasterPlayerAccountIdsResponse*, "PlayFab.ProfilesModels", "GetTitlePlayersFromMasterPlayerAccountIdsResponse");
// Type namespace: PlayFab.ProfilesModels
namespace PlayFab::ProfilesModels {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.ProfilesModels.GetTitlePlayersFromMasterPlayerAccountIdsResponse
  // [TokenAttribute] Offset: FFFFFFFF
  class GetTitlePlayersFromMasterPlayerAccountIdsResponse : public ::PlayFab::SharedModels::PlayFabResultCommon {
    public:
    public:
    // public System.String TitleId
    // Size: 0x8
    // Offset: 0x20
    ::StringW TitleId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.String,PlayFab.ProfilesModels.EntityKey> TitlePlayerAccounts
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::ProfilesModels::EntityKey*>* TitlePlayerAccounts;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::ProfilesModels::EntityKey*>*) == 0x8);
    public:
    // Get instance field reference: public System.String TitleId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_TitleId();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,PlayFab.ProfilesModels.EntityKey> TitlePlayerAccounts
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::ProfilesModels::EntityKey*>*& dyn_TitlePlayerAccounts();
    // public System.Void .ctor()
    // Offset: 0x1A55DFC
    // Implemented from: PlayFab.SharedModels.PlayFabResultCommon
    // Base method: System.Void PlayFabResultCommon::.ctor()
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GetTitlePlayersFromMasterPlayerAccountIdsResponse* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ProfilesModels::GetTitlePlayersFromMasterPlayerAccountIdsResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GetTitlePlayersFromMasterPlayerAccountIdsResponse*, creationType>()));
    }
  }; // PlayFab.ProfilesModels.GetTitlePlayersFromMasterPlayerAccountIdsResponse
  #pragma pack(pop)
  static check_size<sizeof(GetTitlePlayersFromMasterPlayerAccountIdsResponse), 40 + sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::PlayFab::ProfilesModels::EntityKey*>*)> __PlayFab_ProfilesModels_GetTitlePlayersFromMasterPlayerAccountIdsResponseSizeCheck;
  static_assert(sizeof(GetTitlePlayersFromMasterPlayerAccountIdsResponse) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::ProfilesModels::GetTitlePlayersFromMasterPlayerAccountIdsResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
