// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PlayFab
namespace PlayFab {
  // Forward declaring type: PlayFabApiSettings
  class PlayFabApiSettings;
  // Forward declaring type: PlayFabAuthenticationContext
  class PlayFabAuthenticationContext;
  // Forward declaring type: PlayFabLogLevel
  struct PlayFabLogLevel;
  // Forward declaring type: WebRequestType
  struct WebRequestType;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PlayFabSharedSettings
  class PlayFabSharedSettings;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: PlayFab
namespace PlayFab {
  // Forward declaring type: PlayFabSettings
  class PlayFabSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::PlayFabSettings);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::PlayFabSettings*, "PlayFab", "PlayFabSettings");
// Type namespace: PlayFab
namespace PlayFab {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.PlayFabSettings
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayFabSettings : public ::Il2CppObject {
    public:
    // Nested type: ::PlayFab::PlayFabSettings::$$c
    class $$c;
    // Get static field: static private PlayFabSharedSettings _playFabShared
    static ::GlobalNamespace::PlayFabSharedSettings* _get__playFabShared();
    // Set static field: static private PlayFabSharedSettings _playFabShared
    static void _set__playFabShared(::GlobalNamespace::PlayFabSharedSettings* value);
    // Get static field: static public readonly PlayFab.PlayFabApiSettings staticSettings
    static ::PlayFab::PlayFabApiSettings* _get_staticSettings();
    // Set static field: static public readonly PlayFab.PlayFabApiSettings staticSettings
    static void _set_staticSettings(::PlayFab::PlayFabApiSettings* value);
    // Get static field: static public readonly PlayFab.PlayFabAuthenticationContext staticPlayer
    static ::PlayFab::PlayFabAuthenticationContext* _get_staticPlayer();
    // Set static field: static public readonly PlayFab.PlayFabAuthenticationContext staticPlayer
    static void _set_staticPlayer(::PlayFab::PlayFabAuthenticationContext* value);
    // static field const value: static public System.String SdkVersion
    static constexpr const char* SdkVersion = "2.87.200602";
    // Get static field: static public System.String SdkVersion
    static ::StringW _get_SdkVersion();
    // Set static field: static public System.String SdkVersion
    static void _set_SdkVersion(::StringW value);
    // static field const value: static public System.String BuildIdentifier
    static constexpr const char* BuildIdentifier = "jbuild_unitysdk__sdk-unity-3-slave_0";
    // Get static field: static public System.String BuildIdentifier
    static ::StringW _get_BuildIdentifier();
    // Set static field: static public System.String BuildIdentifier
    static void _set_BuildIdentifier(::StringW value);
    // static field const value: static public System.String VersionString
    static constexpr const char* VersionString = "UnitySDK-2.87.200602";
    // Get static field: static public System.String VersionString
    static ::StringW _get_VersionString();
    // Set static field: static public System.String VersionString
    static void _set_VersionString(::StringW value);
    // static field const value: static public System.String AD_TYPE_IDFA
    static constexpr const char* AD_TYPE_IDFA = "Idfa";
    // Get static field: static public System.String AD_TYPE_IDFA
    static ::StringW _get_AD_TYPE_IDFA();
    // Set static field: static public System.String AD_TYPE_IDFA
    static void _set_AD_TYPE_IDFA(::StringW value);
    // static field const value: static public System.String AD_TYPE_ANDROID_ID
    static constexpr const char* AD_TYPE_ANDROID_ID = "Adid";
    // Get static field: static public System.String AD_TYPE_ANDROID_ID
    static ::StringW _get_AD_TYPE_ANDROID_ID();
    // Set static field: static public System.String AD_TYPE_ANDROID_ID
    static void _set_AD_TYPE_ANDROID_ID(::StringW value);
    // static field const value: static public System.String DefaultPlayFabApiUrl
    static constexpr const char* DefaultPlayFabApiUrl = "playfabapi.com";
    // Get static field: static public System.String DefaultPlayFabApiUrl
    static ::StringW _get_DefaultPlayFabApiUrl();
    // Set static field: static public System.String DefaultPlayFabApiUrl
    static void _set_DefaultPlayFabApiUrl(::StringW value);
    // Get static field: static private System.String _localApiServer
    static ::StringW _get__localApiServer();
    // Set static field: static private System.String _localApiServer
    static void _set__localApiServer(::StringW value);
    // static private PlayFabSharedSettings get_PlayFabSharedPrivate()
    // Offset: 0x1A536A4
    static ::GlobalNamespace::PlayFabSharedSettings* get_PlayFabSharedPrivate();
    // static public System.String get_DeviceUniqueIdentifier()
    // Offset: 0x1A5389C
    static ::StringW get_DeviceUniqueIdentifier();
    // static public System.String get_TitleId()
    // Offset: 0x1A53ABC
    static ::StringW get_TitleId();
    // static public System.Void set_TitleId(System.String value)
    // Offset: 0x1A53B34
    static void set_TitleId(::StringW value);
    // static System.String get_VerticalName()
    // Offset: 0x1A53BB4
    static ::StringW get_VerticalName();
    // static System.Void set_VerticalName(System.String value)
    // Offset: 0x1A53C2C
    static void set_VerticalName(::StringW value);
    // static public System.Boolean get_DisableAdvertising()
    // Offset: 0x1A53CAC
    static bool get_DisableAdvertising();
    // static public System.Void set_DisableAdvertising(System.Boolean value)
    // Offset: 0x1A53D28
    static void set_DisableAdvertising(bool value);
    // static public System.Boolean get_DisableDeviceInfo()
    // Offset: 0x1A53DAC
    static bool get_DisableDeviceInfo();
    // static public System.Void set_DisableDeviceInfo(System.Boolean value)
    // Offset: 0x1A53E28
    static void set_DisableDeviceInfo(bool value);
    // static public System.Boolean get_DisableFocusTimeCollection()
    // Offset: 0x1A53EAC
    static bool get_DisableFocusTimeCollection();
    // static public System.Void set_DisableFocusTimeCollection(System.Boolean value)
    // Offset: 0x1A53F28
    static void set_DisableFocusTimeCollection(bool value);
    // static public PlayFab.PlayFabLogLevel get_LogLevel()
    // Offset: 0x1A53FAC
    static ::PlayFab::PlayFabLogLevel get_LogLevel();
    // static public System.Void set_LogLevel(PlayFab.PlayFabLogLevel value)
    // Offset: 0x1A54018
    static void set_LogLevel(::PlayFab::PlayFabLogLevel value);
    // static public PlayFab.WebRequestType get_RequestType()
    // Offset: 0x1A54088
    static ::PlayFab::WebRequestType get_RequestType();
    // static public System.Void set_RequestType(PlayFab.WebRequestType value)
    // Offset: 0x1A540F4
    static void set_RequestType(::PlayFab::WebRequestType value);
    // static public System.Int32 get_RequestTimeout()
    // Offset: 0x1A54164
    static int get_RequestTimeout();
    // static public System.Void set_RequestTimeout(System.Int32 value)
    // Offset: 0x1A541D0
    static void set_RequestTimeout(int value);
    // static public System.Boolean get_RequestKeepAlive()
    // Offset: 0x1A54240
    static bool get_RequestKeepAlive();
    // static public System.Void set_RequestKeepAlive(System.Boolean value)
    // Offset: 0x1A542AC
    static void set_RequestKeepAlive(bool value);
    // static public System.Boolean get_CompressApiData()
    // Offset: 0x1A54320
    static bool get_CompressApiData();
    // static public System.Void set_CompressApiData(System.Boolean value)
    // Offset: 0x1A5438C
    static void set_CompressApiData(bool value);
    // static public System.String get_LoggerHost()
    // Offset: 0x1A54400
    static ::StringW get_LoggerHost();
    // static public System.Void set_LoggerHost(System.String value)
    // Offset: 0x1A5446C
    static void set_LoggerHost(::StringW value);
    // static public System.Int32 get_LoggerPort()
    // Offset: 0x1A544DC
    static int get_LoggerPort();
    // static public System.Void set_LoggerPort(System.Int32 value)
    // Offset: 0x1A54548
    static void set_LoggerPort(int value);
    // static public System.Boolean get_EnableRealTimeLogging()
    // Offset: 0x1A545B8
    static bool get_EnableRealTimeLogging();
    // static public System.Void set_EnableRealTimeLogging(System.Boolean value)
    // Offset: 0x1A54624
    static void set_EnableRealTimeLogging(bool value);
    // static public System.Int32 get_LogCapLimit()
    // Offset: 0x1A54698
    static int get_LogCapLimit();
    // static public System.Void set_LogCapLimit(System.Int32 value)
    // Offset: 0x1A54704
    static void set_LogCapLimit(int value);
    // static public System.String get_LocalApiServer()
    // Offset: 0x1A54774
    static ::StringW get_LocalApiServer();
    // static public System.Void set_LocalApiServer(System.String value)
    // Offset: 0x1A5481C
    static void set_LocalApiServer(::StringW value);
    // static private System.Void .cctor()
    // Offset: 0x1A5356C
    static void _cctor();
    // static private PlayFabSharedSettings GetSharedSettingsObjectPrivate()
    // Offset: 0x1A53790
    static ::GlobalNamespace::PlayFabSharedSettings* GetSharedSettingsObjectPrivate();
    // static public System.String GetFullUrl(System.String apiCall, System.Collections.Generic.Dictionary`2<System.String,System.String> getParams, PlayFab.PlayFabApiSettings apiSettings)
    // Offset: 0x1A54888
    static ::StringW GetFullUrl(::StringW apiCall, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* getParams, ::PlayFab::PlayFabApiSettings* apiSettings);
  }; // PlayFab.PlayFabSettings
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_PlayFabSharedPrivate
// Il2CppName: get_PlayFabSharedPrivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PlayFabSharedSettings* (*)()>(&PlayFab::PlayFabSettings::get_PlayFabSharedPrivate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_PlayFabSharedPrivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_DeviceUniqueIdentifier
// Il2CppName: get_DeviceUniqueIdentifier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&PlayFab::PlayFabSettings::get_DeviceUniqueIdentifier)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_DeviceUniqueIdentifier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_TitleId
// Il2CppName: get_TitleId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&PlayFab::PlayFabSettings::get_TitleId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_TitleId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::set_TitleId
// Il2CppName: set_TitleId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&PlayFab::PlayFabSettings::set_TitleId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "set_TitleId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_VerticalName
// Il2CppName: get_VerticalName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&PlayFab::PlayFabSettings::get_VerticalName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_VerticalName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::set_VerticalName
// Il2CppName: set_VerticalName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&PlayFab::PlayFabSettings::set_VerticalName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "set_VerticalName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_DisableAdvertising
// Il2CppName: get_DisableAdvertising
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&PlayFab::PlayFabSettings::get_DisableAdvertising)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_DisableAdvertising", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::set_DisableAdvertising
// Il2CppName: set_DisableAdvertising
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&PlayFab::PlayFabSettings::set_DisableAdvertising)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "set_DisableAdvertising", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_DisableDeviceInfo
// Il2CppName: get_DisableDeviceInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&PlayFab::PlayFabSettings::get_DisableDeviceInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_DisableDeviceInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::set_DisableDeviceInfo
// Il2CppName: set_DisableDeviceInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&PlayFab::PlayFabSettings::set_DisableDeviceInfo)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "set_DisableDeviceInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_DisableFocusTimeCollection
// Il2CppName: get_DisableFocusTimeCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&PlayFab::PlayFabSettings::get_DisableFocusTimeCollection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_DisableFocusTimeCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::set_DisableFocusTimeCollection
// Il2CppName: set_DisableFocusTimeCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&PlayFab::PlayFabSettings::set_DisableFocusTimeCollection)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "set_DisableFocusTimeCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_LogLevel
// Il2CppName: get_LogLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PlayFab::PlayFabLogLevel (*)()>(&PlayFab::PlayFabSettings::get_LogLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_LogLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::set_LogLevel
// Il2CppName: set_LogLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PlayFab::PlayFabLogLevel)>(&PlayFab::PlayFabSettings::set_LogLevel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabLogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "set_LogLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_RequestType
// Il2CppName: get_RequestType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PlayFab::WebRequestType (*)()>(&PlayFab::PlayFabSettings::get_RequestType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_RequestType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::set_RequestType
// Il2CppName: set_RequestType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PlayFab::WebRequestType)>(&PlayFab::PlayFabSettings::set_RequestType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("PlayFab", "WebRequestType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "set_RequestType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_RequestTimeout
// Il2CppName: get_RequestTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&PlayFab::PlayFabSettings::get_RequestTimeout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_RequestTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::set_RequestTimeout
// Il2CppName: set_RequestTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&PlayFab::PlayFabSettings::set_RequestTimeout)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "set_RequestTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_RequestKeepAlive
// Il2CppName: get_RequestKeepAlive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&PlayFab::PlayFabSettings::get_RequestKeepAlive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_RequestKeepAlive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::set_RequestKeepAlive
// Il2CppName: set_RequestKeepAlive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&PlayFab::PlayFabSettings::set_RequestKeepAlive)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "set_RequestKeepAlive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_CompressApiData
// Il2CppName: get_CompressApiData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&PlayFab::PlayFabSettings::get_CompressApiData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_CompressApiData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::set_CompressApiData
// Il2CppName: set_CompressApiData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&PlayFab::PlayFabSettings::set_CompressApiData)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "set_CompressApiData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_LoggerHost
// Il2CppName: get_LoggerHost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&PlayFab::PlayFabSettings::get_LoggerHost)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_LoggerHost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::set_LoggerHost
// Il2CppName: set_LoggerHost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&PlayFab::PlayFabSettings::set_LoggerHost)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "set_LoggerHost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_LoggerPort
// Il2CppName: get_LoggerPort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&PlayFab::PlayFabSettings::get_LoggerPort)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_LoggerPort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::set_LoggerPort
// Il2CppName: set_LoggerPort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&PlayFab::PlayFabSettings::set_LoggerPort)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "set_LoggerPort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_EnableRealTimeLogging
// Il2CppName: get_EnableRealTimeLogging
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&PlayFab::PlayFabSettings::get_EnableRealTimeLogging)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_EnableRealTimeLogging", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::set_EnableRealTimeLogging
// Il2CppName: set_EnableRealTimeLogging
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&PlayFab::PlayFabSettings::set_EnableRealTimeLogging)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "set_EnableRealTimeLogging", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_LogCapLimit
// Il2CppName: get_LogCapLimit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&PlayFab::PlayFabSettings::get_LogCapLimit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_LogCapLimit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::set_LogCapLimit
// Il2CppName: set_LogCapLimit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&PlayFab::PlayFabSettings::set_LogCapLimit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "set_LogCapLimit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::get_LocalApiServer
// Il2CppName: get_LocalApiServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&PlayFab::PlayFabSettings::get_LocalApiServer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "get_LocalApiServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::set_LocalApiServer
// Il2CppName: set_LocalApiServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&PlayFab::PlayFabSettings::set_LocalApiServer)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "set_LocalApiServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PlayFab::PlayFabSettings::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::GetSharedSettingsObjectPrivate
// Il2CppName: GetSharedSettingsObjectPrivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PlayFabSharedSettings* (*)()>(&PlayFab::PlayFabSettings::GetSharedSettingsObjectPrivate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "GetSharedSettingsObjectPrivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettings::GetFullUrl
// Il2CppName: GetFullUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, ::PlayFab::PlayFabApiSettings*)>(&PlayFab::PlayFabSettings::GetFullUrl)> {
  static const MethodInfo* get() {
    static auto* apiCall = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* getParams = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* apiSettings = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabApiSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettings*), "GetFullUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{apiCall, getParams, apiSettings});
  }
};
