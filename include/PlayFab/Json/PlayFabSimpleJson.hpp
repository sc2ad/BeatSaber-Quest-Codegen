// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PlayFab::Json
namespace PlayFab::Json {
  // Forward declaring type: IJsonSerializerStrategy
  class IJsonSerializerStrategy;
  // Forward declaring type: PocoJsonSerializerStrategy
  class PocoJsonSerializerStrategy;
  // Forward declaring type: JsonArray
  class JsonArray;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerable
  class IEnumerable;
}
// Completed forward declares
// Type namespace: PlayFab.Json
namespace PlayFab::Json {
  // Forward declaring type: PlayFabSimpleJson
  class PlayFabSimpleJson;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::Json::PlayFabSimpleJson);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::Json::PlayFabSimpleJson*, "PlayFab.Json", "PlayFabSimpleJson");
// Type namespace: PlayFab.Json
namespace PlayFab::Json {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.Json.PlayFabSimpleJson
  // [TokenAttribute] Offset: FFFFFFFF
  // [GeneratedCodeAttribute] Offset: 973D6C
  class PlayFabSimpleJson : public ::Il2CppObject {
    public:
    // Nested type: ::PlayFab::Json::PlayFabSimpleJson::TokenType
    struct TokenType;
    // static field const value: static private System.Int32 BUILDER_INIT
    static constexpr const int BUILDER_INIT = 2000;
    // Get static field: static private System.Int32 BUILDER_INIT
    static int _get_BUILDER_INIT();
    // Set static field: static private System.Int32 BUILDER_INIT
    static void _set_BUILDER_INIT(int value);
    // Get static field: static private readonly System.Char[] EscapeTable
    static ::ArrayW<::Il2CppChar> _get_EscapeTable();
    // Set static field: static private readonly System.Char[] EscapeTable
    static void _set_EscapeTable(::ArrayW<::Il2CppChar> value);
    // Get static field: static private readonly System.Char[] EscapeCharacters
    static ::ArrayW<::Il2CppChar> _get_EscapeCharacters();
    // Set static field: static private readonly System.Char[] EscapeCharacters
    static void _set_EscapeCharacters(::ArrayW<::Il2CppChar> value);
    // Get static field: static readonly System.Collections.Generic.List`1<System.Type> NumberTypes
    static ::System::Collections::Generic::List_1<::System::Type*>* _get_NumberTypes();
    // Set static field: static readonly System.Collections.Generic.List`1<System.Type> NumberTypes
    static void _set_NumberTypes(::System::Collections::Generic::List_1<::System::Type*>* value);
    // Get static field: static private System.Text.StringBuilder _serializeObjectBuilder
    static ::System::Text::StringBuilder* _get__serializeObjectBuilder();
    // Set static field: static private System.Text.StringBuilder _serializeObjectBuilder
    static void _set__serializeObjectBuilder(::System::Text::StringBuilder* value);
    // Get static field: static private System.Text.StringBuilder _parseStringBuilder
    static ::System::Text::StringBuilder* _get__parseStringBuilder();
    // Set static field: static private System.Text.StringBuilder _parseStringBuilder
    static void _set__parseStringBuilder(::System::Text::StringBuilder* value);
    // Get static field: static private PlayFab.Json.IJsonSerializerStrategy _currentJsonSerializerStrategy
    static ::PlayFab::Json::IJsonSerializerStrategy* _get__currentJsonSerializerStrategy();
    // Set static field: static private PlayFab.Json.IJsonSerializerStrategy _currentJsonSerializerStrategy
    static void _set__currentJsonSerializerStrategy(::PlayFab::Json::IJsonSerializerStrategy* value);
    // Get static field: static private PlayFab.Json.PocoJsonSerializerStrategy _pocoJsonSerializerStrategy
    static ::PlayFab::Json::PocoJsonSerializerStrategy* _get__pocoJsonSerializerStrategy();
    // Set static field: static private PlayFab.Json.PocoJsonSerializerStrategy _pocoJsonSerializerStrategy
    static void _set__pocoJsonSerializerStrategy(::PlayFab::Json::PocoJsonSerializerStrategy* value);
    // static public PlayFab.Json.IJsonSerializerStrategy get_CurrentJsonSerializerStrategy()
    // Offset: 0xBC3288
    static ::PlayFab::Json::IJsonSerializerStrategy* get_CurrentJsonSerializerStrategy();
    // static public System.Void set_CurrentJsonSerializerStrategy(PlayFab.Json.IJsonSerializerStrategy value)
    // Offset: 0xBC5C58
    static void set_CurrentJsonSerializerStrategy(::PlayFab::Json::IJsonSerializerStrategy* value);
    // static public PlayFab.Json.PocoJsonSerializerStrategy get_PocoJsonSerializerStrategy()
    // Offset: 0xBC5BAC
    static ::PlayFab::Json::PocoJsonSerializerStrategy* get_PocoJsonSerializerStrategy();
    // static private System.Void .cctor()
    // Offset: 0xBC2900
    static void _cctor();
    // static public System.Object DeserializeObject(System.String json)
    // Offset: 0xBC2CB8
    static ::Il2CppObject* DeserializeObject(::StringW json);
    // static public System.Boolean TryDeserializeObject(System.String json, out System.Object obj)
    // Offset: 0xBC2D74
    static bool TryDeserializeObject(::StringW json, ByRef<::Il2CppObject*> obj);
    // static public System.Object DeserializeObject(System.String json, System.Type type, PlayFab.Json.IJsonSerializerStrategy jsonSerializerStrategy)
    // Offset: 0xBC3048
    static ::Il2CppObject* DeserializeObject(::StringW json, ::System::Type* type, ::PlayFab::Json::IJsonSerializerStrategy* jsonSerializerStrategy);
    // static public T DeserializeObject(System.String json, PlayFab.Json.IJsonSerializerStrategy jsonSerializerStrategy)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T DeserializeObject(::StringW json, ::PlayFab::Json::IJsonSerializerStrategy* jsonSerializerStrategy) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::PlayFabSimpleJson::DeserializeObject");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("PlayFab.Json", "PlayFabSimpleJson", "DeserializeObject", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(jsonSerializerStrategy)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, json, jsonSerializerStrategy);
    }
    // static public System.String SerializeObject(System.Object json, PlayFab.Json.IJsonSerializerStrategy jsonSerializerStrategy)
    // Offset: 0xBC1A64
    static ::StringW SerializeObject(::Il2CppObject* json, ::PlayFab::Json::IJsonSerializerStrategy* jsonSerializerStrategy);
    // static public System.String EscapeToJavascriptString(System.String jsonString)
    // Offset: 0xBC39D8
    static ::StringW EscapeToJavascriptString(::StringW jsonString);
    // static private System.Collections.Generic.IDictionary`2<System.String,System.Object> ParseObject(System.String json, ref System.Int32 index, ref System.Boolean success)
    // Offset: 0xBC3BA0
    static ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* ParseObject(::StringW json, ByRef<int> index, ByRef<bool> success);
    // static private PlayFab.Json.JsonArray ParseArray(System.String json, ref System.Int32 index, ref System.Boolean success)
    // Offset: 0xBC4780
    static ::PlayFab::Json::JsonArray* ParseArray(::StringW json, ByRef<int> index, ByRef<bool> success);
    // static private System.Object ParseValue(System.String json, ref System.Int32 index, ref System.Boolean success)
    // Offset: 0xBC2E20
    static ::Il2CppObject* ParseValue(::StringW json, ByRef<int> index, ByRef<bool> success);
    // static private System.String ParseString(System.String json, ref System.Int32 index, ref System.Boolean success)
    // Offset: 0xBC4188
    static ::StringW ParseString(::StringW json, ByRef<int> index, ByRef<bool> success);
    // static private System.String ConvertFromUtf32(System.Int32 utf32)
    // Offset: 0xBC4C74
    static ::StringW ConvertFromUtf32(int utf32);
    // static private System.Object ParseNumber(System.String json, ref System.Int32 index, ref System.Boolean success)
    // Offset: 0xBC491C
    static ::Il2CppObject* ParseNumber(::StringW json, ByRef<int> index, ByRef<bool> success);
    // static private System.Int32 GetLastIndexOfNumber(System.String json, System.Int32 index)
    // Offset: 0xBC4DB4
    static int GetLastIndexOfNumber(::StringW json, int index);
    // static private System.Void EatWhitespace(System.String json, ref System.Int32 index)
    // Offset: 0xBC4BC4
    static void EatWhitespace(::StringW json, ByRef<int> index);
    // static private PlayFab.Json.PlayFabSimpleJson/PlayFab.Json.TokenType LookAhead(System.String json, System.Int32 index)
    // Offset: 0xBC410C
    static ::PlayFab::Json::PlayFabSimpleJson::TokenType LookAhead(::StringW json, int index);
    // static private PlayFab.Json.PlayFabSimpleJson/PlayFab.Json.TokenType NextToken(System.String json, ref System.Int32 index)
    // Offset: 0xBC3DF8
    static ::PlayFab::Json::PlayFabSimpleJson::TokenType NextToken(::StringW json, ByRef<int> index);
    // static private System.Boolean SerializeValue(PlayFab.Json.IJsonSerializerStrategy jsonSerializerStrategy, System.Object value, System.Text.StringBuilder builder)
    // Offset: 0xBC3320
    static bool SerializeValue(::PlayFab::Json::IJsonSerializerStrategy* jsonSerializerStrategy, ::Il2CppObject* value, ::System::Text::StringBuilder* builder);
    // static private System.Boolean SerializeObject(PlayFab.Json.IJsonSerializerStrategy jsonSerializerStrategy, System.Collections.IEnumerable keys, System.Collections.IEnumerable values, System.Text.StringBuilder builder)
    // Offset: 0xBC50C8
    static bool SerializeObject(::PlayFab::Json::IJsonSerializerStrategy* jsonSerializerStrategy, ::System::Collections::IEnumerable* keys, ::System::Collections::IEnumerable* values, ::System::Text::StringBuilder* builder);
    // static private System.Boolean SerializeArray(PlayFab.Json.IJsonSerializerStrategy jsonSerializerStrategy, System.Collections.IEnumerable anArray, System.Text.StringBuilder builder)
    // Offset: 0xBC54E4
    static bool SerializeArray(::PlayFab::Json::IJsonSerializerStrategy* jsonSerializerStrategy, ::System::Collections::IEnumerable* anArray, ::System::Text::StringBuilder* builder);
    // static private System.Boolean SerializeString(System.String aString, System.Text.StringBuilder builder)
    // Offset: 0xBC4E60
    static bool SerializeString(::StringW aString, ::System::Text::StringBuilder* builder);
    // static private System.Boolean SerializeNumber(System.Object number, System.Text.StringBuilder builder)
    // Offset: 0xBC596C
    static bool SerializeNumber(::Il2CppObject* number, ::System::Text::StringBuilder* builder);
    // static private System.Boolean IsNumeric(System.Object value)
    // Offset: 0xBC583C
    static bool IsNumeric(::Il2CppObject* value);
  }; // PlayFab.Json.PlayFabSimpleJson
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::get_CurrentJsonSerializerStrategy
// Il2CppName: get_CurrentJsonSerializerStrategy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PlayFab::Json::IJsonSerializerStrategy* (*)()>(&PlayFab::Json::PlayFabSimpleJson::get_CurrentJsonSerializerStrategy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "get_CurrentJsonSerializerStrategy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::set_CurrentJsonSerializerStrategy
// Il2CppName: set_CurrentJsonSerializerStrategy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PlayFab::Json::IJsonSerializerStrategy*)>(&PlayFab::Json::PlayFabSimpleJson::set_CurrentJsonSerializerStrategy)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("PlayFab.Json", "IJsonSerializerStrategy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "set_CurrentJsonSerializerStrategy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::get_PocoJsonSerializerStrategy
// Il2CppName: get_PocoJsonSerializerStrategy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PlayFab::Json::PocoJsonSerializerStrategy* (*)()>(&PlayFab::Json::PlayFabSimpleJson::get_PocoJsonSerializerStrategy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "get_PocoJsonSerializerStrategy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PlayFab::Json::PlayFabSimpleJson::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::DeserializeObject
// Il2CppName: DeserializeObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::StringW)>(&PlayFab::Json::PlayFabSimpleJson::DeserializeObject)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "DeserializeObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::TryDeserializeObject
// Il2CppName: TryDeserializeObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ByRef<::Il2CppObject*>)>(&PlayFab::Json::PlayFabSimpleJson::TryDeserializeObject)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "TryDeserializeObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json, obj});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::DeserializeObject
// Il2CppName: DeserializeObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::StringW, ::System::Type*, ::PlayFab::Json::IJsonSerializerStrategy*)>(&PlayFab::Json::PlayFabSimpleJson::DeserializeObject)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* jsonSerializerStrategy = &::il2cpp_utils::GetClassFromName("PlayFab.Json", "IJsonSerializerStrategy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "DeserializeObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json, type, jsonSerializerStrategy});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::DeserializeObject
// Il2CppName: DeserializeObject
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::SerializeObject
// Il2CppName: SerializeObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::Il2CppObject*, ::PlayFab::Json::IJsonSerializerStrategy*)>(&PlayFab::Json::PlayFabSimpleJson::SerializeObject)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* jsonSerializerStrategy = &::il2cpp_utils::GetClassFromName("PlayFab.Json", "IJsonSerializerStrategy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "SerializeObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json, jsonSerializerStrategy});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::EscapeToJavascriptString
// Il2CppName: EscapeToJavascriptString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&PlayFab::Json::PlayFabSimpleJson::EscapeToJavascriptString)> {
  static const MethodInfo* get() {
    static auto* jsonString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "EscapeToJavascriptString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jsonString});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::ParseObject
// Il2CppName: ParseObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* (*)(::StringW, ByRef<int>, ByRef<bool>)>(&PlayFab::Json::PlayFabSimpleJson::ParseObject)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* success = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "ParseObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json, index, success});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::ParseArray
// Il2CppName: ParseArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PlayFab::Json::JsonArray* (*)(::StringW, ByRef<int>, ByRef<bool>)>(&PlayFab::Json::PlayFabSimpleJson::ParseArray)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* success = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "ParseArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json, index, success});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::ParseValue
// Il2CppName: ParseValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::StringW, ByRef<int>, ByRef<bool>)>(&PlayFab::Json::PlayFabSimpleJson::ParseValue)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* success = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "ParseValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json, index, success});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::ParseString
// Il2CppName: ParseString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ByRef<int>, ByRef<bool>)>(&PlayFab::Json::PlayFabSimpleJson::ParseString)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* success = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "ParseString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json, index, success});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::ConvertFromUtf32
// Il2CppName: ConvertFromUtf32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int)>(&PlayFab::Json::PlayFabSimpleJson::ConvertFromUtf32)> {
  static const MethodInfo* get() {
    static auto* utf32 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "ConvertFromUtf32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{utf32});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::ParseNumber
// Il2CppName: ParseNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::StringW, ByRef<int>, ByRef<bool>)>(&PlayFab::Json::PlayFabSimpleJson::ParseNumber)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* success = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "ParseNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json, index, success});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::GetLastIndexOfNumber
// Il2CppName: GetLastIndexOfNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int)>(&PlayFab::Json::PlayFabSimpleJson::GetLastIndexOfNumber)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "GetLastIndexOfNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json, index});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::EatWhitespace
// Il2CppName: EatWhitespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ByRef<int>)>(&PlayFab::Json::PlayFabSimpleJson::EatWhitespace)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "EatWhitespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json, index});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::LookAhead
// Il2CppName: LookAhead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PlayFab::Json::PlayFabSimpleJson::TokenType (*)(::StringW, int)>(&PlayFab::Json::PlayFabSimpleJson::LookAhead)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "LookAhead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json, index});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::NextToken
// Il2CppName: NextToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PlayFab::Json::PlayFabSimpleJson::TokenType (*)(::StringW, ByRef<int>)>(&PlayFab::Json::PlayFabSimpleJson::NextToken)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "NextToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json, index});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::SerializeValue
// Il2CppName: SerializeValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::PlayFab::Json::IJsonSerializerStrategy*, ::Il2CppObject*, ::System::Text::StringBuilder*)>(&PlayFab::Json::PlayFabSimpleJson::SerializeValue)> {
  static const MethodInfo* get() {
    static auto* jsonSerializerStrategy = &::il2cpp_utils::GetClassFromName("PlayFab.Json", "IJsonSerializerStrategy")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "SerializeValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jsonSerializerStrategy, value, builder});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::SerializeObject
// Il2CppName: SerializeObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::PlayFab::Json::IJsonSerializerStrategy*, ::System::Collections::IEnumerable*, ::System::Collections::IEnumerable*, ::System::Text::StringBuilder*)>(&PlayFab::Json::PlayFabSimpleJson::SerializeObject)> {
  static const MethodInfo* get() {
    static auto* jsonSerializerStrategy = &::il2cpp_utils::GetClassFromName("PlayFab.Json", "IJsonSerializerStrategy")->byval_arg;
    static auto* keys = &::il2cpp_utils::GetClassFromName("System.Collections", "IEnumerable")->byval_arg;
    static auto* values = &::il2cpp_utils::GetClassFromName("System.Collections", "IEnumerable")->byval_arg;
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "SerializeObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jsonSerializerStrategy, keys, values, builder});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::SerializeArray
// Il2CppName: SerializeArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::PlayFab::Json::IJsonSerializerStrategy*, ::System::Collections::IEnumerable*, ::System::Text::StringBuilder*)>(&PlayFab::Json::PlayFabSimpleJson::SerializeArray)> {
  static const MethodInfo* get() {
    static auto* jsonSerializerStrategy = &::il2cpp_utils::GetClassFromName("PlayFab.Json", "IJsonSerializerStrategy")->byval_arg;
    static auto* anArray = &::il2cpp_utils::GetClassFromName("System.Collections", "IEnumerable")->byval_arg;
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "SerializeArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jsonSerializerStrategy, anArray, builder});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::SerializeString
// Il2CppName: SerializeString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Text::StringBuilder*)>(&PlayFab::Json::PlayFabSimpleJson::SerializeString)> {
  static const MethodInfo* get() {
    static auto* aString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "SerializeString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aString, builder});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::SerializeNumber
// Il2CppName: SerializeNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppObject*, ::System::Text::StringBuilder*)>(&PlayFab::Json::PlayFabSimpleJson::SerializeNumber)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* builder = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "SerializeNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, builder});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::PlayFabSimpleJson::IsNumeric
// Il2CppName: IsNumeric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppObject*)>(&PlayFab::Json::PlayFabSimpleJson::IsNumeric)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::PlayFabSimpleJson*), "IsNumeric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
