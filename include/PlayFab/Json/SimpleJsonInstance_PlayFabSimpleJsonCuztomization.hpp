// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.Json.SimpleJsonInstance
#include "PlayFab/Json/SimpleJsonInstance.hpp"
// Including type: PlayFab.Json.PocoJsonSerializerStrategy
#include "PlayFab/Json/PocoJsonSerializerStrategy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization*, "PlayFab.Json", "SimpleJsonInstance/PlayFabSimpleJsonCuztomization");
// Type namespace: PlayFab.Json
namespace PlayFab::Json {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.Json.SimpleJsonInstance/PlayFab.Json.PlayFabSimpleJsonCuztomization
  // [TokenAttribute] Offset: FFFFFFFF
  class SimpleJsonInstance::PlayFabSimpleJsonCuztomization : public ::PlayFab::Json::PocoJsonSerializerStrategy {
    public:
    // public System.Void .ctor()
    // Offset: 0xBCC7AC
    // Implemented from: PlayFab.Json.PocoJsonSerializerStrategy
    // Base method: System.Void PocoJsonSerializerStrategy::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SimpleJsonInstance::PlayFabSimpleJsonCuztomization* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SimpleJsonInstance::PlayFabSimpleJsonCuztomization*, creationType>()));
    }
    // public override System.Object DeserializeObject(System.Object value, System.Type type)
    // Offset: 0xBCC810
    // Implemented from: PlayFab.Json.PocoJsonSerializerStrategy
    // Base method: System.Object PocoJsonSerializerStrategy::DeserializeObject(System.Object value, System.Type type)
    ::Il2CppObject* DeserializeObject(::Il2CppObject* value, ::System::Type* type);
    // protected override System.Boolean TrySerializeKnownTypes(System.Object input, out System.Object output)
    // Offset: 0xBCCC54
    // Implemented from: PlayFab.Json.PocoJsonSerializerStrategy
    // Base method: System.Boolean PocoJsonSerializerStrategy::TrySerializeKnownTypes(System.Object input, out System.Object output)
    bool TrySerializeKnownTypes(::Il2CppObject* input, ByRef<::Il2CppObject*> output);
  }; // PlayFab.Json.SimpleJsonInstance/PlayFab.Json.PlayFabSimpleJsonCuztomization
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization::DeserializeObject
// Il2CppName: DeserializeObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization::*)(::Il2CppObject*, ::System::Type*)>(&PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization::DeserializeObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization*), "DeserializeObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, type});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization::TrySerializeKnownTypes
// Il2CppName: TrySerializeKnownTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization::*)(::Il2CppObject*, ByRef<::Il2CppObject*>)>(&PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization::TrySerializeKnownTypes)> {
  static const MethodInfo* get() {
    static auto* input = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* output = &::il2cpp_utils::GetClassFromName("System", "Object")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::SimpleJsonInstance::PlayFabSimpleJsonCuztomization*), "TrySerializeKnownTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input, output});
  }
};
