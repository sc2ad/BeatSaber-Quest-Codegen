// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Skipping declaration: ICollection`1 because it is already included!
  // Forward declaring type: IEqualityComparer`1<T>
  template<typename T>
  class IEqualityComparer_1;
  // Forward declaring type: IEnumerator`1<T>
  template<typename T>
  class IEnumerator_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: PlayFab.Json
namespace PlayFab::Json {
  // Forward declaring type: JsonObject
  class JsonObject;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::Json::JsonObject);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::Json::JsonObject*, "PlayFab.Json", "JsonObject");
// Type namespace: PlayFab.Json
namespace PlayFab::Json {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.Json.JsonObject
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 973CDC
  // [GeneratedCodeAttribute] Offset: 973CDC
  // [EditorBrowsableAttribute] Offset: 973CDC
  class JsonObject : public ::Il2CppObject/*, public ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>*/ {
    public:
    public:
    // private readonly System.Collections.Generic.Dictionary`2<System.String,System.Object> _members
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* members;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>
    operator ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>*>(this);
    }
    // Creating conversion operator: operator ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*
    constexpr operator ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*() const noexcept {
      return members;
    }
    // static field const value: static private System.Int32 DICTIONARY_DEFAULT_SIZE
    static constexpr const int DICTIONARY_DEFAULT_SIZE = 16;
    // Get static field: static private System.Int32 DICTIONARY_DEFAULT_SIZE
    static int _get_DICTIONARY_DEFAULT_SIZE();
    // Set static field: static private System.Int32 DICTIONARY_DEFAULT_SIZE
    static void _set_DICTIONARY_DEFAULT_SIZE(int value);
    // Get instance field reference: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Object> _members
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*& dyn__members();
    // public System.Object get_Item(System.Int32 index)
    // Offset: 0xBC1CF4
    ::Il2CppObject* get_Item(int index);
    // public System.Collections.Generic.ICollection`1<System.String> get_Keys()
    // Offset: 0xBC2174
    ::System::Collections::Generic::ICollection_1<::StringW>* get_Keys();
    // public System.Collections.Generic.ICollection`1<System.Object> get_Values()
    // Offset: 0xBC22A4
    ::System::Collections::Generic::ICollection_1<::Il2CppObject*>* get_Values();
    // public System.Object get_Item(System.String key)
    // Offset: 0xBC22FC
    ::Il2CppObject* get_Item(::StringW key);
    // public System.Void set_Item(System.String key, System.Object value)
    // Offset: 0xBC2364
    void set_Item(::StringW key, ::Il2CppObject* value);
    // public System.Int32 get_Count()
    // Offset: 0xBC26A4
    int get_Count();
    // public System.Boolean get_IsReadOnly()
    // Offset: 0xBC26FC
    bool get_IsReadOnly();
    // public System.Void .ctor()
    // Offset: 0xBC1BF8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonObject* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonObject*, creationType>()));
    }
    // public System.Void .ctor(System.Collections.Generic.IEqualityComparer`1<System.String> comparer)
    // Offset: 0xBC1C70
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonObject* New_ctor(::System::Collections::Generic::IEqualityComparer_1<::StringW>* comparer) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Json::JsonObject::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonObject*, creationType>(comparer)));
    }
    // static System.Object GetAtIndex(System.Collections.Generic.IDictionary`2<System.String,System.Object> obj, System.Int32 index)
    // Offset: 0xBC1CFC
    static ::Il2CppObject* GetAtIndex(::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* obj, int index);
    // public System.Void Add(System.String key, System.Object value)
    // Offset: 0xBC209C
    void Add(::StringW key, ::Il2CppObject* value);
    // public System.Boolean ContainsKey(System.String key)
    // Offset: 0xBC210C
    bool ContainsKey(::StringW key);
    // public System.Boolean Remove(System.String key)
    // Offset: 0xBC21CC
    bool Remove(::StringW key);
    // public System.Boolean TryGetValue(System.String key, out System.Object value)
    // Offset: 0xBC2234
    bool TryGetValue(::StringW key, ByRef<::Il2CppObject*> value);
    // public System.Void Add(System.Collections.Generic.KeyValuePair`2<System.String,System.Object> item)
    // Offset: 0xBC23D4
    void Add(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*> item);
    // public System.Void Clear()
    // Offset: 0xBC2444
    void Clear();
    // public System.Boolean Contains(System.Collections.Generic.KeyValuePair`2<System.String,System.Object> item)
    // Offset: 0xBC249C
    bool Contains(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*> item);
    // public System.Void CopyTo(System.Collections.Generic.KeyValuePair`2<System.String,System.Object>[] array, System.Int32 arrayIndex)
    // Offset: 0xBC252C
    void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>> array, int arrayIndex);
    // public System.Boolean Remove(System.Collections.Generic.KeyValuePair`2<System.String,System.Object> item)
    // Offset: 0xBC2704
    bool Remove(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*> item);
    // public System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<System.String,System.Object>> GetEnumerator()
    // Offset: 0xBC276C
    ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>>* GetEnumerator();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0xBC27FC
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // public override System.String ToString()
    // Offset: 0xBC288C
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // PlayFab.Json.JsonObject
  #pragma pack(pop)
  static check_size<sizeof(JsonObject), 16 + sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*)> __PlayFab_Json_JsonObjectSizeCheck;
  static_assert(sizeof(JsonObject) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (PlayFab::Json::JsonObject::*)(int)>(&PlayFab::Json::JsonObject::get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::get_Keys
// Il2CppName: get_Keys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::ICollection_1<::StringW>* (PlayFab::Json::JsonObject::*)()>(&PlayFab::Json::JsonObject::get_Keys)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "get_Keys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::get_Values
// Il2CppName: get_Values
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::ICollection_1<::Il2CppObject*>* (PlayFab::Json::JsonObject::*)()>(&PlayFab::Json::JsonObject::get_Values)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "get_Values", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (PlayFab::Json::JsonObject::*)(::StringW)>(&PlayFab::Json::JsonObject::get_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::Json::JsonObject::*)(::StringW, ::Il2CppObject*)>(&PlayFab::Json::JsonObject::set_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PlayFab::Json::JsonObject::*)()>(&PlayFab::Json::JsonObject::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::get_IsReadOnly
// Il2CppName: get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayFab::Json::JsonObject::*)()>(&PlayFab::Json::JsonObject::get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::GetAtIndex
// Il2CppName: GetAtIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>*, int)>(&PlayFab::Json::JsonObject::GetAtIndex)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "GetAtIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, index});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::Json::JsonObject::*)(::StringW, ::Il2CppObject*)>(&PlayFab::Json::JsonObject::Add)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::ContainsKey
// Il2CppName: ContainsKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayFab::Json::JsonObject::*)(::StringW)>(&PlayFab::Json::JsonObject::ContainsKey)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "ContainsKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayFab::Json::JsonObject::*)(::StringW)>(&PlayFab::Json::JsonObject::Remove)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::TryGetValue
// Il2CppName: TryGetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayFab::Json::JsonObject::*)(::StringW, ByRef<::Il2CppObject*>)>(&PlayFab::Json::JsonObject::TryGetValue)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "TryGetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::Json::JsonObject::*)(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>)>(&PlayFab::Json::JsonObject::Add)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::Json::JsonObject::*)()>(&PlayFab::Json::JsonObject::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayFab::Json::JsonObject::*)(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>)>(&PlayFab::Json::JsonObject::Contains)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::Json::JsonObject::*)(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>>, int)>(&PlayFab::Json::JsonObject::CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &il2cpp_functions::array_class_get(::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")}), 1)->byval_arg;
    static auto* arrayIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, arrayIndex});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayFab::Json::JsonObject::*)(::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>)>(&PlayFab::Json::JsonObject::Remove)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::Il2CppObject*>>* (PlayFab::Json::JsonObject::*)()>(&PlayFab::Json::JsonObject::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (PlayFab::Json::JsonObject::*)()>(&PlayFab::Json::JsonObject::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::Json::JsonObject::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (PlayFab::Json::JsonObject::*)()>(&PlayFab::Json::JsonObject::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Json::JsonObject*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
