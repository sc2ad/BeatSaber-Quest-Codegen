// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: PlayFab.AuthenticationModels
namespace PlayFab::AuthenticationModels {
  // Forward declaring type: EntityLineage
  class EntityLineage;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::AuthenticationModels::EntityLineage);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::AuthenticationModels::EntityLineage*, "PlayFab.AuthenticationModels", "EntityLineage");
// Type namespace: PlayFab.AuthenticationModels
namespace PlayFab::AuthenticationModels {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.AuthenticationModels.EntityLineage
  // [TokenAttribute] Offset: FFFFFFFF
  class EntityLineage : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public System.String CharacterId
    // Size: 0x8
    // Offset: 0x10
    ::StringW CharacterId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String GroupId
    // Size: 0x8
    // Offset: 0x18
    ::StringW GroupId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String MasterPlayerAccountId
    // Size: 0x8
    // Offset: 0x20
    ::StringW MasterPlayerAccountId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String NamespaceId
    // Size: 0x8
    // Offset: 0x28
    ::StringW NamespaceId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String TitleId
    // Size: 0x8
    // Offset: 0x30
    ::StringW TitleId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String TitlePlayerAccountId
    // Size: 0x8
    // Offset: 0x38
    ::StringW TitlePlayerAccountId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.String CharacterId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_CharacterId();
    // Get instance field reference: public System.String GroupId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_GroupId();
    // Get instance field reference: public System.String MasterPlayerAccountId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_MasterPlayerAccountId();
    // Get instance field reference: public System.String NamespaceId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_NamespaceId();
    // Get instance field reference: public System.String TitleId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_TitleId();
    // Get instance field reference: public System.String TitlePlayerAccountId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_TitlePlayerAccountId();
    // public System.Void .ctor()
    // Offset: 0xB5D1B8
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EntityLineage* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::AuthenticationModels::EntityLineage::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EntityLineage*, creationType>()));
    }
  }; // PlayFab.AuthenticationModels.EntityLineage
  #pragma pack(pop)
  static check_size<sizeof(EntityLineage), 56 + sizeof(::StringW)> __PlayFab_AuthenticationModels_EntityLineageSizeCheck;
  static_assert(sizeof(EntityLineage) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::AuthenticationModels::EntityLineage::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
