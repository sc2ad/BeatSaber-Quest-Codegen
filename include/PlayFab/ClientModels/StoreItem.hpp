// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: StoreItem
  class StoreItem;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::ClientModels::StoreItem);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ClientModels::StoreItem*, "PlayFab.ClientModels", "StoreItem");
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // WARNING Size may be invalid!
  // Autogenerated type: PlayFab.ClientModels.StoreItem
  // [TokenAttribute] Offset: FFFFFFFF
  class StoreItem : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public System.Object CustomData
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppObject* CustomData;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // public System.Nullable`1<System.UInt32> DisplayPosition
    // Size: 0xFFFFFFFF
    // Offset: 0x18
    ::System::Nullable_1<uint> DisplayPosition;
    // public System.String ItemId
    // Size: 0x8
    // Offset: 0x20
    ::StringW ItemId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.String,System.UInt32> RealCurrencyPrices
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::Dictionary_2<::StringW, uint>* RealCurrencyPrices;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, uint>*) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.String,System.UInt32> VirtualCurrencyPrices
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::Dictionary_2<::StringW, uint>* VirtualCurrencyPrices;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, uint>*) == 0x8);
    public:
    // Get instance field reference: public System.Object CustomData
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_CustomData();
    // Get instance field reference: public System.Nullable`1<System.UInt32> DisplayPosition
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<uint>& dyn_DisplayPosition();
    // Get instance field reference: public System.String ItemId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ItemId();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,System.UInt32> RealCurrencyPrices
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, uint>*& dyn_RealCurrencyPrices();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,System.UInt32> VirtualCurrencyPrices
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, uint>*& dyn_VirtualCurrencyPrices();
    // public System.Void .ctor()
    // Offset: 0xB5DAB0
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StoreItem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ClientModels::StoreItem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StoreItem*, creationType>()));
    }
  }; // PlayFab.ClientModels.StoreItem
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::ClientModels::StoreItem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
