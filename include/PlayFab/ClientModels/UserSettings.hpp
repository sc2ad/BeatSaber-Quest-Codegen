// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: UserSettings
  class UserSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::ClientModels::UserSettings);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ClientModels::UserSettings*, "PlayFab.ClientModels", "UserSettings");
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Size: 0x13
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.ClientModels.UserSettings
  // [TokenAttribute] Offset: FFFFFFFF
  class UserSettings : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public System.Boolean GatherDeviceInfo
    // Size: 0x1
    // Offset: 0x10
    bool GatherDeviceInfo;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean GatherFocusInfo
    // Size: 0x1
    // Offset: 0x11
    bool GatherFocusInfo;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean NeedsAttribution
    // Size: 0x1
    // Offset: 0x12
    bool NeedsAttribution;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public System.Boolean GatherDeviceInfo
    [[deprecated("Use field access instead!")]] bool& dyn_GatherDeviceInfo();
    // Get instance field reference: public System.Boolean GatherFocusInfo
    [[deprecated("Use field access instead!")]] bool& dyn_GatherFocusInfo();
    // Get instance field reference: public System.Boolean NeedsAttribution
    [[deprecated("Use field access instead!")]] bool& dyn_NeedsAttribution();
    // public System.Void .ctor()
    // Offset: 0xB5DCF0
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UserSettings* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ClientModels::UserSettings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UserSettings*, creationType>()));
    }
  }; // PlayFab.ClientModels.UserSettings
  #pragma pack(pop)
  static check_size<sizeof(UserSettings), 18 + sizeof(bool)> __PlayFab_ClientModels_UserSettingsSizeCheck;
  static_assert(sizeof(UserSettings) == 0x13);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::ClientModels::UserSettings::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
