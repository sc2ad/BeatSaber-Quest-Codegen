// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: CatalogItemContainerInfo
  class CatalogItemContainerInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::ClientModels::CatalogItemContainerInfo);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ClientModels::CatalogItemContainerInfo*, "PlayFab.ClientModels", "CatalogItemContainerInfo");
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.ClientModels.CatalogItemContainerInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class CatalogItemContainerInfo : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public System.Collections.Generic.List`1<System.String> ItemContents
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::StringW>* ItemContents;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // public System.String KeyItemId
    // Size: 0x8
    // Offset: 0x18
    ::StringW KeyItemId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Collections.Generic.List`1<System.String> ResultTableContents
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::StringW>* ResultTableContents;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.String,System.UInt32> VirtualCurrencyContents
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::Dictionary_2<::StringW, uint>* VirtualCurrencyContents;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, uint>*) == 0x8);
    public:
    // Get instance field reference: public System.Collections.Generic.List`1<System.String> ItemContents
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_ItemContents();
    // Get instance field reference: public System.String KeyItemId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_KeyItemId();
    // Get instance field reference: public System.Collections.Generic.List`1<System.String> ResultTableContents
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_ResultTableContents();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,System.UInt32> VirtualCurrencyContents
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, uint>*& dyn_VirtualCurrencyContents();
    // public System.Void .ctor()
    // Offset: 0xB5D2B8
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CatalogItemContainerInfo* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ClientModels::CatalogItemContainerInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CatalogItemContainerInfo*, creationType>()));
    }
  }; // PlayFab.ClientModels.CatalogItemContainerInfo
  #pragma pack(pop)
  static check_size<sizeof(CatalogItemContainerInfo), 40 + sizeof(::System::Collections::Generic::Dictionary_2<::StringW, uint>*)> __PlayFab_ClientModels_CatalogItemContainerInfoSizeCheck;
  static_assert(sizeof(CatalogItemContainerInfo) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::ClientModels::CatalogItemContainerInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
