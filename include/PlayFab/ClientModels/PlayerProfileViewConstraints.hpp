// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: PlayerProfileViewConstraints
  class PlayerProfileViewConstraints;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::ClientModels::PlayerProfileViewConstraints);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ClientModels::PlayerProfileViewConstraints*, "PlayFab.ClientModels", "PlayerProfileViewConstraints");
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.ClientModels.PlayerProfileViewConstraints
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayerProfileViewConstraints : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public System.Boolean ShowAvatarUrl
    // Size: 0x1
    // Offset: 0x10
    bool ShowAvatarUrl;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ShowBannedUntil
    // Size: 0x1
    // Offset: 0x11
    bool ShowBannedUntil;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ShowCampaignAttributions
    // Size: 0x1
    // Offset: 0x12
    bool ShowCampaignAttributions;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ShowContactEmailAddresses
    // Size: 0x1
    // Offset: 0x13
    bool ShowContactEmailAddresses;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ShowCreated
    // Size: 0x1
    // Offset: 0x14
    bool ShowCreated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ShowDisplayName
    // Size: 0x1
    // Offset: 0x15
    bool ShowDisplayName;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ShowExperimentVariants
    // Size: 0x1
    // Offset: 0x16
    bool ShowExperimentVariants;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ShowLastLogin
    // Size: 0x1
    // Offset: 0x17
    bool ShowLastLogin;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ShowLinkedAccounts
    // Size: 0x1
    // Offset: 0x18
    bool ShowLinkedAccounts;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ShowLocations
    // Size: 0x1
    // Offset: 0x19
    bool ShowLocations;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ShowMemberships
    // Size: 0x1
    // Offset: 0x1A
    bool ShowMemberships;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ShowOrigination
    // Size: 0x1
    // Offset: 0x1B
    bool ShowOrigination;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ShowPushNotificationRegistrations
    // Size: 0x1
    // Offset: 0x1C
    bool ShowPushNotificationRegistrations;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ShowStatistics
    // Size: 0x1
    // Offset: 0x1D
    bool ShowStatistics;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ShowTags
    // Size: 0x1
    // Offset: 0x1E
    bool ShowTags;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ShowTotalValueToDateInUsd
    // Size: 0x1
    // Offset: 0x1F
    bool ShowTotalValueToDateInUsd;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ShowValuesToDate
    // Size: 0x1
    // Offset: 0x20
    bool ShowValuesToDate;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public System.Boolean ShowAvatarUrl
    [[deprecated("Use field access instead!")]] bool& dyn_ShowAvatarUrl();
    // Get instance field reference: public System.Boolean ShowBannedUntil
    [[deprecated("Use field access instead!")]] bool& dyn_ShowBannedUntil();
    // Get instance field reference: public System.Boolean ShowCampaignAttributions
    [[deprecated("Use field access instead!")]] bool& dyn_ShowCampaignAttributions();
    // Get instance field reference: public System.Boolean ShowContactEmailAddresses
    [[deprecated("Use field access instead!")]] bool& dyn_ShowContactEmailAddresses();
    // Get instance field reference: public System.Boolean ShowCreated
    [[deprecated("Use field access instead!")]] bool& dyn_ShowCreated();
    // Get instance field reference: public System.Boolean ShowDisplayName
    [[deprecated("Use field access instead!")]] bool& dyn_ShowDisplayName();
    // Get instance field reference: public System.Boolean ShowExperimentVariants
    [[deprecated("Use field access instead!")]] bool& dyn_ShowExperimentVariants();
    // Get instance field reference: public System.Boolean ShowLastLogin
    [[deprecated("Use field access instead!")]] bool& dyn_ShowLastLogin();
    // Get instance field reference: public System.Boolean ShowLinkedAccounts
    [[deprecated("Use field access instead!")]] bool& dyn_ShowLinkedAccounts();
    // Get instance field reference: public System.Boolean ShowLocations
    [[deprecated("Use field access instead!")]] bool& dyn_ShowLocations();
    // Get instance field reference: public System.Boolean ShowMemberships
    [[deprecated("Use field access instead!")]] bool& dyn_ShowMemberships();
    // Get instance field reference: public System.Boolean ShowOrigination
    [[deprecated("Use field access instead!")]] bool& dyn_ShowOrigination();
    // Get instance field reference: public System.Boolean ShowPushNotificationRegistrations
    [[deprecated("Use field access instead!")]] bool& dyn_ShowPushNotificationRegistrations();
    // Get instance field reference: public System.Boolean ShowStatistics
    [[deprecated("Use field access instead!")]] bool& dyn_ShowStatistics();
    // Get instance field reference: public System.Boolean ShowTags
    [[deprecated("Use field access instead!")]] bool& dyn_ShowTags();
    // Get instance field reference: public System.Boolean ShowTotalValueToDateInUsd
    [[deprecated("Use field access instead!")]] bool& dyn_ShowTotalValueToDateInUsd();
    // Get instance field reference: public System.Boolean ShowValuesToDate
    [[deprecated("Use field access instead!")]] bool& dyn_ShowValuesToDate();
    // public System.Void .ctor()
    // Offset: 0xB5D930
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerProfileViewConstraints* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ClientModels::PlayerProfileViewConstraints::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerProfileViewConstraints*, creationType>()));
    }
  }; // PlayFab.ClientModels.PlayerProfileViewConstraints
  #pragma pack(pop)
  static check_size<sizeof(PlayerProfileViewConstraints), 32 + sizeof(bool)> __PlayFab_ClientModels_PlayerProfileViewConstraintsSizeCheck;
  static_assert(sizeof(PlayerProfileViewConstraints) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::ClientModels::PlayerProfileViewConstraints::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
