// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabResultCommon
#include "PlayFab/SharedModels/PlayFabResultCommon.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: PlayFab.ClientModels.TransactionStatus
#include "PlayFab/ClientModels/TransactionStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: PayForPurchaseResult
  class PayForPurchaseResult;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::ClientModels::PayForPurchaseResult);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ClientModels::PayForPurchaseResult*, "PlayFab.ClientModels", "PayForPurchaseResult");
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // WARNING Size may be invalid!
  // Autogenerated type: PlayFab.ClientModels.PayForPurchaseResult
  // [TokenAttribute] Offset: FFFFFFFF
  class PayForPurchaseResult : public ::PlayFab::SharedModels::PlayFabResultCommon {
    public:
    public:
    // public System.UInt32 CreditApplied
    // Size: 0x4
    // Offset: 0x20
    uint CreditApplied;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.String OrderId
    // Size: 0x8
    // Offset: 0x28
    ::StringW OrderId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String ProviderData
    // Size: 0x8
    // Offset: 0x30
    ::StringW ProviderData;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String ProviderToken
    // Size: 0x8
    // Offset: 0x38
    ::StringW ProviderToken;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String PurchaseConfirmationPageURL
    // Size: 0x8
    // Offset: 0x40
    ::StringW PurchaseConfirmationPageURL;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String PurchaseCurrency
    // Size: 0x8
    // Offset: 0x48
    ::StringW PurchaseCurrency;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.UInt32 PurchasePrice
    // Size: 0x4
    // Offset: 0x50
    uint PurchasePrice;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.Nullable`1<PlayFab.ClientModels.TransactionStatus> Status
    // Size: 0xFFFFFFFF
    // Offset: 0x54
    ::System::Nullable_1<::PlayFab::ClientModels::TransactionStatus> Status;
    // public System.Collections.Generic.Dictionary`2<System.String,System.Int32> VCAmount
    // Size: 0x8
    // Offset: 0x60
    ::System::Collections::Generic::Dictionary_2<::StringW, int>* VCAmount;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, int>*) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.String,System.Int32> VirtualCurrency
    // Size: 0x8
    // Offset: 0x68
    ::System::Collections::Generic::Dictionary_2<::StringW, int>* VirtualCurrency;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, int>*) == 0x8);
    public:
    // Get instance field reference: public System.UInt32 CreditApplied
    [[deprecated("Use field access instead!")]] uint& dyn_CreditApplied();
    // Get instance field reference: public System.String OrderId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrderId();
    // Get instance field reference: public System.String ProviderData
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ProviderData();
    // Get instance field reference: public System.String ProviderToken
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ProviderToken();
    // Get instance field reference: public System.String PurchaseConfirmationPageURL
    [[deprecated("Use field access instead!")]] ::StringW& dyn_PurchaseConfirmationPageURL();
    // Get instance field reference: public System.String PurchaseCurrency
    [[deprecated("Use field access instead!")]] ::StringW& dyn_PurchaseCurrency();
    // Get instance field reference: public System.UInt32 PurchasePrice
    [[deprecated("Use field access instead!")]] uint& dyn_PurchasePrice();
    // Get instance field reference: public System.Nullable`1<PlayFab.ClientModels.TransactionStatus> Status
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::ClientModels::TransactionStatus>& dyn_Status();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,System.Int32> VCAmount
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, int>*& dyn_VCAmount();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,System.Int32> VirtualCurrency
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, int>*& dyn_VirtualCurrency();
    // public System.Void .ctor()
    // Offset: 0xB5D910
    // Implemented from: PlayFab.SharedModels.PlayFabResultCommon
    // Base method: System.Void PlayFabResultCommon::.ctor()
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PayForPurchaseResult* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ClientModels::PayForPurchaseResult::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PayForPurchaseResult*, creationType>()));
    }
  }; // PlayFab.ClientModels.PayForPurchaseResult
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::ClientModels::PayForPurchaseResult::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
