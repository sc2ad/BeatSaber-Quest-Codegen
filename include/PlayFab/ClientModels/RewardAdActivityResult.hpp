// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabResultCommon
#include "PlayFab/SharedModels/PlayFabResultCommon.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: PlayFab::ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: AdRewardResults
  class AdRewardResults;
}
// Completed forward declares
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: RewardAdActivityResult
  class RewardAdActivityResult;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::ClientModels::RewardAdActivityResult);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ClientModels::RewardAdActivityResult*, "PlayFab.ClientModels", "RewardAdActivityResult");
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // WARNING Size may be invalid!
  // Autogenerated type: PlayFab.ClientModels.RewardAdActivityResult
  // [TokenAttribute] Offset: FFFFFFFF
  class RewardAdActivityResult : public ::PlayFab::SharedModels::PlayFabResultCommon {
    public:
    public:
    // public System.String AdActivityEventId
    // Size: 0x8
    // Offset: 0x20
    ::StringW AdActivityEventId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Collections.Generic.List`1<System.String> DebugResults
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::List_1<::StringW>* DebugResults;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // public System.String PlacementId
    // Size: 0x8
    // Offset: 0x30
    ::StringW PlacementId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String PlacementName
    // Size: 0x8
    // Offset: 0x38
    ::StringW PlacementName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Nullable`1<System.Int32> PlacementViewsRemaining
    // Size: 0xFFFFFFFF
    // Offset: 0x40
    ::System::Nullable_1<int> PlacementViewsRemaining;
    // public System.Nullable`1<System.Double> PlacementViewsResetMinutes
    // Size: 0xFFFFFFFF
    // Offset: 0x48
    ::System::Nullable_1<double> PlacementViewsResetMinutes;
    // public PlayFab.ClientModels.AdRewardResults RewardResults
    // Size: 0x8
    // Offset: 0x58
    ::PlayFab::ClientModels::AdRewardResults* RewardResults;
    // Field size check
    static_assert(sizeof(::PlayFab::ClientModels::AdRewardResults*) == 0x8);
    public:
    // Get instance field reference: public System.String AdActivityEventId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_AdActivityEventId();
    // Get instance field reference: public System.Collections.Generic.List`1<System.String> DebugResults
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_DebugResults();
    // Get instance field reference: public System.String PlacementId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_PlacementId();
    // Get instance field reference: public System.String PlacementName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_PlacementName();
    // Get instance field reference: public System.Nullable`1<System.Int32> PlacementViewsRemaining
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& dyn_PlacementViewsRemaining();
    // Get instance field reference: public System.Nullable`1<System.Double> PlacementViewsResetMinutes
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<double>& dyn_PlacementViewsResetMinutes();
    // Get instance field reference: public PlayFab.ClientModels.AdRewardResults RewardResults
    [[deprecated("Use field access instead!")]] ::PlayFab::ClientModels::AdRewardResults*& dyn_RewardResults();
    // public System.Void .ctor()
    // Offset: 0xB5DA20
    // Implemented from: PlayFab.SharedModels.PlayFabResultCommon
    // Base method: System.Void PlayFabResultCommon::.ctor()
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RewardAdActivityResult* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ClientModels::RewardAdActivityResult::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RewardAdActivityResult*, creationType>()));
    }
  }; // PlayFab.ClientModels.RewardAdActivityResult
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::ClientModels::RewardAdActivityResult::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
