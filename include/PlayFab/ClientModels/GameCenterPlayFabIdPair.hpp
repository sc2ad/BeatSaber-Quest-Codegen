// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: GameCenterPlayFabIdPair
  class GameCenterPlayFabIdPair;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::ClientModels::GameCenterPlayFabIdPair);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ClientModels::GameCenterPlayFabIdPair*, "PlayFab.ClientModels", "GameCenterPlayFabIdPair");
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.ClientModels.GameCenterPlayFabIdPair
  // [TokenAttribute] Offset: FFFFFFFF
  class GameCenterPlayFabIdPair : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public System.String GameCenterId
    // Size: 0x8
    // Offset: 0x10
    ::StringW GameCenterId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String PlayFabId
    // Size: 0x8
    // Offset: 0x18
    ::StringW PlayFabId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.String GameCenterId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_GameCenterId();
    // Get instance field reference: public System.String PlayFabId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_PlayFabId();
    // public System.Void .ctor()
    // Offset: 0xB5D3A0
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GameCenterPlayFabIdPair* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ClientModels::GameCenterPlayFabIdPair::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GameCenterPlayFabIdPair*, creationType>()));
    }
  }; // PlayFab.ClientModels.GameCenterPlayFabIdPair
  #pragma pack(pop)
  static check_size<sizeof(GameCenterPlayFabIdPair), 24 + sizeof(::StringW)> __PlayFab_ClientModels_GameCenterPlayFabIdPairSizeCheck;
  static_assert(sizeof(GameCenterPlayFabIdPair) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::ClientModels::GameCenterPlayFabIdPair::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
