// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: PlayFab.ClientModels.TradeStatus
#include "PlayFab/ClientModels/TradeStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: TradeInfo
  class TradeInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::ClientModels::TradeInfo);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ClientModels::TradeInfo*, "PlayFab.ClientModels", "TradeInfo");
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // WARNING Size may be invalid!
  // Autogenerated type: PlayFab.ClientModels.TradeInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class TradeInfo : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public System.Collections.Generic.List`1<System.String> AcceptedInventoryInstanceIds
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::StringW>* AcceptedInventoryInstanceIds;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // public System.String AcceptedPlayerId
    // Size: 0x8
    // Offset: 0x18
    ::StringW AcceptedPlayerId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Collections.Generic.List`1<System.String> AllowedPlayerIds
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::StringW>* AllowedPlayerIds;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // public System.Nullable`1<System.DateTime> CancelledAt
    // Size: 0xFFFFFFFF
    // Offset: 0x28
    ::System::Nullable_1<::System::DateTime> CancelledAt;
    // public System.Nullable`1<System.DateTime> FilledAt
    // Size: 0xFFFFFFFF
    // Offset: 0x38
    ::System::Nullable_1<::System::DateTime> FilledAt;
    // public System.Nullable`1<System.DateTime> InvalidatedAt
    // Size: 0xFFFFFFFF
    // Offset: 0x48
    ::System::Nullable_1<::System::DateTime> InvalidatedAt;
    // public System.Collections.Generic.List`1<System.String> OfferedCatalogItemIds
    // Size: 0x8
    // Offset: 0x58
    ::System::Collections::Generic::List_1<::StringW>* OfferedCatalogItemIds;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // public System.Collections.Generic.List`1<System.String> OfferedInventoryInstanceIds
    // Size: 0x8
    // Offset: 0x60
    ::System::Collections::Generic::List_1<::StringW>* OfferedInventoryInstanceIds;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // public System.String OfferingPlayerId
    // Size: 0x8
    // Offset: 0x68
    ::StringW OfferingPlayerId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Nullable`1<System.DateTime> OpenedAt
    // Size: 0xFFFFFFFF
    // Offset: 0x70
    ::System::Nullable_1<::System::DateTime> OpenedAt;
    // public System.Collections.Generic.List`1<System.String> RequestedCatalogItemIds
    // Size: 0x8
    // Offset: 0x80
    ::System::Collections::Generic::List_1<::StringW>* RequestedCatalogItemIds;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // public System.Nullable`1<PlayFab.ClientModels.TradeStatus> Status
    // Size: 0xFFFFFFFF
    // Offset: 0x88
    ::System::Nullable_1<::PlayFab::ClientModels::TradeStatus> Status;
    // public System.String TradeId
    // Size: 0x8
    // Offset: 0x90
    ::StringW TradeId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.Collections.Generic.List`1<System.String> AcceptedInventoryInstanceIds
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_AcceptedInventoryInstanceIds();
    // Get instance field reference: public System.String AcceptedPlayerId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_AcceptedPlayerId();
    // Get instance field reference: public System.Collections.Generic.List`1<System.String> AllowedPlayerIds
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_AllowedPlayerIds();
    // Get instance field reference: public System.Nullable`1<System.DateTime> CancelledAt
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& dyn_CancelledAt();
    // Get instance field reference: public System.Nullable`1<System.DateTime> FilledAt
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& dyn_FilledAt();
    // Get instance field reference: public System.Nullable`1<System.DateTime> InvalidatedAt
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& dyn_InvalidatedAt();
    // Get instance field reference: public System.Collections.Generic.List`1<System.String> OfferedCatalogItemIds
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_OfferedCatalogItemIds();
    // Get instance field reference: public System.Collections.Generic.List`1<System.String> OfferedInventoryInstanceIds
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_OfferedInventoryInstanceIds();
    // Get instance field reference: public System.String OfferingPlayerId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OfferingPlayerId();
    // Get instance field reference: public System.Nullable`1<System.DateTime> OpenedAt
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& dyn_OpenedAt();
    // Get instance field reference: public System.Collections.Generic.List`1<System.String> RequestedCatalogItemIds
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_RequestedCatalogItemIds();
    // Get instance field reference: public System.Nullable`1<PlayFab.ClientModels.TradeStatus> Status
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::ClientModels::TradeStatus>& dyn_Status();
    // Get instance field reference: public System.String TradeId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_TradeId();
    // public System.Void .ctor()
    // Offset: 0xB5DAE0
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TradeInfo* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ClientModels::TradeInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TradeInfo*, creationType>()));
    }
  }; // PlayFab.ClientModels.TradeInfo
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::ClientModels::TradeInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
