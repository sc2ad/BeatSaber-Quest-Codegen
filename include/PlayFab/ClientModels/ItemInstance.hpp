// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: ItemInstance
  class ItemInstance;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::ClientModels::ItemInstance);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ClientModels::ItemInstance*, "PlayFab.ClientModels", "ItemInstance");
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // WARNING Size may be invalid!
  // Autogenerated type: PlayFab.ClientModels.ItemInstance
  // [TokenAttribute] Offset: FFFFFFFF
  class ItemInstance : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public System.String Annotation
    // Size: 0x8
    // Offset: 0x10
    ::StringW Annotation;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Collections.Generic.List`1<System.String> BundleContents
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::StringW>* BundleContents;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // public System.String BundleParent
    // Size: 0x8
    // Offset: 0x20
    ::StringW BundleParent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String CatalogVersion
    // Size: 0x8
    // Offset: 0x28
    ::StringW CatalogVersion;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.String,System.String> CustomData
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* CustomData;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*) == 0x8);
    // public System.String DisplayName
    // Size: 0x8
    // Offset: 0x38
    ::StringW DisplayName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Nullable`1<System.DateTime> Expiration
    // Size: 0xFFFFFFFF
    // Offset: 0x40
    ::System::Nullable_1<::System::DateTime> Expiration;
    // public System.String ItemClass
    // Size: 0x8
    // Offset: 0x50
    ::StringW ItemClass;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String ItemId
    // Size: 0x8
    // Offset: 0x58
    ::StringW ItemId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String ItemInstanceId
    // Size: 0x8
    // Offset: 0x60
    ::StringW ItemInstanceId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Nullable`1<System.DateTime> PurchaseDate
    // Size: 0xFFFFFFFF
    // Offset: 0x68
    ::System::Nullable_1<::System::DateTime> PurchaseDate;
    // public System.Nullable`1<System.Int32> RemainingUses
    // Size: 0xFFFFFFFF
    // Offset: 0x78
    ::System::Nullable_1<int> RemainingUses;
    // public System.String UnitCurrency
    // Size: 0x8
    // Offset: 0x80
    ::StringW UnitCurrency;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.UInt32 UnitPrice
    // Size: 0x4
    // Offset: 0x88
    uint UnitPrice;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.Nullable`1<System.Int32> UsesIncrementedBy
    // Size: 0xFFFFFFFF
    // Offset: 0x8C
    ::System::Nullable_1<int> UsesIncrementedBy;
    public:
    // Get instance field reference: public System.String Annotation
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Annotation();
    // Get instance field reference: public System.Collections.Generic.List`1<System.String> BundleContents
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_BundleContents();
    // Get instance field reference: public System.String BundleParent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_BundleParent();
    // Get instance field reference: public System.String CatalogVersion
    [[deprecated("Use field access instead!")]] ::StringW& dyn_CatalogVersion();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,System.String> CustomData
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& dyn_CustomData();
    // Get instance field reference: public System.String DisplayName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_DisplayName();
    // Get instance field reference: public System.Nullable`1<System.DateTime> Expiration
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& dyn_Expiration();
    // Get instance field reference: public System.String ItemClass
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ItemClass();
    // Get instance field reference: public System.String ItemId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ItemId();
    // Get instance field reference: public System.String ItemInstanceId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ItemInstanceId();
    // Get instance field reference: public System.Nullable`1<System.DateTime> PurchaseDate
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& dyn_PurchaseDate();
    // Get instance field reference: public System.Nullable`1<System.Int32> RemainingUses
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& dyn_RemainingUses();
    // Get instance field reference: public System.String UnitCurrency
    [[deprecated("Use field access instead!")]] ::StringW& dyn_UnitCurrency();
    // Get instance field reference: public System.UInt32 UnitPrice
    [[deprecated("Use field access instead!")]] uint& dyn_UnitPrice();
    // Get instance field reference: public System.Nullable`1<System.Int32> UsesIncrementedBy
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& dyn_UsesIncrementedBy();
    // public System.Void .ctor()
    // Offset: 0xB5D6E8
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ItemInstance* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ClientModels::ItemInstance::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ItemInstance*, creationType>()));
    }
  }; // PlayFab.ClientModels.ItemInstance
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::ClientModels::ItemInstance::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
