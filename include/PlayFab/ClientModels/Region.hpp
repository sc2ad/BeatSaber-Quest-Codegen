// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: Region
  struct Region;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ClientModels::Region, "PlayFab.ClientModels", "Region");
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.ClientModels.Region
  // [TokenAttribute] Offset: FFFFFFFF
  struct Region/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: Region
    constexpr Region(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public PlayFab.ClientModels.Region USCentral
    static constexpr const int USCentral = 0;
    // Get static field: static public PlayFab.ClientModels.Region USCentral
    static ::PlayFab::ClientModels::Region _get_USCentral();
    // Set static field: static public PlayFab.ClientModels.Region USCentral
    static void _set_USCentral(::PlayFab::ClientModels::Region value);
    // static field const value: static public PlayFab.ClientModels.Region USEast
    static constexpr const int USEast = 1;
    // Get static field: static public PlayFab.ClientModels.Region USEast
    static ::PlayFab::ClientModels::Region _get_USEast();
    // Set static field: static public PlayFab.ClientModels.Region USEast
    static void _set_USEast(::PlayFab::ClientModels::Region value);
    // static field const value: static public PlayFab.ClientModels.Region EUWest
    static constexpr const int EUWest = 2;
    // Get static field: static public PlayFab.ClientModels.Region EUWest
    static ::PlayFab::ClientModels::Region _get_EUWest();
    // Set static field: static public PlayFab.ClientModels.Region EUWest
    static void _set_EUWest(::PlayFab::ClientModels::Region value);
    // static field const value: static public PlayFab.ClientModels.Region Singapore
    static constexpr const int Singapore = 3;
    // Get static field: static public PlayFab.ClientModels.Region Singapore
    static ::PlayFab::ClientModels::Region _get_Singapore();
    // Set static field: static public PlayFab.ClientModels.Region Singapore
    static void _set_Singapore(::PlayFab::ClientModels::Region value);
    // static field const value: static public PlayFab.ClientModels.Region Japan
    static constexpr const int Japan = 4;
    // Get static field: static public PlayFab.ClientModels.Region Japan
    static ::PlayFab::ClientModels::Region _get_Japan();
    // Set static field: static public PlayFab.ClientModels.Region Japan
    static void _set_Japan(::PlayFab::ClientModels::Region value);
    // static field const value: static public PlayFab.ClientModels.Region Brazil
    static constexpr const int Brazil = 5;
    // Get static field: static public PlayFab.ClientModels.Region Brazil
    static ::PlayFab::ClientModels::Region _get_Brazil();
    // Set static field: static public PlayFab.ClientModels.Region Brazil
    static void _set_Brazil(::PlayFab::ClientModels::Region value);
    // static field const value: static public PlayFab.ClientModels.Region Australia
    static constexpr const int Australia = 6;
    // Get static field: static public PlayFab.ClientModels.Region Australia
    static ::PlayFab::ClientModels::Region _get_Australia();
    // Set static field: static public PlayFab.ClientModels.Region Australia
    static void _set_Australia(::PlayFab::ClientModels::Region value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // PlayFab.ClientModels.Region
  #pragma pack(pop)
  static check_size<sizeof(Region), 0 + sizeof(int)> __PlayFab_ClientModels_RegionSizeCheck;
  static_assert(sizeof(Region) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
