// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabLoginResultCommon
#include "PlayFab/SharedModels/PlayFabLoginResultCommon.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PlayFab::ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: EntityTokenResponse
  class EntityTokenResponse;
  // Forward declaring type: GetPlayerCombinedInfoResultPayload
  class GetPlayerCombinedInfoResultPayload;
  // Forward declaring type: UserSettings
  class UserSettings;
  // Forward declaring type: TreatmentAssignment
  class TreatmentAssignment;
}
// Completed forward declares
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: LoginResult
  class LoginResult;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::ClientModels::LoginResult);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ClientModels::LoginResult*, "PlayFab.ClientModels", "LoginResult");
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // WARNING Size may be invalid!
  // Autogenerated type: PlayFab.ClientModels.LoginResult
  // [TokenAttribute] Offset: FFFFFFFF
  class LoginResult : public ::PlayFab::SharedModels::PlayFabLoginResultCommon {
    public:
    public:
    // public PlayFab.ClientModels.EntityTokenResponse EntityToken
    // Size: 0x8
    // Offset: 0x28
    ::PlayFab::ClientModels::EntityTokenResponse* EntityToken;
    // Field size check
    static_assert(sizeof(::PlayFab::ClientModels::EntityTokenResponse*) == 0x8);
    // public PlayFab.ClientModels.GetPlayerCombinedInfoResultPayload InfoResultPayload
    // Size: 0x8
    // Offset: 0x30
    ::PlayFab::ClientModels::GetPlayerCombinedInfoResultPayload* InfoResultPayload;
    // Field size check
    static_assert(sizeof(::PlayFab::ClientModels::GetPlayerCombinedInfoResultPayload*) == 0x8);
    // public System.Nullable`1<System.DateTime> LastLoginTime
    // Size: 0xFFFFFFFF
    // Offset: 0x38
    ::System::Nullable_1<::System::DateTime> LastLoginTime;
    // public System.Boolean NewlyCreated
    // Size: 0x1
    // Offset: 0x48
    bool NewlyCreated;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.String PlayFabId
    // Size: 0x8
    // Offset: 0x50
    ::StringW PlayFabId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String SessionTicket
    // Size: 0x8
    // Offset: 0x58
    ::StringW SessionTicket;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public PlayFab.ClientModels.UserSettings SettingsForUser
    // Size: 0x8
    // Offset: 0x60
    ::PlayFab::ClientModels::UserSettings* SettingsForUser;
    // Field size check
    static_assert(sizeof(::PlayFab::ClientModels::UserSettings*) == 0x8);
    // public PlayFab.ClientModels.TreatmentAssignment TreatmentAssignment
    // Size: 0x8
    // Offset: 0x68
    ::PlayFab::ClientModels::TreatmentAssignment* TreatmentAssignment;
    // Field size check
    static_assert(sizeof(::PlayFab::ClientModels::TreatmentAssignment*) == 0x8);
    public:
    // Deleting conversion operator: operator ::PlayFab::PlayFabAuthenticationContext*
    constexpr operator ::PlayFab::PlayFabAuthenticationContext*() const noexcept = delete;
    // Get instance field reference: public PlayFab.ClientModels.EntityTokenResponse EntityToken
    [[deprecated("Use field access instead!")]] ::PlayFab::ClientModels::EntityTokenResponse*& dyn_EntityToken();
    // Get instance field reference: public PlayFab.ClientModels.GetPlayerCombinedInfoResultPayload InfoResultPayload
    [[deprecated("Use field access instead!")]] ::PlayFab::ClientModels::GetPlayerCombinedInfoResultPayload*& dyn_InfoResultPayload();
    // Get instance field reference: public System.Nullable`1<System.DateTime> LastLoginTime
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& dyn_LastLoginTime();
    // Get instance field reference: public System.Boolean NewlyCreated
    [[deprecated("Use field access instead!")]] bool& dyn_NewlyCreated();
    // Get instance field reference: public System.String PlayFabId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_PlayFabId();
    // Get instance field reference: public System.String SessionTicket
    [[deprecated("Use field access instead!")]] ::StringW& dyn_SessionTicket();
    // Get instance field reference: public PlayFab.ClientModels.UserSettings SettingsForUser
    [[deprecated("Use field access instead!")]] ::PlayFab::ClientModels::UserSettings*& dyn_SettingsForUser();
    // Get instance field reference: public PlayFab.ClientModels.TreatmentAssignment TreatmentAssignment
    [[deprecated("Use field access instead!")]] ::PlayFab::ClientModels::TreatmentAssignment*& dyn_TreatmentAssignment();
    // public System.Void .ctor()
    // Offset: 0xB5D820
    // Implemented from: PlayFab.SharedModels.PlayFabLoginResultCommon
    // Base method: System.Void PlayFabLoginResultCommon::.ctor()
    // Base method: System.Void PlayFabResultCommon::.ctor()
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoginResult* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ClientModels::LoginResult::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoginResult*, creationType>()));
    }
  }; // PlayFab.ClientModels.LoginResult
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::ClientModels::LoginResult::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
