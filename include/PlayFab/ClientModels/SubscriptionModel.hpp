// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: PlayFab.ClientModels.SubscriptionProviderStatus
#include "PlayFab/ClientModels/SubscriptionProviderStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: SubscriptionModel
  class SubscriptionModel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::ClientModels::SubscriptionModel);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ClientModels::SubscriptionModel*, "PlayFab.ClientModels", "SubscriptionModel");
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // WARNING Size may be invalid!
  // Autogenerated type: PlayFab.ClientModels.SubscriptionModel
  // [TokenAttribute] Offset: FFFFFFFF
  class SubscriptionModel : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public System.DateTime Expiration
    // Size: 0x8
    // Offset: 0x10
    ::System::DateTime Expiration;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    // public System.DateTime InitialSubscriptionTime
    // Size: 0x8
    // Offset: 0x18
    ::System::DateTime InitialSubscriptionTime;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    // public System.Boolean IsActive
    // Size: 0x1
    // Offset: 0x20
    bool IsActive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Nullable`1<PlayFab.ClientModels.SubscriptionProviderStatus> Status
    // Size: 0xFFFFFFFF
    // Offset: 0x24
    ::System::Nullable_1<::PlayFab::ClientModels::SubscriptionProviderStatus> Status;
    // public System.String SubscriptionId
    // Size: 0x8
    // Offset: 0x30
    ::StringW SubscriptionId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String SubscriptionItemId
    // Size: 0x8
    // Offset: 0x38
    ::StringW SubscriptionItemId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String SubscriptionProvider
    // Size: 0x8
    // Offset: 0x40
    ::StringW SubscriptionProvider;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.DateTime Expiration
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn_Expiration();
    // Get instance field reference: public System.DateTime InitialSubscriptionTime
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn_InitialSubscriptionTime();
    // Get instance field reference: public System.Boolean IsActive
    [[deprecated("Use field access instead!")]] bool& dyn_IsActive();
    // Get instance field reference: public System.Nullable`1<PlayFab.ClientModels.SubscriptionProviderStatus> Status
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::ClientModels::SubscriptionProviderStatus>& dyn_Status();
    // Get instance field reference: public System.String SubscriptionId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_SubscriptionId();
    // Get instance field reference: public System.String SubscriptionItemId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_SubscriptionItemId();
    // Get instance field reference: public System.String SubscriptionProvider
    [[deprecated("Use field access instead!")]] ::StringW& dyn_SubscriptionProvider();
    // public System.Void .ctor()
    // Offset: 0xB5DAC0
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SubscriptionModel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ClientModels::SubscriptionModel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SubscriptionModel*, creationType>()));
    }
  }; // PlayFab.ClientModels.SubscriptionModel
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::ClientModels::SubscriptionModel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
