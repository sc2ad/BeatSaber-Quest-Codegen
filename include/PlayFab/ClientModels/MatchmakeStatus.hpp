// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: MatchmakeStatus
  struct MatchmakeStatus;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ClientModels::MatchmakeStatus, "PlayFab.ClientModels", "MatchmakeStatus");
// Type namespace: PlayFab.ClientModels
namespace PlayFab::ClientModels {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.ClientModels.MatchmakeStatus
  // [TokenAttribute] Offset: FFFFFFFF
  struct MatchmakeStatus/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: MatchmakeStatus
    constexpr MatchmakeStatus(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public PlayFab.ClientModels.MatchmakeStatus Complete
    static constexpr const int Complete = 0;
    // Get static field: static public PlayFab.ClientModels.MatchmakeStatus Complete
    static ::PlayFab::ClientModels::MatchmakeStatus _get_Complete();
    // Set static field: static public PlayFab.ClientModels.MatchmakeStatus Complete
    static void _set_Complete(::PlayFab::ClientModels::MatchmakeStatus value);
    // static field const value: static public PlayFab.ClientModels.MatchmakeStatus Waiting
    static constexpr const int Waiting = 1;
    // Get static field: static public PlayFab.ClientModels.MatchmakeStatus Waiting
    static ::PlayFab::ClientModels::MatchmakeStatus _get_Waiting();
    // Set static field: static public PlayFab.ClientModels.MatchmakeStatus Waiting
    static void _set_Waiting(::PlayFab::ClientModels::MatchmakeStatus value);
    // static field const value: static public PlayFab.ClientModels.MatchmakeStatus GameNotFound
    static constexpr const int GameNotFound = 2;
    // Get static field: static public PlayFab.ClientModels.MatchmakeStatus GameNotFound
    static ::PlayFab::ClientModels::MatchmakeStatus _get_GameNotFound();
    // Set static field: static public PlayFab.ClientModels.MatchmakeStatus GameNotFound
    static void _set_GameNotFound(::PlayFab::ClientModels::MatchmakeStatus value);
    // static field const value: static public PlayFab.ClientModels.MatchmakeStatus NoAvailableSlots
    static constexpr const int NoAvailableSlots = 3;
    // Get static field: static public PlayFab.ClientModels.MatchmakeStatus NoAvailableSlots
    static ::PlayFab::ClientModels::MatchmakeStatus _get_NoAvailableSlots();
    // Set static field: static public PlayFab.ClientModels.MatchmakeStatus NoAvailableSlots
    static void _set_NoAvailableSlots(::PlayFab::ClientModels::MatchmakeStatus value);
    // static field const value: static public PlayFab.ClientModels.MatchmakeStatus SessionClosed
    static constexpr const int SessionClosed = 4;
    // Get static field: static public PlayFab.ClientModels.MatchmakeStatus SessionClosed
    static ::PlayFab::ClientModels::MatchmakeStatus _get_SessionClosed();
    // Set static field: static public PlayFab.ClientModels.MatchmakeStatus SessionClosed
    static void _set_SessionClosed(::PlayFab::ClientModels::MatchmakeStatus value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // PlayFab.ClientModels.MatchmakeStatus
  #pragma pack(pop)
  static check_size<sizeof(MatchmakeStatus), 0 + sizeof(int)> __PlayFab_ClientModels_MatchmakeStatusSizeCheck;
  static_assert(sizeof(MatchmakeStatus) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
