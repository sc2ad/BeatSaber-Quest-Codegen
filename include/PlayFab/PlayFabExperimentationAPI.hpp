// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PlayFab::ExperimentationModels
namespace PlayFab::ExperimentationModels {
  // Forward declaring type: CreateExperimentRequest
  class CreateExperimentRequest;
  // Forward declaring type: CreateExperimentResult
  class CreateExperimentResult;
  // Forward declaring type: DeleteExperimentRequest
  class DeleteExperimentRequest;
  // Forward declaring type: EmptyResponse
  class EmptyResponse;
  // Forward declaring type: GetExperimentsRequest
  class GetExperimentsRequest;
  // Forward declaring type: GetExperimentsResult
  class GetExperimentsResult;
  // Forward declaring type: GetLatestScorecardRequest
  class GetLatestScorecardRequest;
  // Forward declaring type: GetLatestScorecardResult
  class GetLatestScorecardResult;
  // Forward declaring type: GetTreatmentAssignmentRequest
  class GetTreatmentAssignmentRequest;
  // Forward declaring type: GetTreatmentAssignmentResult
  class GetTreatmentAssignmentResult;
  // Forward declaring type: StartExperimentRequest
  class StartExperimentRequest;
  // Forward declaring type: StopExperimentRequest
  class StopExperimentRequest;
  // Forward declaring type: UpdateExperimentRequest
  class UpdateExperimentRequest;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: PlayFab
namespace PlayFab {
  // Forward declaring type: PlayFabError
  class PlayFabError;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: PlayFab
namespace PlayFab {
  // Forward declaring type: PlayFabExperimentationAPI
  class PlayFabExperimentationAPI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::PlayFabExperimentationAPI);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::PlayFabExperimentationAPI*, "PlayFab", "PlayFabExperimentationAPI");
// Type namespace: PlayFab
namespace PlayFab {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.PlayFabExperimentationAPI
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayFabExperimentationAPI : public ::Il2CppObject {
    public:
    // static private System.Void .cctor()
    // Offset: 0x163C550
    static void _cctor();
    // static public System.Boolean IsEntityLoggedIn()
    // Offset: 0x163C554
    static bool IsEntityLoggedIn();
    // static public System.Void ForgetAllCredentials()
    // Offset: 0x163C5C8
    static void ForgetAllCredentials();
    // static public System.Void CreateExperiment(PlayFab.ExperimentationModels.CreateExperimentRequest request, System.Action`1<PlayFab.ExperimentationModels.CreateExperimentResult> resultCallback, System.Action`1<PlayFab.PlayFabError> errorCallback, System.Object customData, System.Collections.Generic.Dictionary`2<System.String,System.String> extraHeaders)
    // Offset: 0x163C63C
    static void CreateExperiment(::PlayFab::ExperimentationModels::CreateExperimentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::CreateExperimentResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders);
    // static public System.Void DeleteExperiment(PlayFab.ExperimentationModels.DeleteExperimentRequest request, System.Action`1<PlayFab.ExperimentationModels.EmptyResponse> resultCallback, System.Action`1<PlayFab.PlayFabError> errorCallback, System.Object customData, System.Collections.Generic.Dictionary`2<System.String,System.String> extraHeaders)
    // Offset: 0x163C7D0
    static void DeleteExperiment(::PlayFab::ExperimentationModels::DeleteExperimentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders);
    // static public System.Void GetExperiments(PlayFab.ExperimentationModels.GetExperimentsRequest request, System.Action`1<PlayFab.ExperimentationModels.GetExperimentsResult> resultCallback, System.Action`1<PlayFab.PlayFabError> errorCallback, System.Object customData, System.Collections.Generic.Dictionary`2<System.String,System.String> extraHeaders)
    // Offset: 0x163C964
    static void GetExperiments(::PlayFab::ExperimentationModels::GetExperimentsRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::GetExperimentsResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders);
    // static public System.Void GetLatestScorecard(PlayFab.ExperimentationModels.GetLatestScorecardRequest request, System.Action`1<PlayFab.ExperimentationModels.GetLatestScorecardResult> resultCallback, System.Action`1<PlayFab.PlayFabError> errorCallback, System.Object customData, System.Collections.Generic.Dictionary`2<System.String,System.String> extraHeaders)
    // Offset: 0x163CAF8
    static void GetLatestScorecard(::PlayFab::ExperimentationModels::GetLatestScorecardRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::GetLatestScorecardResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders);
    // static public System.Void GetTreatmentAssignment(PlayFab.ExperimentationModels.GetTreatmentAssignmentRequest request, System.Action`1<PlayFab.ExperimentationModels.GetTreatmentAssignmentResult> resultCallback, System.Action`1<PlayFab.PlayFabError> errorCallback, System.Object customData, System.Collections.Generic.Dictionary`2<System.String,System.String> extraHeaders)
    // Offset: 0x163CC8C
    static void GetTreatmentAssignment(::PlayFab::ExperimentationModels::GetTreatmentAssignmentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::GetTreatmentAssignmentResult*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders);
    // static public System.Void StartExperiment(PlayFab.ExperimentationModels.StartExperimentRequest request, System.Action`1<PlayFab.ExperimentationModels.EmptyResponse> resultCallback, System.Action`1<PlayFab.PlayFabError> errorCallback, System.Object customData, System.Collections.Generic.Dictionary`2<System.String,System.String> extraHeaders)
    // Offset: 0x163CE20
    static void StartExperiment(::PlayFab::ExperimentationModels::StartExperimentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders);
    // static public System.Void StopExperiment(PlayFab.ExperimentationModels.StopExperimentRequest request, System.Action`1<PlayFab.ExperimentationModels.EmptyResponse> resultCallback, System.Action`1<PlayFab.PlayFabError> errorCallback, System.Object customData, System.Collections.Generic.Dictionary`2<System.String,System.String> extraHeaders)
    // Offset: 0x163CFB4
    static void StopExperiment(::PlayFab::ExperimentationModels::StopExperimentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders);
    // static public System.Void UpdateExperiment(PlayFab.ExperimentationModels.UpdateExperimentRequest request, System.Action`1<PlayFab.ExperimentationModels.EmptyResponse> resultCallback, System.Action`1<PlayFab.PlayFabError> errorCallback, System.Object customData, System.Collections.Generic.Dictionary`2<System.String,System.String> extraHeaders)
    // Offset: 0x163D148
    static void UpdateExperiment(::PlayFab::ExperimentationModels::UpdateExperimentRequest* request, ::System::Action_1<::PlayFab::ExperimentationModels::EmptyResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders);
  }; // PlayFab.PlayFabExperimentationAPI
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::PlayFabExperimentationAPI::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PlayFab::PlayFabExperimentationAPI::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabExperimentationAPI*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabExperimentationAPI::IsEntityLoggedIn
// Il2CppName: IsEntityLoggedIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&PlayFab::PlayFabExperimentationAPI::IsEntityLoggedIn)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabExperimentationAPI*), "IsEntityLoggedIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabExperimentationAPI::ForgetAllCredentials
// Il2CppName: ForgetAllCredentials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PlayFab::PlayFabExperimentationAPI::ForgetAllCredentials)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabExperimentationAPI*), "ForgetAllCredentials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabExperimentationAPI::CreateExperiment
// Il2CppName: CreateExperiment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PlayFab::ExperimentationModels::CreateExperimentRequest*, ::System::Action_1<::PlayFab::ExperimentationModels::CreateExperimentResult*>*, ::System::Action_1<::PlayFab::PlayFabError*>*, ::Il2CppObject*, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&PlayFab::PlayFabExperimentationAPI::CreateExperiment)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("PlayFab.ExperimentationModels", "CreateExperimentRequest")->byval_arg;
    static auto* resultCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab.ExperimentationModels", "CreateExperimentResult")})->byval_arg;
    static auto* errorCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")})->byval_arg;
    static auto* customData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* extraHeaders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabExperimentationAPI*), "CreateExperiment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, resultCallback, errorCallback, customData, extraHeaders});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabExperimentationAPI::DeleteExperiment
// Il2CppName: DeleteExperiment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PlayFab::ExperimentationModels::DeleteExperimentRequest*, ::System::Action_1<::PlayFab::ExperimentationModels::EmptyResponse*>*, ::System::Action_1<::PlayFab::PlayFabError*>*, ::Il2CppObject*, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&PlayFab::PlayFabExperimentationAPI::DeleteExperiment)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("PlayFab.ExperimentationModels", "DeleteExperimentRequest")->byval_arg;
    static auto* resultCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab.ExperimentationModels", "EmptyResponse")})->byval_arg;
    static auto* errorCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")})->byval_arg;
    static auto* customData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* extraHeaders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabExperimentationAPI*), "DeleteExperiment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, resultCallback, errorCallback, customData, extraHeaders});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabExperimentationAPI::GetExperiments
// Il2CppName: GetExperiments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PlayFab::ExperimentationModels::GetExperimentsRequest*, ::System::Action_1<::PlayFab::ExperimentationModels::GetExperimentsResult*>*, ::System::Action_1<::PlayFab::PlayFabError*>*, ::Il2CppObject*, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&PlayFab::PlayFabExperimentationAPI::GetExperiments)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("PlayFab.ExperimentationModels", "GetExperimentsRequest")->byval_arg;
    static auto* resultCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab.ExperimentationModels", "GetExperimentsResult")})->byval_arg;
    static auto* errorCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")})->byval_arg;
    static auto* customData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* extraHeaders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabExperimentationAPI*), "GetExperiments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, resultCallback, errorCallback, customData, extraHeaders});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabExperimentationAPI::GetLatestScorecard
// Il2CppName: GetLatestScorecard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PlayFab::ExperimentationModels::GetLatestScorecardRequest*, ::System::Action_1<::PlayFab::ExperimentationModels::GetLatestScorecardResult*>*, ::System::Action_1<::PlayFab::PlayFabError*>*, ::Il2CppObject*, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&PlayFab::PlayFabExperimentationAPI::GetLatestScorecard)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("PlayFab.ExperimentationModels", "GetLatestScorecardRequest")->byval_arg;
    static auto* resultCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab.ExperimentationModels", "GetLatestScorecardResult")})->byval_arg;
    static auto* errorCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")})->byval_arg;
    static auto* customData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* extraHeaders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabExperimentationAPI*), "GetLatestScorecard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, resultCallback, errorCallback, customData, extraHeaders});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabExperimentationAPI::GetTreatmentAssignment
// Il2CppName: GetTreatmentAssignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PlayFab::ExperimentationModels::GetTreatmentAssignmentRequest*, ::System::Action_1<::PlayFab::ExperimentationModels::GetTreatmentAssignmentResult*>*, ::System::Action_1<::PlayFab::PlayFabError*>*, ::Il2CppObject*, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&PlayFab::PlayFabExperimentationAPI::GetTreatmentAssignment)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("PlayFab.ExperimentationModels", "GetTreatmentAssignmentRequest")->byval_arg;
    static auto* resultCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab.ExperimentationModels", "GetTreatmentAssignmentResult")})->byval_arg;
    static auto* errorCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")})->byval_arg;
    static auto* customData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* extraHeaders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabExperimentationAPI*), "GetTreatmentAssignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, resultCallback, errorCallback, customData, extraHeaders});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabExperimentationAPI::StartExperiment
// Il2CppName: StartExperiment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PlayFab::ExperimentationModels::StartExperimentRequest*, ::System::Action_1<::PlayFab::ExperimentationModels::EmptyResponse*>*, ::System::Action_1<::PlayFab::PlayFabError*>*, ::Il2CppObject*, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&PlayFab::PlayFabExperimentationAPI::StartExperiment)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("PlayFab.ExperimentationModels", "StartExperimentRequest")->byval_arg;
    static auto* resultCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab.ExperimentationModels", "EmptyResponse")})->byval_arg;
    static auto* errorCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")})->byval_arg;
    static auto* customData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* extraHeaders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabExperimentationAPI*), "StartExperiment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, resultCallback, errorCallback, customData, extraHeaders});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabExperimentationAPI::StopExperiment
// Il2CppName: StopExperiment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PlayFab::ExperimentationModels::StopExperimentRequest*, ::System::Action_1<::PlayFab::ExperimentationModels::EmptyResponse*>*, ::System::Action_1<::PlayFab::PlayFabError*>*, ::Il2CppObject*, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&PlayFab::PlayFabExperimentationAPI::StopExperiment)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("PlayFab.ExperimentationModels", "StopExperimentRequest")->byval_arg;
    static auto* resultCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab.ExperimentationModels", "EmptyResponse")})->byval_arg;
    static auto* errorCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")})->byval_arg;
    static auto* customData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* extraHeaders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabExperimentationAPI*), "StopExperiment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, resultCallback, errorCallback, customData, extraHeaders});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabExperimentationAPI::UpdateExperiment
// Il2CppName: UpdateExperiment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PlayFab::ExperimentationModels::UpdateExperimentRequest*, ::System::Action_1<::PlayFab::ExperimentationModels::EmptyResponse*>*, ::System::Action_1<::PlayFab::PlayFabError*>*, ::Il2CppObject*, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&PlayFab::PlayFabExperimentationAPI::UpdateExperiment)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("PlayFab.ExperimentationModels", "UpdateExperimentRequest")->byval_arg;
    static auto* resultCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab.ExperimentationModels", "EmptyResponse")})->byval_arg;
    static auto* errorCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")})->byval_arg;
    static auto* customData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* extraHeaders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabExperimentationAPI*), "UpdateExperiment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, resultCallback, errorCallback, customData, extraHeaders});
  }
};
