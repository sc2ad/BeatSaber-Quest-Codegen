// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: PlayFab::MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Forward declaring type: CoreCapacity
  class CoreCapacity;
}
// Completed forward declares
// Type namespace: PlayFab.MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Forward declaring type: TitleMultiplayerServersQuotas
  class TitleMultiplayerServersQuotas;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::MultiplayerModels::TitleMultiplayerServersQuotas);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::MultiplayerModels::TitleMultiplayerServersQuotas*, "PlayFab.MultiplayerModels", "TitleMultiplayerServersQuotas");
// Type namespace: PlayFab.MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.MultiplayerModels.TitleMultiplayerServersQuotas
  // [TokenAttribute] Offset: FFFFFFFF
  class TitleMultiplayerServersQuotas : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.CoreCapacity> CoreCapacities
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::CoreCapacity*>* CoreCapacities;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::CoreCapacity*>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::CoreCapacity*>*
    constexpr operator ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::CoreCapacity*>*() const noexcept {
      return CoreCapacities;
    }
    // Get instance field reference: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.CoreCapacity> CoreCapacities
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::CoreCapacity*>*& dyn_CoreCapacities();
    // public System.Void .ctor()
    // Offset: 0xBCD390
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TitleMultiplayerServersQuotas* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::TitleMultiplayerServersQuotas::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TitleMultiplayerServersQuotas*, creationType>()));
    }
  }; // PlayFab.MultiplayerModels.TitleMultiplayerServersQuotas
  #pragma pack(pop)
  static check_size<sizeof(TitleMultiplayerServersQuotas), 16 + sizeof(::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::CoreCapacity*>*)> __PlayFab_MultiplayerModels_TitleMultiplayerServersQuotasSizeCheck;
  static_assert(sizeof(TitleMultiplayerServersQuotas) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::MultiplayerModels::TitleMultiplayerServersQuotas::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
