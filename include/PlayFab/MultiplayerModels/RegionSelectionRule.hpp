// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PlayFab::MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Forward declaring type: CustomRegionSelectionRuleExpansion
  class CustomRegionSelectionRuleExpansion;
  // Forward declaring type: LinearRegionSelectionRuleExpansion
  class LinearRegionSelectionRuleExpansion;
}
// Completed forward declares
// Type namespace: PlayFab.MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Forward declaring type: RegionSelectionRule
  class RegionSelectionRule;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::MultiplayerModels::RegionSelectionRule);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::MultiplayerModels::RegionSelectionRule*, "PlayFab.MultiplayerModels", "RegionSelectionRule");
// Type namespace: PlayFab.MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // WARNING Size may be invalid!
  // Autogenerated type: PlayFab.MultiplayerModels.RegionSelectionRule
  // [TokenAttribute] Offset: FFFFFFFF
  class RegionSelectionRule : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public PlayFab.MultiplayerModels.CustomRegionSelectionRuleExpansion CustomExpansion
    // Size: 0x8
    // Offset: 0x10
    ::PlayFab::MultiplayerModels::CustomRegionSelectionRuleExpansion* CustomExpansion;
    // Field size check
    static_assert(sizeof(::PlayFab::MultiplayerModels::CustomRegionSelectionRuleExpansion*) == 0x8);
    // public PlayFab.MultiplayerModels.LinearRegionSelectionRuleExpansion LinearExpansion
    // Size: 0x8
    // Offset: 0x18
    ::PlayFab::MultiplayerModels::LinearRegionSelectionRuleExpansion* LinearExpansion;
    // Field size check
    static_assert(sizeof(::PlayFab::MultiplayerModels::LinearRegionSelectionRuleExpansion*) == 0x8);
    // public System.UInt32 MaxLatency
    // Size: 0x4
    // Offset: 0x20
    uint MaxLatency;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.String Name
    // Size: 0x8
    // Offset: 0x28
    ::StringW Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String Path
    // Size: 0x8
    // Offset: 0x30
    ::StringW Path;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Nullable`1<System.UInt32> SecondsUntilOptional
    // Size: 0xFFFFFFFF
    // Offset: 0x38
    ::System::Nullable_1<uint> SecondsUntilOptional;
    // public System.Double Weight
    // Size: 0x8
    // Offset: 0x40
    double Weight;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    public:
    // Get instance field reference: public PlayFab.MultiplayerModels.CustomRegionSelectionRuleExpansion CustomExpansion
    [[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::CustomRegionSelectionRuleExpansion*& dyn_CustomExpansion();
    // Get instance field reference: public PlayFab.MultiplayerModels.LinearRegionSelectionRuleExpansion LinearExpansion
    [[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::LinearRegionSelectionRuleExpansion*& dyn_LinearExpansion();
    // Get instance field reference: public System.UInt32 MaxLatency
    [[deprecated("Use field access instead!")]] uint& dyn_MaxLatency();
    // Get instance field reference: public System.String Name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Name();
    // Get instance field reference: public System.String Path
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Path();
    // Get instance field reference: public System.Nullable`1<System.UInt32> SecondsUntilOptional
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<uint>& dyn_SecondsUntilOptional();
    // Get instance field reference: public System.Double Weight
    [[deprecated("Use field access instead!")]] double& dyn_Weight();
    // public System.Void .ctor()
    // Offset: 0xBCD2F8
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RegionSelectionRule* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RegionSelectionRule::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RegionSelectionRule*, creationType>()));
    }
  }; // PlayFab.MultiplayerModels.RegionSelectionRule
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::MultiplayerModels::RegionSelectionRule::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
