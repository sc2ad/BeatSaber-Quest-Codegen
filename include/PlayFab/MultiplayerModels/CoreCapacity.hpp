// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: PlayFab.MultiplayerModels.AzureVmFamily
#include "PlayFab/MultiplayerModels/AzureVmFamily.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: PlayFab.MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Forward declaring type: CoreCapacity
  class CoreCapacity;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::MultiplayerModels::CoreCapacity);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::MultiplayerModels::CoreCapacity*, "PlayFab.MultiplayerModels", "CoreCapacity");
// Type namespace: PlayFab.MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // WARNING Size may be invalid!
  // Autogenerated type: PlayFab.MultiplayerModels.CoreCapacity
  // [TokenAttribute] Offset: FFFFFFFF
  class CoreCapacity : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public System.Int32 Available
    // Size: 0x4
    // Offset: 0x10
    int Available;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.String Region
    // Size: 0x8
    // Offset: 0x18
    ::StringW Region;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Int32 Total
    // Size: 0x4
    // Offset: 0x20
    int Total;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Nullable`1<PlayFab.MultiplayerModels.AzureVmFamily> VmFamily
    // Size: 0xFFFFFFFF
    // Offset: 0x24
    ::System::Nullable_1<::PlayFab::MultiplayerModels::AzureVmFamily> VmFamily;
    public:
    // Get instance field reference: public System.Int32 Available
    [[deprecated("Use field access instead!")]] int& dyn_Available();
    // Get instance field reference: public System.String Region
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Region();
    // Get instance field reference: public System.Int32 Total
    [[deprecated("Use field access instead!")]] int& dyn_Total();
    // Get instance field reference: public System.Nullable`1<PlayFab.MultiplayerModels.AzureVmFamily> VmFamily
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::MultiplayerModels::AzureVmFamily>& dyn_VmFamily();
    // public System.Void .ctor()
    // Offset: 0xBCCF78
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CoreCapacity* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CoreCapacity::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CoreCapacity*, creationType>()));
    }
  }; // PlayFab.MultiplayerModels.CoreCapacity
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::MultiplayerModels::CoreCapacity::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
