// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: PlayFab::MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Forward declaring type: ConnectedPlayer
  class ConnectedPlayer;
}
// Completed forward declares
// Type namespace: PlayFab.MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Forward declaring type: MultiplayerServerSummary
  class MultiplayerServerSummary;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::MultiplayerModels::MultiplayerServerSummary);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::MultiplayerModels::MultiplayerServerSummary*, "PlayFab.MultiplayerModels", "MultiplayerServerSummary");
// Type namespace: PlayFab.MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // WARNING Size may be invalid!
  // Autogenerated type: PlayFab.MultiplayerModels.MultiplayerServerSummary
  // [TokenAttribute] Offset: FFFFFFFF
  class MultiplayerServerSummary : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.ConnectedPlayer> ConnectedPlayers
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::ConnectedPlayer*>* ConnectedPlayers;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::ConnectedPlayer*>*) == 0x8);
    // public System.Nullable`1<System.DateTime> LastStateTransitionTime
    // Size: 0xFFFFFFFF
    // Offset: 0x18
    ::System::Nullable_1<::System::DateTime> LastStateTransitionTime;
    // public System.String Region
    // Size: 0x8
    // Offset: 0x28
    ::StringW Region;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String ServerId
    // Size: 0x8
    // Offset: 0x30
    ::StringW ServerId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String SessionId
    // Size: 0x8
    // Offset: 0x38
    ::StringW SessionId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String State
    // Size: 0x8
    // Offset: 0x40
    ::StringW State;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String VmId
    // Size: 0x8
    // Offset: 0x48
    ::StringW VmId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.ConnectedPlayer> ConnectedPlayers
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::ConnectedPlayer*>*& dyn_ConnectedPlayers();
    // Get instance field reference: public System.Nullable`1<System.DateTime> LastStateTransitionTime
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& dyn_LastStateTransitionTime();
    // Get instance field reference: public System.String Region
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Region();
    // Get instance field reference: public System.String ServerId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ServerId();
    // Get instance field reference: public System.String SessionId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_SessionId();
    // Get instance field reference: public System.String State
    [[deprecated("Use field access instead!")]] ::StringW& dyn_State();
    // Get instance field reference: public System.String VmId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_VmId();
    // public System.Void .ctor()
    // Offset: 0xBCD2C8
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MultiplayerServerSummary* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MultiplayerServerSummary::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MultiplayerServerSummary*, creationType>()));
    }
  }; // PlayFab.MultiplayerModels.MultiplayerServerSummary
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::MultiplayerModels::MultiplayerServerSummary::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
