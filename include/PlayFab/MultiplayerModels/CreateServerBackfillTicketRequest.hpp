// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabRequestCommon
#include "PlayFab/SharedModels/PlayFabRequestCommon.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: PlayFab::MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Forward declaring type: MatchmakingPlayerWithTeamAssignment
  class MatchmakingPlayerWithTeamAssignment;
  // Forward declaring type: ServerDetails
  class ServerDetails;
}
// Completed forward declares
// Type namespace: PlayFab.MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Forward declaring type: CreateServerBackfillTicketRequest
  class CreateServerBackfillTicketRequest;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::MultiplayerModels::CreateServerBackfillTicketRequest);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::MultiplayerModels::CreateServerBackfillTicketRequest*, "PlayFab.MultiplayerModels", "CreateServerBackfillTicketRequest");
// Type namespace: PlayFab.MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.MultiplayerModels.CreateServerBackfillTicketRequest
  // [TokenAttribute] Offset: FFFFFFFF
  class CreateServerBackfillTicketRequest : public ::PlayFab::SharedModels::PlayFabRequestCommon {
    public:
    public:
    // public System.Int32 GiveUpAfterSeconds
    // Size: 0x4
    // Offset: 0x18
    int GiveUpAfterSeconds;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: GiveUpAfterSeconds and: Members
    char __padding0[0x4] = {};
    // public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.MatchmakingPlayerWithTeamAssignment> Members
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingPlayerWithTeamAssignment*>* Members;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingPlayerWithTeamAssignment*>*) == 0x8);
    // public System.String QueueName
    // Size: 0x8
    // Offset: 0x28
    ::StringW QueueName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public PlayFab.MultiplayerModels.ServerDetails ServerDetails
    // Size: 0x8
    // Offset: 0x30
    ::PlayFab::MultiplayerModels::ServerDetails* ServerDetails;
    // Field size check
    static_assert(sizeof(::PlayFab::MultiplayerModels::ServerDetails*) == 0x8);
    public:
    // Deleting conversion operator: operator ::PlayFab::PlayFabAuthenticationContext*
    constexpr operator ::PlayFab::PlayFabAuthenticationContext*() const noexcept = delete;
    // Get instance field reference: public System.Int32 GiveUpAfterSeconds
    [[deprecated("Use field access instead!")]] int& dyn_GiveUpAfterSeconds();
    // Get instance field reference: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.MatchmakingPlayerWithTeamAssignment> Members
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingPlayerWithTeamAssignment*>*& dyn_Members();
    // Get instance field reference: public System.String QueueName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_QueueName();
    // Get instance field reference: public PlayFab.MultiplayerModels.ServerDetails ServerDetails
    [[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::ServerDetails*& dyn_ServerDetails();
    // public System.Void .ctor()
    // Offset: 0xBCCFC8
    // Implemented from: PlayFab.SharedModels.PlayFabRequestCommon
    // Base method: System.Void PlayFabRequestCommon::.ctor()
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CreateServerBackfillTicketRequest* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CreateServerBackfillTicketRequest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CreateServerBackfillTicketRequest*, creationType>()));
    }
  }; // PlayFab.MultiplayerModels.CreateServerBackfillTicketRequest
  #pragma pack(pop)
  static check_size<sizeof(CreateServerBackfillTicketRequest), 48 + sizeof(::PlayFab::MultiplayerModels::ServerDetails*)> __PlayFab_MultiplayerModels_CreateServerBackfillTicketRequestSizeCheck;
  static_assert(sizeof(CreateServerBackfillTicketRequest) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::MultiplayerModels::CreateServerBackfillTicketRequest::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
