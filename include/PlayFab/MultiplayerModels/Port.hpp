// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
// Including type: PlayFab.MultiplayerModels.ProtocolType
#include "PlayFab/MultiplayerModels/ProtocolType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: PlayFab.MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Forward declaring type: Port
  class Port;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::MultiplayerModels::Port);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::MultiplayerModels::Port*, "PlayFab.MultiplayerModels", "Port");
// Type namespace: PlayFab.MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.MultiplayerModels.Port
  // [TokenAttribute] Offset: FFFFFFFF
  class Port : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public System.String Name
    // Size: 0x8
    // Offset: 0x10
    ::StringW Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Int32 Num
    // Size: 0x4
    // Offset: 0x18
    int Num;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public PlayFab.MultiplayerModels.ProtocolType Protocol
    // Size: 0x4
    // Offset: 0x1C
    ::PlayFab::MultiplayerModels::ProtocolType Protocol;
    // Field size check
    static_assert(sizeof(::PlayFab::MultiplayerModels::ProtocolType) == 0x4);
    public:
    // Get instance field reference: public System.String Name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Name();
    // Get instance field reference: public System.Int32 Num
    [[deprecated("Use field access instead!")]] int& dyn_Num();
    // Get instance field reference: public PlayFab.MultiplayerModels.ProtocolType Protocol
    [[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::ProtocolType& dyn_Protocol();
    // public System.Void .ctor()
    // Offset: 0xBCD2E0
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Port* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::Port::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Port*, creationType>()));
    }
  }; // PlayFab.MultiplayerModels.Port
  #pragma pack(pop)
  static check_size<sizeof(Port), 28 + sizeof(::PlayFab::MultiplayerModels::ProtocolType)> __PlayFab_MultiplayerModels_PortSizeCheck;
  static_assert(sizeof(Port) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::MultiplayerModels::Port::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
