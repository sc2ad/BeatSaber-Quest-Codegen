// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabResultCommon
#include "PlayFab/SharedModels/PlayFabResultCommon.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: PlayFab.MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Forward declaring type: GetRemoteLoginEndpointResponse
  class GetRemoteLoginEndpointResponse;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::MultiplayerModels::GetRemoteLoginEndpointResponse);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::MultiplayerModels::GetRemoteLoginEndpointResponse*, "PlayFab.MultiplayerModels", "GetRemoteLoginEndpointResponse");
// Type namespace: PlayFab.MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.MultiplayerModels.GetRemoteLoginEndpointResponse
  // [TokenAttribute] Offset: FFFFFFFF
  class GetRemoteLoginEndpointResponse : public ::PlayFab::SharedModels::PlayFabResultCommon {
    public:
    public:
    // public System.String IPV4Address
    // Size: 0x8
    // Offset: 0x20
    ::StringW IPV4Address;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Int32 Port
    // Size: 0x4
    // Offset: 0x28
    int Port;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public System.String IPV4Address
    [[deprecated("Use field access instead!")]] ::StringW& dyn_IPV4Address();
    // Get instance field reference: public System.Int32 Port
    [[deprecated("Use field access instead!")]] int& dyn_Port();
    // public System.Void .ctor()
    // Offset: 0xBCD138
    // Implemented from: PlayFab.SharedModels.PlayFabResultCommon
    // Base method: System.Void PlayFabResultCommon::.ctor()
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GetRemoteLoginEndpointResponse* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetRemoteLoginEndpointResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GetRemoteLoginEndpointResponse*, creationType>()));
    }
  }; // PlayFab.MultiplayerModels.GetRemoteLoginEndpointResponse
  #pragma pack(pop)
  static check_size<sizeof(GetRemoteLoginEndpointResponse), 40 + sizeof(int)> __PlayFab_MultiplayerModels_GetRemoteLoginEndpointResponseSizeCheck;
  static_assert(sizeof(GetRemoteLoginEndpointResponse) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::MultiplayerModels::GetRemoteLoginEndpointResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
