// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabBaseModel
#include "PlayFab/SharedModels/PlayFabBaseModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: PlayFab.MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Forward declaring type: CurrentServerStats
  class CurrentServerStats;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::MultiplayerModels::CurrentServerStats);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::MultiplayerModels::CurrentServerStats*, "PlayFab.MultiplayerModels", "CurrentServerStats");
// Type namespace: PlayFab.MultiplayerModels
namespace PlayFab::MultiplayerModels {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.MultiplayerModels.CurrentServerStats
  // [TokenAttribute] Offset: FFFFFFFF
  class CurrentServerStats : public ::PlayFab::SharedModels::PlayFabBaseModel {
    public:
    public:
    // public System.Int32 Active
    // Size: 0x4
    // Offset: 0x10
    int Active;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 Propping
    // Size: 0x4
    // Offset: 0x14
    int Propping;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 StandingBy
    // Size: 0x4
    // Offset: 0x18
    int StandingBy;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 Total
    // Size: 0x4
    // Offset: 0x1C
    int Total;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public System.Int32 Active
    [[deprecated("Use field access instead!")]] int& dyn_Active();
    // Get instance field reference: public System.Int32 Propping
    [[deprecated("Use field access instead!")]] int& dyn_Propping();
    // Get instance field reference: public System.Int32 StandingBy
    [[deprecated("Use field access instead!")]] int& dyn_StandingBy();
    // Get instance field reference: public System.Int32 Total
    [[deprecated("Use field access instead!")]] int& dyn_Total();
    // public System.Void .ctor()
    // Offset: 0xBCCFE0
    // Implemented from: PlayFab.SharedModels.PlayFabBaseModel
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CurrentServerStats* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::CurrentServerStats::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CurrentServerStats*, creationType>()));
    }
  }; // PlayFab.MultiplayerModels.CurrentServerStats
  #pragma pack(pop)
  static check_size<sizeof(CurrentServerStats), 28 + sizeof(int)> __PlayFab_MultiplayerModels_CurrentServerStatsSizeCheck;
  static_assert(sizeof(CurrentServerStats) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::MultiplayerModels::CurrentServerStats::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
