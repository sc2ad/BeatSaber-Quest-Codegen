// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.PlayFabResultCommon
#include "PlayFab/SharedModels/PlayFabResultCommon.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: PlayFab.InsightsModels
namespace PlayFab::InsightsModels {
  // Forward declaring type: InsightsGetOperationStatusResponse
  class InsightsGetOperationStatusResponse;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::InsightsModels::InsightsGetOperationStatusResponse);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::InsightsModels::InsightsGetOperationStatusResponse*, "PlayFab.InsightsModels", "InsightsGetOperationStatusResponse");
// Type namespace: PlayFab.InsightsModels
namespace PlayFab::InsightsModels {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.InsightsModels.InsightsGetOperationStatusResponse
  // [TokenAttribute] Offset: FFFFFFFF
  class InsightsGetOperationStatusResponse : public ::PlayFab::SharedModels::PlayFabResultCommon {
    public:
    public:
    // public System.String Message
    // Size: 0x8
    // Offset: 0x20
    ::StringW Message;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.DateTime OperationCompletedTime
    // Size: 0x8
    // Offset: 0x28
    ::System::DateTime OperationCompletedTime;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    // public System.String OperationId
    // Size: 0x8
    // Offset: 0x30
    ::StringW OperationId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.DateTime OperationLastUpdated
    // Size: 0x8
    // Offset: 0x38
    ::System::DateTime OperationLastUpdated;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    // public System.DateTime OperationStartedTime
    // Size: 0x8
    // Offset: 0x40
    ::System::DateTime OperationStartedTime;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    // public System.String OperationType
    // Size: 0x8
    // Offset: 0x48
    ::StringW OperationType;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Int32 OperationValue
    // Size: 0x4
    // Offset: 0x50
    int OperationValue;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: OperationValue and: Status
    char __padding6[0x4] = {};
    // public System.String Status
    // Size: 0x8
    // Offset: 0x58
    ::StringW Status;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.String Message
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Message();
    // Get instance field reference: public System.DateTime OperationCompletedTime
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn_OperationCompletedTime();
    // Get instance field reference: public System.String OperationId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OperationId();
    // Get instance field reference: public System.DateTime OperationLastUpdated
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn_OperationLastUpdated();
    // Get instance field reference: public System.DateTime OperationStartedTime
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn_OperationStartedTime();
    // Get instance field reference: public System.String OperationType
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OperationType();
    // Get instance field reference: public System.Int32 OperationValue
    [[deprecated("Use field access instead!")]] int& dyn_OperationValue();
    // Get instance field reference: public System.String Status
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Status();
    // public System.Void .ctor()
    // Offset: 0xBB7290
    // Implemented from: PlayFab.SharedModels.PlayFabResultCommon
    // Base method: System.Void PlayFabResultCommon::.ctor()
    // Base method: System.Void PlayFabBaseModel::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InsightsGetOperationStatusResponse* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::InsightsModels::InsightsGetOperationStatusResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InsightsGetOperationStatusResponse*, creationType>()));
    }
  }; // PlayFab.InsightsModels.InsightsGetOperationStatusResponse
  #pragma pack(pop)
  static check_size<sizeof(InsightsGetOperationStatusResponse), 88 + sizeof(::StringW)> __PlayFab_InsightsModels_InsightsGetOperationStatusResponseSizeCheck;
  static_assert(sizeof(InsightsGetOperationStatusResponse) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::InsightsModels::InsightsGetOperationStatusResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
