// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: PlayFab.SharedModels
namespace PlayFab::SharedModels {
  // Forward declaring type: PlayFabBaseModel
  class PlayFabBaseModel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::SharedModels::PlayFabBaseModel);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::SharedModels::PlayFabBaseModel*, "PlayFab.SharedModels", "PlayFabBaseModel");
// Type namespace: PlayFab.SharedModels
namespace PlayFab::SharedModels {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.SharedModels.PlayFabBaseModel
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayFabBaseModel : public ::Il2CppObject {
    public:
    // public System.Void .ctor()
    // Offset: 0x1A55D74
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayFabBaseModel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::SharedModels::PlayFabBaseModel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayFabBaseModel*, creationType>()));
    }
    // public System.String ToJson()
    // Offset: 0x1A5793C
    ::StringW ToJson();
  }; // PlayFab.SharedModels.PlayFabBaseModel
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::SharedModels::PlayFabBaseModel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: PlayFab::SharedModels::PlayFabBaseModel::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (PlayFab::SharedModels::PlayFabBaseModel::*)()>(&PlayFab::SharedModels::PlayFabBaseModel::ToJson)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::SharedModels::PlayFabBaseModel*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
