// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.IPlayFabPlugin
#include "PlayFab/IPlayFabPlugin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: PlayFab
namespace PlayFab {
  // Forward declaring type: ISerializerPlugin
  class ISerializerPlugin;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::ISerializerPlugin);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::ISerializerPlugin*, "PlayFab", "ISerializerPlugin");
// Type namespace: PlayFab
namespace PlayFab {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.ISerializerPlugin
  // [TokenAttribute] Offset: FFFFFFFF
  class ISerializerPlugin/*, public ::PlayFab::IPlayFabPlugin*/ {
    public:
    // Creating interface conversion operator: operator ::PlayFab::IPlayFabPlugin
    operator ::PlayFab::IPlayFabPlugin() noexcept {
      return *reinterpret_cast<::PlayFab::IPlayFabPlugin*>(this);
    }
    // public T DeserializeObject(System.String serialized)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T DeserializeObject(::StringW serialized) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ISerializerPlugin::DeserializeObject");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::ISerializerPlugin*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method, serialized);
    }
    // public T DeserializeObject(System.String serialized, System.Object serializerStrategy)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T DeserializeObject(::StringW serialized, ::Il2CppObject* serializerStrategy) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::ISerializerPlugin::DeserializeObject");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::PlayFab::ISerializerPlugin*), -1));
      auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method, serialized, serializerStrategy);
    }
    // public System.Object DeserializeObject(System.String serialized)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* DeserializeObject(::StringW serialized);
    // public System.String SerializeObject(System.Object obj)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW SerializeObject(::Il2CppObject* obj);
    // public System.String SerializeObject(System.Object obj, System.Object serializerStrategy)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW SerializeObject(::Il2CppObject* obj, ::Il2CppObject* serializerStrategy);
  }; // PlayFab.ISerializerPlugin
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::ISerializerPlugin::DeserializeObject
// Il2CppName: DeserializeObject
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: PlayFab::ISerializerPlugin::DeserializeObject
// Il2CppName: DeserializeObject
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: PlayFab::ISerializerPlugin::DeserializeObject
// Il2CppName: DeserializeObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (PlayFab::ISerializerPlugin::*)(::StringW)>(&PlayFab::ISerializerPlugin::DeserializeObject)> {
  static const MethodInfo* get() {
    static auto* serialized = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::ISerializerPlugin*), "DeserializeObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serialized});
  }
};
// Writing MetadataGetter for method: PlayFab::ISerializerPlugin::SerializeObject
// Il2CppName: SerializeObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (PlayFab::ISerializerPlugin::*)(::Il2CppObject*)>(&PlayFab::ISerializerPlugin::SerializeObject)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::ISerializerPlugin*), "SerializeObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: PlayFab::ISerializerPlugin::SerializeObject
// Il2CppName: SerializeObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (PlayFab::ISerializerPlugin::*)(::Il2CppObject*, ::Il2CppObject*)>(&PlayFab::ISerializerPlugin::SerializeObject)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* serializerStrategy = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::ISerializerPlugin*), "SerializeObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, serializerStrategy});
  }
};
