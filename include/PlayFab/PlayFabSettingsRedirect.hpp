// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.PlayFabApiSettings
#include "PlayFab/PlayFabApiSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PlayFabSharedSettings
  class PlayFabSharedSettings;
}
// Completed forward declares
// Type namespace: PlayFab
namespace PlayFab {
  // Forward declaring type: PlayFabSettingsRedirect
  class PlayFabSettingsRedirect;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::PlayFabSettingsRedirect);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::PlayFabSettingsRedirect*, "PlayFab", "PlayFabSettingsRedirect");
// Type namespace: PlayFab
namespace PlayFab {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.PlayFabSettingsRedirect
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayFabSettingsRedirect : public ::PlayFab::PlayFabApiSettings {
    public:
    // Writing base type padding for base size: 0x43 to desired offset: 0x48
    char ___base_padding[0x5] = {};
    public:
    // private readonly System.Func`1<PlayFabSharedSettings> GetSO
    // Size: 0x8
    // Offset: 0x48
    ::System::Func_1<::GlobalNamespace::PlayFabSharedSettings*>* GetSO;
    // Field size check
    static_assert(sizeof(::System::Func_1<::GlobalNamespace::PlayFabSharedSettings*>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Func_1<::GlobalNamespace::PlayFabSharedSettings*>*
    constexpr operator ::System::Func_1<::GlobalNamespace::PlayFabSharedSettings*>*() const noexcept {
      return GetSO;
    }
    // Get instance field reference: private readonly System.Func`1<PlayFabSharedSettings> GetSO
    [[deprecated("Use field access instead!")]] ::System::Func_1<::GlobalNamespace::PlayFabSharedSettings*>*& dyn_GetSO();
    // public System.Void .ctor(System.Func`1<PlayFabSharedSettings> getSO)
    // Offset: 0x1A53678
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayFabSettingsRedirect* New_ctor(::System::Func_1<::GlobalNamespace::PlayFabSharedSettings*>* getSO) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabSettingsRedirect::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayFabSettingsRedirect*, creationType>(getSO)));
    }
    // public override System.String get_ProductionEnvironmentUrl()
    // Offset: 0x1A54D90
    // Implemented from: PlayFab.PlayFabApiSettings
    // Base method: System.String PlayFabApiSettings::get_ProductionEnvironmentUrl()
    ::StringW get_ProductionEnvironmentUrl();
    // public override System.Void set_ProductionEnvironmentUrl(System.String value)
    // Offset: 0x1A54E3C
    // Implemented from: PlayFab.PlayFabApiSettings
    // Base method: System.Void PlayFabApiSettings::set_ProductionEnvironmentUrl(System.String value)
    void set_ProductionEnvironmentUrl(::StringW value);
    // override System.String get_VerticalName()
    // Offset: 0x1A54EEC
    // Implemented from: PlayFab.PlayFabApiSettings
    // Base method: System.String PlayFabApiSettings::get_VerticalName()
    ::StringW get_VerticalName();
    // override System.Void set_VerticalName(System.String value)
    // Offset: 0x1A54F98
    // Implemented from: PlayFab.PlayFabApiSettings
    // Base method: System.Void PlayFabApiSettings::set_VerticalName(System.String value)
    void set_VerticalName(::StringW value);
    // public override System.String get_TitleId()
    // Offset: 0x1A55048
    // Implemented from: PlayFab.PlayFabApiSettings
    // Base method: System.String PlayFabApiSettings::get_TitleId()
    ::StringW get_TitleId();
    // public override System.Void set_TitleId(System.String value)
    // Offset: 0x1A550F4
    // Implemented from: PlayFab.PlayFabApiSettings
    // Base method: System.Void PlayFabApiSettings::set_TitleId(System.String value)
    void set_TitleId(::StringW value);
    // public override System.String get_AdvertisingIdType()
    // Offset: 0x1A551A4
    // Implemented from: PlayFab.PlayFabApiSettings
    // Base method: System.String PlayFabApiSettings::get_AdvertisingIdType()
    ::StringW get_AdvertisingIdType();
    // public override System.Void set_AdvertisingIdType(System.String value)
    // Offset: 0x1A55250
    // Implemented from: PlayFab.PlayFabApiSettings
    // Base method: System.Void PlayFabApiSettings::set_AdvertisingIdType(System.String value)
    void set_AdvertisingIdType(::StringW value);
    // public override System.String get_AdvertisingIdValue()
    // Offset: 0x1A55300
    // Implemented from: PlayFab.PlayFabApiSettings
    // Base method: System.String PlayFabApiSettings::get_AdvertisingIdValue()
    ::StringW get_AdvertisingIdValue();
    // public override System.Void set_AdvertisingIdValue(System.String value)
    // Offset: 0x1A553AC
    // Implemented from: PlayFab.PlayFabApiSettings
    // Base method: System.Void PlayFabApiSettings::set_AdvertisingIdValue(System.String value)
    void set_AdvertisingIdValue(::StringW value);
    // public override System.Boolean get_DisableAdvertising()
    // Offset: 0x1A5545C
    // Implemented from: PlayFab.PlayFabApiSettings
    // Base method: System.Boolean PlayFabApiSettings::get_DisableAdvertising()
    bool get_DisableAdvertising();
    // public override System.Void set_DisableAdvertising(System.Boolean value)
    // Offset: 0x1A55508
    // Implemented from: PlayFab.PlayFabApiSettings
    // Base method: System.Void PlayFabApiSettings::set_DisableAdvertising(System.Boolean value)
    void set_DisableAdvertising(bool value);
    // public override System.Boolean get_DisableDeviceInfo()
    // Offset: 0x1A555C4
    // Implemented from: PlayFab.PlayFabApiSettings
    // Base method: System.Boolean PlayFabApiSettings::get_DisableDeviceInfo()
    bool get_DisableDeviceInfo();
    // public override System.Void set_DisableDeviceInfo(System.Boolean value)
    // Offset: 0x1A55670
    // Implemented from: PlayFab.PlayFabApiSettings
    // Base method: System.Void PlayFabApiSettings::set_DisableDeviceInfo(System.Boolean value)
    void set_DisableDeviceInfo(bool value);
    // public override System.Boolean get_DisableFocusTimeCollection()
    // Offset: 0x1A5572C
    // Implemented from: PlayFab.PlayFabApiSettings
    // Base method: System.Boolean PlayFabApiSettings::get_DisableFocusTimeCollection()
    bool get_DisableFocusTimeCollection();
    // public override System.Void set_DisableFocusTimeCollection(System.Boolean value)
    // Offset: 0x1A557D8
    // Implemented from: PlayFab.PlayFabApiSettings
    // Base method: System.Void PlayFabApiSettings::set_DisableFocusTimeCollection(System.Boolean value)
    void set_DisableFocusTimeCollection(bool value);
  }; // PlayFab.PlayFabSettingsRedirect
  #pragma pack(pop)
  static check_size<sizeof(PlayFabSettingsRedirect), 72 + sizeof(::System::Func_1<::GlobalNamespace::PlayFabSharedSettings*>*)> __PlayFab_PlayFabSettingsRedirectSizeCheck;
  static_assert(sizeof(PlayFabSettingsRedirect) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::get_ProductionEnvironmentUrl
// Il2CppName: get_ProductionEnvironmentUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (PlayFab::PlayFabSettingsRedirect::*)()>(&PlayFab::PlayFabSettingsRedirect::get_ProductionEnvironmentUrl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettingsRedirect*), "get_ProductionEnvironmentUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::set_ProductionEnvironmentUrl
// Il2CppName: set_ProductionEnvironmentUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::PlayFabSettingsRedirect::*)(::StringW)>(&PlayFab::PlayFabSettingsRedirect::set_ProductionEnvironmentUrl)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettingsRedirect*), "set_ProductionEnvironmentUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::get_VerticalName
// Il2CppName: get_VerticalName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (PlayFab::PlayFabSettingsRedirect::*)()>(&PlayFab::PlayFabSettingsRedirect::get_VerticalName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettingsRedirect*), "get_VerticalName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::set_VerticalName
// Il2CppName: set_VerticalName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::PlayFabSettingsRedirect::*)(::StringW)>(&PlayFab::PlayFabSettingsRedirect::set_VerticalName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettingsRedirect*), "set_VerticalName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::get_TitleId
// Il2CppName: get_TitleId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (PlayFab::PlayFabSettingsRedirect::*)()>(&PlayFab::PlayFabSettingsRedirect::get_TitleId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettingsRedirect*), "get_TitleId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::set_TitleId
// Il2CppName: set_TitleId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::PlayFabSettingsRedirect::*)(::StringW)>(&PlayFab::PlayFabSettingsRedirect::set_TitleId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettingsRedirect*), "set_TitleId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::get_AdvertisingIdType
// Il2CppName: get_AdvertisingIdType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (PlayFab::PlayFabSettingsRedirect::*)()>(&PlayFab::PlayFabSettingsRedirect::get_AdvertisingIdType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettingsRedirect*), "get_AdvertisingIdType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::set_AdvertisingIdType
// Il2CppName: set_AdvertisingIdType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::PlayFabSettingsRedirect::*)(::StringW)>(&PlayFab::PlayFabSettingsRedirect::set_AdvertisingIdType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettingsRedirect*), "set_AdvertisingIdType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::get_AdvertisingIdValue
// Il2CppName: get_AdvertisingIdValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (PlayFab::PlayFabSettingsRedirect::*)()>(&PlayFab::PlayFabSettingsRedirect::get_AdvertisingIdValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettingsRedirect*), "get_AdvertisingIdValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::set_AdvertisingIdValue
// Il2CppName: set_AdvertisingIdValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::PlayFabSettingsRedirect::*)(::StringW)>(&PlayFab::PlayFabSettingsRedirect::set_AdvertisingIdValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettingsRedirect*), "set_AdvertisingIdValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::get_DisableAdvertising
// Il2CppName: get_DisableAdvertising
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayFab::PlayFabSettingsRedirect::*)()>(&PlayFab::PlayFabSettingsRedirect::get_DisableAdvertising)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettingsRedirect*), "get_DisableAdvertising", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::set_DisableAdvertising
// Il2CppName: set_DisableAdvertising
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::PlayFabSettingsRedirect::*)(bool)>(&PlayFab::PlayFabSettingsRedirect::set_DisableAdvertising)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettingsRedirect*), "set_DisableAdvertising", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::get_DisableDeviceInfo
// Il2CppName: get_DisableDeviceInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayFab::PlayFabSettingsRedirect::*)()>(&PlayFab::PlayFabSettingsRedirect::get_DisableDeviceInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettingsRedirect*), "get_DisableDeviceInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::set_DisableDeviceInfo
// Il2CppName: set_DisableDeviceInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::PlayFabSettingsRedirect::*)(bool)>(&PlayFab::PlayFabSettingsRedirect::set_DisableDeviceInfo)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettingsRedirect*), "set_DisableDeviceInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::get_DisableFocusTimeCollection
// Il2CppName: get_DisableFocusTimeCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayFab::PlayFabSettingsRedirect::*)()>(&PlayFab::PlayFabSettingsRedirect::get_DisableFocusTimeCollection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettingsRedirect*), "get_DisableFocusTimeCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabSettingsRedirect::set_DisableFocusTimeCollection
// Il2CppName: set_DisableFocusTimeCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::PlayFabSettingsRedirect::*)(bool)>(&PlayFab::PlayFabSettingsRedirect::set_DisableFocusTimeCollection)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabSettingsRedirect*), "set_DisableFocusTimeCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
