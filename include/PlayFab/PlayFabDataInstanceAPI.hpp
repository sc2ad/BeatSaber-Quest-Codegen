// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.SharedModels.IPlayFabInstanceApi
#include "PlayFab/SharedModels/IPlayFabInstanceApi.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PlayFab
namespace PlayFab {
  // Forward declaring type: PlayFabApiSettings
  class PlayFabApiSettings;
  // Forward declaring type: PlayFabAuthenticationContext
  class PlayFabAuthenticationContext;
  // Forward declaring type: PlayFabError
  class PlayFabError;
}
// Forward declaring namespace: PlayFab::DataModels
namespace PlayFab::DataModels {
  // Forward declaring type: AbortFileUploadsRequest
  class AbortFileUploadsRequest;
  // Forward declaring type: AbortFileUploadsResponse
  class AbortFileUploadsResponse;
  // Forward declaring type: DeleteFilesRequest
  class DeleteFilesRequest;
  // Forward declaring type: DeleteFilesResponse
  class DeleteFilesResponse;
  // Forward declaring type: FinalizeFileUploadsRequest
  class FinalizeFileUploadsRequest;
  // Forward declaring type: FinalizeFileUploadsResponse
  class FinalizeFileUploadsResponse;
  // Forward declaring type: GetFilesRequest
  class GetFilesRequest;
  // Forward declaring type: GetFilesResponse
  class GetFilesResponse;
  // Forward declaring type: GetObjectsRequest
  class GetObjectsRequest;
  // Forward declaring type: GetObjectsResponse
  class GetObjectsResponse;
  // Forward declaring type: InitiateFileUploadsRequest
  class InitiateFileUploadsRequest;
  // Forward declaring type: InitiateFileUploadsResponse
  class InitiateFileUploadsResponse;
  // Forward declaring type: SetObjectsRequest
  class SetObjectsRequest;
  // Forward declaring type: SetObjectsResponse
  class SetObjectsResponse;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: PlayFab
namespace PlayFab {
  // Forward declaring type: PlayFabDataInstanceAPI
  class PlayFabDataInstanceAPI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::PlayFabDataInstanceAPI);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::PlayFabDataInstanceAPI*, "PlayFab", "PlayFabDataInstanceAPI");
// Type namespace: PlayFab
namespace PlayFab {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.PlayFabDataInstanceAPI
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayFabDataInstanceAPI : public ::Il2CppObject/*, public ::PlayFab::SharedModels::IPlayFabInstanceApi*/ {
    public:
    public:
    // public readonly PlayFab.PlayFabApiSettings apiSettings
    // Size: 0x8
    // Offset: 0x10
    ::PlayFab::PlayFabApiSettings* apiSettings;
    // Field size check
    static_assert(sizeof(::PlayFab::PlayFabApiSettings*) == 0x8);
    // public readonly PlayFab.PlayFabAuthenticationContext authenticationContext
    // Size: 0x8
    // Offset: 0x18
    ::PlayFab::PlayFabAuthenticationContext* authenticationContext;
    // Field size check
    static_assert(sizeof(::PlayFab::PlayFabAuthenticationContext*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::PlayFab::SharedModels::IPlayFabInstanceApi
    operator ::PlayFab::SharedModels::IPlayFabInstanceApi() noexcept {
      return *reinterpret_cast<::PlayFab::SharedModels::IPlayFabInstanceApi*>(this);
    }
    // Get instance field reference: public readonly PlayFab.PlayFabApiSettings apiSettings
    [[deprecated("Use field access instead!")]] ::PlayFab::PlayFabApiSettings*& dyn_apiSettings();
    // Get instance field reference: public readonly PlayFab.PlayFabAuthenticationContext authenticationContext
    [[deprecated("Use field access instead!")]] ::PlayFab::PlayFabAuthenticationContext*& dyn_authenticationContext();
    // public System.Void .ctor(PlayFab.PlayFabAuthenticationContext context)
    // Offset: 0x163AD34
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayFabDataInstanceAPI* New_ctor(::PlayFab::PlayFabAuthenticationContext* context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataInstanceAPI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayFabDataInstanceAPI*, creationType>(context)));
    }
    // public System.Void .ctor(PlayFab.PlayFabApiSettings settings, PlayFab.PlayFabAuthenticationContext context)
    // Offset: 0x163ADD0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayFabDataInstanceAPI* New_ctor(::PlayFab::PlayFabApiSettings* settings, ::PlayFab::PlayFabAuthenticationContext* context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::PlayFabDataInstanceAPI::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayFabDataInstanceAPI*, creationType>(settings, context)));
    }
    // public System.Boolean IsEntityLoggedIn()
    // Offset: 0x163AE70
    bool IsEntityLoggedIn();
    // public System.Void ForgetAllCredentials()
    // Offset: 0x163AE84
    void ForgetAllCredentials();
    // public System.Void AbortFileUploads(PlayFab.DataModels.AbortFileUploadsRequest request, System.Action`1<PlayFab.DataModels.AbortFileUploadsResponse> resultCallback, System.Action`1<PlayFab.PlayFabError> errorCallback, System.Object customData, System.Collections.Generic.Dictionary`2<System.String,System.String> extraHeaders)
    // Offset: 0x163AE98
    void AbortFileUploads(::PlayFab::DataModels::AbortFileUploadsRequest* request, ::System::Action_1<::PlayFab::DataModels::AbortFileUploadsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders);
    // public System.Void DeleteFiles(PlayFab.DataModels.DeleteFilesRequest request, System.Action`1<PlayFab.DataModels.DeleteFilesResponse> resultCallback, System.Action`1<PlayFab.PlayFabError> errorCallback, System.Object customData, System.Collections.Generic.Dictionary`2<System.String,System.String> extraHeaders)
    // Offset: 0x163B004
    void DeleteFiles(::PlayFab::DataModels::DeleteFilesRequest* request, ::System::Action_1<::PlayFab::DataModels::DeleteFilesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders);
    // public System.Void FinalizeFileUploads(PlayFab.DataModels.FinalizeFileUploadsRequest request, System.Action`1<PlayFab.DataModels.FinalizeFileUploadsResponse> resultCallback, System.Action`1<PlayFab.PlayFabError> errorCallback, System.Object customData, System.Collections.Generic.Dictionary`2<System.String,System.String> extraHeaders)
    // Offset: 0x163B170
    void FinalizeFileUploads(::PlayFab::DataModels::FinalizeFileUploadsRequest* request, ::System::Action_1<::PlayFab::DataModels::FinalizeFileUploadsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders);
    // public System.Void GetFiles(PlayFab.DataModels.GetFilesRequest request, System.Action`1<PlayFab.DataModels.GetFilesResponse> resultCallback, System.Action`1<PlayFab.PlayFabError> errorCallback, System.Object customData, System.Collections.Generic.Dictionary`2<System.String,System.String> extraHeaders)
    // Offset: 0x163B2DC
    void GetFiles(::PlayFab::DataModels::GetFilesRequest* request, ::System::Action_1<::PlayFab::DataModels::GetFilesResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders);
    // public System.Void GetObjects(PlayFab.DataModels.GetObjectsRequest request, System.Action`1<PlayFab.DataModels.GetObjectsResponse> resultCallback, System.Action`1<PlayFab.PlayFabError> errorCallback, System.Object customData, System.Collections.Generic.Dictionary`2<System.String,System.String> extraHeaders)
    // Offset: 0x163B448
    void GetObjects(::PlayFab::DataModels::GetObjectsRequest* request, ::System::Action_1<::PlayFab::DataModels::GetObjectsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders);
    // public System.Void InitiateFileUploads(PlayFab.DataModels.InitiateFileUploadsRequest request, System.Action`1<PlayFab.DataModels.InitiateFileUploadsResponse> resultCallback, System.Action`1<PlayFab.PlayFabError> errorCallback, System.Object customData, System.Collections.Generic.Dictionary`2<System.String,System.String> extraHeaders)
    // Offset: 0x163B5B4
    void InitiateFileUploads(::PlayFab::DataModels::InitiateFileUploadsRequest* request, ::System::Action_1<::PlayFab::DataModels::InitiateFileUploadsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders);
    // public System.Void SetObjects(PlayFab.DataModels.SetObjectsRequest request, System.Action`1<PlayFab.DataModels.SetObjectsResponse> resultCallback, System.Action`1<PlayFab.PlayFabError> errorCallback, System.Object customData, System.Collections.Generic.Dictionary`2<System.String,System.String> extraHeaders)
    // Offset: 0x163B720
    void SetObjects(::PlayFab::DataModels::SetObjectsRequest* request, ::System::Action_1<::PlayFab::DataModels::SetObjectsResponse*>* resultCallback, ::System::Action_1<::PlayFab::PlayFabError*>* errorCallback, ::Il2CppObject* customData, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* extraHeaders);
  }; // PlayFab.PlayFabDataInstanceAPI
  #pragma pack(pop)
  static check_size<sizeof(PlayFabDataInstanceAPI), 24 + sizeof(::PlayFab::PlayFabAuthenticationContext*)> __PlayFab_PlayFabDataInstanceAPISizeCheck;
  static_assert(sizeof(PlayFabDataInstanceAPI) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::PlayFabDataInstanceAPI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: PlayFab::PlayFabDataInstanceAPI::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: PlayFab::PlayFabDataInstanceAPI::IsEntityLoggedIn
// Il2CppName: IsEntityLoggedIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayFab::PlayFabDataInstanceAPI::*)()>(&PlayFab::PlayFabDataInstanceAPI::IsEntityLoggedIn)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabDataInstanceAPI*), "IsEntityLoggedIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabDataInstanceAPI::ForgetAllCredentials
// Il2CppName: ForgetAllCredentials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::PlayFabDataInstanceAPI::*)()>(&PlayFab::PlayFabDataInstanceAPI::ForgetAllCredentials)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabDataInstanceAPI*), "ForgetAllCredentials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabDataInstanceAPI::AbortFileUploads
// Il2CppName: AbortFileUploads
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::PlayFabDataInstanceAPI::*)(::PlayFab::DataModels::AbortFileUploadsRequest*, ::System::Action_1<::PlayFab::DataModels::AbortFileUploadsResponse*>*, ::System::Action_1<::PlayFab::PlayFabError*>*, ::Il2CppObject*, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&PlayFab::PlayFabDataInstanceAPI::AbortFileUploads)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("PlayFab.DataModels", "AbortFileUploadsRequest")->byval_arg;
    static auto* resultCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab.DataModels", "AbortFileUploadsResponse")})->byval_arg;
    static auto* errorCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")})->byval_arg;
    static auto* customData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* extraHeaders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabDataInstanceAPI*), "AbortFileUploads", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, resultCallback, errorCallback, customData, extraHeaders});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabDataInstanceAPI::DeleteFiles
// Il2CppName: DeleteFiles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::PlayFabDataInstanceAPI::*)(::PlayFab::DataModels::DeleteFilesRequest*, ::System::Action_1<::PlayFab::DataModels::DeleteFilesResponse*>*, ::System::Action_1<::PlayFab::PlayFabError*>*, ::Il2CppObject*, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&PlayFab::PlayFabDataInstanceAPI::DeleteFiles)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("PlayFab.DataModels", "DeleteFilesRequest")->byval_arg;
    static auto* resultCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab.DataModels", "DeleteFilesResponse")})->byval_arg;
    static auto* errorCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")})->byval_arg;
    static auto* customData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* extraHeaders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabDataInstanceAPI*), "DeleteFiles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, resultCallback, errorCallback, customData, extraHeaders});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabDataInstanceAPI::FinalizeFileUploads
// Il2CppName: FinalizeFileUploads
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::PlayFabDataInstanceAPI::*)(::PlayFab::DataModels::FinalizeFileUploadsRequest*, ::System::Action_1<::PlayFab::DataModels::FinalizeFileUploadsResponse*>*, ::System::Action_1<::PlayFab::PlayFabError*>*, ::Il2CppObject*, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&PlayFab::PlayFabDataInstanceAPI::FinalizeFileUploads)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("PlayFab.DataModels", "FinalizeFileUploadsRequest")->byval_arg;
    static auto* resultCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab.DataModels", "FinalizeFileUploadsResponse")})->byval_arg;
    static auto* errorCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")})->byval_arg;
    static auto* customData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* extraHeaders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabDataInstanceAPI*), "FinalizeFileUploads", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, resultCallback, errorCallback, customData, extraHeaders});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabDataInstanceAPI::GetFiles
// Il2CppName: GetFiles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::PlayFabDataInstanceAPI::*)(::PlayFab::DataModels::GetFilesRequest*, ::System::Action_1<::PlayFab::DataModels::GetFilesResponse*>*, ::System::Action_1<::PlayFab::PlayFabError*>*, ::Il2CppObject*, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&PlayFab::PlayFabDataInstanceAPI::GetFiles)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("PlayFab.DataModels", "GetFilesRequest")->byval_arg;
    static auto* resultCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab.DataModels", "GetFilesResponse")})->byval_arg;
    static auto* errorCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")})->byval_arg;
    static auto* customData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* extraHeaders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabDataInstanceAPI*), "GetFiles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, resultCallback, errorCallback, customData, extraHeaders});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabDataInstanceAPI::GetObjects
// Il2CppName: GetObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::PlayFabDataInstanceAPI::*)(::PlayFab::DataModels::GetObjectsRequest*, ::System::Action_1<::PlayFab::DataModels::GetObjectsResponse*>*, ::System::Action_1<::PlayFab::PlayFabError*>*, ::Il2CppObject*, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&PlayFab::PlayFabDataInstanceAPI::GetObjects)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("PlayFab.DataModels", "GetObjectsRequest")->byval_arg;
    static auto* resultCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab.DataModels", "GetObjectsResponse")})->byval_arg;
    static auto* errorCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")})->byval_arg;
    static auto* customData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* extraHeaders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabDataInstanceAPI*), "GetObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, resultCallback, errorCallback, customData, extraHeaders});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabDataInstanceAPI::InitiateFileUploads
// Il2CppName: InitiateFileUploads
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::PlayFabDataInstanceAPI::*)(::PlayFab::DataModels::InitiateFileUploadsRequest*, ::System::Action_1<::PlayFab::DataModels::InitiateFileUploadsResponse*>*, ::System::Action_1<::PlayFab::PlayFabError*>*, ::Il2CppObject*, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&PlayFab::PlayFabDataInstanceAPI::InitiateFileUploads)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("PlayFab.DataModels", "InitiateFileUploadsRequest")->byval_arg;
    static auto* resultCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab.DataModels", "InitiateFileUploadsResponse")})->byval_arg;
    static auto* errorCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")})->byval_arg;
    static auto* customData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* extraHeaders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabDataInstanceAPI*), "InitiateFileUploads", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, resultCallback, errorCallback, customData, extraHeaders});
  }
};
// Writing MetadataGetter for method: PlayFab::PlayFabDataInstanceAPI::SetObjects
// Il2CppName: SetObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::PlayFabDataInstanceAPI::*)(::PlayFab::DataModels::SetObjectsRequest*, ::System::Action_1<::PlayFab::DataModels::SetObjectsResponse*>*, ::System::Action_1<::PlayFab::PlayFabError*>*, ::Il2CppObject*, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*)>(&PlayFab::PlayFabDataInstanceAPI::SetObjects)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("PlayFab.DataModels", "SetObjectsRequest")->byval_arg;
    static auto* resultCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab.DataModels", "SetObjectsResponse")})->byval_arg;
    static auto* errorCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")})->byval_arg;
    static auto* customData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* extraHeaders = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::PlayFabDataInstanceAPI*), "SetObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, resultCallback, errorCallback, customData, extraHeaders});
  }
};
