// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: PlayFab.Internal
namespace PlayFab::Internal {
  // Forward declaring type: Log
  class Log;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::Internal::Log);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::Internal::Log*, "PlayFab.Internal", "Log");
// Type namespace: PlayFab.Internal
namespace PlayFab::Internal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.Internal.Log
  // [TokenAttribute] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: 973E9C
  class Log : public ::Il2CppObject {
    public:
    // static public System.Void Debug(System.String text, params System.Object[] args)
    // Offset: 0xBB72E0
    static void Debug(::StringW text, ::ArrayW<::Il2CppObject*> args);
    // static public System.Void Info(System.String text, params System.Object[] args)
    // Offset: 0xBB74D8
    static void Info(::StringW text, ::ArrayW<::Il2CppObject*> args);
    // static public System.Void Warning(System.String text, params System.Object[] args)
    // Offset: 0xBB75E0
    static void Warning(::StringW text, ::ArrayW<::Il2CppObject*> args);
    // static public System.Void Error(System.String text, params System.Object[] args)
    // Offset: 0xBB76E8
    static void Error(::StringW text, ::ArrayW<::Il2CppObject*> args);
  }; // PlayFab.Internal.Log
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::Internal::Log::Debug
// Il2CppName: Debug
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::ArrayW<::Il2CppObject*>)>(&PlayFab::Internal::Log::Debug)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Internal::Log*), "Debug", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text, args});
  }
};
// Writing MetadataGetter for method: PlayFab::Internal::Log::Info
// Il2CppName: Info
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::ArrayW<::Il2CppObject*>)>(&PlayFab::Internal::Log::Info)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Internal::Log*), "Info", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text, args});
  }
};
// Writing MetadataGetter for method: PlayFab::Internal::Log::Warning
// Il2CppName: Warning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::ArrayW<::Il2CppObject*>)>(&PlayFab::Internal::Log::Warning)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Internal::Log*), "Warning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text, args});
  }
};
// Writing MetadataGetter for method: PlayFab::Internal::Log::Error
// Il2CppName: Error
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::ArrayW<::Il2CppObject*>)>(&PlayFab::Internal::Log::Error)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Internal::Log*), "Error", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text, args});
  }
};
