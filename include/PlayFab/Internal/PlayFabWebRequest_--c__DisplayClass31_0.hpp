// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayFab.Internal.PlayFabWebRequest
#include "PlayFab/Internal/PlayFabWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PlayFab::Internal
namespace PlayFab::Internal {
  // Forward declaring type: CallRequestContainer
  class CallRequestContainer;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PlayFab::Internal::PlayFabWebRequest::$$c__DisplayClass31_0);
DEFINE_IL2CPP_ARG_TYPE(::PlayFab::Internal::PlayFabWebRequest::$$c__DisplayClass31_0*, "PlayFab.Internal", "PlayFabWebRequest/<>c__DisplayClass31_0");
// Type namespace: PlayFab.Internal
namespace PlayFab::Internal {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: PlayFab.Internal.PlayFabWebRequest/PlayFab.Internal.<>c__DisplayClass31_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class PlayFabWebRequest::$$c__DisplayClass31_0 : public ::Il2CppObject {
    public:
    public:
    // public PlayFab.Internal.CallRequestContainer reqContainer
    // Size: 0x8
    // Offset: 0x10
    ::PlayFab::Internal::CallRequestContainer* reqContainer;
    // Field size check
    static_assert(sizeof(::PlayFab::Internal::CallRequestContainer*) == 0x8);
    public:
    // Creating conversion operator: operator ::PlayFab::Internal::CallRequestContainer*
    constexpr operator ::PlayFab::Internal::CallRequestContainer*() const noexcept {
      return reqContainer;
    }
    // Get instance field reference: public PlayFab.Internal.CallRequestContainer reqContainer
    [[deprecated("Use field access instead!")]] ::PlayFab::Internal::CallRequestContainer*& dyn_reqContainer();
    // public System.Void .ctor()
    // Offset: 0xBC0FBC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayFabWebRequest::$$c__DisplayClass31_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::Internal::PlayFabWebRequest::$$c__DisplayClass31_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayFabWebRequest::$$c__DisplayClass31_0*, creationType>()));
    }
    // System.Void <ProcessJsonResponse>b__0()
    // Offset: 0xBC1768
    void $ProcessJsonResponse$b__0();
    // System.Void <ProcessJsonResponse>b__1()
    // Offset: 0xBC178C
    void $ProcessJsonResponse$b__1();
  }; // PlayFab.Internal.PlayFabWebRequest/PlayFab.Internal.<>c__DisplayClass31_0
  #pragma pack(pop)
  static check_size<sizeof(PlayFabWebRequest::$$c__DisplayClass31_0), 16 + sizeof(::PlayFab::Internal::CallRequestContainer*)> __PlayFab_Internal_PlayFabWebRequest_$$c__DisplayClass31_0SizeCheck;
  static_assert(sizeof(PlayFabWebRequest::$$c__DisplayClass31_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PlayFab::Internal::PlayFabWebRequest::$$c__DisplayClass31_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: PlayFab::Internal::PlayFabWebRequest::$$c__DisplayClass31_0::$ProcessJsonResponse$b__0
// Il2CppName: <ProcessJsonResponse>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::Internal::PlayFabWebRequest::$$c__DisplayClass31_0::*)()>(&PlayFab::Internal::PlayFabWebRequest::$$c__DisplayClass31_0::$ProcessJsonResponse$b__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Internal::PlayFabWebRequest::$$c__DisplayClass31_0*), "<ProcessJsonResponse>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayFab::Internal::PlayFabWebRequest::$$c__DisplayClass31_0::$ProcessJsonResponse$b__1
// Il2CppName: <ProcessJsonResponse>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayFab::Internal::PlayFabWebRequest::$$c__DisplayClass31_0::*)()>(&PlayFab::Internal::PlayFabWebRequest::$$c__DisplayClass31_0::$ProcessJsonResponse$b__1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayFab::Internal::PlayFabWebRequest::$$c__DisplayClass31_0*), "<ProcessJsonResponse>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
