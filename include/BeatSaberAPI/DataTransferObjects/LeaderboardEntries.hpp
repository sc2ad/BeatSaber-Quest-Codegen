// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: BeatSaberAPI::DataTransferObjects
namespace BeatSaberAPI::DataTransferObjects {
  // Forward declaring type: LeaderboardEntry
  class LeaderboardEntry;
}
// Completed forward declares
// Type namespace: BeatSaberAPI.DataTransferObjects
namespace BeatSaberAPI::DataTransferObjects {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: BeatSaberAPI.DataTransferObjects.LeaderboardEntries
  // [TokenAttribute] Offset: FFFFFFFF
  class LeaderboardEntries : public ::Il2CppObject {
    public:
    // public BeatSaberAPI.DataTransferObjects.LeaderboardEntry[] entries
    // Size: 0x8
    // Offset: 0x10
    ::Array<BeatSaberAPI::DataTransferObjects::LeaderboardEntry*>* entries;
    // Field size check
    static_assert(sizeof(::Array<BeatSaberAPI::DataTransferObjects::LeaderboardEntry*>*) == 0x8);
    // Creating value type constructor for type: LeaderboardEntries
    LeaderboardEntries(::Array<BeatSaberAPI::DataTransferObjects::LeaderboardEntry*>* entries_ = {}) noexcept : entries{entries_} {}
    // Creating conversion operator: operator ::Array<BeatSaberAPI::DataTransferObjects::LeaderboardEntry*>*
    constexpr operator ::Array<BeatSaberAPI::DataTransferObjects::LeaderboardEntry*>*() const noexcept {
      return entries;
    }
    // Get instance field reference: public BeatSaberAPI.DataTransferObjects.LeaderboardEntry[] entries
    ::Array<BeatSaberAPI::DataTransferObjects::LeaderboardEntry*>*& dyn_entries();
    // public System.Void .ctor()
    // Offset: 0x126F430
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LeaderboardEntries* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("BeatSaberAPI::DataTransferObjects::LeaderboardEntries::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LeaderboardEntries*, creationType>()));
    }
  }; // BeatSaberAPI.DataTransferObjects.LeaderboardEntries
  #pragma pack(pop)
  static check_size<sizeof(LeaderboardEntries), 16 + sizeof(::Array<BeatSaberAPI::DataTransferObjects::LeaderboardEntry*>*)> __BeatSaberAPI_DataTransferObjects_LeaderboardEntriesSizeCheck;
  static_assert(sizeof(LeaderboardEntries) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(BeatSaberAPI::DataTransferObjects::LeaderboardEntries*, "BeatSaberAPI.DataTransferObjects", "LeaderboardEntries");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: BeatSaberAPI::DataTransferObjects::LeaderboardEntries::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
