// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: HMUI
namespace HMUI {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: HMUI.ViewController/AnimationDirection
  // [TokenAttribute] Offset: FFFFFFFF
  struct ViewController::AnimationDirection/*, public System::Enum*/ {
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Creating value type constructor for type: AnimationDirection
    constexpr AnimationDirection(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator System::Enum
    operator System::Enum() noexcept {
      return *reinterpret_cast<System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public HMUI.ViewController/AnimationDirection Horizontal
    static constexpr const int Horizontal = 0;
    // Get static field: static public HMUI.ViewController/AnimationDirection Horizontal
    static HMUI::ViewController::AnimationDirection _get_Horizontal();
    // Set static field: static public HMUI.ViewController/AnimationDirection Horizontal
    static void _set_Horizontal(HMUI::ViewController::AnimationDirection value);
    // static field const value: static public HMUI.ViewController/AnimationDirection Vertical
    static constexpr const int Vertical = 1;
    // Get static field: static public HMUI.ViewController/AnimationDirection Vertical
    static HMUI::ViewController::AnimationDirection _get_Vertical();
    // Set static field: static public HMUI.ViewController/AnimationDirection Vertical
    static void _set_Vertical(HMUI::ViewController::AnimationDirection value);
    // Get instance field reference: public System.Int32 value__
    int& dyn_value__();
  }; // HMUI.ViewController/AnimationDirection
  #pragma pack(pop)
  static check_size<sizeof(ViewController::AnimationDirection), 0 + sizeof(int)> __HMUI_ViewController_AnimationDirectionSizeCheck;
  static_assert(sizeof(ViewController::AnimationDirection) == 0x4);
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(HMUI::ViewController::AnimationDirection, "HMUI", "ViewController/AnimationDirection");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
