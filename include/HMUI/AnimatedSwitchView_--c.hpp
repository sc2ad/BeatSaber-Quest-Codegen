// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: HMUI.AnimatedSwitchView
#include "HMUI/AnimatedSwitchView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::HMUI::AnimatedSwitchView::$$c);
DEFINE_IL2CPP_ARG_TYPE(::HMUI::AnimatedSwitchView::$$c*, "HMUI", "AnimatedSwitchView/<>c");
// Type namespace: HMUI
namespace HMUI {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: HMUI.AnimatedSwitchView/HMUI.<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class AnimatedSwitchView::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly HMUI.AnimatedSwitchView/HMUI.<>c <>9
    static ::HMUI::AnimatedSwitchView::$$c* _get_$$9();
    // Set static field: static public readonly HMUI.AnimatedSwitchView/HMUI.<>c <>9
    static void _set_$$9(::HMUI::AnimatedSwitchView::$$c* value);
    // Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_0
    static ::HMUI::AnimatedSwitchView::GetColorDelegate* _get_$$9__31_0();
    // Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_0
    static void _set_$$9__31_0(::HMUI::AnimatedSwitchView::GetColorDelegate* value);
    // Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_1
    static ::HMUI::AnimatedSwitchView::GetColorDelegate* _get_$$9__31_1();
    // Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_1
    static void _set_$$9__31_1(::HMUI::AnimatedSwitchView::GetColorDelegate* value);
    // Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_2
    static ::HMUI::AnimatedSwitchView::GetColorDelegate* _get_$$9__31_2();
    // Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_2
    static void _set_$$9__31_2(::HMUI::AnimatedSwitchView::GetColorDelegate* value);
    // Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_3
    static ::HMUI::AnimatedSwitchView::GetColorDelegate* _get_$$9__31_3();
    // Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_3
    static void _set_$$9__31_3(::HMUI::AnimatedSwitchView::GetColorDelegate* value);
    // Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_4
    static ::HMUI::AnimatedSwitchView::GetColorDelegate* _get_$$9__31_4();
    // Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_4
    static void _set_$$9__31_4(::HMUI::AnimatedSwitchView::GetColorDelegate* value);
    // Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_5
    static ::HMUI::AnimatedSwitchView::GetColorDelegate* _get_$$9__31_5();
    // Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_5
    static void _set_$$9__31_5(::HMUI::AnimatedSwitchView::GetColorDelegate* value);
    // static private System.Void .cctor()
    // Offset: 0x1729DE8
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x1729E4C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AnimatedSwitchView::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AnimatedSwitchView::$$c*, creationType>()));
    }
    // UnityEngine.Color <LerpColors>b__31_0(HMUI.AnimatedSwitchView/HMUI.ColorBlock colorBlock)
    // Offset: 0x1729E54
    ::UnityEngine::Color $LerpColors$b__31_0(::HMUI::AnimatedSwitchView::ColorBlock* colorBlock);
    // UnityEngine.Color <LerpColors>b__31_1(HMUI.AnimatedSwitchView/HMUI.ColorBlock colorBlock)
    // Offset: 0x1729E70
    ::UnityEngine::Color $LerpColors$b__31_1(::HMUI::AnimatedSwitchView::ColorBlock* colorBlock);
    // UnityEngine.Color <LerpColors>b__31_2(HMUI.AnimatedSwitchView/HMUI.ColorBlock colorBlock)
    // Offset: 0x1729E8C
    ::UnityEngine::Color $LerpColors$b__31_2(::HMUI::AnimatedSwitchView::ColorBlock* colorBlock);
    // UnityEngine.Color <LerpColors>b__31_3(HMUI.AnimatedSwitchView/HMUI.ColorBlock colorBlock)
    // Offset: 0x1729EA8
    ::UnityEngine::Color $LerpColors$b__31_3(::HMUI::AnimatedSwitchView::ColorBlock* colorBlock);
    // UnityEngine.Color <LerpColors>b__31_4(HMUI.AnimatedSwitchView/HMUI.ColorBlock colorBlock)
    // Offset: 0x1729EC4
    ::UnityEngine::Color $LerpColors$b__31_4(::HMUI::AnimatedSwitchView::ColorBlock* colorBlock);
    // UnityEngine.Color <LerpColors>b__31_5(HMUI.AnimatedSwitchView/HMUI.ColorBlock colorBlock)
    // Offset: 0x1729EE0
    ::UnityEngine::Color $LerpColors$b__31_5(::HMUI::AnimatedSwitchView::ColorBlock* colorBlock);
  }; // HMUI.AnimatedSwitchView/HMUI.<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: HMUI::AnimatedSwitchView::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&HMUI::AnimatedSwitchView::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HMUI::AnimatedSwitchView::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HMUI::AnimatedSwitchView::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_0
// Il2CppName: <LerpColors>b__31_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (HMUI::AnimatedSwitchView::$$c::*)(::HMUI::AnimatedSwitchView::ColorBlock*)>(&HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_0)> {
  static const MethodInfo* get() {
    static auto* colorBlock = &::il2cpp_utils::GetClassFromName("HMUI", "AnimatedSwitchView/ColorBlock")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HMUI::AnimatedSwitchView::$$c*), "<LerpColors>b__31_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{colorBlock});
  }
};
// Writing MetadataGetter for method: HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_1
// Il2CppName: <LerpColors>b__31_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (HMUI::AnimatedSwitchView::$$c::*)(::HMUI::AnimatedSwitchView::ColorBlock*)>(&HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_1)> {
  static const MethodInfo* get() {
    static auto* colorBlock = &::il2cpp_utils::GetClassFromName("HMUI", "AnimatedSwitchView/ColorBlock")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HMUI::AnimatedSwitchView::$$c*), "<LerpColors>b__31_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{colorBlock});
  }
};
// Writing MetadataGetter for method: HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_2
// Il2CppName: <LerpColors>b__31_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (HMUI::AnimatedSwitchView::$$c::*)(::HMUI::AnimatedSwitchView::ColorBlock*)>(&HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_2)> {
  static const MethodInfo* get() {
    static auto* colorBlock = &::il2cpp_utils::GetClassFromName("HMUI", "AnimatedSwitchView/ColorBlock")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HMUI::AnimatedSwitchView::$$c*), "<LerpColors>b__31_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{colorBlock});
  }
};
// Writing MetadataGetter for method: HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_3
// Il2CppName: <LerpColors>b__31_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (HMUI::AnimatedSwitchView::$$c::*)(::HMUI::AnimatedSwitchView::ColorBlock*)>(&HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_3)> {
  static const MethodInfo* get() {
    static auto* colorBlock = &::il2cpp_utils::GetClassFromName("HMUI", "AnimatedSwitchView/ColorBlock")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HMUI::AnimatedSwitchView::$$c*), "<LerpColors>b__31_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{colorBlock});
  }
};
// Writing MetadataGetter for method: HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_4
// Il2CppName: <LerpColors>b__31_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (HMUI::AnimatedSwitchView::$$c::*)(::HMUI::AnimatedSwitchView::ColorBlock*)>(&HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_4)> {
  static const MethodInfo* get() {
    static auto* colorBlock = &::il2cpp_utils::GetClassFromName("HMUI", "AnimatedSwitchView/ColorBlock")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HMUI::AnimatedSwitchView::$$c*), "<LerpColors>b__31_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{colorBlock});
  }
};
// Writing MetadataGetter for method: HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_5
// Il2CppName: <LerpColors>b__31_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (HMUI::AnimatedSwitchView::$$c::*)(::HMUI::AnimatedSwitchView::ColorBlock*)>(&HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_5)> {
  static const MethodInfo* get() {
    static auto* colorBlock = &::il2cpp_utils::GetClassFromName("HMUI", "AnimatedSwitchView/ColorBlock")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HMUI::AnimatedSwitchView::$$c*), "<LerpColors>b__31_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{colorBlock});
  }
};
