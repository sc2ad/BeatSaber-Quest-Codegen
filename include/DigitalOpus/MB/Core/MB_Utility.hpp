// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DigitalOpus::MB::Core
namespace DigitalOpus::MB::Core {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: Renderer
  class Renderer;
  // Forward declaring type: Rect
  struct Rect;
  // Forward declaring type: Color
  struct Color;
  // Forward declaring type: Bounds
  struct Bounds;
  // Forward declaring type: Object
  class Object;
}
// Completed forward declares
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB_Utility
  class MB_Utility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB_Utility);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB_Utility*, "DigitalOpus.MB.Core", "MB_Utility");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB_Utility
  // [TokenAttribute] Offset: FFFFFFFF
  class MB_Utility : public ::Il2CppObject {
    public:
    // Nested type: ::DigitalOpus::MB::Core::MB_Utility::MeshAnalysisResult
    struct MeshAnalysisResult;
    // Nested type: ::DigitalOpus::MB::Core::MB_Utility::MB_Triangle
    class MB_Triangle;
    // Get static field: static public System.Boolean DO_INTEGRITY_CHECKS
    static bool _get_DO_INTEGRITY_CHECKS();
    // Set static field: static public System.Boolean DO_INTEGRITY_CHECKS
    static void _set_DO_INTEGRITY_CHECKS(bool value);
    // public System.Void .ctor()
    // Offset: 0x11B7D58
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB_Utility* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB_Utility::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB_Utility*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x11B7D60
    static void _cctor();
    // static public UnityEngine.Texture2D createTextureCopy(UnityEngine.Texture2D source)
    // Offset: 0x11B5FCC
    static ::UnityEngine::Texture2D* createTextureCopy(::UnityEngine::Texture2D* source);
    // static public System.Boolean ArrayBIsSubsetOfA(System.Object[] a, System.Object[] b)
    // Offset: 0x11B6098
    static bool ArrayBIsSubsetOfA(::ArrayW<::Il2CppObject*> a, ::ArrayW<::Il2CppObject*> b);
    // static public UnityEngine.Material[] GetGOMaterials(UnityEngine.GameObject go)
    // Offset: 0x11B613C
    static ::ArrayW<::UnityEngine::Material*> GetGOMaterials(::UnityEngine::GameObject* go);
    // static public UnityEngine.Mesh GetMesh(UnityEngine.GameObject go)
    // Offset: 0x11B6690
    static ::UnityEngine::Mesh* GetMesh(::UnityEngine::GameObject* go);
    // static public System.Void SetMesh(UnityEngine.GameObject go, UnityEngine.Mesh m)
    // Offset: 0x11B67E0
    static void SetMesh(::UnityEngine::GameObject* go, ::UnityEngine::Mesh* m);
    // static public UnityEngine.Renderer GetRenderer(UnityEngine.GameObject go)
    // Offset: 0x11B6938
    static ::UnityEngine::Renderer* GetRenderer(::UnityEngine::GameObject* go);
    // static public System.Void DisableRendererInSource(UnityEngine.GameObject go)
    // Offset: 0x11B6A5C
    static void DisableRendererInSource(::UnityEngine::GameObject* go);
    // static public System.Boolean hasOutOfBoundsUVs(UnityEngine.Mesh m, ref UnityEngine.Rect uvBounds)
    // Offset: 0x11B6B9C
    static bool hasOutOfBoundsUVs(::UnityEngine::Mesh* m, ByRef<::UnityEngine::Rect> uvBounds);
    // static public System.Boolean hasOutOfBoundsUVs(UnityEngine.Mesh m, ref DigitalOpus.MB.Core.MB_Utility/DigitalOpus.MB.Core.MeshAnalysisResult putResultHere, System.Int32 submeshIndex, System.Int32 uvChannel)
    // Offset: 0x11B6C38
    static bool hasOutOfBoundsUVs(::UnityEngine::Mesh* m, ByRef<::DigitalOpus::MB::Core::MB_Utility::MeshAnalysisResult> putResultHere, int submeshIndex, int uvChannel);
    // static public System.Boolean hasOutOfBoundsUVs(UnityEngine.Vector2[] uvs, UnityEngine.Mesh m, ref DigitalOpus.MB.Core.MB_Utility/DigitalOpus.MB.Core.MeshAnalysisResult putResultHere, System.Int32 submeshIndex)
    // Offset: 0x11B6D7C
    static bool hasOutOfBoundsUVs(::ArrayW<::UnityEngine::Vector2> uvs, ::UnityEngine::Mesh* m, ByRef<::DigitalOpus::MB::Core::MB_Utility::MeshAnalysisResult> putResultHere, int submeshIndex);
    // static public System.Void setSolidColor(UnityEngine.Texture2D t, UnityEngine.Color c)
    // Offset: 0x11B5EAC
    static void setSolidColor(::UnityEngine::Texture2D* t, ::UnityEngine::Color c);
    // static public UnityEngine.Texture2D resampleTexture(UnityEngine.Texture2D source, System.Int32 newWidth, System.Int32 newHeight)
    // Offset: 0x11B6FA0
    static ::UnityEngine::Texture2D* resampleTexture(::UnityEngine::Texture2D* source, int newWidth, int newHeight);
    // static public System.Boolean AreAllSharedMaterialsDistinct(UnityEngine.Material[] sharedMaterials)
    // Offset: 0x11B7240
    static bool AreAllSharedMaterialsDistinct(::ArrayW<::UnityEngine::Material*> sharedMaterials);
    // static public System.Int32 doSubmeshesShareVertsOrTris(UnityEngine.Mesh m, ref DigitalOpus.MB.Core.MB_Utility/DigitalOpus.MB.Core.MeshAnalysisResult mar)
    // Offset: 0x11B7368
    static int doSubmeshesShareVertsOrTris(::UnityEngine::Mesh* m, ByRef<::DigitalOpus::MB::Core::MB_Utility::MeshAnalysisResult> mar);
    // static public System.Boolean GetBounds(UnityEngine.GameObject go, out UnityEngine.Bounds b)
    // Offset: 0x11B7A1C
    static bool GetBounds(::UnityEngine::GameObject* go, ByRef<::UnityEngine::Bounds> b);
    // static public System.Void Destroy(UnityEngine.Object o)
    // Offset: 0x11B3248
    static void Destroy(::UnityEngine::Object* o);
    // static public System.String ConvertAssetsRelativePathToFullSystemPath(System.String pth)
    // Offset: 0x11B7C9C
    static ::StringW ConvertAssetsRelativePathToFullSystemPath(::StringW pth);
    // static public System.Boolean IsSceneInstance(UnityEngine.GameObject go)
    // Offset: 0x11B7D14
    static bool IsSceneInstance(::UnityEngine::GameObject* go);
  }; // DigitalOpus.MB.Core.MB_Utility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DigitalOpus::MB::Core::MB_Utility::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::createTextureCopy
// Il2CppName: createTextureCopy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (*)(::UnityEngine::Texture2D*)>(&DigitalOpus::MB::Core::MB_Utility::createTextureCopy)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "createTextureCopy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::ArrayBIsSubsetOfA
// Il2CppName: ArrayBIsSubsetOfA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ArrayW<::Il2CppObject*>, ::ArrayW<::Il2CppObject*>)>(&DigitalOpus::MB::Core::MB_Utility::ArrayBIsSubsetOfA)> {
  static const MethodInfo* get() {
    static auto* a = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    static auto* b = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "ArrayBIsSubsetOfA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::GetGOMaterials
// Il2CppName: GetGOMaterials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Material*> (*)(::UnityEngine::GameObject*)>(&DigitalOpus::MB::Core::MB_Utility::GetGOMaterials)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "GetGOMaterials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::GetMesh
// Il2CppName: GetMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Mesh* (*)(::UnityEngine::GameObject*)>(&DigitalOpus::MB::Core::MB_Utility::GetMesh)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "GetMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::SetMesh
// Il2CppName: SetMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::GameObject*, ::UnityEngine::Mesh*)>(&DigitalOpus::MB::Core::MB_Utility::SetMesh)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* m = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "SetMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go, m});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::GetRenderer
// Il2CppName: GetRenderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Renderer* (*)(::UnityEngine::GameObject*)>(&DigitalOpus::MB::Core::MB_Utility::GetRenderer)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "GetRenderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::DisableRendererInSource
// Il2CppName: DisableRendererInSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::GameObject*)>(&DigitalOpus::MB::Core::MB_Utility::DisableRendererInSource)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "DisableRendererInSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::hasOutOfBoundsUVs
// Il2CppName: hasOutOfBoundsUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Mesh*, ByRef<::UnityEngine::Rect>)>(&DigitalOpus::MB::Core::MB_Utility::hasOutOfBoundsUVs)> {
  static const MethodInfo* get() {
    static auto* m = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* uvBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "hasOutOfBoundsUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{m, uvBounds});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::hasOutOfBoundsUVs
// Il2CppName: hasOutOfBoundsUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Mesh*, ByRef<::DigitalOpus::MB::Core::MB_Utility::MeshAnalysisResult>, int, int)>(&DigitalOpus::MB::Core::MB_Utility::hasOutOfBoundsUVs)> {
  static const MethodInfo* get() {
    static auto* m = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* putResultHere = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_Utility/MeshAnalysisResult")->this_arg;
    static auto* submeshIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* uvChannel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "hasOutOfBoundsUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{m, putResultHere, submeshIndex, uvChannel});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::hasOutOfBoundsUVs
// Il2CppName: hasOutOfBoundsUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ArrayW<::UnityEngine::Vector2>, ::UnityEngine::Mesh*, ByRef<::DigitalOpus::MB::Core::MB_Utility::MeshAnalysisResult>, int)>(&DigitalOpus::MB::Core::MB_Utility::hasOutOfBoundsUVs)> {
  static const MethodInfo* get() {
    static auto* uvs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2"), 1)->byval_arg;
    static auto* m = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* putResultHere = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_Utility/MeshAnalysisResult")->this_arg;
    static auto* submeshIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "hasOutOfBoundsUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uvs, m, putResultHere, submeshIndex});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::setSolidColor
// Il2CppName: setSolidColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Texture2D*, ::UnityEngine::Color)>(&DigitalOpus::MB::Core::MB_Utility::setSolidColor)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "setSolidColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t, c});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::resampleTexture
// Il2CppName: resampleTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (*)(::UnityEngine::Texture2D*, int, int)>(&DigitalOpus::MB::Core::MB_Utility::resampleTexture)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* newWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* newHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "resampleTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, newWidth, newHeight});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::AreAllSharedMaterialsDistinct
// Il2CppName: AreAllSharedMaterialsDistinct
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ArrayW<::UnityEngine::Material*>)>(&DigitalOpus::MB::Core::MB_Utility::AreAllSharedMaterialsDistinct)> {
  static const MethodInfo* get() {
    static auto* sharedMaterials = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Material"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "AreAllSharedMaterialsDistinct", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sharedMaterials});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::doSubmeshesShareVertsOrTris
// Il2CppName: doSubmeshesShareVertsOrTris
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Mesh*, ByRef<::DigitalOpus::MB::Core::MB_Utility::MeshAnalysisResult>)>(&DigitalOpus::MB::Core::MB_Utility::doSubmeshesShareVertsOrTris)> {
  static const MethodInfo* get() {
    static auto* m = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* mar = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_Utility/MeshAnalysisResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "doSubmeshesShareVertsOrTris", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{m, mar});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::GetBounds
// Il2CppName: GetBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::GameObject*, ByRef<::UnityEngine::Bounds>)>(&DigitalOpus::MB::Core::MB_Utility::GetBounds)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "GetBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go, b});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::Destroy
// Il2CppName: Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Object*)>(&DigitalOpus::MB::Core::MB_Utility::Destroy)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::ConvertAssetsRelativePathToFullSystemPath
// Il2CppName: ConvertAssetsRelativePathToFullSystemPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&DigitalOpus::MB::Core::MB_Utility::ConvertAssetsRelativePathToFullSystemPath)> {
  static const MethodInfo* get() {
    static auto* pth = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "ConvertAssetsRelativePathToFullSystemPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pth});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB_Utility::IsSceneInstance
// Il2CppName: IsSceneInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::GameObject*)>(&DigitalOpus::MB::Core::MB_Utility::IsSceneInstance)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB_Utility*), "IsSceneInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go});
  }
};
