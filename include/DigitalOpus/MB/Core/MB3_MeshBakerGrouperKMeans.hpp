// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DigitalOpus.MB.Core.MB3_MeshBakerGrouperCore
#include "DigitalOpus/MB/Core/MB3_MeshBakerGrouperCore.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DigitalOpus::MB::Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: GrouperData
  class GrouperData;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Renderer
  class Renderer;
  // Forward declaring type: GameObject
  class GameObject;
  // Skipping declaration: Bounds because it is already included!
}
// Completed forward declares
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB3_MeshBakerGrouperKMeans
  class MB3_MeshBakerGrouperKMeans;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB3_MeshBakerGrouperKMeans);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB3_MeshBakerGrouperKMeans*, "DigitalOpus.MB.Core", "MB3_MeshBakerGrouperKMeans");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB3_MeshBakerGrouperKMeans
  // [TokenAttribute] Offset: FFFFFFFF
  class MB3_MeshBakerGrouperKMeans : public ::DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore {
    public:
    public:
    // public System.Int32 numClusters
    // Size: 0x4
    // Offset: 0x18
    int numClusters;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: numClusters and: clusterCenters
    char __padding0[0x4] = {};
    // public UnityEngine.Vector3[] clusterCenters
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::UnityEngine::Vector3> clusterCenters;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Vector3>) == 0x8);
    // public System.Single[] clusterSizes
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<float> clusterSizes;
    // Field size check
    static_assert(sizeof(::ArrayW<float>) == 0x8);
    public:
    // Deleting conversion operator: operator ::DigitalOpus::MB::Core::GrouperData*
    constexpr operator ::DigitalOpus::MB::Core::GrouperData*() const noexcept = delete;
    // Get instance field reference: public System.Int32 numClusters
    [[deprecated("Use field access instead!")]] int& dyn_numClusters();
    // Get instance field reference: public UnityEngine.Vector3[] clusterCenters
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& dyn_clusterCenters();
    // Get instance field reference: public System.Single[] clusterSizes
    [[deprecated("Use field access instead!")]] ::ArrayW<float>& dyn_clusterSizes();
    // public System.Void .ctor(DigitalOpus.MB.Core.GrouperData data)
    // Offset: 0xC276D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_MeshBakerGrouperKMeans* New_ctor(::DigitalOpus::MB::Core::GrouperData* data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_MeshBakerGrouperKMeans::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_MeshBakerGrouperKMeans*, creationType>(data)));
    }
    // public override System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<UnityEngine.Renderer>> FilterIntoGroups(System.Collections.Generic.List`1<UnityEngine.GameObject> selection)
    // Offset: 0xC27768
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshBakerGrouperCore
    // Base method: System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<UnityEngine.Renderer>> MB3_MeshBakerGrouperCore::FilterIntoGroups(System.Collections.Generic.List`1<UnityEngine.GameObject> selection)
    ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*>* FilterIntoGroups(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* selection);
    // public override System.Void DrawGizmos(UnityEngine.Bounds sceneObjectBounds)
    // Offset: 0xC27AF0
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshBakerGrouperCore
    // Base method: System.Void MB3_MeshBakerGrouperCore::DrawGizmos(UnityEngine.Bounds sceneObjectBounds)
    void DrawGizmos(::UnityEngine::Bounds sceneObjectBounds);
  }; // DigitalOpus.MB.Core.MB3_MeshBakerGrouperKMeans
  #pragma pack(pop)
  static check_size<sizeof(MB3_MeshBakerGrouperKMeans), 40 + sizeof(::ArrayW<float>)> __DigitalOpus_MB_Core_MB3_MeshBakerGrouperKMeansSizeCheck;
  static_assert(sizeof(MB3_MeshBakerGrouperKMeans) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperKMeans::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperKMeans::FilterIntoGroups
// Il2CppName: FilterIntoGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*>* (DigitalOpus::MB::Core::MB3_MeshBakerGrouperKMeans::*)(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*)>(&DigitalOpus::MB::Core::MB3_MeshBakerGrouperKMeans::FilterIntoGroups)> {
  static const MethodInfo* get() {
    static auto* selection = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshBakerGrouperKMeans*), "FilterIntoGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selection});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperKMeans::DrawGizmos
// Il2CppName: DrawGizmos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshBakerGrouperKMeans::*)(::UnityEngine::Bounds)>(&DigitalOpus::MB::Core::MB3_MeshBakerGrouperKMeans::DrawGizmos)> {
  static const MethodInfo* get() {
    static auto* sceneObjectBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshBakerGrouperKMeans*), "DrawGizmos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sceneObjectBounds});
  }
};
