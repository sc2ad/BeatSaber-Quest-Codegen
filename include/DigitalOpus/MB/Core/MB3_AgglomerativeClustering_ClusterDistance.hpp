// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DigitalOpus.MB.Core.MB3_AgglomerativeClustering
#include "DigitalOpus/MB/Core/MB3_AgglomerativeClustering.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::ClusterDistance);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::ClusterDistance*, "DigitalOpus.MB.Core", "MB3_AgglomerativeClustering/ClusterDistance");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB3_AgglomerativeClustering/DigitalOpus.MB.Core.ClusterDistance
  // [TokenAttribute] Offset: FFFFFFFF
  class MB3_AgglomerativeClustering::ClusterDistance : public ::Il2CppObject {
    public:
    public:
    // public DigitalOpus.MB.Core.MB3_AgglomerativeClustering/DigitalOpus.MB.Core.ClusterNode a
    // Size: 0x8
    // Offset: 0x10
    ::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::ClusterNode* a;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::ClusterNode*) == 0x8);
    // public DigitalOpus.MB.Core.MB3_AgglomerativeClustering/DigitalOpus.MB.Core.ClusterNode b
    // Size: 0x8
    // Offset: 0x18
    ::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::ClusterNode* b;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::ClusterNode*) == 0x8);
    public:
    // Get instance field reference: public DigitalOpus.MB.Core.MB3_AgglomerativeClustering/DigitalOpus.MB.Core.ClusterNode a
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::ClusterNode*& dyn_a();
    // Get instance field reference: public DigitalOpus.MB.Core.MB3_AgglomerativeClustering/DigitalOpus.MB.Core.ClusterNode b
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::ClusterNode*& dyn_b();
    // public System.Void .ctor(DigitalOpus.MB.Core.MB3_AgglomerativeClustering/DigitalOpus.MB.Core.ClusterNode aa, DigitalOpus.MB.Core.MB3_AgglomerativeClustering/DigitalOpus.MB.Core.ClusterNode bb)
    // Offset: 0xC20280
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_AgglomerativeClustering::ClusterDistance* New_ctor(::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::ClusterNode* aa, ::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::ClusterNode* bb) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::ClusterDistance::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_AgglomerativeClustering::ClusterDistance*, creationType>(aa, bb)));
    }
  }; // DigitalOpus.MB.Core.MB3_AgglomerativeClustering/DigitalOpus.MB.Core.ClusterDistance
  #pragma pack(pop)
  static check_size<sizeof(MB3_AgglomerativeClustering::ClusterDistance), 24 + sizeof(::DigitalOpus::MB::Core::MB3_AgglomerativeClustering::ClusterNode*)> __DigitalOpus_MB_Core_MB3_AgglomerativeClustering_ClusterDistanceSizeCheck;
  static_assert(sizeof(MB3_AgglomerativeClustering::ClusterDistance) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_AgglomerativeClustering::ClusterDistance::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
