// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DigitalOpus::MB::Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB_IMeshBakerSettings
  class MB_IMeshBakerSettings;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MB2_TextureBakeResults
  class MB2_TextureBakeResults;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
}
// Completed forward declares
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: IAssignToMeshCustomizer
  class IAssignToMeshCustomizer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::IAssignToMeshCustomizer);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::IAssignToMeshCustomizer*, "DigitalOpus.MB.Core", "IAssignToMeshCustomizer");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.IAssignToMeshCustomizer
  // [TokenAttribute] Offset: FFFFFFFF
  class IAssignToMeshCustomizer {
    public:
    // public System.Void meshAssign_UV0(System.Int32 channel, DigitalOpus.MB.Core.MB_IMeshBakerSettings settings, MB2_TextureBakeResults textureBakeResults, UnityEngine.Mesh mesh, UnityEngine.Vector2[] uvs, System.Single[] sliceIndexes)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void meshAssign_UV0(int channel, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings* settings, ::GlobalNamespace::MB2_TextureBakeResults* textureBakeResults, ::UnityEngine::Mesh* mesh, ::ArrayW<::UnityEngine::Vector2> uvs, ::ArrayW<float> sliceIndexes);
    // public System.Void meshAssign_UV2(System.Int32 channel, DigitalOpus.MB.Core.MB_IMeshBakerSettings settings, MB2_TextureBakeResults textureBakeResults, UnityEngine.Mesh mesh, UnityEngine.Vector2[] uvs, System.Single[] sliceIndexes)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void meshAssign_UV2(int channel, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings* settings, ::GlobalNamespace::MB2_TextureBakeResults* textureBakeResults, ::UnityEngine::Mesh* mesh, ::ArrayW<::UnityEngine::Vector2> uvs, ::ArrayW<float> sliceIndexes);
    // public System.Void meshAssign_UV3(System.Int32 channel, DigitalOpus.MB.Core.MB_IMeshBakerSettings settings, MB2_TextureBakeResults textureBakeResults, UnityEngine.Mesh mesh, UnityEngine.Vector2[] uvs, System.Single[] sliceIndexes)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void meshAssign_UV3(int channel, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings* settings, ::GlobalNamespace::MB2_TextureBakeResults* textureBakeResults, ::UnityEngine::Mesh* mesh, ::ArrayW<::UnityEngine::Vector2> uvs, ::ArrayW<float> sliceIndexes);
    // public System.Void meshAssign_UV4(System.Int32 channel, DigitalOpus.MB.Core.MB_IMeshBakerSettings settings, MB2_TextureBakeResults textureBakeResults, UnityEngine.Mesh mesh, UnityEngine.Vector2[] uvs, System.Single[] sliceIndexes)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void meshAssign_UV4(int channel, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings* settings, ::GlobalNamespace::MB2_TextureBakeResults* textureBakeResults, ::UnityEngine::Mesh* mesh, ::ArrayW<::UnityEngine::Vector2> uvs, ::ArrayW<float> sliceIndexes);
    // public System.Void meshAssign_UV5(System.Int32 channel, DigitalOpus.MB.Core.MB_IMeshBakerSettings settings, MB2_TextureBakeResults textureBakeResults, UnityEngine.Mesh mesh, UnityEngine.Vector2[] uvs, System.Single[] sliceIndexes)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void meshAssign_UV5(int channel, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings* settings, ::GlobalNamespace::MB2_TextureBakeResults* textureBakeResults, ::UnityEngine::Mesh* mesh, ::ArrayW<::UnityEngine::Vector2> uvs, ::ArrayW<float> sliceIndexes);
    // public System.Void meshAssign_UV6(System.Int32 channel, DigitalOpus.MB.Core.MB_IMeshBakerSettings settings, MB2_TextureBakeResults textureBakeResults, UnityEngine.Mesh mesh, UnityEngine.Vector2[] uvs, System.Single[] sliceIndexes)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void meshAssign_UV6(int channel, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings* settings, ::GlobalNamespace::MB2_TextureBakeResults* textureBakeResults, ::UnityEngine::Mesh* mesh, ::ArrayW<::UnityEngine::Vector2> uvs, ::ArrayW<float> sliceIndexes);
    // public System.Void meshAssign_UV7(System.Int32 channel, DigitalOpus.MB.Core.MB_IMeshBakerSettings settings, MB2_TextureBakeResults textureBakeResults, UnityEngine.Mesh mesh, UnityEngine.Vector2[] uvs, System.Single[] sliceIndexes)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void meshAssign_UV7(int channel, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings* settings, ::GlobalNamespace::MB2_TextureBakeResults* textureBakeResults, ::UnityEngine::Mesh* mesh, ::ArrayW<::UnityEngine::Vector2> uvs, ::ArrayW<float> sliceIndexes);
    // public System.Void meshAssign_UV8(System.Int32 channel, DigitalOpus.MB.Core.MB_IMeshBakerSettings settings, MB2_TextureBakeResults textureBakeResults, UnityEngine.Mesh mesh, UnityEngine.Vector2[] uvs, System.Single[] sliceIndexes)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void meshAssign_UV8(int channel, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings* settings, ::GlobalNamespace::MB2_TextureBakeResults* textureBakeResults, ::UnityEngine::Mesh* mesh, ::ArrayW<::UnityEngine::Vector2> uvs, ::ArrayW<float> sliceIndexes);
    // public System.Void meshAssign_colors(DigitalOpus.MB.Core.MB_IMeshBakerSettings settings, MB2_TextureBakeResults textureBakeResults, UnityEngine.Mesh mesh, UnityEngine.Color[] colors, System.Single[] sliceIndexes)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void meshAssign_colors(::DigitalOpus::MB::Core::MB_IMeshBakerSettings* settings, ::GlobalNamespace::MB2_TextureBakeResults* textureBakeResults, ::UnityEngine::Mesh* mesh, ::ArrayW<::UnityEngine::Color> colors, ::ArrayW<float> sliceIndexes);
  }; // DigitalOpus.MB.Core.IAssignToMeshCustomizer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_UV0
// Il2CppName: meshAssign_UV0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::IAssignToMeshCustomizer::*)(int, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings*, ::GlobalNamespace::MB2_TextureBakeResults*, ::UnityEngine::Mesh*, ::ArrayW<::UnityEngine::Vector2>, ::ArrayW<float>)>(&DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_UV0)> {
  static const MethodInfo* get() {
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_IMeshBakerSettings")->byval_arg;
    static auto* textureBakeResults = &::il2cpp_utils::GetClassFromName("", "MB2_TextureBakeResults")->byval_arg;
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* uvs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2"), 1)->byval_arg;
    static auto* sliceIndexes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::IAssignToMeshCustomizer*), "meshAssign_UV0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{channel, settings, textureBakeResults, mesh, uvs, sliceIndexes});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_UV2
// Il2CppName: meshAssign_UV2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::IAssignToMeshCustomizer::*)(int, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings*, ::GlobalNamespace::MB2_TextureBakeResults*, ::UnityEngine::Mesh*, ::ArrayW<::UnityEngine::Vector2>, ::ArrayW<float>)>(&DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_UV2)> {
  static const MethodInfo* get() {
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_IMeshBakerSettings")->byval_arg;
    static auto* textureBakeResults = &::il2cpp_utils::GetClassFromName("", "MB2_TextureBakeResults")->byval_arg;
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* uvs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2"), 1)->byval_arg;
    static auto* sliceIndexes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::IAssignToMeshCustomizer*), "meshAssign_UV2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{channel, settings, textureBakeResults, mesh, uvs, sliceIndexes});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_UV3
// Il2CppName: meshAssign_UV3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::IAssignToMeshCustomizer::*)(int, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings*, ::GlobalNamespace::MB2_TextureBakeResults*, ::UnityEngine::Mesh*, ::ArrayW<::UnityEngine::Vector2>, ::ArrayW<float>)>(&DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_UV3)> {
  static const MethodInfo* get() {
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_IMeshBakerSettings")->byval_arg;
    static auto* textureBakeResults = &::il2cpp_utils::GetClassFromName("", "MB2_TextureBakeResults")->byval_arg;
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* uvs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2"), 1)->byval_arg;
    static auto* sliceIndexes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::IAssignToMeshCustomizer*), "meshAssign_UV3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{channel, settings, textureBakeResults, mesh, uvs, sliceIndexes});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_UV4
// Il2CppName: meshAssign_UV4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::IAssignToMeshCustomizer::*)(int, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings*, ::GlobalNamespace::MB2_TextureBakeResults*, ::UnityEngine::Mesh*, ::ArrayW<::UnityEngine::Vector2>, ::ArrayW<float>)>(&DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_UV4)> {
  static const MethodInfo* get() {
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_IMeshBakerSettings")->byval_arg;
    static auto* textureBakeResults = &::il2cpp_utils::GetClassFromName("", "MB2_TextureBakeResults")->byval_arg;
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* uvs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2"), 1)->byval_arg;
    static auto* sliceIndexes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::IAssignToMeshCustomizer*), "meshAssign_UV4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{channel, settings, textureBakeResults, mesh, uvs, sliceIndexes});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_UV5
// Il2CppName: meshAssign_UV5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::IAssignToMeshCustomizer::*)(int, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings*, ::GlobalNamespace::MB2_TextureBakeResults*, ::UnityEngine::Mesh*, ::ArrayW<::UnityEngine::Vector2>, ::ArrayW<float>)>(&DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_UV5)> {
  static const MethodInfo* get() {
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_IMeshBakerSettings")->byval_arg;
    static auto* textureBakeResults = &::il2cpp_utils::GetClassFromName("", "MB2_TextureBakeResults")->byval_arg;
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* uvs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2"), 1)->byval_arg;
    static auto* sliceIndexes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::IAssignToMeshCustomizer*), "meshAssign_UV5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{channel, settings, textureBakeResults, mesh, uvs, sliceIndexes});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_UV6
// Il2CppName: meshAssign_UV6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::IAssignToMeshCustomizer::*)(int, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings*, ::GlobalNamespace::MB2_TextureBakeResults*, ::UnityEngine::Mesh*, ::ArrayW<::UnityEngine::Vector2>, ::ArrayW<float>)>(&DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_UV6)> {
  static const MethodInfo* get() {
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_IMeshBakerSettings")->byval_arg;
    static auto* textureBakeResults = &::il2cpp_utils::GetClassFromName("", "MB2_TextureBakeResults")->byval_arg;
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* uvs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2"), 1)->byval_arg;
    static auto* sliceIndexes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::IAssignToMeshCustomizer*), "meshAssign_UV6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{channel, settings, textureBakeResults, mesh, uvs, sliceIndexes});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_UV7
// Il2CppName: meshAssign_UV7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::IAssignToMeshCustomizer::*)(int, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings*, ::GlobalNamespace::MB2_TextureBakeResults*, ::UnityEngine::Mesh*, ::ArrayW<::UnityEngine::Vector2>, ::ArrayW<float>)>(&DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_UV7)> {
  static const MethodInfo* get() {
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_IMeshBakerSettings")->byval_arg;
    static auto* textureBakeResults = &::il2cpp_utils::GetClassFromName("", "MB2_TextureBakeResults")->byval_arg;
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* uvs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2"), 1)->byval_arg;
    static auto* sliceIndexes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::IAssignToMeshCustomizer*), "meshAssign_UV7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{channel, settings, textureBakeResults, mesh, uvs, sliceIndexes});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_UV8
// Il2CppName: meshAssign_UV8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::IAssignToMeshCustomizer::*)(int, ::DigitalOpus::MB::Core::MB_IMeshBakerSettings*, ::GlobalNamespace::MB2_TextureBakeResults*, ::UnityEngine::Mesh*, ::ArrayW<::UnityEngine::Vector2>, ::ArrayW<float>)>(&DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_UV8)> {
  static const MethodInfo* get() {
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* settings = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_IMeshBakerSettings")->byval_arg;
    static auto* textureBakeResults = &::il2cpp_utils::GetClassFromName("", "MB2_TextureBakeResults")->byval_arg;
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* uvs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2"), 1)->byval_arg;
    static auto* sliceIndexes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::IAssignToMeshCustomizer*), "meshAssign_UV8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{channel, settings, textureBakeResults, mesh, uvs, sliceIndexes});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_colors
// Il2CppName: meshAssign_colors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::IAssignToMeshCustomizer::*)(::DigitalOpus::MB::Core::MB_IMeshBakerSettings*, ::GlobalNamespace::MB2_TextureBakeResults*, ::UnityEngine::Mesh*, ::ArrayW<::UnityEngine::Color>, ::ArrayW<float>)>(&DigitalOpus::MB::Core::IAssignToMeshCustomizer::meshAssign_colors)> {
  static const MethodInfo* get() {
    static auto* settings = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_IMeshBakerSettings")->byval_arg;
    static auto* textureBakeResults = &::il2cpp_utils::GetClassFromName("", "MB2_TextureBakeResults")->byval_arg;
    static auto* mesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* colors = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Color"), 1)->byval_arg;
    static auto* sliceIndexes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::IAssignToMeshCustomizer*), "meshAssign_colors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{settings, textureBakeResults, mesh, colors, sliceIndexes});
  }
};
