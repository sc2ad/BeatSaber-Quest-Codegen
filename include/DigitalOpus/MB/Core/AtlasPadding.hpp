// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: AtlasPadding
  struct AtlasPadding;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::AtlasPadding, "DigitalOpus.MB.Core", "AtlasPadding");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: DigitalOpus.MB.Core.AtlasPadding
  // [TokenAttribute] Offset: FFFFFFFF
  struct AtlasPadding/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Int32 topBottom
    // Size: 0x4
    // Offset: 0x0
    int topBottom;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 leftRight
    // Size: 0x4
    // Offset: 0x4
    int leftRight;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: AtlasPadding
    constexpr AtlasPadding(int topBottom_ = {}, int leftRight_ = {}) noexcept : topBottom{topBottom_}, leftRight{leftRight_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Int32 topBottom
    [[deprecated("Use field access instead!")]] int& dyn_topBottom();
    // Get instance field reference: public System.Int32 leftRight
    [[deprecated("Use field access instead!")]] int& dyn_leftRight();
    // public System.Void .ctor(System.Int32 p)
    // Offset: 0xA3AE5C
    AtlasPadding(int p);
    // public System.Void .ctor(System.Int32 px, System.Int32 py)
    // Offset: 0xA3AE64
    // ABORTED: conflicts with another method.  AtlasPadding(int px, int py);
  }; // DigitalOpus.MB.Core.AtlasPadding
  #pragma pack(pop)
  static check_size<sizeof(AtlasPadding), 4 + sizeof(int)> __DigitalOpus_MB_Core_AtlasPaddingSizeCheck;
  static_assert(sizeof(AtlasPadding) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::AtlasPadding::AtlasPadding
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DigitalOpus::MB::Core::AtlasPadding::AtlasPadding
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
