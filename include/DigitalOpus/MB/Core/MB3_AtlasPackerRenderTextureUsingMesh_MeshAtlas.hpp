// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DigitalOpus.MB.Core.MB3_AtlasPackerRenderTextureUsingMesh
#include "DigitalOpus/MB/Core/MB3_AtlasPackerRenderTextureUsingMesh.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombinerPipeline
#include "DigitalOpus/MB/Core/MB3_TextureCombinerPipeline.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DigitalOpus::MB::Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: AtlasPackingResult
  class AtlasPackingResult;
  // Forward declaring type: MB_TexSet
  class MB_TexSet;
  // Forward declaring type: ShaderTextureProperty
  class ShaderTextureProperty;
  // Forward declaring type: MB3_TextureCombiner
  class MB3_TextureCombiner;
  // Forward declaring type: MB2_EditorMethodsInterface
  class MB2_EditorMethodsInterface;
  // Forward declaring type: MB2_LogLevel
  struct MB2_LogLevel;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: Rect
  struct Rect;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas*, "DigitalOpus.MB.Core", "MB3_AtlasPackerRenderTextureUsingMesh/MeshAtlas");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB3_AtlasPackerRenderTextureUsingMesh/DigitalOpus.MB.Core.MeshAtlas
  // [TokenAttribute] Offset: FFFFFFFF
  class MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas : public ::Il2CppObject {
    public:
    // public System.Void .ctor()
    // Offset: 0xC2237C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas*, creationType>()));
    }
    // static System.Void BuildAtlas(DigitalOpus.MB.Core.AtlasPackingResult packedAtlasRects, System.Collections.Generic.List`1<DigitalOpus.MB.Core.MB_TexSet> distinctMaterialTextures, System.Int32 propIdx, System.Int32 atlasSizeX, System.Int32 atlasSizeY, UnityEngine.Mesh m, System.Collections.Generic.List`1<UnityEngine.Material> generatedMats, DigitalOpus.MB.Core.ShaderTextureProperty property, DigitalOpus.MB.Core.MB3_TextureCombinerPipeline/DigitalOpus.MB.Core.TexturePipelineData data, DigitalOpus.MB.Core.MB3_TextureCombiner combiner, DigitalOpus.MB.Core.MB2_EditorMethodsInterface textureEditorMethods, DigitalOpus.MB.Core.MB2_LogLevel LOG_LEVEL)
    // Offset: 0xC20E00
    static void BuildAtlas(::DigitalOpus::MB::Core::AtlasPackingResult* packedAtlasRects, ::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::MB_TexSet*>* distinctMaterialTextures, int propIdx, int atlasSizeX, int atlasSizeY, ::UnityEngine::Mesh* m, ::System::Collections::Generic::List_1<::UnityEngine::Material*>* generatedMats, ::DigitalOpus::MB::Core::ShaderTextureProperty* property, ::DigitalOpus::MB::Core::MB3_TextureCombinerPipeline::TexturePipelineData* data, ::DigitalOpus::MB::Core::MB3_TextureCombiner* combiner, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* textureEditorMethods, ::DigitalOpus::MB::Core::MB2_LogLevel LOG_LEVEL);
    // static private System.Void ConfigureMaterial_DefaultPipeline(UnityEngine.Material mt, UnityEngine.Texture2D t, System.Boolean isSavingAsANormalMapAssetThatWillBeImported, DigitalOpus.MB.Core.MB2_LogLevel LOG_LEVEL)
    // Offset: 0xC21E00
    static void ConfigureMaterial_DefaultPipeline(::UnityEngine::Material* mt, ::UnityEngine::Texture2D* t, bool isSavingAsANormalMapAssetThatWillBeImported, ::DigitalOpus::MB::Core::MB2_LogLevel LOG_LEVEL);
    // static public DigitalOpus.MB.Core.MB3_AtlasPackerRenderTextureUsingMesh/DigitalOpus.MB.Core.MeshRectInfo AddQuad(UnityEngine.Rect wldRect, UnityEngine.Rect uvRect, System.Collections.Generic.List`1<UnityEngine.Vector3> verts, System.Collections.Generic.List`1<UnityEngine.Vector2> uvs, System.Collections.Generic.List`1<System.Int32> tris)
    // Offset: 0xC21F58
    static ::DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshRectInfo* AddQuad(::UnityEngine::Rect wldRect, ::UnityEngine::Rect uvRect, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uvs, ::System::Collections::Generic::List_1<int>* tris);
    // static public System.Void AddNineSlicedRect(UnityEngine.Rect atlasRectRaw, System.Single paddingX, System.Single paddingY, UnityEngine.Rect srcUVRectt, System.Collections.Generic.List`1<UnityEngine.Vector3> verts, System.Collections.Generic.List`1<UnityEngine.Vector2> uvs, System.Collections.Generic.List`1<System.Int32> tris, System.Single srcTexWidth, System.Single srcTexHeight, System.String texName)
    // Offset: 0xC21678
    static void AddNineSlicedRect(::UnityEngine::Rect atlasRectRaw, float paddingX, float paddingY, ::UnityEngine::Rect srcUVRectt, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* verts, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>* uvs, ::System::Collections::Generic::List_1<int>* tris, float srcTexWidth, float srcTexHeight, ::StringW texName);
  }; // DigitalOpus.MB.Core.MB3_AtlasPackerRenderTextureUsingMesh/DigitalOpus.MB.Core.MeshAtlas
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas::BuildAtlas
// Il2CppName: BuildAtlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::DigitalOpus::MB::Core::AtlasPackingResult*, ::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::MB_TexSet*>*, int, int, int, ::UnityEngine::Mesh*, ::System::Collections::Generic::List_1<::UnityEngine::Material*>*, ::DigitalOpus::MB::Core::ShaderTextureProperty*, ::DigitalOpus::MB::Core::MB3_TextureCombinerPipeline::TexturePipelineData*, ::DigitalOpus::MB::Core::MB3_TextureCombiner*, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*, ::DigitalOpus::MB::Core::MB2_LogLevel)>(&DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas::BuildAtlas)> {
  static const MethodInfo* get() {
    static auto* packedAtlasRects = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "AtlasPackingResult")->byval_arg;
    static auto* distinctMaterialTextures = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_TexSet")})->byval_arg;
    static auto* propIdx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasSizeX = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasSizeY = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* m = &::il2cpp_utils::GetClassFromName("UnityEngine", "Mesh")->byval_arg;
    static auto* generatedMats = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Material")})->byval_arg;
    static auto* property = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "ShaderTextureProperty")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_TextureCombinerPipeline/TexturePipelineData")->byval_arg;
    static auto* combiner = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_TextureCombiner")->byval_arg;
    static auto* textureEditorMethods = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_EditorMethodsInterface")->byval_arg;
    static auto* LOG_LEVEL = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_LogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas*), "BuildAtlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{packedAtlasRects, distinctMaterialTextures, propIdx, atlasSizeX, atlasSizeY, m, generatedMats, property, data, combiner, textureEditorMethods, LOG_LEVEL});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas::ConfigureMaterial_DefaultPipeline
// Il2CppName: ConfigureMaterial_DefaultPipeline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Material*, ::UnityEngine::Texture2D*, bool, ::DigitalOpus::MB::Core::MB2_LogLevel)>(&DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas::ConfigureMaterial_DefaultPipeline)> {
  static const MethodInfo* get() {
    static auto* mt = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* t = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* isSavingAsANormalMapAssetThatWillBeImported = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* LOG_LEVEL = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_LogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas*), "ConfigureMaterial_DefaultPipeline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mt, t, isSavingAsANormalMapAssetThatWillBeImported, LOG_LEVEL});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas::AddQuad
// Il2CppName: AddQuad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshRectInfo* (*)(::UnityEngine::Rect, ::UnityEngine::Rect, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>*, ::System::Collections::Generic::List_1<int>*)>(&DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas::AddQuad)> {
  static const MethodInfo* get() {
    static auto* wldRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* uvRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* verts = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* uvs = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")})->byval_arg;
    static auto* tris = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas*), "AddQuad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{wldRect, uvRect, verts, uvs, tris});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas::AddNineSlicedRect
// Il2CppName: AddNineSlicedRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Rect, float, float, ::UnityEngine::Rect, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, ::System::Collections::Generic::List_1<::UnityEngine::Vector2>*, ::System::Collections::Generic::List_1<int>*, float, float, ::StringW)>(&DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas::AddNineSlicedRect)> {
  static const MethodInfo* get() {
    static auto* atlasRectRaw = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* paddingX = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* paddingY = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* srcUVRectt = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* verts = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* uvs = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")})->byval_arg;
    static auto* tris = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* srcTexWidth = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* srcTexHeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* texName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh::MeshAtlas*), "AddNineSlicedRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{atlasRectRaw, paddingX, paddingY, srcUVRectt, verts, uvs, tris, srcTexWidth, srcTexHeight, texName});
  }
};
