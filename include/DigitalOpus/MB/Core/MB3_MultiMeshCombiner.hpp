// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DigitalOpus.MB.Core.MB3_MeshCombiner
#include "DigitalOpus/MB/Core/MB3_MeshCombiner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DigitalOpus::MB::Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB3_MeshCombinerSingle
  class MB3_MeshCombinerSingle;
  // Skipping declaration: MB2_LogLevel because it is already included!
  // Skipping declaration: MB2_ValidationLevel because it is already included!
  // Forward declaring type: MB2_EditorMethodsInterface
  class MB2_EditorMethodsInterface;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Material
  class Material;
}
// Completed forward declares
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB3_MultiMeshCombiner
  class MB3_MultiMeshCombiner;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB3_MultiMeshCombiner);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, "DigitalOpus.MB.Core", "MB3_MultiMeshCombiner");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0xA4
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB3_MultiMeshCombiner
  // [TokenAttribute] Offset: FFFFFFFF
  class MB3_MultiMeshCombiner : public ::DigitalOpus::MB::Core::MB3_MeshCombiner {
    public:
    // Writing base type padding for base size: 0x89 to desired offset: 0x90
    char ___base_padding[0x7] = {};
    // Nested type: ::DigitalOpus::MB::Core::MB3_MultiMeshCombiner::CombinedMesh
    class CombinedMesh;
    public:
    // public System.Collections.Generic.Dictionary`2<System.Int32,DigitalOpus.MB.Core.MB3_MultiMeshCombiner/DigitalOpus.MB.Core.CombinedMesh> obj2MeshCombinerMap
    // Size: 0x8
    // Offset: 0x90
    ::System::Collections::Generic::Dictionary_2<int, ::DigitalOpus::MB::Core::MB3_MultiMeshCombiner::CombinedMesh*>* obj2MeshCombinerMap;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<int, ::DigitalOpus::MB::Core::MB3_MultiMeshCombiner::CombinedMesh*>*) == 0x8);
    // public System.Collections.Generic.List`1<DigitalOpus.MB.Core.MB3_MultiMeshCombiner/DigitalOpus.MB.Core.CombinedMesh> meshCombiners
    // Size: 0x8
    // Offset: 0x98
    ::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::MB3_MultiMeshCombiner::CombinedMesh*>* meshCombiners;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::MB3_MultiMeshCombiner::CombinedMesh*>*) == 0x8);
    // private System.Int32 _maxVertsInMesh
    // Size: 0x4
    // Offset: 0xA0
    int maxVertsInMesh;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get static field: static private UnityEngine.GameObject[] empty
    static ::ArrayW<::UnityEngine::GameObject*> _get_empty();
    // Set static field: static private UnityEngine.GameObject[] empty
    static void _set_empty(::ArrayW<::UnityEngine::GameObject*> value);
    // Get static field: static private System.Int32[] emptyIDs
    static ::ArrayW<int> _get_emptyIDs();
    // Set static field: static private System.Int32[] emptyIDs
    static void _set_emptyIDs(::ArrayW<int> value);
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.Int32,DigitalOpus.MB.Core.MB3_MultiMeshCombiner/DigitalOpus.MB.Core.CombinedMesh> obj2MeshCombinerMap
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::DigitalOpus::MB::Core::MB3_MultiMeshCombiner::CombinedMesh*>*& dyn_obj2MeshCombinerMap();
    // Get instance field reference: public System.Collections.Generic.List`1<DigitalOpus.MB.Core.MB3_MultiMeshCombiner/DigitalOpus.MB.Core.CombinedMesh> meshCombiners
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::MB3_MultiMeshCombiner::CombinedMesh*>*& dyn_meshCombiners();
    // Get instance field reference: private System.Int32 _maxVertsInMesh
    [[deprecated("Use field access instead!")]] int& dyn__maxVertsInMesh();
    // public System.Int32 get_maxVertsInMesh()
    // Offset: 0x11FD718
    int get_maxVertsInMesh();
    // public System.Void set_maxVertsInMesh(System.Int32 value)
    // Offset: 0x11FD720
    void set_maxVertsInMesh(int value);
    // static private System.Void .cctor()
    // Offset: 0x1201B18
    static void _cctor();
    // private System.Boolean _validateTextureBakeResults()
    // Offset: 0x11FDD10
    bool _validateTextureBakeResults();
    // private System.Boolean _validate(UnityEngine.GameObject[] gos, System.Int32[] deleteGOinstanceIDs)
    // Offset: 0x11FEFF4
    bool _validate(::ArrayW<::UnityEngine::GameObject*> gos, ::ArrayW<int> deleteGOinstanceIDs);
    // private System.Void _distributeAmongBakers(UnityEngine.GameObject[] gos, System.Int32[] deleteGOinstanceIDs)
    // Offset: 0x11FF5EC
    void _distributeAmongBakers(::ArrayW<::UnityEngine::GameObject*> gos, ::ArrayW<int> deleteGOinstanceIDs);
    // private System.Boolean _bakeStep1(UnityEngine.GameObject[] gos, System.Int32[] deleteGOinstanceIDs, System.Boolean disableRendererInSource)
    // Offset: 0x11FFFF4
    bool _bakeStep1(::ArrayW<::UnityEngine::GameObject*> gos, ::ArrayW<int> deleteGOinstanceIDs, bool disableRendererInSource);
    // private System.Void _setMBValues(DigitalOpus.MB.Core.MB3_MeshCombinerSingle targ)
    // Offset: 0x1200D90
    void _setMBValues(::DigitalOpus::MB::Core::MB3_MeshCombinerSingle* targ);
    // public override DigitalOpus.MB.Core.MB2_LogLevel get_LOG_LEVEL()
    // Offset: 0x11FD5A0
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: DigitalOpus.MB.Core.MB2_LogLevel MB3_MeshCombiner::get_LOG_LEVEL()
    ::DigitalOpus::MB::Core::MB2_LogLevel get_LOG_LEVEL();
    // public override System.Void set_LOG_LEVEL(DigitalOpus.MB.Core.MB2_LogLevel value)
    // Offset: 0x11FD5A8
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Void MB3_MeshCombiner::set_LOG_LEVEL(DigitalOpus.MB.Core.MB2_LogLevel value)
    void set_LOG_LEVEL(::DigitalOpus::MB::Core::MB2_LogLevel value);
    // public override DigitalOpus.MB.Core.MB2_ValidationLevel get_validationLevel()
    // Offset: 0x11FD710
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: DigitalOpus.MB.Core.MB2_ValidationLevel MB3_MeshCombiner::get_validationLevel()
    ::DigitalOpus::MB::Core::MB2_ValidationLevel get_validationLevel();
    // public override System.Void set_validationLevel(DigitalOpus.MB.Core.MB2_ValidationLevel value)
    // Offset: 0x11FD65C
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Void MB3_MeshCombiner::set_validationLevel(DigitalOpus.MB.Core.MB2_ValidationLevel value)
    void set_validationLevel(::DigitalOpus::MB::Core::MB2_ValidationLevel value);
    // public System.Void .ctor()
    // Offset: 0x1201A78
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Void MB3_MeshCombiner::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_MultiMeshCombiner* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_MultiMeshCombiner::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_MultiMeshCombiner*, creationType>()));
    }
    // public override System.Int32 GetNumObjectsInCombined()
    // Offset: 0x11FD964
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Int32 MB3_MeshCombiner::GetNumObjectsInCombined()
    int GetNumObjectsInCombined();
    // public override System.Int32 GetNumVerticesFor(UnityEngine.GameObject go)
    // Offset: 0x11FD9BC
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Int32 MB3_MeshCombiner::GetNumVerticesFor(UnityEngine.GameObject go)
    int GetNumVerticesFor(::UnityEngine::GameObject* go);
    // public override System.Int32 GetNumVerticesFor(System.Int32 gameObjectID)
    // Offset: 0x11FDA74
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Int32 MB3_MeshCombiner::GetNumVerticesFor(System.Int32 gameObjectID)
    int GetNumVerticesFor(int gameObjectID);
    // public override System.Collections.Generic.List`1<UnityEngine.GameObject> GetObjectsInCombined()
    // Offset: 0x11FDB18
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Collections.Generic.List`1<UnityEngine.GameObject> MB3_MeshCombiner::GetObjectsInCombined()
    ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* GetObjectsInCombined();
    // public override System.Int32 GetLightmapIndex()
    // Offset: 0x11FDC0C
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Int32 MB3_MeshCombiner::GetLightmapIndex()
    int GetLightmapIndex();
    // public override System.Boolean CombinedMeshContains(UnityEngine.GameObject go)
    // Offset: 0x11FDC94
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Boolean MB3_MeshCombiner::CombinedMeshContains(UnityEngine.GameObject go)
    bool CombinedMeshContains(::UnityEngine::GameObject* go);
    // public override System.Void Apply(DigitalOpus.MB.Core.MB3_MeshCombiner/DigitalOpus.MB.Core.GenerateUV2Delegate uv2GenerationMethod)
    // Offset: 0x11FDE48
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Void MB3_MeshCombiner::Apply(DigitalOpus.MB.Core.MB3_MeshCombiner/DigitalOpus.MB.Core.GenerateUV2Delegate uv2GenerationMethod)
    void Apply(::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate* uv2GenerationMethod);
    // public override System.Void Apply(System.Boolean triangles, System.Boolean vertices, System.Boolean normals, System.Boolean tangents, System.Boolean uvs, System.Boolean uv2, System.Boolean uv3, System.Boolean uv4, System.Boolean colors, System.Boolean bones, System.Boolean blendShapeFlag, DigitalOpus.MB.Core.MB3_MeshCombiner/DigitalOpus.MB.Core.GenerateUV2Delegate uv2GenerationMethod)
    // Offset: 0x11FDF5C
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Void MB3_MeshCombiner::Apply(System.Boolean triangles, System.Boolean vertices, System.Boolean normals, System.Boolean tangents, System.Boolean uvs, System.Boolean uv2, System.Boolean uv3, System.Boolean uv4, System.Boolean colors, System.Boolean bones, System.Boolean blendShapeFlag, DigitalOpus.MB.Core.MB3_MeshCombiner/DigitalOpus.MB.Core.GenerateUV2Delegate uv2GenerationMethod)
    void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones, bool blendShapeFlag, ::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate* uv2GenerationMethod);
    // public override System.Void Apply(System.Boolean triangles, System.Boolean vertices, System.Boolean normals, System.Boolean tangents, System.Boolean uvs, System.Boolean uv2, System.Boolean uv3, System.Boolean uv4, System.Boolean uv5, System.Boolean uv6, System.Boolean uv7, System.Boolean uv8, System.Boolean colors, System.Boolean bones, System.Boolean blendShapesFlag, DigitalOpus.MB.Core.MB3_MeshCombiner/DigitalOpus.MB.Core.GenerateUV2Delegate uv2GenerationMethod)
    // Offset: 0x11FDFE8
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Void MB3_MeshCombiner::Apply(System.Boolean triangles, System.Boolean vertices, System.Boolean normals, System.Boolean tangents, System.Boolean uvs, System.Boolean uv2, System.Boolean uv3, System.Boolean uv4, System.Boolean uv5, System.Boolean uv6, System.Boolean uv7, System.Boolean uv8, System.Boolean colors, System.Boolean bones, System.Boolean blendShapesFlag, DigitalOpus.MB.Core.MB3_MeshCombiner/DigitalOpus.MB.Core.GenerateUV2Delegate uv2GenerationMethod)
    void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool uv5, bool uv6, bool uv7, bool uv8, bool colors, bool bones, bool blendShapesFlag, ::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate* uv2GenerationMethod);
    // public override System.Void UpdateSkinnedMeshApproximateBounds()
    // Offset: 0x11FE1AC
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Void MB3_MeshCombiner::UpdateSkinnedMeshApproximateBounds()
    void UpdateSkinnedMeshApproximateBounds();
    // public override System.Void UpdateSkinnedMeshApproximateBoundsFromBones()
    // Offset: 0x11FE254
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Void MB3_MeshCombiner::UpdateSkinnedMeshApproximateBoundsFromBones()
    void UpdateSkinnedMeshApproximateBoundsFromBones();
    // public override System.Void UpdateSkinnedMeshApproximateBoundsFromBounds()
    // Offset: 0x11FE2FC
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Void MB3_MeshCombiner::UpdateSkinnedMeshApproximateBoundsFromBounds()
    void UpdateSkinnedMeshApproximateBoundsFromBounds();
    // public override System.Boolean UpdateGameObjects(UnityEngine.GameObject[] gos, System.Boolean recalcBounds, System.Boolean updateVertices, System.Boolean updateNormals, System.Boolean updateTangents, System.Boolean updateUV, System.Boolean updateUV2, System.Boolean updateUV3, System.Boolean updateUV4, System.Boolean updateColors, System.Boolean updateSkinningInfo)
    // Offset: 0x11FE3A4
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Boolean MB3_MeshCombiner::UpdateGameObjects(UnityEngine.GameObject[] gos, System.Boolean recalcBounds, System.Boolean updateVertices, System.Boolean updateNormals, System.Boolean updateTangents, System.Boolean updateUV, System.Boolean updateUV2, System.Boolean updateUV3, System.Boolean updateUV4, System.Boolean updateColors, System.Boolean updateSkinningInfo)
    bool UpdateGameObjects(::ArrayW<::UnityEngine::GameObject*> gos, bool recalcBounds, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateColors, bool updateSkinningInfo);
    // public override System.Boolean UpdateGameObjects(UnityEngine.GameObject[] gos, System.Boolean recalcBounds, System.Boolean updateVertices, System.Boolean updateNormals, System.Boolean updateTangents, System.Boolean updateUV, System.Boolean updateUV2, System.Boolean updateUV3, System.Boolean updateUV4, System.Boolean updateUV5, System.Boolean updateUV6, System.Boolean updateUV7, System.Boolean updateUV8, System.Boolean updateColors, System.Boolean updateSkinningInfo)
    // Offset: 0x11FE42C
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Boolean MB3_MeshCombiner::UpdateGameObjects(UnityEngine.GameObject[] gos, System.Boolean recalcBounds, System.Boolean updateVertices, System.Boolean updateNormals, System.Boolean updateTangents, System.Boolean updateUV, System.Boolean updateUV2, System.Boolean updateUV3, System.Boolean updateUV4, System.Boolean updateUV5, System.Boolean updateUV6, System.Boolean updateUV7, System.Boolean updateUV8, System.Boolean updateColors, System.Boolean updateSkinningInfo)
    bool UpdateGameObjects(::ArrayW<::UnityEngine::GameObject*> gos, bool recalcBounds, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateUV5, bool updateUV6, bool updateUV7, bool updateUV8, bool updateColors, bool updateSkinningInfo);
    // public override System.Boolean AddDeleteGameObjects(UnityEngine.GameObject[] gos, UnityEngine.GameObject[] deleteGOs, System.Boolean disableRendererInSource)
    // Offset: 0x11FE8CC
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Boolean MB3_MeshCombiner::AddDeleteGameObjects(UnityEngine.GameObject[] gos, UnityEngine.GameObject[] deleteGOs, System.Boolean disableRendererInSource)
    bool AddDeleteGameObjects(::ArrayW<::UnityEngine::GameObject*> gos, ::ArrayW<::UnityEngine::GameObject*> deleteGOs, bool disableRendererInSource);
    // public override System.Boolean AddDeleteGameObjectsByID(UnityEngine.GameObject[] gos, System.Int32[] deleteGOinstanceIDs, System.Boolean disableRendererInSource)
    // Offset: 0x11FEAC4
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Boolean MB3_MeshCombiner::AddDeleteGameObjectsByID(UnityEngine.GameObject[] gos, System.Int32[] deleteGOinstanceIDs, System.Boolean disableRendererInSource)
    bool AddDeleteGameObjectsByID(::ArrayW<::UnityEngine::GameObject*> gos, ::ArrayW<int> deleteGOinstanceIDs, bool disableRendererInSource);
    // public override System.Collections.Generic.Dictionary`2<DigitalOpus.MB.Core.MB3_MeshCombiner/DigitalOpus.MB.Core.MBBlendShapeKey,DigitalOpus.MB.Core.MB3_MeshCombiner/DigitalOpus.MB.Core.MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap()
    // Offset: 0x12010F4
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Collections.Generic.Dictionary`2<DigitalOpus.MB.Core.MB3_MeshCombiner/DigitalOpus.MB.Core.MBBlendShapeKey,DigitalOpus.MB.Core.MB3_MeshCombiner/DigitalOpus.MB.Core.MBBlendShapeValue> MB3_MeshCombiner::BuildSourceBlendShapeToCombinedIndexMap()
    ::System::Collections::Generic::Dictionary_2<::DigitalOpus::MB::Core::MB3_MeshCombiner::MBBlendShapeKey*, ::DigitalOpus::MB::Core::MB3_MeshCombiner::MBBlendShapeValue*>* BuildSourceBlendShapeToCombinedIndexMap();
    // public override System.Void ClearBuffers()
    // Offset: 0x12013B8
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Void MB3_MeshCombiner::ClearBuffers()
    void ClearBuffers();
    // public override System.Void ClearMesh()
    // Offset: 0x1201478
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Void MB3_MeshCombiner::ClearMesh()
    void ClearMesh();
    // public override System.Void ClearMesh(DigitalOpus.MB.Core.MB2_EditorMethodsInterface editorMethods)
    // Offset: 0x1201488
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Void MB3_MeshCombiner::ClearMesh(DigitalOpus.MB.Core.MB2_EditorMethodsInterface editorMethods)
    void ClearMesh(::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods);
    // public override System.Void DisposeRuntimeCreated()
    // Offset: 0x1201498
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Void MB3_MeshCombiner::DisposeRuntimeCreated()
    void DisposeRuntimeCreated();
    // public override System.Void DestroyMesh()
    // Offset: 0x1201540
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Void MB3_MeshCombiner::DestroyMesh()
    void DestroyMesh();
    // public override System.Void DestroyMeshEditor(DigitalOpus.MB.Core.MB2_EditorMethodsInterface editorMethods)
    // Offset: 0x120171C
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Void MB3_MeshCombiner::DestroyMeshEditor(DigitalOpus.MB.Core.MB2_EditorMethodsInterface editorMethods)
    void DestroyMeshEditor(::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods);
    // public override System.Collections.Generic.List`1<UnityEngine.Material> GetMaterialsOnTargetRenderer()
    // Offset: 0x1201884
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Collections.Generic.List`1<UnityEngine.Material> MB3_MeshCombiner::GetMaterialsOnTargetRenderer()
    ::System::Collections::Generic::List_1<::UnityEngine::Material*>* GetMaterialsOnTargetRenderer();
    // public override System.Void CheckIntegrity()
    // Offset: 0x12019A0
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshCombiner
    // Base method: System.Void MB3_MeshCombiner::CheckIntegrity()
    void CheckIntegrity();
  }; // DigitalOpus.MB.Core.MB3_MultiMeshCombiner
  #pragma pack(pop)
  static check_size<sizeof(MB3_MultiMeshCombiner), 160 + sizeof(int)> __DigitalOpus_MB_Core_MB3_MultiMeshCombinerSizeCheck;
  static_assert(sizeof(MB3_MultiMeshCombiner) == 0xA4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::get_maxVertsInMesh
// Il2CppName: get_maxVertsInMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::get_maxVertsInMesh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "get_maxVertsInMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::set_maxVertsInMesh
// Il2CppName: set_maxVertsInMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(int)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::set_maxVertsInMesh)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "set_maxVertsInMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::_validateTextureBakeResults
// Il2CppName: _validateTextureBakeResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::_validateTextureBakeResults)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "_validateTextureBakeResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::_validate
// Il2CppName: _validate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(::ArrayW<::UnityEngine::GameObject*>, ::ArrayW<int>)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::_validate)> {
  static const MethodInfo* get() {
    static auto* gos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    static auto* deleteGOinstanceIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "_validate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gos, deleteGOinstanceIDs});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::_distributeAmongBakers
// Il2CppName: _distributeAmongBakers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(::ArrayW<::UnityEngine::GameObject*>, ::ArrayW<int>)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::_distributeAmongBakers)> {
  static const MethodInfo* get() {
    static auto* gos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    static auto* deleteGOinstanceIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "_distributeAmongBakers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gos, deleteGOinstanceIDs});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::_bakeStep1
// Il2CppName: _bakeStep1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(::ArrayW<::UnityEngine::GameObject*>, ::ArrayW<int>, bool)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::_bakeStep1)> {
  static const MethodInfo* get() {
    static auto* gos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    static auto* deleteGOinstanceIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* disableRendererInSource = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "_bakeStep1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gos, deleteGOinstanceIDs, disableRendererInSource});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::_setMBValues
// Il2CppName: _setMBValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(::DigitalOpus::MB::Core::MB3_MeshCombinerSingle*)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::_setMBValues)> {
  static const MethodInfo* get() {
    static auto* targ = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_MeshCombinerSingle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "_setMBValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targ});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::get_LOG_LEVEL
// Il2CppName: get_LOG_LEVEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::MB2_LogLevel (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::get_LOG_LEVEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "get_LOG_LEVEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::set_LOG_LEVEL
// Il2CppName: set_LOG_LEVEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(::DigitalOpus::MB::Core::MB2_LogLevel)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::set_LOG_LEVEL)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_LogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "set_LOG_LEVEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::get_validationLevel
// Il2CppName: get_validationLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::MB2_ValidationLevel (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::get_validationLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "get_validationLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::set_validationLevel
// Il2CppName: set_validationLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(::DigitalOpus::MB::Core::MB2_ValidationLevel)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::set_validationLevel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_ValidationLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "set_validationLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::GetNumObjectsInCombined
// Il2CppName: GetNumObjectsInCombined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::GetNumObjectsInCombined)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "GetNumObjectsInCombined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::GetNumVerticesFor
// Il2CppName: GetNumVerticesFor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(::UnityEngine::GameObject*)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::GetNumVerticesFor)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "GetNumVerticesFor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::GetNumVerticesFor
// Il2CppName: GetNumVerticesFor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(int)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::GetNumVerticesFor)> {
  static const MethodInfo* get() {
    static auto* gameObjectID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "GetNumVerticesFor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObjectID});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::GetObjectsInCombined
// Il2CppName: GetObjectsInCombined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::GetObjectsInCombined)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "GetObjectsInCombined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::GetLightmapIndex
// Il2CppName: GetLightmapIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::GetLightmapIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "GetLightmapIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::CombinedMeshContains
// Il2CppName: CombinedMeshContains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(::UnityEngine::GameObject*)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::CombinedMeshContains)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "CombinedMeshContains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate*)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::Apply)> {
  static const MethodInfo* get() {
    static auto* uv2GenerationMethod = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_MeshCombiner/GenerateUV2Delegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uv2GenerationMethod});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, ::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate*)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::Apply)> {
  static const MethodInfo* get() {
    static auto* triangles = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* vertices = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* normals = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tangents = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uvs = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv2 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv3 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv4 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* colors = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bones = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* blendShapeFlag = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv2GenerationMethod = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_MeshCombiner/GenerateUV2Delegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{triangles, vertices, normals, tangents, uvs, uv2, uv3, uv4, colors, bones, blendShapeFlag, uv2GenerationMethod});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, ::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate*)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::Apply)> {
  static const MethodInfo* get() {
    static auto* triangles = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* vertices = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* normals = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tangents = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uvs = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv2 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv3 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv4 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv5 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv6 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv7 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv8 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* colors = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bones = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* blendShapesFlag = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv2GenerationMethod = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_MeshCombiner/GenerateUV2Delegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{triangles, vertices, normals, tangents, uvs, uv2, uv3, uv4, uv5, uv6, uv7, uv8, colors, bones, blendShapesFlag, uv2GenerationMethod});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::UpdateSkinnedMeshApproximateBounds
// Il2CppName: UpdateSkinnedMeshApproximateBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::UpdateSkinnedMeshApproximateBounds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "UpdateSkinnedMeshApproximateBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::UpdateSkinnedMeshApproximateBoundsFromBones
// Il2CppName: UpdateSkinnedMeshApproximateBoundsFromBones
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::UpdateSkinnedMeshApproximateBoundsFromBones)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "UpdateSkinnedMeshApproximateBoundsFromBones", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::UpdateSkinnedMeshApproximateBoundsFromBounds
// Il2CppName: UpdateSkinnedMeshApproximateBoundsFromBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::UpdateSkinnedMeshApproximateBoundsFromBounds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "UpdateSkinnedMeshApproximateBoundsFromBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::UpdateGameObjects
// Il2CppName: UpdateGameObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(::ArrayW<::UnityEngine::GameObject*>, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::UpdateGameObjects)> {
  static const MethodInfo* get() {
    static auto* gos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    static auto* recalcBounds = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateVertices = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateNormals = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateTangents = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV2 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV3 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV4 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateColors = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateSkinningInfo = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "UpdateGameObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gos, recalcBounds, updateVertices, updateNormals, updateTangents, updateUV, updateUV2, updateUV3, updateUV4, updateColors, updateSkinningInfo});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::UpdateGameObjects
// Il2CppName: UpdateGameObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(::ArrayW<::UnityEngine::GameObject*>, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::UpdateGameObjects)> {
  static const MethodInfo* get() {
    static auto* gos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    static auto* recalcBounds = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateVertices = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateNormals = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateTangents = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV2 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV3 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV4 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV5 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV6 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV7 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV8 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateColors = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateSkinningInfo = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "UpdateGameObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gos, recalcBounds, updateVertices, updateNormals, updateTangents, updateUV, updateUV2, updateUV3, updateUV4, updateUV5, updateUV6, updateUV7, updateUV8, updateColors, updateSkinningInfo});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::AddDeleteGameObjects
// Il2CppName: AddDeleteGameObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(::ArrayW<::UnityEngine::GameObject*>, ::ArrayW<::UnityEngine::GameObject*>, bool)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::AddDeleteGameObjects)> {
  static const MethodInfo* get() {
    static auto* gos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    static auto* deleteGOs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    static auto* disableRendererInSource = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "AddDeleteGameObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gos, deleteGOs, disableRendererInSource});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::AddDeleteGameObjectsByID
// Il2CppName: AddDeleteGameObjectsByID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(::ArrayW<::UnityEngine::GameObject*>, ::ArrayW<int>, bool)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::AddDeleteGameObjectsByID)> {
  static const MethodInfo* get() {
    static auto* gos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    static auto* deleteGOinstanceIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* disableRendererInSource = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "AddDeleteGameObjectsByID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gos, deleteGOinstanceIDs, disableRendererInSource});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::BuildSourceBlendShapeToCombinedIndexMap
// Il2CppName: BuildSourceBlendShapeToCombinedIndexMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::DigitalOpus::MB::Core::MB3_MeshCombiner::MBBlendShapeKey*, ::DigitalOpus::MB::Core::MB3_MeshCombiner::MBBlendShapeValue*>* (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::BuildSourceBlendShapeToCombinedIndexMap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "BuildSourceBlendShapeToCombinedIndexMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::ClearBuffers
// Il2CppName: ClearBuffers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::ClearBuffers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "ClearBuffers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::ClearMesh
// Il2CppName: ClearMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::ClearMesh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "ClearMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::ClearMesh
// Il2CppName: ClearMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::ClearMesh)> {
  static const MethodInfo* get() {
    static auto* editorMethods = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_EditorMethodsInterface")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "ClearMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{editorMethods});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::DisposeRuntimeCreated
// Il2CppName: DisposeRuntimeCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::DisposeRuntimeCreated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "DisposeRuntimeCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::DestroyMesh
// Il2CppName: DestroyMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::DestroyMesh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "DestroyMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::DestroyMeshEditor
// Il2CppName: DestroyMeshEditor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)(::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*)>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::DestroyMeshEditor)> {
  static const MethodInfo* get() {
    static auto* editorMethods = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_EditorMethodsInterface")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "DestroyMeshEditor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{editorMethods});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::GetMaterialsOnTargetRenderer
// Il2CppName: GetMaterialsOnTargetRenderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::Material*>* (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::GetMaterialsOnTargetRenderer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "GetMaterialsOnTargetRenderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MultiMeshCombiner::CheckIntegrity
// Il2CppName: CheckIntegrity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MultiMeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MultiMeshCombiner::CheckIntegrity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MultiMeshCombiner*), "CheckIntegrity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
