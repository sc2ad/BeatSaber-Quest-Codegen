// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DigitalOpus.MB.Core.MB_ITextureCombinerPacker
#include "DigitalOpus/MB/Core/MB_ITextureCombinerPacker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DigitalOpus::MB::Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: ProgressUpdateDelegate
  class ProgressUpdateDelegate;
  // Forward declaring type: CombineTexturesIntoAtlasesCoroutineResult
  class MB3_TextureCombiner_CombineTexturesIntoAtlasesCoroutineResult;
  // Forward declaring type: MB3_TextureCombiner
  class MB3_TextureCombiner;
  // Forward declaring type: MB2_EditorMethodsInterface
  class MB2_EditorMethodsInterface;
  // Forward declaring type: MB2_LogLevel
  struct MB2_LogLevel;
  // Forward declaring type: AtlasPackingResult
  class AtlasPackingResult;
  // Forward declaring type: MB3_AtlasPackerRenderTextureUsingMesh
  class MB3_AtlasPackerRenderTextureUsingMesh;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Texture2D
  class Texture2D;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB3_TextureCombinerPackerMeshBakerFastV2
  class MB3_TextureCombinerPackerMeshBakerFastV2;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2*, "DigitalOpus.MB.Core", "MB3_TextureCombinerPackerMeshBakerFastV2");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBakerFastV2
  // [TokenAttribute] Offset: FFFFFFFF
  class MB3_TextureCombinerPackerMeshBakerFastV2 : public ::Il2CppObject/*, public ::DigitalOpus::MB::Core::MB_ITextureCombinerPacker*/ {
    public:
    // Nested type: ::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::$ConvertTexturesToReadableFormats$d__4
    class $ConvertTexturesToReadableFormats$d__4;
    // Nested type: ::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::$CreateAtlases$d__6
    class $CreateAtlases$d__6;
    public:
    // private UnityEngine.Mesh mesh
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Mesh* mesh;
    // Field size check
    static_assert(sizeof(::UnityEngine::Mesh*) == 0x8);
    // private UnityEngine.GameObject renderAtlasesGO
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::GameObject* renderAtlasesGO;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject cameraGameObject
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* cameraGameObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::DigitalOpus::MB::Core::MB_ITextureCombinerPacker
    operator ::DigitalOpus::MB::Core::MB_ITextureCombinerPacker() noexcept {
      return *reinterpret_cast<::DigitalOpus::MB::Core::MB_ITextureCombinerPacker*>(this);
    }
    // Get instance field reference: private UnityEngine.Mesh mesh
    [[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& dyn_mesh();
    // Get instance field reference: private UnityEngine.GameObject renderAtlasesGO
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_renderAtlasesGO();
    // Get instance field reference: private UnityEngine.GameObject cameraGameObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_cameraGameObject();
    // public System.Void .ctor()
    // Offset: 0x15C839C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_TextureCombinerPackerMeshBakerFastV2* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_TextureCombinerPackerMeshBakerFastV2*, creationType>()));
    }
    // public System.Boolean Validate(DigitalOpus.MB.Core.MB3_TextureCombinerPipeline/DigitalOpus.MB.Core.TexturePipelineData data)
    // Offset: 0x15C7EC8
    bool Validate(::DigitalOpus::MB::Core::MB3_TextureCombinerPipeline::TexturePipelineData* data);
    // public System.Collections.IEnumerator ConvertTexturesToReadableFormats(DigitalOpus.MB.Core.ProgressUpdateDelegate progressInfo, DigitalOpus.MB.Core.MB3_TextureCombiner/DigitalOpus.MB.Core.CombineTexturesIntoAtlasesCoroutineResult result, DigitalOpus.MB.Core.MB3_TextureCombinerPipeline/DigitalOpus.MB.Core.TexturePipelineData data, DigitalOpus.MB.Core.MB3_TextureCombiner combiner, DigitalOpus.MB.Core.MB2_EditorMethodsInterface textureEditorMethods, DigitalOpus.MB.Core.MB2_LogLevel LOG_LEVEL)
    // Offset: 0x15C8080
    ::System::Collections::IEnumerator* ConvertTexturesToReadableFormats(::DigitalOpus::MB::Core::ProgressUpdateDelegate* progressInfo, ::DigitalOpus::MB::Core::MB3_TextureCombiner_CombineTexturesIntoAtlasesCoroutineResult* result, ::DigitalOpus::MB::Core::MB3_TextureCombinerPipeline::TexturePipelineData* data, ::DigitalOpus::MB::Core::MB3_TextureCombiner* combiner, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* textureEditorMethods, ::DigitalOpus::MB::Core::MB2_LogLevel LOG_LEVEL);
    // public DigitalOpus.MB.Core.AtlasPackingResult[] CalculateAtlasRectangles(DigitalOpus.MB.Core.MB3_TextureCombinerPipeline/DigitalOpus.MB.Core.TexturePipelineData data, System.Boolean doMultiAtlas, DigitalOpus.MB.Core.MB2_LogLevel LOG_LEVEL)
    // Offset: 0x15C810C
    ::ArrayW<::DigitalOpus::MB::Core::AtlasPackingResult*> CalculateAtlasRectangles(::DigitalOpus::MB::Core::MB3_TextureCombinerPipeline::TexturePipelineData* data, bool doMultiAtlas, ::DigitalOpus::MB::Core::MB2_LogLevel LOG_LEVEL);
    // public System.Collections.IEnumerator CreateAtlases(DigitalOpus.MB.Core.ProgressUpdateDelegate progressInfo, DigitalOpus.MB.Core.MB3_TextureCombinerPipeline/DigitalOpus.MB.Core.TexturePipelineData data, DigitalOpus.MB.Core.MB3_TextureCombiner combiner, DigitalOpus.MB.Core.AtlasPackingResult packedAtlasRects, UnityEngine.Texture2D[] atlases, DigitalOpus.MB.Core.MB2_EditorMethodsInterface textureEditorMethods, DigitalOpus.MB.Core.MB2_LogLevel LOG_LEVEL)
    // Offset: 0x15C811C
    ::System::Collections::IEnumerator* CreateAtlases(::DigitalOpus::MB::Core::ProgressUpdateDelegate* progressInfo, ::DigitalOpus::MB::Core::MB3_TextureCombinerPipeline::TexturePipelineData* data, ::DigitalOpus::MB::Core::MB3_TextureCombiner* combiner, ::DigitalOpus::MB::Core::AtlasPackingResult* packedAtlasRects, ::ArrayW<::UnityEngine::Texture2D*> atlases, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* textureEditorMethods, ::DigitalOpus::MB::Core::MB2_LogLevel LOG_LEVEL);
    // private System.Void OneTimeSetup(DigitalOpus.MB.Core.MB3_AtlasPackerRenderTextureUsingMesh atlasRenderer, UnityEngine.GameObject atlasMesh, UnityEngine.GameObject cameraGameObject, System.Int32 atlasWidth, System.Int32 atlasHeight, System.Int32 padding, System.Int32 layer, DigitalOpus.MB.Core.MB2_LogLevel logLevel)
    // Offset: 0x15C8204
    void OneTimeSetup(::DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh* atlasRenderer, ::UnityEngine::GameObject* atlasMesh, ::UnityEngine::GameObject* cameraGameObject, int atlasWidth, int atlasHeight, int padding, int layer, ::DigitalOpus::MB::Core::MB2_LogLevel logLevel);
  }; // DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBakerFastV2
  #pragma pack(pop)
  static check_size<sizeof(MB3_TextureCombinerPackerMeshBakerFastV2), 32 + sizeof(::UnityEngine::GameObject*)> __DigitalOpus_MB_Core_MB3_TextureCombinerPackerMeshBakerFastV2SizeCheck;
  static_assert(sizeof(MB3_TextureCombinerPackerMeshBakerFastV2) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::Validate
// Il2CppName: Validate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::*)(::DigitalOpus::MB::Core::MB3_TextureCombinerPipeline::TexturePipelineData*)>(&DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::Validate)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_TextureCombinerPipeline/TexturePipelineData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2*), "Validate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::ConvertTexturesToReadableFormats
// Il2CppName: ConvertTexturesToReadableFormats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::*)(::DigitalOpus::MB::Core::ProgressUpdateDelegate*, ::DigitalOpus::MB::Core::MB3_TextureCombiner_CombineTexturesIntoAtlasesCoroutineResult*, ::DigitalOpus::MB::Core::MB3_TextureCombinerPipeline::TexturePipelineData*, ::DigitalOpus::MB::Core::MB3_TextureCombiner*, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*, ::DigitalOpus::MB::Core::MB2_LogLevel)>(&DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::ConvertTexturesToReadableFormats)> {
  static const MethodInfo* get() {
    static auto* progressInfo = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "ProgressUpdateDelegate")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_TextureCombiner/CombineTexturesIntoAtlasesCoroutineResult")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_TextureCombinerPipeline/TexturePipelineData")->byval_arg;
    static auto* combiner = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_TextureCombiner")->byval_arg;
    static auto* textureEditorMethods = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_EditorMethodsInterface")->byval_arg;
    static auto* LOG_LEVEL = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_LogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2*), "ConvertTexturesToReadableFormats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{progressInfo, result, data, combiner, textureEditorMethods, LOG_LEVEL});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::CalculateAtlasRectangles
// Il2CppName: CalculateAtlasRectangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::DigitalOpus::MB::Core::AtlasPackingResult*> (DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::*)(::DigitalOpus::MB::Core::MB3_TextureCombinerPipeline::TexturePipelineData*, bool, ::DigitalOpus::MB::Core::MB2_LogLevel)>(&DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::CalculateAtlasRectangles)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_TextureCombinerPipeline/TexturePipelineData")->byval_arg;
    static auto* doMultiAtlas = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* LOG_LEVEL = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_LogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2*), "CalculateAtlasRectangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, doMultiAtlas, LOG_LEVEL});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::CreateAtlases
// Il2CppName: CreateAtlases
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::*)(::DigitalOpus::MB::Core::ProgressUpdateDelegate*, ::DigitalOpus::MB::Core::MB3_TextureCombinerPipeline::TexturePipelineData*, ::DigitalOpus::MB::Core::MB3_TextureCombiner*, ::DigitalOpus::MB::Core::AtlasPackingResult*, ::ArrayW<::UnityEngine::Texture2D*>, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*, ::DigitalOpus::MB::Core::MB2_LogLevel)>(&DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::CreateAtlases)> {
  static const MethodInfo* get() {
    static auto* progressInfo = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "ProgressUpdateDelegate")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_TextureCombinerPipeline/TexturePipelineData")->byval_arg;
    static auto* combiner = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_TextureCombiner")->byval_arg;
    static auto* packedAtlasRects = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "AtlasPackingResult")->byval_arg;
    static auto* atlases = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D"), 1)->byval_arg;
    static auto* textureEditorMethods = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_EditorMethodsInterface")->byval_arg;
    static auto* LOG_LEVEL = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_LogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2*), "CreateAtlases", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{progressInfo, data, combiner, packedAtlasRects, atlases, textureEditorMethods, LOG_LEVEL});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::OneTimeSetup
// Il2CppName: OneTimeSetup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::*)(::DigitalOpus::MB::Core::MB3_AtlasPackerRenderTextureUsingMesh*, ::UnityEngine::GameObject*, ::UnityEngine::GameObject*, int, int, int, int, ::DigitalOpus::MB::Core::MB2_LogLevel)>(&DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2::OneTimeSetup)> {
  static const MethodInfo* get() {
    static auto* atlasRenderer = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_AtlasPackerRenderTextureUsingMesh")->byval_arg;
    static auto* atlasMesh = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* cameraGameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* atlasWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* atlasHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* padding = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* layer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* logLevel = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_LogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerFastV2*), "OneTimeSetup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{atlasRenderer, atlasMesh, cameraGameObject, atlasWidth, atlasHeight, padding, layer, logLevel});
  }
};
