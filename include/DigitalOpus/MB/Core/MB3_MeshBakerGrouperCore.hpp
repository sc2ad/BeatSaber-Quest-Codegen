// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MB3_MeshBakerGrouper
#include "GlobalNamespace/MB3_MeshBakerGrouper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DigitalOpus::MB::Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: GrouperData
  class GrouperData;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Renderer
  class Renderer;
  // Forward declaring type: GameObject
  class GameObject;
  // Skipping declaration: Bounds because it is already included!
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MB3_MeshBakerCommon
  class MB3_MeshBakerCommon;
  // Forward declaring type: MB3_TextureBaker
  class MB3_TextureBaker;
}
// Completed forward declares
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB3_MeshBakerGrouperCore
  class MB3_MeshBakerGrouperCore;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore*, "DigitalOpus.MB.Core", "MB3_MeshBakerGrouperCore");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB3_MeshBakerGrouperCore
  // [TokenAttribute] Offset: FFFFFFFF
  class MB3_MeshBakerGrouperCore : public ::Il2CppObject {
    public:
    // Nested type: ::DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::$$c__DisplayClass3_0
    class $$c__DisplayClass3_0;
    public:
    // public DigitalOpus.MB.Core.GrouperData d
    // Size: 0x8
    // Offset: 0x10
    ::DigitalOpus::MB::Core::GrouperData* d;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::GrouperData*) == 0x8);
    public:
    // Creating conversion operator: operator ::DigitalOpus::MB::Core::GrouperData*
    constexpr operator ::DigitalOpus::MB::Core::GrouperData*() const noexcept {
      return d;
    }
    // Get instance field reference: public DigitalOpus.MB.Core.GrouperData d
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::GrouperData*& dyn_d();
    // protected System.Void .ctor()
    // Offset: 0xC249BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_MeshBakerGrouperCore* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_MeshBakerGrouperCore*, creationType>()));
    }
    // public System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<UnityEngine.Renderer>> FilterIntoGroups(System.Collections.Generic.List`1<UnityEngine.GameObject> selection)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*>* FilterIntoGroups(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* selection);
    // public System.Void DrawGizmos(UnityEngine.Bounds sourceObjectBounds)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DrawGizmos(::UnityEngine::Bounds sourceObjectBounds);
    // public System.Collections.Generic.List`1<MB3_MeshBakerCommon> DoClustering(MB3_TextureBaker tb, MB3_MeshBakerGrouper grouper)
    // Offset: 0xC25880
    ::System::Collections::Generic::List_1<::GlobalNamespace::MB3_MeshBakerCommon*>* DoClustering(::GlobalNamespace::MB3_TextureBaker* tb, ::GlobalNamespace::MB3_MeshBakerGrouper* grouper);
    // private System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.List`1<UnityEngine.Renderer>> GroupByLightmapIndex(System.Collections.Generic.List`1<UnityEngine.Renderer> gaws)
    // Offset: 0xC26650
    ::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*>* GroupByLightmapIndex(::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* gaws);
    // private MB3_MeshBakerCommon AddMeshBaker(MB3_MeshBakerGrouper grouper, MB3_TextureBaker tb, System.String key, System.Collections.Generic.List`1<UnityEngine.Renderer> gaws)
    // Offset: 0xC26844
    ::GlobalNamespace::MB3_MeshBakerCommon* AddMeshBaker(::GlobalNamespace::MB3_MeshBakerGrouper* grouper, ::GlobalNamespace::MB3_TextureBaker* tb, ::StringW key, ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>* gaws);
    // public MB3_MeshBakerGrouper/ClusterType GetClusterType()
    // Offset: 0xC26B58
    ::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType GetClusterType();
  }; // DigitalOpus.MB.Core.MB3_MeshBakerGrouperCore
  #pragma pack(pop)
  static check_size<sizeof(MB3_MeshBakerGrouperCore), 16 + sizeof(::DigitalOpus::MB::Core::GrouperData*)> __DigitalOpus_MB_Core_MB3_MeshBakerGrouperCoreSizeCheck;
  static_assert(sizeof(MB3_MeshBakerGrouperCore) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::FilterIntoGroups
// Il2CppName: FilterIntoGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*>* (DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::*)(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*)>(&DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::FilterIntoGroups)> {
  static const MethodInfo* get() {
    static auto* selection = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore*), "FilterIntoGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selection});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::DrawGizmos
// Il2CppName: DrawGizmos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::*)(::UnityEngine::Bounds)>(&DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::DrawGizmos)> {
  static const MethodInfo* get() {
    static auto* sourceObjectBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore*), "DrawGizmos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sourceObjectBounds});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::DoClustering
// Il2CppName: DoClustering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::GlobalNamespace::MB3_MeshBakerCommon*>* (DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::*)(::GlobalNamespace::MB3_TextureBaker*, ::GlobalNamespace::MB3_MeshBakerGrouper*)>(&DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::DoClustering)> {
  static const MethodInfo* get() {
    static auto* tb = &::il2cpp_utils::GetClassFromName("", "MB3_TextureBaker")->byval_arg;
    static auto* grouper = &::il2cpp_utils::GetClassFromName("", "MB3_MeshBakerGrouper")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore*), "DoClustering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tb, grouper});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::GroupByLightmapIndex
// Il2CppName: GroupByLightmapIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*>* (DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::*)(::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*)>(&DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::GroupByLightmapIndex)> {
  static const MethodInfo* get() {
    static auto* gaws = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Renderer")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore*), "GroupByLightmapIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gaws});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::AddMeshBaker
// Il2CppName: AddMeshBaker
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::MB3_MeshBakerCommon* (DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::*)(::GlobalNamespace::MB3_MeshBakerGrouper*, ::GlobalNamespace::MB3_TextureBaker*, ::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*)>(&DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::AddMeshBaker)> {
  static const MethodInfo* get() {
    static auto* grouper = &::il2cpp_utils::GetClassFromName("", "MB3_MeshBakerGrouper")->byval_arg;
    static auto* tb = &::il2cpp_utils::GetClassFromName("", "MB3_TextureBaker")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* gaws = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Renderer")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore*), "AddMeshBaker", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{grouper, tb, key, gaws});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::GetClusterType
// Il2CppName: GetClusterType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType (DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::*)()>(&DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore::GetClusterType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore*), "GetClusterType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
