// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DigitalOpus.MB.Core.MB2_LogLevel
#include "DigitalOpus/MB/Core/MB2_LogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DigitalOpus::MB::Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB3_TextureCombinerNonTextureProperties
  class MB3_TextureCombinerNonTextureProperties;
  // Forward declaring type: MB_TexSet
  class MB_TexSet;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rect
  struct Rect;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB3_TextureCombinerMerging
  class MB3_TextureCombinerMerging;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB3_TextureCombinerMerging);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB3_TextureCombinerMerging*, "DigitalOpus.MB.Core", "MB3_TextureCombinerMerging");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB3_TextureCombinerMerging
  // [TokenAttribute] Offset: FFFFFFFF
  class MB3_TextureCombinerMerging : public ::Il2CppObject {
    public:
    public:
    // private System.Boolean _HasBeenInitialized
    // Size: 0x1
    // Offset: 0x10
    bool HasBeenInitialized;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean _considerNonTextureProperties
    // Size: 0x1
    // Offset: 0x11
    bool considerNonTextureProperties;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: considerNonTextureProperties and: resultMaterialTextureBlender
    char __padding1[0x6] = {};
    // private DigitalOpus.MB.Core.MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender
    // Size: 0x8
    // Offset: 0x18
    ::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties* resultMaterialTextureBlender;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties*) == 0x8);
    // private System.Boolean fixOutOfBoundsUVs
    // Size: 0x1
    // Offset: 0x20
    bool fixOutOfBoundsUVs;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: fixOutOfBoundsUVs and: LOG_LEVEL
    char __padding3[0x3] = {};
    // public DigitalOpus.MB.Core.MB2_LogLevel LOG_LEVEL
    // Size: 0x4
    // Offset: 0x24
    ::DigitalOpus::MB::Core::MB2_LogLevel LOG_LEVEL;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB2_LogLevel) == 0x4);
    public:
    // Get static field: static public System.Boolean DO_INTEGRITY_CHECKS
    static bool _get_DO_INTEGRITY_CHECKS();
    // Set static field: static public System.Boolean DO_INTEGRITY_CHECKS
    static void _set_DO_INTEGRITY_CHECKS(bool value);
    // Get static field: static private System.Boolean LOG_LEVEL_TRACE_MERGE_MAT_SUBRECTS
    static bool _get_LOG_LEVEL_TRACE_MERGE_MAT_SUBRECTS();
    // Set static field: static private System.Boolean LOG_LEVEL_TRACE_MERGE_MAT_SUBRECTS
    static void _set_LOG_LEVEL_TRACE_MERGE_MAT_SUBRECTS(bool value);
    // Get instance field reference: private System.Boolean _HasBeenInitialized
    [[deprecated("Use field access instead!")]] bool& dyn__HasBeenInitialized();
    // Get instance field reference: private System.Boolean _considerNonTextureProperties
    [[deprecated("Use field access instead!")]] bool& dyn__considerNonTextureProperties();
    // Get instance field reference: private DigitalOpus.MB.Core.MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties*& dyn_resultMaterialTextureBlender();
    // Get instance field reference: private System.Boolean fixOutOfBoundsUVs
    [[deprecated("Use field access instead!")]] bool& dyn_fixOutOfBoundsUVs();
    // Get instance field reference: public DigitalOpus.MB.Core.MB2_LogLevel LOG_LEVEL
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_LogLevel& dyn_LOG_LEVEL();
    // public System.Void .ctor(System.Boolean considerNonTextureProps, DigitalOpus.MB.Core.MB3_TextureCombinerNonTextureProperties resultMaterialTexBlender, System.Boolean fixObUVs, DigitalOpus.MB.Core.MB2_LogLevel logLevel)
    // Offset: 0x1206BD4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_TextureCombinerMerging* New_ctor(bool considerNonTextureProps, ::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties* resultMaterialTexBlender, bool fixObUVs, ::DigitalOpus::MB::Core::MB2_LogLevel logLevel) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_TextureCombinerMerging::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_TextureCombinerMerging*, creationType>(considerNonTextureProps, resultMaterialTexBlender, fixObUVs, logLevel)));
    }
    // static private System.Void .cctor()
    // Offset: 0x1209240
    static void _cctor();
    // static public UnityEngine.Rect BuildTransformMeshUV2AtlasRect(System.Boolean considerMeshUVs, UnityEngine.Rect _atlasRect, UnityEngine.Rect _obUVRect, UnityEngine.Rect _sourceMaterialTiling, UnityEngine.Rect _encapsulatingRect)
    // Offset: 0x11FD3C8
    static ::UnityEngine::Rect BuildTransformMeshUV2AtlasRect(bool considerMeshUVs, ::UnityEngine::Rect _atlasRect, ::UnityEngine::Rect _obUVRect, ::UnityEngine::Rect _sourceMaterialTiling, ::UnityEngine::Rect _encapsulatingRect);
    // public System.Void MergeOverlappingDistinctMaterialTexturesAndCalcMaterialSubrects(System.Collections.Generic.List`1<DigitalOpus.MB.Core.MB_TexSet> distinctMaterialTextures)
    // Offset: 0x1206C40
    void MergeOverlappingDistinctMaterialTexturesAndCalcMaterialSubrects(::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::MB_TexSet*>* distinctMaterialTextures);
    // public System.Void MergeDistinctMaterialTexturesThatWouldExceedMaxAtlasSizeAndCalcMaterialSubrects(System.Collections.Generic.List`1<DigitalOpus.MB.Core.MB_TexSet> distinctMaterialTextures, System.Int32 maxAtlasSize)
    // Offset: 0x12085F0
    void MergeDistinctMaterialTexturesThatWouldExceedMaxAtlasSizeAndCalcMaterialSubrects(::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::MB_TexSet*>* distinctMaterialTextures, int maxAtlasSize);
    // public System.Void DoIntegrityCheckMergedEncapsulatingSamplingRects(System.Collections.Generic.List`1<DigitalOpus.MB.Core.MB_TexSet> distinctMaterialTextures)
    // Offset: 0x1207D58
    void DoIntegrityCheckMergedEncapsulatingSamplingRects(::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::MB_TexSet*>* distinctMaterialTextures);
  }; // DigitalOpus.MB.Core.MB3_TextureCombinerMerging
  #pragma pack(pop)
  static check_size<sizeof(MB3_TextureCombinerMerging), 36 + sizeof(::DigitalOpus::MB::Core::MB2_LogLevel)> __DigitalOpus_MB_Core_MB3_TextureCombinerMergingSizeCheck;
  static_assert(sizeof(MB3_TextureCombinerMerging) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerMerging::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerMerging::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DigitalOpus::MB::Core::MB3_TextureCombinerMerging::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerMerging*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerMerging::BuildTransformMeshUV2AtlasRect
// Il2CppName: BuildTransformMeshUV2AtlasRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (*)(bool, ::UnityEngine::Rect, ::UnityEngine::Rect, ::UnityEngine::Rect, ::UnityEngine::Rect)>(&DigitalOpus::MB::Core::MB3_TextureCombinerMerging::BuildTransformMeshUV2AtlasRect)> {
  static const MethodInfo* get() {
    static auto* considerMeshUVs = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* _atlasRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* _obUVRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* _sourceMaterialTiling = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    static auto* _encapsulatingRect = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerMerging*), "BuildTransformMeshUV2AtlasRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{considerMeshUVs, _atlasRect, _obUVRect, _sourceMaterialTiling, _encapsulatingRect});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerMerging::MergeOverlappingDistinctMaterialTexturesAndCalcMaterialSubrects
// Il2CppName: MergeOverlappingDistinctMaterialTexturesAndCalcMaterialSubrects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_TextureCombinerMerging::*)(::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::MB_TexSet*>*)>(&DigitalOpus::MB::Core::MB3_TextureCombinerMerging::MergeOverlappingDistinctMaterialTexturesAndCalcMaterialSubrects)> {
  static const MethodInfo* get() {
    static auto* distinctMaterialTextures = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_TexSet")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerMerging*), "MergeOverlappingDistinctMaterialTexturesAndCalcMaterialSubrects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{distinctMaterialTextures});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerMerging::MergeDistinctMaterialTexturesThatWouldExceedMaxAtlasSizeAndCalcMaterialSubrects
// Il2CppName: MergeDistinctMaterialTexturesThatWouldExceedMaxAtlasSizeAndCalcMaterialSubrects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_TextureCombinerMerging::*)(::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::MB_TexSet*>*, int)>(&DigitalOpus::MB::Core::MB3_TextureCombinerMerging::MergeDistinctMaterialTexturesThatWouldExceedMaxAtlasSizeAndCalcMaterialSubrects)> {
  static const MethodInfo* get() {
    static auto* distinctMaterialTextures = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_TexSet")})->byval_arg;
    static auto* maxAtlasSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerMerging*), "MergeDistinctMaterialTexturesThatWouldExceedMaxAtlasSizeAndCalcMaterialSubrects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{distinctMaterialTextures, maxAtlasSize});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerMerging::DoIntegrityCheckMergedEncapsulatingSamplingRects
// Il2CppName: DoIntegrityCheckMergedEncapsulatingSamplingRects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_TextureCombinerMerging::*)(::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::MB_TexSet*>*)>(&DigitalOpus::MB::Core::MB3_TextureCombinerMerging::DoIntegrityCheckMergedEncapsulatingSamplingRects)> {
  static const MethodInfo* get() {
    static auto* distinctMaterialTextures = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_TexSet")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerMerging*), "DoIntegrityCheckMergedEncapsulatingSamplingRects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{distinctMaterialTextures});
  }
};
