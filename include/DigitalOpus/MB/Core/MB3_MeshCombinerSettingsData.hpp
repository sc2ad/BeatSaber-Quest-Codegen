// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DigitalOpus.MB.Core.MB_IMeshBakerSettings
#include "DigitalOpus/MB/Core/MB_IMeshBakerSettings.hpp"
// Including type: DigitalOpus.MB.Core.MB_RenderType
#include "DigitalOpus/MB/Core/MB_RenderType.hpp"
// Including type: DigitalOpus.MB.Core.MB2_OutputOptions
#include "DigitalOpus/MB/Core/MB2_OutputOptions.hpp"
// Including type: DigitalOpus.MB.Core.MB2_LightmapOptions
#include "DigitalOpus/MB/Core/MB2_LightmapOptions.hpp"
// Including type: DigitalOpus.MB.Core.MB_MeshPivotLocation
#include "DigitalOpus/MB/Core/MB_MeshPivotLocation.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
}
// Forward declaring namespace: DigitalOpus::MB::Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: IAssignToMeshCustomizer
  class IAssignToMeshCustomizer;
}
// Completed forward declares
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB3_MeshCombinerSettingsData
  class MB3_MeshCombinerSettingsData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*, "DigitalOpus.MB.Core", "MB3_MeshCombinerSettingsData");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB3_MeshCombinerSettingsData
  // [TokenAttribute] Offset: FFFFFFFF
  class MB3_MeshCombinerSettingsData : public ::Il2CppObject/*, public ::DigitalOpus::MB::Core::MB_IMeshBakerSettings*/ {
    public:
    public:
    // protected DigitalOpus.MB.Core.MB_RenderType _renderType
    // Size: 0x4
    // Offset: 0x10
    ::DigitalOpus::MB::Core::MB_RenderType renderType;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB_RenderType) == 0x4);
    // protected DigitalOpus.MB.Core.MB2_OutputOptions _outputOption
    // Size: 0x4
    // Offset: 0x14
    ::DigitalOpus::MB::Core::MB2_OutputOptions outputOption;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB2_OutputOptions) == 0x4);
    // protected DigitalOpus.MB.Core.MB2_LightmapOptions _lightmapOption
    // Size: 0x4
    // Offset: 0x18
    ::DigitalOpus::MB::Core::MB2_LightmapOptions lightmapOption;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB2_LightmapOptions) == 0x4);
    // protected System.Boolean _doNorm
    // Size: 0x1
    // Offset: 0x1C
    bool doNorm;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doTan
    // Size: 0x1
    // Offset: 0x1D
    bool doTan;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doCol
    // Size: 0x1
    // Offset: 0x1E
    bool doCol;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doUV
    // Size: 0x1
    // Offset: 0x1F
    bool doUV;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doUV3
    // Size: 0x1
    // Offset: 0x20
    bool doUV3;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doUV4
    // Size: 0x1
    // Offset: 0x21
    bool doUV4;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doUV5
    // Size: 0x1
    // Offset: 0x22
    bool doUV5;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doUV6
    // Size: 0x1
    // Offset: 0x23
    bool doUV6;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doUV7
    // Size: 0x1
    // Offset: 0x24
    bool doUV7;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doUV8
    // Size: 0x1
    // Offset: 0x25
    bool doUV8;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doBlendShapes
    // Size: 0x1
    // Offset: 0x26
    bool doBlendShapes;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: doBlendShapes and: pivotLocationType
    char __padding13[0x1] = {};
    // [FormerlySerializedAsAttribute] Offset: 0x98FF90
    // protected DigitalOpus.MB.Core.MB_MeshPivotLocation _pivotLocationType
    // Size: 0x4
    // Offset: 0x28
    ::DigitalOpus::MB::Core::MB_MeshPivotLocation pivotLocationType;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB_MeshPivotLocation) == 0x4);
    // protected UnityEngine.Vector3 _pivotLocation
    // Size: 0xC
    // Offset: 0x2C
    ::UnityEngine::Vector3 pivotLocation;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // protected System.Boolean _clearBuffersAfterBake
    // Size: 0x1
    // Offset: 0x38
    bool clearBuffersAfterBake;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean _optimizeAfterBake
    // Size: 0x1
    // Offset: 0x39
    bool optimizeAfterBake;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: optimizeAfterBake and: uv2UnwrappingParamsHardAngle
    char __padding17[0x2] = {};
    // protected System.Single _uv2UnwrappingParamsHardAngle
    // Size: 0x4
    // Offset: 0x3C
    float uv2UnwrappingParamsHardAngle;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // protected System.Single _uv2UnwrappingParamsPackMargin
    // Size: 0x4
    // Offset: 0x40
    float uv2UnwrappingParamsPackMargin;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // protected System.Boolean _smrNoExtraBonesWhenCombiningMeshRenderers
    // Size: 0x1
    // Offset: 0x44
    bool smrNoExtraBonesWhenCombiningMeshRenderers;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _smrMergeBlendShapesWithSameNames
    // Size: 0x1
    // Offset: 0x45
    bool smrMergeBlendShapesWithSameNames;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: smrMergeBlendShapesWithSameNames and: assignToMeshCustomizer
    char __padding21[0x2] = {};
    // protected UnityEngine.Object _assignToMeshCustomizer
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Object* assignToMeshCustomizer;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::DigitalOpus::MB::Core::MB_IMeshBakerSettings
    operator ::DigitalOpus::MB::Core::MB_IMeshBakerSettings() noexcept {
      return *reinterpret_cast<::DigitalOpus::MB::Core::MB_IMeshBakerSettings*>(this);
    }
    // Get instance field reference: protected DigitalOpus.MB.Core.MB_RenderType _renderType
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB_RenderType& dyn__renderType();
    // Get instance field reference: protected DigitalOpus.MB.Core.MB2_OutputOptions _outputOption
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_OutputOptions& dyn__outputOption();
    // Get instance field reference: protected DigitalOpus.MB.Core.MB2_LightmapOptions _lightmapOption
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_LightmapOptions& dyn__lightmapOption();
    // Get instance field reference: protected System.Boolean _doNorm
    [[deprecated("Use field access instead!")]] bool& dyn__doNorm();
    // Get instance field reference: protected System.Boolean _doTan
    [[deprecated("Use field access instead!")]] bool& dyn__doTan();
    // Get instance field reference: protected System.Boolean _doCol
    [[deprecated("Use field access instead!")]] bool& dyn__doCol();
    // Get instance field reference: protected System.Boolean _doUV
    [[deprecated("Use field access instead!")]] bool& dyn__doUV();
    // Get instance field reference: protected System.Boolean _doUV3
    [[deprecated("Use field access instead!")]] bool& dyn__doUV3();
    // Get instance field reference: protected System.Boolean _doUV4
    [[deprecated("Use field access instead!")]] bool& dyn__doUV4();
    // Get instance field reference: protected System.Boolean _doUV5
    [[deprecated("Use field access instead!")]] bool& dyn__doUV5();
    // Get instance field reference: protected System.Boolean _doUV6
    [[deprecated("Use field access instead!")]] bool& dyn__doUV6();
    // Get instance field reference: protected System.Boolean _doUV7
    [[deprecated("Use field access instead!")]] bool& dyn__doUV7();
    // Get instance field reference: protected System.Boolean _doUV8
    [[deprecated("Use field access instead!")]] bool& dyn__doUV8();
    // Get instance field reference: protected System.Boolean _doBlendShapes
    [[deprecated("Use field access instead!")]] bool& dyn__doBlendShapes();
    // Get instance field reference: protected DigitalOpus.MB.Core.MB_MeshPivotLocation _pivotLocationType
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB_MeshPivotLocation& dyn__pivotLocationType();
    // Get instance field reference: protected UnityEngine.Vector3 _pivotLocation
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn__pivotLocation();
    // Get instance field reference: protected System.Boolean _clearBuffersAfterBake
    [[deprecated("Use field access instead!")]] bool& dyn__clearBuffersAfterBake();
    // Get instance field reference: public System.Boolean _optimizeAfterBake
    [[deprecated("Use field access instead!")]] bool& dyn__optimizeAfterBake();
    // Get instance field reference: protected System.Single _uv2UnwrappingParamsHardAngle
    [[deprecated("Use field access instead!")]] float& dyn__uv2UnwrappingParamsHardAngle();
    // Get instance field reference: protected System.Single _uv2UnwrappingParamsPackMargin
    [[deprecated("Use field access instead!")]] float& dyn__uv2UnwrappingParamsPackMargin();
    // Get instance field reference: protected System.Boolean _smrNoExtraBonesWhenCombiningMeshRenderers
    [[deprecated("Use field access instead!")]] bool& dyn__smrNoExtraBonesWhenCombiningMeshRenderers();
    // Get instance field reference: protected System.Boolean _smrMergeBlendShapesWithSameNames
    [[deprecated("Use field access instead!")]] bool& dyn__smrMergeBlendShapesWithSameNames();
    // Get instance field reference: protected UnityEngine.Object _assignToMeshCustomizer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__assignToMeshCustomizer();
    // public DigitalOpus.MB.Core.MB_RenderType get_renderType()
    // Offset: 0xC2A720
    ::DigitalOpus::MB::Core::MB_RenderType get_renderType();
    // public System.Void set_renderType(DigitalOpus.MB.Core.MB_RenderType value)
    // Offset: 0xC2A728
    void set_renderType(::DigitalOpus::MB::Core::MB_RenderType value);
    // public DigitalOpus.MB.Core.MB2_OutputOptions get_outputOption()
    // Offset: 0xC2A730
    ::DigitalOpus::MB::Core::MB2_OutputOptions get_outputOption();
    // public System.Void set_outputOption(DigitalOpus.MB.Core.MB2_OutputOptions value)
    // Offset: 0xC2A738
    void set_outputOption(::DigitalOpus::MB::Core::MB2_OutputOptions value);
    // public DigitalOpus.MB.Core.MB2_LightmapOptions get_lightmapOption()
    // Offset: 0xC2A740
    ::DigitalOpus::MB::Core::MB2_LightmapOptions get_lightmapOption();
    // public System.Void set_lightmapOption(DigitalOpus.MB.Core.MB2_LightmapOptions value)
    // Offset: 0xC2A748
    void set_lightmapOption(::DigitalOpus::MB::Core::MB2_LightmapOptions value);
    // public System.Boolean get_doNorm()
    // Offset: 0xC2A750
    bool get_doNorm();
    // public System.Void set_doNorm(System.Boolean value)
    // Offset: 0xC2A758
    void set_doNorm(bool value);
    // public System.Boolean get_doTan()
    // Offset: 0xC2A764
    bool get_doTan();
    // public System.Void set_doTan(System.Boolean value)
    // Offset: 0xC2A76C
    void set_doTan(bool value);
    // public System.Boolean get_doCol()
    // Offset: 0xC2A778
    bool get_doCol();
    // public System.Void set_doCol(System.Boolean value)
    // Offset: 0xC2A780
    void set_doCol(bool value);
    // public System.Boolean get_doUV()
    // Offset: 0xC2A78C
    bool get_doUV();
    // public System.Void set_doUV(System.Boolean value)
    // Offset: 0xC2A794
    void set_doUV(bool value);
    // public System.Boolean get_doUV3()
    // Offset: 0xC2A7A0
    bool get_doUV3();
    // public System.Void set_doUV3(System.Boolean value)
    // Offset: 0xC2A7A8
    void set_doUV3(bool value);
    // public System.Boolean get_doUV4()
    // Offset: 0xC2A7B4
    bool get_doUV4();
    // public System.Void set_doUV4(System.Boolean value)
    // Offset: 0xC2A7BC
    void set_doUV4(bool value);
    // public System.Boolean get_doUV5()
    // Offset: 0xC2A7C8
    bool get_doUV5();
    // public System.Void set_doUV5(System.Boolean value)
    // Offset: 0xC2A7D0
    void set_doUV5(bool value);
    // public System.Boolean get_doUV6()
    // Offset: 0xC2A7DC
    bool get_doUV6();
    // public System.Void set_doUV6(System.Boolean value)
    // Offset: 0xC2A7E4
    void set_doUV6(bool value);
    // public System.Boolean get_doUV7()
    // Offset: 0xC2A7F0
    bool get_doUV7();
    // public System.Void set_doUV7(System.Boolean value)
    // Offset: 0xC2A7F8
    void set_doUV7(bool value);
    // public System.Boolean get_doUV8()
    // Offset: 0xC2A804
    bool get_doUV8();
    // public System.Void set_doUV8(System.Boolean value)
    // Offset: 0xC2A80C
    void set_doUV8(bool value);
    // public System.Boolean get_doBlendShapes()
    // Offset: 0xC2A818
    bool get_doBlendShapes();
    // public System.Void set_doBlendShapes(System.Boolean value)
    // Offset: 0xC2A820
    void set_doBlendShapes(bool value);
    // public DigitalOpus.MB.Core.MB_MeshPivotLocation get_pivotLocationType()
    // Offset: 0xC2A82C
    ::DigitalOpus::MB::Core::MB_MeshPivotLocation get_pivotLocationType();
    // public System.Void set_pivotLocationType(DigitalOpus.MB.Core.MB_MeshPivotLocation value)
    // Offset: 0xC2A834
    void set_pivotLocationType(::DigitalOpus::MB::Core::MB_MeshPivotLocation value);
    // public UnityEngine.Vector3 get_pivotLocation()
    // Offset: 0xC2A83C
    ::UnityEngine::Vector3 get_pivotLocation();
    // public System.Void set_pivotLocation(UnityEngine.Vector3 value)
    // Offset: 0xC2A848
    void set_pivotLocation(::UnityEngine::Vector3 value);
    // public System.Boolean get_clearBuffersAfterBake()
    // Offset: 0xC2A854
    bool get_clearBuffersAfterBake();
    // public System.Void set_clearBuffersAfterBake(System.Boolean value)
    // Offset: 0xC2A85C
    void set_clearBuffersAfterBake(bool value);
    // public System.Boolean get_optimizeAfterBake()
    // Offset: 0xC2A868
    bool get_optimizeAfterBake();
    // public System.Void set_optimizeAfterBake(System.Boolean value)
    // Offset: 0xC2A870
    void set_optimizeAfterBake(bool value);
    // public System.Single get_uv2UnwrappingParamsHardAngle()
    // Offset: 0xC2A87C
    float get_uv2UnwrappingParamsHardAngle();
    // public System.Void set_uv2UnwrappingParamsHardAngle(System.Single value)
    // Offset: 0xC2A884
    void set_uv2UnwrappingParamsHardAngle(float value);
    // public System.Single get_uv2UnwrappingParamsPackMargin()
    // Offset: 0xC2A88C
    float get_uv2UnwrappingParamsPackMargin();
    // public System.Void set_uv2UnwrappingParamsPackMargin(System.Single value)
    // Offset: 0xC2A894
    void set_uv2UnwrappingParamsPackMargin(float value);
    // public System.Boolean get_smrNoExtraBonesWhenCombiningMeshRenderers()
    // Offset: 0xC2A89C
    bool get_smrNoExtraBonesWhenCombiningMeshRenderers();
    // public System.Void set_smrNoExtraBonesWhenCombiningMeshRenderers(System.Boolean value)
    // Offset: 0xC2A8A4
    void set_smrNoExtraBonesWhenCombiningMeshRenderers(bool value);
    // public System.Boolean get_smrMergeBlendShapesWithSameNames()
    // Offset: 0xC2A8B0
    bool get_smrMergeBlendShapesWithSameNames();
    // public System.Void set_smrMergeBlendShapesWithSameNames(System.Boolean value)
    // Offset: 0xC2A8B8
    void set_smrMergeBlendShapesWithSameNames(bool value);
    // public DigitalOpus.MB.Core.IAssignToMeshCustomizer get_assignToMeshCustomizer()
    // Offset: 0xC2A8C4
    ::DigitalOpus::MB::Core::IAssignToMeshCustomizer* get_assignToMeshCustomizer();
    // public System.Void set_assignToMeshCustomizer(DigitalOpus.MB.Core.IAssignToMeshCustomizer value)
    // Offset: 0xC2A950
    void set_assignToMeshCustomizer(::DigitalOpus::MB::Core::IAssignToMeshCustomizer* value);
    // public System.Void .ctor()
    // Offset: 0xC2A9E0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_MeshCombinerSettingsData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_MeshCombinerSettingsData*, creationType>()));
    }
  }; // DigitalOpus.MB.Core.MB3_MeshCombinerSettingsData
  #pragma pack(pop)
  static check_size<sizeof(MB3_MeshCombinerSettingsData), 72 + sizeof(::UnityEngine::Object*)> __DigitalOpus_MB_Core_MB3_MeshCombinerSettingsDataSizeCheck;
  static_assert(sizeof(MB3_MeshCombinerSettingsData) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_renderType
// Il2CppName: get_renderType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::MB_RenderType (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_renderType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_renderType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_renderType
// Il2CppName: set_renderType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(::DigitalOpus::MB::Core::MB_RenderType)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_renderType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_RenderType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_renderType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_outputOption
// Il2CppName: get_outputOption
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::MB2_OutputOptions (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_outputOption)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_outputOption", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_outputOption
// Il2CppName: set_outputOption
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(::DigitalOpus::MB::Core::MB2_OutputOptions)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_outputOption)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_OutputOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_outputOption", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_lightmapOption
// Il2CppName: get_lightmapOption
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::MB2_LightmapOptions (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_lightmapOption)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_lightmapOption", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_lightmapOption
// Il2CppName: set_lightmapOption
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(::DigitalOpus::MB::Core::MB2_LightmapOptions)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_lightmapOption)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_LightmapOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_lightmapOption", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doNorm
// Il2CppName: get_doNorm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doNorm)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_doNorm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doNorm
// Il2CppName: set_doNorm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doNorm)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_doNorm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doTan
// Il2CppName: get_doTan
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doTan)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_doTan", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doTan
// Il2CppName: set_doTan
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doTan)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_doTan", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doCol
// Il2CppName: get_doCol
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doCol)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_doCol", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doCol
// Il2CppName: set_doCol
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doCol)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_doCol", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doUV
// Il2CppName: get_doUV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doUV)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_doUV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doUV
// Il2CppName: set_doUV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doUV)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_doUV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doUV3
// Il2CppName: get_doUV3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doUV3)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_doUV3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doUV3
// Il2CppName: set_doUV3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doUV3)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_doUV3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doUV4
// Il2CppName: get_doUV4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doUV4)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_doUV4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doUV4
// Il2CppName: set_doUV4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doUV4)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_doUV4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doUV5
// Il2CppName: get_doUV5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doUV5)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_doUV5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doUV5
// Il2CppName: set_doUV5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doUV5)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_doUV5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doUV6
// Il2CppName: get_doUV6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doUV6)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_doUV6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doUV6
// Il2CppName: set_doUV6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doUV6)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_doUV6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doUV7
// Il2CppName: get_doUV7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doUV7)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_doUV7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doUV7
// Il2CppName: set_doUV7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doUV7)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_doUV7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doUV8
// Il2CppName: get_doUV8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doUV8)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_doUV8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doUV8
// Il2CppName: set_doUV8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doUV8)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_doUV8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doBlendShapes
// Il2CppName: get_doBlendShapes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_doBlendShapes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_doBlendShapes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doBlendShapes
// Il2CppName: set_doBlendShapes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_doBlendShapes)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_doBlendShapes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_pivotLocationType
// Il2CppName: get_pivotLocationType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::MB_MeshPivotLocation (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_pivotLocationType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_pivotLocationType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_pivotLocationType
// Il2CppName: set_pivotLocationType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(::DigitalOpus::MB::Core::MB_MeshPivotLocation)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_pivotLocationType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_MeshPivotLocation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_pivotLocationType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_pivotLocation
// Il2CppName: get_pivotLocation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_pivotLocation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_pivotLocation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_pivotLocation
// Il2CppName: set_pivotLocation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(::UnityEngine::Vector3)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_pivotLocation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_pivotLocation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_clearBuffersAfterBake
// Il2CppName: get_clearBuffersAfterBake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_clearBuffersAfterBake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_clearBuffersAfterBake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_clearBuffersAfterBake
// Il2CppName: set_clearBuffersAfterBake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_clearBuffersAfterBake)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_clearBuffersAfterBake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_optimizeAfterBake
// Il2CppName: get_optimizeAfterBake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_optimizeAfterBake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_optimizeAfterBake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_optimizeAfterBake
// Il2CppName: set_optimizeAfterBake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_optimizeAfterBake)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_optimizeAfterBake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_uv2UnwrappingParamsHardAngle
// Il2CppName: get_uv2UnwrappingParamsHardAngle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_uv2UnwrappingParamsHardAngle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_uv2UnwrappingParamsHardAngle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_uv2UnwrappingParamsHardAngle
// Il2CppName: set_uv2UnwrappingParamsHardAngle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(float)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_uv2UnwrappingParamsHardAngle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_uv2UnwrappingParamsHardAngle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_uv2UnwrappingParamsPackMargin
// Il2CppName: get_uv2UnwrappingParamsPackMargin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_uv2UnwrappingParamsPackMargin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_uv2UnwrappingParamsPackMargin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_uv2UnwrappingParamsPackMargin
// Il2CppName: set_uv2UnwrappingParamsPackMargin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(float)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_uv2UnwrappingParamsPackMargin)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_uv2UnwrappingParamsPackMargin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_smrNoExtraBonesWhenCombiningMeshRenderers
// Il2CppName: get_smrNoExtraBonesWhenCombiningMeshRenderers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_smrNoExtraBonesWhenCombiningMeshRenderers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_smrNoExtraBonesWhenCombiningMeshRenderers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_smrNoExtraBonesWhenCombiningMeshRenderers
// Il2CppName: set_smrNoExtraBonesWhenCombiningMeshRenderers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_smrNoExtraBonesWhenCombiningMeshRenderers)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_smrNoExtraBonesWhenCombiningMeshRenderers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_smrMergeBlendShapesWithSameNames
// Il2CppName: get_smrMergeBlendShapesWithSameNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_smrMergeBlendShapesWithSameNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_smrMergeBlendShapesWithSameNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_smrMergeBlendShapesWithSameNames
// Il2CppName: set_smrMergeBlendShapesWithSameNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_smrMergeBlendShapesWithSameNames)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_smrMergeBlendShapesWithSameNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_assignToMeshCustomizer
// Il2CppName: get_assignToMeshCustomizer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::IAssignToMeshCustomizer* (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::get_assignToMeshCustomizer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "get_assignToMeshCustomizer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_assignToMeshCustomizer
// Il2CppName: set_assignToMeshCustomizer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::*)(::DigitalOpus::MB::Core::IAssignToMeshCustomizer*)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::set_assignToMeshCustomizer)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "IAssignToMeshCustomizer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*), "set_assignToMeshCustomizer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
