// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBaker
#include "DigitalOpus/MB/Core/MB3_TextureCombinerPackerMeshBaker.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DigitalOpus::MB::Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: AtlasPackingResult
  class AtlasPackingResult;
  // Forward declaring type: MB2_LogLevel
  struct MB2_LogLevel;
}
// Completed forward declares
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB3_TextureCombinerPackerMeshBakerHorizontalVertical
  class MB3_TextureCombinerPackerMeshBakerHorizontalVertical;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical*, "DigitalOpus.MB.Core", "MB3_TextureCombinerPackerMeshBakerHorizontalVertical");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBakerHorizontalVertical
  // [TokenAttribute] Offset: FFFFFFFF
  class MB3_TextureCombinerPackerMeshBakerHorizontalVertical : public ::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBaker {
    public:
    // Nested type: ::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::IPipeline
    class IPipeline;
    // Nested type: ::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::VerticalPipeline
    class VerticalPipeline;
    // Nested type: ::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::HorizontalPipeline
    class HorizontalPipeline;
    // Nested type: ::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::AtlasDirection
    struct AtlasDirection;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBakerHorizontalVertical/DigitalOpus.MB.Core.AtlasDirection
    // [TokenAttribute] Offset: FFFFFFFF
    struct AtlasDirection/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: AtlasDirection
      constexpr AtlasDirection(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBakerHorizontalVertical/DigitalOpus.MB.Core.AtlasDirection horizontal
      static constexpr const int horizontal = 0;
      // Get static field: static public DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBakerHorizontalVertical/DigitalOpus.MB.Core.AtlasDirection horizontal
      static ::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::AtlasDirection _get_horizontal();
      // Set static field: static public DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBakerHorizontalVertical/DigitalOpus.MB.Core.AtlasDirection horizontal
      static void _set_horizontal(::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::AtlasDirection value);
      // static field const value: static public DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBakerHorizontalVertical/DigitalOpus.MB.Core.AtlasDirection vertical
      static constexpr const int vertical = 1;
      // Get static field: static public DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBakerHorizontalVertical/DigitalOpus.MB.Core.AtlasDirection vertical
      static ::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::AtlasDirection _get_vertical();
      // Set static field: static public DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBakerHorizontalVertical/DigitalOpus.MB.Core.AtlasDirection vertical
      static void _set_vertical(::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::AtlasDirection value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBakerHorizontalVertical/DigitalOpus.MB.Core.AtlasDirection
    #pragma pack(pop)
    static check_size<sizeof(MB3_TextureCombinerPackerMeshBakerHorizontalVertical::AtlasDirection), 0 + sizeof(int)> __DigitalOpus_MB_Core_MB3_TextureCombinerPackerMeshBakerHorizontalVertical_AtlasDirectionSizeCheck;
    static_assert(sizeof(MB3_TextureCombinerPackerMeshBakerHorizontalVertical::AtlasDirection) == 0x4);
    public:
    // private DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBakerHorizontalVertical/DigitalOpus.MB.Core.AtlasDirection _atlasDirection
    // Size: 0x4
    // Offset: 0x10
    ::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::AtlasDirection atlasDirection;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::AtlasDirection) == 0x4);
    public:
    // Creating conversion operator: operator ::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::AtlasDirection
    constexpr operator ::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::AtlasDirection() const noexcept {
      return atlasDirection;
    }
    // Get instance field reference: private DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBakerHorizontalVertical/DigitalOpus.MB.Core.AtlasDirection _atlasDirection
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::AtlasDirection& dyn__atlasDirection();
    // public System.Void .ctor(DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBakerHorizontalVertical/DigitalOpus.MB.Core.AtlasDirection ad)
    // Offset: 0x15C9840
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_TextureCombinerPackerMeshBakerHorizontalVertical* New_ctor(::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::AtlasDirection ad) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_TextureCombinerPackerMeshBakerHorizontalVertical*, creationType>(ad)));
    }
    // static public DigitalOpus.MB.Core.AtlasPackingResult TestStackRectanglesHorizontal(DigitalOpus.MB.Core.AtlasPackingResult a, DigitalOpus.MB.Core.AtlasPackingResult b, System.Int32 maxHeightDim, System.Int32 maxWidthDim, System.Boolean stretchBToAtlasWidth)
    // Offset: 0x15CB12C
    static ::DigitalOpus::MB::Core::AtlasPackingResult* TestStackRectanglesHorizontal(::DigitalOpus::MB::Core::AtlasPackingResult* a, ::DigitalOpus::MB::Core::AtlasPackingResult* b, int maxHeightDim, int maxWidthDim, bool stretchBToAtlasWidth);
    // static public DigitalOpus.MB.Core.AtlasPackingResult TestStackRectanglesVertical(DigitalOpus.MB.Core.AtlasPackingResult a, DigitalOpus.MB.Core.AtlasPackingResult b, System.Int32 maxHeightDim, System.Int32 maxWidthDim, System.Boolean stretchBToAtlasWidth)
    // Offset: 0x15CB1C0
    static ::DigitalOpus::MB::Core::AtlasPackingResult* TestStackRectanglesVertical(::DigitalOpus::MB::Core::AtlasPackingResult* a, ::DigitalOpus::MB::Core::AtlasPackingResult* b, int maxHeightDim, int maxWidthDim, bool stretchBToAtlasWidth);
    // static private DigitalOpus.MB.Core.AtlasPackingResult MergeAtlasPackingResultStackBonA(DigitalOpus.MB.Core.AtlasPackingResult a, DigitalOpus.MB.Core.AtlasPackingResult b, System.Int32 maxWidthDim, System.Int32 maxHeightDim, System.Boolean stretchBToAtlasWidth, DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBakerHorizontalVertical/DigitalOpus.MB.Core.IPipeline pipeline)
    // Offset: 0x15CAB88
    static ::DigitalOpus::MB::Core::AtlasPackingResult* MergeAtlasPackingResultStackBonA(::DigitalOpus::MB::Core::AtlasPackingResult* a, ::DigitalOpus::MB::Core::AtlasPackingResult* b, int maxWidthDim, int maxHeightDim, bool stretchBToAtlasWidth, ::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::IPipeline* pipeline);
    // public override DigitalOpus.MB.Core.AtlasPackingResult[] CalculateAtlasRectangles(DigitalOpus.MB.Core.MB3_TextureCombinerPipeline/DigitalOpus.MB.Core.TexturePipelineData data, System.Boolean doMultiAtlas, DigitalOpus.MB.Core.MB2_LogLevel LOG_LEVEL)
    // Offset: 0x15C986C
    // Implemented from: DigitalOpus.MB.Core.MB3_TextureCombinerPackerRoot
    // Base method: DigitalOpus.MB.Core.AtlasPackingResult[] MB3_TextureCombinerPackerRoot::CalculateAtlasRectangles(DigitalOpus.MB.Core.MB3_TextureCombinerPipeline/DigitalOpus.MB.Core.TexturePipelineData data, System.Boolean doMultiAtlas, DigitalOpus.MB.Core.MB2_LogLevel LOG_LEVEL)
    ::ArrayW<::DigitalOpus::MB::Core::AtlasPackingResult*> CalculateAtlasRectangles(::DigitalOpus::MB::Core::MB3_TextureCombinerPipeline::TexturePipelineData* data, bool doMultiAtlas, ::DigitalOpus::MB::Core::MB2_LogLevel LOG_LEVEL);
  }; // DigitalOpus.MB.Core.MB3_TextureCombinerPackerMeshBakerHorizontalVertical
  #pragma pack(pop)
  static check_size<sizeof(MB3_TextureCombinerPackerMeshBakerHorizontalVertical), 16 + sizeof(::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::AtlasDirection)> __DigitalOpus_MB_Core_MB3_TextureCombinerPackerMeshBakerHorizontalVerticalSizeCheck;
  static_assert(sizeof(MB3_TextureCombinerPackerMeshBakerHorizontalVertical) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::AtlasDirection, "DigitalOpus.MB.Core", "MB3_TextureCombinerPackerMeshBakerHorizontalVertical/AtlasDirection");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::TestStackRectanglesHorizontal
// Il2CppName: TestStackRectanglesHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::AtlasPackingResult* (*)(::DigitalOpus::MB::Core::AtlasPackingResult*, ::DigitalOpus::MB::Core::AtlasPackingResult*, int, int, bool)>(&DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::TestStackRectanglesHorizontal)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "AtlasPackingResult")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "AtlasPackingResult")->byval_arg;
    static auto* maxHeightDim = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* maxWidthDim = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* stretchBToAtlasWidth = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical*), "TestStackRectanglesHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b, maxHeightDim, maxWidthDim, stretchBToAtlasWidth});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::TestStackRectanglesVertical
// Il2CppName: TestStackRectanglesVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::AtlasPackingResult* (*)(::DigitalOpus::MB::Core::AtlasPackingResult*, ::DigitalOpus::MB::Core::AtlasPackingResult*, int, int, bool)>(&DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::TestStackRectanglesVertical)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "AtlasPackingResult")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "AtlasPackingResult")->byval_arg;
    static auto* maxHeightDim = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* maxWidthDim = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* stretchBToAtlasWidth = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical*), "TestStackRectanglesVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b, maxHeightDim, maxWidthDim, stretchBToAtlasWidth});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::MergeAtlasPackingResultStackBonA
// Il2CppName: MergeAtlasPackingResultStackBonA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::AtlasPackingResult* (*)(::DigitalOpus::MB::Core::AtlasPackingResult*, ::DigitalOpus::MB::Core::AtlasPackingResult*, int, int, bool, ::DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::IPipeline*)>(&DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::MergeAtlasPackingResultStackBonA)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "AtlasPackingResult")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "AtlasPackingResult")->byval_arg;
    static auto* maxWidthDim = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* maxHeightDim = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* stretchBToAtlasWidth = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* pipeline = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_TextureCombinerPackerMeshBakerHorizontalVertical/IPipeline")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical*), "MergeAtlasPackingResultStackBonA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b, maxWidthDim, maxHeightDim, stretchBToAtlasWidth, pipeline});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::CalculateAtlasRectangles
// Il2CppName: CalculateAtlasRectangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::DigitalOpus::MB::Core::AtlasPackingResult*> (DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::*)(::DigitalOpus::MB::Core::MB3_TextureCombinerPipeline::TexturePipelineData*, bool, ::DigitalOpus::MB::Core::MB2_LogLevel)>(&DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical::CalculateAtlasRectangles)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_TextureCombinerPipeline/TexturePipelineData")->byval_arg;
    static auto* doMultiAtlas = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* LOG_LEVEL = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_LogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerPackerMeshBakerHorizontalVertical*), "CalculateAtlasRectangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, doMultiAtlas, LOG_LEVEL});
  }
};
