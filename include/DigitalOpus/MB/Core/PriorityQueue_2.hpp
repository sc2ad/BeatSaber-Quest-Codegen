// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IComparer`1<T>
  template<typename T>
  class IComparer_1;
  // Skipping declaration: IEnumerable`1 because it is already included!
  // Forward declaring type: IEnumerator`1<T>
  template<typename T>
  class IEnumerator_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: PriorityQueue`2<TPriority, TValue>
  template<typename TPriority, typename TValue>
  class PriorityQueue_2;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::DigitalOpus::MB::Core::PriorityQueue_2, "DigitalOpus.MB.Core", "PriorityQueue`2");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // WARNING Size may be invalid!
  // Autogenerated type: DigitalOpus.MB.Core.PriorityQueue`2
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename TPriority, typename TValue>
  class PriorityQueue_2 : public ::Il2CppObject/*, public ::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<TPriority, TValue>>*/ {
    public:
    public:
    // public System.Collections.Generic.List`1<System.Collections.Generic.KeyValuePair`2<TPriority,TValue>> _baseHeap
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TPriority, TValue>>* baseHeap;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TPriority, TValue>>*) == 0x8);
    // private System.Collections.Generic.IComparer`1<TPriority> _comparer
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::IComparer_1<TPriority>* comparer;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IComparer_1<TPriority>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<TPriority, TValue>>
    operator ::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<TPriority, TValue>>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::ICollection_1<::System::Collections::Generic::KeyValuePair_2<TPriority, TValue>>*>(this);
    }
    // Autogenerated instance field getter
    // Get instance field: public System.Collections.Generic.List`1<System.Collections.Generic.KeyValuePair`2<TPriority,TValue>> _baseHeap
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TPriority, TValue>>*& dyn__baseHeap() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::dyn__baseHeap");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseHeap"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<TPriority, TValue>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.IComparer`1<TPriority> _comparer
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IComparer_1<TPriority>*& dyn__comparer() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::dyn__comparer");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comparer"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::IComparer_1<TPriority>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Boolean get_IsEmpty()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsEmpty() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::get_IsEmpty");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Int32 get_Count()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_Count() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::get_Count");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
    }
    // public System.Boolean get_IsReadOnly()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsReadOnly() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::get_IsReadOnly");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PriorityQueue_2<TPriority, TValue>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PriorityQueue_2<TPriority, TValue>*, creationType>()));
    }
    // public System.Void .ctor(System.Int32 capacity)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PriorityQueue_2<TPriority, TValue>* New_ctor(int capacity) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PriorityQueue_2<TPriority, TValue>*, creationType>(capacity)));
    }
    // public System.Void .ctor(System.Int32 capacity, System.Collections.Generic.IComparer`1<TPriority> comparer)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PriorityQueue_2<TPriority, TValue>* New_ctor(int capacity, ::System::Collections::Generic::IComparer_1<TPriority>* comparer) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PriorityQueue_2<TPriority, TValue>*, creationType>(capacity, comparer)));
    }
    // public System.Void .ctor(System.Collections.Generic.IComparer`1<TPriority> comparer)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PriorityQueue_2<TPriority, TValue>* New_ctor(::System::Collections::Generic::IComparer_1<TPriority>* comparer) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PriorityQueue_2<TPriority, TValue>*, creationType>(comparer)));
    }
    // public System.Void .ctor(System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<TPriority,TValue>> data)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PriorityQueue_2<TPriority, TValue>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TPriority, TValue>>* data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PriorityQueue_2<TPriority, TValue>*, creationType>(data)));
    }
    // public System.Void .ctor(System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<TPriority,TValue>> data, System.Collections.Generic.IComparer`1<TPriority> comparer)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PriorityQueue_2<TPriority, TValue>* New_ctor(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<TPriority, TValue>>* data, ::System::Collections::Generic::IComparer_1<TPriority>* comparer) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PriorityQueue_2<TPriority, TValue>*, creationType>(data, comparer)));
    }
    // static public DigitalOpus.MB.Core.PriorityQueue`2<TPriority,TValue> MergeQueues(DigitalOpus.MB.Core.PriorityQueue`2<TPriority,TValue> pq1, DigitalOpus.MB.Core.PriorityQueue`2<TPriority,TValue> pq2)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>* MergeQueues(::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>* pq1, ::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>* pq2) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::MergeQueues");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<PriorityQueue_2<TPriority, TValue>*>::get(), "MergeQueues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pq1), ::il2cpp_utils::ExtractType(pq2)})));
      return ::il2cpp_utils::RunMethodRethrow<::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pq1, pq2);
    }
    // static public DigitalOpus.MB.Core.PriorityQueue`2<TPriority,TValue> MergeQueues(DigitalOpus.MB.Core.PriorityQueue`2<TPriority,TValue> pq1, DigitalOpus.MB.Core.PriorityQueue`2<TPriority,TValue> pq2, System.Collections.Generic.IComparer`1<TPriority> comparer)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>* MergeQueues(::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>* pq1, ::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>* pq2, ::System::Collections::Generic::IComparer_1<TPriority>* comparer) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::MergeQueues");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<PriorityQueue_2<TPriority, TValue>*>::get(), "MergeQueues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pq1), ::il2cpp_utils::ExtractType(pq2), ::il2cpp_utils::ExtractType(comparer)})));
      return ::il2cpp_utils::RunMethodRethrow<::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pq1, pq2, comparer);
    }
    // public System.Void Enqueue(TPriority priority, TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Enqueue(TPriority priority, TValue value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::Enqueue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(priority), ::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, priority, value);
    }
    // public System.Collections.Generic.KeyValuePair`2<TPriority,TValue> Dequeue()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::KeyValuePair_2<TPriority, TValue> Dequeue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::Dequeue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dequeue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<TPriority, TValue>, false>(this, ___internal__method);
    }
    // public TValue DequeueValue()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue DequeueValue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::DequeueValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DequeueValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method);
    }
    // public System.Collections.Generic.KeyValuePair`2<TPriority,TValue> Peek()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::KeyValuePair_2<TPriority, TValue> Peek() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::Peek");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<TPriority, TValue>, false>(this, ___internal__method);
    }
    // public TValue PeekValue()
    // Offset: 0xFFFFFFFFFFFFFFFF
    TValue PeekValue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::PeekValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<TValue, false>(this, ___internal__method);
    }
    // private System.Void ExchangeElements(System.Int32 pos1, System.Int32 pos2)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ExchangeElements(int pos1, int pos2) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::ExchangeElements");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExchangeElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos1), ::il2cpp_utils::ExtractType(pos2)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos1, pos2);
    }
    // private System.Void Insert(TPriority priority, TValue value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Insert(TPriority priority, TValue value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::Insert");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(priority), ::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, priority, value);
    }
    // private System.Int32 HeapifyFromEndToBeginning(System.Int32 pos)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int HeapifyFromEndToBeginning(int pos) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::HeapifyFromEndToBeginning");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HeapifyFromEndToBeginning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos);
    }
    // private System.Void DeleteRoot()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DeleteRoot() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::DeleteRoot");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void HeapifyFromBeginningToEnd(System.Int32 pos)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void HeapifyFromBeginningToEnd(int pos) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::HeapifyFromBeginningToEnd");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HeapifyFromBeginningToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
    }
    // public System.Void Add(System.Collections.Generic.KeyValuePair`2<TPriority,TValue> item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Add(::System::Collections::Generic::KeyValuePair_2<TPriority, TValue> item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::Add");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
    }
    // public System.Void Clear()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Clear() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::Clear");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Boolean Contains(System.Collections.Generic.KeyValuePair`2<TPriority,TValue> item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool Contains(::System::Collections::Generic::KeyValuePair_2<TPriority, TValue> item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::Contains");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
    }
    // public System.Boolean TryFindValue(TPriority item, out TValue foundVersion)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TryFindValue(TPriority item, ByRef<TValue> foundVersion) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::TryFindValue");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryFindValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item), ::il2cpp_utils::ExtractIndependentType<TValue&>()})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item, byref(foundVersion));
    }
    // public System.Void CopyTo(System.Collections.Generic.KeyValuePair`2<TPriority,TValue>[] array, System.Int32 arrayIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void CopyTo(::ArrayW<::System::Collections::Generic::KeyValuePair_2<TPriority, TValue>> array, int arrayIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::CopyTo");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
    }
    // public System.Boolean Remove(System.Collections.Generic.KeyValuePair`2<TPriority,TValue> item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool Remove(::System::Collections::Generic::KeyValuePair_2<TPriority, TValue> item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::Remove");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
    }
    // public System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<TPriority,TValue>> GetEnumerator()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TPriority, TValue>>* GetEnumerator() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::GetEnumerator");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<TPriority, TValue>>*, false>(this, ___internal__method);
    }
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::PriorityQueue_2::System.Collections.IEnumerable.GetEnumerator");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::DigitalOpus::MB::Core::PriorityQueue_2<TPriority, TValue>*), -1)));
      return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
    }
  }; // DigitalOpus.MB.Core.PriorityQueue`2
  // Could not write size check! Type: DigitalOpus.MB.Core.PriorityQueue`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
