// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DigitalOpus::MB::Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: ProgressUpdateDelegate
  class ProgressUpdateDelegate;
  // Forward declaring type: ShaderTextureProperty
  class ShaderTextureProperty;
  // Forward declaring type: MB_ObjsToCombineTypes
  struct MB_ObjsToCombineTypes;
  // Forward declaring type: MB2_LogLevel
  struct MB2_LogLevel;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: TextureFormat
  struct TextureFormat;
  // Forward declaring type: Texture2DArray
  class Texture2DArray;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Object
  class Object;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MB2_TextureBakeResults
  class MB2_TextureBakeResults;
}
// Completed forward declares
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB2_EditorMethodsInterface
  class MB2_EditorMethodsInterface;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB2_EditorMethodsInterface);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*, "DigitalOpus.MB.Core", "MB2_EditorMethodsInterface");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB2_EditorMethodsInterface
  // [TokenAttribute] Offset: FFFFFFFF
  class MB2_EditorMethodsInterface {
    public:
    // public System.Void Clear()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Clear();
    // public System.Void RestoreReadFlagsAndFormats(DigitalOpus.MB.Core.ProgressUpdateDelegate progressInfo)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RestoreReadFlagsAndFormats(::DigitalOpus::MB::Core::ProgressUpdateDelegate* progressInfo);
    // public System.Void SetReadWriteFlag(UnityEngine.Texture2D tx, System.Boolean isReadable, System.Boolean addToList)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetReadWriteFlag(::UnityEngine::Texture2D* tx, bool isReadable, bool addToList);
    // public System.Void ConvertTextureFormat_DefaultPlatform(UnityEngine.Texture2D tx, UnityEngine.TextureFormat targetFormat, System.Boolean isNormalMap)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ConvertTextureFormat_DefaultPlatform(::UnityEngine::Texture2D* tx, ::UnityEngine::TextureFormat targetFormat, bool isNormalMap);
    // public System.Void ConvertTextureFormat_PlatformOverride(UnityEngine.Texture2D tx, UnityEngine.TextureFormat targetFormat, System.Boolean isNormalMap)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ConvertTextureFormat_PlatformOverride(::UnityEngine::Texture2D* tx, ::UnityEngine::TextureFormat targetFormat, bool isNormalMap);
    // public System.Void SaveTextureArrayToAssetDatabase(UnityEngine.Texture2DArray atlas, UnityEngine.TextureFormat foramt, System.String texPropertyName, System.Int32 atlasNum, UnityEngine.Material resMat)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SaveTextureArrayToAssetDatabase(::UnityEngine::Texture2DArray* atlas, ::UnityEngine::TextureFormat foramt, ::StringW texPropertyName, int atlasNum, ::UnityEngine::Material* resMat);
    // public System.Void SaveAtlasToAssetDatabase(UnityEngine.Texture2D atlas, DigitalOpus.MB.Core.ShaderTextureProperty texPropertyName, System.Int32 atlasNum, System.Boolean doAnySrcMatsHaveProperty, UnityEngine.Material resMat)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SaveAtlasToAssetDatabase(::UnityEngine::Texture2D* atlas, ::DigitalOpus::MB::Core::ShaderTextureProperty* texPropertyName, int atlasNum, bool doAnySrcMatsHaveProperty, ::UnityEngine::Material* resMat);
    // public System.Boolean IsNormalMap(UnityEngine.Texture2D tx)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool IsNormalMap(::UnityEngine::Texture2D* tx);
    // public System.String GetPlatformString()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW GetPlatformString();
    // public System.Void SetTextureSize(UnityEngine.Texture2D tx, System.Int32 size)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetTextureSize(::UnityEngine::Texture2D* tx, int size);
    // public System.Boolean IsCompressed(UnityEngine.Texture2D tx)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool IsCompressed(::UnityEngine::Texture2D* tx);
    // public System.Void CheckBuildSettings(System.Int64 estimatedAtlasSize)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void CheckBuildSettings(int64_t estimatedAtlasSize);
    // public System.Boolean CheckPrefabTypes(DigitalOpus.MB.Core.MB_ObjsToCombineTypes prefabType, System.Collections.Generic.List`1<UnityEngine.GameObject> gos)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool CheckPrefabTypes(::DigitalOpus::MB::Core::MB_ObjsToCombineTypes prefabType, ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* gos);
    // public System.Boolean ValidateSkinnedMeshes(System.Collections.Generic.List`1<UnityEngine.GameObject> mom)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool ValidateSkinnedMeshes(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* mom);
    // public System.Void CommitChangesToAssets()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void CommitChangesToAssets();
    // public System.Void OnPreTextureBake()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnPreTextureBake();
    // public System.Void OnPostTextureBake()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnPostTextureBake();
    // public System.Void Destroy(UnityEngine.Object o)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Destroy(::UnityEngine::Object* o);
    // public System.Void DestroyAsset(UnityEngine.Object o)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DestroyAsset(::UnityEngine::Object* o);
    // public System.Boolean IsAnAsset(UnityEngine.Object o)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool IsAnAsset(::UnityEngine::Object* o);
    // public UnityEngine.Texture2D CreateTemporaryAssetCopy(DigitalOpus.MB.Core.ShaderTextureProperty prop, UnityEngine.Texture2D sliceTex, System.Int32 w, System.Int32 h, UnityEngine.TextureFormat format, DigitalOpus.MB.Core.MB2_LogLevel logLevel)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Texture2D* CreateTemporaryAssetCopy(::DigitalOpus::MB::Core::ShaderTextureProperty* prop, ::UnityEngine::Texture2D* sliceTex, int w, int h, ::UnityEngine::TextureFormat format, ::DigitalOpus::MB::Core::MB2_LogLevel logLevel);
    // public System.Boolean TextureImporterFormatExistsForTextureFormat(UnityEngine.TextureFormat texFormat)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool TextureImporterFormatExistsForTextureFormat(::UnityEngine::TextureFormat texFormat);
    // public System.Boolean ConvertTexture2DArray(UnityEngine.Texture2DArray inArray, UnityEngine.Texture2DArray outArray, UnityEngine.TextureFormat outFormat)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool ConvertTexture2DArray(::UnityEngine::Texture2DArray* inArray, ::UnityEngine::Texture2DArray* outArray, ::UnityEngine::TextureFormat outFormat);
    // public System.Void GetMaterialPrimaryKeysIfAddressables(MB2_TextureBakeResults textureBakeResults)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void GetMaterialPrimaryKeysIfAddressables(::GlobalNamespace::MB2_TextureBakeResults* textureBakeResults);
  }; // DigitalOpus.MB.Core.MB2_EditorMethodsInterface
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)()>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::RestoreReadFlagsAndFormats
// Il2CppName: RestoreReadFlagsAndFormats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::DigitalOpus::MB::Core::ProgressUpdateDelegate*)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::RestoreReadFlagsAndFormats)> {
  static const MethodInfo* get() {
    static auto* progressInfo = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "ProgressUpdateDelegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "RestoreReadFlagsAndFormats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{progressInfo});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::SetReadWriteFlag
// Il2CppName: SetReadWriteFlag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::UnityEngine::Texture2D*, bool, bool)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::SetReadWriteFlag)> {
  static const MethodInfo* get() {
    static auto* tx = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* isReadable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* addToList = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "SetReadWriteFlag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tx, isReadable, addToList});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::ConvertTextureFormat_DefaultPlatform
// Il2CppName: ConvertTextureFormat_DefaultPlatform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::UnityEngine::Texture2D*, ::UnityEngine::TextureFormat, bool)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::ConvertTextureFormat_DefaultPlatform)> {
  static const MethodInfo* get() {
    static auto* tx = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* targetFormat = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextureFormat")->byval_arg;
    static auto* isNormalMap = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "ConvertTextureFormat_DefaultPlatform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tx, targetFormat, isNormalMap});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::ConvertTextureFormat_PlatformOverride
// Il2CppName: ConvertTextureFormat_PlatformOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::UnityEngine::Texture2D*, ::UnityEngine::TextureFormat, bool)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::ConvertTextureFormat_PlatformOverride)> {
  static const MethodInfo* get() {
    static auto* tx = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* targetFormat = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextureFormat")->byval_arg;
    static auto* isNormalMap = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "ConvertTextureFormat_PlatformOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tx, targetFormat, isNormalMap});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::SaveTextureArrayToAssetDatabase
// Il2CppName: SaveTextureArrayToAssetDatabase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::UnityEngine::Texture2DArray*, ::UnityEngine::TextureFormat, ::StringW, int, ::UnityEngine::Material*)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::SaveTextureArrayToAssetDatabase)> {
  static const MethodInfo* get() {
    static auto* atlas = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2DArray")->byval_arg;
    static auto* foramt = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextureFormat")->byval_arg;
    static auto* texPropertyName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* atlasNum = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* resMat = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "SaveTextureArrayToAssetDatabase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{atlas, foramt, texPropertyName, atlasNum, resMat});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::SaveAtlasToAssetDatabase
// Il2CppName: SaveAtlasToAssetDatabase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::UnityEngine::Texture2D*, ::DigitalOpus::MB::Core::ShaderTextureProperty*, int, bool, ::UnityEngine::Material*)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::SaveAtlasToAssetDatabase)> {
  static const MethodInfo* get() {
    static auto* atlas = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* texPropertyName = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "ShaderTextureProperty")->byval_arg;
    static auto* atlasNum = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* doAnySrcMatsHaveProperty = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* resMat = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "SaveAtlasToAssetDatabase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{atlas, texPropertyName, atlasNum, doAnySrcMatsHaveProperty, resMat});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::IsNormalMap
// Il2CppName: IsNormalMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::UnityEngine::Texture2D*)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::IsNormalMap)> {
  static const MethodInfo* get() {
    static auto* tx = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "IsNormalMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tx});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::GetPlatformString
// Il2CppName: GetPlatformString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)()>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::GetPlatformString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "GetPlatformString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::SetTextureSize
// Il2CppName: SetTextureSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::UnityEngine::Texture2D*, int)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::SetTextureSize)> {
  static const MethodInfo* get() {
    static auto* tx = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* size = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "SetTextureSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tx, size});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::IsCompressed
// Il2CppName: IsCompressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::UnityEngine::Texture2D*)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::IsCompressed)> {
  static const MethodInfo* get() {
    static auto* tx = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "IsCompressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tx});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::CheckBuildSettings
// Il2CppName: CheckBuildSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(int64_t)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::CheckBuildSettings)> {
  static const MethodInfo* get() {
    static auto* estimatedAtlasSize = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "CheckBuildSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{estimatedAtlasSize});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::CheckPrefabTypes
// Il2CppName: CheckPrefabTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::DigitalOpus::MB::Core::MB_ObjsToCombineTypes, ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::CheckPrefabTypes)> {
  static const MethodInfo* get() {
    static auto* prefabType = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_ObjsToCombineTypes")->byval_arg;
    static auto* gos = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "CheckPrefabTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefabType, gos});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::ValidateSkinnedMeshes
// Il2CppName: ValidateSkinnedMeshes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::ValidateSkinnedMeshes)> {
  static const MethodInfo* get() {
    static auto* mom = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "ValidateSkinnedMeshes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mom});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::CommitChangesToAssets
// Il2CppName: CommitChangesToAssets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)()>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::CommitChangesToAssets)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "CommitChangesToAssets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::OnPreTextureBake
// Il2CppName: OnPreTextureBake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)()>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::OnPreTextureBake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "OnPreTextureBake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::OnPostTextureBake
// Il2CppName: OnPostTextureBake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)()>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::OnPostTextureBake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "OnPostTextureBake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::Destroy
// Il2CppName: Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::UnityEngine::Object*)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::Destroy)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::DestroyAsset
// Il2CppName: DestroyAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::UnityEngine::Object*)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::DestroyAsset)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "DestroyAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::IsAnAsset
// Il2CppName: IsAnAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::UnityEngine::Object*)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::IsAnAsset)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "IsAnAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::CreateTemporaryAssetCopy
// Il2CppName: CreateTemporaryAssetCopy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::DigitalOpus::MB::Core::ShaderTextureProperty*, ::UnityEngine::Texture2D*, int, int, ::UnityEngine::TextureFormat, ::DigitalOpus::MB::Core::MB2_LogLevel)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::CreateTemporaryAssetCopy)> {
  static const MethodInfo* get() {
    static auto* prop = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "ShaderTextureProperty")->byval_arg;
    static auto* sliceTex = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* w = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* h = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextureFormat")->byval_arg;
    static auto* logLevel = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_LogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "CreateTemporaryAssetCopy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prop, sliceTex, w, h, format, logLevel});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::TextureImporterFormatExistsForTextureFormat
// Il2CppName: TextureImporterFormatExistsForTextureFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::UnityEngine::TextureFormat)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::TextureImporterFormatExistsForTextureFormat)> {
  static const MethodInfo* get() {
    static auto* texFormat = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextureFormat")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "TextureImporterFormatExistsForTextureFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{texFormat});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::ConvertTexture2DArray
// Il2CppName: ConvertTexture2DArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::UnityEngine::Texture2DArray*, ::UnityEngine::Texture2DArray*, ::UnityEngine::TextureFormat)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::ConvertTexture2DArray)> {
  static const MethodInfo* get() {
    static auto* inArray = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2DArray")->byval_arg;
    static auto* outArray = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2DArray")->byval_arg;
    static auto* outFormat = &::il2cpp_utils::GetClassFromName("UnityEngine", "TextureFormat")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "ConvertTexture2DArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inArray, outArray, outFormat});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_EditorMethodsInterface::GetMaterialPrimaryKeysIfAddressables
// Il2CppName: GetMaterialPrimaryKeysIfAddressables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB2_EditorMethodsInterface::*)(::GlobalNamespace::MB2_TextureBakeResults*)>(&DigitalOpus::MB::Core::MB2_EditorMethodsInterface::GetMaterialPrimaryKeysIfAddressables)> {
  static const MethodInfo* get() {
    static auto* textureBakeResults = &::il2cpp_utils::GetClassFromName("", "MB2_TextureBakeResults")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB2_EditorMethodsInterface*), "GetMaterialPrimaryKeysIfAddressables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{textureBakeResults});
  }
};
