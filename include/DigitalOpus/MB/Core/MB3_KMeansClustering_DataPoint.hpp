// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DigitalOpus.MB.Core.MB3_KMeansClustering
#include "DigitalOpus/MB/Core/MB3_KMeansClustering.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB3_KMeansClustering::DataPoint);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB3_KMeansClustering::DataPoint*, "DigitalOpus.MB.Core", "MB3_KMeansClustering/DataPoint");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB3_KMeansClustering/DigitalOpus.MB.Core.DataPoint
  // [TokenAttribute] Offset: FFFFFFFF
  class MB3_KMeansClustering::DataPoint : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.Vector3 center
    // Size: 0xC
    // Offset: 0x10
    ::UnityEngine::Vector3 center;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: center and: gameObject
    char __padding0[0x4] = {};
    // public UnityEngine.GameObject gameObject
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* gameObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.Int32 Cluster
    // Size: 0x4
    // Offset: 0x28
    int Cluster;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public UnityEngine.Vector3 center
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_center();
    // Get instance field reference: public UnityEngine.GameObject gameObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_gameObject();
    // Get instance field reference: public System.Int32 Cluster
    [[deprecated("Use field access instead!")]] int& dyn_Cluster();
    // public System.Void .ctor(UnityEngine.GameObject go)
    // Offset: 0xC23CA8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_KMeansClustering::DataPoint* New_ctor(::UnityEngine::GameObject* go) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_KMeansClustering::DataPoint::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_KMeansClustering::DataPoint*, creationType>(go)));
    }
  }; // DigitalOpus.MB.Core.MB3_KMeansClustering/DigitalOpus.MB.Core.DataPoint
  #pragma pack(pop)
  static check_size<sizeof(MB3_KMeansClustering::DataPoint), 40 + sizeof(int)> __DigitalOpus_MB_Core_MB3_KMeansClustering_DataPointSizeCheck;
  static_assert(sizeof(MB3_KMeansClustering::DataPoint) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_KMeansClustering::DataPoint::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
