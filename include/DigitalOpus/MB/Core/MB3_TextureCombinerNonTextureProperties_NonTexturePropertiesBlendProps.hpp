// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombinerNonTextureProperties
#include "DigitalOpus/MB/Core/MB3_TextureCombinerNonTextureProperties.hpp"
// Including type: DigitalOpus.MB.Core.MB3_TextureCombinerNonTextureProperties/DigitalOpus.MB.Core.NonTextureProperties
#include "DigitalOpus/MB/Core/MB3_TextureCombinerNonTextureProperties_NonTextureProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DigitalOpus::MB::Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: TextureBlender
  class TextureBlender;
  // Forward declaring type: MB_TexSet
  class MB_TexSet;
  // Forward declaring type: ShaderTextureProperty
  class ShaderTextureProperty;
  // Forward declaring type: MB2_EditorMethodsInterface
  class MB2_EditorMethodsInterface;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: Color
  struct Color;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps*, "DigitalOpus.MB.Core", "MB3_TextureCombinerNonTextureProperties/NonTexturePropertiesBlendProps");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB3_TextureCombinerNonTextureProperties/DigitalOpus.MB.Core.NonTexturePropertiesBlendProps
  // [TokenAttribute] Offset: FFFFFFFF
  class MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps : public ::Il2CppObject/*, public ::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTextureProperties*/ {
    public:
    public:
    // private DigitalOpus.MB.Core.MB3_TextureCombinerNonTextureProperties _textureProperties
    // Size: 0x8
    // Offset: 0x10
    ::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties* textureProperties;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties*) == 0x8);
    // private DigitalOpus.MB.Core.TextureBlender resultMaterialTextureBlender
    // Size: 0x8
    // Offset: 0x18
    ::DigitalOpus::MB::Core::TextureBlender* resultMaterialTextureBlender;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::TextureBlender*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTextureProperties
    operator ::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTextureProperties() noexcept {
      return *reinterpret_cast<::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTextureProperties*>(this);
    }
    // Get instance field reference: private DigitalOpus.MB.Core.MB3_TextureCombinerNonTextureProperties _textureProperties
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties*& dyn__textureProperties();
    // Get instance field reference: private DigitalOpus.MB.Core.TextureBlender resultMaterialTextureBlender
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::TextureBlender*& dyn_resultMaterialTextureBlender();
    // public System.Void .ctor(DigitalOpus.MB.Core.MB3_TextureCombinerNonTextureProperties textureProperties, DigitalOpus.MB.Core.TextureBlender resultMats)
    // Offset: 0x1209D68
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps* New_ctor(::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties* textureProperties, ::DigitalOpus::MB::Core::TextureBlender* resultMats) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps*, creationType>(textureProperties, resultMats)));
    }
    // public System.Boolean NonTexturePropertiesAreEqual(UnityEngine.Material a, UnityEngine.Material b)
    // Offset: 0x120AC04
    bool NonTexturePropertiesAreEqual(::UnityEngine::Material* a, ::UnityEngine::Material* b);
    // public UnityEngine.Texture2D TintTextureWithTextureCombiner(UnityEngine.Texture2D t, DigitalOpus.MB.Core.MB_TexSet sourceMaterial, DigitalOpus.MB.Core.ShaderTextureProperty shaderPropertyName)
    // Offset: 0x120ACD0
    ::UnityEngine::Texture2D* TintTextureWithTextureCombiner(::UnityEngine::Texture2D* t, ::DigitalOpus::MB::Core::MB_TexSet* sourceMaterial, ::DigitalOpus::MB::Core::ShaderTextureProperty* shaderPropertyName);
    // public System.Void AdjustNonTextureProperties(UnityEngine.Material resultMat, System.Collections.Generic.List`1<DigitalOpus.MB.Core.ShaderTextureProperty> texPropertyNames, DigitalOpus.MB.Core.MB2_EditorMethodsInterface editorMethods)
    // Offset: 0x120B07C
    void AdjustNonTextureProperties(::UnityEngine::Material* resultMat, ::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>* texPropertyNames, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods);
    // public UnityEngine.Color GetColorAsItWouldAppearInAtlasIfNoTexture(UnityEngine.Material matIfBlender, DigitalOpus.MB.Core.ShaderTextureProperty texProperty)
    // Offset: 0x120B28C
    ::UnityEngine::Color GetColorAsItWouldAppearInAtlasIfNoTexture(::UnityEngine::Material* matIfBlender, ::DigitalOpus::MB::Core::ShaderTextureProperty* texProperty);
    // public UnityEngine.Color GetColorForTemporaryTexture(UnityEngine.Material matIfBlender, DigitalOpus.MB.Core.ShaderTextureProperty texProperty)
    // Offset: 0x120B41C
    ::UnityEngine::Color GetColorForTemporaryTexture(::UnityEngine::Material* matIfBlender, ::DigitalOpus::MB::Core::ShaderTextureProperty* texProperty);
  }; // DigitalOpus.MB.Core.MB3_TextureCombinerNonTextureProperties/DigitalOpus.MB.Core.NonTexturePropertiesBlendProps
  #pragma pack(pop)
  static check_size<sizeof(MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps), 24 + sizeof(::DigitalOpus::MB::Core::TextureBlender*)> __DigitalOpus_MB_Core_MB3_TextureCombinerNonTextureProperties_NonTexturePropertiesBlendPropsSizeCheck;
  static_assert(sizeof(MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::NonTexturePropertiesAreEqual
// Il2CppName: NonTexturePropertiesAreEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::*)(::UnityEngine::Material*, ::UnityEngine::Material*)>(&DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::NonTexturePropertiesAreEqual)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps*), "NonTexturePropertiesAreEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::TintTextureWithTextureCombiner
// Il2CppName: TintTextureWithTextureCombiner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::*)(::UnityEngine::Texture2D*, ::DigitalOpus::MB::Core::MB_TexSet*, ::DigitalOpus::MB::Core::ShaderTextureProperty*)>(&DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::TintTextureWithTextureCombiner)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* sourceMaterial = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_TexSet")->byval_arg;
    static auto* shaderPropertyName = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "ShaderTextureProperty")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps*), "TintTextureWithTextureCombiner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t, sourceMaterial, shaderPropertyName});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::AdjustNonTextureProperties
// Il2CppName: AdjustNonTextureProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::*)(::UnityEngine::Material*, ::System::Collections::Generic::List_1<::DigitalOpus::MB::Core::ShaderTextureProperty*>*, ::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*)>(&DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::AdjustNonTextureProperties)> {
  static const MethodInfo* get() {
    static auto* resultMat = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* texPropertyNames = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "ShaderTextureProperty")})->byval_arg;
    static auto* editorMethods = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_EditorMethodsInterface")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps*), "AdjustNonTextureProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resultMat, texPropertyNames, editorMethods});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::GetColorAsItWouldAppearInAtlasIfNoTexture
// Il2CppName: GetColorAsItWouldAppearInAtlasIfNoTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::*)(::UnityEngine::Material*, ::DigitalOpus::MB::Core::ShaderTextureProperty*)>(&DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::GetColorAsItWouldAppearInAtlasIfNoTexture)> {
  static const MethodInfo* get() {
    static auto* matIfBlender = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* texProperty = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "ShaderTextureProperty")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps*), "GetColorAsItWouldAppearInAtlasIfNoTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{matIfBlender, texProperty});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::GetColorForTemporaryTexture
// Il2CppName: GetColorForTemporaryTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::*)(::UnityEngine::Material*, ::DigitalOpus::MB::Core::ShaderTextureProperty*)>(&DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps::GetColorForTemporaryTexture)> {
  static const MethodInfo* get() {
    static auto* matIfBlender = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    static auto* texProperty = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "ShaderTextureProperty")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_TextureCombinerNonTextureProperties::NonTexturePropertiesBlendProps*), "GetColorForTemporaryTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{matIfBlender, texProperty});
  }
};
