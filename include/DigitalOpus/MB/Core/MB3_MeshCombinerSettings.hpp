// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: DigitalOpus.MB.Core.MB_IMeshBakerSettingsHolder
#include "DigitalOpus/MB/Core/MB_IMeshBakerSettingsHolder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DigitalOpus::MB::Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB3_MeshCombinerSettingsData
  class MB3_MeshCombinerSettingsData;
  // Forward declaring type: MB_IMeshBakerSettings
  class MB_IMeshBakerSettings;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Object because it is already included!
}
// Completed forward declares
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB3_MeshCombinerSettings
  class MB3_MeshCombinerSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB3_MeshCombinerSettings);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB3_MeshCombinerSettings*, "DigitalOpus.MB.Core", "MB3_MeshCombinerSettings");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB3_MeshCombinerSettings
  // [TokenAttribute] Offset: FFFFFFFF
  // [CreateAssetMenuAttribute] Offset: 98F580
  class MB3_MeshCombinerSettings : public ::UnityEngine::ScriptableObject/*, public ::DigitalOpus::MB::Core::MB_IMeshBakerSettingsHolder*/ {
    public:
    public:
    // public DigitalOpus.MB.Core.MB3_MeshCombinerSettingsData data
    // Size: 0x8
    // Offset: 0x18
    ::DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData* data;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::DigitalOpus::MB::Core::MB_IMeshBakerSettingsHolder
    operator ::DigitalOpus::MB::Core::MB_IMeshBakerSettingsHolder() noexcept {
      return *reinterpret_cast<::DigitalOpus::MB::Core::MB_IMeshBakerSettingsHolder*>(this);
    }
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public DigitalOpus.MB.Core.MB3_MeshCombinerSettingsData data
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*& dyn_data();
    // public System.Void .ctor()
    // Offset: 0xC2A718
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_MeshCombinerSettings* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_MeshCombinerSettings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_MeshCombinerSettings*, creationType>()));
    }
    // public DigitalOpus.MB.Core.MB_IMeshBakerSettings GetMeshBakerSettings()
    // Offset: 0xC2A6AC
    ::DigitalOpus::MB::Core::MB_IMeshBakerSettings* GetMeshBakerSettings();
    // public System.Void GetMeshBakerSettingsAsSerializedProperty(out System.String propertyName, out UnityEngine.Object targetObj)
    // Offset: 0xC2A6B4
    void GetMeshBakerSettingsAsSerializedProperty(ByRef<::StringW> propertyName, ByRef<::UnityEngine::Object*> targetObj);
  }; // DigitalOpus.MB.Core.MB3_MeshCombinerSettings
  #pragma pack(pop)
  static check_size<sizeof(MB3_MeshCombinerSettings), 24 + sizeof(::DigitalOpus::MB::Core::MB3_MeshCombinerSettingsData*)> __DigitalOpus_MB_Core_MB3_MeshCombinerSettingsSizeCheck;
  static_assert(sizeof(MB3_MeshCombinerSettings) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettings::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettings::GetMeshBakerSettings
// Il2CppName: GetMeshBakerSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::MB_IMeshBakerSettings* (DigitalOpus::MB::Core::MB3_MeshCombinerSettings::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettings::GetMeshBakerSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettings*), "GetMeshBakerSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombinerSettings::GetMeshBakerSettingsAsSerializedProperty
// Il2CppName: GetMeshBakerSettingsAsSerializedProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombinerSettings::*)(ByRef<::StringW>, ByRef<::UnityEngine::Object*>)>(&DigitalOpus::MB::Core::MB3_MeshCombinerSettings::GetMeshBakerSettingsAsSerializedProperty)> {
  static const MethodInfo* get() {
    static auto* propertyName = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    static auto* targetObj = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombinerSettings*), "GetMeshBakerSettingsAsSerializedProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyName, targetObj});
  }
};
