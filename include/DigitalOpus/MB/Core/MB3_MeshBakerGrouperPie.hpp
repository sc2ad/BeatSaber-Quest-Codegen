// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DigitalOpus.MB.Core.MB3_MeshBakerGrouperCore
#include "DigitalOpus/MB/Core/MB3_MeshBakerGrouperCore.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DigitalOpus::MB::Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: GrouperData
  class GrouperData;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
  // Forward declaring type: Renderer
  class Renderer;
  // Forward declaring type: GameObject
  class GameObject;
  // Skipping declaration: Bounds because it is already included!
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB3_MeshBakerGrouperPie
  class MB3_MeshBakerGrouperPie;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie*, "DigitalOpus.MB.Core", "MB3_MeshBakerGrouperPie");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB3_MeshBakerGrouperPie
  // [TokenAttribute] Offset: FFFFFFFF
  class MB3_MeshBakerGrouperPie : public ::DigitalOpus::MB::Core::MB3_MeshBakerGrouperCore {
    public:
    // public System.Void .ctor(DigitalOpus.MB.Core.GrouperData data)
    // Offset: 0xC27E10
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_MeshBakerGrouperPie* New_ctor(::DigitalOpus::MB::Core::GrouperData* data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_MeshBakerGrouperPie*, creationType>(data)));
    }
    // static private System.Int32 MaxIndexInVector3(UnityEngine.Vector3 v)
    // Offset: 0xC28F40
    static int MaxIndexInVector3(::UnityEngine::Vector3 v);
    // static public System.Void DrawCircle(UnityEngine.Vector3 axis, UnityEngine.Vector3 center, System.Single radius, System.Int32 subdiv)
    // Offset: 0xC28C3C
    static void DrawCircle(::UnityEngine::Vector3 axis, ::UnityEngine::Vector3 center, float radius, int subdiv);
    // public override System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<UnityEngine.Renderer>> FilterIntoGroups(System.Collections.Generic.List`1<UnityEngine.GameObject> selection)
    // Offset: 0xC27E3C
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshBakerGrouperCore
    // Base method: System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<UnityEngine.Renderer>> MB3_MeshBakerGrouperCore::FilterIntoGroups(System.Collections.Generic.List`1<UnityEngine.GameObject> selection)
    ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*>* FilterIntoGroups(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* selection);
    // public override System.Void DrawGizmos(UnityEngine.Bounds sourceObjectBounds)
    // Offset: 0xC28780
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshBakerGrouperCore
    // Base method: System.Void MB3_MeshBakerGrouperCore::DrawGizmos(UnityEngine.Bounds sourceObjectBounds)
    void DrawGizmos(::UnityEngine::Bounds sourceObjectBounds);
    // public override MB3_MeshBakerGrouper/ClusterType GetClusterType()
    // Offset: 0xC28F5C
    // Implemented from: DigitalOpus.MB.Core.MB3_MeshBakerGrouperCore
    // Base method: MB3_MeshBakerGrouper/ClusterType MB3_MeshBakerGrouperCore::GetClusterType()
    ::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType GetClusterType();
  }; // DigitalOpus.MB.Core.MB3_MeshBakerGrouperPie
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie::MaxIndexInVector3
// Il2CppName: MaxIndexInVector3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::UnityEngine::Vector3)>(&DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie::MaxIndexInVector3)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie*), "MaxIndexInVector3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie::DrawCircle
// Il2CppName: DrawCircle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, float, int)>(&DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie::DrawCircle)> {
  static const MethodInfo* get() {
    static auto* axis = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* center = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* radius = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* subdiv = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie*), "DrawCircle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{axis, center, radius, subdiv});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie::FilterIntoGroups
// Il2CppName: FilterIntoGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::UnityEngine::Renderer*>*>* (DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie::*)(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*)>(&DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie::FilterIntoGroups)> {
  static const MethodInfo* get() {
    static auto* selection = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie*), "FilterIntoGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selection});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie::DrawGizmos
// Il2CppName: DrawGizmos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie::*)(::UnityEngine::Bounds)>(&DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie::DrawGizmos)> {
  static const MethodInfo* get() {
    static auto* sourceObjectBounds = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie*), "DrawGizmos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sourceObjectBounds});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie::GetClusterType
// Il2CppName: GetClusterType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::MB3_MeshBakerGrouper::ClusterType (DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie::*)()>(&DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie::GetClusterType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshBakerGrouperPie*), "GetClusterType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
