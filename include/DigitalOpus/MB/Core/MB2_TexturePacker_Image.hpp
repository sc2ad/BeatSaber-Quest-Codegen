// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DigitalOpus.MB.Core.MB2_TexturePacker
#include "DigitalOpus/MB/Core/MB2_TexturePacker.hpp"
// Including type: DigitalOpus.MB.Core.AtlasPadding
#include "DigitalOpus/MB/Core/AtlasPadding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB2_TexturePacker::Image);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB2_TexturePacker::Image*, "DigitalOpus.MB.Core", "MB2_TexturePacker/Image");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB2_TexturePacker/DigitalOpus.MB.Core.Image
  // [TokenAttribute] Offset: FFFFFFFF
  class MB2_TexturePacker::Image : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 imgId
    // Size: 0x4
    // Offset: 0x10
    int imgId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 w
    // Size: 0x4
    // Offset: 0x14
    int w;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 h
    // Size: 0x4
    // Offset: 0x18
    int h;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 x
    // Size: 0x4
    // Offset: 0x1C
    int x;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 y
    // Size: 0x4
    // Offset: 0x20
    int y;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public System.Int32 imgId
    [[deprecated("Use field access instead!")]] int& dyn_imgId();
    // Get instance field reference: public System.Int32 w
    [[deprecated("Use field access instead!")]] int& dyn_w();
    // Get instance field reference: public System.Int32 h
    [[deprecated("Use field access instead!")]] int& dyn_h();
    // Get instance field reference: public System.Int32 x
    [[deprecated("Use field access instead!")]] int& dyn_x();
    // Get instance field reference: public System.Int32 y
    [[deprecated("Use field access instead!")]] int& dyn_y();
    // public System.Void .ctor(System.Int32 id, System.Int32 tw, System.Int32 th, DigitalOpus.MB.Core.AtlasPadding padding, System.Int32 minImageSizeX, System.Int32 minImageSizeY)
    // Offset: 0xC17A78
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB2_TexturePacker::Image* New_ctor(int id, int tw, int th, ::DigitalOpus::MB::Core::AtlasPadding padding, int minImageSizeX, int minImageSizeY) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB2_TexturePacker::Image::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB2_TexturePacker::Image*, creationType>(id, tw, th, padding, minImageSizeX, minImageSizeY)));
    }
    // public System.Void .ctor(DigitalOpus.MB.Core.MB2_TexturePacker/DigitalOpus.MB.Core.Image im)
    // Offset: 0xC17B48
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB2_TexturePacker::Image* New_ctor(::DigitalOpus::MB::Core::MB2_TexturePacker::Image* im) {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB2_TexturePacker::Image::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB2_TexturePacker::Image*, creationType>(im)));
    }
  }; // DigitalOpus.MB.Core.MB2_TexturePacker/DigitalOpus.MB.Core.Image
  #pragma pack(pop)
  static check_size<sizeof(MB2_TexturePacker::Image), 32 + sizeof(int)> __DigitalOpus_MB_Core_MB2_TexturePacker_ImageSizeCheck;
  static_assert(sizeof(MB2_TexturePacker::Image) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_TexturePacker::Image::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB2_TexturePacker::Image::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
