// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: DigitalOpus.MB.Core.MB_IMeshBakerSettings
#include "DigitalOpus/MB/Core/MB_IMeshBakerSettings.hpp"
// Including type: DigitalOpus.MB.Core.MB2_ValidationLevel
#include "DigitalOpus/MB/Core/MB2_ValidationLevel.hpp"
// Including type: DigitalOpus.MB.Core.MB2_LogLevel
#include "DigitalOpus/MB/Core/MB2_LogLevel.hpp"
// Including type: DigitalOpus.MB.Core.MB2_OutputOptions
#include "DigitalOpus/MB/Core/MB2_OutputOptions.hpp"
// Including type: DigitalOpus.MB.Core.MB_RenderType
#include "DigitalOpus/MB/Core/MB_RenderType.hpp"
// Including type: DigitalOpus.MB.Core.MB2_LightmapOptions
#include "DigitalOpus/MB/Core/MB2_LightmapOptions.hpp"
// Including type: DigitalOpus.MB.Core.MB_MeshPivotLocation
#include "DigitalOpus/MB/Core/MB_MeshPivotLocation.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: DigitalOpus::MB::Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB_IMeshBakerSettingsHolder
  class MB_IMeshBakerSettingsHolder;
  // Forward declaring type: IAssignToMeshCustomizer
  class IAssignToMeshCustomizer;
  // Forward declaring type: MB2_EditorMethodsInterface
  class MB2_EditorMethodsInterface;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: MB2_TextureBakeResults
  class MB2_TextureBakeResults;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Renderer
  class Renderer;
  // Forward declaring type: Object
  class Object;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: SkinnedMeshRenderer
  class SkinnedMeshRenderer;
  // Forward declaring type: Material
  class Material;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Forward declaring type: MB3_MeshCombiner
  class MB3_MeshCombiner;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DigitalOpus::MB::Core::MB3_MeshCombiner);
DEFINE_IL2CPP_ARG_TYPE(::DigitalOpus::MB::Core::MB3_MeshCombiner*, "DigitalOpus.MB.Core", "MB3_MeshCombiner");
// Type namespace: DigitalOpus.MB.Core
namespace DigitalOpus::MB::Core {
  // Size: 0x89
  #pragma pack(push, 1)
  // Autogenerated type: DigitalOpus.MB.Core.MB3_MeshCombiner
  // [TokenAttribute] Offset: FFFFFFFF
  class MB3_MeshCombiner : public ::Il2CppObject/*, public ::DigitalOpus::MB::Core::MB_IMeshBakerSettings*/ {
    public:
    // Nested type: ::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate
    class GenerateUV2Delegate;
    // Nested type: ::DigitalOpus::MB::Core::MB3_MeshCombiner::MBBlendShapeKey
    class MBBlendShapeKey;
    // Nested type: ::DigitalOpus::MB::Core::MB3_MeshCombiner::MBBlendShapeValue
    class MBBlendShapeValue;
    public:
    // protected DigitalOpus.MB.Core.MB2_ValidationLevel _validationLevel
    // Size: 0x4
    // Offset: 0x10
    ::DigitalOpus::MB::Core::MB2_ValidationLevel validationLevel;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB2_ValidationLevel) == 0x4);
    // Padding between fields: validationLevel and: name
    char __padding0[0x4] = {};
    // protected System.String _name
    // Size: 0x8
    // Offset: 0x18
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // protected MB2_TextureBakeResults _textureBakeResults
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::MB2_TextureBakeResults* textureBakeResults;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::MB2_TextureBakeResults*) == 0x8);
    // protected UnityEngine.GameObject _resultSceneObject
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* resultSceneObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // protected UnityEngine.Renderer _targetRenderer
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Renderer* targetRenderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::Renderer*) == 0x8);
    // protected DigitalOpus.MB.Core.MB2_LogLevel _LOG_LEVEL
    // Size: 0x4
    // Offset: 0x38
    ::DigitalOpus::MB::Core::MB2_LogLevel LOG_LEVEL;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB2_LogLevel) == 0x4);
    // Padding between fields: LOG_LEVEL and: settingsHolder
    char __padding5[0x4] = {};
    // protected UnityEngine.Object _settingsHolder
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Object* settingsHolder;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // protected DigitalOpus.MB.Core.MB2_OutputOptions _outputOption
    // Size: 0x4
    // Offset: 0x48
    ::DigitalOpus::MB::Core::MB2_OutputOptions outputOption;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB2_OutputOptions) == 0x4);
    // protected DigitalOpus.MB.Core.MB_RenderType _renderType
    // Size: 0x4
    // Offset: 0x4C
    ::DigitalOpus::MB::Core::MB_RenderType renderType;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB_RenderType) == 0x4);
    // protected DigitalOpus.MB.Core.MB2_LightmapOptions _lightmapOption
    // Size: 0x4
    // Offset: 0x50
    ::DigitalOpus::MB::Core::MB2_LightmapOptions lightmapOption;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB2_LightmapOptions) == 0x4);
    // protected System.Boolean _doNorm
    // Size: 0x1
    // Offset: 0x54
    bool doNorm;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doTan
    // Size: 0x1
    // Offset: 0x55
    bool doTan;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doCol
    // Size: 0x1
    // Offset: 0x56
    bool doCol;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doUV
    // Size: 0x1
    // Offset: 0x57
    bool doUV;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doUV3
    // Size: 0x1
    // Offset: 0x58
    bool doUV3;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doUV4
    // Size: 0x1
    // Offset: 0x59
    bool doUV4;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doUV5
    // Size: 0x1
    // Offset: 0x5A
    bool doUV5;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doUV6
    // Size: 0x1
    // Offset: 0x5B
    bool doUV6;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doUV7
    // Size: 0x1
    // Offset: 0x5C
    bool doUV7;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doUV8
    // Size: 0x1
    // Offset: 0x5D
    bool doUV8;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _doBlendShapes
    // Size: 0x1
    // Offset: 0x5E
    bool doBlendShapes;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: doBlendShapes and: pivotLocationType
    char __padding20[0x1] = {};
    // [FormerlySerializedAsAttribute] Offset: 0x98FD6C
    // protected DigitalOpus.MB.Core.MB_MeshPivotLocation _pivotLocationType
    // Size: 0x4
    // Offset: 0x60
    ::DigitalOpus::MB::Core::MB_MeshPivotLocation pivotLocationType;
    // Field size check
    static_assert(sizeof(::DigitalOpus::MB::Core::MB_MeshPivotLocation) == 0x4);
    // protected UnityEngine.Vector3 _pivotLocation
    // Size: 0xC
    // Offset: 0x64
    ::UnityEngine::Vector3 pivotLocation;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // protected System.Boolean _clearBuffersAfterBake
    // Size: 0x1
    // Offset: 0x70
    bool clearBuffersAfterBake;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean _optimizeAfterBake
    // Size: 0x1
    // Offset: 0x71
    bool optimizeAfterBake;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: optimizeAfterBake and: uv2UnwrappingParamsHardAngle
    char __padding24[0x2] = {};
    // [FormerlySerializedAsAttribute] Offset: 0x98FDE8
    // protected System.Single _uv2UnwrappingParamsHardAngle
    // Size: 0x4
    // Offset: 0x74
    float uv2UnwrappingParamsHardAngle;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [FormerlySerializedAsAttribute] Offset: 0x98FE34
    // protected System.Single _uv2UnwrappingParamsPackMargin
    // Size: 0x4
    // Offset: 0x78
    float uv2UnwrappingParamsPackMargin;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // protected System.Boolean _smrNoExtraBonesWhenCombiningMeshRenderers
    // Size: 0x1
    // Offset: 0x7C
    bool smrNoExtraBonesWhenCombiningMeshRenderers;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // protected System.Boolean _smrMergeBlendShapesWithSameNames
    // Size: 0x1
    // Offset: 0x7D
    bool smrMergeBlendShapesWithSameNames;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: smrMergeBlendShapesWithSameNames and: assignToMeshCustomizer
    char __padding28[0x2] = {};
    // protected UnityEngine.Object _assignToMeshCustomizer
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::Object* assignToMeshCustomizer;
    // Field size check
    static_assert(sizeof(::UnityEngine::Object*) == 0x8);
    // protected System.Boolean _usingTemporaryTextureBakeResult
    // Size: 0x1
    // Offset: 0x88
    bool usingTemporaryTextureBakeResult;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::DigitalOpus::MB::Core::MB_IMeshBakerSettings
    operator ::DigitalOpus::MB::Core::MB_IMeshBakerSettings() noexcept {
      return *reinterpret_cast<::DigitalOpus::MB::Core::MB_IMeshBakerSettings*>(this);
    }
    // Get instance field reference: protected DigitalOpus.MB.Core.MB2_ValidationLevel _validationLevel
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_ValidationLevel& dyn__validationLevel();
    // Get instance field reference: protected System.String _name
    [[deprecated("Use field access instead!")]] ::StringW& dyn__name();
    // Get instance field reference: protected MB2_TextureBakeResults _textureBakeResults
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::MB2_TextureBakeResults*& dyn__textureBakeResults();
    // Get instance field reference: protected UnityEngine.GameObject _resultSceneObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn__resultSceneObject();
    // Get instance field reference: protected UnityEngine.Renderer _targetRenderer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& dyn__targetRenderer();
    // Get instance field reference: protected DigitalOpus.MB.Core.MB2_LogLevel _LOG_LEVEL
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_LogLevel& dyn__LOG_LEVEL();
    // Get instance field reference: protected UnityEngine.Object _settingsHolder
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__settingsHolder();
    // Get instance field reference: protected DigitalOpus.MB.Core.MB2_OutputOptions _outputOption
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_OutputOptions& dyn__outputOption();
    // Get instance field reference: protected DigitalOpus.MB.Core.MB_RenderType _renderType
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB_RenderType& dyn__renderType();
    // Get instance field reference: protected DigitalOpus.MB.Core.MB2_LightmapOptions _lightmapOption
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB2_LightmapOptions& dyn__lightmapOption();
    // Get instance field reference: protected System.Boolean _doNorm
    [[deprecated("Use field access instead!")]] bool& dyn__doNorm();
    // Get instance field reference: protected System.Boolean _doTan
    [[deprecated("Use field access instead!")]] bool& dyn__doTan();
    // Get instance field reference: protected System.Boolean _doCol
    [[deprecated("Use field access instead!")]] bool& dyn__doCol();
    // Get instance field reference: protected System.Boolean _doUV
    [[deprecated("Use field access instead!")]] bool& dyn__doUV();
    // Get instance field reference: protected System.Boolean _doUV3
    [[deprecated("Use field access instead!")]] bool& dyn__doUV3();
    // Get instance field reference: protected System.Boolean _doUV4
    [[deprecated("Use field access instead!")]] bool& dyn__doUV4();
    // Get instance field reference: protected System.Boolean _doUV5
    [[deprecated("Use field access instead!")]] bool& dyn__doUV5();
    // Get instance field reference: protected System.Boolean _doUV6
    [[deprecated("Use field access instead!")]] bool& dyn__doUV6();
    // Get instance field reference: protected System.Boolean _doUV7
    [[deprecated("Use field access instead!")]] bool& dyn__doUV7();
    // Get instance field reference: protected System.Boolean _doUV8
    [[deprecated("Use field access instead!")]] bool& dyn__doUV8();
    // Get instance field reference: protected System.Boolean _doBlendShapes
    [[deprecated("Use field access instead!")]] bool& dyn__doBlendShapes();
    // Get instance field reference: protected DigitalOpus.MB.Core.MB_MeshPivotLocation _pivotLocationType
    [[deprecated("Use field access instead!")]] ::DigitalOpus::MB::Core::MB_MeshPivotLocation& dyn__pivotLocationType();
    // Get instance field reference: protected UnityEngine.Vector3 _pivotLocation
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn__pivotLocation();
    // Get instance field reference: protected System.Boolean _clearBuffersAfterBake
    [[deprecated("Use field access instead!")]] bool& dyn__clearBuffersAfterBake();
    // Get instance field reference: public System.Boolean _optimizeAfterBake
    [[deprecated("Use field access instead!")]] bool& dyn__optimizeAfterBake();
    // Get instance field reference: protected System.Single _uv2UnwrappingParamsHardAngle
    [[deprecated("Use field access instead!")]] float& dyn__uv2UnwrappingParamsHardAngle();
    // Get instance field reference: protected System.Single _uv2UnwrappingParamsPackMargin
    [[deprecated("Use field access instead!")]] float& dyn__uv2UnwrappingParamsPackMargin();
    // Get instance field reference: protected System.Boolean _smrNoExtraBonesWhenCombiningMeshRenderers
    [[deprecated("Use field access instead!")]] bool& dyn__smrNoExtraBonesWhenCombiningMeshRenderers();
    // Get instance field reference: protected System.Boolean _smrMergeBlendShapesWithSameNames
    [[deprecated("Use field access instead!")]] bool& dyn__smrMergeBlendShapesWithSameNames();
    // Get instance field reference: protected UnityEngine.Object _assignToMeshCustomizer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Object*& dyn__assignToMeshCustomizer();
    // Get instance field reference: protected System.Boolean _usingTemporaryTextureBakeResult
    [[deprecated("Use field access instead!")]] bool& dyn__usingTemporaryTextureBakeResult();
    // static public System.Boolean get_EVAL_VERSION()
    // Offset: 0xC28F64
    static bool get_EVAL_VERSION();
    // public DigitalOpus.MB.Core.MB2_ValidationLevel get_validationLevel()
    // Offset: 0xC28F6C
    ::DigitalOpus::MB::Core::MB2_ValidationLevel get_validationLevel();
    // public System.Void set_validationLevel(DigitalOpus.MB.Core.MB2_ValidationLevel value)
    // Offset: 0xC28F74
    void set_validationLevel(::DigitalOpus::MB::Core::MB2_ValidationLevel value);
    // public System.String get_name()
    // Offset: 0xC28F7C
    ::StringW get_name();
    // public System.Void set_name(System.String value)
    // Offset: 0xC28F84
    void set_name(::StringW value);
    // public MB2_TextureBakeResults get_textureBakeResults()
    // Offset: 0xC28F8C
    ::GlobalNamespace::MB2_TextureBakeResults* get_textureBakeResults();
    // public System.Void set_textureBakeResults(MB2_TextureBakeResults value)
    // Offset: 0xC28F94
    void set_textureBakeResults(::GlobalNamespace::MB2_TextureBakeResults* value);
    // public UnityEngine.GameObject get_resultSceneObject()
    // Offset: 0xC28F9C
    ::UnityEngine::GameObject* get_resultSceneObject();
    // public System.Void set_resultSceneObject(UnityEngine.GameObject value)
    // Offset: 0xC28FA4
    void set_resultSceneObject(::UnityEngine::GameObject* value);
    // public UnityEngine.Renderer get_targetRenderer()
    // Offset: 0xC28FAC
    ::UnityEngine::Renderer* get_targetRenderer();
    // public System.Void set_targetRenderer(UnityEngine.Renderer value)
    // Offset: 0xC28FB4
    void set_targetRenderer(::UnityEngine::Renderer* value);
    // public DigitalOpus.MB.Core.MB2_LogLevel get_LOG_LEVEL()
    // Offset: 0xC2918C
    ::DigitalOpus::MB::Core::MB2_LogLevel get_LOG_LEVEL();
    // public System.Void set_LOG_LEVEL(DigitalOpus.MB.Core.MB2_LogLevel value)
    // Offset: 0xC29194
    void set_LOG_LEVEL(::DigitalOpus::MB::Core::MB2_LogLevel value);
    // public DigitalOpus.MB.Core.MB_IMeshBakerSettings get_settings()
    // Offset: 0xC2919C
    ::DigitalOpus::MB::Core::MB_IMeshBakerSettings* get_settings();
    // public DigitalOpus.MB.Core.MB_IMeshBakerSettingsHolder get_settingsHolder()
    // Offset: 0xC292A8
    ::DigitalOpus::MB::Core::MB_IMeshBakerSettingsHolder* get_settingsHolder();
    // public System.Void set_settingsHolder(DigitalOpus.MB.Core.MB_IMeshBakerSettingsHolder value)
    // Offset: 0xC29374
    void set_settingsHolder(::DigitalOpus::MB::Core::MB_IMeshBakerSettingsHolder* value);
    // public DigitalOpus.MB.Core.MB2_OutputOptions get_outputOption()
    // Offset: 0xC2943C
    ::DigitalOpus::MB::Core::MB2_OutputOptions get_outputOption();
    // public System.Void set_outputOption(DigitalOpus.MB.Core.MB2_OutputOptions value)
    // Offset: 0xC29444
    void set_outputOption(::DigitalOpus::MB::Core::MB2_OutputOptions value);
    // public DigitalOpus.MB.Core.MB_RenderType get_renderType()
    // Offset: 0xC2944C
    ::DigitalOpus::MB::Core::MB_RenderType get_renderType();
    // public System.Void set_renderType(DigitalOpus.MB.Core.MB_RenderType value)
    // Offset: 0xC29454
    void set_renderType(::DigitalOpus::MB::Core::MB_RenderType value);
    // public DigitalOpus.MB.Core.MB2_LightmapOptions get_lightmapOption()
    // Offset: 0xC2945C
    ::DigitalOpus::MB::Core::MB2_LightmapOptions get_lightmapOption();
    // public System.Void set_lightmapOption(DigitalOpus.MB.Core.MB2_LightmapOptions value)
    // Offset: 0xC29464
    void set_lightmapOption(::DigitalOpus::MB::Core::MB2_LightmapOptions value);
    // public System.Boolean get_doNorm()
    // Offset: 0xC2946C
    bool get_doNorm();
    // public System.Void set_doNorm(System.Boolean value)
    // Offset: 0xC29474
    void set_doNorm(bool value);
    // public System.Boolean get_doTan()
    // Offset: 0xC29480
    bool get_doTan();
    // public System.Void set_doTan(System.Boolean value)
    // Offset: 0xC29488
    void set_doTan(bool value);
    // public System.Boolean get_doCol()
    // Offset: 0xC29494
    bool get_doCol();
    // public System.Void set_doCol(System.Boolean value)
    // Offset: 0xC2949C
    void set_doCol(bool value);
    // public System.Boolean get_doUV()
    // Offset: 0xC294A8
    bool get_doUV();
    // public System.Void set_doUV(System.Boolean value)
    // Offset: 0xC294B0
    void set_doUV(bool value);
    // public System.Boolean get_doUV1()
    // Offset: 0xC294BC
    bool get_doUV1();
    // public System.Void set_doUV1(System.Boolean value)
    // Offset: 0xC294C4
    void set_doUV1(bool value);
    // public System.Boolean get_doUV3()
    // Offset: 0xC29694
    bool get_doUV3();
    // public System.Void set_doUV3(System.Boolean value)
    // Offset: 0xC2969C
    void set_doUV3(bool value);
    // public System.Boolean get_doUV4()
    // Offset: 0xC296A8
    bool get_doUV4();
    // public System.Void set_doUV4(System.Boolean value)
    // Offset: 0xC296B0
    void set_doUV4(bool value);
    // public System.Boolean get_doUV5()
    // Offset: 0xC296BC
    bool get_doUV5();
    // public System.Void set_doUV5(System.Boolean value)
    // Offset: 0xC296C4
    void set_doUV5(bool value);
    // public System.Boolean get_doUV6()
    // Offset: 0xC296D0
    bool get_doUV6();
    // public System.Void set_doUV6(System.Boolean value)
    // Offset: 0xC296D8
    void set_doUV6(bool value);
    // public System.Boolean get_doUV7()
    // Offset: 0xC296E4
    bool get_doUV7();
    // public System.Void set_doUV7(System.Boolean value)
    // Offset: 0xC296EC
    void set_doUV7(bool value);
    // public System.Boolean get_doUV8()
    // Offset: 0xC296F8
    bool get_doUV8();
    // public System.Void set_doUV8(System.Boolean value)
    // Offset: 0xC29700
    void set_doUV8(bool value);
    // public System.Boolean get_doBlendShapes()
    // Offset: 0xC2970C
    bool get_doBlendShapes();
    // public System.Void set_doBlendShapes(System.Boolean value)
    // Offset: 0xC29714
    void set_doBlendShapes(bool value);
    // public DigitalOpus.MB.Core.MB_MeshPivotLocation get_pivotLocationType()
    // Offset: 0xC29720
    ::DigitalOpus::MB::Core::MB_MeshPivotLocation get_pivotLocationType();
    // public System.Void set_pivotLocationType(DigitalOpus.MB.Core.MB_MeshPivotLocation value)
    // Offset: 0xC29728
    void set_pivotLocationType(::DigitalOpus::MB::Core::MB_MeshPivotLocation value);
    // public UnityEngine.Vector3 get_pivotLocation()
    // Offset: 0xC29730
    ::UnityEngine::Vector3 get_pivotLocation();
    // public System.Void set_pivotLocation(UnityEngine.Vector3 value)
    // Offset: 0xC2973C
    void set_pivotLocation(::UnityEngine::Vector3 value);
    // public System.Boolean get_clearBuffersAfterBake()
    // Offset: 0xC29748
    bool get_clearBuffersAfterBake();
    // public System.Void set_clearBuffersAfterBake(System.Boolean value)
    // Offset: 0xC29750
    void set_clearBuffersAfterBake(bool value);
    // public System.Boolean get_optimizeAfterBake()
    // Offset: 0xC297D8
    bool get_optimizeAfterBake();
    // public System.Void set_optimizeAfterBake(System.Boolean value)
    // Offset: 0xC297E0
    void set_optimizeAfterBake(bool value);
    // public System.Single get_uv2UnwrappingParamsHardAngle()
    // Offset: 0xC297EC
    float get_uv2UnwrappingParamsHardAngle();
    // public System.Void set_uv2UnwrappingParamsHardAngle(System.Single value)
    // Offset: 0xC297F4
    void set_uv2UnwrappingParamsHardAngle(float value);
    // public System.Single get_uv2UnwrappingParamsPackMargin()
    // Offset: 0xC297FC
    float get_uv2UnwrappingParamsPackMargin();
    // public System.Void set_uv2UnwrappingParamsPackMargin(System.Single value)
    // Offset: 0xC29804
    void set_uv2UnwrappingParamsPackMargin(float value);
    // public System.Boolean get_smrNoExtraBonesWhenCombiningMeshRenderers()
    // Offset: 0xC2980C
    bool get_smrNoExtraBonesWhenCombiningMeshRenderers();
    // public System.Void set_smrNoExtraBonesWhenCombiningMeshRenderers(System.Boolean value)
    // Offset: 0xC29814
    void set_smrNoExtraBonesWhenCombiningMeshRenderers(bool value);
    // public System.Boolean get_smrMergeBlendShapesWithSameNames()
    // Offset: 0xC29820
    bool get_smrMergeBlendShapesWithSameNames();
    // public System.Void set_smrMergeBlendShapesWithSameNames(System.Boolean value)
    // Offset: 0xC29828
    void set_smrMergeBlendShapesWithSameNames(bool value);
    // public DigitalOpus.MB.Core.IAssignToMeshCustomizer get_assignToMeshCustomizer()
    // Offset: 0xC29834
    ::DigitalOpus::MB::Core::IAssignToMeshCustomizer* get_assignToMeshCustomizer();
    // public System.Void set_assignToMeshCustomizer(DigitalOpus.MB.Core.IAssignToMeshCustomizer value)
    // Offset: 0xC298C0
    void set_assignToMeshCustomizer(::DigitalOpus::MB::Core::IAssignToMeshCustomizer* value);
    // protected System.Void .ctor()
    // Offset: 0xC29FFC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MB3_MeshCombiner* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::DigitalOpus::MB::Core::MB3_MeshCombiner::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MB3_MeshCombiner*, creationType>()));
    }
    // public System.Boolean doUV2()
    // Offset: 0xC294C8
    bool doUV2();
    // public System.Int32 GetLightmapIndex()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetLightmapIndex();
    // public System.Void ClearBuffers()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ClearBuffers();
    // public System.Void ClearMesh()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ClearMesh();
    // public System.Void ClearMesh(DigitalOpus.MB.Core.MB2_EditorMethodsInterface editorMethods)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ClearMesh(::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods);
    // public System.Void DisposeRuntimeCreated()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DisposeRuntimeCreated();
    // public System.Void DestroyMesh()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DestroyMesh();
    // public System.Void DestroyMeshEditor(DigitalOpus.MB.Core.MB2_EditorMethodsInterface editorMethods)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DestroyMeshEditor(::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods);
    // public System.Collections.Generic.List`1<UnityEngine.GameObject> GetObjectsInCombined()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* GetObjectsInCombined();
    // public System.Int32 GetNumObjectsInCombined()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetNumObjectsInCombined();
    // public System.Int32 GetNumVerticesFor(UnityEngine.GameObject go)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetNumVerticesFor(::UnityEngine::GameObject* go);
    // public System.Int32 GetNumVerticesFor(System.Int32 instanceID)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetNumVerticesFor(int instanceID);
    // public System.Collections.Generic.Dictionary`2<DigitalOpus.MB.Core.MB3_MeshCombiner/DigitalOpus.MB.Core.MBBlendShapeKey,DigitalOpus.MB.Core.MB3_MeshCombiner/DigitalOpus.MB.Core.MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::Dictionary_2<::DigitalOpus::MB::Core::MB3_MeshCombiner::MBBlendShapeKey*, ::DigitalOpus::MB::Core::MB3_MeshCombiner::MBBlendShapeValue*>* BuildSourceBlendShapeToCombinedIndexMap();
    // public System.Void Apply()
    // Offset: 0xC29950
    void Apply();
    // public System.Void Apply(DigitalOpus.MB.Core.MB3_MeshCombiner/DigitalOpus.MB.Core.GenerateUV2Delegate uv2GenerationMethod)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Apply(::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate* uv2GenerationMethod);
    // public System.Void Apply(System.Boolean triangles, System.Boolean vertices, System.Boolean normals, System.Boolean tangents, System.Boolean uvs, System.Boolean uv2, System.Boolean uv3, System.Boolean uv4, System.Boolean uv5, System.Boolean uv6, System.Boolean uv7, System.Boolean uv8, System.Boolean colors, System.Boolean bones, System.Boolean blendShapeFlag, DigitalOpus.MB.Core.MB3_MeshCombiner/DigitalOpus.MB.Core.GenerateUV2Delegate uv2GenerationMethod)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool uv5, bool uv6, bool uv7, bool uv8, bool colors, bool bones, bool blendShapeFlag, ::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate* uv2GenerationMethod);
    // public System.Void Apply(System.Boolean triangles, System.Boolean vertices, System.Boolean normals, System.Boolean tangents, System.Boolean uvs, System.Boolean uv2, System.Boolean uv3, System.Boolean uv4, System.Boolean colors, System.Boolean bones, System.Boolean blendShapeFlag, DigitalOpus.MB.Core.MB3_MeshCombiner/DigitalOpus.MB.Core.GenerateUV2Delegate uv2GenerationMethod)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones, bool blendShapeFlag, ::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate* uv2GenerationMethod);
    // public System.Boolean UpdateGameObjects(UnityEngine.GameObject[] gos)
    // Offset: 0xC29964
    bool UpdateGameObjects(::ArrayW<::UnityEngine::GameObject*> gos);
    // public System.Boolean UpdateGameObjects(UnityEngine.GameObject[] gos, System.Boolean updateBounds)
    // Offset: 0xC299CC
    bool UpdateGameObjects(::ArrayW<::UnityEngine::GameObject*> gos, bool updateBounds);
    // public System.Boolean UpdateGameObjects(UnityEngine.GameObject[] gos, System.Boolean recalcBounds, System.Boolean updateVertices, System.Boolean updateNormals, System.Boolean updateTangents, System.Boolean updateUV, System.Boolean updateUV2, System.Boolean updateUV3, System.Boolean updateUV4, System.Boolean updateColors, System.Boolean updateSkinningInfo)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool UpdateGameObjects(::ArrayW<::UnityEngine::GameObject*> gos, bool recalcBounds, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateColors, bool updateSkinningInfo);
    // public System.Boolean UpdateGameObjects(UnityEngine.GameObject[] gos, System.Boolean recalcBounds, System.Boolean updateVertices, System.Boolean updateNormals, System.Boolean updateTangents, System.Boolean updateUV, System.Boolean updateUV2, System.Boolean updateUV3, System.Boolean updateUV4, System.Boolean updateUV5, System.Boolean updateUV6, System.Boolean updateUV7, System.Boolean updateUV8, System.Boolean updateColors, System.Boolean updateSkinningInfo)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool UpdateGameObjects(::ArrayW<::UnityEngine::GameObject*> gos, bool recalcBounds, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateUV5, bool updateUV6, bool updateUV7, bool updateUV8, bool updateColors, bool updateSkinningInfo);
    // public System.Boolean AddDeleteGameObjects(UnityEngine.GameObject[] gos, UnityEngine.GameObject[] deleteGOs, System.Boolean disableRendererInSource)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool AddDeleteGameObjects(::ArrayW<::UnityEngine::GameObject*> gos, ::ArrayW<::UnityEngine::GameObject*> deleteGOs, bool disableRendererInSource);
    // public System.Boolean AddDeleteGameObjectsByID(UnityEngine.GameObject[] gos, System.Int32[] deleteGOinstanceIDs, System.Boolean disableRendererInSource)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool AddDeleteGameObjectsByID(::ArrayW<::UnityEngine::GameObject*> gos, ::ArrayW<int> deleteGOinstanceIDs, bool disableRendererInSource);
    // public System.Boolean CombinedMeshContains(UnityEngine.GameObject go)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool CombinedMeshContains(::UnityEngine::GameObject* go);
    // public System.Void UpdateSkinnedMeshApproximateBounds()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateSkinnedMeshApproximateBounds();
    // public System.Void UpdateSkinnedMeshApproximateBoundsFromBones()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateSkinnedMeshApproximateBoundsFromBones();
    // public System.Void CheckIntegrity()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void CheckIntegrity();
    // public System.Void UpdateSkinnedMeshApproximateBoundsFromBounds()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateSkinnedMeshApproximateBoundsFromBounds();
    // static public System.Void UpdateSkinnedMeshApproximateBoundsFromBonesStatic(UnityEngine.Transform[] bs, UnityEngine.SkinnedMeshRenderer smr)
    // Offset: 0xC29A34
    static void UpdateSkinnedMeshApproximateBoundsFromBonesStatic(::ArrayW<::UnityEngine::Transform*> bs, ::UnityEngine::SkinnedMeshRenderer* smr);
    // static public System.Void UpdateSkinnedMeshApproximateBoundsFromBoundsStatic(System.Collections.Generic.List`1<UnityEngine.GameObject> objectsInCombined, UnityEngine.SkinnedMeshRenderer smr)
    // Offset: 0xC29D6C
    static void UpdateSkinnedMeshApproximateBoundsFromBoundsStatic(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* objectsInCombined, ::UnityEngine::SkinnedMeshRenderer* smr);
    // protected System.Boolean _CreateTemporaryTextrueBakeResult(UnityEngine.GameObject[] gos, System.Collections.Generic.List`1<UnityEngine.Material> matsOnTargetRenderer)
    // Offset: 0xC29F34
    bool _CreateTemporaryTextrueBakeResult(::ArrayW<::UnityEngine::GameObject*> gos, ::System::Collections::Generic::List_1<::UnityEngine::Material*>* matsOnTargetRenderer);
    // public System.Collections.Generic.List`1<UnityEngine.Material> GetMaterialsOnTargetRenderer()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::Generic::List_1<::UnityEngine::Material*>* GetMaterialsOnTargetRenderer();
  }; // DigitalOpus.MB.Core.MB3_MeshCombiner
  #pragma pack(pop)
  static check_size<sizeof(MB3_MeshCombiner), 136 + sizeof(bool)> __DigitalOpus_MB_Core_MB3_MeshCombinerSizeCheck;
  static_assert(sizeof(MB3_MeshCombiner) == 0x89);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_EVAL_VERSION
// Il2CppName: get_EVAL_VERSION
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_EVAL_VERSION)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_EVAL_VERSION", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_validationLevel
// Il2CppName: get_validationLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::MB2_ValidationLevel (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_validationLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_validationLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_validationLevel
// Il2CppName: set_validationLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::DigitalOpus::MB::Core::MB2_ValidationLevel)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_validationLevel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_ValidationLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_validationLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_name
// Il2CppName: get_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_name
// Il2CppName: set_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::StringW)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_name)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_textureBakeResults
// Il2CppName: get_textureBakeResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::MB2_TextureBakeResults* (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_textureBakeResults)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_textureBakeResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_textureBakeResults
// Il2CppName: set_textureBakeResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::GlobalNamespace::MB2_TextureBakeResults*)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_textureBakeResults)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "MB2_TextureBakeResults")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_textureBakeResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_resultSceneObject
// Il2CppName: get_resultSceneObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_resultSceneObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_resultSceneObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_resultSceneObject
// Il2CppName: set_resultSceneObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::UnityEngine::GameObject*)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_resultSceneObject)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_resultSceneObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_targetRenderer
// Il2CppName: get_targetRenderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Renderer* (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_targetRenderer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_targetRenderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_targetRenderer
// Il2CppName: set_targetRenderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::UnityEngine::Renderer*)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_targetRenderer)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Renderer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_targetRenderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_LOG_LEVEL
// Il2CppName: get_LOG_LEVEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::MB2_LogLevel (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_LOG_LEVEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_LOG_LEVEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_LOG_LEVEL
// Il2CppName: set_LOG_LEVEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::DigitalOpus::MB::Core::MB2_LogLevel)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_LOG_LEVEL)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_LogLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_LOG_LEVEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_settings
// Il2CppName: get_settings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::MB_IMeshBakerSettings* (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_settings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_settings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_settingsHolder
// Il2CppName: get_settingsHolder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::MB_IMeshBakerSettingsHolder* (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_settingsHolder)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_settingsHolder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_settingsHolder
// Il2CppName: set_settingsHolder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::DigitalOpus::MB::Core::MB_IMeshBakerSettingsHolder*)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_settingsHolder)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_IMeshBakerSettingsHolder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_settingsHolder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_outputOption
// Il2CppName: get_outputOption
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::MB2_OutputOptions (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_outputOption)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_outputOption", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_outputOption
// Il2CppName: set_outputOption
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::DigitalOpus::MB::Core::MB2_OutputOptions)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_outputOption)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_OutputOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_outputOption", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_renderType
// Il2CppName: get_renderType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::MB_RenderType (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_renderType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_renderType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_renderType
// Il2CppName: set_renderType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::DigitalOpus::MB::Core::MB_RenderType)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_renderType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_RenderType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_renderType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_lightmapOption
// Il2CppName: get_lightmapOption
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::MB2_LightmapOptions (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_lightmapOption)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_lightmapOption", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_lightmapOption
// Il2CppName: set_lightmapOption
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::DigitalOpus::MB::Core::MB2_LightmapOptions)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_lightmapOption)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_LightmapOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_lightmapOption", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_doNorm
// Il2CppName: get_doNorm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_doNorm)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_doNorm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_doNorm
// Il2CppName: set_doNorm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_doNorm)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_doNorm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_doTan
// Il2CppName: get_doTan
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_doTan)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_doTan", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_doTan
// Il2CppName: set_doTan
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_doTan)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_doTan", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_doCol
// Il2CppName: get_doCol
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_doCol)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_doCol", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_doCol
// Il2CppName: set_doCol
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_doCol)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_doCol", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_doUV
// Il2CppName: get_doUV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_doUV)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_doUV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_doUV
// Il2CppName: set_doUV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_doUV)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_doUV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_doUV1
// Il2CppName: get_doUV1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_doUV1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_doUV1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_doUV1
// Il2CppName: set_doUV1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_doUV1)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_doUV1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_doUV3
// Il2CppName: get_doUV3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_doUV3)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_doUV3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_doUV3
// Il2CppName: set_doUV3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_doUV3)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_doUV3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_doUV4
// Il2CppName: get_doUV4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_doUV4)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_doUV4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_doUV4
// Il2CppName: set_doUV4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_doUV4)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_doUV4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_doUV5
// Il2CppName: get_doUV5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_doUV5)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_doUV5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_doUV5
// Il2CppName: set_doUV5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_doUV5)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_doUV5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_doUV6
// Il2CppName: get_doUV6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_doUV6)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_doUV6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_doUV6
// Il2CppName: set_doUV6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_doUV6)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_doUV6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_doUV7
// Il2CppName: get_doUV7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_doUV7)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_doUV7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_doUV7
// Il2CppName: set_doUV7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_doUV7)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_doUV7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_doUV8
// Il2CppName: get_doUV8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_doUV8)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_doUV8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_doUV8
// Il2CppName: set_doUV8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_doUV8)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_doUV8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_doBlendShapes
// Il2CppName: get_doBlendShapes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_doBlendShapes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_doBlendShapes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_doBlendShapes
// Il2CppName: set_doBlendShapes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_doBlendShapes)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_doBlendShapes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_pivotLocationType
// Il2CppName: get_pivotLocationType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::MB_MeshPivotLocation (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_pivotLocationType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_pivotLocationType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_pivotLocationType
// Il2CppName: set_pivotLocationType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::DigitalOpus::MB::Core::MB_MeshPivotLocation)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_pivotLocationType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB_MeshPivotLocation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_pivotLocationType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_pivotLocation
// Il2CppName: get_pivotLocation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_pivotLocation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_pivotLocation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_pivotLocation
// Il2CppName: set_pivotLocation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::UnityEngine::Vector3)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_pivotLocation)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_pivotLocation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_clearBuffersAfterBake
// Il2CppName: get_clearBuffersAfterBake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_clearBuffersAfterBake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_clearBuffersAfterBake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_clearBuffersAfterBake
// Il2CppName: set_clearBuffersAfterBake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_clearBuffersAfterBake)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_clearBuffersAfterBake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_optimizeAfterBake
// Il2CppName: get_optimizeAfterBake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_optimizeAfterBake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_optimizeAfterBake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_optimizeAfterBake
// Il2CppName: set_optimizeAfterBake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_optimizeAfterBake)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_optimizeAfterBake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_uv2UnwrappingParamsHardAngle
// Il2CppName: get_uv2UnwrappingParamsHardAngle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_uv2UnwrappingParamsHardAngle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_uv2UnwrappingParamsHardAngle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_uv2UnwrappingParamsHardAngle
// Il2CppName: set_uv2UnwrappingParamsHardAngle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(float)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_uv2UnwrappingParamsHardAngle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_uv2UnwrappingParamsHardAngle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_uv2UnwrappingParamsPackMargin
// Il2CppName: get_uv2UnwrappingParamsPackMargin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_uv2UnwrappingParamsPackMargin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_uv2UnwrappingParamsPackMargin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_uv2UnwrappingParamsPackMargin
// Il2CppName: set_uv2UnwrappingParamsPackMargin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(float)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_uv2UnwrappingParamsPackMargin)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_uv2UnwrappingParamsPackMargin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_smrNoExtraBonesWhenCombiningMeshRenderers
// Il2CppName: get_smrNoExtraBonesWhenCombiningMeshRenderers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_smrNoExtraBonesWhenCombiningMeshRenderers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_smrNoExtraBonesWhenCombiningMeshRenderers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_smrNoExtraBonesWhenCombiningMeshRenderers
// Il2CppName: set_smrNoExtraBonesWhenCombiningMeshRenderers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_smrNoExtraBonesWhenCombiningMeshRenderers)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_smrNoExtraBonesWhenCombiningMeshRenderers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_smrMergeBlendShapesWithSameNames
// Il2CppName: get_smrMergeBlendShapesWithSameNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_smrMergeBlendShapesWithSameNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_smrMergeBlendShapesWithSameNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_smrMergeBlendShapesWithSameNames
// Il2CppName: set_smrMergeBlendShapesWithSameNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_smrMergeBlendShapesWithSameNames)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_smrMergeBlendShapesWithSameNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::get_assignToMeshCustomizer
// Il2CppName: get_assignToMeshCustomizer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DigitalOpus::MB::Core::IAssignToMeshCustomizer* (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::get_assignToMeshCustomizer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "get_assignToMeshCustomizer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::set_assignToMeshCustomizer
// Il2CppName: set_assignToMeshCustomizer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::DigitalOpus::MB::Core::IAssignToMeshCustomizer*)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::set_assignToMeshCustomizer)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "IAssignToMeshCustomizer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "set_assignToMeshCustomizer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::doUV2
// Il2CppName: doUV2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::doUV2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "doUV2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::GetLightmapIndex
// Il2CppName: GetLightmapIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::GetLightmapIndex)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "GetLightmapIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::ClearBuffers
// Il2CppName: ClearBuffers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::ClearBuffers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "ClearBuffers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::ClearMesh
// Il2CppName: ClearMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::ClearMesh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "ClearMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::ClearMesh
// Il2CppName: ClearMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::ClearMesh)> {
  static const MethodInfo* get() {
    static auto* editorMethods = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_EditorMethodsInterface")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "ClearMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{editorMethods});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::DisposeRuntimeCreated
// Il2CppName: DisposeRuntimeCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::DisposeRuntimeCreated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "DisposeRuntimeCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::DestroyMesh
// Il2CppName: DestroyMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::DestroyMesh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "DestroyMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::DestroyMeshEditor
// Il2CppName: DestroyMeshEditor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::DestroyMeshEditor)> {
  static const MethodInfo* get() {
    static auto* editorMethods = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB2_EditorMethodsInterface")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "DestroyMeshEditor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{editorMethods});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::GetObjectsInCombined
// Il2CppName: GetObjectsInCombined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::GetObjectsInCombined)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "GetObjectsInCombined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::GetNumObjectsInCombined
// Il2CppName: GetNumObjectsInCombined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::GetNumObjectsInCombined)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "GetNumObjectsInCombined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::GetNumVerticesFor
// Il2CppName: GetNumVerticesFor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::UnityEngine::GameObject*)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::GetNumVerticesFor)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "GetNumVerticesFor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::GetNumVerticesFor
// Il2CppName: GetNumVerticesFor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(int)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::GetNumVerticesFor)> {
  static const MethodInfo* get() {
    static auto* instanceID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "GetNumVerticesFor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instanceID});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::BuildSourceBlendShapeToCombinedIndexMap
// Il2CppName: BuildSourceBlendShapeToCombinedIndexMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::DigitalOpus::MB::Core::MB3_MeshCombiner::MBBlendShapeKey*, ::DigitalOpus::MB::Core::MB3_MeshCombiner::MBBlendShapeValue*>* (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::BuildSourceBlendShapeToCombinedIndexMap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "BuildSourceBlendShapeToCombinedIndexMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::Apply)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate*)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::Apply)> {
  static const MethodInfo* get() {
    static auto* uv2GenerationMethod = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_MeshCombiner/GenerateUV2Delegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uv2GenerationMethod});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, ::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate*)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::Apply)> {
  static const MethodInfo* get() {
    static auto* triangles = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* vertices = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* normals = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tangents = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uvs = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv2 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv3 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv4 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv5 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv6 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv7 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv8 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* colors = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bones = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* blendShapeFlag = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv2GenerationMethod = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_MeshCombiner/GenerateUV2Delegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{triangles, vertices, normals, tangents, uvs, uv2, uv3, uv4, uv5, uv6, uv7, uv8, colors, bones, blendShapeFlag, uv2GenerationMethod});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, ::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate*)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::Apply)> {
  static const MethodInfo* get() {
    static auto* triangles = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* vertices = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* normals = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tangents = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uvs = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv2 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv3 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv4 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* colors = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* bones = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* blendShapeFlag = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* uv2GenerationMethod = &::il2cpp_utils::GetClassFromName("DigitalOpus.MB.Core", "MB3_MeshCombiner/GenerateUV2Delegate")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{triangles, vertices, normals, tangents, uvs, uv2, uv3, uv4, colors, bones, blendShapeFlag, uv2GenerationMethod});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateGameObjects
// Il2CppName: UpdateGameObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::ArrayW<::UnityEngine::GameObject*>)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateGameObjects)> {
  static const MethodInfo* get() {
    static auto* gos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "UpdateGameObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gos});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateGameObjects
// Il2CppName: UpdateGameObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::ArrayW<::UnityEngine::GameObject*>, bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateGameObjects)> {
  static const MethodInfo* get() {
    static auto* gos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    static auto* updateBounds = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "UpdateGameObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gos, updateBounds});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateGameObjects
// Il2CppName: UpdateGameObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::ArrayW<::UnityEngine::GameObject*>, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateGameObjects)> {
  static const MethodInfo* get() {
    static auto* gos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    static auto* recalcBounds = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateVertices = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateNormals = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateTangents = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV2 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV3 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV4 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateColors = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateSkinningInfo = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "UpdateGameObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gos, recalcBounds, updateVertices, updateNormals, updateTangents, updateUV, updateUV2, updateUV3, updateUV4, updateColors, updateSkinningInfo});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateGameObjects
// Il2CppName: UpdateGameObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::ArrayW<::UnityEngine::GameObject*>, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateGameObjects)> {
  static const MethodInfo* get() {
    static auto* gos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    static auto* recalcBounds = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateVertices = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateNormals = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateTangents = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV2 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV3 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV4 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV5 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV6 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV7 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateUV8 = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateColors = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* updateSkinningInfo = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "UpdateGameObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gos, recalcBounds, updateVertices, updateNormals, updateTangents, updateUV, updateUV2, updateUV3, updateUV4, updateUV5, updateUV6, updateUV7, updateUV8, updateColors, updateSkinningInfo});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::AddDeleteGameObjects
// Il2CppName: AddDeleteGameObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::ArrayW<::UnityEngine::GameObject*>, ::ArrayW<::UnityEngine::GameObject*>, bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::AddDeleteGameObjects)> {
  static const MethodInfo* get() {
    static auto* gos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    static auto* deleteGOs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    static auto* disableRendererInSource = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "AddDeleteGameObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gos, deleteGOs, disableRendererInSource});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::AddDeleteGameObjectsByID
// Il2CppName: AddDeleteGameObjectsByID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::ArrayW<::UnityEngine::GameObject*>, ::ArrayW<int>, bool)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::AddDeleteGameObjectsByID)> {
  static const MethodInfo* get() {
    static auto* gos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    static auto* deleteGOinstanceIDs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* disableRendererInSource = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "AddDeleteGameObjectsByID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gos, deleteGOinstanceIDs, disableRendererInSource});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::CombinedMeshContains
// Il2CppName: CombinedMeshContains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::UnityEngine::GameObject*)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::CombinedMeshContains)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "CombinedMeshContains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateSkinnedMeshApproximateBounds
// Il2CppName: UpdateSkinnedMeshApproximateBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateSkinnedMeshApproximateBounds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "UpdateSkinnedMeshApproximateBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateSkinnedMeshApproximateBoundsFromBones
// Il2CppName: UpdateSkinnedMeshApproximateBoundsFromBones
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateSkinnedMeshApproximateBoundsFromBones)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "UpdateSkinnedMeshApproximateBoundsFromBones", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::CheckIntegrity
// Il2CppName: CheckIntegrity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::CheckIntegrity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "CheckIntegrity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateSkinnedMeshApproximateBoundsFromBounds
// Il2CppName: UpdateSkinnedMeshApproximateBoundsFromBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateSkinnedMeshApproximateBoundsFromBounds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "UpdateSkinnedMeshApproximateBoundsFromBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateSkinnedMeshApproximateBoundsFromBonesStatic
// Il2CppName: UpdateSkinnedMeshApproximateBoundsFromBonesStatic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::UnityEngine::Transform*>, ::UnityEngine::SkinnedMeshRenderer*)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateSkinnedMeshApproximateBoundsFromBonesStatic)> {
  static const MethodInfo* get() {
    static auto* bs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Transform"), 1)->byval_arg;
    static auto* smr = &::il2cpp_utils::GetClassFromName("UnityEngine", "SkinnedMeshRenderer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "UpdateSkinnedMeshApproximateBoundsFromBonesStatic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bs, smr});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateSkinnedMeshApproximateBoundsFromBoundsStatic
// Il2CppName: UpdateSkinnedMeshApproximateBoundsFromBoundsStatic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*, ::UnityEngine::SkinnedMeshRenderer*)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::UpdateSkinnedMeshApproximateBoundsFromBoundsStatic)> {
  static const MethodInfo* get() {
    static auto* objectsInCombined = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    static auto* smr = &::il2cpp_utils::GetClassFromName("UnityEngine", "SkinnedMeshRenderer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "UpdateSkinnedMeshApproximateBoundsFromBoundsStatic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectsInCombined, smr});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::_CreateTemporaryTextrueBakeResult
// Il2CppName: _CreateTemporaryTextrueBakeResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DigitalOpus::MB::Core::MB3_MeshCombiner::*)(::ArrayW<::UnityEngine::GameObject*>, ::System::Collections::Generic::List_1<::UnityEngine::Material*>*)>(&DigitalOpus::MB::Core::MB3_MeshCombiner::_CreateTemporaryTextrueBakeResult)> {
  static const MethodInfo* get() {
    static auto* gos = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject"), 1)->byval_arg;
    static auto* matsOnTargetRenderer = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Material")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "_CreateTemporaryTextrueBakeResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gos, matsOnTargetRenderer});
  }
};
// Writing MetadataGetter for method: DigitalOpus::MB::Core::MB3_MeshCombiner::GetMaterialsOnTargetRenderer
// Il2CppName: GetMaterialsOnTargetRenderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::UnityEngine::Material*>* (DigitalOpus::MB::Core::MB3_MeshCombiner::*)()>(&DigitalOpus::MB::Core::MB3_MeshCombiner::GetMaterialsOnTargetRenderer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DigitalOpus::MB::Core::MB3_MeshCombiner*), "GetMaterialsOnTargetRenderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
