// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: MasterServer.IMasterServerMessage
#include "MasterServer/IMasterServerMessage.hpp"
// Completed includes
// Type namespace: MasterServer
namespace MasterServer {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: MasterServer.IMasterServerReliableRequest
  // [TokenAttribute] Offset: FFFFFFFF
  class IMasterServerReliableRequest/*, public MasterServer::IMasterServerMessage*/ {
    public:
    // Creating value type constructor for type: IMasterServerReliableRequest
    IMasterServerReliableRequest() noexcept {}
    // Creating interface conversion operator: operator MasterServer::IMasterServerMessage
    operator MasterServer::IMasterServerMessage() noexcept {
      return *reinterpret_cast<MasterServer::IMasterServerMessage*>(this);
    }
    // public System.UInt32 get_requestId()
    // Offset: 0xFFFFFFFF
    uint get_requestId();
    // public MasterServer.IMasterServerReliableRequest WithRequestId(System.UInt32 requestId)
    // Offset: 0xFFFFFFFF
    MasterServer::IMasterServerReliableRequest* WithRequestId(uint requestId);
  }; // MasterServer.IMasterServerReliableRequest
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(MasterServer::IMasterServerReliableRequest*, "MasterServer", "IMasterServerReliableRequest");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MasterServer::IMasterServerReliableRequest::get_requestId
// Il2CppName: get_requestId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (MasterServer::IMasterServerReliableRequest::*)()>(&MasterServer::IMasterServerReliableRequest::get_requestId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MasterServer::IMasterServerReliableRequest*), "get_requestId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MasterServer::IMasterServerReliableRequest::WithRequestId
// Il2CppName: WithRequestId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<MasterServer::IMasterServerReliableRequest* (MasterServer::IMasterServerReliableRequest::*)(uint)>(&MasterServer::IMasterServerReliableRequest::WithRequestId)> {
  static const MethodInfo* get() {
    static auto* requestId = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MasterServer::IMasterServerReliableRequest*), "WithRequestId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requestId});
  }
};
