// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.PropertyAttribute
#include "UnityEngine/PropertyAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: LIV.SDK.Unity
namespace LIV::SDK::Unity {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: LIV.SDK.Unity.HelpAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: EE65A8
  class HelpAttribute : public UnityEngine::PropertyAttribute {
    public:
    // public readonly System.String text
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppString* text;
    // Field size check
    static_assert(sizeof(::Il2CppString*) == 0x8);
    // Creating value type constructor for type: HelpAttribute
    HelpAttribute(::Il2CppString* text_ = {}) noexcept : text{text_} {}
    // Creating conversion operator: operator ::Il2CppString*
    constexpr operator ::Il2CppString*() const noexcept {
      return text;
    }
    // Get instance field reference: public readonly System.String text
    ::Il2CppString*& dyn_text();
    // public System.Void .ctor(System.String text)
    // Offset: 0x262A78C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HelpAttribute* New_ctor(::Il2CppString* text) {
      static auto ___internal__logger = ::Logger::get().WithContext("LIV::SDK::Unity::HelpAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HelpAttribute*, creationType>(text)));
    }
  }; // LIV.SDK.Unity.HelpAttribute
  #pragma pack(pop)
  static check_size<sizeof(HelpAttribute), 16 + sizeof(::Il2CppString*)> __LIV_SDK_Unity_HelpAttributeSizeCheck;
  static_assert(sizeof(HelpAttribute) == 0x18);
}
DEFINE_IL2CPP_ARG_TYPE(LIV::SDK::Unity::HelpAttribute*, "LIV.SDK.Unity", "HelpAttribute");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: LIV::SDK::Unity::HelpAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
