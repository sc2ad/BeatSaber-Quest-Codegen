// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: LitJson
namespace LitJson {
  // Forward declaring type: JsonToken
  struct JsonToken;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::LitJson::JsonToken, "LitJson", "JsonToken");
// Type namespace: LitJson
namespace LitJson {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: LitJson.JsonToken
  // [TokenAttribute] Offset: FFFFFFFF
  struct JsonToken/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: JsonToken
    constexpr JsonToken(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public LitJson.JsonToken None
    static constexpr const int None = 0;
    // Get static field: static public LitJson.JsonToken None
    static ::LitJson::JsonToken _get_None();
    // Set static field: static public LitJson.JsonToken None
    static void _set_None(::LitJson::JsonToken value);
    // static field const value: static public LitJson.JsonToken ObjectStart
    static constexpr const int ObjectStart = 1;
    // Get static field: static public LitJson.JsonToken ObjectStart
    static ::LitJson::JsonToken _get_ObjectStart();
    // Set static field: static public LitJson.JsonToken ObjectStart
    static void _set_ObjectStart(::LitJson::JsonToken value);
    // static field const value: static public LitJson.JsonToken PropertyName
    static constexpr const int PropertyName = 2;
    // Get static field: static public LitJson.JsonToken PropertyName
    static ::LitJson::JsonToken _get_PropertyName();
    // Set static field: static public LitJson.JsonToken PropertyName
    static void _set_PropertyName(::LitJson::JsonToken value);
    // static field const value: static public LitJson.JsonToken ObjectEnd
    static constexpr const int ObjectEnd = 3;
    // Get static field: static public LitJson.JsonToken ObjectEnd
    static ::LitJson::JsonToken _get_ObjectEnd();
    // Set static field: static public LitJson.JsonToken ObjectEnd
    static void _set_ObjectEnd(::LitJson::JsonToken value);
    // static field const value: static public LitJson.JsonToken ArrayStart
    static constexpr const int ArrayStart = 4;
    // Get static field: static public LitJson.JsonToken ArrayStart
    static ::LitJson::JsonToken _get_ArrayStart();
    // Set static field: static public LitJson.JsonToken ArrayStart
    static void _set_ArrayStart(::LitJson::JsonToken value);
    // static field const value: static public LitJson.JsonToken ArrayEnd
    static constexpr const int ArrayEnd = 5;
    // Get static field: static public LitJson.JsonToken ArrayEnd
    static ::LitJson::JsonToken _get_ArrayEnd();
    // Set static field: static public LitJson.JsonToken ArrayEnd
    static void _set_ArrayEnd(::LitJson::JsonToken value);
    // static field const value: static public LitJson.JsonToken Int
    static constexpr const int Int = 6;
    // Get static field: static public LitJson.JsonToken Int
    static ::LitJson::JsonToken _get_Int();
    // Set static field: static public LitJson.JsonToken Int
    static void _set_Int(::LitJson::JsonToken value);
    // static field const value: static public LitJson.JsonToken Long
    static constexpr const int Long = 7;
    // Get static field: static public LitJson.JsonToken Long
    static ::LitJson::JsonToken _get_Long();
    // Set static field: static public LitJson.JsonToken Long
    static void _set_Long(::LitJson::JsonToken value);
    // static field const value: static public LitJson.JsonToken Double
    static constexpr const int Double = 8;
    // Get static field: static public LitJson.JsonToken Double
    static ::LitJson::JsonToken _get_Double();
    // Set static field: static public LitJson.JsonToken Double
    static void _set_Double(::LitJson::JsonToken value);
    // static field const value: static public LitJson.JsonToken String
    static constexpr const int String = 9;
    // Get static field: static public LitJson.JsonToken String
    static ::LitJson::JsonToken _get_String();
    // Set static field: static public LitJson.JsonToken String
    static void _set_String(::LitJson::JsonToken value);
    // static field const value: static public LitJson.JsonToken Boolean
    static constexpr const int Boolean = 10;
    // Get static field: static public LitJson.JsonToken Boolean
    static ::LitJson::JsonToken _get_Boolean();
    // Set static field: static public LitJson.JsonToken Boolean
    static void _set_Boolean(::LitJson::JsonToken value);
    // static field const value: static public LitJson.JsonToken Null
    static constexpr const int Null = 11;
    // Get static field: static public LitJson.JsonToken Null
    static ::LitJson::JsonToken _get_Null();
    // Set static field: static public LitJson.JsonToken Null
    static void _set_Null(::LitJson::JsonToken value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // LitJson.JsonToken
  #pragma pack(pop)
  static check_size<sizeof(JsonToken), 0 + sizeof(int)> __LitJson_JsonTokenSizeCheck;
  static_assert(sizeof(JsonToken) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
