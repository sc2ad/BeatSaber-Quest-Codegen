// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Collections.Specialized.IOrderedDictionary
#include "System/Collections/Specialized/IOrderedDictionary.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LitJson
namespace LitJson {
  // Forward declaring type: JsonType
  struct JsonType;
  // Forward declaring type: JsonWriter
  class JsonWriter;
}
// Completed forward declares
// Type namespace: LitJson
namespace LitJson {
  // Forward declaring type: IJsonWrapper
  class IJsonWrapper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::LitJson::IJsonWrapper);
DEFINE_IL2CPP_ARG_TYPE(::LitJson::IJsonWrapper*, "LitJson", "IJsonWrapper");
// Type namespace: LitJson
namespace LitJson {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: LitJson.IJsonWrapper
  // [TokenAttribute] Offset: FFFFFFFF
  class IJsonWrapper/*, public ::System::Collections::IList, public ::System::Collections::Specialized::IOrderedDictionary*/ {
    public:
    // Creating interface conversion operator: operator ::System::Collections::IList
    operator ::System::Collections::IList() noexcept {
      return *reinterpret_cast<::System::Collections::IList*>(this);
    }
    // Creating interface conversion operator: operator ::System::Collections::Specialized::IOrderedDictionary
    operator ::System::Collections::Specialized::IOrderedDictionary() noexcept {
      return *reinterpret_cast<::System::Collections::Specialized::IOrderedDictionary*>(this);
    }
    // public System.Boolean get_IsArray()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsArray();
    // public System.Boolean get_IsBoolean()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsBoolean();
    // public System.Boolean get_IsDouble()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsDouble();
    // public System.Boolean get_IsInt()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsInt();
    // public System.Boolean get_IsLong()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsLong();
    // public System.Boolean get_IsObject()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsObject();
    // public System.Boolean get_IsString()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsString();
    // public System.Boolean GetBoolean()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool GetBoolean();
    // public System.Double GetDouble()
    // Offset: 0xFFFFFFFFFFFFFFFF
    double GetDouble();
    // public System.Int32 GetInt()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetInt();
    // public LitJson.JsonType GetJsonType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::LitJson::JsonType GetJsonType();
    // public System.Int64 GetLong()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int64_t GetLong();
    // public System.String GetString()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW GetString();
    // public System.Void SetBoolean(System.Boolean val)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetBoolean(bool val);
    // public System.Void SetDouble(System.Double val)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetDouble(double val);
    // public System.Void SetInt(System.Int32 val)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetInt(int val);
    // public System.Void SetJsonType(LitJson.JsonType type)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetJsonType(::LitJson::JsonType type);
    // public System.Void SetLong(System.Int64 val)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetLong(int64_t val);
    // public System.Void SetString(System.String val)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetString(::StringW val);
    // public System.String ToJson()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW ToJson();
    // public System.Void ToJson(LitJson.JsonWriter writer)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ToJson(::LitJson::JsonWriter* writer);
  }; // LitJson.IJsonWrapper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: LitJson::IJsonWrapper::get_IsArray
// Il2CppName: get_IsArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::IJsonWrapper::*)()>(&LitJson::IJsonWrapper::get_IsArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "get_IsArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::get_IsBoolean
// Il2CppName: get_IsBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::IJsonWrapper::*)()>(&LitJson::IJsonWrapper::get_IsBoolean)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "get_IsBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::get_IsDouble
// Il2CppName: get_IsDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::IJsonWrapper::*)()>(&LitJson::IJsonWrapper::get_IsDouble)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "get_IsDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::get_IsInt
// Il2CppName: get_IsInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::IJsonWrapper::*)()>(&LitJson::IJsonWrapper::get_IsInt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "get_IsInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::get_IsLong
// Il2CppName: get_IsLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::IJsonWrapper::*)()>(&LitJson::IJsonWrapper::get_IsLong)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "get_IsLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::get_IsObject
// Il2CppName: get_IsObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::IJsonWrapper::*)()>(&LitJson::IJsonWrapper::get_IsObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "get_IsObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::get_IsString
// Il2CppName: get_IsString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::IJsonWrapper::*)()>(&LitJson::IJsonWrapper::get_IsString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "get_IsString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::GetBoolean
// Il2CppName: GetBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::IJsonWrapper::*)()>(&LitJson::IJsonWrapper::GetBoolean)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "GetBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::GetDouble
// Il2CppName: GetDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (LitJson::IJsonWrapper::*)()>(&LitJson::IJsonWrapper::GetDouble)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "GetDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::GetInt
// Il2CppName: GetInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LitJson::IJsonWrapper::*)()>(&LitJson::IJsonWrapper::GetInt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "GetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::GetJsonType
// Il2CppName: GetJsonType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::JsonType (LitJson::IJsonWrapper::*)()>(&LitJson::IJsonWrapper::GetJsonType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "GetJsonType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::GetLong
// Il2CppName: GetLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (LitJson::IJsonWrapper::*)()>(&LitJson::IJsonWrapper::GetLong)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "GetLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (LitJson::IJsonWrapper::*)()>(&LitJson::IJsonWrapper::GetString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::SetBoolean
// Il2CppName: SetBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::IJsonWrapper::*)(bool)>(&LitJson::IJsonWrapper::SetBoolean)> {
  static const MethodInfo* get() {
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "SetBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{val});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::SetDouble
// Il2CppName: SetDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::IJsonWrapper::*)(double)>(&LitJson::IJsonWrapper::SetDouble)> {
  static const MethodInfo* get() {
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "SetDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{val});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::SetInt
// Il2CppName: SetInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::IJsonWrapper::*)(int)>(&LitJson::IJsonWrapper::SetInt)> {
  static const MethodInfo* get() {
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "SetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{val});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::SetJsonType
// Il2CppName: SetJsonType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::IJsonWrapper::*)(::LitJson::JsonType)>(&LitJson::IJsonWrapper::SetJsonType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("LitJson", "JsonType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "SetJsonType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::SetLong
// Il2CppName: SetLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::IJsonWrapper::*)(int64_t)>(&LitJson::IJsonWrapper::SetLong)> {
  static const MethodInfo* get() {
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "SetLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{val});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::SetString
// Il2CppName: SetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::IJsonWrapper::*)(::StringW)>(&LitJson::IJsonWrapper::SetString)> {
  static const MethodInfo* get() {
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "SetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{val});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (LitJson::IJsonWrapper::*)()>(&LitJson::IJsonWrapper::ToJson)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::IJsonWrapper::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::IJsonWrapper::*)(::LitJson::JsonWriter*)>(&LitJson::IJsonWrapper::ToJson)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::IJsonWrapper*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer});
  }
};
