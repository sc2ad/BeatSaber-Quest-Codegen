// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: LitJson.IJsonWrapper
#include "LitJson/IJsonWrapper.hpp"
// Including type: LitJson.JsonType
#include "LitJson/JsonType.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: ICollection because it is already included!
  // Forward declaring type: IDictionaryEnumerator
  class IDictionaryEnumerator;
  // Forward declaring type: IEnumerator
  class IEnumerator;
  // Skipping declaration: IDictionary because it is already included!
  // Skipping declaration: IList because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
}
// Forward declaring namespace: LitJson
namespace LitJson {
  // Forward declaring type: JsonWriter
  class JsonWriter;
}
// Completed forward declares
// Type namespace: LitJson
namespace LitJson {
  // Forward declaring type: JsonData
  class JsonData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::LitJson::JsonData);
DEFINE_IL2CPP_ARG_TYPE(::LitJson::JsonData*, "LitJson", "JsonData");
// Type namespace: LitJson
namespace LitJson {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: LitJson.JsonData
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 992ED0
  class JsonData : public ::Il2CppObject/*, public ::System::IEquatable_1<::LitJson::JsonData*>, public ::LitJson::IJsonWrapper*/ {
    public:
    public:
    // private System.Collections.Generic.IList`1<LitJson.JsonData> inst_array
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::IList_1<::LitJson::JsonData*>* inst_array;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IList_1<::LitJson::JsonData*>*) == 0x8);
    // private System.Boolean inst_boolean
    // Size: 0x1
    // Offset: 0x18
    bool inst_boolean;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: inst_boolean and: inst_double
    char __padding1[0x7] = {};
    // private System.Double inst_double
    // Size: 0x8
    // Offset: 0x20
    double inst_double;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // private System.Int32 inst_int
    // Size: 0x4
    // Offset: 0x28
    int inst_int;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: inst_int and: inst_long
    char __padding3[0x4] = {};
    // private System.Int64 inst_long
    // Size: 0x8
    // Offset: 0x30
    int64_t inst_long;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // private System.Collections.Generic.IDictionary`2<System.String,LitJson.JsonData> inst_object
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::IDictionary_2<::StringW, ::LitJson::JsonData*>* inst_object;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IDictionary_2<::StringW, ::LitJson::JsonData*>*) == 0x8);
    // private System.String inst_string
    // Size: 0x8
    // Offset: 0x40
    ::StringW inst_string;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String json
    // Size: 0x8
    // Offset: 0x48
    ::StringW json;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private LitJson.JsonType type
    // Size: 0x4
    // Offset: 0x50
    ::LitJson::JsonType type;
    // Field size check
    static_assert(sizeof(::LitJson::JsonType) == 0x4);
    // Padding between fields: type and: object_list
    char __padding8[0x4] = {};
    // private System.Collections.Generic.IList`1<System.Collections.Generic.KeyValuePair`2<System.String,LitJson.JsonData>> object_list
    // Size: 0x8
    // Offset: 0x58
    ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::LitJson::JsonData*>>* object_list;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::LitJson::JsonData*>>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::IEquatable_1<::LitJson::JsonData*>
    operator ::System::IEquatable_1<::LitJson::JsonData*>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::LitJson::JsonData*>*>(this);
    }
    // Creating interface conversion operator: operator ::LitJson::IJsonWrapper
    operator ::LitJson::IJsonWrapper() noexcept {
      return *reinterpret_cast<::LitJson::IJsonWrapper*>(this);
    }
    // Get instance field reference: private System.Collections.Generic.IList`1<LitJson.JsonData> inst_array
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::LitJson::JsonData*>*& dyn_inst_array();
    // Get instance field reference: private System.Boolean inst_boolean
    [[deprecated("Use field access instead!")]] bool& dyn_inst_boolean();
    // Get instance field reference: private System.Double inst_double
    [[deprecated("Use field access instead!")]] double& dyn_inst_double();
    // Get instance field reference: private System.Int32 inst_int
    [[deprecated("Use field access instead!")]] int& dyn_inst_int();
    // Get instance field reference: private System.Int64 inst_long
    [[deprecated("Use field access instead!")]] int64_t& dyn_inst_long();
    // Get instance field reference: private System.Collections.Generic.IDictionary`2<System.String,LitJson.JsonData> inst_object
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::LitJson::JsonData*>*& dyn_inst_object();
    // Get instance field reference: private System.String inst_string
    [[deprecated("Use field access instead!")]] ::StringW& dyn_inst_string();
    // Get instance field reference: private System.String json
    [[deprecated("Use field access instead!")]] ::StringW& dyn_json();
    // Get instance field reference: private LitJson.JsonType type
    [[deprecated("Use field access instead!")]] ::LitJson::JsonType& dyn_type();
    // Get instance field reference: private System.Collections.Generic.IList`1<System.Collections.Generic.KeyValuePair`2<System.String,LitJson.JsonData>> object_list
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::LitJson::JsonData*>>*& dyn_object_list();
    // public System.Int32 get_Count()
    // Offset: 0xE8C8CC
    int get_Count();
    // public System.Boolean get_IsArray()
    // Offset: 0xE8CA54
    bool get_IsArray();
    // public System.Boolean get_IsBoolean()
    // Offset: 0xE8CA64
    bool get_IsBoolean();
    // public System.Boolean get_IsDouble()
    // Offset: 0xE8CA74
    bool get_IsDouble();
    // public System.Boolean get_IsInt()
    // Offset: 0xE8CA84
    bool get_IsInt();
    // public System.Boolean get_IsLong()
    // Offset: 0xE8CA94
    bool get_IsLong();
    // public System.Boolean get_IsObject()
    // Offset: 0xE8CAA4
    bool get_IsObject();
    // public System.Boolean get_IsString()
    // Offset: 0xE8CAB4
    bool get_IsString();
    // private System.Int32 System.Collections.ICollection.get_Count()
    // Offset: 0xE8CAC4
    int System_Collections_ICollection_get_Count();
    // private System.Boolean System.Collections.ICollection.get_IsSynchronized()
    // Offset: 0xE8CAC8
    bool System_Collections_ICollection_get_IsSynchronized();
    // private System.Object System.Collections.ICollection.get_SyncRoot()
    // Offset: 0xE8CB84
    ::Il2CppObject* System_Collections_ICollection_get_SyncRoot();
    // private System.Boolean System.Collections.IDictionary.get_IsFixedSize()
    // Offset: 0xE8CC40
    bool System_Collections_IDictionary_get_IsFixedSize();
    // private System.Boolean System.Collections.IDictionary.get_IsReadOnly()
    // Offset: 0xE8CE4C
    bool System_Collections_IDictionary_get_IsReadOnly();
    // private System.Collections.ICollection System.Collections.IDictionary.get_Keys()
    // Offset: 0xE8CF08
    ::System::Collections::ICollection* System_Collections_IDictionary_get_Keys();
    // private System.Collections.ICollection System.Collections.IDictionary.get_Values()
    // Offset: 0xE8D248
    ::System::Collections::ICollection* System_Collections_IDictionary_get_Values();
    // private System.Boolean LitJson.IJsonWrapper.get_IsArray()
    // Offset: 0xE8D588
    bool LitJson_IJsonWrapper_get_IsArray();
    // private System.Boolean LitJson.IJsonWrapper.get_IsBoolean()
    // Offset: 0xE8D598
    bool LitJson_IJsonWrapper_get_IsBoolean();
    // private System.Boolean LitJson.IJsonWrapper.get_IsDouble()
    // Offset: 0xE8D5A8
    bool LitJson_IJsonWrapper_get_IsDouble();
    // private System.Boolean LitJson.IJsonWrapper.get_IsInt()
    // Offset: 0xE8D5B8
    bool LitJson_IJsonWrapper_get_IsInt();
    // private System.Boolean LitJson.IJsonWrapper.get_IsLong()
    // Offset: 0xE8D5C8
    bool LitJson_IJsonWrapper_get_IsLong();
    // private System.Boolean LitJson.IJsonWrapper.get_IsObject()
    // Offset: 0xE8D5D8
    bool LitJson_IJsonWrapper_get_IsObject();
    // private System.Boolean LitJson.IJsonWrapper.get_IsString()
    // Offset: 0xE8D5E8
    bool LitJson_IJsonWrapper_get_IsString();
    // private System.Boolean System.Collections.IList.get_IsFixedSize()
    // Offset: 0xE8D5F8
    bool System_Collections_IList_get_IsFixedSize();
    // private System.Boolean System.Collections.IList.get_IsReadOnly()
    // Offset: 0xE8D7D0
    bool System_Collections_IList_get_IsReadOnly();
    // private System.Object System.Collections.IDictionary.get_Item(System.Object key)
    // Offset: 0xE8D88C
    ::Il2CppObject* System_Collections_IDictionary_get_Item(::Il2CppObject* key);
    // private System.Void System.Collections.IDictionary.set_Item(System.Object key, System.Object value)
    // Offset: 0xE8D954
    void System_Collections_IDictionary_set_Item(::Il2CppObject* key, ::Il2CppObject* value);
    // private System.Object System.Collections.Specialized.IOrderedDictionary.get_Item(System.Int32 idx)
    // Offset: 0xE8DE60
    ::Il2CppObject* System_Collections_Specialized_IOrderedDictionary_get_Item(int idx);
    // private System.Void System.Collections.Specialized.IOrderedDictionary.set_Item(System.Int32 idx, System.Object value)
    // Offset: 0xE8DF30
    void System_Collections_Specialized_IOrderedDictionary_set_Item(int idx, ::Il2CppObject* value);
    // private System.Object System.Collections.IList.get_Item(System.Int32 index)
    // Offset: 0xE8E138
    ::Il2CppObject* System_Collections_IList_get_Item(int index);
    // private System.Void System.Collections.IList.set_Item(System.Int32 index, System.Object value)
    // Offset: 0xE8E200
    void System_Collections_IList_set_Item(int index, ::Il2CppObject* value);
    // public LitJson.JsonData get_Item(System.String prop_name)
    // Offset: 0xE8E4D8
    ::LitJson::JsonData* get_Item(::StringW prop_name);
    // public System.Void set_Item(System.String prop_name, LitJson.JsonData value)
    // Offset: 0xE8DAC4
    void set_Item(::StringW prop_name, ::LitJson::JsonData* value);
    // public LitJson.JsonData get_Item(System.Int32 index)
    // Offset: 0xE8E5A0
    ::LitJson::JsonData* get_Item(int index);
    // public System.Void set_Item(System.Int32 index, LitJson.JsonData value)
    // Offset: 0xE8E244
    void set_Item(int index, ::LitJson::JsonData* value);
    // public System.Void .ctor()
    // Offset: 0xE8E6FC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>()));
    }
    // public System.Void .ctor(System.Boolean boolean)
    // Offset: 0xE8E704
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(bool boolean) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(boolean)));
    }
    // public System.Void .ctor(System.Double number)
    // Offset: 0xE8E73C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(double number) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(number)));
    }
    // public System.Void .ctor(System.Int32 number)
    // Offset: 0xE8E778
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(int number) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(number)));
    }
    // public System.Void .ctor(System.Int64 number)
    // Offset: 0xE8E7AC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(int64_t number) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(number)));
    }
    // public System.Void .ctor(System.Object obj)
    // Offset: 0xE8E7E0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(::Il2CppObject* obj) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(obj)));
    }
    // public System.Void .ctor(System.String str)
    // Offset: 0xE8E9C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(::StringW str) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(str)));
    }
    // static public System.Boolean op_Explicit(LitJson.JsonData data)
    // Offset: 0xE8EC24
    explicit operator bool();
    // static public System.Double op_Explicit(LitJson.JsonData data)
    // Offset: 0xE8ECB8
    explicit operator double();
    // static public System.Int32 op_Explicit(LitJson.JsonData data)
    // Offset: 0xE8ED4C
    explicit operator int();
    // static public System.Int64 op_Explicit(LitJson.JsonData data)
    // Offset: 0xE8EDE0
    explicit operator int64_t();
    // static public System.String op_Explicit(LitJson.JsonData data)
    // Offset: 0xE8EE74
    explicit operator ::StringW();
    // private System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)
    // Offset: 0xE8EF08
    void System_Collections_ICollection_CopyTo(::System::Array* array, int index);
    // private System.Void System.Collections.IDictionary.Add(System.Object key, System.Object value)
    // Offset: 0xE8EFD8
    void System_Collections_IDictionary_Add(::Il2CppObject* key, ::Il2CppObject* value);
    // private System.Void System.Collections.IDictionary.Clear()
    // Offset: 0xE8F18C
    void System_Collections_IDictionary_Clear();
    // private System.Boolean System.Collections.IDictionary.Contains(System.Object key)
    // Offset: 0xE8F2C4
    bool System_Collections_IDictionary_Contains(::Il2CppObject* key);
    // private System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
    // Offset: 0xE8F390
    ::System::Collections::IDictionaryEnumerator* System_Collections_IDictionary_GetEnumerator();
    // private System.Void System.Collections.IDictionary.Remove(System.Object key)
    // Offset: 0xE8F438
    void System_Collections_IDictionary_Remove(::Il2CppObject* key);
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0xE8F6BC
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // private System.Boolean LitJson.IJsonWrapper.GetBoolean()
    // Offset: 0xE8F774
    bool LitJson_IJsonWrapper_GetBoolean();
    // private System.Double LitJson.IJsonWrapper.GetDouble()
    // Offset: 0xE8F800
    double LitJson_IJsonWrapper_GetDouble();
    // private System.Int32 LitJson.IJsonWrapper.GetInt()
    // Offset: 0xE8F88C
    int LitJson_IJsonWrapper_GetInt();
    // private System.Int64 LitJson.IJsonWrapper.GetLong()
    // Offset: 0xE8F918
    int64_t LitJson_IJsonWrapper_GetLong();
    // private System.String LitJson.IJsonWrapper.GetString()
    // Offset: 0xE8F9A4
    ::StringW LitJson_IJsonWrapper_GetString();
    // private System.Void LitJson.IJsonWrapper.SetBoolean(System.Boolean val)
    // Offset: 0xE8FA30
    void LitJson_IJsonWrapper_SetBoolean(bool val);
    // private System.Void LitJson.IJsonWrapper.SetDouble(System.Double val)
    // Offset: 0xE8FA48
    void LitJson_IJsonWrapper_SetDouble(double val);
    // private System.Void LitJson.IJsonWrapper.SetInt(System.Int32 val)
    // Offset: 0xE8FA5C
    void LitJson_IJsonWrapper_SetInt(int val);
    // private System.Void LitJson.IJsonWrapper.SetLong(System.Int64 val)
    // Offset: 0xE8FA70
    void LitJson_IJsonWrapper_SetLong(int64_t val);
    // private System.Void LitJson.IJsonWrapper.SetString(System.String val)
    // Offset: 0xE8FA84
    void LitJson_IJsonWrapper_SetString(::StringW val);
    // private System.String LitJson.IJsonWrapper.ToJson()
    // Offset: 0xE8FA94
    ::StringW LitJson_IJsonWrapper_ToJson();
    // private System.Void LitJson.IJsonWrapper.ToJson(LitJson.JsonWriter writer)
    // Offset: 0xE8FB50
    void LitJson_IJsonWrapper_ToJson(::LitJson::JsonWriter* writer);
    // private System.Int32 System.Collections.IList.Add(System.Object value)
    // Offset: 0xE8FB88
    int System_Collections_IList_Add(::Il2CppObject* value);
    // private System.Void System.Collections.IList.Clear()
    // Offset: 0xE8FC68
    void System_Collections_IList_Clear();
    // private System.Boolean System.Collections.IList.Contains(System.Object value)
    // Offset: 0xE8FD2C
    bool System_Collections_IList_Contains(::Il2CppObject* value);
    // private System.Int32 System.Collections.IList.IndexOf(System.Object value)
    // Offset: 0xE8FDF8
    int System_Collections_IList_IndexOf(::Il2CppObject* value);
    // private System.Void System.Collections.IList.Insert(System.Int32 index, System.Object value)
    // Offset: 0xE8FEC4
    void System_Collections_IList_Insert(int index, ::Il2CppObject* value);
    // private System.Void System.Collections.IList.Remove(System.Object value)
    // Offset: 0xE8FFA0
    void System_Collections_IList_Remove(::Il2CppObject* value);
    // private System.Void System.Collections.IList.RemoveAt(System.Int32 index)
    // Offset: 0xE90074
    void System_Collections_IList_RemoveAt(int index);
    // private System.Collections.IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
    // Offset: 0xE90148
    ::System::Collections::IDictionaryEnumerator* System_Collections_Specialized_IOrderedDictionary_GetEnumerator();
    // private System.Void System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32 idx, System.Object key, System.Object value)
    // Offset: 0xE9025C
    void System_Collections_Specialized_IOrderedDictionary_Insert(int idx, ::Il2CppObject* key, ::Il2CppObject* value);
    // private System.Void System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32 idx)
    // Offset: 0xE903A8
    void System_Collections_Specialized_IOrderedDictionary_RemoveAt(int idx);
    // private System.Collections.ICollection EnsureCollection()
    // Offset: 0xE8C988
    ::System::Collections::ICollection* EnsureCollection();
    // private System.Collections.IDictionary EnsureDictionary()
    // Offset: 0xE8CCFC
    ::System::Collections::IDictionary* EnsureDictionary();
    // private System.Collections.IList EnsureList()
    // Offset: 0xE8D6B4
    ::System::Collections::IList* EnsureList();
    // private LitJson.JsonData ToJsonData(System.Object obj)
    // Offset: 0xE8DA28
    ::LitJson::JsonData* ToJsonData(::Il2CppObject* obj);
    // static private System.Void WriteJson(LitJson.IJsonWrapper obj, LitJson.JsonWriter writer)
    // Offset: 0xE90564
    static void WriteJson(::LitJson::IJsonWrapper* obj, ::LitJson::JsonWriter* writer);
    // public System.Int32 Add(System.Object value)
    // Offset: 0xE8FB8C
    int Add(::Il2CppObject* value);
    // public System.Void Clear()
    // Offset: 0xE9197C
    void Clear();
    // public System.Boolean Equals(LitJson.JsonData x)
    // Offset: 0xE91A98
    bool Equals(::LitJson::JsonData* x);
    // public LitJson.JsonType GetJsonType()
    // Offset: 0xE91B84
    ::LitJson::JsonType GetJsonType();
    // public System.Void SetJsonType(LitJson.JsonType type)
    // Offset: 0xE91B8C
    void SetJsonType(::LitJson::JsonType type);
    // public System.String ToJson()
    // Offset: 0xE8FA98
    ::StringW ToJson();
    // public System.Void ToJson(LitJson.JsonWriter writer)
    // Offset: 0xE8FB54
    void ToJson(::LitJson::JsonWriter* writer);
    // public override System.String ToString()
    // Offset: 0xE91D4C
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // LitJson.JsonData
  #pragma pack(pop)
  static check_size<sizeof(JsonData), 88 + sizeof(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::LitJson::JsonData*>>*)> __LitJson_JsonDataSizeCheck;
  static_assert(sizeof(JsonData) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: LitJson::JsonData::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LitJson::JsonData::*)()>(&LitJson::JsonData::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_IsArray
// Il2CppName: get_IsArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::get_IsArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_IsArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_IsBoolean
// Il2CppName: get_IsBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::get_IsBoolean)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_IsBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_IsDouble
// Il2CppName: get_IsDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::get_IsDouble)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_IsDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_IsInt
// Il2CppName: get_IsInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::get_IsInt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_IsInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_IsLong
// Il2CppName: get_IsLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::get_IsLong)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_IsLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_IsObject
// Il2CppName: get_IsObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::get_IsObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_IsObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_IsString
// Il2CppName: get_IsString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::get_IsString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_IsString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_ICollection_get_Count
// Il2CppName: System.Collections.ICollection.get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_ICollection_get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_ICollection_get_IsSynchronized
// Il2CppName: System.Collections.ICollection.get_IsSynchronized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_ICollection_get_IsSynchronized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.ICollection.get_IsSynchronized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_ICollection_get_SyncRoot
// Il2CppName: System.Collections.ICollection.get_SyncRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_ICollection_get_SyncRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_get_IsFixedSize
// Il2CppName: System.Collections.IDictionary.get_IsFixedSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IDictionary_get_IsFixedSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.get_IsFixedSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_get_IsReadOnly
// Il2CppName: System.Collections.IDictionary.get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IDictionary_get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_get_Keys
// Il2CppName: System.Collections.IDictionary.get_Keys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ICollection* (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IDictionary_get_Keys)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.get_Keys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_get_Values
// Il2CppName: System.Collections.IDictionary.get_Values
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ICollection* (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IDictionary_get_Values)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.get_Values", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_get_IsArray
// Il2CppName: LitJson.IJsonWrapper.get_IsArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::LitJson_IJsonWrapper_get_IsArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.get_IsArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_get_IsBoolean
// Il2CppName: LitJson.IJsonWrapper.get_IsBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::LitJson_IJsonWrapper_get_IsBoolean)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.get_IsBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_get_IsDouble
// Il2CppName: LitJson.IJsonWrapper.get_IsDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::LitJson_IJsonWrapper_get_IsDouble)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.get_IsDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_get_IsInt
// Il2CppName: LitJson.IJsonWrapper.get_IsInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::LitJson_IJsonWrapper_get_IsInt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.get_IsInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_get_IsLong
// Il2CppName: LitJson.IJsonWrapper.get_IsLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::LitJson_IJsonWrapper_get_IsLong)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.get_IsLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_get_IsObject
// Il2CppName: LitJson.IJsonWrapper.get_IsObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::LitJson_IJsonWrapper_get_IsObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.get_IsObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_get_IsString
// Il2CppName: LitJson.IJsonWrapper.get_IsString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::LitJson_IJsonWrapper_get_IsString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.get_IsString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_get_IsFixedSize
// Il2CppName: System.Collections.IList.get_IsFixedSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IList_get_IsFixedSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.get_IsFixedSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_get_IsReadOnly
// Il2CppName: System.Collections.IList.get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IList_get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_get_Item
// Il2CppName: System.Collections.IDictionary.get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IDictionary_get_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_set_Item
// Il2CppName: System.Collections.IDictionary.set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::Il2CppObject*, ::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IDictionary_set_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_get_Item
// Il2CppName: System.Collections.Specialized.IOrderedDictionary.get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (LitJson::JsonData::*)(int)>(&LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_get_Item)> {
  static const MethodInfo* get() {
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.Specialized.IOrderedDictionary.get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{idx});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_set_Item
// Il2CppName: System.Collections.Specialized.IOrderedDictionary.set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int, ::Il2CppObject*)>(&LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_set_Item)> {
  static const MethodInfo* get() {
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.Specialized.IOrderedDictionary.set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{idx, value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_get_Item
// Il2CppName: System.Collections.IList.get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (LitJson::JsonData::*)(int)>(&LitJson::JsonData::System_Collections_IList_get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_set_Item
// Il2CppName: System.Collections.IList.set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int, ::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IList_set_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::JsonData* (LitJson::JsonData::*)(::StringW)>(&LitJson::JsonData::get_Item)> {
  static const MethodInfo* get() {
    static auto* prop_name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prop_name});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::StringW, ::LitJson::JsonData*)>(&LitJson::JsonData::set_Item)> {
  static const MethodInfo* get() {
    static auto* prop_name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("LitJson", "JsonData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prop_name, value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::JsonData* (LitJson::JsonData::*)(int)>(&LitJson::JsonData::get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int, ::LitJson::JsonData*)>(&LitJson::JsonData::set_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("LitJson", "JsonData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::operator bool
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::operator double
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::operator int
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::operator int64_t
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::operator ::StringW
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_ICollection_CopyTo
// Il2CppName: System.Collections.ICollection.CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::System::Array*, int)>(&LitJson::JsonData::System_Collections_ICollection_CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, index});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_Add
// Il2CppName: System.Collections.IDictionary.Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::Il2CppObject*, ::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IDictionary_Add)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_Clear
// Il2CppName: System.Collections.IDictionary.Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IDictionary_Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_Contains
// Il2CppName: System.Collections.IDictionary.Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IDictionary_Contains)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_GetEnumerator
// Il2CppName: System.Collections.IDictionary.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IDictionaryEnumerator* (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IDictionary_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_Remove
// Il2CppName: System.Collections.IDictionary.Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IDictionary_Remove)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_GetBoolean
// Il2CppName: LitJson.IJsonWrapper.GetBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::LitJson_IJsonWrapper_GetBoolean)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.GetBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_GetDouble
// Il2CppName: LitJson.IJsonWrapper.GetDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (LitJson::JsonData::*)()>(&LitJson::JsonData::LitJson_IJsonWrapper_GetDouble)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.GetDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_GetInt
// Il2CppName: LitJson.IJsonWrapper.GetInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LitJson::JsonData::*)()>(&LitJson::JsonData::LitJson_IJsonWrapper_GetInt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.GetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_GetLong
// Il2CppName: LitJson.IJsonWrapper.GetLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (LitJson::JsonData::*)()>(&LitJson::JsonData::LitJson_IJsonWrapper_GetLong)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.GetLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_GetString
// Il2CppName: LitJson.IJsonWrapper.GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (LitJson::JsonData::*)()>(&LitJson::JsonData::LitJson_IJsonWrapper_GetString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_SetBoolean
// Il2CppName: LitJson.IJsonWrapper.SetBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(bool)>(&LitJson::JsonData::LitJson_IJsonWrapper_SetBoolean)> {
  static const MethodInfo* get() {
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.SetBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{val});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_SetDouble
// Il2CppName: LitJson.IJsonWrapper.SetDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(double)>(&LitJson::JsonData::LitJson_IJsonWrapper_SetDouble)> {
  static const MethodInfo* get() {
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.SetDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{val});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_SetInt
// Il2CppName: LitJson.IJsonWrapper.SetInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int)>(&LitJson::JsonData::LitJson_IJsonWrapper_SetInt)> {
  static const MethodInfo* get() {
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.SetInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{val});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_SetLong
// Il2CppName: LitJson.IJsonWrapper.SetLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int64_t)>(&LitJson::JsonData::LitJson_IJsonWrapper_SetLong)> {
  static const MethodInfo* get() {
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.SetLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{val});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_SetString
// Il2CppName: LitJson.IJsonWrapper.SetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::StringW)>(&LitJson::JsonData::LitJson_IJsonWrapper_SetString)> {
  static const MethodInfo* get() {
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.SetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{val});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_ToJson
// Il2CppName: LitJson.IJsonWrapper.ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (LitJson::JsonData::*)()>(&LitJson::JsonData::LitJson_IJsonWrapper_ToJson)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_ToJson
// Il2CppName: LitJson.IJsonWrapper.ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::LitJson::JsonWriter*)>(&LitJson::JsonData::LitJson_IJsonWrapper_ToJson)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_Add
// Il2CppName: System.Collections.IList.Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IList_Add)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_Clear
// Il2CppName: System.Collections.IList.Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IList_Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_Contains
// Il2CppName: System.Collections.IList.Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IList_Contains)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_IndexOf
// Il2CppName: System.Collections.IList.IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IList_IndexOf)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_Insert
// Il2CppName: System.Collections.IList.Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int, ::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IList_Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_Remove
// Il2CppName: System.Collections.IList.Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IList_Remove)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_RemoveAt
// Il2CppName: System.Collections.IList.RemoveAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int)>(&LitJson::JsonData::System_Collections_IList_RemoveAt)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.RemoveAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_GetEnumerator
// Il2CppName: System.Collections.Specialized.IOrderedDictionary.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IDictionaryEnumerator* (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.Specialized.IOrderedDictionary.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_Insert
// Il2CppName: System.Collections.Specialized.IOrderedDictionary.Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int, ::Il2CppObject*, ::Il2CppObject*)>(&LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_Insert)> {
  static const MethodInfo* get() {
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.Specialized.IOrderedDictionary.Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{idx, key, value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_RemoveAt
// Il2CppName: System.Collections.Specialized.IOrderedDictionary.RemoveAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int)>(&LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_RemoveAt)> {
  static const MethodInfo* get() {
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.Specialized.IOrderedDictionary.RemoveAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{idx});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::EnsureCollection
// Il2CppName: EnsureCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ICollection* (LitJson::JsonData::*)()>(&LitJson::JsonData::EnsureCollection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "EnsureCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::EnsureDictionary
// Il2CppName: EnsureDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IDictionary* (LitJson::JsonData::*)()>(&LitJson::JsonData::EnsureDictionary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "EnsureDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::EnsureList
// Il2CppName: EnsureList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IList* (LitJson::JsonData::*)()>(&LitJson::JsonData::EnsureList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "EnsureList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::ToJsonData
// Il2CppName: ToJsonData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::JsonData* (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::ToJsonData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "ToJsonData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::WriteJson
// Il2CppName: WriteJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::LitJson::IJsonWrapper*, ::LitJson::JsonWriter*)>(&LitJson::JsonData::WriteJson)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("LitJson", "IJsonWrapper")->byval_arg;
    static auto* writer = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "WriteJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, writer});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::Add)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)()>(&LitJson::JsonData::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)(::LitJson::JsonData*)>(&LitJson::JsonData::Equals)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("LitJson", "JsonData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::GetJsonType
// Il2CppName: GetJsonType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::JsonType (LitJson::JsonData::*)()>(&LitJson::JsonData::GetJsonType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "GetJsonType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::SetJsonType
// Il2CppName: SetJsonType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::LitJson::JsonType)>(&LitJson::JsonData::SetJsonType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("LitJson", "JsonType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "SetJsonType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (LitJson::JsonData::*)()>(&LitJson::JsonData::ToJson)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::LitJson::JsonWriter*)>(&LitJson::JsonData::ToJson)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (LitJson::JsonData::*)()>(&LitJson::JsonData::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
