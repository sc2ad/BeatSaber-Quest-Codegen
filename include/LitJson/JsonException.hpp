// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ApplicationException
#include "System/ApplicationException.hpp"
// Including type: LitJson.ParserToken
#include "LitJson/ParserToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: Exception because it is already included!
}
// Completed forward declares
// Type namespace: LitJson
namespace LitJson {
  // Forward declaring type: JsonException
  class JsonException;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::LitJson::JsonException);
DEFINE_IL2CPP_ARG_TYPE(::LitJson::JsonException*, "LitJson", "JsonException");
// Type namespace: LitJson
namespace LitJson {
  // Size: 0x88
  #pragma pack(push, 1)
  // Autogenerated type: LitJson.JsonException
  // [TokenAttribute] Offset: FFFFFFFF
  class JsonException : public ::System::ApplicationException {
    public:
    // public System.Void .ctor()
    // Offset: 0xE91E2C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonException* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonException*, creationType>()));
    }
    // System.Void .ctor(LitJson.ParserToken token)
    // Offset: 0xE91E34
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonException* New_ctor(::LitJson::ParserToken token) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonException*, creationType>(token)));
    }
    // System.Void .ctor(LitJson.ParserToken token, System.Exception inner_exception)
    // Offset: 0xE91EC4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonException* New_ctor(::LitJson::ParserToken token, ::System::Exception* inner_exception) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonException*, creationType>(token, inner_exception)));
    }
    // System.Void .ctor(System.Int32 c)
    // Offset: 0xE91F64
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonException* New_ctor(int c) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonException*, creationType>(c)));
    }
    // System.Void .ctor(System.Int32 c, System.Exception inner_exception)
    // Offset: 0xE91FF4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonException* New_ctor(int c, ::System::Exception* inner_exception) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonException*, creationType>(c, inner_exception)));
    }
    // public System.Void .ctor(System.String message)
    // Offset: 0xE92094
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonException* New_ctor(::StringW message) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonException*, creationType>(message)));
    }
    // public System.Void .ctor(System.String message, System.Exception inner_exception)
    // Offset: 0xE9209C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonException* New_ctor(::StringW message, ::System::Exception* inner_exception) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonException*, creationType>(message, inner_exception)));
    }
  }; // LitJson.JsonException
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: LitJson::JsonException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
