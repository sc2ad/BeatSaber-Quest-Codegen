// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: LitJson.Lexer
#include "LitJson/Lexer.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LitJson
namespace LitJson {
  // Forward declaring type: FsmContext
  class FsmContext;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::LitJson::Lexer::StateHandler);
DEFINE_IL2CPP_ARG_TYPE(::LitJson::Lexer::StateHandler*, "LitJson", "Lexer/StateHandler");
// Type namespace: LitJson
namespace LitJson {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: LitJson.Lexer/LitJson.StateHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class Lexer::StateHandler : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0xE9CF30
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Lexer::StateHandler* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::StateHandler::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Lexer::StateHandler*, creationType>(object, method)));
    }
    // public System.Boolean Invoke(LitJson.FsmContext ctx)
    // Offset: 0xE9E38C
    bool Invoke(::LitJson::FsmContext* ctx);
    // public System.IAsyncResult BeginInvoke(LitJson.FsmContext ctx, System.AsyncCallback callback, System.Object object)
    // Offset: 0xE9E750
    ::System::IAsyncResult* BeginInvoke(::LitJson::FsmContext* ctx, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public System.Boolean EndInvoke(System.IAsyncResult result)
    // Offset: 0xE9E774
    bool EndInvoke(::System::IAsyncResult* result);
  }; // LitJson.Lexer/LitJson.StateHandler
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: LitJson::Lexer::StateHandler::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::Lexer::StateHandler::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::Lexer::StateHandler::*)(::LitJson::FsmContext*)>(&LitJson::Lexer::StateHandler::Invoke)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("LitJson", "FsmContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::Lexer::StateHandler*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: LitJson::Lexer::StateHandler::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (LitJson::Lexer::StateHandler::*)(::LitJson::FsmContext*, ::System::AsyncCallback*, ::Il2CppObject*)>(&LitJson::Lexer::StateHandler::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("LitJson", "FsmContext")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::Lexer::StateHandler*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx, callback, object});
  }
};
// Writing MetadataGetter for method: LitJson::Lexer::StateHandler::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::Lexer::StateHandler::*)(::System::IAsyncResult*)>(&LitJson::Lexer::StateHandler::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::Lexer::StateHandler*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
