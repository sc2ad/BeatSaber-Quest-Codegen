// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LitJson
namespace LitJson {
  // Forward declaring type: JsonWriter
  class JsonWriter;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: LitJson
namespace LitJson {
  // Forward declaring type: ExporterFunc`1<T>
  template<typename T>
  class ExporterFunc_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::LitJson::ExporterFunc_1, "LitJson", "ExporterFunc`1");
// Type namespace: LitJson
namespace LitJson {
  // WARNING Size may be invalid!
  // Autogenerated type: LitJson.ExporterFunc`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class ExporterFunc_1 : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ExporterFunc_1<T>* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ExporterFunc_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ExporterFunc_1<T>*, creationType>(object, method)));
    }
    // public System.Void Invoke(T obj, LitJson.JsonWriter writer)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Invoke(T obj, ::LitJson::JsonWriter* writer) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ExporterFunc_1::Invoke");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::ExporterFunc_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, writer);
    }
    // public System.IAsyncResult BeginInvoke(T obj, LitJson.JsonWriter writer, System.AsyncCallback callback, System.Object object)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginInvoke(T obj, ::LitJson::JsonWriter* writer, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ExporterFunc_1::BeginInvoke");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::ExporterFunc_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, obj, writer, callback, object);
    }
    // public System.Void EndInvoke(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndInvoke(::System::IAsyncResult* result) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ExporterFunc_1::EndInvoke");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::ExporterFunc_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
    }
  }; // LitJson.ExporterFunc`1
  // Could not write size check! Type: LitJson.ExporterFunc`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
