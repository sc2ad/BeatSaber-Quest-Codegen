// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: LitJson.ArrayMetadata
#include "LitJson/ArrayMetadata.hpp"
// Including type: LitJson.ObjectMetadata
#include "LitJson/ObjectMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LitJson
namespace LitJson {
  // Forward declaring type: ExporterFunc
  class ExporterFunc;
  // Forward declaring type: ImporterFunc
  class ImporterFunc;
  // Forward declaring type: JsonWriter
  class JsonWriter;
  // Forward declaring type: JsonReader
  class JsonReader;
  // Forward declaring type: IJsonWrapper
  class IJsonWrapper;
  // Forward declaring type: WrapperFactory
  class WrapperFactory;
  // Forward declaring type: JsonData
  class JsonData;
  // Forward declaring type: ExporterFunc`1<T>
  template<typename T>
  class ExporterFunc_1;
  // Forward declaring type: ImporterFunc`2<TJson, TValue>
  template<typename TJson, typename TValue>
  class ImporterFunc_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IFormatProvider
  class IFormatProvider;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MethodInfo
  class MethodInfo;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: TextReader
  class TextReader;
}
// Completed forward declares
// Type namespace: LitJson
namespace LitJson {
  // Forward declaring type: JsonMapper
  class JsonMapper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::LitJson::JsonMapper);
DEFINE_IL2CPP_ARG_TYPE(::LitJson::JsonMapper*, "LitJson", "JsonMapper");
// Type namespace: LitJson
namespace LitJson {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: LitJson.JsonMapper
  // [TokenAttribute] Offset: FFFFFFFF
  class JsonMapper : public ::Il2CppObject {
    public:
    // Nested type: ::LitJson::JsonMapper::$$c
    class $$c;
    // Nested type: ::LitJson::JsonMapper::$$c__DisplayClass37_0_1<T>
    template<typename T>
    class $$c__DisplayClass37_0_1;
    // Nested type: ::LitJson::JsonMapper::$$c__DisplayClass38_0_2<TJson, TValue>
    template<typename TJson, typename TValue>
    class $$c__DisplayClass38_0_2;
    // Get static field: static private System.Int32 max_nesting_depth
    static int _get_max_nesting_depth();
    // Set static field: static private System.Int32 max_nesting_depth
    static void _set_max_nesting_depth(int value);
    // Get static field: static private System.IFormatProvider datetime_format
    static ::System::IFormatProvider* _get_datetime_format();
    // Set static field: static private System.IFormatProvider datetime_format
    static void _set_datetime_format(::System::IFormatProvider* value);
    // Get static field: static private System.Collections.Generic.IDictionary`2<System.Type,LitJson.ExporterFunc> base_exporters_table
    static ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ExporterFunc*>* _get_base_exporters_table();
    // Set static field: static private System.Collections.Generic.IDictionary`2<System.Type,LitJson.ExporterFunc> base_exporters_table
    static void _set_base_exporters_table(::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ExporterFunc*>* value);
    // Get static field: static private System.Collections.Generic.IDictionary`2<System.Type,LitJson.ExporterFunc> custom_exporters_table
    static ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ExporterFunc*>* _get_custom_exporters_table();
    // Set static field: static private System.Collections.Generic.IDictionary`2<System.Type,LitJson.ExporterFunc> custom_exporters_table
    static void _set_custom_exporters_table(::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ExporterFunc*>* value);
    // Get static field: static private System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,LitJson.ImporterFunc>> base_importers_table
    static ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>* _get_base_importers_table();
    // Set static field: static private System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,LitJson.ImporterFunc>> base_importers_table
    static void _set_base_importers_table(::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>* value);
    // Get static field: static private System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,LitJson.ImporterFunc>> custom_importers_table
    static ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>* _get_custom_importers_table();
    // Set static field: static private System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,LitJson.ImporterFunc>> custom_importers_table
    static void _set_custom_importers_table(::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>* value);
    // Get static field: static private System.Collections.Generic.IDictionary`2<System.Type,LitJson.ArrayMetadata> array_metadata
    static ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ArrayMetadata>* _get_array_metadata();
    // Set static field: static private System.Collections.Generic.IDictionary`2<System.Type,LitJson.ArrayMetadata> array_metadata
    static void _set_array_metadata(::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ArrayMetadata>* value);
    // Get static field: static private readonly System.Object array_metadata_lock
    static ::Il2CppObject* _get_array_metadata_lock();
    // Set static field: static private readonly System.Object array_metadata_lock
    static void _set_array_metadata_lock(::Il2CppObject* value);
    // Get static field: static private System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,System.Reflection.MethodInfo>> conv_ops
    static ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Reflection::MethodInfo*>*>* _get_conv_ops();
    // Set static field: static private System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,System.Reflection.MethodInfo>> conv_ops
    static void _set_conv_ops(::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Reflection::MethodInfo*>*>* value);
    // Get static field: static private readonly System.Object conv_ops_lock
    static ::Il2CppObject* _get_conv_ops_lock();
    // Set static field: static private readonly System.Object conv_ops_lock
    static void _set_conv_ops_lock(::Il2CppObject* value);
    // Get static field: static private System.Collections.Generic.IDictionary`2<System.Type,LitJson.ObjectMetadata> object_metadata
    static ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ObjectMetadata>* _get_object_metadata();
    // Set static field: static private System.Collections.Generic.IDictionary`2<System.Type,LitJson.ObjectMetadata> object_metadata
    static void _set_object_metadata(::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ObjectMetadata>* value);
    // Get static field: static private readonly System.Object object_metadata_lock
    static ::Il2CppObject* _get_object_metadata_lock();
    // Set static field: static private readonly System.Object object_metadata_lock
    static void _set_object_metadata_lock(::Il2CppObject* value);
    // Get static field: static private System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IList`1<LitJson.PropertyMetadata>> type_properties
    static ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IList_1<::LitJson::PropertyMetadata>*>* _get_type_properties();
    // Set static field: static private System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IList`1<LitJson.PropertyMetadata>> type_properties
    static void _set_type_properties(::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IList_1<::LitJson::PropertyMetadata>*>* value);
    // Get static field: static private readonly System.Object type_properties_lock
    static ::Il2CppObject* _get_type_properties_lock();
    // Set static field: static private readonly System.Object type_properties_lock
    static void _set_type_properties_lock(::Il2CppObject* value);
    // Get static field: static private LitJson.JsonWriter static_writer
    static ::LitJson::JsonWriter* _get_static_writer();
    // Set static field: static private LitJson.JsonWriter static_writer
    static void _set_static_writer(::LitJson::JsonWriter* value);
    // Get static field: static private readonly System.Object static_writer_lock
    static ::Il2CppObject* _get_static_writer_lock();
    // Set static field: static private readonly System.Object static_writer_lock
    static void _set_static_writer_lock(::Il2CppObject* value);
    // static private System.Void .cctor()
    // Offset: 0xE920A4
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0xE997D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonMapper* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonMapper*, creationType>()));
    }
    // static private System.Void AddArrayMetadata(System.Type type)
    // Offset: 0xE93ED4
    static void AddArrayMetadata(::System::Type* type);
    // static private System.Void AddObjectMetadata(System.Type type)
    // Offset: 0xE94378
    static void AddObjectMetadata(::System::Type* type);
    // static private System.Void AddTypeProperties(System.Type type)
    // Offset: 0xE94AC4
    static void AddTypeProperties(::System::Type* type);
    // static private System.Reflection.MethodInfo GetConvOp(System.Type t1, System.Type t2)
    // Offset: 0xE9500C
    static ::System::Reflection::MethodInfo* GetConvOp(::System::Type* t1, ::System::Type* t2);
    // static private System.Object ReadValue(System.Type inst_type, LitJson.JsonReader reader)
    // Offset: 0xE958D4
    static ::Il2CppObject* ReadValue(::System::Type* inst_type, ::LitJson::JsonReader* reader);
    // static private LitJson.IJsonWrapper ReadValue(LitJson.WrapperFactory factory, LitJson.JsonReader reader)
    // Offset: 0xE96D2C
    static ::LitJson::IJsonWrapper* ReadValue(::LitJson::WrapperFactory* factory, ::LitJson::JsonReader* reader);
    // static private System.Void RegisterBaseExporters()
    // Offset: 0xE923FC
    static void RegisterBaseExporters();
    // static private System.Void RegisterBaseImporters()
    // Offset: 0xE93190
    static void RegisterBaseImporters();
    // static private System.Void RegisterImporter(System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,LitJson.ImporterFunc>> table, System.Type json_type, System.Type value_type, LitJson.ImporterFunc importer)
    // Offset: 0xE975D0
    static void RegisterImporter(::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>* table, ::System::Type* json_type, ::System::Type* value_type, ::LitJson::ImporterFunc* importer);
    // static private System.Void WriteValue(System.Object obj, LitJson.JsonWriter writer, System.Boolean writer_is_private, System.Int32 depth)
    // Offset: 0xE97814
    static void WriteValue(::Il2CppObject* obj, ::LitJson::JsonWriter* writer, bool writer_is_private, int depth);
    // static public System.String ToJson(System.Object obj)
    // Offset: 0xE98E10
    static ::StringW ToJson(::Il2CppObject* obj);
    // static public System.Void ToJson(System.Object obj, LitJson.JsonWriter writer)
    // Offset: 0xE9904C
    static void ToJson(::Il2CppObject* obj, ::LitJson::JsonWriter* writer);
    // static public LitJson.JsonData ToObject(LitJson.JsonReader reader)
    // Offset: 0xE990C8
    static ::LitJson::JsonData* ToObject(::LitJson::JsonReader* reader);
    // static public LitJson.JsonData ToObject(System.IO.TextReader reader)
    // Offset: 0xE99284
    static ::LitJson::JsonData* ToObject(::System::IO::TextReader* reader);
    // static public LitJson.JsonData ToObject(System.String json)
    // Offset: 0xE993E4
    static ::LitJson::JsonData* ToObject(::StringW json);
    // static public T ToObject(LitJson.JsonReader reader)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T ToObject(::LitJson::JsonReader* reader) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::ToObject");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "ToObject", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, reader);
    }
    // static public T ToObject(System.IO.TextReader reader)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T ToObject(::System::IO::TextReader* reader) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::ToObject");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "ToObject", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, reader);
    }
    // static public T ToObject(System.String json)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T ToObject(::StringW json) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::ToObject");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "ToObject", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, json);
    }
    // static public LitJson.IJsonWrapper ToWrapper(LitJson.WrapperFactory factory, LitJson.JsonReader reader)
    // Offset: 0xE99210
    static ::LitJson::IJsonWrapper* ToWrapper(::LitJson::WrapperFactory* factory, ::LitJson::JsonReader* reader);
    // static public LitJson.IJsonWrapper ToWrapper(LitJson.WrapperFactory factory, System.String json)
    // Offset: 0xE9951C
    static ::LitJson::IJsonWrapper* ToWrapper(::LitJson::WrapperFactory* factory, ::StringW json);
    // static public System.Void RegisterExporter(LitJson.ExporterFunc`1<T> exporter)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void RegisterExporter(::LitJson::ExporterFunc_1<T>* exporter) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::RegisterExporter");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "RegisterExporter", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exporter)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, exporter);
    }
    // static public System.Void RegisterImporter(LitJson.ImporterFunc`2<TJson,TValue> importer)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TJson, class TValue>
    static void RegisterImporter(::LitJson::ImporterFunc_2<TJson, TValue>* importer) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::RegisterImporter");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "RegisterImporter", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TJson>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(importer)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TJson>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, importer);
    }
    // static public System.Void UnregisterExporters()
    // Offset: 0xE99624
    static void UnregisterExporters();
    // static public System.Void UnregisterImporters()
    // Offset: 0xE996FC
    static void UnregisterImporters();
  }; // LitJson.JsonMapper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: LitJson::JsonMapper::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LitJson::JsonMapper::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonMapper::AddArrayMetadata
// Il2CppName: AddArrayMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Type*)>(&LitJson::JsonMapper::AddArrayMetadata)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "AddArrayMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::AddObjectMetadata
// Il2CppName: AddObjectMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Type*)>(&LitJson::JsonMapper::AddObjectMetadata)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "AddObjectMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::AddTypeProperties
// Il2CppName: AddTypeProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Type*)>(&LitJson::JsonMapper::AddTypeProperties)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "AddTypeProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::GetConvOp
// Il2CppName: GetConvOp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::MethodInfo* (*)(::System::Type*, ::System::Type*)>(&LitJson::JsonMapper::GetConvOp)> {
  static const MethodInfo* get() {
    static auto* t1 = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* t2 = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "GetConvOp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t1, t2});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ReadValue
// Il2CppName: ReadValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Type*, ::LitJson::JsonReader*)>(&LitJson::JsonMapper::ReadValue)> {
  static const MethodInfo* get() {
    static auto* inst_type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* reader = &::il2cpp_utils::GetClassFromName("LitJson", "JsonReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ReadValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inst_type, reader});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ReadValue
// Il2CppName: ReadValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::IJsonWrapper* (*)(::LitJson::WrapperFactory*, ::LitJson::JsonReader*)>(&LitJson::JsonMapper::ReadValue)> {
  static const MethodInfo* get() {
    static auto* factory = &::il2cpp_utils::GetClassFromName("LitJson", "WrapperFactory")->byval_arg;
    static auto* reader = &::il2cpp_utils::GetClassFromName("LitJson", "JsonReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ReadValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{factory, reader});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::RegisterBaseExporters
// Il2CppName: RegisterBaseExporters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LitJson::JsonMapper::RegisterBaseExporters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "RegisterBaseExporters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::RegisterBaseImporters
// Il2CppName: RegisterBaseImporters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LitJson::JsonMapper::RegisterBaseImporters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "RegisterBaseImporters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::RegisterImporter
// Il2CppName: RegisterImporter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>*, ::System::Type*, ::System::Type*, ::LitJson::ImporterFunc*)>(&LitJson::JsonMapper::RegisterImporter)> {
  static const MethodInfo* get() {
    static auto* table = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Type"), ::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Type"), ::il2cpp_utils::GetClassFromName("LitJson", "ImporterFunc")})})->byval_arg;
    static auto* json_type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* value_type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* importer = &::il2cpp_utils::GetClassFromName("LitJson", "ImporterFunc")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "RegisterImporter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{table, json_type, value_type, importer});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::WriteValue
// Il2CppName: WriteValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::LitJson::JsonWriter*, bool, int)>(&LitJson::JsonMapper::WriteValue)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* writer = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    static auto* writer_is_private = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* depth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "WriteValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, writer, writer_is_private, depth});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::Il2CppObject*)>(&LitJson::JsonMapper::ToJson)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::LitJson::JsonWriter*)>(&LitJson::JsonMapper::ToJson)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* writer = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, writer});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ToObject
// Il2CppName: ToObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::JsonData* (*)(::LitJson::JsonReader*)>(&LitJson::JsonMapper::ToObject)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("LitJson", "JsonReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ToObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ToObject
// Il2CppName: ToObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::JsonData* (*)(::System::IO::TextReader*)>(&LitJson::JsonMapper::ToObject)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.IO", "TextReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ToObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ToObject
// Il2CppName: ToObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::JsonData* (*)(::StringW)>(&LitJson::JsonMapper::ToObject)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ToObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ToObject
// Il2CppName: ToObject
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: LitJson::JsonMapper::ToObject
// Il2CppName: ToObject
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: LitJson::JsonMapper::ToObject
// Il2CppName: ToObject
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: LitJson::JsonMapper::ToWrapper
// Il2CppName: ToWrapper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::IJsonWrapper* (*)(::LitJson::WrapperFactory*, ::LitJson::JsonReader*)>(&LitJson::JsonMapper::ToWrapper)> {
  static const MethodInfo* get() {
    static auto* factory = &::il2cpp_utils::GetClassFromName("LitJson", "WrapperFactory")->byval_arg;
    static auto* reader = &::il2cpp_utils::GetClassFromName("LitJson", "JsonReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ToWrapper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{factory, reader});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ToWrapper
// Il2CppName: ToWrapper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::IJsonWrapper* (*)(::LitJson::WrapperFactory*, ::StringW)>(&LitJson::JsonMapper::ToWrapper)> {
  static const MethodInfo* get() {
    static auto* factory = &::il2cpp_utils::GetClassFromName("LitJson", "WrapperFactory")->byval_arg;
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ToWrapper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{factory, json});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::RegisterExporter
// Il2CppName: RegisterExporter
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: LitJson::JsonMapper::RegisterImporter
// Il2CppName: RegisterImporter
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: LitJson::JsonMapper::UnregisterExporters
// Il2CppName: UnregisterExporters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LitJson::JsonMapper::UnregisterExporters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "UnregisterExporters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::UnregisterImporters
// Il2CppName: UnregisterImporters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LitJson::JsonMapper::UnregisterImporters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "UnregisterImporters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
