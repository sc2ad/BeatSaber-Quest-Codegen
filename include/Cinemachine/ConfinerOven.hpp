// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Single
#include "System/Single.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Cinemachine
namespace Cinemachine {
  // Forward declaring type: ShrinkablePolygon
  class ShrinkablePolygon;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: Cinemachine
namespace Cinemachine {
  // Forward declaring type: ConfinerOven
  class ConfinerOven;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cinemachine::ConfinerOven);
DEFINE_IL2CPP_ARG_TYPE(::Cinemachine::ConfinerOven*, "Cinemachine", "ConfinerOven");
// Type namespace: Cinemachine
namespace Cinemachine {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: Cinemachine.ConfinerOven
  // [TokenAttribute] Offset: FFFFFFFF
  class ConfinerOven : public ::Il2CppObject {
    public:
    // Nested type: ::Cinemachine::ConfinerOven::ConfinerState
    class ConfinerState;
    public:
    // private System.Collections.Generic.List`1<Cinemachine.ConfinerOven/Cinemachine.ConfinerState> m_confinerStates
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::Cinemachine::ConfinerOven::ConfinerState*>* m_confinerStates;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Cinemachine::ConfinerOven::ConfinerState*>*) == 0x8);
    // private System.Collections.Generic.List`1<System.Collections.Generic.List`1<Cinemachine.ShrinkablePolygon>> m_shrinkablePolygons
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::Cinemachine::ShrinkablePolygon*>*>* m_shrinkablePolygons;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::Cinemachine::ShrinkablePolygon*>*>*) == 0x8);
    // private System.Single <SqrPolygonDiagonal>k__BackingField
    // Size: 0x4
    // Offset: 0x20
    float SqrPolygonDiagonal;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // static field const value: static System.Single k_MinStepSize
    static constexpr const float k_MinStepSize = 0.005;
    // Get static field: static System.Single k_MinStepSize
    static float _get_k_MinStepSize();
    // Set static field: static System.Single k_MinStepSize
    static void _set_k_MinStepSize(float value);
    // Get static field: static private System.Collections.Generic.List`1<Cinemachine.ShrinkablePolygon> s_subPolygonCache
    static ::System::Collections::Generic::List_1<::Cinemachine::ShrinkablePolygon*>* _get_s_subPolygonCache();
    // Set static field: static private System.Collections.Generic.List`1<Cinemachine.ShrinkablePolygon> s_subPolygonCache
    static void _set_s_subPolygonCache(::System::Collections::Generic::List_1<::Cinemachine::ShrinkablePolygon*>* value);
    // Get instance field reference: private System.Collections.Generic.List`1<Cinemachine.ConfinerOven/Cinemachine.ConfinerState> m_confinerStates
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Cinemachine::ConfinerOven::ConfinerState*>*& dyn_m_confinerStates();
    // Get instance field reference: private System.Collections.Generic.List`1<System.Collections.Generic.List`1<Cinemachine.ShrinkablePolygon>> m_shrinkablePolygons
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::Cinemachine::ShrinkablePolygon*>*>*& dyn_m_shrinkablePolygons();
    // Get instance field reference: private System.Single <SqrPolygonDiagonal>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$SqrPolygonDiagonal$k__BackingField();
    // public System.Single get_SqrPolygonDiagonal()
    // Offset: 0x144B804
    float get_SqrPolygonDiagonal();
    // private System.Void set_SqrPolygonDiagonal(System.Single value)
    // Offset: 0x144B80C
    void set_SqrPolygonDiagonal(float value);
    // public System.Single get_MaxFrustumHeight()
    // Offset: 0x144B814
    float get_MaxFrustumHeight();
    // public System.Void .ctor()
    // Offset: 0x144E3C4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConfinerOven* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::ConfinerOven::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConfinerOven*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x144E434
    static void _cctor();
    // public System.Void BakeConfiner(in System.Collections.Generic.List`1<System.Collections.Generic.List`1<UnityEngine.Vector2>> inputPath, in System.Single aspectRatio, System.Single maxFrustumHeight)
    // Offset: 0x144B8A0
    void BakeConfiner(ByRef<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::UnityEngine::Vector2>*>*> inputPath, ByRef<float> aspectRatio, float maxFrustumHeight);
    // static private UnityEngine.Vector2 PolygonSize(in System.Collections.Generic.List`1<System.Collections.Generic.List`1<UnityEngine.Vector2>> polygons)
    // Offset: 0x144BF3C
    static ::UnityEngine::Vector2 PolygonSize(ByRef<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::UnityEngine::Vector2>*>*> polygons);
    // static public System.Collections.Generic.List`1<System.Collections.Generic.List`1<Cinemachine.ShrinkablePolygon>> CreateShrinkablePolygons(in System.Collections.Generic.List`1<System.Collections.Generic.List`1<UnityEngine.Vector2>> paths)
    // Offset: 0x144C340
    static ::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::Cinemachine::ShrinkablePolygon*>*>* CreateShrinkablePolygons(ByRef<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::UnityEngine::Vector2>*>*> paths);
    // public Cinemachine.ConfinerOven/Cinemachine.ConfinerState GetConfinerAtFrustumHeight(System.Single frustumHeight)
    // Offset: 0x144D6EC
    ::Cinemachine::ConfinerOven::ConfinerState* GetConfinerAtFrustumHeight(float frustumHeight);
    // private Cinemachine.ConfinerOven/Cinemachine.ConfinerState ConfinerStateLerp(in Cinemachine.ConfinerOven/Cinemachine.ConfinerState left, in Cinemachine.ConfinerOven/Cinemachine.ConfinerState right, System.Single frustumHeight)
    // Offset: 0x144D9A0
    ::Cinemachine::ConfinerOven::ConfinerState* ConfinerStateLerp(ByRef<::Cinemachine::ConfinerOven::ConfinerState*> left, ByRef<::Cinemachine::ConfinerOven::ConfinerState*> right, float frustumHeight);
    // public System.Collections.Generic.List`1<Cinemachine.ConfinerOven/Cinemachine.ConfinerState> GetShrinkablePolygonsAsConfinerStates()
    // Offset: 0x144E174
    ::System::Collections::Generic::List_1<::Cinemachine::ConfinerOven::ConfinerState*>* GetShrinkablePolygonsAsConfinerStates();
  }; // Cinemachine.ConfinerOven
  #pragma pack(pop)
  static check_size<sizeof(ConfinerOven), 32 + sizeof(float)> __Cinemachine_ConfinerOvenSizeCheck;
  static_assert(sizeof(ConfinerOven) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cinemachine::ConfinerOven::get_SqrPolygonDiagonal
// Il2CppName: get_SqrPolygonDiagonal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Cinemachine::ConfinerOven::*)()>(&Cinemachine::ConfinerOven::get_SqrPolygonDiagonal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ConfinerOven*), "get_SqrPolygonDiagonal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cinemachine::ConfinerOven::set_SqrPolygonDiagonal
// Il2CppName: set_SqrPolygonDiagonal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cinemachine::ConfinerOven::*)(float)>(&Cinemachine::ConfinerOven::set_SqrPolygonDiagonal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ConfinerOven*), "set_SqrPolygonDiagonal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Cinemachine::ConfinerOven::get_MaxFrustumHeight
// Il2CppName: get_MaxFrustumHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Cinemachine::ConfinerOven::*)()>(&Cinemachine::ConfinerOven::get_MaxFrustumHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ConfinerOven*), "get_MaxFrustumHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cinemachine::ConfinerOven::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Cinemachine::ConfinerOven::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Cinemachine::ConfinerOven::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ConfinerOven*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cinemachine::ConfinerOven::BakeConfiner
// Il2CppName: BakeConfiner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cinemachine::ConfinerOven::*)(ByRef<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::UnityEngine::Vector2>*>*>, ByRef<float>, float)>(&Cinemachine::ConfinerOven::BakeConfiner)> {
  static const MethodInfo* get() {
    static auto* inputPath = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")})})->this_arg;
    static auto* aspectRatio = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    static auto* maxFrustumHeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ConfinerOven*), "BakeConfiner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputPath, aspectRatio, maxFrustumHeight});
  }
};
// Writing MetadataGetter for method: Cinemachine::ConfinerOven::PolygonSize
// Il2CppName: PolygonSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (*)(ByRef<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::UnityEngine::Vector2>*>*>)>(&Cinemachine::ConfinerOven::PolygonSize)> {
  static const MethodInfo* get() {
    static auto* polygons = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")})})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ConfinerOven*), "PolygonSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{polygons});
  }
};
// Writing MetadataGetter for method: Cinemachine::ConfinerOven::CreateShrinkablePolygons
// Il2CppName: CreateShrinkablePolygons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::Cinemachine::ShrinkablePolygon*>*>* (*)(ByRef<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::UnityEngine::Vector2>*>*>)>(&Cinemachine::ConfinerOven::CreateShrinkablePolygons)> {
  static const MethodInfo* get() {
    static auto* paths = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")})})->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ConfinerOven*), "CreateShrinkablePolygons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{paths});
  }
};
// Writing MetadataGetter for method: Cinemachine::ConfinerOven::GetConfinerAtFrustumHeight
// Il2CppName: GetConfinerAtFrustumHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Cinemachine::ConfinerOven::ConfinerState* (Cinemachine::ConfinerOven::*)(float)>(&Cinemachine::ConfinerOven::GetConfinerAtFrustumHeight)> {
  static const MethodInfo* get() {
    static auto* frustumHeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ConfinerOven*), "GetConfinerAtFrustumHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{frustumHeight});
  }
};
// Writing MetadataGetter for method: Cinemachine::ConfinerOven::ConfinerStateLerp
// Il2CppName: ConfinerStateLerp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Cinemachine::ConfinerOven::ConfinerState* (Cinemachine::ConfinerOven::*)(ByRef<::Cinemachine::ConfinerOven::ConfinerState*>, ByRef<::Cinemachine::ConfinerOven::ConfinerState*>, float)>(&Cinemachine::ConfinerOven::ConfinerStateLerp)> {
  static const MethodInfo* get() {
    static auto* left = &::il2cpp_utils::GetClassFromName("Cinemachine", "ConfinerOven/ConfinerState")->this_arg;
    static auto* right = &::il2cpp_utils::GetClassFromName("Cinemachine", "ConfinerOven/ConfinerState")->this_arg;
    static auto* frustumHeight = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ConfinerOven*), "ConfinerStateLerp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{left, right, frustumHeight});
  }
};
// Writing MetadataGetter for method: Cinemachine::ConfinerOven::GetShrinkablePolygonsAsConfinerStates
// Il2CppName: GetShrinkablePolygonsAsConfinerStates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::Cinemachine::ConfinerOven::ConfinerState*>* (Cinemachine::ConfinerOven::*)()>(&Cinemachine::ConfinerOven::GetShrinkablePolygonsAsConfinerStates)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ConfinerOven*), "GetShrinkablePolygonsAsConfinerStates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
