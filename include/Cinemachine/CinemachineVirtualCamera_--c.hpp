// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Cinemachine.CinemachineVirtualCamera
#include "Cinemachine/CinemachineVirtualCamera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Comparison`1<T>
  template<typename T>
  class Comparison_1;
}
// Forward declaring namespace: Cinemachine
namespace Cinemachine {
  // Forward declaring type: CinemachineComponentBase
  class CinemachineComponentBase;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cinemachine::CinemachineVirtualCamera::$$c);
DEFINE_IL2CPP_ARG_TYPE(::Cinemachine::CinemachineVirtualCamera::$$c*, "Cinemachine", "CinemachineVirtualCamera/<>c");
// Type namespace: Cinemachine
namespace Cinemachine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Cinemachine.CinemachineVirtualCamera/Cinemachine.<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class CinemachineVirtualCamera::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly Cinemachine.CinemachineVirtualCamera/Cinemachine.<>c <>9
    static ::Cinemachine::CinemachineVirtualCamera::$$c* _get_$$9();
    // Set static field: static public readonly Cinemachine.CinemachineVirtualCamera/Cinemachine.<>c <>9
    static void _set_$$9(::Cinemachine::CinemachineVirtualCamera::$$c* value);
    // Get static field: static public System.Comparison`1<Cinemachine.CinemachineComponentBase> <>9__41_0
    static ::System::Comparison_1<::Cinemachine::CinemachineComponentBase*>* _get_$$9__41_0();
    // Set static field: static public System.Comparison`1<Cinemachine.CinemachineComponentBase> <>9__41_0
    static void _set_$$9__41_0(::System::Comparison_1<::Cinemachine::CinemachineComponentBase*>* value);
    // static private System.Void .cctor()
    // Offset: 0x144A82C
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x144A890
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CinemachineVirtualCamera::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineVirtualCamera::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CinemachineVirtualCamera::$$c*, creationType>()));
    }
    // System.Int32 <UpdateComponentPipeline>b__41_0(Cinemachine.CinemachineComponentBase c1, Cinemachine.CinemachineComponentBase c2)
    // Offset: 0x144A898
    int $UpdateComponentPipeline$b__41_0(::Cinemachine::CinemachineComponentBase* c1, ::Cinemachine::CinemachineComponentBase* c2);
  }; // Cinemachine.CinemachineVirtualCamera/Cinemachine.<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cinemachine::CinemachineVirtualCamera::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Cinemachine::CinemachineVirtualCamera::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineVirtualCamera::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cinemachine::CinemachineVirtualCamera::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Cinemachine::CinemachineVirtualCamera::$$c::$UpdateComponentPipeline$b__41_0
// Il2CppName: <UpdateComponentPipeline>b__41_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Cinemachine::CinemachineVirtualCamera::$$c::*)(::Cinemachine::CinemachineComponentBase*, ::Cinemachine::CinemachineComponentBase*)>(&Cinemachine::CinemachineVirtualCamera::$$c::$UpdateComponentPipeline$b__41_0)> {
  static const MethodInfo* get() {
    static auto* c1 = &::il2cpp_utils::GetClassFromName("Cinemachine", "CinemachineComponentBase")->byval_arg;
    static auto* c2 = &::il2cpp_utils::GetClassFromName("Cinemachine", "CinemachineComponentBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineVirtualCamera::$$c*), "<UpdateComponentPipeline>b__41_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c1, c2});
  }
};
