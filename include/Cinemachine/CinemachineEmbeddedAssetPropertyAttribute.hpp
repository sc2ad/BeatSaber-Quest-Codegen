// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.PropertyAttribute
#include "UnityEngine/PropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Cinemachine
namespace Cinemachine {
  // Forward declaring type: CinemachineEmbeddedAssetPropertyAttribute
  class CinemachineEmbeddedAssetPropertyAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cinemachine::CinemachineEmbeddedAssetPropertyAttribute);
DEFINE_IL2CPP_ARG_TYPE(::Cinemachine::CinemachineEmbeddedAssetPropertyAttribute*, "Cinemachine", "CinemachineEmbeddedAssetPropertyAttribute");
// Type namespace: Cinemachine
namespace Cinemachine {
  // Size: 0x11
  #pragma pack(push, 1)
  // Autogenerated type: Cinemachine.CinemachineEmbeddedAssetPropertyAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  class CinemachineEmbeddedAssetPropertyAttribute : public ::UnityEngine::PropertyAttribute {
    public:
    public:
    // public System.Boolean WarnIfNull
    // Size: 0x1
    // Offset: 0x10
    bool WarnIfNull;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating conversion operator: operator bool
    constexpr operator bool() const noexcept {
      return WarnIfNull;
    }
    // Get instance field reference: public System.Boolean WarnIfNull
    [[deprecated("Use field access instead!")]] bool& dyn_WarnIfNull();
    // public System.Void .ctor(System.Boolean warnIfNull)
    // Offset: 0x10501FC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CinemachineEmbeddedAssetPropertyAttribute* New_ctor(bool warnIfNull) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineEmbeddedAssetPropertyAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CinemachineEmbeddedAssetPropertyAttribute*, creationType>(warnIfNull)));
    }
  }; // Cinemachine.CinemachineEmbeddedAssetPropertyAttribute
  #pragma pack(pop)
  static check_size<sizeof(CinemachineEmbeddedAssetPropertyAttribute), 16 + sizeof(bool)> __Cinemachine_CinemachineEmbeddedAssetPropertyAttributeSizeCheck;
  static_assert(sizeof(CinemachineEmbeddedAssetPropertyAttribute) == 0x11);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cinemachine::CinemachineEmbeddedAssetPropertyAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
