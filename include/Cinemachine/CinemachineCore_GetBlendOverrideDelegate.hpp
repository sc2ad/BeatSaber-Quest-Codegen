// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Cinemachine.CinemachineCore
#include "Cinemachine/CinemachineCore.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Cinemachine
namespace Cinemachine {
  // Forward declaring type: CinemachineBlendDefinition
  struct CinemachineBlendDefinition;
  // Forward declaring type: ICinemachineCamera
  class ICinemachineCamera;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: MonoBehaviour
  class MonoBehaviour;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cinemachine::CinemachineCore::GetBlendOverrideDelegate);
DEFINE_IL2CPP_ARG_TYPE(::Cinemachine::CinemachineCore::GetBlendOverrideDelegate*, "Cinemachine", "CinemachineCore/GetBlendOverrideDelegate");
// Type namespace: Cinemachine
namespace Cinemachine {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: Cinemachine.CinemachineCore/Cinemachine.GetBlendOverrideDelegate
  // [TokenAttribute] Offset: FFFFFFFF
  class CinemachineCore::GetBlendOverrideDelegate : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x104F9C0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CinemachineCore::GetBlendOverrideDelegate* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineCore::GetBlendOverrideDelegate::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CinemachineCore::GetBlendOverrideDelegate*, creationType>(object, method)));
    }
    // public Cinemachine.CinemachineBlendDefinition Invoke(Cinemachine.ICinemachineCamera fromVcam, Cinemachine.ICinemachineCamera toVcam, Cinemachine.CinemachineBlendDefinition defaultBlend, UnityEngine.MonoBehaviour owner)
    // Offset: 0x104F9D0
    ::Cinemachine::CinemachineBlendDefinition Invoke(::Cinemachine::ICinemachineCamera* fromVcam, ::Cinemachine::ICinemachineCamera* toVcam, ::Cinemachine::CinemachineBlendDefinition defaultBlend, ::UnityEngine::MonoBehaviour* owner);
    // public System.IAsyncResult BeginInvoke(Cinemachine.ICinemachineCamera fromVcam, Cinemachine.ICinemachineCamera toVcam, Cinemachine.CinemachineBlendDefinition defaultBlend, UnityEngine.MonoBehaviour owner, System.AsyncCallback callback, System.Object object)
    // Offset: 0x104FE48
    ::System::IAsyncResult* BeginInvoke(::Cinemachine::ICinemachineCamera* fromVcam, ::Cinemachine::ICinemachineCamera* toVcam, ::Cinemachine::CinemachineBlendDefinition defaultBlend, ::UnityEngine::MonoBehaviour* owner, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public Cinemachine.CinemachineBlendDefinition EndInvoke(System.IAsyncResult result)
    // Offset: 0x104FEF4
    ::Cinemachine::CinemachineBlendDefinition EndInvoke(::System::IAsyncResult* result);
  }; // Cinemachine.CinemachineCore/Cinemachine.GetBlendOverrideDelegate
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cinemachine::CinemachineCore::GetBlendOverrideDelegate::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Cinemachine::CinemachineCore::GetBlendOverrideDelegate::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Cinemachine::CinemachineBlendDefinition (Cinemachine::CinemachineCore::GetBlendOverrideDelegate::*)(::Cinemachine::ICinemachineCamera*, ::Cinemachine::ICinemachineCamera*, ::Cinemachine::CinemachineBlendDefinition, ::UnityEngine::MonoBehaviour*)>(&Cinemachine::CinemachineCore::GetBlendOverrideDelegate::Invoke)> {
  static const MethodInfo* get() {
    static auto* fromVcam = &::il2cpp_utils::GetClassFromName("Cinemachine", "ICinemachineCamera")->byval_arg;
    static auto* toVcam = &::il2cpp_utils::GetClassFromName("Cinemachine", "ICinemachineCamera")->byval_arg;
    static auto* defaultBlend = &::il2cpp_utils::GetClassFromName("Cinemachine", "CinemachineBlendDefinition")->byval_arg;
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine", "MonoBehaviour")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineCore::GetBlendOverrideDelegate*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fromVcam, toVcam, defaultBlend, owner});
  }
};
// Writing MetadataGetter for method: Cinemachine::CinemachineCore::GetBlendOverrideDelegate::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (Cinemachine::CinemachineCore::GetBlendOverrideDelegate::*)(::Cinemachine::ICinemachineCamera*, ::Cinemachine::ICinemachineCamera*, ::Cinemachine::CinemachineBlendDefinition, ::UnityEngine::MonoBehaviour*, ::System::AsyncCallback*, ::Il2CppObject*)>(&Cinemachine::CinemachineCore::GetBlendOverrideDelegate::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* fromVcam = &::il2cpp_utils::GetClassFromName("Cinemachine", "ICinemachineCamera")->byval_arg;
    static auto* toVcam = &::il2cpp_utils::GetClassFromName("Cinemachine", "ICinemachineCamera")->byval_arg;
    static auto* defaultBlend = &::il2cpp_utils::GetClassFromName("Cinemachine", "CinemachineBlendDefinition")->byval_arg;
    static auto* owner = &::il2cpp_utils::GetClassFromName("UnityEngine", "MonoBehaviour")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineCore::GetBlendOverrideDelegate*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fromVcam, toVcam, defaultBlend, owner, callback, object});
  }
};
// Writing MetadataGetter for method: Cinemachine::CinemachineCore::GetBlendOverrideDelegate::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Cinemachine::CinemachineBlendDefinition (Cinemachine::CinemachineCore::GetBlendOverrideDelegate::*)(::System::IAsyncResult*)>(&Cinemachine::CinemachineCore::GetBlendOverrideDelegate::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineCore::GetBlendOverrideDelegate*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
