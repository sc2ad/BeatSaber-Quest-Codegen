// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Bounds
  struct Bounds;
  // Forward declaring type: BoundingSphere
  struct BoundingSphere;
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
  // Forward declaring type: Vector2
  struct Vector2;
}
// Completed forward declares
// Type namespace: Cinemachine
namespace Cinemachine {
  // Forward declaring type: ICinemachineTargetGroup
  class ICinemachineTargetGroup;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cinemachine::ICinemachineTargetGroup);
DEFINE_IL2CPP_ARG_TYPE(::Cinemachine::ICinemachineTargetGroup*, "Cinemachine", "ICinemachineTargetGroup");
// Type namespace: Cinemachine
namespace Cinemachine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Cinemachine.ICinemachineTargetGroup
  // [TokenAttribute] Offset: FFFFFFFF
  class ICinemachineTargetGroup {
    public:
    // public UnityEngine.Transform get_Transform()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Transform* get_Transform();
    // public UnityEngine.Bounds get_BoundingBox()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Bounds get_BoundingBox();
    // public UnityEngine.BoundingSphere get_Sphere()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::BoundingSphere get_Sphere();
    // public System.Boolean get_IsEmpty()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsEmpty();
    // public UnityEngine.Bounds GetViewSpaceBoundingBox(UnityEngine.Matrix4x4 observer)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::Bounds GetViewSpaceBoundingBox(::UnityEngine::Matrix4x4 observer);
    // public System.Void GetViewSpaceAngularBounds(UnityEngine.Matrix4x4 observer, out UnityEngine.Vector2 minAngles, out UnityEngine.Vector2 maxAngles, out UnityEngine.Vector2 zRange)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void GetViewSpaceAngularBounds(::UnityEngine::Matrix4x4 observer, ByRef<::UnityEngine::Vector2> minAngles, ByRef<::UnityEngine::Vector2> maxAngles, ByRef<::UnityEngine::Vector2> zRange);
  }; // Cinemachine.ICinemachineTargetGroup
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cinemachine::ICinemachineTargetGroup::get_Transform
// Il2CppName: get_Transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Cinemachine::ICinemachineTargetGroup::*)()>(&Cinemachine::ICinemachineTargetGroup::get_Transform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ICinemachineTargetGroup*), "get_Transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cinemachine::ICinemachineTargetGroup::get_BoundingBox
// Il2CppName: get_BoundingBox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Bounds (Cinemachine::ICinemachineTargetGroup::*)()>(&Cinemachine::ICinemachineTargetGroup::get_BoundingBox)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ICinemachineTargetGroup*), "get_BoundingBox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cinemachine::ICinemachineTargetGroup::get_Sphere
// Il2CppName: get_Sphere
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::BoundingSphere (Cinemachine::ICinemachineTargetGroup::*)()>(&Cinemachine::ICinemachineTargetGroup::get_Sphere)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ICinemachineTargetGroup*), "get_Sphere", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cinemachine::ICinemachineTargetGroup::get_IsEmpty
// Il2CppName: get_IsEmpty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Cinemachine::ICinemachineTargetGroup::*)()>(&Cinemachine::ICinemachineTargetGroup::get_IsEmpty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ICinemachineTargetGroup*), "get_IsEmpty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cinemachine::ICinemachineTargetGroup::GetViewSpaceBoundingBox
// Il2CppName: GetViewSpaceBoundingBox
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Bounds (Cinemachine::ICinemachineTargetGroup::*)(::UnityEngine::Matrix4x4)>(&Cinemachine::ICinemachineTargetGroup::GetViewSpaceBoundingBox)> {
  static const MethodInfo* get() {
    static auto* observer = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ICinemachineTargetGroup*), "GetViewSpaceBoundingBox", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{observer});
  }
};
// Writing MetadataGetter for method: Cinemachine::ICinemachineTargetGroup::GetViewSpaceAngularBounds
// Il2CppName: GetViewSpaceAngularBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cinemachine::ICinemachineTargetGroup::*)(::UnityEngine::Matrix4x4, ByRef<::UnityEngine::Vector2>, ByRef<::UnityEngine::Vector2>, ByRef<::UnityEngine::Vector2>)>(&Cinemachine::ICinemachineTargetGroup::GetViewSpaceAngularBounds)> {
  static const MethodInfo* get() {
    static auto* observer = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    static auto* minAngles = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    static auto* maxAngles = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    static auto* zRange = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::ICinemachineTargetGroup*), "GetViewSpaceAngularBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{observer, minAngles, maxAngles, zRange});
  }
};
