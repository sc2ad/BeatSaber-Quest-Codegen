// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: Cinemachine.ISignalSource6D
#include "Cinemachine/ISignalSource6D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
  // Skipping declaration: Quaternion because it is already included!
}
// Completed forward declares
// Type namespace: Cinemachine
namespace Cinemachine {
  // Forward declaring type: SignalSourceAsset
  class SignalSourceAsset;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cinemachine::SignalSourceAsset);
DEFINE_IL2CPP_ARG_TYPE(::Cinemachine::SignalSourceAsset*, "Cinemachine", "SignalSourceAsset");
// Type namespace: Cinemachine
namespace Cinemachine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Cinemachine.SignalSourceAsset
  // [TokenAttribute] Offset: FFFFFFFF
  // [DocumentationSortingAttribute] Offset: 987524
  class SignalSourceAsset : public ::UnityEngine::ScriptableObject/*, public ::Cinemachine::ISignalSource6D*/ {
    public:
    // Creating interface conversion operator: operator ::Cinemachine::ISignalSource6D
    operator ::Cinemachine::ISignalSource6D() noexcept {
      return *reinterpret_cast<::Cinemachine::ISignalSource6D*>(this);
    }
    // public System.Single get_SignalDuration()
    // Offset: 0xFFFFFFFFFFFFFFFF
    float get_SignalDuration();
    // protected System.Void .ctor()
    // Offset: 0x144F0F4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SignalSourceAsset* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::SignalSourceAsset::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SignalSourceAsset*, creationType>()));
    }
    // public System.Void GetSignal(System.Single timeSinceSignalStart, out UnityEngine.Vector3 pos, out UnityEngine.Quaternion rot)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void GetSignal(float timeSinceSignalStart, ByRef<::UnityEngine::Vector3> pos, ByRef<::UnityEngine::Quaternion> rot);
  }; // Cinemachine.SignalSourceAsset
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cinemachine::SignalSourceAsset::get_SignalDuration
// Il2CppName: get_SignalDuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Cinemachine::SignalSourceAsset::*)()>(&Cinemachine::SignalSourceAsset::get_SignalDuration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::SignalSourceAsset*), "get_SignalDuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cinemachine::SignalSourceAsset::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Cinemachine::SignalSourceAsset::GetSignal
// Il2CppName: GetSignal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cinemachine::SignalSourceAsset::*)(float, ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Quaternion>)>(&Cinemachine::SignalSourceAsset::GetSignal)> {
  static const MethodInfo* get() {
    static auto* timeSinceSignalStart = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* rot = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::SignalSourceAsset*), "GetSignal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{timeSinceSignalStart, pos, rot});
  }
};
