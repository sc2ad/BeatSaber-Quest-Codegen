// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Cinemachine.CinemachineImpulseSource
#include "Cinemachine/CinemachineImpulseSource.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Forward declaring type: Rigidbody2D
  class Rigidbody2D;
  // Forward declaring type: Collision
  class Collision;
  // Forward declaring type: Collider
  class Collider;
  // Skipping declaration: Vector3 because it is already included!
  // Forward declaring type: Collision2D
  class Collision2D;
  // Forward declaring type: Collider2D
  class Collider2D;
}
// Completed forward declares
// Type namespace: Cinemachine
namespace Cinemachine {
  // Forward declaring type: CinemachineCollisionImpulseSource
  class CinemachineCollisionImpulseSource;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cinemachine::CinemachineCollisionImpulseSource);
DEFINE_IL2CPP_ARG_TYPE(::Cinemachine::CinemachineCollisionImpulseSource*, "Cinemachine", "CinemachineCollisionImpulseSource");
// Type namespace: Cinemachine
namespace Cinemachine {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: Cinemachine.CinemachineCollisionImpulseSource
  // [TokenAttribute] Offset: FFFFFFFF
  // [DocumentationSortingAttribute] Offset: 98767C
  // [SaveDuringPlayAttribute] Offset: FFFFFFFF
  // [HelpURLAttribute] Offset: 98767C
  class CinemachineCollisionImpulseSource : public ::Cinemachine::CinemachineImpulseSource {
    public:
    public:
    // [HeaderAttribute] Offset: 0x98D054
    // [TooltipAttribute] Offset: 0x98D054
    // public UnityEngine.LayerMask m_LayerMask
    // Size: 0x4
    // Offset: 0x20
    ::UnityEngine::LayerMask m_LayerMask;
    // Field size check
    static_assert(sizeof(::UnityEngine::LayerMask) == 0x4);
    // Padding between fields: m_LayerMask and: m_IgnoreTag
    char __padding0[0x4] = {};
    // [TagFieldAttribute] Offset: 0x98D0B4
    // [TooltipAttribute] Offset: 0x98D0B4
    // public System.String m_IgnoreTag
    // Size: 0x8
    // Offset: 0x28
    ::StringW m_IgnoreTag;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [HeaderAttribute] Offset: 0x98D100
    // [TooltipAttribute] Offset: 0x98D100
    // public System.Boolean m_UseImpactDirection
    // Size: 0x1
    // Offset: 0x30
    bool m_UseImpactDirection;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [TooltipAttribute] Offset: 0x98D160
    // public System.Boolean m_ScaleImpactWithMass
    // Size: 0x1
    // Offset: 0x31
    bool m_ScaleImpactWithMass;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [TooltipAttribute] Offset: 0x98D198
    // public System.Boolean m_ScaleImpactWithSpeed
    // Size: 0x1
    // Offset: 0x32
    bool m_ScaleImpactWithSpeed;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_ScaleImpactWithSpeed and: mRigidBody
    char __padding4[0x5] = {};
    // private UnityEngine.Rigidbody mRigidBody
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Rigidbody* mRigidBody;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // private UnityEngine.Rigidbody2D mRigidBody2D
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Rigidbody2D* mRigidBody2D;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody2D*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.LayerMask m_LayerMask
    [[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& dyn_m_LayerMask();
    // Get instance field reference: public System.String m_IgnoreTag
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_IgnoreTag();
    // Get instance field reference: public System.Boolean m_UseImpactDirection
    [[deprecated("Use field access instead!")]] bool& dyn_m_UseImpactDirection();
    // Get instance field reference: public System.Boolean m_ScaleImpactWithMass
    [[deprecated("Use field access instead!")]] bool& dyn_m_ScaleImpactWithMass();
    // Get instance field reference: public System.Boolean m_ScaleImpactWithSpeed
    [[deprecated("Use field access instead!")]] bool& dyn_m_ScaleImpactWithSpeed();
    // Get instance field reference: private UnityEngine.Rigidbody mRigidBody
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn_mRigidBody();
    // Get instance field reference: private UnityEngine.Rigidbody2D mRigidBody2D
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody2D*& dyn_mRigidBody2D();
    // private System.Void Start()
    // Offset: 0x140CDA8
    void Start();
    // private System.Void OnEnable()
    // Offset: 0x140CE18
    void OnEnable();
    // private System.Void OnCollisionEnter(UnityEngine.Collision c)
    // Offset: 0x140CE1C
    void OnCollisionEnter(::UnityEngine::Collision* c);
    // private System.Void OnTriggerEnter(UnityEngine.Collider c)
    // Offset: 0x140D08C
    void OnTriggerEnter(::UnityEngine::Collider* c);
    // private System.Single GetMassAndVelocity(UnityEngine.Collider other, ref UnityEngine.Vector3 vel)
    // Offset: 0x140D108
    float GetMassAndVelocity(::UnityEngine::Collider* other, ByRef<::UnityEngine::Vector3> vel);
    // private System.Void GenerateImpactEvent(UnityEngine.Collider other, UnityEngine.Vector3 vel)
    // Offset: 0x140CE70
    void GenerateImpactEvent(::UnityEngine::Collider* other, ::UnityEngine::Vector3 vel);
    // private System.Void OnCollisionEnter2D(UnityEngine.Collision2D c)
    // Offset: 0x140D3B4
    void OnCollisionEnter2D(::UnityEngine::Collision2D* c);
    // private System.Void OnTriggerEnter2D(UnityEngine.Collider2D c)
    // Offset: 0x140D688
    void OnTriggerEnter2D(::UnityEngine::Collider2D* c);
    // private System.Single GetMassAndVelocity2D(UnityEngine.Collider2D other2d, ref UnityEngine.Vector3 vel)
    // Offset: 0x140D704
    float GetMassAndVelocity2D(::UnityEngine::Collider2D* other2d, ByRef<::UnityEngine::Vector3> vel);
    // private System.Void GenerateImpactEvent2D(UnityEngine.Collider2D other2d, UnityEngine.Vector3 vel)
    // Offset: 0x140D46C
    void GenerateImpactEvent2D(::UnityEngine::Collider2D* other2d, ::UnityEngine::Vector3 vel);
    // public System.Void .ctor()
    // Offset: 0x140D9F0
    // Implemented from: Cinemachine.CinemachineImpulseSource
    // Base method: System.Void CinemachineImpulseSource::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CinemachineCollisionImpulseSource* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::CinemachineCollisionImpulseSource::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CinemachineCollisionImpulseSource*, creationType>()));
    }
  }; // Cinemachine.CinemachineCollisionImpulseSource
  #pragma pack(pop)
  static check_size<sizeof(CinemachineCollisionImpulseSource), 64 + sizeof(::UnityEngine::Rigidbody2D*)> __Cinemachine_CinemachineCollisionImpulseSourceSizeCheck;
  static_assert(sizeof(CinemachineCollisionImpulseSource) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cinemachine::CinemachineCollisionImpulseSource::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cinemachine::CinemachineCollisionImpulseSource::*)()>(&Cinemachine::CinemachineCollisionImpulseSource::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineCollisionImpulseSource*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cinemachine::CinemachineCollisionImpulseSource::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cinemachine::CinemachineCollisionImpulseSource::*)()>(&Cinemachine::CinemachineCollisionImpulseSource::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineCollisionImpulseSource*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cinemachine::CinemachineCollisionImpulseSource::OnCollisionEnter
// Il2CppName: OnCollisionEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cinemachine::CinemachineCollisionImpulseSource::*)(::UnityEngine::Collision*)>(&Cinemachine::CinemachineCollisionImpulseSource::OnCollisionEnter)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collision")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineCollisionImpulseSource*), "OnCollisionEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: Cinemachine::CinemachineCollisionImpulseSource::OnTriggerEnter
// Il2CppName: OnTriggerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cinemachine::CinemachineCollisionImpulseSource::*)(::UnityEngine::Collider*)>(&Cinemachine::CinemachineCollisionImpulseSource::OnTriggerEnter)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineCollisionImpulseSource*), "OnTriggerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: Cinemachine::CinemachineCollisionImpulseSource::GetMassAndVelocity
// Il2CppName: GetMassAndVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Cinemachine::CinemachineCollisionImpulseSource::*)(::UnityEngine::Collider*, ByRef<::UnityEngine::Vector3>)>(&Cinemachine::CinemachineCollisionImpulseSource::GetMassAndVelocity)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    static auto* vel = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineCollisionImpulseSource*), "GetMassAndVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other, vel});
  }
};
// Writing MetadataGetter for method: Cinemachine::CinemachineCollisionImpulseSource::GenerateImpactEvent
// Il2CppName: GenerateImpactEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cinemachine::CinemachineCollisionImpulseSource::*)(::UnityEngine::Collider*, ::UnityEngine::Vector3)>(&Cinemachine::CinemachineCollisionImpulseSource::GenerateImpactEvent)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    static auto* vel = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineCollisionImpulseSource*), "GenerateImpactEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other, vel});
  }
};
// Writing MetadataGetter for method: Cinemachine::CinemachineCollisionImpulseSource::OnCollisionEnter2D
// Il2CppName: OnCollisionEnter2D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cinemachine::CinemachineCollisionImpulseSource::*)(::UnityEngine::Collision2D*)>(&Cinemachine::CinemachineCollisionImpulseSource::OnCollisionEnter2D)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collision2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineCollisionImpulseSource*), "OnCollisionEnter2D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: Cinemachine::CinemachineCollisionImpulseSource::OnTriggerEnter2D
// Il2CppName: OnTriggerEnter2D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cinemachine::CinemachineCollisionImpulseSource::*)(::UnityEngine::Collider2D*)>(&Cinemachine::CinemachineCollisionImpulseSource::OnTriggerEnter2D)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineCollisionImpulseSource*), "OnTriggerEnter2D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: Cinemachine::CinemachineCollisionImpulseSource::GetMassAndVelocity2D
// Il2CppName: GetMassAndVelocity2D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Cinemachine::CinemachineCollisionImpulseSource::*)(::UnityEngine::Collider2D*, ByRef<::UnityEngine::Vector3>)>(&Cinemachine::CinemachineCollisionImpulseSource::GetMassAndVelocity2D)> {
  static const MethodInfo* get() {
    static auto* other2d = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider2D")->byval_arg;
    static auto* vel = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineCollisionImpulseSource*), "GetMassAndVelocity2D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other2d, vel});
  }
};
// Writing MetadataGetter for method: Cinemachine::CinemachineCollisionImpulseSource::GenerateImpactEvent2D
// Il2CppName: GenerateImpactEvent2D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Cinemachine::CinemachineCollisionImpulseSource::*)(::UnityEngine::Collider2D*, ::UnityEngine::Vector3)>(&Cinemachine::CinemachineCollisionImpulseSource::GenerateImpactEvent2D)> {
  static const MethodInfo* get() {
    static auto* other2d = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider2D")->byval_arg;
    static auto* vel = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::CinemachineCollisionImpulseSource*), "GenerateImpactEvent2D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other2d, vel});
  }
};
// Writing MetadataGetter for method: Cinemachine::CinemachineCollisionImpulseSource::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
