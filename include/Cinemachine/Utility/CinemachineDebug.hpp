// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Cinemachine::Utility
namespace Cinemachine::Utility {
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
  // Forward declaring type: Rect
  struct Rect;
  // Forward declaring type: GUIStyle
  class GUIStyle;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: Cinemachine.Utility
namespace Cinemachine::Utility {
  // Forward declaring type: CinemachineDebug
  class CinemachineDebug;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Cinemachine::Utility::CinemachineDebug);
DEFINE_IL2CPP_ARG_TYPE(::Cinemachine::Utility::CinemachineDebug*, "Cinemachine.Utility", "CinemachineDebug");
// Type namespace: Cinemachine.Utility
namespace Cinemachine::Utility {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Cinemachine.Utility.CinemachineDebug
  // [TokenAttribute] Offset: FFFFFFFF
  class CinemachineDebug : public ::Il2CppObject {
    public:
    // Nested type: ::Cinemachine::Utility::CinemachineDebug::OnGUIDelegate
    class OnGUIDelegate;
    // Get static field: static private System.Collections.Generic.HashSet`1<UnityEngine.Object> mClients
    static ::System::Collections::Generic::HashSet_1<::UnityEngine::Object*>* _get_mClients();
    // Set static field: static private System.Collections.Generic.HashSet`1<UnityEngine.Object> mClients
    static void _set_mClients(::System::Collections::Generic::HashSet_1<::UnityEngine::Object*>* value);
    // Get static field: static public Cinemachine.Utility.CinemachineDebug/Cinemachine.Utility.OnGUIDelegate OnGUIHandlers
    static ::Cinemachine::Utility::CinemachineDebug::OnGUIDelegate* _get_OnGUIHandlers();
    // Set static field: static public Cinemachine.Utility.CinemachineDebug/Cinemachine.Utility.OnGUIDelegate OnGUIHandlers
    static void _set_OnGUIHandlers(::Cinemachine::Utility::CinemachineDebug::OnGUIDelegate* value);
    // Get static field: static private System.Collections.Generic.List`1<System.Text.StringBuilder> mAvailableStringBuilders
    static ::System::Collections::Generic::List_1<::System::Text::StringBuilder*>* _get_mAvailableStringBuilders();
    // Set static field: static private System.Collections.Generic.List`1<System.Text.StringBuilder> mAvailableStringBuilders
    static void _set_mAvailableStringBuilders(::System::Collections::Generic::List_1<::System::Text::StringBuilder*>* value);
    // public System.Void .ctor()
    // Offset: 0x1B9DA18
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CinemachineDebug* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Cinemachine::Utility::CinemachineDebug::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CinemachineDebug*, creationType>()));
    }
    // static public System.Void ReleaseScreenPos(UnityEngine.Object client)
    // Offset: 0x1B9D5B4
    static void ReleaseScreenPos(::UnityEngine::Object* client);
    // static public UnityEngine.Rect GetScreenPos(UnityEngine.Object client, System.String text, UnityEngine.GUIStyle style)
    // Offset: 0x1B9D654
    static ::UnityEngine::Rect GetScreenPos(::UnityEngine::Object* client, ::StringW text, ::UnityEngine::GUIStyle* style);
    // static public System.Text.StringBuilder SBFromPool()
    // Offset: 0x1B9D8B0
    static ::System::Text::StringBuilder* SBFromPool();
    // static public System.Void ReturnToPool(System.Text.StringBuilder sb)
    // Offset: 0x1B9D968
    static void ReturnToPool(::System::Text::StringBuilder* sb);
  }; // Cinemachine.Utility.CinemachineDebug
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Cinemachine::Utility::CinemachineDebug::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Cinemachine::Utility::CinemachineDebug::ReleaseScreenPos
// Il2CppName: ReleaseScreenPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Object*)>(&Cinemachine::Utility::CinemachineDebug::ReleaseScreenPos)> {
  static const MethodInfo* get() {
    static auto* client = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::Utility::CinemachineDebug*), "ReleaseScreenPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{client});
  }
};
// Writing MetadataGetter for method: Cinemachine::Utility::CinemachineDebug::GetScreenPos
// Il2CppName: GetScreenPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Rect (*)(::UnityEngine::Object*, ::StringW, ::UnityEngine::GUIStyle*)>(&Cinemachine::Utility::CinemachineDebug::GetScreenPos)> {
  static const MethodInfo* get() {
    static auto* client = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("UnityEngine", "GUIStyle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::Utility::CinemachineDebug*), "GetScreenPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{client, text, style});
  }
};
// Writing MetadataGetter for method: Cinemachine::Utility::CinemachineDebug::SBFromPool
// Il2CppName: SBFromPool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (*)()>(&Cinemachine::Utility::CinemachineDebug::SBFromPool)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::Utility::CinemachineDebug*), "SBFromPool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Cinemachine::Utility::CinemachineDebug::ReturnToPool
// Il2CppName: ReturnToPool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Text::StringBuilder*)>(&Cinemachine::Utility::CinemachineDebug::ReturnToPool)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Cinemachine::Utility::CinemachineDebug*), "ReturnToPool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb});
  }
};
