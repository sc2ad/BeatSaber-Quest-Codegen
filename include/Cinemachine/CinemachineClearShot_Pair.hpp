// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Cinemachine.CinemachineClearShot
#include "Cinemachine/CinemachineClearShot.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Cinemachine::CinemachineClearShot::Pair, "Cinemachine", "CinemachineClearShot/Pair");
// Type namespace: Cinemachine
namespace Cinemachine {
  // Size: 0x8
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Cinemachine.CinemachineClearShot/Cinemachine.Pair
  // [TokenAttribute] Offset: FFFFFFFF
  struct CinemachineClearShot::Pair/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Int32 a
    // Size: 0x4
    // Offset: 0x0
    int a;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Single b
    // Size: 0x4
    // Offset: 0x4
    float b;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating value type constructor for type: Pair
    constexpr Pair(int a_ = {}, float b_ = {}) noexcept : a{a_}, b{b_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Int32 a
    [[deprecated("Use field access instead!")]] int& dyn_a();
    // Get instance field reference: public System.Single b
    [[deprecated("Use field access instead!")]] float& dyn_b();
  }; // Cinemachine.CinemachineClearShot/Cinemachine.Pair
  #pragma pack(pop)
  static check_size<sizeof(CinemachineClearShot::Pair), 4 + sizeof(float)> __Cinemachine_CinemachineClearShot_PairSizeCheck;
  static_assert(sizeof(CinemachineClearShot::Pair) == 0x8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
