// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: UnityEngineInternal
namespace UnityEngineInternal {
  // Forward declaring type: LightmapType
  struct LightmapType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngineInternal::LightmapType, "UnityEngineInternal", "LightmapType");
// Type namespace: UnityEngineInternal
namespace UnityEngineInternal {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngineInternal.LightmapType
  // [TokenAttribute] Offset: FFFFFFFF
  struct LightmapType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: LightmapType
    constexpr LightmapType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public UnityEngineInternal.LightmapType NoLightmap
    static constexpr const int NoLightmap = -1;
    // Get static field: static public UnityEngineInternal.LightmapType NoLightmap
    static ::UnityEngineInternal::LightmapType _get_NoLightmap();
    // Set static field: static public UnityEngineInternal.LightmapType NoLightmap
    static void _set_NoLightmap(::UnityEngineInternal::LightmapType value);
    // static field const value: static public UnityEngineInternal.LightmapType StaticLightmap
    static constexpr const int StaticLightmap = 0;
    // Get static field: static public UnityEngineInternal.LightmapType StaticLightmap
    static ::UnityEngineInternal::LightmapType _get_StaticLightmap();
    // Set static field: static public UnityEngineInternal.LightmapType StaticLightmap
    static void _set_StaticLightmap(::UnityEngineInternal::LightmapType value);
    // static field const value: static public UnityEngineInternal.LightmapType DynamicLightmap
    static constexpr const int DynamicLightmap = 1;
    // Get static field: static public UnityEngineInternal.LightmapType DynamicLightmap
    static ::UnityEngineInternal::LightmapType _get_DynamicLightmap();
    // Set static field: static public UnityEngineInternal.LightmapType DynamicLightmap
    static void _set_DynamicLightmap(::UnityEngineInternal::LightmapType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // UnityEngineInternal.LightmapType
  #pragma pack(pop)
  static check_size<sizeof(LightmapType), 0 + sizeof(int)> __UnityEngineInternal_LightmapTypeSizeCheck;
  static_assert(sizeof(LightmapType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
