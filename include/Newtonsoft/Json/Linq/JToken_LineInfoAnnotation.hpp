// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.Linq.JToken
#include "Newtonsoft/Json/Linq/JToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Linq::JToken::LineInfoAnnotation);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Linq::JToken::LineInfoAnnotation*, "Newtonsoft.Json.Linq", "JToken/LineInfoAnnotation");
// Type namespace: Newtonsoft.Json.Linq
namespace Newtonsoft::Json::Linq {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.Linq.JToken/Newtonsoft.Json.Linq.LineInfoAnnotation
  // [TokenAttribute] Offset: FFFFFFFF
  class JToken::LineInfoAnnotation : public ::Il2CppObject {
    public:
    public:
    // readonly System.Int32 LineNumber
    // Size: 0x4
    // Offset: 0x10
    int LineNumber;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // readonly System.Int32 LinePosition
    // Size: 0x4
    // Offset: 0x14
    int LinePosition;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: readonly System.Int32 LineNumber
    [[deprecated("Use field access instead!")]] int& dyn_LineNumber();
    // Get instance field reference: readonly System.Int32 LinePosition
    [[deprecated("Use field access instead!")]] int& dyn_LinePosition();
    // public System.Void .ctor(System.Int32 lineNumber, System.Int32 linePosition)
    // Offset: 0x17A6358
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JToken::LineInfoAnnotation* New_ctor(int lineNumber, int linePosition) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JToken::LineInfoAnnotation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JToken::LineInfoAnnotation*, creationType>(lineNumber, linePosition)));
    }
  }; // Newtonsoft.Json.Linq.JToken/Newtonsoft.Json.Linq.LineInfoAnnotation
  #pragma pack(pop)
  static check_size<sizeof(JToken::LineInfoAnnotation), 20 + sizeof(int)> __Newtonsoft_Json_Linq_JToken_LineInfoAnnotationSizeCheck;
  static_assert(sizeof(JToken::LineInfoAnnotation) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Linq::JToken::LineInfoAnnotation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
