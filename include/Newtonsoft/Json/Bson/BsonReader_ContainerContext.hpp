// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.Bson.BsonReader
#include "Newtonsoft/Json/Bson/BsonReader.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Bson::BsonReader::ContainerContext);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Bson::BsonReader::ContainerContext*, "Newtonsoft.Json.Bson", "BsonReader/ContainerContext");
// Type namespace: Newtonsoft.Json.Bson
namespace Newtonsoft::Json::Bson {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.ContainerContext
  // [TokenAttribute] Offset: FFFFFFFF
  class BsonReader::ContainerContext : public ::Il2CppObject {
    public:
    public:
    // public readonly Newtonsoft.Json.Bson.BsonType Type
    // Size: 0x1
    // Offset: 0x10
    ::Newtonsoft::Json::Bson::BsonType Type;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Bson::BsonType) == 0x1);
    // Padding between fields: Type and: Length
    char __padding0[0x3] = {};
    // public System.Int32 Length
    // Size: 0x4
    // Offset: 0x14
    int Length;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 Position
    // Size: 0x4
    // Offset: 0x18
    int Position;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public readonly Newtonsoft.Json.Bson.BsonType Type
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonType& dyn_Type();
    // Get instance field reference: public System.Int32 Length
    [[deprecated("Use field access instead!")]] int& dyn_Length();
    // Get instance field reference: public System.Int32 Position
    [[deprecated("Use field access instead!")]] int& dyn_Position();
    // public System.Void .ctor(Newtonsoft.Json.Bson.BsonType type)
    // Offset: 0x17B92DC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BsonReader::ContainerContext* New_ctor(::Newtonsoft::Json::Bson::BsonType type) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ContainerContext::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BsonReader::ContainerContext*, creationType>(type)));
    }
  }; // Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.ContainerContext
  #pragma pack(pop)
  static check_size<sizeof(BsonReader::ContainerContext), 24 + sizeof(int)> __Newtonsoft_Json_Bson_BsonReader_ContainerContextSizeCheck;
  static_assert(sizeof(BsonReader::ContainerContext) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Bson::BsonReader::ContainerContext::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
