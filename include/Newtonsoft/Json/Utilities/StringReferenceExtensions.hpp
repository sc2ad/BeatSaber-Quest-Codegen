// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Newtonsoft::Json::Utilities
namespace Newtonsoft::Json::Utilities {
  // Forward declaring type: StringReference
  struct StringReference;
}
// Completed forward declares
// Type namespace: Newtonsoft.Json.Utilities
namespace Newtonsoft::Json::Utilities {
  // Forward declaring type: StringReferenceExtensions
  class StringReferenceExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Utilities::StringReferenceExtensions);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Utilities::StringReferenceExtensions*, "Newtonsoft.Json.Utilities", "StringReferenceExtensions");
// Type namespace: Newtonsoft.Json.Utilities
namespace Newtonsoft::Json::Utilities {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.Utilities.StringReferenceExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: 10BA0C0
  // [ExtensionAttribute] Offset: FFFFFFFF
  class StringReferenceExtensions : public ::Il2CppObject {
    public:
    // static public System.Int32 IndexOf(Newtonsoft.Json.Utilities.StringReference s, System.Char c, System.Int32 startIndex, System.Int32 length)
    // Offset: 0x209613C
    static int IndexOf(::Newtonsoft::Json::Utilities::StringReference s, ::Il2CppChar c, int startIndex, int length);
    // static public System.Boolean StartsWith(Newtonsoft.Json.Utilities.StringReference s, System.String text)
    // Offset: 0x2095208
    static bool StartsWith(::Newtonsoft::Json::Utilities::StringReference s, ::StringW text);
    // static public System.Boolean EndsWith(Newtonsoft.Json.Utilities.StringReference s, System.String text)
    // Offset: 0x20952CC
    static bool EndsWith(::Newtonsoft::Json::Utilities::StringReference s, ::StringW text);
  }; // Newtonsoft.Json.Utilities.StringReferenceExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Utilities::StringReferenceExtensions::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Newtonsoft::Json::Utilities::StringReference, ::Il2CppChar, int, int)>(&Newtonsoft::Json::Utilities::StringReferenceExtensions::IndexOf)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Utilities", "StringReference")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Utilities::StringReferenceExtensions*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, c, startIndex, length});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Utilities::StringReferenceExtensions::StartsWith
// Il2CppName: StartsWith
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Newtonsoft::Json::Utilities::StringReference, ::StringW)>(&Newtonsoft::Json::Utilities::StringReferenceExtensions::StartsWith)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Utilities", "StringReference")->byval_arg;
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Utilities::StringReferenceExtensions*), "StartsWith", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, text});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Utilities::StringReferenceExtensions::EndsWith
// Il2CppName: EndsWith
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Newtonsoft::Json::Utilities::StringReference, ::StringW)>(&Newtonsoft::Json::Utilities::StringReferenceExtensions::EndsWith)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Utilities", "StringReference")->byval_arg;
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Utilities::StringReferenceExtensions*), "EndsWith", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, text});
  }
};
