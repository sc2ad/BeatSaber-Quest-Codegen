// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Newtonsoft::Json
namespace Newtonsoft::Json {
  // Forward declaring type: JsonToken
  struct JsonToken;
}
// Completed forward declares
// Type namespace: Newtonsoft.Json.Utilities
namespace Newtonsoft::Json::Utilities {
  // Forward declaring type: JsonTokenUtils
  class JsonTokenUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Utilities::JsonTokenUtils);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Utilities::JsonTokenUtils*, "Newtonsoft.Json.Utilities", "JsonTokenUtils");
// Type namespace: Newtonsoft.Json.Utilities
namespace Newtonsoft::Json::Utilities {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.Utilities.JsonTokenUtils
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: 10FAB5C
  class JsonTokenUtils : public ::Il2CppObject {
    public:
    // static System.Boolean IsEndToken(Newtonsoft.Json.JsonToken token)
    // Offset: 0x2155048
    static bool IsEndToken(::Newtonsoft::Json::JsonToken token);
    // static System.Boolean IsStartToken(Newtonsoft.Json.JsonToken token)
    // Offset: 0x2155058
    static bool IsStartToken(::Newtonsoft::Json::JsonToken token);
    // static System.Boolean IsPrimitiveToken(Newtonsoft.Json.JsonToken token)
    // Offset: 0x2155068
    static bool IsPrimitiveToken(::Newtonsoft::Json::JsonToken token);
  }; // Newtonsoft.Json.Utilities.JsonTokenUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Utilities::JsonTokenUtils::IsEndToken
// Il2CppName: IsEndToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Newtonsoft::Json::JsonToken)>(&Newtonsoft::Json::Utilities::JsonTokenUtils::IsEndToken)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Utilities::JsonTokenUtils*), "IsEndToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Utilities::JsonTokenUtils::IsStartToken
// Il2CppName: IsStartToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Newtonsoft::Json::JsonToken)>(&Newtonsoft::Json::Utilities::JsonTokenUtils::IsStartToken)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Utilities::JsonTokenUtils*), "IsStartToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Utilities::JsonTokenUtils::IsPrimitiveToken
// Il2CppName: IsPrimitiveToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Newtonsoft::Json::JsonToken)>(&Newtonsoft::Json::Utilities::JsonTokenUtils::IsPrimitiveToken)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Utilities::JsonTokenUtils*), "IsPrimitiveToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
