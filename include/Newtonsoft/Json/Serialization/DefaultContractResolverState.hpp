// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.Serialization.ResolverContractKey
#include "Newtonsoft/Json/Serialization/ResolverContractKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: Newtonsoft::Json::Serialization
namespace Newtonsoft::Json::Serialization {
  // Forward declaring type: JsonContract
  class JsonContract;
}
// Forward declaring namespace: Newtonsoft::Json::Utilities
namespace Newtonsoft::Json::Utilities {
  // Forward declaring type: PropertyNameTable
  class PropertyNameTable;
}
// Completed forward declares
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // Forward declaring type: DefaultContractResolverState
  class DefaultContractResolverState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Serialization::DefaultContractResolverState);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Serialization::DefaultContractResolverState*, "Newtonsoft.Json.Serialization", "DefaultContractResolverState");
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.Serialization.DefaultContractResolverState
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: FFFFFFFF
  class DefaultContractResolverState : public ::Il2CppObject {
    public:
    public:
    // public System.Collections.Generic.Dictionary`2<Newtonsoft.Json.Serialization.ResolverContractKey,Newtonsoft.Json.Serialization.JsonContract> ContractCache
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::Dictionary_2<::Newtonsoft::Json::Serialization::ResolverContractKey, ::Newtonsoft::Json::Serialization::JsonContract*>* ContractCache;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::Newtonsoft::Json::Serialization::ResolverContractKey, ::Newtonsoft::Json::Serialization::JsonContract*>*) == 0x8);
    // public Newtonsoft.Json.Utilities.PropertyNameTable NameTable
    // Size: 0x8
    // Offset: 0x18
    ::Newtonsoft::Json::Utilities::PropertyNameTable* NameTable;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Utilities::PropertyNameTable*) == 0x8);
    public:
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<Newtonsoft.Json.Serialization.ResolverContractKey,Newtonsoft.Json.Serialization.JsonContract> ContractCache
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Newtonsoft::Json::Serialization::ResolverContractKey, ::Newtonsoft::Json::Serialization::JsonContract*>*& dyn_ContractCache();
    // Get instance field reference: public Newtonsoft.Json.Utilities.PropertyNameTable NameTable
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::PropertyNameTable*& dyn_NameTable();
    // public System.Void .ctor()
    // Offset: 0x1D5FC98
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DefaultContractResolverState* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolverState::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DefaultContractResolverState*, creationType>()));
    }
  }; // Newtonsoft.Json.Serialization.DefaultContractResolverState
  #pragma pack(pop)
  static check_size<sizeof(DefaultContractResolverState), 24 + sizeof(::Newtonsoft::Json::Utilities::PropertyNameTable*)> __Newtonsoft_Json_Serialization_DefaultContractResolverStateSizeCheck;
  static_assert(sizeof(DefaultContractResolverState) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::DefaultContractResolverState::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
