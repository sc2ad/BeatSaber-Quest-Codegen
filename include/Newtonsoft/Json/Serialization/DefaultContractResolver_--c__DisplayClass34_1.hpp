// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.Serialization.DefaultContractResolver
#include "Newtonsoft/Json/Serialization/DefaultContractResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Forward declaring namespace: Newtonsoft::Json::Utilities
namespace Newtonsoft::Json::Utilities {
  // Forward declaring type: MethodCall`2<T, TResult>
  template<typename T, typename TResult>
  class MethodCall_2;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1*, "Newtonsoft.Json.Serialization", "DefaultContractResolver/<>c__DisplayClass34_1");
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass34_1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class DefaultContractResolver::$$c__DisplayClass34_1 : public ::Il2CppObject {
    public:
    public:
    // public System.Action`2<System.Object,System.Object> setExtensionDataDictionary
    // Size: 0x8
    // Offset: 0x10
    ::System::Action_2<::Il2CppObject*, ::Il2CppObject*>* setExtensionDataDictionary;
    // Field size check
    static_assert(sizeof(::System::Action_2<::Il2CppObject*, ::Il2CppObject*>*) == 0x8);
    // public System.Func`1<System.Object> createExtensionDataDictionary
    // Size: 0x8
    // Offset: 0x18
    ::System::Func_1<::Il2CppObject*>* createExtensionDataDictionary;
    // Field size check
    static_assert(sizeof(::System::Func_1<::Il2CppObject*>*) == 0x8);
    // public Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> setExtensionDataDictionaryValue
    // Size: 0x8
    // Offset: 0x20
    ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>* setExtensionDataDictionaryValue;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*) == 0x8);
    // public Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass34_0 CS$<>8__locals1
    // Size: 0x8
    // Offset: 0x28
    ::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_0* CS$$$8__locals1;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_0*) == 0x8);
    public:
    // Get instance field reference: public System.Action`2<System.Object,System.Object> setExtensionDataDictionary
    [[deprecated("Use field access instead!")]] ::System::Action_2<::Il2CppObject*, ::Il2CppObject*>*& dyn_setExtensionDataDictionary();
    // Get instance field reference: public System.Func`1<System.Object> createExtensionDataDictionary
    [[deprecated("Use field access instead!")]] ::System::Func_1<::Il2CppObject*>*& dyn_createExtensionDataDictionary();
    // Get instance field reference: public Newtonsoft.Json.Utilities.MethodCall`2<System.Object,System.Object> setExtensionDataDictionaryValue
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::MethodCall_2<::Il2CppObject*, ::Il2CppObject*>*& dyn_setExtensionDataDictionaryValue();
    // Get instance field reference: public Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass34_0 CS$<>8__locals1
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_0*& dyn_CS$$$8__locals1();
    // public System.Void .ctor()
    // Offset: 0x1E129EC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DefaultContractResolver::$$c__DisplayClass34_1* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DefaultContractResolver::$$c__DisplayClass34_1*, creationType>()));
    }
    // System.Void <SetExtensionDataDelegates>b__0(System.Object o, System.String key, System.Object value)
    // Offset: 0x1E129F4
    void $SetExtensionDataDelegates$b__0(::Il2CppObject* o, ::StringW key, ::Il2CppObject* value);
  }; // Newtonsoft.Json.Serialization.DefaultContractResolver/Newtonsoft.Json.Serialization.<>c__DisplayClass34_1
  #pragma pack(pop)
  static check_size<sizeof(DefaultContractResolver::$$c__DisplayClass34_1), 40 + sizeof(::Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_0*)> __Newtonsoft_Json_Serialization_DefaultContractResolver_$$c__DisplayClass34_1SizeCheck;
  static_assert(sizeof(DefaultContractResolver::$$c__DisplayClass34_1) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1::$SetExtensionDataDelegates$b__0
// Il2CppName: <SetExtensionDataDelegates>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1::*)(::Il2CppObject*, ::StringW, ::Il2CppObject*)>(&Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1::$SetExtensionDataDelegates$b__0)> {
  static const MethodInfo* get() {
    static auto* o = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::DefaultContractResolver::$$c__DisplayClass34_1*), "<SetExtensionDataDelegates>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{o, key, value});
  }
};
