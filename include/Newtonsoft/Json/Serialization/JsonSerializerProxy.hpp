// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Newtonsoft::Json::Serialization
namespace Newtonsoft::Json::Serialization {
  // Forward declaring type: JsonSerializerInternalReader
  class JsonSerializerInternalReader;
  // Forward declaring type: JsonSerializerInternalWriter
  class JsonSerializerInternalWriter;
  // Forward declaring type: JsonSerializerInternalBase
  class JsonSerializerInternalBase;
  // Forward declaring type: IReferenceResolver
  class IReferenceResolver;
  // Forward declaring type: ITraceWriter
  class ITraceWriter;
  // Forward declaring type: IContractResolver
  class IContractResolver;
  // Forward declaring type: ErrorEventArgs
  class ErrorEventArgs;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEqualityComparer
  class IEqualityComparer;
}
// Forward declaring namespace: Newtonsoft::Json
namespace Newtonsoft::Json {
  // Forward declaring type: JsonConverterCollection
  class JsonConverterCollection;
  // Skipping declaration: DefaultValueHandling because it is already included!
  // Skipping declaration: MissingMemberHandling because it is already included!
  // Skipping declaration: NullValueHandling because it is already included!
  // Skipping declaration: ObjectCreationHandling because it is already included!
  // Skipping declaration: ReferenceLoopHandling because it is already included!
  // Skipping declaration: PreserveReferencesHandling because it is already included!
  // Skipping declaration: TypeNameHandling because it is already included!
  // Skipping declaration: MetadataPropertyHandling because it is already included!
  // Skipping declaration: ConstructorHandling because it is already included!
  // Skipping declaration: Formatting because it is already included!
  // Forward declaring type: JsonReader
  class JsonReader;
  // Forward declaring type: JsonWriter
  class JsonWriter;
}
// Forward declaring namespace: System::Runtime::Serialization::Formatters
namespace System::Runtime::Serialization::Formatters {
  // Skipping declaration: FormatterAssemblyStyle because it is already included!
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationBinder
  class SerializationBinder;
  // Skipping declaration: StreamingContext because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: EventHandler`1<TEventArgs>
  template<typename TEventArgs>
  class EventHandler_1;
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // Forward declaring type: JsonSerializerProxy
  class JsonSerializerProxy;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Serialization::JsonSerializerProxy);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Serialization::JsonSerializerProxy*, "Newtonsoft.Json.Serialization", "JsonSerializerProxy");
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // WARNING Size may be invalid!
  // Autogenerated type: Newtonsoft.Json.Serialization.JsonSerializerProxy
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: FFFFFFFF
  class JsonSerializerProxy : public ::Newtonsoft::Json::JsonSerializer {
    public:
    public:
    // private readonly Newtonsoft.Json.Serialization.JsonSerializerInternalReader _serializerReader
    // Size: 0x8
    // Offset: 0xE0
    ::Newtonsoft::Json::Serialization::JsonSerializerInternalReader* serializerReader;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Serialization::JsonSerializerInternalReader*) == 0x8);
    // private readonly Newtonsoft.Json.Serialization.JsonSerializerInternalWriter _serializerWriter
    // Size: 0x8
    // Offset: 0xE8
    ::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter* serializerWriter;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter*) == 0x8);
    // private readonly Newtonsoft.Json.JsonSerializer _serializer
    // Size: 0x8
    // Offset: 0xF0
    ::Newtonsoft::Json::JsonSerializer* serializer;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::JsonSerializer*) == 0x8);
    public:
    // Get instance field reference: private readonly Newtonsoft.Json.Serialization.JsonSerializerInternalReader _serializerReader
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonSerializerInternalReader*& dyn__serializerReader();
    // Get instance field reference: private readonly Newtonsoft.Json.Serialization.JsonSerializerInternalWriter _serializerWriter
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter*& dyn__serializerWriter();
    // Get instance field reference: private readonly Newtonsoft.Json.JsonSerializer _serializer
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonSerializer*& dyn__serializer();
    // public System.Void .ctor(Newtonsoft.Json.Serialization.JsonSerializerInternalReader serializerReader)
    // Offset: 0x208A068
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonSerializerProxy* New_ctor(::Newtonsoft::Json::Serialization::JsonSerializerInternalReader* serializerReader) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonSerializerProxy*, creationType>(serializerReader)));
    }
    // public System.Void .ctor(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter serializerWriter)
    // Offset: 0x208A16C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonSerializerProxy* New_ctor(::Newtonsoft::Json::Serialization::JsonSerializerInternalWriter* serializerWriter) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerProxy::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonSerializerProxy*, creationType>(serializerWriter)));
    }
    // Newtonsoft.Json.Serialization.JsonSerializerInternalBase GetInternalSerializer()
    // Offset: 0x208A050
    ::Newtonsoft::Json::Serialization::JsonSerializerInternalBase* GetInternalSerializer();
    // public override System.Void set_ReferenceResolver(Newtonsoft.Json.Serialization.IReferenceResolver value)
    // Offset: 0x2089CE4
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_ReferenceResolver(Newtonsoft.Json.Serialization.IReferenceResolver value)
    void set_ReferenceResolver(::Newtonsoft::Json::Serialization::IReferenceResolver* value);
    // public override Newtonsoft.Json.Serialization.ITraceWriter get_TraceWriter()
    // Offset: 0x2089D04
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: Newtonsoft.Json.Serialization.ITraceWriter JsonSerializer::get_TraceWriter()
    ::Newtonsoft::Json::Serialization::ITraceWriter* get_TraceWriter();
    // public override System.Void set_TraceWriter(Newtonsoft.Json.Serialization.ITraceWriter value)
    // Offset: 0x2089D24
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_TraceWriter(Newtonsoft.Json.Serialization.ITraceWriter value)
    void set_TraceWriter(::Newtonsoft::Json::Serialization::ITraceWriter* value);
    // public override System.Void set_EqualityComparer(System.Collections.IEqualityComparer value)
    // Offset: 0x2089D44
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_EqualityComparer(System.Collections.IEqualityComparer value)
    void set_EqualityComparer(::System::Collections::IEqualityComparer* value);
    // public override Newtonsoft.Json.JsonConverterCollection get_Converters()
    // Offset: 0x2089D64
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: Newtonsoft.Json.JsonConverterCollection JsonSerializer::get_Converters()
    ::Newtonsoft::Json::JsonConverterCollection* get_Converters();
    // public override System.Void set_DefaultValueHandling(Newtonsoft.Json.DefaultValueHandling value)
    // Offset: 0x2089D88
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_DefaultValueHandling(Newtonsoft.Json.DefaultValueHandling value)
    void set_DefaultValueHandling(::Newtonsoft::Json::DefaultValueHandling value);
    // public override Newtonsoft.Json.Serialization.IContractResolver get_ContractResolver()
    // Offset: 0x2089DAC
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: Newtonsoft.Json.Serialization.IContractResolver JsonSerializer::get_ContractResolver()
    ::Newtonsoft::Json::Serialization::IContractResolver* get_ContractResolver();
    // public override System.Void set_ContractResolver(Newtonsoft.Json.Serialization.IContractResolver value)
    // Offset: 0x2089DD0
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_ContractResolver(Newtonsoft.Json.Serialization.IContractResolver value)
    void set_ContractResolver(::Newtonsoft::Json::Serialization::IContractResolver* value);
    // public override System.Void set_MissingMemberHandling(Newtonsoft.Json.MissingMemberHandling value)
    // Offset: 0x2089DF4
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_MissingMemberHandling(Newtonsoft.Json.MissingMemberHandling value)
    void set_MissingMemberHandling(::Newtonsoft::Json::MissingMemberHandling value);
    // public override System.Void set_NullValueHandling(Newtonsoft.Json.NullValueHandling value)
    // Offset: 0x2089E18
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_NullValueHandling(Newtonsoft.Json.NullValueHandling value)
    void set_NullValueHandling(::Newtonsoft::Json::NullValueHandling value);
    // public override Newtonsoft.Json.ObjectCreationHandling get_ObjectCreationHandling()
    // Offset: 0x2089E3C
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: Newtonsoft.Json.ObjectCreationHandling JsonSerializer::get_ObjectCreationHandling()
    ::Newtonsoft::Json::ObjectCreationHandling get_ObjectCreationHandling();
    // public override System.Void set_ObjectCreationHandling(Newtonsoft.Json.ObjectCreationHandling value)
    // Offset: 0x2089E60
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_ObjectCreationHandling(Newtonsoft.Json.ObjectCreationHandling value)
    void set_ObjectCreationHandling(::Newtonsoft::Json::ObjectCreationHandling value);
    // public override System.Void set_ReferenceLoopHandling(Newtonsoft.Json.ReferenceLoopHandling value)
    // Offset: 0x2089E84
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_ReferenceLoopHandling(Newtonsoft.Json.ReferenceLoopHandling value)
    void set_ReferenceLoopHandling(::Newtonsoft::Json::ReferenceLoopHandling value);
    // public override System.Void set_PreserveReferencesHandling(Newtonsoft.Json.PreserveReferencesHandling value)
    // Offset: 0x2089EA8
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_PreserveReferencesHandling(Newtonsoft.Json.PreserveReferencesHandling value)
    void set_PreserveReferencesHandling(::Newtonsoft::Json::PreserveReferencesHandling value);
    // public override System.Void set_TypeNameHandling(Newtonsoft.Json.TypeNameHandling value)
    // Offset: 0x2089ECC
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_TypeNameHandling(Newtonsoft.Json.TypeNameHandling value)
    void set_TypeNameHandling(::Newtonsoft::Json::TypeNameHandling value);
    // public override Newtonsoft.Json.MetadataPropertyHandling get_MetadataPropertyHandling()
    // Offset: 0x2089EEC
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: Newtonsoft.Json.MetadataPropertyHandling JsonSerializer::get_MetadataPropertyHandling()
    ::Newtonsoft::Json::MetadataPropertyHandling get_MetadataPropertyHandling();
    // public override System.Void set_MetadataPropertyHandling(Newtonsoft.Json.MetadataPropertyHandling value)
    // Offset: 0x2089F10
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_MetadataPropertyHandling(Newtonsoft.Json.MetadataPropertyHandling value)
    void set_MetadataPropertyHandling(::Newtonsoft::Json::MetadataPropertyHandling value);
    // public override System.Void set_TypeNameAssemblyFormat(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle value)
    // Offset: 0x2089F34
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_TypeNameAssemblyFormat(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle value)
    void set_TypeNameAssemblyFormat(::System::Runtime::Serialization::Formatters::FormatterAssemblyStyle value);
    // public override System.Void set_ConstructorHandling(Newtonsoft.Json.ConstructorHandling value)
    // Offset: 0x2089F54
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_ConstructorHandling(Newtonsoft.Json.ConstructorHandling value)
    void set_ConstructorHandling(::Newtonsoft::Json::ConstructorHandling value);
    // public override System.Void set_Binder(System.Runtime.Serialization.SerializationBinder value)
    // Offset: 0x2089F78
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_Binder(System.Runtime.Serialization.SerializationBinder value)
    void set_Binder(::System::Runtime::Serialization::SerializationBinder* value);
    // public override System.Runtime.Serialization.StreamingContext get_Context()
    // Offset: 0x2089F98
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Runtime.Serialization.StreamingContext JsonSerializer::get_Context()
    ::System::Runtime::Serialization::StreamingContext get_Context();
    // public override System.Void set_Context(System.Runtime.Serialization.StreamingContext value)
    // Offset: 0x2089FBC
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_Context(System.Runtime.Serialization.StreamingContext value)
    void set_Context(::System::Runtime::Serialization::StreamingContext value);
    // public override Newtonsoft.Json.Formatting get_Formatting()
    // Offset: 0x2089FE0
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: Newtonsoft.Json.Formatting JsonSerializer::get_Formatting()
    ::Newtonsoft::Json::Formatting get_Formatting();
    // public override System.Boolean get_CheckAdditionalContent()
    // Offset: 0x208A004
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Boolean JsonSerializer::get_CheckAdditionalContent()
    bool get_CheckAdditionalContent();
    // public override System.Void set_CheckAdditionalContent(System.Boolean value)
    // Offset: 0x208A028
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::set_CheckAdditionalContent(System.Boolean value)
    void set_CheckAdditionalContent(bool value);
    // public override System.Void add_Error(System.EventHandler`1<Newtonsoft.Json.Serialization.ErrorEventArgs> value)
    // Offset: 0x2089CA4
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::add_Error(System.EventHandler`1<Newtonsoft.Json.Serialization.ErrorEventArgs> value)
    void add_Error(::System::EventHandler_1<::Newtonsoft::Json::Serialization::ErrorEventArgs*>* value);
    // public override System.Void remove_Error(System.EventHandler`1<Newtonsoft.Json.Serialization.ErrorEventArgs> value)
    // Offset: 0x2089CC4
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::remove_Error(System.EventHandler`1<Newtonsoft.Json.Serialization.ErrorEventArgs> value)
    void remove_Error(::System::EventHandler_1<::Newtonsoft::Json::Serialization::ErrorEventArgs*>* value);
    // override System.Object DeserializeInternal(Newtonsoft.Json.JsonReader reader, System.Type objectType)
    // Offset: 0x208A1EC
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Object JsonSerializer::DeserializeInternal(Newtonsoft.Json.JsonReader reader, System.Type objectType)
    ::Il2CppObject* DeserializeInternal(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType);
    // override System.Void PopulateInternal(Newtonsoft.Json.JsonReader reader, System.Object target)
    // Offset: 0x208A220
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::PopulateInternal(Newtonsoft.Json.JsonReader reader, System.Object target)
    void PopulateInternal(::Newtonsoft::Json::JsonReader* reader, ::Il2CppObject* target);
    // override System.Void SerializeInternal(Newtonsoft.Json.JsonWriter jsonWriter, System.Object value, System.Type rootType)
    // Offset: 0x208A250
    // Implemented from: Newtonsoft.Json.JsonSerializer
    // Base method: System.Void JsonSerializer::SerializeInternal(Newtonsoft.Json.JsonWriter jsonWriter, System.Object value, System.Type rootType)
    void SerializeInternal(::Newtonsoft::Json::JsonWriter* jsonWriter, ::Il2CppObject* value, ::System::Type* rootType);
  }; // Newtonsoft.Json.Serialization.JsonSerializerProxy
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::GetInternalSerializer
// Il2CppName: GetInternalSerializer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Serialization::JsonSerializerInternalBase* (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)()>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::GetInternalSerializer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "GetInternalSerializer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ReferenceResolver
// Il2CppName: set_ReferenceResolver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::Newtonsoft::Json::Serialization::IReferenceResolver*)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ReferenceResolver)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Serialization", "IReferenceResolver")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_ReferenceResolver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::get_TraceWriter
// Il2CppName: get_TraceWriter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Serialization::ITraceWriter* (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)()>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::get_TraceWriter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "get_TraceWriter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_TraceWriter
// Il2CppName: set_TraceWriter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::Newtonsoft::Json::Serialization::ITraceWriter*)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_TraceWriter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Serialization", "ITraceWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_TraceWriter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_EqualityComparer
// Il2CppName: set_EqualityComparer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::System::Collections::IEqualityComparer*)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_EqualityComparer)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Collections", "IEqualityComparer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_EqualityComparer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::get_Converters
// Il2CppName: get_Converters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::JsonConverterCollection* (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)()>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::get_Converters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "get_Converters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_DefaultValueHandling
// Il2CppName: set_DefaultValueHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::Newtonsoft::Json::DefaultValueHandling)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_DefaultValueHandling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "DefaultValueHandling")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_DefaultValueHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::get_ContractResolver
// Il2CppName: get_ContractResolver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Serialization::IContractResolver* (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)()>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::get_ContractResolver)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "get_ContractResolver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ContractResolver
// Il2CppName: set_ContractResolver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::Newtonsoft::Json::Serialization::IContractResolver*)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ContractResolver)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Serialization", "IContractResolver")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_ContractResolver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_MissingMemberHandling
// Il2CppName: set_MissingMemberHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::Newtonsoft::Json::MissingMemberHandling)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_MissingMemberHandling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "MissingMemberHandling")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_MissingMemberHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_NullValueHandling
// Il2CppName: set_NullValueHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::Newtonsoft::Json::NullValueHandling)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_NullValueHandling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "NullValueHandling")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_NullValueHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::get_ObjectCreationHandling
// Il2CppName: get_ObjectCreationHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::ObjectCreationHandling (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)()>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::get_ObjectCreationHandling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "get_ObjectCreationHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ObjectCreationHandling
// Il2CppName: set_ObjectCreationHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::Newtonsoft::Json::ObjectCreationHandling)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ObjectCreationHandling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "ObjectCreationHandling")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_ObjectCreationHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ReferenceLoopHandling
// Il2CppName: set_ReferenceLoopHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::Newtonsoft::Json::ReferenceLoopHandling)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ReferenceLoopHandling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "ReferenceLoopHandling")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_ReferenceLoopHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_PreserveReferencesHandling
// Il2CppName: set_PreserveReferencesHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::Newtonsoft::Json::PreserveReferencesHandling)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_PreserveReferencesHandling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "PreserveReferencesHandling")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_PreserveReferencesHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_TypeNameHandling
// Il2CppName: set_TypeNameHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::Newtonsoft::Json::TypeNameHandling)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_TypeNameHandling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "TypeNameHandling")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_TypeNameHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::get_MetadataPropertyHandling
// Il2CppName: get_MetadataPropertyHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::MetadataPropertyHandling (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)()>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::get_MetadataPropertyHandling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "get_MetadataPropertyHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_MetadataPropertyHandling
// Il2CppName: set_MetadataPropertyHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::Newtonsoft::Json::MetadataPropertyHandling)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_MetadataPropertyHandling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "MetadataPropertyHandling")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_MetadataPropertyHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_TypeNameAssemblyFormat
// Il2CppName: set_TypeNameAssemblyFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::System::Runtime::Serialization::Formatters::FormatterAssemblyStyle)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_TypeNameAssemblyFormat)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization.Formatters", "FormatterAssemblyStyle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_TypeNameAssemblyFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ConstructorHandling
// Il2CppName: set_ConstructorHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::Newtonsoft::Json::ConstructorHandling)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_ConstructorHandling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "ConstructorHandling")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_ConstructorHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_Binder
// Il2CppName: set_Binder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::System::Runtime::Serialization::SerializationBinder*)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_Binder)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationBinder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_Binder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::get_Context
// Il2CppName: get_Context
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::Serialization::StreamingContext (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)()>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::get_Context)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "get_Context", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_Context
// Il2CppName: set_Context
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::System::Runtime::Serialization::StreamingContext)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_Context)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_Context", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::get_Formatting
// Il2CppName: get_Formatting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Formatting (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)()>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::get_Formatting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "get_Formatting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::get_CheckAdditionalContent
// Il2CppName: get_CheckAdditionalContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)()>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::get_CheckAdditionalContent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "get_CheckAdditionalContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::set_CheckAdditionalContent
// Il2CppName: set_CheckAdditionalContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(bool)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::set_CheckAdditionalContent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "set_CheckAdditionalContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::add_Error
// Il2CppName: add_Error
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::System::EventHandler_1<::Newtonsoft::Json::Serialization::ErrorEventArgs*>*)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::add_Error)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "EventHandler`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Serialization", "ErrorEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "add_Error", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::remove_Error
// Il2CppName: remove_Error
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::System::EventHandler_1<::Newtonsoft::Json::Serialization::ErrorEventArgs*>*)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::remove_Error)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "EventHandler`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Serialization", "ErrorEventArgs")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "remove_Error", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::DeserializeInternal
// Il2CppName: DeserializeInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::Newtonsoft::Json::JsonReader*, ::System::Type*)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::DeserializeInternal)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonReader")->byval_arg;
    static auto* objectType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "DeserializeInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader, objectType});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::PopulateInternal
// Il2CppName: PopulateInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::Newtonsoft::Json::JsonReader*, ::Il2CppObject*)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::PopulateInternal)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonReader")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "PopulateInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader, target});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerProxy::SerializeInternal
// Il2CppName: SerializeInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonSerializerProxy::*)(::Newtonsoft::Json::JsonWriter*, ::Il2CppObject*, ::System::Type*)>(&Newtonsoft::Json::Serialization::JsonSerializerProxy::SerializeInternal)> {
  static const MethodInfo* get() {
    static auto* jsonWriter = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonWriter")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* rootType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerProxy*), "SerializeInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jsonWriter, value, rootType});
  }
};
