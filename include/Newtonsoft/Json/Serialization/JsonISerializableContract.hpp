// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonContainerContract
#include "Newtonsoft/Json/Serialization/JsonContainerContract.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Newtonsoft::Json::Serialization
namespace Newtonsoft::Json::Serialization {
  // Forward declaring type: ObjectConstructor`1<T>
  template<typename T>
  class ObjectConstructor_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // Forward declaring type: JsonISerializableContract
  class JsonISerializableContract;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Serialization::JsonISerializableContract);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Serialization::JsonISerializableContract*, "Newtonsoft.Json.Serialization", "JsonISerializableContract");
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // WARNING Size may be invalid!
  // Autogenerated type: Newtonsoft.Json.Serialization.JsonISerializableContract
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: FFFFFFFF
  class JsonISerializableContract : public ::Newtonsoft::Json::Serialization::JsonContainerContract {
    public:
    public:
    // private Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> <ISerializableCreator>k__BackingField
    // Size: 0x8
    // Offset: 0xC0
    ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* ISerializableCreator;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*) == 0x8);
    public:
    // Creating conversion operator: operator ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*
    constexpr operator ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*() const noexcept {
      return ISerializableCreator;
    }
    // Get instance field reference: private Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> <ISerializableCreator>k__BackingField
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*& dyn_$ISerializableCreator$k__BackingField();
    // public Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> get_ISerializableCreator()
    // Offset: 0x1E17B3C
    ::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* get_ISerializableCreator();
    // public System.Void set_ISerializableCreator(Newtonsoft.Json.Serialization.ObjectConstructor`1<System.Object> value)
    // Offset: 0x1E17B44
    void set_ISerializableCreator(::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* value);
    // public System.Void .ctor(System.Type underlyingType)
    // Offset: 0x1E17B4C
    // Implemented from: Newtonsoft.Json.Serialization.JsonContainerContract
    // Base method: System.Void JsonContainerContract::.ctor(System.Type underlyingType)
    // Base method: System.Void JsonContract::.ctor(System.Type underlyingType)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonISerializableContract* New_ctor(::System::Type* underlyingType) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonISerializableContract::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonISerializableContract*, creationType>(underlyingType)));
    }
  }; // Newtonsoft.Json.Serialization.JsonISerializableContract
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonISerializableContract::get_ISerializableCreator
// Il2CppName: get_ISerializableCreator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>* (Newtonsoft::Json::Serialization::JsonISerializableContract::*)()>(&Newtonsoft::Json::Serialization::JsonISerializableContract::get_ISerializableCreator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonISerializableContract*), "get_ISerializableCreator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonISerializableContract::set_ISerializableCreator
// Il2CppName: set_ISerializableCreator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonISerializableContract::*)(::Newtonsoft::Json::Serialization::ObjectConstructor_1<::Il2CppObject*>*)>(&Newtonsoft::Json::Serialization::JsonISerializableContract::set_ISerializableCreator)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Serialization", "ObjectConstructor`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonISerializableContract*), "set_ISerializableCreator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonISerializableContract::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
