// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Newtonsoft.Json.Required
#include "Newtonsoft/Json/Required.hpp"
// Including type: Newtonsoft.Json.NullValueHandling
#include "Newtonsoft/Json/NullValueHandling.hpp"
// Including type: Newtonsoft.Json.DefaultValueHandling
#include "Newtonsoft/Json/DefaultValueHandling.hpp"
// Including type: Newtonsoft.Json.ReferenceLoopHandling
#include "Newtonsoft/Json/ReferenceLoopHandling.hpp"
// Including type: Newtonsoft.Json.ObjectCreationHandling
#include "Newtonsoft/Json/ObjectCreationHandling.hpp"
// Including type: Newtonsoft.Json.TypeNameHandling
#include "Newtonsoft/Json/TypeNameHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Predicate`1<T>
  template<typename T>
  class Predicate_1;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Forward declaring namespace: Newtonsoft::Json::Serialization
namespace Newtonsoft::Json::Serialization {
  // Forward declaring type: JsonContract
  class JsonContract;
  // Forward declaring type: IValueProvider
  class IValueProvider;
  // Forward declaring type: IAttributeProvider
  class IAttributeProvider;
}
// Forward declaring namespace: Newtonsoft::Json
namespace Newtonsoft::Json {
  // Forward declaring type: JsonConverter
  class JsonConverter;
  // Forward declaring type: JsonWriter
  class JsonWriter;
}
// Completed forward declares
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // Forward declaring type: JsonProperty
  class JsonProperty;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Serialization::JsonProperty);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Serialization::JsonProperty*, "Newtonsoft.Json.Serialization", "JsonProperty");
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // WARNING Size may be invalid!
  // Autogenerated type: Newtonsoft.Json.Serialization.JsonProperty
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: FFFFFFFF
  class JsonProperty : public ::Il2CppObject {
    public:
    public:
    // System.Nullable`1<Newtonsoft.Json.Required> _required
    // Size: 0xFFFFFFFF
    // Offset: 0x10
    ::System::Nullable_1<::Newtonsoft::Json::Required> required;
    // System.Boolean _hasExplicitDefaultValue
    // Size: 0x1
    // Offset: 0x18
    bool hasExplicitDefaultValue;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Object _defaultValue
    // Size: 0x8
    // Offset: 0x20
    ::Il2CppObject* defaultValue;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Boolean _hasGeneratedDefaultValue
    // Size: 0x1
    // Offset: 0x28
    bool hasGeneratedDefaultValue;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.String _propertyName
    // Size: 0x8
    // Offset: 0x30
    ::StringW propertyName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // System.Boolean _skipPropertyNameEscape
    // Size: 0x1
    // Offset: 0x38
    bool skipPropertyNameEscape;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Type _propertyType
    // Size: 0x8
    // Offset: 0x40
    ::System::Type* propertyType;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    // private Newtonsoft.Json.Serialization.JsonContract <PropertyContract>k__BackingField
    // Size: 0x8
    // Offset: 0x48
    ::Newtonsoft::Json::Serialization::JsonContract* PropertyContract;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Serialization::JsonContract*) == 0x8);
    // private System.Type <DeclaringType>k__BackingField
    // Size: 0x8
    // Offset: 0x50
    ::System::Type* DeclaringType;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    // private System.Nullable`1<System.Int32> <Order>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x58
    ::System::Nullable_1<int> Order;
    // private System.String <UnderlyingName>k__BackingField
    // Size: 0x8
    // Offset: 0x60
    ::StringW UnderlyingName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private Newtonsoft.Json.Serialization.IValueProvider <ValueProvider>k__BackingField
    // Size: 0x8
    // Offset: 0x68
    ::Newtonsoft::Json::Serialization::IValueProvider* ValueProvider;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Serialization::IValueProvider*) == 0x8);
    // private Newtonsoft.Json.Serialization.IAttributeProvider <AttributeProvider>k__BackingField
    // Size: 0x8
    // Offset: 0x70
    ::Newtonsoft::Json::Serialization::IAttributeProvider* AttributeProvider;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Serialization::IAttributeProvider*) == 0x8);
    // private Newtonsoft.Json.JsonConverter <Converter>k__BackingField
    // Size: 0x8
    // Offset: 0x78
    ::Newtonsoft::Json::JsonConverter* Converter;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::JsonConverter*) == 0x8);
    // private Newtonsoft.Json.JsonConverter <MemberConverter>k__BackingField
    // Size: 0x8
    // Offset: 0x80
    ::Newtonsoft::Json::JsonConverter* MemberConverter;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::JsonConverter*) == 0x8);
    // private System.Boolean <Ignored>k__BackingField
    // Size: 0x1
    // Offset: 0x88
    bool Ignored;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <Readable>k__BackingField
    // Size: 0x1
    // Offset: 0x89
    bool Readable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <Writable>k__BackingField
    // Size: 0x1
    // Offset: 0x8A
    bool Writable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <HasMemberAttribute>k__BackingField
    // Size: 0x1
    // Offset: 0x8B
    bool HasMemberAttribute;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Nullable`1<System.Boolean> <IsReference>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x8C
    ::System::Nullable_1<bool> IsReference;
    // private System.Nullable`1<Newtonsoft.Json.NullValueHandling> <NullValueHandling>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x90
    ::System::Nullable_1<::Newtonsoft::Json::NullValueHandling> NullValueHandling;
    // private System.Nullable`1<Newtonsoft.Json.DefaultValueHandling> <DefaultValueHandling>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0x98
    ::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling> DefaultValueHandling;
    // private System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> <ReferenceLoopHandling>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0xA0
    ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> ReferenceLoopHandling;
    // private System.Nullable`1<Newtonsoft.Json.ObjectCreationHandling> <ObjectCreationHandling>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0xA8
    ::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling> ObjectCreationHandling;
    // private System.Nullable`1<Newtonsoft.Json.TypeNameHandling> <TypeNameHandling>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0xB0
    ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> TypeNameHandling;
    // private System.Predicate`1<System.Object> <ShouldSerialize>k__BackingField
    // Size: 0x8
    // Offset: 0xB8
    ::System::Predicate_1<::Il2CppObject*>* ShouldSerialize;
    // Field size check
    static_assert(sizeof(::System::Predicate_1<::Il2CppObject*>*) == 0x8);
    // private System.Predicate`1<System.Object> <ShouldDeserialize>k__BackingField
    // Size: 0x8
    // Offset: 0xC0
    ::System::Predicate_1<::Il2CppObject*>* ShouldDeserialize;
    // Field size check
    static_assert(sizeof(::System::Predicate_1<::Il2CppObject*>*) == 0x8);
    // private System.Predicate`1<System.Object> <GetIsSpecified>k__BackingField
    // Size: 0x8
    // Offset: 0xC8
    ::System::Predicate_1<::Il2CppObject*>* GetIsSpecified;
    // Field size check
    static_assert(sizeof(::System::Predicate_1<::Il2CppObject*>*) == 0x8);
    // private System.Action`2<System.Object,System.Object> <SetIsSpecified>k__BackingField
    // Size: 0x8
    // Offset: 0xD0
    ::System::Action_2<::Il2CppObject*, ::Il2CppObject*>* SetIsSpecified;
    // Field size check
    static_assert(sizeof(::System::Action_2<::Il2CppObject*, ::Il2CppObject*>*) == 0x8);
    // private Newtonsoft.Json.JsonConverter <ItemConverter>k__BackingField
    // Size: 0x8
    // Offset: 0xD8
    ::Newtonsoft::Json::JsonConverter* ItemConverter;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::JsonConverter*) == 0x8);
    // private System.Nullable`1<System.Boolean> <ItemIsReference>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0xE0
    ::System::Nullable_1<bool> ItemIsReference;
    // private System.Nullable`1<Newtonsoft.Json.TypeNameHandling> <ItemTypeNameHandling>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0xE4
    ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> ItemTypeNameHandling;
    // private System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> <ItemReferenceLoopHandling>k__BackingField
    // Size: 0xFFFFFFFF
    // Offset: 0xEC
    ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> ItemReferenceLoopHandling;
    public:
    // Get instance field reference: System.Nullable`1<Newtonsoft.Json.Required> _required
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::Required>& dyn__required();
    // Get instance field reference: System.Boolean _hasExplicitDefaultValue
    [[deprecated("Use field access instead!")]] bool& dyn__hasExplicitDefaultValue();
    // Get instance field reference: private System.Object _defaultValue
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn__defaultValue();
    // Get instance field reference: private System.Boolean _hasGeneratedDefaultValue
    [[deprecated("Use field access instead!")]] bool& dyn__hasGeneratedDefaultValue();
    // Get instance field reference: private System.String _propertyName
    [[deprecated("Use field access instead!")]] ::StringW& dyn__propertyName();
    // Get instance field reference: System.Boolean _skipPropertyNameEscape
    [[deprecated("Use field access instead!")]] bool& dyn__skipPropertyNameEscape();
    // Get instance field reference: private System.Type _propertyType
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn__propertyType();
    // Get instance field reference: private Newtonsoft.Json.Serialization.JsonContract <PropertyContract>k__BackingField
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonContract*& dyn_$PropertyContract$k__BackingField();
    // Get instance field reference: private System.Type <DeclaringType>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_$DeclaringType$k__BackingField();
    // Get instance field reference: private System.Nullable`1<System.Int32> <Order>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& dyn_$Order$k__BackingField();
    // Get instance field reference: private System.String <UnderlyingName>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$UnderlyingName$k__BackingField();
    // Get instance field reference: private Newtonsoft.Json.Serialization.IValueProvider <ValueProvider>k__BackingField
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::IValueProvider*& dyn_$ValueProvider$k__BackingField();
    // Get instance field reference: private Newtonsoft.Json.Serialization.IAttributeProvider <AttributeProvider>k__BackingField
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::IAttributeProvider*& dyn_$AttributeProvider$k__BackingField();
    // Get instance field reference: private Newtonsoft.Json.JsonConverter <Converter>k__BackingField
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonConverter*& dyn_$Converter$k__BackingField();
    // Get instance field reference: private Newtonsoft.Json.JsonConverter <MemberConverter>k__BackingField
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonConverter*& dyn_$MemberConverter$k__BackingField();
    // Get instance field reference: private System.Boolean <Ignored>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$Ignored$k__BackingField();
    // Get instance field reference: private System.Boolean <Readable>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$Readable$k__BackingField();
    // Get instance field reference: private System.Boolean <Writable>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$Writable$k__BackingField();
    // Get instance field reference: private System.Boolean <HasMemberAttribute>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$HasMemberAttribute$k__BackingField();
    // Get instance field reference: private System.Nullable`1<System.Boolean> <IsReference>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& dyn_$IsReference$k__BackingField();
    // Get instance field reference: private System.Nullable`1<Newtonsoft.Json.NullValueHandling> <NullValueHandling>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>& dyn_$NullValueHandling$k__BackingField();
    // Get instance field reference: private System.Nullable`1<Newtonsoft.Json.DefaultValueHandling> <DefaultValueHandling>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling>& dyn_$DefaultValueHandling$k__BackingField();
    // Get instance field reference: private System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> <ReferenceLoopHandling>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>& dyn_$ReferenceLoopHandling$k__BackingField();
    // Get instance field reference: private System.Nullable`1<Newtonsoft.Json.ObjectCreationHandling> <ObjectCreationHandling>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling>& dyn_$ObjectCreationHandling$k__BackingField();
    // Get instance field reference: private System.Nullable`1<Newtonsoft.Json.TypeNameHandling> <TypeNameHandling>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>& dyn_$TypeNameHandling$k__BackingField();
    // Get instance field reference: private System.Predicate`1<System.Object> <ShouldSerialize>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Predicate_1<::Il2CppObject*>*& dyn_$ShouldSerialize$k__BackingField();
    // Get instance field reference: private System.Predicate`1<System.Object> <ShouldDeserialize>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Predicate_1<::Il2CppObject*>*& dyn_$ShouldDeserialize$k__BackingField();
    // Get instance field reference: private System.Predicate`1<System.Object> <GetIsSpecified>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Predicate_1<::Il2CppObject*>*& dyn_$GetIsSpecified$k__BackingField();
    // Get instance field reference: private System.Action`2<System.Object,System.Object> <SetIsSpecified>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Action_2<::Il2CppObject*, ::Il2CppObject*>*& dyn_$SetIsSpecified$k__BackingField();
    // Get instance field reference: private Newtonsoft.Json.JsonConverter <ItemConverter>k__BackingField
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonConverter*& dyn_$ItemConverter$k__BackingField();
    // Get instance field reference: private System.Nullable`1<System.Boolean> <ItemIsReference>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& dyn_$ItemIsReference$k__BackingField();
    // Get instance field reference: private System.Nullable`1<Newtonsoft.Json.TypeNameHandling> <ItemTypeNameHandling>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>& dyn_$ItemTypeNameHandling$k__BackingField();
    // Get instance field reference: private System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> <ItemReferenceLoopHandling>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>& dyn_$ItemReferenceLoopHandling$k__BackingField();
    // Newtonsoft.Json.Serialization.JsonContract get_PropertyContract()
    // Offset: 0x1D65638
    ::Newtonsoft::Json::Serialization::JsonContract* get_PropertyContract();
    // System.Void set_PropertyContract(Newtonsoft.Json.Serialization.JsonContract value)
    // Offset: 0x1D65640
    void set_PropertyContract(::Newtonsoft::Json::Serialization::JsonContract* value);
    // public System.String get_PropertyName()
    // Offset: 0x1D65648
    ::StringW get_PropertyName();
    // public System.Void set_PropertyName(System.String value)
    // Offset: 0x1D65650
    void set_PropertyName(::StringW value);
    // public System.Type get_DeclaringType()
    // Offset: 0x1D656E4
    ::System::Type* get_DeclaringType();
    // public System.Void set_DeclaringType(System.Type value)
    // Offset: 0x1D656EC
    void set_DeclaringType(::System::Type* value);
    // public System.Nullable`1<System.Int32> get_Order()
    // Offset: 0x1D656F4
    ::System::Nullable_1<int> get_Order();
    // public System.Void set_Order(System.Nullable`1<System.Int32> value)
    // Offset: 0x1D656FC
    void set_Order(::System::Nullable_1<int> value);
    // public System.String get_UnderlyingName()
    // Offset: 0x1D65704
    ::StringW get_UnderlyingName();
    // public System.Void set_UnderlyingName(System.String value)
    // Offset: 0x1D6570C
    void set_UnderlyingName(::StringW value);
    // public Newtonsoft.Json.Serialization.IValueProvider get_ValueProvider()
    // Offset: 0x1D65714
    ::Newtonsoft::Json::Serialization::IValueProvider* get_ValueProvider();
    // public System.Void set_ValueProvider(Newtonsoft.Json.Serialization.IValueProvider value)
    // Offset: 0x1D6571C
    void set_ValueProvider(::Newtonsoft::Json::Serialization::IValueProvider* value);
    // public System.Void set_AttributeProvider(Newtonsoft.Json.Serialization.IAttributeProvider value)
    // Offset: 0x1D65724
    void set_AttributeProvider(::Newtonsoft::Json::Serialization::IAttributeProvider* value);
    // public System.Type get_PropertyType()
    // Offset: 0x1D6572C
    ::System::Type* get_PropertyType();
    // public System.Void set_PropertyType(System.Type value)
    // Offset: 0x1D65734
    void set_PropertyType(::System::Type* value);
    // public Newtonsoft.Json.JsonConverter get_Converter()
    // Offset: 0x1D6574C
    ::Newtonsoft::Json::JsonConverter* get_Converter();
    // public System.Void set_Converter(Newtonsoft.Json.JsonConverter value)
    // Offset: 0x1D65754
    void set_Converter(::Newtonsoft::Json::JsonConverter* value);
    // public Newtonsoft.Json.JsonConverter get_MemberConverter()
    // Offset: 0x1D6575C
    ::Newtonsoft::Json::JsonConverter* get_MemberConverter();
    // public System.Void set_MemberConverter(Newtonsoft.Json.JsonConverter value)
    // Offset: 0x1D65764
    void set_MemberConverter(::Newtonsoft::Json::JsonConverter* value);
    // public System.Boolean get_Ignored()
    // Offset: 0x1D6576C
    bool get_Ignored();
    // public System.Void set_Ignored(System.Boolean value)
    // Offset: 0x1D65774
    void set_Ignored(bool value);
    // public System.Boolean get_Readable()
    // Offset: 0x1D65780
    bool get_Readable();
    // public System.Void set_Readable(System.Boolean value)
    // Offset: 0x1D65788
    void set_Readable(bool value);
    // public System.Boolean get_Writable()
    // Offset: 0x1D65794
    bool get_Writable();
    // public System.Void set_Writable(System.Boolean value)
    // Offset: 0x1D6579C
    void set_Writable(bool value);
    // public System.Boolean get_HasMemberAttribute()
    // Offset: 0x1D657A8
    bool get_HasMemberAttribute();
    // public System.Void set_HasMemberAttribute(System.Boolean value)
    // Offset: 0x1D657B0
    void set_HasMemberAttribute(bool value);
    // public System.Object get_DefaultValue()
    // Offset: 0x1D657BC
    ::Il2CppObject* get_DefaultValue();
    // public System.Void set_DefaultValue(System.Object value)
    // Offset: 0x1D657D4
    void set_DefaultValue(::Il2CppObject* value);
    // public Newtonsoft.Json.Required get_Required()
    // Offset: 0x1D650E8
    ::Newtonsoft::Json::Required get_Required();
    // public System.Nullable`1<System.Boolean> get_IsReference()
    // Offset: 0x1D65880
    ::System::Nullable_1<bool> get_IsReference();
    // public System.Void set_IsReference(System.Nullable`1<System.Boolean> value)
    // Offset: 0x1D65888
    void set_IsReference(::System::Nullable_1<bool> value);
    // public System.Nullable`1<Newtonsoft.Json.NullValueHandling> get_NullValueHandling()
    // Offset: 0x1D65890
    ::System::Nullable_1<::Newtonsoft::Json::NullValueHandling> get_NullValueHandling();
    // public System.Void set_NullValueHandling(System.Nullable`1<Newtonsoft.Json.NullValueHandling> value)
    // Offset: 0x1D65898
    void set_NullValueHandling(::System::Nullable_1<::Newtonsoft::Json::NullValueHandling> value);
    // public System.Nullable`1<Newtonsoft.Json.DefaultValueHandling> get_DefaultValueHandling()
    // Offset: 0x1D658A0
    ::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling> get_DefaultValueHandling();
    // public System.Void set_DefaultValueHandling(System.Nullable`1<Newtonsoft.Json.DefaultValueHandling> value)
    // Offset: 0x1D658A8
    void set_DefaultValueHandling(::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling> value);
    // public System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> get_ReferenceLoopHandling()
    // Offset: 0x1D658B0
    ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> get_ReferenceLoopHandling();
    // public System.Void set_ReferenceLoopHandling(System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> value)
    // Offset: 0x1D658B8
    void set_ReferenceLoopHandling(::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> value);
    // public System.Nullable`1<Newtonsoft.Json.ObjectCreationHandling> get_ObjectCreationHandling()
    // Offset: 0x1D658C0
    ::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling> get_ObjectCreationHandling();
    // public System.Void set_ObjectCreationHandling(System.Nullable`1<Newtonsoft.Json.ObjectCreationHandling> value)
    // Offset: 0x1D658C8
    void set_ObjectCreationHandling(::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling> value);
    // public System.Nullable`1<Newtonsoft.Json.TypeNameHandling> get_TypeNameHandling()
    // Offset: 0x1D658D0
    ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> get_TypeNameHandling();
    // public System.Void set_TypeNameHandling(System.Nullable`1<Newtonsoft.Json.TypeNameHandling> value)
    // Offset: 0x1D658D8
    void set_TypeNameHandling(::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> value);
    // public System.Predicate`1<System.Object> get_ShouldSerialize()
    // Offset: 0x1D658E0
    ::System::Predicate_1<::Il2CppObject*>* get_ShouldSerialize();
    // public System.Void set_ShouldSerialize(System.Predicate`1<System.Object> value)
    // Offset: 0x1D658E8
    void set_ShouldSerialize(::System::Predicate_1<::Il2CppObject*>* value);
    // public System.Predicate`1<System.Object> get_ShouldDeserialize()
    // Offset: 0x1D658F0
    ::System::Predicate_1<::Il2CppObject*>* get_ShouldDeserialize();
    // public System.Predicate`1<System.Object> get_GetIsSpecified()
    // Offset: 0x1D658F8
    ::System::Predicate_1<::Il2CppObject*>* get_GetIsSpecified();
    // public System.Void set_GetIsSpecified(System.Predicate`1<System.Object> value)
    // Offset: 0x1D65900
    void set_GetIsSpecified(::System::Predicate_1<::Il2CppObject*>* value);
    // public System.Action`2<System.Object,System.Object> get_SetIsSpecified()
    // Offset: 0x1D65908
    ::System::Action_2<::Il2CppObject*, ::Il2CppObject*>* get_SetIsSpecified();
    // public System.Void set_SetIsSpecified(System.Action`2<System.Object,System.Object> value)
    // Offset: 0x1D65910
    void set_SetIsSpecified(::System::Action_2<::Il2CppObject*, ::Il2CppObject*>* value);
    // public Newtonsoft.Json.JsonConverter get_ItemConverter()
    // Offset: 0x1D65920
    ::Newtonsoft::Json::JsonConverter* get_ItemConverter();
    // public System.Void set_ItemConverter(Newtonsoft.Json.JsonConverter value)
    // Offset: 0x1D65928
    void set_ItemConverter(::Newtonsoft::Json::JsonConverter* value);
    // public System.Nullable`1<System.Boolean> get_ItemIsReference()
    // Offset: 0x1D65930
    ::System::Nullable_1<bool> get_ItemIsReference();
    // public System.Void set_ItemIsReference(System.Nullable`1<System.Boolean> value)
    // Offset: 0x1D65938
    void set_ItemIsReference(::System::Nullable_1<bool> value);
    // public System.Nullable`1<Newtonsoft.Json.TypeNameHandling> get_ItemTypeNameHandling()
    // Offset: 0x1D65940
    ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> get_ItemTypeNameHandling();
    // public System.Void set_ItemTypeNameHandling(System.Nullable`1<Newtonsoft.Json.TypeNameHandling> value)
    // Offset: 0x1D65948
    void set_ItemTypeNameHandling(::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> value);
    // public System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> get_ItemReferenceLoopHandling()
    // Offset: 0x1D65950
    ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> get_ItemReferenceLoopHandling();
    // public System.Void set_ItemReferenceLoopHandling(System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> value)
    // Offset: 0x1D65958
    void set_ItemReferenceLoopHandling(::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> value);
    // public System.Void .ctor()
    // Offset: 0x1D659A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonProperty* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonProperty::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonProperty*, creationType>()));
    }
    // System.Object GetResolvedDefaultValue()
    // Offset: 0x1D657E4
    ::Il2CppObject* GetResolvedDefaultValue();
    // System.Void WritePropertyName(Newtonsoft.Json.JsonWriter writer)
    // Offset: 0x1D65960
    void WritePropertyName(::Newtonsoft::Json::JsonWriter* writer);
    // public override System.String ToString()
    // Offset: 0x1D65918
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // Newtonsoft.Json.Serialization.JsonProperty
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_PropertyContract
// Il2CppName: get_PropertyContract
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Serialization::JsonContract* (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_PropertyContract)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_PropertyContract", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_PropertyContract
// Il2CppName: set_PropertyContract
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::Newtonsoft::Json::Serialization::JsonContract*)>(&Newtonsoft::Json::Serialization::JsonProperty::set_PropertyContract)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Serialization", "JsonContract")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_PropertyContract", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_PropertyName
// Il2CppName: get_PropertyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_PropertyName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_PropertyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_PropertyName
// Il2CppName: set_PropertyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::StringW)>(&Newtonsoft::Json::Serialization::JsonProperty::set_PropertyName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_PropertyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_DeclaringType
// Il2CppName: get_DeclaringType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_DeclaringType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_DeclaringType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_DeclaringType
// Il2CppName: set_DeclaringType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::System::Type*)>(&Newtonsoft::Json::Serialization::JsonProperty::set_DeclaringType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_DeclaringType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_Order
// Il2CppName: get_Order
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<int> (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_Order)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_Order", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_Order
// Il2CppName: set_Order
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::System::Nullable_1<int>)>(&Newtonsoft::Json::Serialization::JsonProperty::set_Order)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_Order", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_UnderlyingName
// Il2CppName: get_UnderlyingName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_UnderlyingName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_UnderlyingName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_UnderlyingName
// Il2CppName: set_UnderlyingName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::StringW)>(&Newtonsoft::Json::Serialization::JsonProperty::set_UnderlyingName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_UnderlyingName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_ValueProvider
// Il2CppName: get_ValueProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Serialization::IValueProvider* (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_ValueProvider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_ValueProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_ValueProvider
// Il2CppName: set_ValueProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::Newtonsoft::Json::Serialization::IValueProvider*)>(&Newtonsoft::Json::Serialization::JsonProperty::set_ValueProvider)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Serialization", "IValueProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_ValueProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_AttributeProvider
// Il2CppName: set_AttributeProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::Newtonsoft::Json::Serialization::IAttributeProvider*)>(&Newtonsoft::Json::Serialization::JsonProperty::set_AttributeProvider)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Serialization", "IAttributeProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_AttributeProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_PropertyType
// Il2CppName: get_PropertyType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_PropertyType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_PropertyType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_PropertyType
// Il2CppName: set_PropertyType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::System::Type*)>(&Newtonsoft::Json::Serialization::JsonProperty::set_PropertyType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_PropertyType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_Converter
// Il2CppName: get_Converter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::JsonConverter* (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_Converter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_Converter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_Converter
// Il2CppName: set_Converter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::Newtonsoft::Json::JsonConverter*)>(&Newtonsoft::Json::Serialization::JsonProperty::set_Converter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonConverter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_Converter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_MemberConverter
// Il2CppName: get_MemberConverter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::JsonConverter* (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_MemberConverter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_MemberConverter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_MemberConverter
// Il2CppName: set_MemberConverter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::Newtonsoft::Json::JsonConverter*)>(&Newtonsoft::Json::Serialization::JsonProperty::set_MemberConverter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonConverter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_MemberConverter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_Ignored
// Il2CppName: get_Ignored
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_Ignored)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_Ignored", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_Ignored
// Il2CppName: set_Ignored
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(bool)>(&Newtonsoft::Json::Serialization::JsonProperty::set_Ignored)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_Ignored", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_Readable
// Il2CppName: get_Readable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_Readable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_Readable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_Readable
// Il2CppName: set_Readable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(bool)>(&Newtonsoft::Json::Serialization::JsonProperty::set_Readable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_Readable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_Writable
// Il2CppName: get_Writable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_Writable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_Writable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_Writable
// Il2CppName: set_Writable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(bool)>(&Newtonsoft::Json::Serialization::JsonProperty::set_Writable)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_Writable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_HasMemberAttribute
// Il2CppName: get_HasMemberAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_HasMemberAttribute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_HasMemberAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_HasMemberAttribute
// Il2CppName: set_HasMemberAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(bool)>(&Newtonsoft::Json::Serialization::JsonProperty::set_HasMemberAttribute)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_HasMemberAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_DefaultValue
// Il2CppName: get_DefaultValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_DefaultValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_DefaultValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_DefaultValue
// Il2CppName: set_DefaultValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::Il2CppObject*)>(&Newtonsoft::Json::Serialization::JsonProperty::set_DefaultValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_DefaultValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_Required
// Il2CppName: get_Required
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::Required (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_Required)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_Required", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_IsReference
// Il2CppName: get_IsReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<bool> (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_IsReference)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_IsReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_IsReference
// Il2CppName: set_IsReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::System::Nullable_1<bool>)>(&Newtonsoft::Json::Serialization::JsonProperty::set_IsReference)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_IsReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_NullValueHandling
// Il2CppName: get_NullValueHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::Newtonsoft::Json::NullValueHandling> (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_NullValueHandling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_NullValueHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_NullValueHandling
// Il2CppName: set_NullValueHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::System::Nullable_1<::Newtonsoft::Json::NullValueHandling>)>(&Newtonsoft::Json::Serialization::JsonProperty::set_NullValueHandling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "NullValueHandling")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_NullValueHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_DefaultValueHandling
// Il2CppName: get_DefaultValueHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling> (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_DefaultValueHandling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_DefaultValueHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_DefaultValueHandling
// Il2CppName: set_DefaultValueHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::System::Nullable_1<::Newtonsoft::Json::DefaultValueHandling>)>(&Newtonsoft::Json::Serialization::JsonProperty::set_DefaultValueHandling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "DefaultValueHandling")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_DefaultValueHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_ReferenceLoopHandling
// Il2CppName: get_ReferenceLoopHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_ReferenceLoopHandling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_ReferenceLoopHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_ReferenceLoopHandling
// Il2CppName: set_ReferenceLoopHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>)>(&Newtonsoft::Json::Serialization::JsonProperty::set_ReferenceLoopHandling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "ReferenceLoopHandling")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_ReferenceLoopHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_ObjectCreationHandling
// Il2CppName: get_ObjectCreationHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling> (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_ObjectCreationHandling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_ObjectCreationHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_ObjectCreationHandling
// Il2CppName: set_ObjectCreationHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::System::Nullable_1<::Newtonsoft::Json::ObjectCreationHandling>)>(&Newtonsoft::Json::Serialization::JsonProperty::set_ObjectCreationHandling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "ObjectCreationHandling")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_ObjectCreationHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_TypeNameHandling
// Il2CppName: get_TypeNameHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_TypeNameHandling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_TypeNameHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_TypeNameHandling
// Il2CppName: set_TypeNameHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>)>(&Newtonsoft::Json::Serialization::JsonProperty::set_TypeNameHandling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "TypeNameHandling")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_TypeNameHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_ShouldSerialize
// Il2CppName: get_ShouldSerialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Predicate_1<::Il2CppObject*>* (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_ShouldSerialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_ShouldSerialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_ShouldSerialize
// Il2CppName: set_ShouldSerialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::System::Predicate_1<::Il2CppObject*>*)>(&Newtonsoft::Json::Serialization::JsonProperty::set_ShouldSerialize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Predicate`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_ShouldSerialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_ShouldDeserialize
// Il2CppName: get_ShouldDeserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Predicate_1<::Il2CppObject*>* (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_ShouldDeserialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_ShouldDeserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_GetIsSpecified
// Il2CppName: get_GetIsSpecified
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Predicate_1<::Il2CppObject*>* (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_GetIsSpecified)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_GetIsSpecified", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_GetIsSpecified
// Il2CppName: set_GetIsSpecified
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::System::Predicate_1<::Il2CppObject*>*)>(&Newtonsoft::Json::Serialization::JsonProperty::set_GetIsSpecified)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Predicate`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_GetIsSpecified", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_SetIsSpecified
// Il2CppName: get_SetIsSpecified
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_2<::Il2CppObject*, ::Il2CppObject*>* (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_SetIsSpecified)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_SetIsSpecified", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_SetIsSpecified
// Il2CppName: set_SetIsSpecified
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::System::Action_2<::Il2CppObject*, ::Il2CppObject*>*)>(&Newtonsoft::Json::Serialization::JsonProperty::set_SetIsSpecified)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_SetIsSpecified", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_ItemConverter
// Il2CppName: get_ItemConverter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Newtonsoft::Json::JsonConverter* (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_ItemConverter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_ItemConverter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_ItemConverter
// Il2CppName: set_ItemConverter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::Newtonsoft::Json::JsonConverter*)>(&Newtonsoft::Json::Serialization::JsonProperty::set_ItemConverter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonConverter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_ItemConverter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_ItemIsReference
// Il2CppName: get_ItemIsReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<bool> (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_ItemIsReference)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_ItemIsReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_ItemIsReference
// Il2CppName: set_ItemIsReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::System::Nullable_1<bool>)>(&Newtonsoft::Json::Serialization::JsonProperty::set_ItemIsReference)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_ItemIsReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_ItemTypeNameHandling
// Il2CppName: get_ItemTypeNameHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling> (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_ItemTypeNameHandling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_ItemTypeNameHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_ItemTypeNameHandling
// Il2CppName: set_ItemTypeNameHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>)>(&Newtonsoft::Json::Serialization::JsonProperty::set_ItemTypeNameHandling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "TypeNameHandling")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_ItemTypeNameHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::get_ItemReferenceLoopHandling
// Il2CppName: get_ItemReferenceLoopHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling> (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::get_ItemReferenceLoopHandling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "get_ItemReferenceLoopHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::set_ItemReferenceLoopHandling
// Il2CppName: set_ItemReferenceLoopHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>)>(&Newtonsoft::Json::Serialization::JsonProperty::set_ItemReferenceLoopHandling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "ReferenceLoopHandling")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "set_ItemReferenceLoopHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::GetResolvedDefaultValue
// Il2CppName: GetResolvedDefaultValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::GetResolvedDefaultValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "GetResolvedDefaultValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::WritePropertyName
// Il2CppName: WritePropertyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Newtonsoft::Json::Serialization::JsonProperty::*)(::Newtonsoft::Json::JsonWriter*)>(&Newtonsoft::Json::Serialization::JsonProperty::WritePropertyName)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json", "JsonWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "WritePropertyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer});
  }
};
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonProperty::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Newtonsoft::Json::Serialization::JsonProperty::*)()>(&Newtonsoft::Json::Serialization::JsonProperty::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonProperty*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
