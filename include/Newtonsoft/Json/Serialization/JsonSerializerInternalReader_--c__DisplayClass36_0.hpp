// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Newtonsoft.Json.Serialization.JsonSerializerInternalReader
#include "Newtonsoft/Json/Serialization/JsonSerializerInternalReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Newtonsoft::Json::Serialization
namespace Newtonsoft::Json::Serialization {
  // Forward declaring type: JsonProperty
  class JsonProperty;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c__DisplayClass36_0);
DEFINE_IL2CPP_ARG_TYPE(::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c__DisplayClass36_0*, "Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/<>c__DisplayClass36_0");
// Type namespace: Newtonsoft.Json.Serialization
namespace Newtonsoft::Json::Serialization {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.<>c__DisplayClass36_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class JsonSerializerInternalReader::$$c__DisplayClass36_0 : public ::Il2CppObject {
    public:
    public:
    // public Newtonsoft.Json.Serialization.JsonProperty property
    // Size: 0x8
    // Offset: 0x10
    ::Newtonsoft::Json::Serialization::JsonProperty* property;
    // Field size check
    static_assert(sizeof(::Newtonsoft::Json::Serialization::JsonProperty*) == 0x8);
    public:
    // Creating conversion operator: operator ::Newtonsoft::Json::Serialization::JsonProperty*
    constexpr operator ::Newtonsoft::Json::Serialization::JsonProperty*() const noexcept {
      return property;
    }
    // Get instance field reference: public Newtonsoft.Json.Serialization.JsonProperty property
    [[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Serialization::JsonProperty*& dyn_property();
    // public System.Void .ctor()
    // Offset: 0x1E236BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonSerializerInternalReader::$$c__DisplayClass36_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c__DisplayClass36_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonSerializerInternalReader::$$c__DisplayClass36_0*, creationType>()));
    }
    // System.Boolean <CreateObjectUsingCreatorWithParameters>b__1(Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.CreatorPropertyContext p)
    // Offset: 0x1E241E8
    bool $CreateObjectUsingCreatorWithParameters$b__1(::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext* p);
  }; // Newtonsoft.Json.Serialization.JsonSerializerInternalReader/Newtonsoft.Json.Serialization.<>c__DisplayClass36_0
  #pragma pack(pop)
  static check_size<sizeof(JsonSerializerInternalReader::$$c__DisplayClass36_0), 16 + sizeof(::Newtonsoft::Json::Serialization::JsonProperty*)> __Newtonsoft_Json_Serialization_JsonSerializerInternalReader_$$c__DisplayClass36_0SizeCheck;
  static_assert(sizeof(JsonSerializerInternalReader::$$c__DisplayClass36_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c__DisplayClass36_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c__DisplayClass36_0::$CreateObjectUsingCreatorWithParameters$b__1
// Il2CppName: <CreateObjectUsingCreatorWithParameters>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c__DisplayClass36_0::*)(::Newtonsoft::Json::Serialization::JsonSerializerInternalReader::CreatorPropertyContext*)>(&Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c__DisplayClass36_0::$CreateObjectUsingCreatorWithParameters$b__1)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("Newtonsoft.Json.Serialization", "JsonSerializerInternalReader/CreatorPropertyContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Newtonsoft::Json::Serialization::JsonSerializerInternalReader::$$c__DisplayClass36_0*), "<CreateObjectUsingCreatorWithParameters>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p});
  }
};
