// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ICloneable
#include "System/ICloneable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: EncoderFallback
  class EncoderFallback;
  // Forward declaring type: DecoderFallback
  class DecoderFallback;
  // Forward declaring type: EncoderNLS
  class EncoderNLS;
  // Forward declaring type: DecoderNLS
  class DecoderNLS;
  // Forward declaring type: Decoder
  class Decoder;
  // Forward declaring type: Encoder
  class Encoder;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: CodePageDataItem
  class CodePageDataItem;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: StreamingContext
  struct StreamingContext;
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System.Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Text::Encoding);
DEFINE_IL2CPP_ARG_TYPE(::System::Text::Encoding*, "System.Text", "Encoding");
// Type namespace: System.Text
namespace System::Text {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: System.Text.Encoding
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: 1076D1C
  class Encoding : public ::Il2CppObject/*, public ::System::ICloneable*/ {
    public:
    // Nested type: ::System::Text::Encoding::DefaultEncoder
    class DefaultEncoder;
    // Nested type: ::System::Text::Encoding::DefaultDecoder
    class DefaultDecoder;
    // Nested type: ::System::Text::Encoding::EncodingCharBuffer
    class EncodingCharBuffer;
    // Nested type: ::System::Text::Encoding::EncodingByteBuffer
    class EncodingByteBuffer;
    public:
    // System.Int32 m_codePage
    // Size: 0x4
    // Offset: 0x10
    int m_codePage;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_codePage and: dataItem
    char __padding0[0x4] = {};
    // System.Globalization.CodePageDataItem dataItem
    // Size: 0x8
    // Offset: 0x18
    ::System::Globalization::CodePageDataItem* dataItem;
    // Field size check
    static_assert(sizeof(::System::Globalization::CodePageDataItem*) == 0x8);
    // System.Boolean m_deserializedFromEverett
    // Size: 0x1
    // Offset: 0x20
    bool m_deserializedFromEverett;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [OptionalFieldAttribute] Offset: 0x107CF44
    // private System.Boolean m_isReadOnly
    // Size: 0x1
    // Offset: 0x21
    bool m_isReadOnly;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_isReadOnly and: encoderFallback
    char __padding3[0x6] = {};
    // [OptionalFieldAttribute] Offset: 0x107CF7C
    // System.Text.EncoderFallback encoderFallback
    // Size: 0x8
    // Offset: 0x28
    ::System::Text::EncoderFallback* encoderFallback;
    // Field size check
    static_assert(sizeof(::System::Text::EncoderFallback*) == 0x8);
    // [OptionalFieldAttribute] Offset: 0x107CFB4
    // System.Text.DecoderFallback decoderFallback
    // Size: 0x8
    // Offset: 0x30
    ::System::Text::DecoderFallback* decoderFallback;
    // Field size check
    static_assert(sizeof(::System::Text::DecoderFallback*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::ICloneable
    operator ::System::ICloneable() noexcept {
      return *reinterpret_cast<::System::ICloneable*>(this);
    }
    // Creating interface conversion operator: i_ICloneable
    inline ::System::ICloneable* i_ICloneable() noexcept {
      return reinterpret_cast<::System::ICloneable*>(this);
    }
    // Get static field: static private System.Text.Encoding defaultEncoding
    static ::System::Text::Encoding* _get_defaultEncoding();
    // Set static field: static private System.Text.Encoding defaultEncoding
    static void _set_defaultEncoding(::System::Text::Encoding* value);
    // Get static field: static private System.Text.Encoding unicodeEncoding
    static ::System::Text::Encoding* _get_unicodeEncoding();
    // Set static field: static private System.Text.Encoding unicodeEncoding
    static void _set_unicodeEncoding(::System::Text::Encoding* value);
    // Get static field: static private System.Text.Encoding bigEndianUnicode
    static ::System::Text::Encoding* _get_bigEndianUnicode();
    // Set static field: static private System.Text.Encoding bigEndianUnicode
    static void _set_bigEndianUnicode(::System::Text::Encoding* value);
    // Get static field: static private System.Text.Encoding utf7Encoding
    static ::System::Text::Encoding* _get_utf7Encoding();
    // Set static field: static private System.Text.Encoding utf7Encoding
    static void _set_utf7Encoding(::System::Text::Encoding* value);
    // Get static field: static private System.Text.Encoding utf8Encoding
    static ::System::Text::Encoding* _get_utf8Encoding();
    // Set static field: static private System.Text.Encoding utf8Encoding
    static void _set_utf8Encoding(::System::Text::Encoding* value);
    // Get static field: static private System.Text.Encoding utf32Encoding
    static ::System::Text::Encoding* _get_utf32Encoding();
    // Set static field: static private System.Text.Encoding utf32Encoding
    static void _set_utf32Encoding(::System::Text::Encoding* value);
    // Get static field: static private System.Text.Encoding asciiEncoding
    static ::System::Text::Encoding* _get_asciiEncoding();
    // Set static field: static private System.Text.Encoding asciiEncoding
    static void _set_asciiEncoding(::System::Text::Encoding* value);
    // Get static field: static private System.Text.Encoding latin1Encoding
    static ::System::Text::Encoding* _get_latin1Encoding();
    // Set static field: static private System.Text.Encoding latin1Encoding
    static void _set_latin1Encoding(::System::Text::Encoding* value);
    // Get static field: static private System.Collections.Hashtable encodings
    static ::System::Collections::Hashtable* _get_encodings();
    // Set static field: static private System.Collections.Hashtable encodings
    static void _set_encodings(::System::Collections::Hashtable* value);
    // Get static field: static private System.Object s_InternalSyncObject
    static ::Il2CppObject* _get_s_InternalSyncObject();
    // Set static field: static private System.Object s_InternalSyncObject
    static void _set_s_InternalSyncObject(::Il2CppObject* value);
    // Get instance field reference: System.Int32 m_codePage
    [[deprecated("Use field access instead!")]] int& dyn_m_codePage();
    // Get instance field reference: System.Globalization.CodePageDataItem dataItem
    [[deprecated("Use field access instead!")]] ::System::Globalization::CodePageDataItem*& dyn_dataItem();
    // Get instance field reference: System.Boolean m_deserializedFromEverett
    [[deprecated("Use field access instead!")]] bool& dyn_m_deserializedFromEverett();
    // Get instance field reference: private System.Boolean m_isReadOnly
    [[deprecated("Use field access instead!")]] bool& dyn_m_isReadOnly();
    // Get instance field reference: System.Text.EncoderFallback encoderFallback
    [[deprecated("Use field access instead!")]] ::System::Text::EncoderFallback*& dyn_encoderFallback();
    // Get instance field reference: System.Text.DecoderFallback decoderFallback
    [[deprecated("Use field access instead!")]] ::System::Text::DecoderFallback*& dyn_decoderFallback();
    // static private System.Object get_InternalSyncObject()
    // Offset: 0x1F7DEF0
    static ::Il2CppObject* get_InternalSyncObject();
    // public System.String get_EncodingName()
    // Offset: 0x1F7FAF4
    ::StringW get_EncodingName();
    // public System.String get_WebName()
    // Offset: 0x1F7FB00
    ::StringW get_WebName();
    // public System.Text.EncoderFallback get_EncoderFallback()
    // Offset: 0x1F7FB3C
    ::System::Text::EncoderFallback* get_EncoderFallback();
    // public System.Void set_EncoderFallback(System.Text.EncoderFallback value)
    // Offset: 0x1F7F5DC
    void set_EncoderFallback(::System::Text::EncoderFallback* value);
    // public System.Text.DecoderFallback get_DecoderFallback()
    // Offset: 0x1F7FB44
    ::System::Text::DecoderFallback* get_DecoderFallback();
    // public System.Void set_DecoderFallback(System.Text.DecoderFallback value)
    // Offset: 0x1F7F6C4
    void set_DecoderFallback(::System::Text::DecoderFallback* value);
    // public System.Boolean get_IsReadOnly()
    // Offset: 0x1F7FBDC
    bool get_IsReadOnly();
    // static public System.Text.Encoding get_ASCII()
    // Offset: 0x1F756B8
    static ::System::Text::Encoding* get_ASCII();
    // static private System.Text.Encoding get_Latin1()
    // Offset: 0x1F7ED04
    static ::System::Text::Encoding* get_Latin1();
    // public System.Int32 get_CodePage()
    // Offset: 0x1F8076C
    int get_CodePage();
    // static public System.Text.Encoding get_Default()
    // Offset: 0x1F7E944
    static ::System::Text::Encoding* get_Default();
    // static public System.Text.Encoding get_Unicode()
    // Offset: 0x1F7E9C8
    static ::System::Text::Encoding* get_Unicode();
    // static public System.Text.Encoding get_BigEndianUnicode()
    // Offset: 0x1F7EA70
    static ::System::Text::Encoding* get_BigEndianUnicode();
    // static public System.Text.Encoding get_UTF7()
    // Offset: 0x1F7EB18
    static ::System::Text::Encoding* get_UTF7();
    // static public System.Text.Encoding get_UTF8()
    // Offset: 0x1F7EC60
    static ::System::Text::Encoding* get_UTF8();
    // static public System.Text.Encoding get_UTF32()
    // Offset: 0x1F7EBB8
    static ::System::Text::Encoding* get_UTF32();
    // protected System.Void .ctor(System.Int32 codePage)
    // Offset: 0x1F75760
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Encoding* New_ctor(int codePage) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Encoding*, creationType>(codePage)));
    }
    // System.Void SetDefaultFallbacks()
    // Offset: 0x1F7D8B0
    void SetDefaultFallbacks();
    // System.Void OnDeserializing()
    // Offset: 0x1F7D9C4
    void OnDeserializing();
    // System.Void OnDeserialized()
    // Offset: 0x1F7D9D4
    void OnDeserialized();
    // private System.Void OnDeserializing(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x1F7DA1C
    void OnDeserializing(::System::Runtime::Serialization::StreamingContext ctx);
    // private System.Void OnDeserialized(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x1F7DA2C
    void OnDeserialized(::System::Runtime::Serialization::StreamingContext ctx);
    // private System.Void OnSerializing(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x1F7DA74
    void OnSerializing(::System::Runtime::Serialization::StreamingContext ctx);
    // System.Void DeserializeEncoding(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1F7DA7C
    void DeserializeEncoding(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context);
    // System.Void SerializeEncoding(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1F7DDA4
    void SerializeEncoding(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context);
    // static public System.Text.Encoding GetEncoding(System.Int32 codepage)
    // Offset: 0x1F7DF84
    static ::System::Text::Encoding* GetEncoding(int codepage);
    // static public System.Text.Encoding GetEncoding(System.Int32 codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback)
    // Offset: 0x1F7F3BC
    static ::System::Text::Encoding* GetEncoding(int codepage, ::System::Text::EncoderFallback* encoderFallback, ::System::Text::DecoderFallback* decoderFallback);
    // static public System.Text.Encoding GetEncoding(System.String name)
    // Offset: 0x1F7F7AC
    static ::System::Text::Encoding* GetEncoding(::StringW name);
    // public System.Byte[] GetPreamble()
    // Offset: 0x1F7F954
    ::ArrayW<uint8_t> GetPreamble();
    // private System.Void GetDataItem()
    // Offset: 0x1F7F9BC
    void GetDataItem();
    // public System.Object Clone()
    // Offset: 0x1F7FB4C
    ::Il2CppObject* Clone();
    // public System.Int32 GetByteCount(System.String s)
    // Offset: 0x1F7FBEC
    int GetByteCount(::StringW s);
    // public System.Int32 GetByteCount(System.Char[] chars, System.Int32 index, System.Int32 count)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetByteCount(::ArrayW<::Il2CppChar> chars, int index, int count);
    // public System.Int32 GetByteCount(System.Char* chars, System.Int32 count)
    // Offset: 0x1F7FCA4
    int GetByteCount(::Il2CppChar* chars, int count);
    // System.Int32 GetByteCount(System.Char* chars, System.Int32 count, System.Text.EncoderNLS encoder)
    // Offset: 0x1F7FE14
    int GetByteCount(::Il2CppChar* chars, int count, ::System::Text::EncoderNLS* encoder);
    // public System.Byte[] GetBytes(System.Char[] chars, System.Int32 index, System.Int32 count)
    // Offset: 0x1F7FE20
    ::ArrayW<uint8_t> GetBytes(::ArrayW<::Il2CppChar> chars, int index, int count);
    // public System.Int32 GetBytes(System.Char[] chars, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetBytes(::ArrayW<::Il2CppChar> chars, int charIndex, int charCount, ::ArrayW<uint8_t> bytes, int byteIndex);
    // public System.Byte[] GetBytes(System.String s)
    // Offset: 0x1F7FEE0
    ::ArrayW<uint8_t> GetBytes(::StringW s);
    // public System.Int32 GetBytes(System.String s, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)
    // Offset: 0x1F7FFE8
    int GetBytes(::StringW s, int charIndex, int charCount, ::ArrayW<uint8_t> bytes, int byteIndex);
    // System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount, System.Text.EncoderNLS encoder)
    // Offset: 0x1F800C4
    int GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount, ::System::Text::EncoderNLS* encoder);
    // public System.Int32 GetBytes(System.Char* chars, System.Int32 charCount, System.Byte* bytes, System.Int32 byteCount)
    // Offset: 0x1F800D4
    int GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount);
    // public System.Int32 GetCharCount(System.Byte[] bytes, System.Int32 index, System.Int32 count)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetCharCount(::ArrayW<uint8_t> bytes, int index, int count);
    // public System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count)
    // Offset: 0x1F802F4
    int GetCharCount(uint8_t* bytes, int count);
    // System.Int32 GetCharCount(System.Byte* bytes, System.Int32 count, System.Text.DecoderNLS decoder)
    // Offset: 0x1F80468
    int GetCharCount(uint8_t* bytes, int count, ::System::Text::DecoderNLS* decoder);
    // public System.Char[] GetChars(System.Byte[] bytes, System.Int32 index, System.Int32 count)
    // Offset: 0x1F80478
    ::ArrayW<::Il2CppChar> GetChars(::ArrayW<uint8_t> bytes, int index, int count);
    // public System.Int32 GetChars(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount, System.Char[] chars, System.Int32 charIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex);
    // public System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount)
    // Offset: 0x1F8053C
    int GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount);
    // System.Int32 GetChars(System.Byte* bytes, System.Int32 byteCount, System.Char* chars, System.Int32 charCount, System.Text.DecoderNLS decoder)
    // Offset: 0x1F8075C
    int GetChars(uint8_t* bytes, int byteCount, ::Il2CppChar* chars, int charCount, ::System::Text::DecoderNLS* decoder);
    // public System.Text.Decoder GetDecoder()
    // Offset: 0x1F80774
    ::System::Text::Decoder* GetDecoder();
    // static private System.Text.Encoding CreateDefaultEncoding()
    // Offset: 0x1F80814
    static ::System::Text::Encoding* CreateDefaultEncoding();
    // System.Void setReadOnly(System.Boolean value)
    // Offset: 0x1F80A20
    void setReadOnly(bool value);
    // public System.Text.Encoder GetEncoder()
    // Offset: 0x1F80A2C
    ::System::Text::Encoder* GetEncoder();
    // public System.Int32 GetMaxByteCount(System.Int32 charCount)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetMaxByteCount(int charCount);
    // public System.Int32 GetMaxCharCount(System.Int32 byteCount)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int GetMaxCharCount(int byteCount);
    // public System.String GetString(System.Byte[] bytes)
    // Offset: 0x1F80ACC
    ::StringW GetString(::ArrayW<uint8_t> bytes);
    // public System.String GetString(System.Byte[] bytes, System.Int32 index, System.Int32 count)
    // Offset: 0x1F80B94
    ::StringW GetString(::ArrayW<uint8_t> bytes, int index, int count);
    // System.Char[] GetBestFitUnicodeToBytesData()
    // Offset: 0x1F80D00
    ::ArrayW<::Il2CppChar> GetBestFitUnicodeToBytesData();
    // System.Char[] GetBestFitBytesToUnicodeData()
    // Offset: 0x1F80D68
    ::ArrayW<::Il2CppChar> GetBestFitBytesToUnicodeData();
    // System.Void ThrowBytesOverflow()
    // Offset: 0x1F80DD0
    void ThrowBytesOverflow();
    // System.Void ThrowBytesOverflow(System.Text.EncoderNLS encoder, System.Boolean nothingEncoded)
    // Offset: 0x1F775E4
    void ThrowBytesOverflow(::System::Text::EncoderNLS* encoder, bool nothingEncoded);
    // System.Void ThrowCharsOverflow()
    // Offset: 0x1F80EF8
    void ThrowCharsOverflow();
    // System.Void ThrowCharsOverflow(System.Text.DecoderNLS decoder, System.Boolean nothingDecoded)
    // Offset: 0x1F77AC0
    void ThrowCharsOverflow(::System::Text::DecoderNLS* decoder, bool nothingDecoded);
    // protected System.Void .ctor()
    // Offset: 0x1F7D8A8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Encoding* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::Encoding::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Encoding*, creationType>()));
    }
    // public override System.Boolean Equals(System.Object value)
    // Offset: 0x1F80BC0
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object value)
    bool Equals(::Il2CppObject* value);
    // public override System.Int32 GetHashCode()
    // Offset: 0x1F80CA4
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
  }; // System.Text.Encoding
  #pragma pack(pop)
  static check_size<sizeof(Encoding), 48 + sizeof(::System::Text::DecoderFallback*)> __System_Text_EncodingSizeCheck;
  static_assert(sizeof(Encoding) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Text::Encoding::get_InternalSyncObject
// Il2CppName: get_InternalSyncObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)()>(&System::Text::Encoding::get_InternalSyncObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_InternalSyncObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_EncodingName
// Il2CppName: get_EncodingName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Text::Encoding::*)()>(&System::Text::Encoding::get_EncodingName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_EncodingName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_WebName
// Il2CppName: get_WebName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Text::Encoding::*)()>(&System::Text::Encoding::get_WebName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_WebName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_EncoderFallback
// Il2CppName: get_EncoderFallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::EncoderFallback* (System::Text::Encoding::*)()>(&System::Text::Encoding::get_EncoderFallback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_EncoderFallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::set_EncoderFallback
// Il2CppName: set_EncoderFallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Text::EncoderFallback*)>(&System::Text::Encoding::set_EncoderFallback)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Text", "EncoderFallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "set_EncoderFallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_DecoderFallback
// Il2CppName: get_DecoderFallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::DecoderFallback* (System::Text::Encoding::*)()>(&System::Text::Encoding::get_DecoderFallback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_DecoderFallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::set_DecoderFallback
// Il2CppName: set_DecoderFallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Text::DecoderFallback*)>(&System::Text::Encoding::set_DecoderFallback)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Text", "DecoderFallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "set_DecoderFallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_IsReadOnly
// Il2CppName: get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Text::Encoding::*)()>(&System::Text::Encoding::get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_ASCII
// Il2CppName: get_ASCII
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::get_ASCII)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_ASCII", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_Latin1
// Il2CppName: get_Latin1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::get_Latin1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_Latin1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_CodePage
// Il2CppName: get_CodePage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)()>(&System::Text::Encoding::get_CodePage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_CodePage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_Default
// Il2CppName: get_Default
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::get_Default)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_Default", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_Unicode
// Il2CppName: get_Unicode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::get_Unicode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_Unicode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_BigEndianUnicode
// Il2CppName: get_BigEndianUnicode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::get_BigEndianUnicode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_BigEndianUnicode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_UTF7
// Il2CppName: get_UTF7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::get_UTF7)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_UTF7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_UTF8
// Il2CppName: get_UTF8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::get_UTF8)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_UTF8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::get_UTF32
// Il2CppName: get_UTF32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::get_UTF32)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "get_UTF32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Text::Encoding::SetDefaultFallbacks
// Il2CppName: SetDefaultFallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)()>(&System::Text::Encoding::SetDefaultFallbacks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "SetDefaultFallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::OnDeserializing
// Il2CppName: OnDeserializing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)()>(&System::Text::Encoding::OnDeserializing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "OnDeserializing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::OnDeserialized
// Il2CppName: OnDeserialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)()>(&System::Text::Encoding::OnDeserialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "OnDeserialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::OnDeserializing
// Il2CppName: OnDeserializing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Runtime::Serialization::StreamingContext)>(&System::Text::Encoding::OnDeserializing)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "OnDeserializing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::OnDeserialized
// Il2CppName: OnDeserialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Runtime::Serialization::StreamingContext)>(&System::Text::Encoding::OnDeserialized)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "OnDeserialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::OnSerializing
// Il2CppName: OnSerializing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Runtime::Serialization::StreamingContext)>(&System::Text::Encoding::OnSerializing)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "OnSerializing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::DeserializeEncoding
// Il2CppName: DeserializeEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Text::Encoding::DeserializeEncoding)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "DeserializeEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::SerializeEncoding
// Il2CppName: SerializeEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Text::Encoding::SerializeEncoding)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "SerializeEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetEncoding
// Il2CppName: GetEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)(int)>(&System::Text::Encoding::GetEncoding)> {
  static const MethodInfo* get() {
    static auto* codepage = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{codepage});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetEncoding
// Il2CppName: GetEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)(int, ::System::Text::EncoderFallback*, ::System::Text::DecoderFallback*)>(&System::Text::Encoding::GetEncoding)> {
  static const MethodInfo* get() {
    static auto* codepage = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* encoderFallback = &::il2cpp_utils::GetClassFromName("System.Text", "EncoderFallback")->byval_arg;
    static auto* decoderFallback = &::il2cpp_utils::GetClassFromName("System.Text", "DecoderFallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{codepage, encoderFallback, decoderFallback});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetEncoding
// Il2CppName: GetEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)(::StringW)>(&System::Text::Encoding::GetEncoding)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetPreamble
// Il2CppName: GetPreamble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Text::Encoding::*)()>(&System::Text::Encoding::GetPreamble)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetPreamble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetDataItem
// Il2CppName: GetDataItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)()>(&System::Text::Encoding::GetDataItem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetDataItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Text::Encoding::*)()>(&System::Text::Encoding::Clone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::StringW)>(&System::Text::Encoding::GetByteCount)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::ArrayW<::Il2CppChar>, int, int)>(&System::Text::Encoding::GetByteCount)> {
  static const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars, index, count});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::Il2CppChar*, int)>(&System::Text::Encoding::GetByteCount)> {
  static const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars, count});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::Il2CppChar*, int, ::System::Text::EncoderNLS*)>(&System::Text::Encoding::GetByteCount)> {
  static const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* encoder = &::il2cpp_utils::GetClassFromName("System.Text", "EncoderNLS")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars, count, encoder});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Text::Encoding::*)(::ArrayW<::Il2CppChar>, int, int)>(&System::Text::Encoding::GetBytes)> {
  static const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars, index, count});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::ArrayW<::Il2CppChar>, int, int, ::ArrayW<uint8_t>, int)>(&System::Text::Encoding::GetBytes)> {
  static const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    static auto* charIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* charCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* byteIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars, charIndex, charCount, bytes, byteIndex});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Text::Encoding::*)(::StringW)>(&System::Text::Encoding::GetBytes)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::StringW, int, int, ::ArrayW<uint8_t>, int)>(&System::Text::Encoding::GetBytes)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* charIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* charCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* byteIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, charIndex, charCount, bytes, byteIndex});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::Il2CppChar*, int, uint8_t*, int, ::System::Text::EncoderNLS*)>(&System::Text::Encoding::GetBytes)> {
  static const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* charCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bytes = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* byteCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* encoder = &::il2cpp_utils::GetClassFromName("System.Text", "EncoderNLS")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars, charCount, bytes, byteCount, encoder});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::Il2CppChar*, int, uint8_t*, int)>(&System::Text::Encoding::GetBytes)> {
  static const MethodInfo* get() {
    static auto* chars = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* charCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bytes = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* byteCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chars, charCount, bytes, byteCount});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::ArrayW<uint8_t>, int, int)>(&System::Text::Encoding::GetCharCount)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, index, count});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(uint8_t*, int)>(&System::Text::Encoding::GetCharCount)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, count});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetCharCount
// Il2CppName: GetCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(uint8_t*, int, ::System::Text::DecoderNLS*)>(&System::Text::Encoding::GetCharCount)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* decoder = &::il2cpp_utils::GetClassFromName("System.Text", "DecoderNLS")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, count, decoder});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppChar> (System::Text::Encoding::*)(::ArrayW<uint8_t>, int, int)>(&System::Text::Encoding::GetChars)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, index, count});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(::ArrayW<uint8_t>, int, int, ::ArrayW<::Il2CppChar>, int)>(&System::Text::Encoding::GetChars)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* byteIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* byteCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* chars = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    static auto* charIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, byteIndex, byteCount, chars, charIndex});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(uint8_t*, int, ::Il2CppChar*, int)>(&System::Text::Encoding::GetChars)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* byteCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* chars = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* charCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, byteCount, chars, charCount});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetChars
// Il2CppName: GetChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(uint8_t*, int, ::Il2CppChar*, int, ::System::Text::DecoderNLS*)>(&System::Text::Encoding::GetChars)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* byteCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* chars = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* charCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* decoder = &::il2cpp_utils::GetClassFromName("System.Text", "DecoderNLS")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, byteCount, chars, charCount, decoder});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetDecoder
// Il2CppName: GetDecoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Decoder* (System::Text::Encoding::*)()>(&System::Text::Encoding::GetDecoder)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetDecoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::CreateDefaultEncoding
// Il2CppName: CreateDefaultEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)()>(&System::Text::Encoding::CreateDefaultEncoding)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "CreateDefaultEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::setReadOnly
// Il2CppName: setReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(bool)>(&System::Text::Encoding::setReadOnly)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "setReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetEncoder
// Il2CppName: GetEncoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoder* (System::Text::Encoding::*)()>(&System::Text::Encoding::GetEncoder)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetEncoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetMaxByteCount
// Il2CppName: GetMaxByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(int)>(&System::Text::Encoding::GetMaxByteCount)> {
  static const MethodInfo* get() {
    static auto* charCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetMaxByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{charCount});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetMaxCharCount
// Il2CppName: GetMaxCharCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)(int)>(&System::Text::Encoding::GetMaxCharCount)> {
  static const MethodInfo* get() {
    static auto* byteCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetMaxCharCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{byteCount});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Text::Encoding::*)(::ArrayW<uint8_t>)>(&System::Text::Encoding::GetString)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Text::Encoding::*)(::ArrayW<uint8_t>, int, int)>(&System::Text::Encoding::GetString)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, index, count});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBestFitUnicodeToBytesData
// Il2CppName: GetBestFitUnicodeToBytesData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppChar> (System::Text::Encoding::*)()>(&System::Text::Encoding::GetBestFitUnicodeToBytesData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBestFitUnicodeToBytesData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetBestFitBytesToUnicodeData
// Il2CppName: GetBestFitBytesToUnicodeData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppChar> (System::Text::Encoding::*)()>(&System::Text::Encoding::GetBestFitBytesToUnicodeData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetBestFitBytesToUnicodeData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::ThrowBytesOverflow
// Il2CppName: ThrowBytesOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)()>(&System::Text::Encoding::ThrowBytesOverflow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "ThrowBytesOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::ThrowBytesOverflow
// Il2CppName: ThrowBytesOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Text::EncoderNLS*, bool)>(&System::Text::Encoding::ThrowBytesOverflow)> {
  static const MethodInfo* get() {
    static auto* encoder = &::il2cpp_utils::GetClassFromName("System.Text", "EncoderNLS")->byval_arg;
    static auto* nothingEncoded = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "ThrowBytesOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{encoder, nothingEncoded});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::ThrowCharsOverflow
// Il2CppName: ThrowCharsOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)()>(&System::Text::Encoding::ThrowCharsOverflow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "ThrowCharsOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::ThrowCharsOverflow
// Il2CppName: ThrowCharsOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::Encoding::*)(::System::Text::DecoderNLS*, bool)>(&System::Text::Encoding::ThrowCharsOverflow)> {
  static const MethodInfo* get() {
    static auto* decoder = &::il2cpp_utils::GetClassFromName("System.Text", "DecoderNLS")->byval_arg;
    static auto* nothingDecoded = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "ThrowCharsOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{decoder, nothingDecoded});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Text::Encoding::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Text::Encoding::*)(::Il2CppObject*)>(&System::Text::Encoding::Equals)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::Encoding::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::Encoding::*)()>(&System::Text::Encoding::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::Encoding*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
