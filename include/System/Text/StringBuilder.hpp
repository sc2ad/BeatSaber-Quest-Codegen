// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Runtime.Serialization.ISerializable
#include "System/Runtime/Serialization/ISerializable.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: IFormatProvider
  class IFormatProvider;
  // Forward declaring type: ParamsArray
  struct ParamsArray;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System.Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Text::StringBuilder);
DEFINE_IL2CPP_ARG_TYPE(::System::Text::StringBuilder*, "System.Text", "StringBuilder");
// Type namespace: System.Text
namespace System::Text {
  // Size: 0x2C
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Text.StringBuilder
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: 1039024
  // [DefaultMemberAttribute] Offset: 1039024
  class StringBuilder : public ::Il2CppObject/*, public ::System::Runtime::Serialization::ISerializable*/ {
    public:
    public:
    // System.Char[] m_ChunkChars
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::Il2CppChar> m_ChunkChars;
    // Field size check
    static_assert(sizeof(::ArrayW<::Il2CppChar>) == 0x8);
    // System.Text.StringBuilder m_ChunkPrevious
    // Size: 0x8
    // Offset: 0x18
    ::System::Text::StringBuilder* m_ChunkPrevious;
    // Field size check
    static_assert(sizeof(::System::Text::StringBuilder*) == 0x8);
    // System.Int32 m_ChunkLength
    // Size: 0x4
    // Offset: 0x20
    int m_ChunkLength;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 m_ChunkOffset
    // Size: 0x4
    // Offset: 0x24
    int m_ChunkOffset;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 m_MaxCapacity
    // Size: 0x4
    // Offset: 0x28
    int m_MaxCapacity;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating interface conversion operator: operator ::System::Runtime::Serialization::ISerializable
    operator ::System::Runtime::Serialization::ISerializable() noexcept {
      return *reinterpret_cast<::System::Runtime::Serialization::ISerializable*>(this);
    }
    // Creating interface conversion operator: i_ISerializable
    inline ::System::Runtime::Serialization::ISerializable* i_ISerializable() noexcept {
      return reinterpret_cast<::System::Runtime::Serialization::ISerializable*>(this);
    }
    // static field const value: static System.Int32 DefaultCapacity
    static constexpr const int DefaultCapacity = 16;
    // Get static field: static System.Int32 DefaultCapacity
    static int _get_DefaultCapacity();
    // Set static field: static System.Int32 DefaultCapacity
    static void _set_DefaultCapacity(int value);
    // static field const value: static private System.String CapacityField
    static constexpr const char* CapacityField = "Capacity";
    // Get static field: static private System.String CapacityField
    static ::StringW _get_CapacityField();
    // Set static field: static private System.String CapacityField
    static void _set_CapacityField(::StringW value);
    // static field const value: static private System.String MaxCapacityField
    static constexpr const char* MaxCapacityField = "m_MaxCapacity";
    // Get static field: static private System.String MaxCapacityField
    static ::StringW _get_MaxCapacityField();
    // Set static field: static private System.String MaxCapacityField
    static void _set_MaxCapacityField(::StringW value);
    // static field const value: static private System.String StringValueField
    static constexpr const char* StringValueField = "m_StringValue";
    // Get static field: static private System.String StringValueField
    static ::StringW _get_StringValueField();
    // Set static field: static private System.String StringValueField
    static void _set_StringValueField(::StringW value);
    // static field const value: static private System.String ThreadIDField
    static constexpr const char* ThreadIDField = "m_currentThread";
    // Get static field: static private System.String ThreadIDField
    static ::StringW _get_ThreadIDField();
    // Set static field: static private System.String ThreadIDField
    static void _set_ThreadIDField(::StringW value);
    // static field const value: static System.Int32 MaxChunkSize
    static constexpr const int MaxChunkSize = 8000;
    // Get static field: static System.Int32 MaxChunkSize
    static int _get_MaxChunkSize();
    // Set static field: static System.Int32 MaxChunkSize
    static void _set_MaxChunkSize(int value);
    // Get instance field reference: System.Char[] m_ChunkChars
    [[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& dyn_m_ChunkChars();
    // Get instance field reference: System.Text.StringBuilder m_ChunkPrevious
    [[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& dyn_m_ChunkPrevious();
    // Get instance field reference: System.Int32 m_ChunkLength
    [[deprecated("Use field access instead!")]] int& dyn_m_ChunkLength();
    // Get instance field reference: System.Int32 m_ChunkOffset
    [[deprecated("Use field access instead!")]] int& dyn_m_ChunkOffset();
    // Get instance field reference: System.Int32 m_MaxCapacity
    [[deprecated("Use field access instead!")]] int& dyn_m_MaxCapacity();
    // public System.Int32 get_Capacity()
    // Offset: 0x207D238
    int get_Capacity();
    // public System.Void set_Capacity(System.Int32 value)
    // Offset: 0x207D25C
    void set_Capacity(int value);
    // public System.Int32 get_MaxCapacity()
    // Offset: 0x207D38C
    int get_MaxCapacity();
    // public System.Int32 get_Length()
    // Offset: 0x207B968
    int get_Length();
    // public System.Void set_Length(System.Int32 value)
    // Offset: 0x207D834
    void set_Length(int value);
    // public System.Char get_Chars(System.Int32 index)
    // Offset: 0x207B64C
    ::Il2CppChar get_Chars(int index);
    // public System.Void set_Chars(System.Int32 index, System.Char value)
    // Offset: 0x207B9B0
    void set_Chars(int index, ::Il2CppChar value);
    // public System.Void .ctor(System.Int32 capacity)
    // Offset: 0x207B308
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StringBuilder* New_ctor(int capacity) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::StringBuilder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StringBuilder*, creationType>(capacity)));
    }
    // public System.Void .ctor(System.String value)
    // Offset: 0x207CB04
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StringBuilder* New_ctor(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::StringBuilder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StringBuilder*, creationType>(value)));
    }
    // public System.Void .ctor(System.String value, System.Int32 capacity)
    // Offset: 0x207CAD8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StringBuilder* New_ctor(::StringW value, int capacity) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::StringBuilder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StringBuilder*, creationType>(value, capacity)));
    }
    // public System.Void .ctor(System.String value, System.Int32 startIndex, System.Int32 length, System.Int32 capacity)
    // Offset: 0x207CB0C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StringBuilder* New_ctor(::StringW value, int startIndex, int length, int capacity) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::StringBuilder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StringBuilder*, creationType>(value, startIndex, length, capacity)));
    }
    // private System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x207CE78
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StringBuilder* New_ctor(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::StringBuilder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StringBuilder*, creationType>(info, context)));
    }
    // private System.Void .ctor(System.Text.StringBuilder from)
    // Offset: 0x2080004
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StringBuilder* New_ctor(::System::Text::StringBuilder* from) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::StringBuilder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StringBuilder*, creationType>(from)));
    }
    // private System.Void .ctor(System.Int32 size, System.Int32 maxCapacity, System.Text.StringBuilder previousBlock)
    // Offset: 0x208005C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StringBuilder* New_ctor(int size, int maxCapacity, ::System::Text::StringBuilder* previousBlock) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::StringBuilder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StringBuilder*, creationType>(size, maxCapacity, previousBlock)));
    }
    // private System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x207D11C
    void System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context);
    // public System.Int32 EnsureCapacity(System.Int32 capacity)
    // Offset: 0x207D394
    int EnsureCapacity(int capacity);
    // public System.String ToString(System.Int32 startIndex, System.Int32 length)
    // Offset: 0x207D5CC
    ::StringW ToString(int startIndex, int length);
    // public System.Text.StringBuilder Clear()
    // Offset: 0x207D80C
    ::System::Text::StringBuilder* Clear();
    // public System.Text.StringBuilder Append(System.Char value, System.Int32 repeatCount)
    // Offset: 0x207D9D0
    ::System::Text::StringBuilder* Append(::Il2CppChar value, int repeatCount);
    // public System.Text.StringBuilder Append(System.Char[] value, System.Int32 startIndex, System.Int32 charCount)
    // Offset: 0x207DCB4
    ::System::Text::StringBuilder* Append(::ArrayW<::Il2CppChar> value, int startIndex, int charCount);
    // public System.Text.StringBuilder Append(System.String value)
    // Offset: 0x207B370
    ::System::Text::StringBuilder* Append(::StringW value);
    // private System.Void AppendHelper(System.String value)
    // Offset: 0x207DF98
    void AppendHelper(::StringW value);
    // public System.Text.StringBuilder Append(System.String value, System.Int32 startIndex, System.Int32 count)
    // Offset: 0x207BFF0
    ::System::Text::StringBuilder* Append(::StringW value, int startIndex, int count);
    // public System.Text.StringBuilder AppendLine()
    // Offset: 0x207DFD4
    ::System::Text::StringBuilder* AppendLine();
    // public System.Text.StringBuilder AppendLine(System.String value)
    // Offset: 0x207E000
    ::System::Text::StringBuilder* AppendLine(::StringW value);
    // public System.Text.StringBuilder Insert(System.Int32 index, System.String value, System.Int32 count)
    // Offset: 0x207E030
    ::System::Text::StringBuilder* Insert(int index, ::StringW value, int count);
    // public System.Text.StringBuilder Remove(System.Int32 startIndex, System.Int32 length)
    // Offset: 0x207BAAC
    ::System::Text::StringBuilder* Remove(int startIndex, int length);
    // public System.Text.StringBuilder Append(System.Boolean value)
    // Offset: 0x207E6E8
    ::System::Text::StringBuilder* Append(bool value);
    // public System.Text.StringBuilder Append(System.Byte value)
    // Offset: 0x207E724
    ::System::Text::StringBuilder* Append(uint8_t value);
    // public System.Text.StringBuilder Append(System.Char value)
    // Offset: 0x207C604
    ::System::Text::StringBuilder* Append(::Il2CppChar value);
    // public System.Text.StringBuilder Append(System.Int32 value)
    // Offset: 0x207E7B4
    ::System::Text::StringBuilder* Append(int value);
    // public System.Text.StringBuilder Append(System.Int64 value)
    // Offset: 0x207E844
    ::System::Text::StringBuilder* Append(int64_t value);
    // public System.Text.StringBuilder Append(System.Double value)
    // Offset: 0x207E8D4
    ::System::Text::StringBuilder* Append(double value);
    // public System.Text.StringBuilder Append(System.Object value)
    // Offset: 0x207E964
    ::System::Text::StringBuilder* Append(::Il2CppObject* value);
    // public System.Text.StringBuilder Append(System.Char[] value)
    // Offset: 0x207E9B0
    ::System::Text::StringBuilder* Append(::ArrayW<::Il2CppChar> value);
    // public System.Text.StringBuilder Insert(System.Int32 index, System.String value)
    // Offset: 0x207E9E4
    ::System::Text::StringBuilder* Insert(int index, ::StringW value);
    // public System.Text.StringBuilder Insert(System.Int32 index, System.Char value)
    // Offset: 0x207EBD8
    ::System::Text::StringBuilder* Insert(int index, ::Il2CppChar value);
    // public System.Text.StringBuilder AppendFormat(System.String format, System.Object arg0)
    // Offset: 0x207EC08
    ::System::Text::StringBuilder* AppendFormat(::StringW format, ::Il2CppObject* arg0);
    // public System.Text.StringBuilder AppendFormat(System.String format, System.Object arg0, System.Object arg1)
    // Offset: 0x207F44C
    ::System::Text::StringBuilder* AppendFormat(::StringW format, ::Il2CppObject* arg0, ::Il2CppObject* arg1);
    // public System.Text.StringBuilder AppendFormat(System.String format, System.Object arg0, System.Object arg1, System.Object arg2)
    // Offset: 0x207F4AC
    ::System::Text::StringBuilder* AppendFormat(::StringW format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2);
    // public System.Text.StringBuilder AppendFormat(System.String format, params System.Object[] args)
    // Offset: 0x207F510
    ::System::Text::StringBuilder* AppendFormat(::StringW format, ::ArrayW<::Il2CppObject*> args);
    // public System.Text.StringBuilder AppendFormat(System.IFormatProvider provider, System.String format, System.Object arg0)
    // Offset: 0x207F5F0
    ::System::Text::StringBuilder* AppendFormat(::System::IFormatProvider* provider, ::StringW format, ::Il2CppObject* arg0);
    // public System.Text.StringBuilder AppendFormat(System.IFormatProvider provider, System.String format, System.Object arg0, System.Object arg1)
    // Offset: 0x207F658
    ::System::Text::StringBuilder* AppendFormat(::System::IFormatProvider* provider, ::StringW format, ::Il2CppObject* arg0, ::Il2CppObject* arg1);
    // public System.Text.StringBuilder AppendFormat(System.IFormatProvider provider, System.String format, System.Object arg0, System.Object arg1, System.Object arg2)
    // Offset: 0x207F6C4
    ::System::Text::StringBuilder* AppendFormat(::System::IFormatProvider* provider, ::StringW format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2);
    // public System.Text.StringBuilder AppendFormat(System.IFormatProvider provider, System.String format, params System.Object[] args)
    // Offset: 0x207F734
    ::System::Text::StringBuilder* AppendFormat(::System::IFormatProvider* provider, ::StringW format, ::ArrayW<::Il2CppObject*> args);
    // static private System.Void FormatError()
    // Offset: 0x207F820
    static void FormatError();
    // System.Text.StringBuilder AppendFormatHelper(System.IFormatProvider provider, System.String format, System.ParamsArray args)
    // Offset: 0x207EC64
    ::System::Text::StringBuilder* AppendFormatHelper(::System::IFormatProvider* provider, ::StringW format, ::System::ParamsArray args);
    // public System.Text.StringBuilder Replace(System.String oldValue, System.String newValue)
    // Offset: 0x207F8A0
    ::System::Text::StringBuilder* Replace(::StringW oldValue, ::StringW newValue);
    // public System.Text.StringBuilder Replace(System.String oldValue, System.String newValue, System.Int32 startIndex, System.Int32 count)
    // Offset: 0x207F8B0
    ::System::Text::StringBuilder* Replace(::StringW oldValue, ::StringW newValue, int startIndex, int count);
    // public System.Text.StringBuilder Append(System.Char* value, System.Int32 valueCount)
    // Offset: 0x207DE60
    ::System::Text::StringBuilder* Append(::Il2CppChar* value, int valueCount);
    // private System.Void Insert(System.Int32 index, System.Char* value, System.Int32 valueCount)
    // Offset: 0x207EAC4
    void Insert(int index, ::Il2CppChar* value, int valueCount);
    // private System.Void ReplaceAllInChunk(System.Int32[] replacements, System.Int32 replacementsCount, System.Text.StringBuilder sourceChunk, System.Int32 removeCount, System.String value)
    // Offset: 0x207FCD4
    void ReplaceAllInChunk(::ArrayW<int> replacements, int replacementsCount, ::System::Text::StringBuilder* sourceChunk, int removeCount, ::StringW value);
    // private System.Boolean StartsWith(System.Text.StringBuilder chunk, System.Int32 indexInChunk, System.Int32 count, System.String value)
    // Offset: 0x207FBEC
    bool StartsWith(::System::Text::StringBuilder* chunk, int indexInChunk, int count, ::StringW value);
    // private System.Void ReplaceInPlaceAtChunk(ref System.Text.StringBuilder chunk, ref System.Int32 indexInChunk, System.Char* value, System.Int32 count)
    // Offset: 0x207E4D8
    void ReplaceInPlaceAtChunk(ByRef<::System::Text::StringBuilder*> chunk, ByRef<int> indexInChunk, ::Il2CppChar* value, int count);
    // static private System.Void ThreadSafeCopy(System.Char* sourcePtr, System.Char[] destination, System.Int32 destinationIndex, System.Int32 count)
    // Offset: 0x207CD5C
    static void ThreadSafeCopy(::Il2CppChar* sourcePtr, ::ArrayW<::Il2CppChar> destination, int destinationIndex, int count);
    // static private System.Void ThreadSafeCopy(System.Char[] source, System.Int32 sourceIndex, System.Char[] destination, System.Int32 destinationIndex, System.Int32 count)
    // Offset: 0x207FEE4
    static void ThreadSafeCopy(::ArrayW<::Il2CppChar> source, int sourceIndex, ::ArrayW<::Il2CppChar> destination, int destinationIndex, int count);
    // private System.Text.StringBuilder FindChunkForIndex(System.Int32 index)
    // Offset: 0x207DAF8
    ::System::Text::StringBuilder* FindChunkForIndex(int index);
    // private System.Text.StringBuilder Next(System.Text.StringBuilder chunk)
    // Offset: 0x207FEA0
    ::System::Text::StringBuilder* Next(::System::Text::StringBuilder* chunk);
    // private System.Void ExpandByABlock(System.Int32 minBlockCharCount)
    // Offset: 0x207DB20
    void ExpandByABlock(int minBlockCharCount);
    // private System.Void MakeRoom(System.Int32 index, System.Int32 count, out System.Text.StringBuilder chunk, out System.Int32 indexInChunk, System.Boolean doneMoveFollowingChars)
    // Offset: 0x207E1F0
    void MakeRoom(int index, int count, ByRef<::System::Text::StringBuilder*> chunk, ByRef<int> indexInChunk, bool doneMoveFollowingChars);
    // private System.Void Remove(System.Int32 startIndex, System.Int32 count, out System.Text.StringBuilder chunk, out System.Int32 indexInChunk)
    // Offset: 0x207E5F0
    void Remove(int startIndex, int count, ByRef<::System::Text::StringBuilder*> chunk, ByRef<int> indexInChunk);
    // public System.Void .ctor()
    // Offset: 0x207CAD0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StringBuilder* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::StringBuilder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StringBuilder*, creationType>()));
    }
    // public override System.String ToString()
    // Offset: 0x207D480
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // System.Text.StringBuilder
  #pragma pack(pop)
  static check_size<sizeof(StringBuilder), 40 + sizeof(int)> __System_Text_StringBuilderSizeCheck;
  static_assert(sizeof(StringBuilder) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Text::StringBuilder::get_Capacity
// Il2CppName: get_Capacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::StringBuilder::*)()>(&System::Text::StringBuilder::get_Capacity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "get_Capacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::set_Capacity
// Il2CppName: set_Capacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::StringBuilder::*)(int)>(&System::Text::StringBuilder::set_Capacity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "set_Capacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::get_MaxCapacity
// Il2CppName: get_MaxCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::StringBuilder::*)()>(&System::Text::StringBuilder::get_MaxCapacity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "get_MaxCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::get_Length
// Il2CppName: get_Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::StringBuilder::*)()>(&System::Text::StringBuilder::get_Length)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "get_Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::set_Length
// Il2CppName: set_Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::StringBuilder::*)(int)>(&System::Text::StringBuilder::set_Length)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "set_Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::get_Chars
// Il2CppName: get_Chars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (System::Text::StringBuilder::*)(int)>(&System::Text::StringBuilder::get_Chars)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "get_Chars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::set_Chars
// Il2CppName: set_Chars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::StringBuilder::*)(int, ::Il2CppChar)>(&System::Text::StringBuilder::set_Chars)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "set_Chars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Text::StringBuilder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Text::StringBuilder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Text::StringBuilder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Text::StringBuilder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Text::StringBuilder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Text::StringBuilder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Text::StringBuilder::System_Runtime_Serialization_ISerializable_GetObjectData
// Il2CppName: System.Runtime.Serialization.ISerializable.GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::StringBuilder::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Text::StringBuilder::System_Runtime_Serialization_ISerializable_GetObjectData)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::EnsureCapacity
// Il2CppName: EnsureCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Text::StringBuilder::*)(int)>(&System::Text::StringBuilder::EnsureCapacity)> {
  static const MethodInfo* get() {
    static auto* capacity = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "EnsureCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{capacity});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Text::StringBuilder::*)(int, int)>(&System::Text::StringBuilder::ToString)> {
  static const MethodInfo* get() {
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startIndex, length});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)()>(&System::Text::StringBuilder::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::Il2CppChar, int)>(&System::Text::StringBuilder::Append)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* repeatCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, repeatCount});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::ArrayW<::Il2CppChar>, int, int)>(&System::Text::StringBuilder::Append)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* charCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, startIndex, charCount});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::StringW)>(&System::Text::StringBuilder::Append)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::AppendHelper
// Il2CppName: AppendHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::StringBuilder::*)(::StringW)>(&System::Text::StringBuilder::AppendHelper)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "AppendHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::StringW, int, int)>(&System::Text::StringBuilder::Append)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, startIndex, count});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::AppendLine
// Il2CppName: AppendLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)()>(&System::Text::StringBuilder::AppendLine)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "AppendLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::AppendLine
// Il2CppName: AppendLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::StringW)>(&System::Text::StringBuilder::AppendLine)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "AppendLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(int, ::StringW, int)>(&System::Text::StringBuilder::Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value, count});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(int, int)>(&System::Text::StringBuilder::Remove)> {
  static const MethodInfo* get() {
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startIndex, length});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(bool)>(&System::Text::StringBuilder::Append)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(uint8_t)>(&System::Text::StringBuilder::Append)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::Il2CppChar)>(&System::Text::StringBuilder::Append)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(int)>(&System::Text::StringBuilder::Append)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(int64_t)>(&System::Text::StringBuilder::Append)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(double)>(&System::Text::StringBuilder::Append)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::Il2CppObject*)>(&System::Text::StringBuilder::Append)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::ArrayW<::Il2CppChar>)>(&System::Text::StringBuilder::Append)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(int, ::StringW)>(&System::Text::StringBuilder::Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(int, ::Il2CppChar)>(&System::Text::StringBuilder::Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::AppendFormat
// Il2CppName: AppendFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::StringW, ::Il2CppObject*)>(&System::Text::StringBuilder::AppendFormat)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "AppendFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, arg0});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::AppendFormat
// Il2CppName: AppendFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::StringW, ::Il2CppObject*, ::Il2CppObject*)>(&System::Text::StringBuilder::AppendFormat)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* arg1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "AppendFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, arg0, arg1});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::AppendFormat
// Il2CppName: AppendFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::StringW, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*)>(&System::Text::StringBuilder::AppendFormat)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* arg1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* arg2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "AppendFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, arg0, arg1, arg2});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::AppendFormat
// Il2CppName: AppendFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::StringW, ::ArrayW<::Il2CppObject*>)>(&System::Text::StringBuilder::AppendFormat)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "AppendFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, args});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::AppendFormat
// Il2CppName: AppendFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::System::IFormatProvider*, ::StringW, ::Il2CppObject*)>(&System::Text::StringBuilder::AppendFormat)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "AppendFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider, format, arg0});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::AppendFormat
// Il2CppName: AppendFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::System::IFormatProvider*, ::StringW, ::Il2CppObject*, ::Il2CppObject*)>(&System::Text::StringBuilder::AppendFormat)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* arg1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "AppendFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider, format, arg0, arg1});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::AppendFormat
// Il2CppName: AppendFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::System::IFormatProvider*, ::StringW, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*)>(&System::Text::StringBuilder::AppendFormat)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* arg1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* arg2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "AppendFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider, format, arg0, arg1, arg2});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::AppendFormat
// Il2CppName: AppendFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::System::IFormatProvider*, ::StringW, ::ArrayW<::Il2CppObject*>)>(&System::Text::StringBuilder::AppendFormat)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "AppendFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider, format, args});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::FormatError
// Il2CppName: FormatError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Text::StringBuilder::FormatError)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "FormatError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::AppendFormatHelper
// Il2CppName: AppendFormatHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::System::IFormatProvider*, ::StringW, ::System::ParamsArray)>(&System::Text::StringBuilder::AppendFormatHelper)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* args = &::il2cpp_utils::GetClassFromName("System", "ParamsArray")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "AppendFormatHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider, format, args});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Replace
// Il2CppName: Replace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::StringW, ::StringW)>(&System::Text::StringBuilder::Replace)> {
  static const MethodInfo* get() {
    static auto* oldValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* newValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Replace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldValue, newValue});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Replace
// Il2CppName: Replace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::StringW, ::StringW, int, int)>(&System::Text::StringBuilder::Replace)> {
  static const MethodInfo* get() {
    static auto* oldValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* newValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Replace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldValue, newValue, startIndex, count});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Append
// Il2CppName: Append
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::Il2CppChar*, int)>(&System::Text::StringBuilder::Append)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* valueCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Append", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, valueCount});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::StringBuilder::*)(int, ::Il2CppChar*, int)>(&System::Text::StringBuilder::Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* valueCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value, valueCount});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::ReplaceAllInChunk
// Il2CppName: ReplaceAllInChunk
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::StringBuilder::*)(::ArrayW<int>, int, ::System::Text::StringBuilder*, int, ::StringW)>(&System::Text::StringBuilder::ReplaceAllInChunk)> {
  static const MethodInfo* get() {
    static auto* replacements = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* replacementsCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* sourceChunk = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* removeCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "ReplaceAllInChunk", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{replacements, replacementsCount, sourceChunk, removeCount, value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::StartsWith
// Il2CppName: StartsWith
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Text::StringBuilder::*)(::System::Text::StringBuilder*, int, int, ::StringW)>(&System::Text::StringBuilder::StartsWith)> {
  static const MethodInfo* get() {
    static auto* chunk = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* indexInChunk = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "StartsWith", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chunk, indexInChunk, count, value});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::ReplaceInPlaceAtChunk
// Il2CppName: ReplaceInPlaceAtChunk
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::StringBuilder::*)(ByRef<::System::Text::StringBuilder*>, ByRef<int>, ::Il2CppChar*, int)>(&System::Text::StringBuilder::ReplaceInPlaceAtChunk)> {
  static const MethodInfo* get() {
    static auto* chunk = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->this_arg;
    static auto* indexInChunk = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* value = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "ReplaceInPlaceAtChunk", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chunk, indexInChunk, value, count});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::ThreadSafeCopy
// Il2CppName: ThreadSafeCopy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppChar*, ::ArrayW<::Il2CppChar>, int, int)>(&System::Text::StringBuilder::ThreadSafeCopy)> {
  static const MethodInfo* get() {
    static auto* sourcePtr = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* destination = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    static auto* destinationIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "ThreadSafeCopy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sourcePtr, destination, destinationIndex, count});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::ThreadSafeCopy
// Il2CppName: ThreadSafeCopy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::Il2CppChar>, int, ::ArrayW<::Il2CppChar>, int, int)>(&System::Text::StringBuilder::ThreadSafeCopy)> {
  static const MethodInfo* get() {
    static auto* source = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    static auto* sourceIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* destination = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Char"), 1)->byval_arg;
    static auto* destinationIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "ThreadSafeCopy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, sourceIndex, destination, destinationIndex, count});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::FindChunkForIndex
// Il2CppName: FindChunkForIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(int)>(&System::Text::StringBuilder::FindChunkForIndex)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "FindChunkForIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Next
// Il2CppName: Next
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::StringBuilder* (System::Text::StringBuilder::*)(::System::Text::StringBuilder*)>(&System::Text::StringBuilder::Next)> {
  static const MethodInfo* get() {
    static auto* chunk = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Next", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{chunk});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::ExpandByABlock
// Il2CppName: ExpandByABlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::StringBuilder::*)(int)>(&System::Text::StringBuilder::ExpandByABlock)> {
  static const MethodInfo* get() {
    static auto* minBlockCharCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "ExpandByABlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{minBlockCharCount});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::MakeRoom
// Il2CppName: MakeRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::StringBuilder::*)(int, int, ByRef<::System::Text::StringBuilder*>, ByRef<int>, bool)>(&System::Text::StringBuilder::MakeRoom)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* chunk = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->this_arg;
    static auto* indexInChunk = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* doneMoveFollowingChars = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "MakeRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, count, chunk, indexInChunk, doneMoveFollowingChars});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Text::StringBuilder::*)(int, int, ByRef<::System::Text::StringBuilder*>, ByRef<int>)>(&System::Text::StringBuilder::Remove)> {
  static const MethodInfo* get() {
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* chunk = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->this_arg;
    static auto* indexInChunk = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{startIndex, count, chunk, indexInChunk});
  }
};
// Writing MetadataGetter for method: System::Text::StringBuilder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Text::StringBuilder::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Text::StringBuilder::*)()>(&System::Text::StringBuilder::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Text::StringBuilder*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
