// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Forward declaring type: SpanHelpers
  class SpanHelpers;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::SpanHelpers);
DEFINE_IL2CPP_ARG_TYPE(::System::SpanHelpers*, "System", "SpanHelpers");
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.SpanHelpers
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: 8EE9D4
  class SpanHelpers : public ::Il2CppObject {
    public:
    // Nested type: ::System::SpanHelpers::PerTypeValues_1<T>
    template<typename T>
    class PerTypeValues_1;
    // static private System.Boolean IsReferenceOrContainsReferencesCore(System.Type type)
    // Offset: 0x13B9648
    static bool IsReferenceOrContainsReferencesCore(::System::Type* type);
  }; // System.SpanHelpers
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::SpanHelpers::IsReferenceOrContainsReferencesCore
// Il2CppName: IsReferenceOrContainsReferencesCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Type*)>(&System::SpanHelpers::IsReferenceOrContainsReferencesCore)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::SpanHelpers*), "IsReferenceOrContainsReferencesCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
