// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Uri
  class Uri;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Skipping declaration: Stream because it is already included!
}
// Completed forward declares
// Type namespace: System.Xml
namespace System::Xml {
  // Forward declaring type: XmlCachedStream
  class XmlCachedStream;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::XmlCachedStream);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::XmlCachedStream*, "System.Xml", "XmlCachedStream");
// Type namespace: System.Xml
namespace System::Xml {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.XmlCachedStream
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlCachedStream : public ::System::IO::MemoryStream {
    public:
    public:
    // private System.Uri uri
    // Size: 0x8
    // Offset: 0x50
    ::System::Uri* uri;
    // Field size check
    static_assert(sizeof(::System::Uri*) == 0x8);
    public:
    // Get instance field reference: private System.Uri uri
    [[deprecated("Use field access instead!")]] ::System::Uri*& dyn_uri();
    // System.Void .ctor(System.Uri uri, System.IO.Stream stream)
    // Offset: 0x1C36C88
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlCachedStream* New_ctor(::System::Uri* uri, ::System::IO::Stream* stream) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCachedStream::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlCachedStream*, creationType>(uri, stream)));
    }
  }; // System.Xml.XmlCachedStream
  #pragma pack(pop)
  static check_size<sizeof(XmlCachedStream), 80 + sizeof(::System::Uri*)> __System_Xml_XmlCachedStreamSizeCheck;
  static_assert(sizeof(XmlCachedStream) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::XmlCachedStream::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
