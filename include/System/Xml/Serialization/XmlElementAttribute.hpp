// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Forward declaring type: XmlElementAttribute
  class XmlElementAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Serialization::XmlElementAttribute);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Serialization::XmlElementAttribute*, "System.Xml.Serialization", "XmlElementAttribute");
// Type namespace: System.Xml.Serialization
namespace System::Xml::Serialization {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Serialization.XmlElementAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 1083254
  class XmlElementAttribute : public ::System::Attribute {
    public:
    public:
    // private System.String elementName
    // Size: 0x8
    // Offset: 0x10
    ::StringW elementName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Type type
    // Size: 0x8
    // Offset: 0x18
    ::System::Type* type;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    // private System.Int32 order
    // Size: 0x4
    // Offset: 0x20
    int order;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private System.String elementName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_elementName();
    // Get instance field reference: private System.Type type
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_type();
    // Get instance field reference: private System.Int32 order
    [[deprecated("Use field access instead!")]] int& dyn_order();
    // public System.Void .ctor(System.String elementName, System.Type type)
    // Offset: 0x2116D64
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlElementAttribute* New_ctor(::StringW elementName, ::System::Type* type) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Serialization::XmlElementAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlElementAttribute*, creationType>(elementName, type)));
    }
  }; // System.Xml.Serialization.XmlElementAttribute
  #pragma pack(pop)
  static check_size<sizeof(XmlElementAttribute), 32 + sizeof(int)> __System_Xml_Serialization_XmlElementAttributeSizeCheck;
  static_assert(sizeof(XmlElementAttribute) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Serialization::XmlElementAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
