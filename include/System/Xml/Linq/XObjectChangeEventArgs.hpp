// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.Xml.Linq.XObjectChange
#include "System/Xml/Linq/XObjectChange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Xml.Linq
namespace System::Xml::Linq {
  // Forward declaring type: XObjectChangeEventArgs
  class XObjectChangeEventArgs;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Linq::XObjectChangeEventArgs);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Linq::XObjectChangeEventArgs*, "System.Xml.Linq", "XObjectChangeEventArgs");
// Type namespace: System.Xml.Linq
namespace System::Xml::Linq {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Linq.XObjectChangeEventArgs
  // [TokenAttribute] Offset: FFFFFFFF
  class XObjectChangeEventArgs : public ::System::EventArgs {
    public:
    public:
    // private System.Xml.Linq.XObjectChange objectChange
    // Size: 0x4
    // Offset: 0x10
    ::System::Xml::Linq::XObjectChange objectChange;
    // Field size check
    static_assert(sizeof(::System::Xml::Linq::XObjectChange) == 0x4);
    public:
    // Creating conversion operator: operator ::System::Xml::Linq::XObjectChange
    constexpr operator ::System::Xml::Linq::XObjectChange() const noexcept {
      return objectChange;
    }
    // Get static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Add
    static ::System::Xml::Linq::XObjectChangeEventArgs* _get_Add();
    // Set static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Add
    static void _set_Add(::System::Xml::Linq::XObjectChangeEventArgs* value);
    // Get static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Remove
    static ::System::Xml::Linq::XObjectChangeEventArgs* _get_Remove();
    // Set static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Remove
    static void _set_Remove(::System::Xml::Linq::XObjectChangeEventArgs* value);
    // Get static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Name
    static ::System::Xml::Linq::XObjectChangeEventArgs* _get_Name();
    // Set static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Name
    static void _set_Name(::System::Xml::Linq::XObjectChangeEventArgs* value);
    // Get static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Value
    static ::System::Xml::Linq::XObjectChangeEventArgs* _get_Value();
    // Set static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Value
    static void _set_Value(::System::Xml::Linq::XObjectChangeEventArgs* value);
    // Get instance field reference: private System.Xml.Linq.XObjectChange objectChange
    [[deprecated("Use field access instead!")]] ::System::Xml::Linq::XObjectChange& dyn_objectChange();
    // public System.Void .ctor(System.Xml.Linq.XObjectChange objectChange)
    // Offset: 0x2B64554
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XObjectChangeEventArgs* New_ctor(::System::Xml::Linq::XObjectChange objectChange) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XObjectChangeEventArgs*, creationType>(objectChange)));
    }
    // static private System.Void .cctor()
    // Offset: 0x2B645D0
    static void _cctor();
  }; // System.Xml.Linq.XObjectChangeEventArgs
  #pragma pack(pop)
  static check_size<sizeof(XObjectChangeEventArgs), 16 + sizeof(::System::Xml::Linq::XObjectChange)> __System_Xml_Linq_XObjectChangeEventArgsSizeCheck;
  static_assert(sizeof(XObjectChangeEventArgs) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Linq::XObjectChangeEventArgs::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Linq::XObjectChangeEventArgs::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Xml::Linq::XObjectChangeEventArgs::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Linq::XObjectChangeEventArgs*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
