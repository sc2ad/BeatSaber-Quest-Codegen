// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Schema.SequenceNode
#include "System/Xml/Schema/SequenceNode.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Forward declaring type: BitSet
  class BitSet;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::SequenceNode::SequenceConstructPosContext, "System.Xml.Schema", "SequenceNode/SequenceConstructPosContext");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x28
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Xml.Schema.SequenceNode/System.Xml.Schema.SequenceConstructPosContext
  // [TokenAttribute] Offset: FFFFFFFF
  struct SequenceNode::SequenceConstructPosContext/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Xml.Schema.SequenceNode this_
    // Size: 0x8
    // Offset: 0x0
    ::System::Xml::Schema::SequenceNode* _this;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::SequenceNode*) == 0x8);
    // public System.Xml.Schema.BitSet firstpos
    // Size: 0x8
    // Offset: 0x8
    ::System::Xml::Schema::BitSet* firstpos;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::BitSet*) == 0x8);
    // public System.Xml.Schema.BitSet lastpos
    // Size: 0x8
    // Offset: 0x10
    ::System::Xml::Schema::BitSet* lastpos;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::BitSet*) == 0x8);
    // public System.Xml.Schema.BitSet lastposLeft
    // Size: 0x8
    // Offset: 0x18
    ::System::Xml::Schema::BitSet* lastposLeft;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::BitSet*) == 0x8);
    // public System.Xml.Schema.BitSet firstposRight
    // Size: 0x8
    // Offset: 0x20
    ::System::Xml::Schema::BitSet* firstposRight;
    // Field size check
    static_assert(sizeof(::System::Xml::Schema::BitSet*) == 0x8);
    public:
    // Creating value type constructor for type: SequenceConstructPosContext
    constexpr SequenceConstructPosContext(::System::Xml::Schema::SequenceNode* _this_ = {}, ::System::Xml::Schema::BitSet* firstpos_ = {}, ::System::Xml::Schema::BitSet* lastpos_ = {}, ::System::Xml::Schema::BitSet* lastposLeft_ = {}, ::System::Xml::Schema::BitSet* firstposRight_ = {}) noexcept : _this{_this_}, firstpos{firstpos_}, lastpos{lastpos_}, lastposLeft{lastposLeft_}, firstposRight{firstposRight_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: i_ValueType
    inline ::System::ValueType* i_ValueType() noexcept {
      return reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Xml.Schema.SequenceNode this_
    [[deprecated("Use field access instead!")]] ::System::Xml::Schema::SequenceNode*& dyn_this_();
    // Get instance field reference: public System.Xml.Schema.BitSet firstpos
    [[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& dyn_firstpos();
    // Get instance field reference: public System.Xml.Schema.BitSet lastpos
    [[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& dyn_lastpos();
    // Get instance field reference: public System.Xml.Schema.BitSet lastposLeft
    [[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& dyn_lastposLeft();
    // Get instance field reference: public System.Xml.Schema.BitSet firstposRight
    [[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& dyn_firstposRight();
    // public System.Void .ctor(System.Xml.Schema.SequenceNode node, System.Xml.Schema.BitSet firstpos, System.Xml.Schema.BitSet lastpos)
    // Offset: 0x1D2048C
    SequenceConstructPosContext(::System::Xml::Schema::SequenceNode* node, ::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos);
  }; // System.Xml.Schema.SequenceNode/System.Xml.Schema.SequenceConstructPosContext
  #pragma pack(pop)
  static check_size<sizeof(SequenceNode::SequenceConstructPosContext), 32 + sizeof(::System::Xml::Schema::BitSet*)> __System_Xml_Schema_SequenceNode_SequenceConstructPosContextSizeCheck;
  static_assert(sizeof(SequenceNode::SequenceConstructPosContext) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::SequenceNode::SequenceConstructPosContext::SequenceConstructPosContext
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
