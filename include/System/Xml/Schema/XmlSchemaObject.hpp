// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaObjectCollection
  class XmlSchemaObjectCollection;
}
// Completed forward declares
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaObject
  class XmlSchemaObject;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::XmlSchemaObject);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::XmlSchemaObject*, "System.Xml.Schema", "XmlSchemaObject");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.XmlSchemaObject
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlSchemaObject : public ::Il2CppObject {
    public:
    // protected System.Void .ctor()
    // Offset: 0x20605B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlSchemaObject* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlSchemaObject*, creationType>()));
    }
    // System.Void OnAdd(System.Xml.Schema.XmlSchemaObjectCollection container, System.Object item)
    // Offset: 0x2062114
    void OnAdd(::System::Xml::Schema::XmlSchemaObjectCollection* container, ::Il2CppObject* item);
    // System.Void OnRemove(System.Xml.Schema.XmlSchemaObjectCollection container, System.Object item)
    // Offset: 0x2062118
    void OnRemove(::System::Xml::Schema::XmlSchemaObjectCollection* container, ::Il2CppObject* item);
    // System.Void OnClear(System.Xml.Schema.XmlSchemaObjectCollection container)
    // Offset: 0x206211C
    void OnClear(::System::Xml::Schema::XmlSchemaObjectCollection* container);
  }; // System.Xml.Schema.XmlSchemaObject
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaObject::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaObject::OnAdd
// Il2CppName: OnAdd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaObject::*)(::System::Xml::Schema::XmlSchemaObjectCollection*, ::Il2CppObject*)>(&System::Xml::Schema::XmlSchemaObject::OnAdd)> {
  static const MethodInfo* get() {
    static auto* container = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaObjectCollection")->byval_arg;
    static auto* item = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaObject*), "OnAdd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{container, item});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaObject::OnRemove
// Il2CppName: OnRemove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaObject::*)(::System::Xml::Schema::XmlSchemaObjectCollection*, ::Il2CppObject*)>(&System::Xml::Schema::XmlSchemaObject::OnRemove)> {
  static const MethodInfo* get() {
    static auto* container = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaObjectCollection")->byval_arg;
    static auto* item = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaObject*), "OnRemove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{container, item});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaObject::OnClear
// Il2CppName: OnClear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Xml::Schema::XmlSchemaObject::*)(::System::Xml::Schema::XmlSchemaObjectCollection*)>(&System::Xml::Schema::XmlSchemaObject::OnClear)> {
  static const MethodInfo* get() {
    static auto* container = &::il2cpp_utils::GetClassFromName("System.Xml.Schema", "XmlSchemaObjectCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaObject*), "OnClear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{container});
  }
};
