// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Schema.XmlListConverter
#include "System/Xml/Schema/XmlListConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Skipping declaration: XmlValueConverter because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: DateTime
  struct DateTime;
  // Forward declaring type: DateTimeOffset
  struct DateTimeOffset;
  // Forward declaring type: Decimal
  struct Decimal;
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: IXmlNamespaceResolver
  class IXmlNamespaceResolver;
}
// Completed forward declares
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlUntypedConverter
  class XmlUntypedConverter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::XmlUntypedConverter);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::XmlUntypedConverter*, "System.Xml.Schema", "XmlUntypedConverter");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x31
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.XmlUntypedConverter
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlUntypedConverter : public ::System::Xml::Schema::XmlListConverter {
    public:
    public:
    // private System.Boolean allowListToList
    // Size: 0x1
    // Offset: 0x30
    bool allowListToList;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::Xml::Schema::XmlValueConverter*
    constexpr operator ::System::Xml::Schema::XmlValueConverter*() const noexcept = delete;
    // Get static field: static public readonly System.Xml.Schema.XmlValueConverter Untyped
    static ::System::Xml::Schema::XmlValueConverter* _get_Untyped();
    // Set static field: static public readonly System.Xml.Schema.XmlValueConverter Untyped
    static void _set_Untyped(::System::Xml::Schema::XmlValueConverter* value);
    // Get static field: static public readonly System.Xml.Schema.XmlValueConverter UntypedList
    static ::System::Xml::Schema::XmlValueConverter* _get_UntypedList();
    // Set static field: static public readonly System.Xml.Schema.XmlValueConverter UntypedList
    static void _set_UntypedList(::System::Xml::Schema::XmlValueConverter* value);
    // Get instance field reference: private System.Boolean allowListToList
    [[deprecated("Use field access instead!")]] bool& dyn_allowListToList();
    // protected System.Void .ctor(System.Xml.Schema.XmlUntypedConverter atomicConverter, System.Boolean allowListToList)
    // Offset: 0x210B97C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlUntypedConverter* New_ctor(::System::Xml::Schema::XmlUntypedConverter* atomicConverter, bool allowListToList) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlUntypedConverter*, creationType>(atomicConverter, allowListToList)));
    }
    // private System.Object ChangeTypeWildcardDestination(System.Object value, System.Type destinationType, System.Xml.IXmlNamespaceResolver nsResolver)
    // Offset: 0x210BCAC
    ::Il2CppObject* ChangeTypeWildcardDestination(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver);
    // private System.Object ChangeTypeWildcardSource(System.Object value, System.Type destinationType, System.Xml.IXmlNamespaceResolver nsResolver)
    // Offset: 0x210E310
    ::Il2CppObject* ChangeTypeWildcardSource(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver);
    // private System.Boolean SupportsType(System.Type clrType)
    // Offset: 0x211176C
    bool SupportsType(::System::Type* clrType);
    // protected System.Void .ctor()
    // Offset: 0x210B8C8
    // Implemented from: System.Xml.Schema.XmlValueConverter
    // Base method: System.Void XmlValueConverter::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XmlUntypedConverter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XmlUntypedConverter*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x2111DB8
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Void XmlBaseConverter::.cctor()
    static void _cctor();
    // public override System.Boolean ToBoolean(System.String value)
    // Offset: 0x210BA40
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Boolean XmlBaseConverter::ToBoolean(System.String value)
    bool ToBoolean(::StringW value);
    // public override System.Boolean ToBoolean(System.Object value)
    // Offset: 0x210BAE8
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Boolean XmlBaseConverter::ToBoolean(System.Object value)
    bool ToBoolean(::Il2CppObject* value);
    // public override System.DateTime ToDateTime(System.String value)
    // Offset: 0x210BDE8
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.DateTime XmlBaseConverter::ToDateTime(System.String value)
    ::System::DateTime ToDateTime(::StringW value);
    // public override System.DateTime ToDateTime(System.Object value)
    // Offset: 0x210BE90
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.DateTime XmlBaseConverter::ToDateTime(System.Object value)
    ::System::DateTime ToDateTime(::Il2CppObject* value);
    // public override System.DateTimeOffset ToDateTimeOffset(System.String value)
    // Offset: 0x210C04C
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.DateTimeOffset XmlBaseConverter::ToDateTimeOffset(System.String value)
    ::System::DateTimeOffset ToDateTimeOffset(::StringW value);
    // public override System.DateTimeOffset ToDateTimeOffset(System.Object value)
    // Offset: 0x210C0F4
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.DateTimeOffset XmlBaseConverter::ToDateTimeOffset(System.Object value)
    ::System::DateTimeOffset ToDateTimeOffset(::Il2CppObject* value);
    // public override System.Decimal ToDecimal(System.String value)
    // Offset: 0x210C2AC
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Decimal XmlBaseConverter::ToDecimal(System.String value)
    ::System::Decimal ToDecimal(::StringW value);
    // public override System.Decimal ToDecimal(System.Object value)
    // Offset: 0x210C354
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Decimal XmlBaseConverter::ToDecimal(System.Object value)
    ::System::Decimal ToDecimal(::Il2CppObject* value);
    // public override System.Double ToDouble(System.String value)
    // Offset: 0x210C514
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Double XmlBaseConverter::ToDouble(System.String value)
    double ToDouble(::StringW value);
    // public override System.Double ToDouble(System.Object value)
    // Offset: 0x210C5BC
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Double XmlBaseConverter::ToDouble(System.Object value)
    double ToDouble(::Il2CppObject* value);
    // public override System.Int32 ToInt32(System.String value)
    // Offset: 0x210C780
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Int32 XmlBaseConverter::ToInt32(System.String value)
    int ToInt32(::StringW value);
    // public override System.Int32 ToInt32(System.Object value)
    // Offset: 0x210C828
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Int32 XmlBaseConverter::ToInt32(System.Object value)
    int ToInt32(::Il2CppObject* value);
    // public override System.Int64 ToInt64(System.String value)
    // Offset: 0x210C9EC
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Int64 XmlBaseConverter::ToInt64(System.String value)
    int64_t ToInt64(::StringW value);
    // public override System.Int64 ToInt64(System.Object value)
    // Offset: 0x210CA94
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Int64 XmlBaseConverter::ToInt64(System.Object value)
    int64_t ToInt64(::Il2CppObject* value);
    // public override System.Single ToSingle(System.String value)
    // Offset: 0x210CC58
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Single XmlBaseConverter::ToSingle(System.String value)
    float ToSingle(::StringW value);
    // public override System.Single ToSingle(System.Object value)
    // Offset: 0x210CD00
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Single XmlBaseConverter::ToSingle(System.Object value)
    float ToSingle(::Il2CppObject* value);
    // public override System.String ToString(System.Boolean value)
    // Offset: 0x210CEC4
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.String XmlBaseConverter::ToString(System.Boolean value)
    ::StringW ToString(bool value);
    // public override System.String ToString(System.DateTime value)
    // Offset: 0x210CF2C
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.String XmlBaseConverter::ToString(System.DateTime value)
    ::StringW ToString(::System::DateTime value);
    // public override System.String ToString(System.DateTimeOffset value)
    // Offset: 0x210CF94
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.String XmlBaseConverter::ToString(System.DateTimeOffset value)
    ::StringW ToString(::System::DateTimeOffset value);
    // public override System.String ToString(System.Decimal value)
    // Offset: 0x210D00C
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.String XmlBaseConverter::ToString(System.Decimal value)
    ::StringW ToString(::System::Decimal value);
    // public override System.String ToString(System.Double value)
    // Offset: 0x210D084
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.String XmlBaseConverter::ToString(System.Double value)
    ::StringW ToString(double value);
    // public override System.String ToString(System.Int32 value)
    // Offset: 0x210D0F4
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.String XmlBaseConverter::ToString(System.Int32 value)
    ::StringW ToString(int value);
    // public override System.String ToString(System.Int64 value)
    // Offset: 0x210D15C
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.String XmlBaseConverter::ToString(System.Int64 value)
    ::StringW ToString(int64_t value);
    // public override System.String ToString(System.Single value)
    // Offset: 0x210D1C4
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.String XmlBaseConverter::ToString(System.Single value)
    ::StringW ToString(float value);
    // public override System.String ToString(System.Object value, System.Xml.IXmlNamespaceResolver nsResolver)
    // Offset: 0x210D234
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.String XmlBaseConverter::ToString(System.Object value, System.Xml.IXmlNamespaceResolver nsResolver)
    ::StringW ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver);
    // public override System.Object ChangeType(System.Boolean value, System.Type destinationType)
    // Offset: 0x210E12C
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Object XmlBaseConverter::ChangeType(System.Boolean value, System.Type destinationType)
    ::Il2CppObject* ChangeType(bool value, ::System::Type* destinationType);
    // public override System.Object ChangeType(System.DateTime value, System.Type destinationType)
    // Offset: 0x210E4B0
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Object XmlBaseConverter::ChangeType(System.DateTime value, System.Type destinationType)
    ::Il2CppObject* ChangeType(::System::DateTime value, ::System::Type* destinationType);
    // public override System.Object ChangeType(System.Decimal value, System.Type destinationType)
    // Offset: 0x210E688
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Object XmlBaseConverter::ChangeType(System.Decimal value, System.Type destinationType)
    ::Il2CppObject* ChangeType(::System::Decimal value, ::System::Type* destinationType);
    // public override System.Object ChangeType(System.Double value, System.Type destinationType)
    // Offset: 0x210E878
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Object XmlBaseConverter::ChangeType(System.Double value, System.Type destinationType)
    ::Il2CppObject* ChangeType(double value, ::System::Type* destinationType);
    // public override System.Object ChangeType(System.Int32 value, System.Type destinationType)
    // Offset: 0x210EA60
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Object XmlBaseConverter::ChangeType(System.Int32 value, System.Type destinationType)
    ::Il2CppObject* ChangeType(int value, ::System::Type* destinationType);
    // public override System.Object ChangeType(System.Int64 value, System.Type destinationType)
    // Offset: 0x210EC40
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Object XmlBaseConverter::ChangeType(System.Int64 value, System.Type destinationType)
    ::Il2CppObject* ChangeType(int64_t value, ::System::Type* destinationType);
    // public override System.Object ChangeType(System.String value, System.Type destinationType, System.Xml.IXmlNamespaceResolver nsResolver)
    // Offset: 0x210EE20
    // Implemented from: System.Xml.Schema.XmlBaseConverter
    // Base method: System.Object XmlBaseConverter::ChangeType(System.String value, System.Type destinationType, System.Xml.IXmlNamespaceResolver nsResolver)
    ::Il2CppObject* ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver);
    // public override System.Object ChangeType(System.Object value, System.Type destinationType, System.Xml.IXmlNamespaceResolver nsResolver)
    // Offset: 0x210FBBC
    // Implemented from: System.Xml.Schema.XmlListConverter
    // Base method: System.Object XmlListConverter::ChangeType(System.Object value, System.Type destinationType, System.Xml.IXmlNamespaceResolver nsResolver)
    ::Il2CppObject* ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver);
    // protected override System.Object ChangeListType(System.Object value, System.Type destinationType, System.Xml.IXmlNamespaceResolver nsResolver)
    // Offset: 0x2111460
    // Implemented from: System.Xml.Schema.XmlListConverter
    // Base method: System.Object XmlListConverter::ChangeListType(System.Object value, System.Type destinationType, System.Xml.IXmlNamespaceResolver nsResolver)
    ::Il2CppObject* ChangeListType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver);
  }; // System.Xml.Schema.XmlUntypedConverter
  #pragma pack(pop)
  static check_size<sizeof(XmlUntypedConverter), 48 + sizeof(bool)> __System_Xml_Schema_XmlUntypedConverterSizeCheck;
  static_assert(sizeof(XmlUntypedConverter) == 0x31);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ChangeTypeWildcardDestination
// Il2CppName: ChangeTypeWildcardDestination
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Schema::XmlUntypedConverter::*)(::Il2CppObject*, ::System::Type*, ::System::Xml::IXmlNamespaceResolver*)>(&System::Xml::Schema::XmlUntypedConverter::ChangeTypeWildcardDestination)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* destinationType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* nsResolver = &::il2cpp_utils::GetClassFromName("System.Xml", "IXmlNamespaceResolver")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ChangeTypeWildcardDestination", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, destinationType, nsResolver});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ChangeTypeWildcardSource
// Il2CppName: ChangeTypeWildcardSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Schema::XmlUntypedConverter::*)(::Il2CppObject*, ::System::Type*, ::System::Xml::IXmlNamespaceResolver*)>(&System::Xml::Schema::XmlUntypedConverter::ChangeTypeWildcardSource)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* destinationType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* nsResolver = &::il2cpp_utils::GetClassFromName("System.Xml", "IXmlNamespaceResolver")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ChangeTypeWildcardSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, destinationType, nsResolver});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::SupportsType
// Il2CppName: SupportsType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::XmlUntypedConverter::*)(::System::Type*)>(&System::Xml::Schema::XmlUntypedConverter::SupportsType)> {
  static const MethodInfo* get() {
    static auto* clrType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "SupportsType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clrType});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Xml::Schema::XmlUntypedConverter::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToBoolean
// Il2CppName: ToBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::XmlUntypedConverter::*)(::StringW)>(&System::Xml::Schema::XmlUntypedConverter::ToBoolean)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToBoolean
// Il2CppName: ToBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Xml::Schema::XmlUntypedConverter::*)(::Il2CppObject*)>(&System::Xml::Schema::XmlUntypedConverter::ToBoolean)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToDateTime
// Il2CppName: ToDateTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (System::Xml::Schema::XmlUntypedConverter::*)(::StringW)>(&System::Xml::Schema::XmlUntypedConverter::ToDateTime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToDateTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToDateTime
// Il2CppName: ToDateTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (System::Xml::Schema::XmlUntypedConverter::*)(::Il2CppObject*)>(&System::Xml::Schema::XmlUntypedConverter::ToDateTime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToDateTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToDateTimeOffset
// Il2CppName: ToDateTimeOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTimeOffset (System::Xml::Schema::XmlUntypedConverter::*)(::StringW)>(&System::Xml::Schema::XmlUntypedConverter::ToDateTimeOffset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToDateTimeOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToDateTimeOffset
// Il2CppName: ToDateTimeOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTimeOffset (System::Xml::Schema::XmlUntypedConverter::*)(::Il2CppObject*)>(&System::Xml::Schema::XmlUntypedConverter::ToDateTimeOffset)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToDateTimeOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToDecimal
// Il2CppName: ToDecimal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Decimal (System::Xml::Schema::XmlUntypedConverter::*)(::StringW)>(&System::Xml::Schema::XmlUntypedConverter::ToDecimal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToDecimal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToDecimal
// Il2CppName: ToDecimal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Decimal (System::Xml::Schema::XmlUntypedConverter::*)(::Il2CppObject*)>(&System::Xml::Schema::XmlUntypedConverter::ToDecimal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToDecimal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToDouble
// Il2CppName: ToDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (System::Xml::Schema::XmlUntypedConverter::*)(::StringW)>(&System::Xml::Schema::XmlUntypedConverter::ToDouble)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToDouble
// Il2CppName: ToDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (System::Xml::Schema::XmlUntypedConverter::*)(::Il2CppObject*)>(&System::Xml::Schema::XmlUntypedConverter::ToDouble)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToInt32
// Il2CppName: ToInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::Schema::XmlUntypedConverter::*)(::StringW)>(&System::Xml::Schema::XmlUntypedConverter::ToInt32)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToInt32
// Il2CppName: ToInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Xml::Schema::XmlUntypedConverter::*)(::Il2CppObject*)>(&System::Xml::Schema::XmlUntypedConverter::ToInt32)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToInt64
// Il2CppName: ToInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (System::Xml::Schema::XmlUntypedConverter::*)(::StringW)>(&System::Xml::Schema::XmlUntypedConverter::ToInt64)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToInt64
// Il2CppName: ToInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (System::Xml::Schema::XmlUntypedConverter::*)(::Il2CppObject*)>(&System::Xml::Schema::XmlUntypedConverter::ToInt64)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToSingle
// Il2CppName: ToSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (System::Xml::Schema::XmlUntypedConverter::*)(::StringW)>(&System::Xml::Schema::XmlUntypedConverter::ToSingle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToSingle
// Il2CppName: ToSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (System::Xml::Schema::XmlUntypedConverter::*)(::Il2CppObject*)>(&System::Xml::Schema::XmlUntypedConverter::ToSingle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Schema::XmlUntypedConverter::*)(bool)>(&System::Xml::Schema::XmlUntypedConverter::ToString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Schema::XmlUntypedConverter::*)(::System::DateTime)>(&System::Xml::Schema::XmlUntypedConverter::ToString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Schema::XmlUntypedConverter::*)(::System::DateTimeOffset)>(&System::Xml::Schema::XmlUntypedConverter::ToString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "DateTimeOffset")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Schema::XmlUntypedConverter::*)(::System::Decimal)>(&System::Xml::Schema::XmlUntypedConverter::ToString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Decimal")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Schema::XmlUntypedConverter::*)(double)>(&System::Xml::Schema::XmlUntypedConverter::ToString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Schema::XmlUntypedConverter::*)(int)>(&System::Xml::Schema::XmlUntypedConverter::ToString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Schema::XmlUntypedConverter::*)(int64_t)>(&System::Xml::Schema::XmlUntypedConverter::ToString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Schema::XmlUntypedConverter::*)(float)>(&System::Xml::Schema::XmlUntypedConverter::ToString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Xml::Schema::XmlUntypedConverter::*)(::Il2CppObject*, ::System::Xml::IXmlNamespaceResolver*)>(&System::Xml::Schema::XmlUntypedConverter::ToString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* nsResolver = &::il2cpp_utils::GetClassFromName("System.Xml", "IXmlNamespaceResolver")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, nsResolver});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ChangeType
// Il2CppName: ChangeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Schema::XmlUntypedConverter::*)(bool, ::System::Type*)>(&System::Xml::Schema::XmlUntypedConverter::ChangeType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* destinationType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ChangeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, destinationType});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ChangeType
// Il2CppName: ChangeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Schema::XmlUntypedConverter::*)(::System::DateTime, ::System::Type*)>(&System::Xml::Schema::XmlUntypedConverter::ChangeType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    static auto* destinationType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ChangeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, destinationType});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ChangeType
// Il2CppName: ChangeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Schema::XmlUntypedConverter::*)(::System::Decimal, ::System::Type*)>(&System::Xml::Schema::XmlUntypedConverter::ChangeType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Decimal")->byval_arg;
    static auto* destinationType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ChangeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, destinationType});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ChangeType
// Il2CppName: ChangeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Schema::XmlUntypedConverter::*)(double, ::System::Type*)>(&System::Xml::Schema::XmlUntypedConverter::ChangeType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* destinationType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ChangeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, destinationType});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ChangeType
// Il2CppName: ChangeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Schema::XmlUntypedConverter::*)(int, ::System::Type*)>(&System::Xml::Schema::XmlUntypedConverter::ChangeType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* destinationType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ChangeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, destinationType});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ChangeType
// Il2CppName: ChangeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Schema::XmlUntypedConverter::*)(int64_t, ::System::Type*)>(&System::Xml::Schema::XmlUntypedConverter::ChangeType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* destinationType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ChangeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, destinationType});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ChangeType
// Il2CppName: ChangeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Schema::XmlUntypedConverter::*)(::StringW, ::System::Type*, ::System::Xml::IXmlNamespaceResolver*)>(&System::Xml::Schema::XmlUntypedConverter::ChangeType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* destinationType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* nsResolver = &::il2cpp_utils::GetClassFromName("System.Xml", "IXmlNamespaceResolver")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ChangeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, destinationType, nsResolver});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ChangeType
// Il2CppName: ChangeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Schema::XmlUntypedConverter::*)(::Il2CppObject*, ::System::Type*, ::System::Xml::IXmlNamespaceResolver*)>(&System::Xml::Schema::XmlUntypedConverter::ChangeType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* destinationType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* nsResolver = &::il2cpp_utils::GetClassFromName("System.Xml", "IXmlNamespaceResolver")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ChangeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, destinationType, nsResolver});
  }
};
// Writing MetadataGetter for method: System::Xml::Schema::XmlUntypedConverter::ChangeListType
// Il2CppName: ChangeListType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Xml::Schema::XmlUntypedConverter::*)(::Il2CppObject*, ::System::Type*, ::System::Xml::IXmlNamespaceResolver*)>(&System::Xml::Schema::XmlUntypedConverter::ChangeListType)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* destinationType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* nsResolver = &::il2cpp_utils::GetClassFromName("System.Xml", "IXmlNamespaceResolver")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlUntypedConverter*), "ChangeListType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, destinationType, nsResolver});
  }
};
