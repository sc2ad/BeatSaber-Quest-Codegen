// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Diagnostics.Tracing.ActivityFilter
#include "System/Diagnostics/Tracing/ActivityFilter.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: KeyValuePair`2<TKey, TValue>
  template<typename TKey, typename TValue>
  struct KeyValuePair_2;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Diagnostics::Tracing::ActivityFilter::$$c__DisplayClass13_0);
DEFINE_IL2CPP_ARG_TYPE(::System::Diagnostics::Tracing::ActivityFilter::$$c__DisplayClass13_0*, "System.Diagnostics.Tracing", "ActivityFilter/<>c__DisplayClass13_0");
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<>c__DisplayClass13_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class ActivityFilter::$$c__DisplayClass13_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 tickNow
    // Size: 0x4
    // Offset: 0x10
    int tickNow;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return tickNow;
    }
    // Get instance field reference: public System.Int32 tickNow
    [[deprecated("Use field access instead!")]] int& dyn_tickNow();
    // System.Int32 <TrimActiveActivityStore>b__0(System.Collections.Generic.KeyValuePair`2<System.Guid,System.Int32> x, System.Collections.Generic.KeyValuePair`2<System.Guid,System.Int32> y)
    // Offset: 0xD400A0
    int $TrimActiveActivityStore$b__0(::System::Collections::Generic::KeyValuePair_2<::System::Guid, int> x, ::System::Collections::Generic::KeyValuePair_2<::System::Guid, int> y);
    // public System.Void .ctor()
    // Offset: 0xD3FFDC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ActivityFilter::$$c__DisplayClass13_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::ActivityFilter::$$c__DisplayClass13_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ActivityFilter::$$c__DisplayClass13_0*, creationType>()));
    }
  }; // System.Diagnostics.Tracing.ActivityFilter/System.Diagnostics.Tracing.<>c__DisplayClass13_0
  #pragma pack(pop)
  static check_size<sizeof(ActivityFilter::$$c__DisplayClass13_0), 16 + sizeof(int)> __System_Diagnostics_Tracing_ActivityFilter_$$c__DisplayClass13_0SizeCheck;
  static_assert(sizeof(ActivityFilter::$$c__DisplayClass13_0) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Diagnostics::Tracing::ActivityFilter::$$c__DisplayClass13_0::$TrimActiveActivityStore$b__0
// Il2CppName: <TrimActiveActivityStore>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Diagnostics::Tracing::ActivityFilter::$$c__DisplayClass13_0::*)(::System::Collections::Generic::KeyValuePair_2<::System::Guid, int>, ::System::Collections::Generic::KeyValuePair_2<::System::Guid, int>)>(&System::Diagnostics::Tracing::ActivityFilter::$$c__DisplayClass13_0::$TrimActiveActivityStore$b__0)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Guid"), ::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* y = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "KeyValuePair`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Guid"), ::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::ActivityFilter::$$c__DisplayClass13_0*), "<TrimActiveActivityStore>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::ActivityFilter::$$c__DisplayClass13_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
