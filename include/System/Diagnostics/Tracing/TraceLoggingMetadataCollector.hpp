// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldTags
#include "System/Diagnostics/Tracing/EventFieldTags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Diagnostics::Tracing
namespace System::Diagnostics::Tracing {
  // Forward declaring type: FieldMetadata
  class FieldMetadata;
  // Forward declaring type: TraceLoggingDataType
  struct TraceLoggingDataType;
}
// Completed forward declares
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Forward declaring type: TraceLoggingMetadataCollector
  class TraceLoggingMetadataCollector;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector);
DEFINE_IL2CPP_ARG_TYPE(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector*, "System.Diagnostics.Tracing", "TraceLoggingMetadataCollector");
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
  // [TokenAttribute] Offset: FFFFFFFF
  class TraceLoggingMetadataCollector : public ::Il2CppObject {
    public:
    // Nested type: ::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl
    class Impl;
    public:
    // private readonly System.Diagnostics.Tracing.TraceLoggingMetadataCollector/System.Diagnostics.Tracing.Impl impl
    // Size: 0x8
    // Offset: 0x10
    ::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl* impl;
    // Field size check
    static_assert(sizeof(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl*) == 0x8);
    // private readonly System.Diagnostics.Tracing.FieldMetadata currentGroup
    // Size: 0x8
    // Offset: 0x18
    ::System::Diagnostics::Tracing::FieldMetadata* currentGroup;
    // Field size check
    static_assert(sizeof(::System::Diagnostics::Tracing::FieldMetadata*) == 0x8);
    // private System.Int32 bufferedArrayFieldCount
    // Size: 0x4
    // Offset: 0x20
    int bufferedArrayFieldCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Diagnostics.Tracing.EventFieldTags <Tags>k__BackingField
    // Size: 0x4
    // Offset: 0x24
    ::System::Diagnostics::Tracing::EventFieldTags Tags;
    // Field size check
    static_assert(sizeof(::System::Diagnostics::Tracing::EventFieldTags) == 0x4);
    public:
    // Get instance field reference: private readonly System.Diagnostics.Tracing.TraceLoggingMetadataCollector/System.Diagnostics.Tracing.Impl impl
    [[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::Impl*& dyn_impl();
    // Get instance field reference: private readonly System.Diagnostics.Tracing.FieldMetadata currentGroup
    [[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::FieldMetadata*& dyn_currentGroup();
    // Get instance field reference: private System.Int32 bufferedArrayFieldCount
    [[deprecated("Use field access instead!")]] int& dyn_bufferedArrayFieldCount();
    // Get instance field reference: private System.Diagnostics.Tracing.EventFieldTags <Tags>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventFieldTags& dyn_$Tags$k__BackingField();
    // System.Diagnostics.Tracing.EventFieldTags get_Tags()
    // Offset: 0xDE5DE8
    ::System::Diagnostics::Tracing::EventFieldTags get_Tags();
    // System.Void set_Tags(System.Diagnostics.Tracing.EventFieldTags value)
    // Offset: 0xDE5DF0
    void set_Tags(::System::Diagnostics::Tracing::EventFieldTags value);
    // System.Int32 get_ScratchSize()
    // Offset: 0xDE5BE8
    int get_ScratchSize();
    // System.Int32 get_DataCount()
    // Offset: 0xDE5C04
    int get_DataCount();
    // System.Int32 get_PinCount()
    // Offset: 0xDE5C20
    int get_PinCount();
    // private System.Boolean get_BeginningBufferedArray()
    // Offset: 0xDE5DF8
    bool get_BeginningBufferedArray();
    // private System.Void .ctor(System.Diagnostics.Tracing.TraceLoggingMetadataCollector other, System.Diagnostics.Tracing.FieldMetadata group)
    // Offset: 0xDE5D9C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TraceLoggingMetadataCollector* New_ctor(::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* other, ::System::Diagnostics::Tracing::FieldMetadata* group) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TraceLoggingMetadataCollector*, creationType>(other, group)));
    }
    // public System.Diagnostics.Tracing.TraceLoggingMetadataCollector AddGroup(System.String name)
    // Offset: 0xDE5E08
    ::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* AddGroup(::StringW name);
    // public System.Void AddScalar(System.String name, System.Diagnostics.Tracing.TraceLoggingDataType type)
    // Offset: 0xDDDAA8
    void AddScalar(::StringW name, ::System::Diagnostics::Tracing::TraceLoggingDataType type);
    // public System.Void AddBinary(System.String name, System.Diagnostics.Tracing.TraceLoggingDataType type)
    // Offset: 0xDE4648
    void AddBinary(::StringW name, ::System::Diagnostics::Tracing::TraceLoggingDataType type);
    // public System.Void AddArray(System.String name, System.Diagnostics.Tracing.TraceLoggingDataType type)
    // Offset: 0xDDD7E4
    void AddArray(::StringW name, ::System::Diagnostics::Tracing::TraceLoggingDataType type);
    // public System.Void BeginBufferedArray()
    // Offset: 0xDE60A4
    void BeginBufferedArray();
    // public System.Void EndBufferedArray()
    // Offset: 0xDE6190
    void EndBufferedArray();
    // System.Byte[] GetMetadata()
    // Offset: 0xDE5B60
    ::ArrayW<uint8_t> GetMetadata();
    // private System.Void AddField(System.Diagnostics.Tracing.FieldMetadata fieldMetadata)
    // Offset: 0xDE5EDC
    void AddField(::System::Diagnostics::Tracing::FieldMetadata* fieldMetadata);
    // System.Void .ctor()
    // Offset: 0xDE5AF0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TraceLoggingMetadataCollector* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TraceLoggingMetadataCollector::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TraceLoggingMetadataCollector*, creationType>()));
    }
  }; // System.Diagnostics.Tracing.TraceLoggingMetadataCollector
  #pragma pack(pop)
  static check_size<sizeof(TraceLoggingMetadataCollector), 36 + sizeof(::System::Diagnostics::Tracing::EventFieldTags)> __System_Diagnostics_Tracing_TraceLoggingMetadataCollectorSizeCheck;
  static_assert(sizeof(TraceLoggingMetadataCollector) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_Tags
// Il2CppName: get_Tags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Diagnostics::Tracing::EventFieldTags (System::Diagnostics::Tracing::TraceLoggingMetadataCollector::*)()>(&System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_Tags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingMetadataCollector*), "get_Tags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingMetadataCollector::set_Tags
// Il2CppName: set_Tags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingMetadataCollector::*)(::System::Diagnostics::Tracing::EventFieldTags)>(&System::Diagnostics::Tracing::TraceLoggingMetadataCollector::set_Tags)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Diagnostics.Tracing", "EventFieldTags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingMetadataCollector*), "set_Tags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_ScratchSize
// Il2CppName: get_ScratchSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Diagnostics::Tracing::TraceLoggingMetadataCollector::*)()>(&System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_ScratchSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingMetadataCollector*), "get_ScratchSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_DataCount
// Il2CppName: get_DataCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Diagnostics::Tracing::TraceLoggingMetadataCollector::*)()>(&System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_DataCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingMetadataCollector*), "get_DataCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_PinCount
// Il2CppName: get_PinCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Diagnostics::Tracing::TraceLoggingMetadataCollector::*)()>(&System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_PinCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingMetadataCollector*), "get_PinCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_BeginningBufferedArray
// Il2CppName: get_BeginningBufferedArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Diagnostics::Tracing::TraceLoggingMetadataCollector::*)()>(&System::Diagnostics::Tracing::TraceLoggingMetadataCollector::get_BeginningBufferedArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingMetadataCollector*), "get_BeginningBufferedArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingMetadataCollector::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddGroup
// Il2CppName: AddGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Diagnostics::Tracing::TraceLoggingMetadataCollector* (System::Diagnostics::Tracing::TraceLoggingMetadataCollector::*)(::StringW)>(&System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddGroup)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingMetadataCollector*), "AddGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddScalar
// Il2CppName: AddScalar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingMetadataCollector::*)(::StringW, ::System::Diagnostics::Tracing::TraceLoggingDataType)>(&System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddScalar)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System.Diagnostics.Tracing", "TraceLoggingDataType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingMetadataCollector*), "AddScalar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, type});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddBinary
// Il2CppName: AddBinary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingMetadataCollector::*)(::StringW, ::System::Diagnostics::Tracing::TraceLoggingDataType)>(&System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddBinary)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System.Diagnostics.Tracing", "TraceLoggingDataType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingMetadataCollector*), "AddBinary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, type});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddArray
// Il2CppName: AddArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingMetadataCollector::*)(::StringW, ::System::Diagnostics::Tracing::TraceLoggingDataType)>(&System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddArray)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System.Diagnostics.Tracing", "TraceLoggingDataType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingMetadataCollector*), "AddArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, type});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingMetadataCollector::BeginBufferedArray
// Il2CppName: BeginBufferedArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingMetadataCollector::*)()>(&System::Diagnostics::Tracing::TraceLoggingMetadataCollector::BeginBufferedArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingMetadataCollector*), "BeginBufferedArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingMetadataCollector::EndBufferedArray
// Il2CppName: EndBufferedArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingMetadataCollector::*)()>(&System::Diagnostics::Tracing::TraceLoggingMetadataCollector::EndBufferedArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingMetadataCollector*), "EndBufferedArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingMetadataCollector::GetMetadata
// Il2CppName: GetMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Diagnostics::Tracing::TraceLoggingMetadataCollector::*)()>(&System::Diagnostics::Tracing::TraceLoggingMetadataCollector::GetMetadata)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingMetadataCollector*), "GetMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddField
// Il2CppName: AddField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TraceLoggingMetadataCollector::*)(::System::Diagnostics::Tracing::FieldMetadata*)>(&System::Diagnostics::Tracing::TraceLoggingMetadataCollector::AddField)> {
  static const MethodInfo* get() {
    static auto* fieldMetadata = &::il2cpp_utils::GetClassFromName("System.Diagnostics.Tracing", "FieldMetadata")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TraceLoggingMetadataCollector*), "AddField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fieldMetadata});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TraceLoggingMetadataCollector::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
