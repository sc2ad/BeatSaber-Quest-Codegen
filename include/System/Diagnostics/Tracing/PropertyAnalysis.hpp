// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MethodInfo
  class MethodInfo;
}
// Forward declaring namespace: System::Diagnostics::Tracing
namespace System::Diagnostics::Tracing {
  // Forward declaring type: TraceLoggingTypeInfo
  class TraceLoggingTypeInfo;
  // Forward declaring type: EventFieldAttribute
  class EventFieldAttribute;
}
// Completed forward declares
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Forward declaring type: PropertyAnalysis
  class PropertyAnalysis;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Diagnostics::Tracing::PropertyAnalysis);
DEFINE_IL2CPP_ARG_TYPE(::System::Diagnostics::Tracing::PropertyAnalysis*, "System.Diagnostics.Tracing", "PropertyAnalysis");
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: System.Diagnostics.Tracing.PropertyAnalysis
  // [TokenAttribute] Offset: FFFFFFFF
  class PropertyAnalysis : public ::Il2CppObject {
    public:
    public:
    // readonly System.String name
    // Size: 0x8
    // Offset: 0x10
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // readonly System.Reflection.MethodInfo getterInfo
    // Size: 0x8
    // Offset: 0x18
    ::System::Reflection::MethodInfo* getterInfo;
    // Field size check
    static_assert(sizeof(::System::Reflection::MethodInfo*) == 0x8);
    // readonly System.Diagnostics.Tracing.TraceLoggingTypeInfo typeInfo
    // Size: 0x8
    // Offset: 0x20
    ::System::Diagnostics::Tracing::TraceLoggingTypeInfo* typeInfo;
    // Field size check
    static_assert(sizeof(::System::Diagnostics::Tracing::TraceLoggingTypeInfo*) == 0x8);
    // readonly System.Diagnostics.Tracing.EventFieldAttribute fieldAttribute
    // Size: 0x8
    // Offset: 0x28
    ::System::Diagnostics::Tracing::EventFieldAttribute* fieldAttribute;
    // Field size check
    static_assert(sizeof(::System::Diagnostics::Tracing::EventFieldAttribute*) == 0x8);
    public:
    // Get instance field reference: readonly System.String name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_name();
    // Get instance field reference: readonly System.Reflection.MethodInfo getterInfo
    [[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& dyn_getterInfo();
    // Get instance field reference: readonly System.Diagnostics.Tracing.TraceLoggingTypeInfo typeInfo
    [[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::TraceLoggingTypeInfo*& dyn_typeInfo();
    // Get instance field reference: readonly System.Diagnostics.Tracing.EventFieldAttribute fieldAttribute
    [[deprecated("Use field access instead!")]] ::System::Diagnostics::Tracing::EventFieldAttribute*& dyn_fieldAttribute();
    // public System.Void .ctor(System.String name, System.Reflection.MethodInfo getterInfo, System.Diagnostics.Tracing.TraceLoggingTypeInfo typeInfo, System.Diagnostics.Tracing.EventFieldAttribute fieldAttribute)
    // Offset: 0xDE367C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PropertyAnalysis* New_ctor(::StringW name, ::System::Reflection::MethodInfo* getterInfo, ::System::Diagnostics::Tracing::TraceLoggingTypeInfo* typeInfo, ::System::Diagnostics::Tracing::EventFieldAttribute* fieldAttribute) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::PropertyAnalysis::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PropertyAnalysis*, creationType>(name, getterInfo, typeInfo, fieldAttribute)));
    }
  }; // System.Diagnostics.Tracing.PropertyAnalysis
  #pragma pack(pop)
  static check_size<sizeof(PropertyAnalysis), 40 + sizeof(::System::Diagnostics::Tracing::EventFieldAttribute*)> __System_Diagnostics_Tracing_PropertyAnalysisSizeCheck;
  static_assert(sizeof(PropertyAnalysis) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Diagnostics::Tracing::PropertyAnalysis::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
