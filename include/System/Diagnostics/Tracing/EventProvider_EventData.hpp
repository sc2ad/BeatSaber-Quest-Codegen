// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Forward declaring type: EventData
  struct EventProvider_EventData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Diagnostics::Tracing::EventProvider_EventData, "System.Diagnostics.Tracing", "EventProvider/EventData");
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.EventData
  // [TokenAttribute] Offset: FFFFFFFF
  struct EventProvider_EventData/*, public ::System::ValueType*/ {
    public:
    public:
    // System.UInt64 Ptr
    // Size: 0x8
    // Offset: 0x0
    uint64_t Ptr;
    // Field size check
    static_assert(sizeof(uint64_t) == 0x8);
    // System.UInt32 Size
    // Size: 0x4
    // Offset: 0x8
    uint Size;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // System.UInt32 Reserved
    // Size: 0x4
    // Offset: 0xC
    uint Reserved;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Creating value type constructor for type: EventProvider_EventData
    constexpr EventProvider_EventData(uint64_t Ptr_ = {}, uint Size_ = {}, uint Reserved_ = {}) noexcept : Ptr{Ptr_}, Size{Size_}, Reserved{Reserved_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: System.UInt64 Ptr
    [[deprecated("Use field access instead!")]] uint64_t& dyn_Ptr();
    // Get instance field reference: System.UInt32 Size
    [[deprecated("Use field access instead!")]] uint& dyn_Size();
    // Get instance field reference: System.UInt32 Reserved
    [[deprecated("Use field access instead!")]] uint& dyn_Reserved();
  }; // System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.EventData
  #pragma pack(pop)
  static check_size<sizeof(EventProvider_EventData), 12 + sizeof(uint)> __System_Diagnostics_Tracing_EventProvider_EventDataSizeCheck;
  static_assert(sizeof(EventProvider_EventData) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
