// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Diagnostics.Tracing.EventSource
#include "System/Diagnostics/Tracing/EventSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Diagnostics::Tracing
namespace System::Diagnostics::Tracing {
}
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: Guid because it is already included!
}
// Completed forward declares
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Forward declaring type: TplEtwProvider
  class TplEtwProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Diagnostics::Tracing::TplEtwProvider);
DEFINE_IL2CPP_ARG_TYPE(::System::Diagnostics::Tracing::TplEtwProvider*, "System.Diagnostics.Tracing", "TplEtwProvider");
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Size: 0xD0
  #pragma pack(push, 1)
  // Autogenerated type: System.Diagnostics.Tracing.TplEtwProvider
  // [TokenAttribute] Offset: FFFFFFFF
  // [EventSourceAttribute] Offset: 8F6E14
  class TplEtwProvider : public ::System::Diagnostics::Tracing::EventSource {
    public:
    // Nested type: ::System::Diagnostics::Tracing::TplEtwProvider::Keywords
    class Keywords;
    // Get static field: static public System.Diagnostics.Tracing.TplEtwProvider Log
    static ::System::Diagnostics::Tracing::TplEtwProvider* _get_Log();
    // Set static field: static public System.Diagnostics.Tracing.TplEtwProvider Log
    static void _set_Log(::System::Diagnostics::Tracing::TplEtwProvider* value);
    // public System.Boolean get_Debug()
    // Offset: 0xDE4978
    bool get_Debug();
    // public System.Void DebugFacilityMessage(System.String Facility, System.String Message)
    // Offset: 0xDE4988
    void DebugFacilityMessage(::StringW Facility, ::StringW Message);
    // public System.Void DebugFacilityMessage1(System.String Facility, System.String Message, System.String Arg)
    // Offset: 0xDE499C
    void DebugFacilityMessage1(::StringW Facility, ::StringW Message, ::StringW Arg);
    // public System.Void SetActivityId(System.Guid Id)
    // Offset: 0xDE49B4
    void SetActivityId(::System::Guid Id);
    // public System.Void .ctor()
    // Offset: 0xDE4A98
    // Implemented from: System.Diagnostics.Tracing.EventSource
    // Base method: System.Void EventSource::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TplEtwProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::TplEtwProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TplEtwProvider*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0xDE4B00
    // Implemented from: System.Diagnostics.Tracing.EventSource
    // Base method: System.Void EventSource::.cctor()
    static void _cctor();
  }; // System.Diagnostics.Tracing.TplEtwProvider
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TplEtwProvider::get_Debug
// Il2CppName: get_Debug
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Diagnostics::Tracing::TplEtwProvider::*)()>(&System::Diagnostics::Tracing::TplEtwProvider::get_Debug)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TplEtwProvider*), "get_Debug", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TplEtwProvider::DebugFacilityMessage
// Il2CppName: DebugFacilityMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TplEtwProvider::*)(::StringW, ::StringW)>(&System::Diagnostics::Tracing::TplEtwProvider::DebugFacilityMessage)> {
  static const MethodInfo* get() {
    static auto* Facility = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* Message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TplEtwProvider*), "DebugFacilityMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{Facility, Message});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TplEtwProvider::DebugFacilityMessage1
// Il2CppName: DebugFacilityMessage1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TplEtwProvider::*)(::StringW, ::StringW, ::StringW)>(&System::Diagnostics::Tracing::TplEtwProvider::DebugFacilityMessage1)> {
  static const MethodInfo* get() {
    static auto* Facility = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* Message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* Arg = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TplEtwProvider*), "DebugFacilityMessage1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{Facility, Message, Arg});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TplEtwProvider::SetActivityId
// Il2CppName: SetActivityId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Diagnostics::Tracing::TplEtwProvider::*)(::System::Guid)>(&System::Diagnostics::Tracing::TplEtwProvider::SetActivityId)> {
  static const MethodInfo* get() {
    static auto* Id = &::il2cpp_utils::GetClassFromName("System", "Guid")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TplEtwProvider*), "SetActivityId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{Id});
  }
};
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TplEtwProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Diagnostics::Tracing::TplEtwProvider::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Diagnostics::Tracing::TplEtwProvider::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Diagnostics::Tracing::TplEtwProvider*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
