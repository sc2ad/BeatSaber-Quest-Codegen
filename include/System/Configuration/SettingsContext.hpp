// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Configuration
namespace System::Configuration {
  // Forward declaring type: SettingsContext
  class SettingsContext;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Configuration::SettingsContext);
DEFINE_IL2CPP_ARG_TYPE(::System::Configuration::SettingsContext*, "System.Configuration", "SettingsContext");
// Type namespace: System.Configuration
namespace System::Configuration {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: System.Configuration.SettingsContext
  // [TokenAttribute] Offset: FFFFFFFF
  class SettingsContext : public ::System::Collections::Hashtable {
    public:
    // public System.Void .ctor()
    // Offset: 0x1585DC4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SettingsContext* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::SettingsContext::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SettingsContext*, creationType>()));
    }
  }; // System.Configuration.SettingsContext
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Configuration::SettingsContext::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
