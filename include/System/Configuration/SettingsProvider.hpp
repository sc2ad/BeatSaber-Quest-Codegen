// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Configuration.Provider.ProviderBase
#include "System/Configuration/Provider/ProviderBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Configuration
namespace System::Configuration {
  // Forward declaring type: SettingsPropertyValueCollection
  class SettingsPropertyValueCollection;
  // Forward declaring type: SettingsContext
  class SettingsContext;
  // Forward declaring type: SettingsPropertyCollection
  class SettingsPropertyCollection;
}
// Completed forward declares
// Type namespace: System.Configuration
namespace System::Configuration {
  // Forward declaring type: SettingsProvider
  class SettingsProvider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Configuration::SettingsProvider);
DEFINE_IL2CPP_ARG_TYPE(::System::Configuration::SettingsProvider*, "System.Configuration", "SettingsProvider");
// Type namespace: System.Configuration
namespace System::Configuration {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Configuration.SettingsProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class SettingsProvider : public ::System::Configuration::Provider::ProviderBase {
    public:
    // public System.String get_ApplicationName()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_ApplicationName();
    // public System.Void set_ApplicationName(System.String value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_ApplicationName(::StringW value);
    // protected System.Void .ctor()
    // Offset: 0x1587314
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SettingsProvider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::SettingsProvider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SettingsProvider*, creationType>()));
    }
    // public System.Configuration.SettingsPropertyValueCollection GetPropertyValues(System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Configuration::SettingsPropertyValueCollection* GetPropertyValues(::System::Configuration::SettingsContext* context, ::System::Configuration::SettingsPropertyCollection* collection);
    // public System.Void SetPropertyValues(System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetPropertyValues(::System::Configuration::SettingsContext* context, ::System::Configuration::SettingsPropertyValueCollection* collection);
  }; // System.Configuration.SettingsProvider
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Configuration::SettingsProvider::get_ApplicationName
// Il2CppName: get_ApplicationName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Configuration::SettingsProvider::*)()>(&System::Configuration::SettingsProvider::get_ApplicationName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingsProvider*), "get_ApplicationName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingsProvider::set_ApplicationName
// Il2CppName: set_ApplicationName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Configuration::SettingsProvider::*)(::StringW)>(&System::Configuration::SettingsProvider::set_ApplicationName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingsProvider*), "set_ApplicationName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingsProvider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Configuration::SettingsProvider::GetPropertyValues
// Il2CppName: GetPropertyValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Configuration::SettingsPropertyValueCollection* (System::Configuration::SettingsProvider::*)(::System::Configuration::SettingsContext*, ::System::Configuration::SettingsPropertyCollection*)>(&System::Configuration::SettingsProvider::GetPropertyValues)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Configuration", "SettingsContext")->byval_arg;
    static auto* collection = &::il2cpp_utils::GetClassFromName("System.Configuration", "SettingsPropertyCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingsProvider*), "GetPropertyValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, collection});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingsProvider::SetPropertyValues
// Il2CppName: SetPropertyValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Configuration::SettingsProvider::*)(::System::Configuration::SettingsContext*, ::System::Configuration::SettingsPropertyValueCollection*)>(&System::Configuration::SettingsProvider::SetPropertyValues)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Configuration", "SettingsContext")->byval_arg;
    static auto* collection = &::il2cpp_utils::GetClassFromName("System.Configuration", "SettingsPropertyValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingsProvider*), "SetPropertyValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context, collection});
  }
};
