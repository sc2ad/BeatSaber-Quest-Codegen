// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Configuration.SpecialSetting
#include "System/Configuration/SpecialSetting.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Configuration
namespace System::Configuration {
  // Forward declaring type: SpecialSettingAttribute
  class SpecialSettingAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Configuration::SpecialSettingAttribute);
DEFINE_IL2CPP_ARG_TYPE(::System::Configuration::SpecialSettingAttribute*, "System.Configuration", "SpecialSettingAttribute");
// Type namespace: System.Configuration
namespace System::Configuration {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Configuration.SpecialSettingAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 900AFC
  class SpecialSettingAttribute : public ::System::Attribute {
    public:
    // public System.Configuration.SpecialSetting get_SpecialSetting()
    // Offset: 0x1587624
    ::System::Configuration::SpecialSetting get_SpecialSetting();
    // public System.Void .ctor(System.Configuration.SpecialSetting specialSetting)
    // Offset: 0x1587620
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SpecialSettingAttribute* New_ctor(::System::Configuration::SpecialSetting specialSetting) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::SpecialSettingAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SpecialSettingAttribute*, creationType>(specialSetting)));
    }
  }; // System.Configuration.SpecialSettingAttribute
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Configuration::SpecialSettingAttribute::get_SpecialSetting
// Il2CppName: get_SpecialSetting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Configuration::SpecialSetting (System::Configuration::SpecialSettingAttribute::*)()>(&System::Configuration::SpecialSettingAttribute::get_SpecialSetting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SpecialSettingAttribute*), "get_SpecialSetting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Configuration::SpecialSettingAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
