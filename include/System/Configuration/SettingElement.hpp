// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Configuration.ConfigurationElement
#include "System/Configuration/ConfigurationElement.hpp"
// Including type: System.Configuration.SettingsSerializeAs
#include "System/Configuration/SettingsSerializeAs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Configuration
namespace System::Configuration {
  // Forward declaring type: ConfigurationPropertyCollection
  class ConfigurationPropertyCollection;
  // Forward declaring type: SettingValueElement
  class SettingValueElement;
}
// Completed forward declares
// Type namespace: System.Configuration
namespace System::Configuration {
  // Forward declaring type: SettingElement
  class SettingElement;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Configuration::SettingElement);
DEFINE_IL2CPP_ARG_TYPE(::System::Configuration::SettingElement*, "System.Configuration", "SettingElement");
// Type namespace: System.Configuration
namespace System::Configuration {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Configuration.SettingElement
  // [TokenAttribute] Offset: FFFFFFFF
  class SettingElement : public ::System::Configuration::ConfigurationElement {
    public:
    // public System.String get_Name()
    // Offset: 0x1585404
    ::StringW get_Name();
    // public System.Void set_Name(System.String value)
    // Offset: 0x1585444
    void set_Name(::StringW value);
    // public System.Configuration.SettingsSerializeAs get_SerializeAs()
    // Offset: 0x15854C4
    ::System::Configuration::SettingsSerializeAs get_SerializeAs();
    // public System.Void set_SerializeAs(System.Configuration.SettingsSerializeAs value)
    // Offset: 0x1585504
    void set_SerializeAs(::System::Configuration::SettingsSerializeAs value);
    // public System.Configuration.SettingValueElement get_Value()
    // Offset: 0x1585544
    ::System::Configuration::SettingValueElement* get_Value();
    // public System.Void set_Value(System.Configuration.SettingValueElement value)
    // Offset: 0x1585584
    void set_Value(::System::Configuration::SettingValueElement* value);
    // public System.Void .ctor()
    // Offset: 0x1585384
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SettingElement* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::SettingElement::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SettingElement*, creationType>()));
    }
    // public System.Void .ctor(System.String name, System.Configuration.SettingsSerializeAs serializeAs)
    // Offset: 0x15853C4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SettingElement* New_ctor(::StringW name, ::System::Configuration::SettingsSerializeAs serializeAs) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::SettingElement::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SettingElement*, creationType>(name, serializeAs)));
    }
    // protected override System.Configuration.ConfigurationPropertyCollection get_Properties()
    // Offset: 0x1585484
    // Implemented from: System.Configuration.ConfigurationElement
    // Base method: System.Configuration.ConfigurationPropertyCollection ConfigurationElement::get_Properties()
    ::System::Configuration::ConfigurationPropertyCollection* get_Properties();
  }; // System.Configuration.SettingElement
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Configuration::SettingElement::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Configuration::SettingElement::*)()>(&System::Configuration::SettingElement::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingElement*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingElement::set_Name
// Il2CppName: set_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Configuration::SettingElement::*)(::StringW)>(&System::Configuration::SettingElement::set_Name)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingElement*), "set_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingElement::get_SerializeAs
// Il2CppName: get_SerializeAs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Configuration::SettingsSerializeAs (System::Configuration::SettingElement::*)()>(&System::Configuration::SettingElement::get_SerializeAs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingElement*), "get_SerializeAs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingElement::set_SerializeAs
// Il2CppName: set_SerializeAs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Configuration::SettingElement::*)(::System::Configuration::SettingsSerializeAs)>(&System::Configuration::SettingElement::set_SerializeAs)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Configuration", "SettingsSerializeAs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingElement*), "set_SerializeAs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingElement::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Configuration::SettingValueElement* (System::Configuration::SettingElement::*)()>(&System::Configuration::SettingElement::get_Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingElement*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingElement::set_Value
// Il2CppName: set_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Configuration::SettingElement::*)(::System::Configuration::SettingValueElement*)>(&System::Configuration::SettingElement::set_Value)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Configuration", "SettingValueElement")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingElement*), "set_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingElement::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Configuration::SettingElement::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Configuration::SettingElement::get_Properties
// Il2CppName: get_Properties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Configuration::ConfigurationPropertyCollection* (System::Configuration::SettingElement::*)()>(&System::Configuration::SettingElement::get_Properties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingElement*), "get_Properties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
