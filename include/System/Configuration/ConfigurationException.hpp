// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.SystemException
#include "System/SystemException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: Exception because it is already included!
}
// Forward declaring namespace: System::Xml
namespace System::Xml {
  // Forward declaring type: XmlNode
  class XmlNode;
}
// Completed forward declares
// Type namespace: System.Configuration
namespace System::Configuration {
  // Forward declaring type: ConfigurationException
  class ConfigurationException;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Configuration::ConfigurationException);
DEFINE_IL2CPP_ARG_TYPE(::System::Configuration::ConfigurationException*, "System.Configuration", "ConfigurationException");
// Type namespace: System.Configuration
namespace System::Configuration {
  // Size: 0x88
  #pragma pack(push, 1)
  // Autogenerated type: System.Configuration.ConfigurationException
  // [TokenAttribute] Offset: FFFFFFFF
  class ConfigurationException : public ::System::SystemException {
    public:
    // public System.String get_BareMessage()
    // Offset: 0x15844F8
    ::StringW get_BareMessage();
    // public System.String get_Filename()
    // Offset: 0x1584538
    ::StringW get_Filename();
    // public System.Int32 get_Line()
    // Offset: 0x1584578
    int get_Line();
    // public System.Void .ctor()
    // Offset: 0x15842F8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConfigurationException* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConfigurationException*, creationType>()));
    }
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1584338
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConfigurationException* New_ctor(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConfigurationException*, creationType>(info, context)));
    }
    // public System.Void .ctor(System.String message)
    // Offset: 0x1584378
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConfigurationException* New_ctor(::StringW message) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConfigurationException*, creationType>(message)));
    }
    // public System.Void .ctor(System.String message, System.Exception inner)
    // Offset: 0x15843B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConfigurationException* New_ctor(::StringW message, ::System::Exception* inner) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConfigurationException*, creationType>(message, inner)));
    }
    // public System.Void .ctor(System.String message, System.Exception inner, System.String filename, System.Int32 line)
    // Offset: 0x15843F8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConfigurationException* New_ctor(::StringW message, ::System::Exception* inner, ::StringW filename, int line) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConfigurationException*, creationType>(message, inner, filename, line)));
    }
    // public System.Void .ctor(System.String message, System.Exception inner, System.Xml.XmlNode node)
    // Offset: 0x1584438
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConfigurationException* New_ctor(::StringW message, ::System::Exception* inner, ::System::Xml::XmlNode* node) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConfigurationException*, creationType>(message, inner, node)));
    }
    // public System.Void .ctor(System.String message, System.String filename, System.Int32 line)
    // Offset: 0x1584478
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConfigurationException* New_ctor(::StringW message, ::StringW filename, int line) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConfigurationException*, creationType>(message, filename, line)));
    }
    // public System.Void .ctor(System.String message, System.Xml.XmlNode node)
    // Offset: 0x15844B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConfigurationException* New_ctor(::StringW message, ::System::Xml::XmlNode* node) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConfigurationException*, creationType>(message, node)));
    }
    // static public System.String GetXmlNodeFilename(System.Xml.XmlNode node)
    // Offset: 0x15845B8
    static ::StringW GetXmlNodeFilename(::System::Xml::XmlNode* node);
    // static public System.Int32 GetXmlNodeLineNumber(System.Xml.XmlNode node)
    // Offset: 0x15845F8
    static int GetXmlNodeLineNumber(::System::Xml::XmlNode* node);
  }; // System.Configuration.ConfigurationException
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Configuration::ConfigurationException::get_BareMessage
// Il2CppName: get_BareMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Configuration::ConfigurationException::*)()>(&System::Configuration::ConfigurationException::get_BareMessage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::ConfigurationException*), "get_BareMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Configuration::ConfigurationException::get_Filename
// Il2CppName: get_Filename
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Configuration::ConfigurationException::*)()>(&System::Configuration::ConfigurationException::get_Filename)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::ConfigurationException*), "get_Filename", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Configuration::ConfigurationException::get_Line
// Il2CppName: get_Line
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Configuration::ConfigurationException::*)()>(&System::Configuration::ConfigurationException::get_Line)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::ConfigurationException*), "get_Line", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Configuration::ConfigurationException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Configuration::ConfigurationException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Configuration::ConfigurationException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Configuration::ConfigurationException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Configuration::ConfigurationException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Configuration::ConfigurationException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Configuration::ConfigurationException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Configuration::ConfigurationException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Configuration::ConfigurationException::GetXmlNodeFilename
// Il2CppName: GetXmlNodeFilename
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::Xml::XmlNode*)>(&System::Configuration::ConfigurationException::GetXmlNodeFilename)> {
  static const MethodInfo* get() {
    static auto* node = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::ConfigurationException*), "GetXmlNodeFilename", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{node});
  }
};
// Writing MetadataGetter for method: System::Configuration::ConfigurationException::GetXmlNodeLineNumber
// Il2CppName: GetXmlNodeLineNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::Xml::XmlNode*)>(&System::Configuration::ConfigurationException::GetXmlNodeLineNumber)> {
  static const MethodInfo* get() {
    static auto* node = &::il2cpp_utils::GetClassFromName("System.Xml", "XmlNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::ConfigurationException*), "GetXmlNodeLineNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{node});
  }
};
