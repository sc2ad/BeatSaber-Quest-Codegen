// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.ICloneable
#include "System/ICloneable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Configuration
namespace System::Configuration {
  // Forward declaring type: SettingsPropertyValue
  class SettingsPropertyValue;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: System.Configuration
namespace System::Configuration {
  // Forward declaring type: SettingsPropertyValueCollection
  class SettingsPropertyValueCollection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Configuration::SettingsPropertyValueCollection);
DEFINE_IL2CPP_ARG_TYPE(::System::Configuration::SettingsPropertyValueCollection*, "System.Configuration", "SettingsPropertyValueCollection");
// Type namespace: System.Configuration
namespace System::Configuration {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Configuration.SettingsPropertyValueCollection
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 9005FC
  class SettingsPropertyValueCollection : public ::Il2CppObject/*, public ::System::Collections::ICollection, public ::System::ICloneable*/ {
    public:
    // Creating interface conversion operator: operator ::System::Collections::ICollection
    operator ::System::Collections::ICollection() noexcept {
      return *reinterpret_cast<::System::Collections::ICollection*>(this);
    }
    // Creating interface conversion operator: operator ::System::ICloneable
    operator ::System::ICloneable() noexcept {
      return *reinterpret_cast<::System::ICloneable*>(this);
    }
    // public System.Int32 get_Count()
    // Offset: 0x1586F54
    int get_Count();
    // public System.Boolean get_IsSynchronized()
    // Offset: 0x1586F94
    bool get_IsSynchronized();
    // public System.Configuration.SettingsPropertyValue get_Item(System.String name)
    // Offset: 0x1586FD4
    ::System::Configuration::SettingsPropertyValue* get_Item(::StringW name);
    // public System.Object get_SyncRoot()
    // Offset: 0x1587014
    ::Il2CppObject* get_SyncRoot();
    // public System.Void .ctor()
    // Offset: 0x1586F14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SettingsPropertyValueCollection* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::SettingsPropertyValueCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SettingsPropertyValueCollection*, creationType>()));
    }
    // public System.Void Add(System.Configuration.SettingsPropertyValue property)
    // Offset: 0x1587054
    void Add(::System::Configuration::SettingsPropertyValue* property);
    // public System.Void Clear()
    // Offset: 0x1587094
    void Clear();
    // public System.Object Clone()
    // Offset: 0x15870D4
    ::Il2CppObject* Clone();
    // public System.Void CopyTo(System.Array array, System.Int32 index)
    // Offset: 0x1587114
    void CopyTo(::System::Array* array, int index);
    // public System.Collections.IEnumerator GetEnumerator()
    // Offset: 0x1587154
    ::System::Collections::IEnumerator* GetEnumerator();
    // public System.Void Remove(System.String name)
    // Offset: 0x1587194
    void Remove(::StringW name);
    // public System.Void SetReadOnly()
    // Offset: 0x15871D4
    void SetReadOnly();
  }; // System.Configuration.SettingsPropertyValueCollection
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Configuration::SettingsPropertyValueCollection::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Configuration::SettingsPropertyValueCollection::*)()>(&System::Configuration::SettingsPropertyValueCollection::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingsPropertyValueCollection*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingsPropertyValueCollection::get_IsSynchronized
// Il2CppName: get_IsSynchronized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Configuration::SettingsPropertyValueCollection::*)()>(&System::Configuration::SettingsPropertyValueCollection::get_IsSynchronized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingsPropertyValueCollection*), "get_IsSynchronized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingsPropertyValueCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Configuration::SettingsPropertyValue* (System::Configuration::SettingsPropertyValueCollection::*)(::StringW)>(&System::Configuration::SettingsPropertyValueCollection::get_Item)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingsPropertyValueCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingsPropertyValueCollection::get_SyncRoot
// Il2CppName: get_SyncRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Configuration::SettingsPropertyValueCollection::*)()>(&System::Configuration::SettingsPropertyValueCollection::get_SyncRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingsPropertyValueCollection*), "get_SyncRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingsPropertyValueCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Configuration::SettingsPropertyValueCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Configuration::SettingsPropertyValueCollection::*)(::System::Configuration::SettingsPropertyValue*)>(&System::Configuration::SettingsPropertyValueCollection::Add)> {
  static const MethodInfo* get() {
    static auto* property = &::il2cpp_utils::GetClassFromName("System.Configuration", "SettingsPropertyValue")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingsPropertyValueCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{property});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingsPropertyValueCollection::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Configuration::SettingsPropertyValueCollection::*)()>(&System::Configuration::SettingsPropertyValueCollection::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingsPropertyValueCollection*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingsPropertyValueCollection::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Configuration::SettingsPropertyValueCollection::*)()>(&System::Configuration::SettingsPropertyValueCollection::Clone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingsPropertyValueCollection*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingsPropertyValueCollection::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Configuration::SettingsPropertyValueCollection::*)(::System::Array*, int)>(&System::Configuration::SettingsPropertyValueCollection::CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingsPropertyValueCollection*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, index});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingsPropertyValueCollection::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (System::Configuration::SettingsPropertyValueCollection::*)()>(&System::Configuration::SettingsPropertyValueCollection::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingsPropertyValueCollection*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingsPropertyValueCollection::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Configuration::SettingsPropertyValueCollection::*)(::StringW)>(&System::Configuration::SettingsPropertyValueCollection::Remove)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingsPropertyValueCollection*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Configuration::SettingsPropertyValueCollection::SetReadOnly
// Il2CppName: SetReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Configuration::SettingsPropertyValueCollection::*)()>(&System::Configuration::SettingsPropertyValueCollection::SetReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Configuration::SettingsPropertyValueCollection*), "SetReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
