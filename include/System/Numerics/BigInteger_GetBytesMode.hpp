// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Numerics.BigInteger
#include "System/Numerics/BigInteger.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Numerics::BigInteger::GetBytesMode, "System.Numerics", "BigInteger/GetBytesMode");
// Type namespace: System.Numerics
namespace System::Numerics {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.Numerics.BigInteger/System.Numerics.GetBytesMode
  // [TokenAttribute] Offset: FFFFFFFF
  struct BigInteger::GetBytesMode/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: GetBytesMode
    constexpr GetBytesMode(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode AllocateArray
    static constexpr const int AllocateArray = 0;
    // Get static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode AllocateArray
    static ::System::Numerics::BigInteger::GetBytesMode _get_AllocateArray();
    // Set static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode AllocateArray
    static void _set_AllocateArray(::System::Numerics::BigInteger::GetBytesMode value);
    // static field const value: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Count
    static constexpr const int Count = 1;
    // Get static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Count
    static ::System::Numerics::BigInteger::GetBytesMode _get_Count();
    // Set static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Count
    static void _set_Count(::System::Numerics::BigInteger::GetBytesMode value);
    // static field const value: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Span
    static constexpr const int Span = 2;
    // Get static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Span
    static ::System::Numerics::BigInteger::GetBytesMode _get_Span();
    // Set static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Span
    static void _set_Span(::System::Numerics::BigInteger::GetBytesMode value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // System.Numerics.BigInteger/System.Numerics.GetBytesMode
  #pragma pack(pop)
  static check_size<sizeof(BigInteger::GetBytesMode), 0 + sizeof(int)> __System_Numerics_BigInteger_GetBytesModeSizeCheck;
  static_assert(sizeof(BigInteger::GetBytesMode) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
