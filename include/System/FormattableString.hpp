// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IFormattable
#include "System/IFormattable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IFormatProvider
  class IFormatProvider;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Forward declaring type: FormattableString
  class FormattableString;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::FormattableString);
DEFINE_IL2CPP_ARG_TYPE(::System::FormattableString*, "System", "FormattableString");
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.FormattableString
  // [TokenAttribute] Offset: FFFFFFFF
  class FormattableString : public ::Il2CppObject/*, public ::System::IFormattable*/ {
    public:
    // Creating interface conversion operator: operator ::System::IFormattable
    operator ::System::IFormattable() noexcept {
      return *reinterpret_cast<::System::IFormattable*>(this);
    }
    // public System.String get_Format()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_Format();
    // public System.Int32 get_ArgumentCount()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_ArgumentCount();
    // public System.Object[] GetArguments()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::ArrayW<::Il2CppObject*> GetArguments();
    // public System.Object GetArgument(System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* GetArgument(int index);
    // public System.String ToString(System.IFormatProvider formatProvider)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW ToString(::System::IFormatProvider* formatProvider);
    // private System.String System.IFormattable.ToString(System.String ignored, System.IFormatProvider formatProvider)
    // Offset: 0xDEFA9C
    ::StringW System_IFormattable_ToString(::StringW ignored, ::System::IFormatProvider* formatProvider);
    // protected System.Void .ctor()
    // Offset: 0xDEFB28
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FormattableString* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::FormattableString::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FormattableString*, creationType>()));
    }
    // public override System.String ToString()
    // Offset: 0xDEFAB0
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // System.FormattableString
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::FormattableString::get_Format
// Il2CppName: get_Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::FormattableString::*)()>(&System::FormattableString::get_Format)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::FormattableString*), "get_Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::FormattableString::get_ArgumentCount
// Il2CppName: get_ArgumentCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::FormattableString::*)()>(&System::FormattableString::get_ArgumentCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::FormattableString*), "get_ArgumentCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::FormattableString::GetArguments
// Il2CppName: GetArguments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppObject*> (System::FormattableString::*)()>(&System::FormattableString::GetArguments)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::FormattableString*), "GetArguments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::FormattableString::GetArgument
// Il2CppName: GetArgument
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::FormattableString::*)(int)>(&System::FormattableString::GetArgument)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::FormattableString*), "GetArgument", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::FormattableString::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::FormattableString::*)(::System::IFormatProvider*)>(&System::FormattableString::ToString)> {
  static const MethodInfo* get() {
    static auto* formatProvider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::FormattableString*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{formatProvider});
  }
};
// Writing MetadataGetter for method: System::FormattableString::System_IFormattable_ToString
// Il2CppName: System.IFormattable.ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::FormattableString::*)(::StringW, ::System::IFormatProvider*)>(&System::FormattableString::System_IFormattable_ToString)> {
  static const MethodInfo* get() {
    static auto* ignored = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* formatProvider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::FormattableString*), "System.IFormattable.ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ignored, formatProvider});
  }
};
// Writing MetadataGetter for method: System::FormattableString::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::FormattableString::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::FormattableString::*)()>(&System::FormattableString::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::FormattableString*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
