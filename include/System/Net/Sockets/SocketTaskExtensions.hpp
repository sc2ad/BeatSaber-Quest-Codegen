// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net::Sockets
namespace System::Net::Sockets {
  // Forward declaring type: Socket
  class Socket;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task
  class Task;
}
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: IPAddress
  class IPAddress;
}
// Completed forward declares
// Type namespace: System.Net.Sockets
namespace System::Net::Sockets {
  // Forward declaring type: SocketTaskExtensions
  class SocketTaskExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::Sockets::SocketTaskExtensions);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::Sockets::SocketTaskExtensions*, "System.Net.Sockets", "SocketTaskExtensions");
// Type namespace: System.Net.Sockets
namespace System::Net::Sockets {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.Sockets.SocketTaskExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class SocketTaskExtensions : public ::Il2CppObject {
    public:
    // Nested type: ::System::Net::Sockets::SocketTaskExtensions::$$c
    class $$c;
    // static public System.Threading.Tasks.Task ConnectAsync(System.Net.Sockets.Socket socket, System.Net.IPAddress address, System.Int32 port)
    // Offset: 0xC98D24
    static ::System::Threading::Tasks::Task* ConnectAsync(::System::Net::Sockets::Socket* socket, ::System::Net::IPAddress* address, int port);
  }; // System.Net.Sockets.SocketTaskExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::Sockets::SocketTaskExtensions::ConnectAsync
// Il2CppName: ConnectAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (*)(::System::Net::Sockets::Socket*, ::System::Net::IPAddress*, int)>(&System::Net::Sockets::SocketTaskExtensions::ConnectAsync)> {
  static const MethodInfo* get() {
    static auto* socket = &::il2cpp_utils::GetClassFromName("System.Net.Sockets", "Socket")->byval_arg;
    static auto* address = &::il2cpp_utils::GetClassFromName("System.Net", "IPAddress")->byval_arg;
    static auto* port = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::Sockets::SocketTaskExtensions*), "ConnectAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{socket, address, port});
  }
};
