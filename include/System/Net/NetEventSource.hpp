// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Diagnostics.Tracing.EventSource
#include "System/Diagnostics/Tracing/EventSource.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net
namespace System::Net {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: FormattableString
  class FormattableString;
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: NetEventSource
  class NetEventSource;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::NetEventSource);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::NetEventSource*, "System.Net", "NetEventSource");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0xD0
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.NetEventSource
  // [TokenAttribute] Offset: FFFFFFFF
  class NetEventSource : public ::System::Diagnostics::Tracing::EventSource {
    public:
    // Nested type: ::System::Net::NetEventSource::Keywords
    class Keywords;
    // Get static field: static public readonly System.Net.NetEventSource Log
    static ::System::Net::NetEventSource* _get_Log();
    // Set static field: static public readonly System.Net.NetEventSource Log
    static void _set_Log(::System::Net::NetEventSource* value);
    // static field const value: static private System.String MissingMember
    static constexpr const char* MissingMember = "(?)";
    // Get static field: static private System.String MissingMember
    static ::StringW _get_MissingMember();
    // Set static field: static private System.String MissingMember
    static void _set_MissingMember(::StringW value);
    // static field const value: static private System.String NullInstance
    static constexpr const char* NullInstance = "(null)";
    // Get static field: static private System.String NullInstance
    static ::StringW _get_NullInstance();
    // Set static field: static private System.String NullInstance
    static void _set_NullInstance(::StringW value);
    // static field const value: static private System.String StaticMethodObject
    static constexpr const char* StaticMethodObject = "(static)";
    // Get static field: static private System.String StaticMethodObject
    static ::StringW _get_StaticMethodObject();
    // Set static field: static private System.String StaticMethodObject
    static void _set_StaticMethodObject(::StringW value);
    // static field const value: static private System.String NoParameters
    static constexpr const char* NoParameters = "";
    // Get static field: static private System.String NoParameters
    static ::StringW _get_NoParameters();
    // Set static field: static private System.String NoParameters
    static void _set_NoParameters(::StringW value);
    // static field const value: static private System.Int32 MaxDumpSize
    static constexpr const int MaxDumpSize = 1024;
    // Get static field: static private System.Int32 MaxDumpSize
    static int _get_MaxDumpSize();
    // Set static field: static private System.Int32 MaxDumpSize
    static void _set_MaxDumpSize(int value);
    // static field const value: static private System.Int32 EnterEventId
    static constexpr const int EnterEventId = 1;
    // Get static field: static private System.Int32 EnterEventId
    static int _get_EnterEventId();
    // Set static field: static private System.Int32 EnterEventId
    static void _set_EnterEventId(int value);
    // static field const value: static private System.Int32 ExitEventId
    static constexpr const int ExitEventId = 2;
    // Get static field: static private System.Int32 ExitEventId
    static int _get_ExitEventId();
    // Set static field: static private System.Int32 ExitEventId
    static void _set_ExitEventId(int value);
    // static field const value: static private System.Int32 AssociateEventId
    static constexpr const int AssociateEventId = 3;
    // Get static field: static private System.Int32 AssociateEventId
    static int _get_AssociateEventId();
    // Set static field: static private System.Int32 AssociateEventId
    static void _set_AssociateEventId(int value);
    // static field const value: static private System.Int32 InfoEventId
    static constexpr const int InfoEventId = 4;
    // Get static field: static private System.Int32 InfoEventId
    static int _get_InfoEventId();
    // Set static field: static private System.Int32 InfoEventId
    static void _set_InfoEventId(int value);
    // static field const value: static private System.Int32 ErrorEventId
    static constexpr const int ErrorEventId = 5;
    // Get static field: static private System.Int32 ErrorEventId
    static int _get_ErrorEventId();
    // Set static field: static private System.Int32 ErrorEventId
    static void _set_ErrorEventId(int value);
    // static field const value: static private System.Int32 CriticalFailureEventId
    static constexpr const int CriticalFailureEventId = 6;
    // Get static field: static private System.Int32 CriticalFailureEventId
    static int _get_CriticalFailureEventId();
    // Set static field: static private System.Int32 CriticalFailureEventId
    static void _set_CriticalFailureEventId(int value);
    // static field const value: static private System.Int32 DumpArrayEventId
    static constexpr const int DumpArrayEventId = 7;
    // Get static field: static private System.Int32 DumpArrayEventId
    static int _get_DumpArrayEventId();
    // Set static field: static private System.Int32 DumpArrayEventId
    static void _set_DumpArrayEventId(int value);
    // static field const value: static private System.Int32 NextAvailableEventId
    static constexpr const int NextAvailableEventId = 8;
    // Get static field: static private System.Int32 NextAvailableEventId
    static int _get_NextAvailableEventId();
    // Set static field: static private System.Int32 NextAvailableEventId
    static void _set_NextAvailableEventId(int value);
    // static public System.Boolean get_IsEnabled()
    // Offset: 0xF6B878
    static bool get_IsEnabled();
    // public System.Void .ctor()
    // Offset: 0xF6E21C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NetEventSource* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetEventSource::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NetEventSource*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0xF6E284
    static void _cctor();
    // static public System.Void Enter(System.Object thisOrContextObject, System.FormattableString formattableString, System.String memberName)
    // Offset: 0xF6B768
    static void Enter(::Il2CppObject* thisOrContextObject, ::System::FormattableString* formattableString, ::StringW memberName);
    // static public System.Void Enter(System.Object thisOrContextObject, System.Object arg0, System.String memberName)
    // Offset: 0xF6BDDC
    static void Enter(::Il2CppObject* thisOrContextObject, ::Il2CppObject* arg0, ::StringW memberName);
    // static public System.Void Enter(System.Object thisOrContextObject, System.Object arg0, System.Object arg1, System.String memberName)
    // Offset: 0xF6C24C
    static void Enter(::Il2CppObject* thisOrContextObject, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::StringW memberName);
    // static public System.Void Enter(System.Object thisOrContextObject, System.Object arg0, System.Object arg1, System.Object arg2, System.String memberName)
    // Offset: 0xF6C360
    static void Enter(::Il2CppObject* thisOrContextObject, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2, ::StringW memberName);
    // private System.Void Enter(System.String thisOrContextObject, System.String memberName, System.String parameters)
    // Offset: 0xF6BD50
    void Enter(::StringW thisOrContextObject, ::StringW memberName, ::StringW parameters);
    // static public System.Void Exit(System.Object thisOrContextObject, System.FormattableString formattableString, System.String memberName)
    // Offset: 0xF6C488
    static void Exit(::Il2CppObject* thisOrContextObject, ::System::FormattableString* formattableString, ::StringW memberName);
    // static public System.Void Exit(System.Object thisOrContextObject, System.Object arg0, System.String memberName)
    // Offset: 0xF6C624
    static void Exit(::Il2CppObject* thisOrContextObject, ::Il2CppObject* arg0, ::StringW memberName);
    // static public System.Void Exit(System.Object thisOrContextObject, System.Object arg0, System.Object arg1, System.String memberName)
    // Offset: 0xF6C70C
    static void Exit(::Il2CppObject* thisOrContextObject, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::StringW memberName);
    // private System.Void Exit(System.String thisOrContextObject, System.String memberName, System.String result)
    // Offset: 0xF6C598
    void Exit(::StringW thisOrContextObject, ::StringW memberName, ::StringW result);
    // static public System.Void Info(System.Object thisOrContextObject, System.FormattableString formattableString, System.String memberName)
    // Offset: 0xF6C820
    static void Info(::Il2CppObject* thisOrContextObject, ::System::FormattableString* formattableString, ::StringW memberName);
    // static public System.Void Info(System.Object thisOrContextObject, System.Object message, System.String memberName)
    // Offset: 0xF6C9BC
    static void Info(::Il2CppObject* thisOrContextObject, ::Il2CppObject* message, ::StringW memberName);
    // private System.Void Info(System.String thisOrContextObject, System.String memberName, System.String message)
    // Offset: 0xF6C930
    void Info(::StringW thisOrContextObject, ::StringW memberName, ::StringW message);
    // static public System.Void Error(System.Object thisOrContextObject, System.FormattableString formattableString, System.String memberName)
    // Offset: 0xF6CAA4
    static void Error(::Il2CppObject* thisOrContextObject, ::System::FormattableString* formattableString, ::StringW memberName);
    // static public System.Void Error(System.Object thisOrContextObject, System.Object message, System.String memberName)
    // Offset: 0xF6CC08
    static void Error(::Il2CppObject* thisOrContextObject, ::Il2CppObject* message, ::StringW memberName);
    // private System.Void ErrorMessage(System.String thisOrContextObject, System.String memberName, System.String message)
    // Offset: 0xF6CB7C
    void ErrorMessage(::StringW thisOrContextObject, ::StringW memberName, ::StringW message);
    // static public System.Void Fail(System.Object thisOrContextObject, System.FormattableString formattableString, System.String memberName)
    // Offset: 0xF6CCF0
    static void Fail(::Il2CppObject* thisOrContextObject, ::System::FormattableString* formattableString, ::StringW memberName);
    // static public System.Void Fail(System.Object thisOrContextObject, System.Object message, System.String memberName)
    // Offset: 0xF6CE54
    static void Fail(::Il2CppObject* thisOrContextObject, ::Il2CppObject* message, ::StringW memberName);
    // private System.Void CriticalFailure(System.String thisOrContextObject, System.String memberName, System.String message)
    // Offset: 0xF6CDC8
    void CriticalFailure(::StringW thisOrContextObject, ::StringW memberName, ::StringW message);
    // static public System.Void DumpBuffer(System.Object thisOrContextObject, System.Byte[] buffer, System.String memberName)
    // Offset: 0xF6CF3C
    static void DumpBuffer(::Il2CppObject* thisOrContextObject, ::ArrayW<uint8_t> buffer, ::StringW memberName);
    // static public System.Void DumpBuffer(System.Object thisOrContextObject, System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.String memberName)
    // Offset: 0xF6CFC8
    static void DumpBuffer(::Il2CppObject* thisOrContextObject, ::ArrayW<uint8_t> buffer, int offset, int count, ::StringW memberName);
    // static public System.Void DumpBuffer(System.Object thisOrContextObject, System.IntPtr bufferPtr, System.Int32 count, System.String memberName)
    // Offset: 0xF6D34C
    static void DumpBuffer(::Il2CppObject* thisOrContextObject, ::System::IntPtr bufferPtr, int count, ::StringW memberName);
    // private System.Void DumpBuffer(System.String thisOrContextObject, System.String memberName, System.Byte[] buffer)
    // Offset: 0xF6D2C4
    void DumpBuffer(::StringW thisOrContextObject, ::StringW memberName, ::ArrayW<uint8_t> buffer);
    // static public System.Void Associate(System.Object first, System.Object second, System.String memberName)
    // Offset: 0xF6D708
    static void Associate(::Il2CppObject* first, ::Il2CppObject* second, ::StringW memberName);
    // static public System.Void Associate(System.Object thisOrContextObject, System.Object first, System.Object second, System.String memberName)
    // Offset: 0xF6D88C
    static void Associate(::Il2CppObject* thisOrContextObject, ::Il2CppObject* first, ::Il2CppObject* second, ::StringW memberName);
    // private System.Void Associate(System.String thisOrContextObject, System.String memberName, System.String first, System.String second)
    // Offset: 0xF6D7FC
    void Associate(::StringW thisOrContextObject, ::StringW memberName, ::StringW first, ::StringW second);
    // static private System.Void DebugValidateArg(System.Object arg)
    // Offset: 0xF6DB8C
    static void DebugValidateArg(::Il2CppObject* arg);
    // static private System.Void DebugValidateArg(System.FormattableString arg)
    // Offset: 0xF6DBE8
    static void DebugValidateArg(::System::FormattableString* arg);
    // static public System.String IdOf(System.Object value)
    // Offset: 0xF6B8EC
    static ::StringW IdOf(::Il2CppObject* value);
    // static public System.Int32 GetHashCode(System.Object value)
    // Offset: 0xF6DBEC
    static int GetHashCode(::Il2CppObject* value);
    // static public System.Object Format(System.Object value)
    // Offset: 0xF6BED0
    static ::Il2CppObject* Format(::Il2CppObject* value);
    // static private System.String Format(System.FormattableString s)
    // Offset: 0xF6B9D8
    static ::StringW Format(::System::FormattableString* s);
    // private System.Void WriteEvent(System.Int32 eventId, System.String arg1, System.String arg2, System.String arg3, System.String arg4)
    // Offset: 0xF6D984
    void WriteEvent(int eventId, ::StringW arg1, ::StringW arg2, ::StringW arg3, ::StringW arg4);
    // private System.Void WriteEvent(System.Int32 eventId, System.String arg1, System.String arg2, System.Byte[] arg3)
    // Offset: 0xF6D4B4
    void WriteEvent(int eventId, ::StringW arg1, ::StringW arg2, ::ArrayW<uint8_t> arg3);
    // private System.Void WriteEvent(System.Int32 eventId, System.String arg1, System.Int32 arg2, System.Int32 arg3, System.Int32 arg4)
    // Offset: 0xF6DC00
    void WriteEvent(int eventId, ::StringW arg1, int arg2, int arg3, int arg4);
    // private System.Void WriteEvent(System.Int32 eventId, System.String arg1, System.Int32 arg2, System.String arg3)
    // Offset: 0xF6DD58
    void WriteEvent(int eventId, ::StringW arg1, int arg2, ::StringW arg3);
    // private System.Void WriteEvent(System.Int32 eventId, System.String arg1, System.String arg2, System.Int32 arg3)
    // Offset: 0xF6DED0
    void WriteEvent(int eventId, ::StringW arg1, ::StringW arg2, int arg3);
    // private System.Void WriteEvent(System.Int32 eventId, System.String arg1, System.String arg2, System.String arg3, System.Int32 arg4)
    // Offset: 0xF6E048
    void WriteEvent(int eventId, ::StringW arg1, ::StringW arg2, ::StringW arg3, int arg4);
  }; // System.Net.NetEventSource
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::NetEventSource::get_IsEnabled
// Il2CppName: get_IsEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&System::Net::NetEventSource::get_IsEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "get_IsEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::NetEventSource::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Net::NetEventSource::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Enter
// Il2CppName: Enter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::System::FormattableString*, ::StringW)>(&System::Net::NetEventSource::Enter)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* formattableString = &::il2cpp_utils::GetClassFromName("System", "FormattableString")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Enter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, formattableString, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Enter
// Il2CppName: Enter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::Il2CppObject*, ::StringW)>(&System::Net::NetEventSource::Enter)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* arg0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Enter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, arg0, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Enter
// Il2CppName: Enter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::StringW)>(&System::Net::NetEventSource::Enter)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* arg0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* arg1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Enter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, arg0, arg1, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Enter
// Il2CppName: Enter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::StringW)>(&System::Net::NetEventSource::Enter)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* arg0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* arg1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* arg2 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Enter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, arg0, arg1, arg2, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Enter
// Il2CppName: Enter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::NetEventSource::*)(::StringW, ::StringW, ::StringW)>(&System::Net::NetEventSource::Enter)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Enter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, memberName, parameters});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Exit
// Il2CppName: Exit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::System::FormattableString*, ::StringW)>(&System::Net::NetEventSource::Exit)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* formattableString = &::il2cpp_utils::GetClassFromName("System", "FormattableString")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Exit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, formattableString, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Exit
// Il2CppName: Exit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::Il2CppObject*, ::StringW)>(&System::Net::NetEventSource::Exit)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* arg0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Exit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, arg0, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Exit
// Il2CppName: Exit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::StringW)>(&System::Net::NetEventSource::Exit)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* arg0 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* arg1 = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Exit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, arg0, arg1, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Exit
// Il2CppName: Exit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::NetEventSource::*)(::StringW, ::StringW, ::StringW)>(&System::Net::NetEventSource::Exit)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Exit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, memberName, result});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Info
// Il2CppName: Info
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::System::FormattableString*, ::StringW)>(&System::Net::NetEventSource::Info)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* formattableString = &::il2cpp_utils::GetClassFromName("System", "FormattableString")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Info", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, formattableString, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Info
// Il2CppName: Info
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::Il2CppObject*, ::StringW)>(&System::Net::NetEventSource::Info)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Info", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, message, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Info
// Il2CppName: Info
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::NetEventSource::*)(::StringW, ::StringW, ::StringW)>(&System::Net::NetEventSource::Info)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Info", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, memberName, message});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Error
// Il2CppName: Error
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::System::FormattableString*, ::StringW)>(&System::Net::NetEventSource::Error)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* formattableString = &::il2cpp_utils::GetClassFromName("System", "FormattableString")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Error", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, formattableString, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Error
// Il2CppName: Error
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::Il2CppObject*, ::StringW)>(&System::Net::NetEventSource::Error)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Error", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, message, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::ErrorMessage
// Il2CppName: ErrorMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::NetEventSource::*)(::StringW, ::StringW, ::StringW)>(&System::Net::NetEventSource::ErrorMessage)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "ErrorMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, memberName, message});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Fail
// Il2CppName: Fail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::System::FormattableString*, ::StringW)>(&System::Net::NetEventSource::Fail)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* formattableString = &::il2cpp_utils::GetClassFromName("System", "FormattableString")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Fail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, formattableString, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Fail
// Il2CppName: Fail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::Il2CppObject*, ::StringW)>(&System::Net::NetEventSource::Fail)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Fail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, message, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::CriticalFailure
// Il2CppName: CriticalFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::NetEventSource::*)(::StringW, ::StringW, ::StringW)>(&System::Net::NetEventSource::CriticalFailure)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "CriticalFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, memberName, message});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::DumpBuffer
// Il2CppName: DumpBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::ArrayW<uint8_t>, ::StringW)>(&System::Net::NetEventSource::DumpBuffer)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "DumpBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, buffer, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::DumpBuffer
// Il2CppName: DumpBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::ArrayW<uint8_t>, int, int, ::StringW)>(&System::Net::NetEventSource::DumpBuffer)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "DumpBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, buffer, offset, count, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::DumpBuffer
// Il2CppName: DumpBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::System::IntPtr, int, ::StringW)>(&System::Net::NetEventSource::DumpBuffer)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* bufferPtr = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "DumpBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, bufferPtr, count, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::DumpBuffer
// Il2CppName: DumpBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::NetEventSource::*)(::StringW, ::StringW, ::ArrayW<uint8_t>)>(&System::Net::NetEventSource::DumpBuffer)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "DumpBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, memberName, buffer});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Associate
// Il2CppName: Associate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::Il2CppObject*, ::StringW)>(&System::Net::NetEventSource::Associate)> {
  static const MethodInfo* get() {
    static auto* first = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* second = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Associate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{first, second, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Associate
// Il2CppName: Associate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::StringW)>(&System::Net::NetEventSource::Associate)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* first = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* second = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Associate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, first, second, memberName});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Associate
// Il2CppName: Associate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::NetEventSource::*)(::StringW, ::StringW, ::StringW, ::StringW)>(&System::Net::NetEventSource::Associate)> {
  static const MethodInfo* get() {
    static auto* thisOrContextObject = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* memberName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* first = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* second = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Associate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisOrContextObject, memberName, first, second});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::DebugValidateArg
// Il2CppName: DebugValidateArg
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*)>(&System::Net::NetEventSource::DebugValidateArg)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "DebugValidateArg", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::DebugValidateArg
// Il2CppName: DebugValidateArg
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::FormattableString*)>(&System::Net::NetEventSource::DebugValidateArg)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "FormattableString")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "DebugValidateArg", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::IdOf
// Il2CppName: IdOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::Il2CppObject*)>(&System::Net::NetEventSource::IdOf)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "IdOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*)>(&System::Net::NetEventSource::GetHashCode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::Il2CppObject*)>(&System::Net::NetEventSource::Format)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::FormattableString*)>(&System::Net::NetEventSource::Format)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "FormattableString")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::WriteEvent
// Il2CppName: WriteEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::NetEventSource::*)(int, ::StringW, ::StringW, ::StringW, ::StringW)>(&System::Net::NetEventSource::WriteEvent)> {
  static const MethodInfo* get() {
    static auto* eventId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* arg1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg3 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg4 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "WriteEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventId, arg1, arg2, arg3, arg4});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::WriteEvent
// Il2CppName: WriteEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::NetEventSource::*)(int, ::StringW, ::StringW, ::ArrayW<uint8_t>)>(&System::Net::NetEventSource::WriteEvent)> {
  static const MethodInfo* get() {
    static auto* eventId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* arg1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg3 = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "WriteEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventId, arg1, arg2, arg3});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::WriteEvent
// Il2CppName: WriteEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::NetEventSource::*)(int, ::StringW, int, int, int)>(&System::Net::NetEventSource::WriteEvent)> {
  static const MethodInfo* get() {
    static auto* eventId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* arg1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* arg3 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* arg4 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "WriteEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventId, arg1, arg2, arg3, arg4});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::WriteEvent
// Il2CppName: WriteEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::NetEventSource::*)(int, ::StringW, int, ::StringW)>(&System::Net::NetEventSource::WriteEvent)> {
  static const MethodInfo* get() {
    static auto* eventId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* arg1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* arg3 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "WriteEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventId, arg1, arg2, arg3});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::WriteEvent
// Il2CppName: WriteEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::NetEventSource::*)(int, ::StringW, ::StringW, int)>(&System::Net::NetEventSource::WriteEvent)> {
  static const MethodInfo* get() {
    static auto* eventId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* arg1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg3 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "WriteEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventId, arg1, arg2, arg3});
  }
};
// Writing MetadataGetter for method: System::Net::NetEventSource::WriteEvent
// Il2CppName: WriteEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::NetEventSource::*)(int, ::StringW, ::StringW, ::StringW, int)>(&System::Net::NetEventSource::WriteEvent)> {
  static const MethodInfo* get() {
    static auto* eventId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* arg1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg3 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg4 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetEventSource*), "WriteEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventId, arg1, arg2, arg3, arg4});
  }
};
