// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net::Cache
namespace System::Net::Cache {
  // Forward declaring type: RequestCachingSectionInternal
  class RequestCachingSectionInternal;
  // Forward declaring type: RequestCacheBinding
  class RequestCacheBinding;
}
// Completed forward declares
// Type namespace: System.Net.Cache
namespace System::Net::Cache {
  // Forward declaring type: RequestCacheManager
  class RequestCacheManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::Cache::RequestCacheManager);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::Cache::RequestCacheManager*, "System.Net.Cache", "RequestCacheManager");
// Type namespace: System.Net.Cache
namespace System::Net::Cache {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.Cache.RequestCacheManager
  // [TokenAttribute] Offset: FFFFFFFF
  class RequestCacheManager : public ::Il2CppObject {
    public:
    // Get static field: static private System.Net.Cache.RequestCachingSectionInternal s_CacheConfigSettings
    static ::System::Net::Cache::RequestCachingSectionInternal* _get_s_CacheConfigSettings();
    // Set static field: static private System.Net.Cache.RequestCachingSectionInternal s_CacheConfigSettings
    static void _set_s_CacheConfigSettings(::System::Net::Cache::RequestCachingSectionInternal* value);
    // Get static field: static private readonly System.Net.Cache.RequestCacheBinding s_BypassCacheBinding
    static ::System::Net::Cache::RequestCacheBinding* _get_s_BypassCacheBinding();
    // Set static field: static private readonly System.Net.Cache.RequestCacheBinding s_BypassCacheBinding
    static void _set_s_BypassCacheBinding(::System::Net::Cache::RequestCacheBinding* value);
    // Get static field: static private System.Net.Cache.RequestCacheBinding s_DefaultGlobalBinding
    static ::System::Net::Cache::RequestCacheBinding* _get_s_DefaultGlobalBinding();
    // Set static field: static private System.Net.Cache.RequestCacheBinding s_DefaultGlobalBinding
    static void _set_s_DefaultGlobalBinding(::System::Net::Cache::RequestCacheBinding* value);
    // Get static field: static private System.Net.Cache.RequestCacheBinding s_DefaultHttpBinding
    static ::System::Net::Cache::RequestCacheBinding* _get_s_DefaultHttpBinding();
    // Set static field: static private System.Net.Cache.RequestCacheBinding s_DefaultHttpBinding
    static void _set_s_DefaultHttpBinding(::System::Net::Cache::RequestCacheBinding* value);
    // Get static field: static private System.Net.Cache.RequestCacheBinding s_DefaultFtpBinding
    static ::System::Net::Cache::RequestCacheBinding* _get_s_DefaultFtpBinding();
    // Set static field: static private System.Net.Cache.RequestCacheBinding s_DefaultFtpBinding
    static void _set_s_DefaultFtpBinding(::System::Net::Cache::RequestCacheBinding* value);
    // static private System.Void .cctor()
    // Offset: 0x12FA940
    static void _cctor();
    // static System.Net.Cache.RequestCacheBinding GetBinding(System.String internedScheme)
    // Offset: 0x12FA338
    static ::System::Net::Cache::RequestCacheBinding* GetBinding(::StringW internedScheme);
    // static System.Void SetBinding(System.String uriScheme, System.Net.Cache.RequestCacheBinding binding)
    // Offset: 0x12FA6F0
    static void SetBinding(::StringW uriScheme, ::System::Net::Cache::RequestCacheBinding* binding);
    // static private System.Void LoadConfigSettings()
    // Offset: 0x12FA580
    static void LoadConfigSettings();
  }; // System.Net.Cache.RequestCacheManager
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::Cache::RequestCacheManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Net::Cache::RequestCacheManager::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::Cache::RequestCacheManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::Cache::RequestCacheManager::GetBinding
// Il2CppName: GetBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::Cache::RequestCacheBinding* (*)(::StringW)>(&System::Net::Cache::RequestCacheManager::GetBinding)> {
  static const MethodInfo* get() {
    static auto* internedScheme = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::Cache::RequestCacheManager*), "GetBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{internedScheme});
  }
};
// Writing MetadataGetter for method: System::Net::Cache::RequestCacheManager::SetBinding
// Il2CppName: SetBinding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::System::Net::Cache::RequestCacheBinding*)>(&System::Net::Cache::RequestCacheManager::SetBinding)> {
  static const MethodInfo* get() {
    static auto* uriScheme = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* binding = &::il2cpp_utils::GetClassFromName("System.Net.Cache", "RequestCacheBinding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::Cache::RequestCacheManager*), "SetBinding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uriScheme, binding});
  }
};
// Writing MetadataGetter for method: System::Net::Cache::RequestCacheManager::LoadConfigSettings
// Il2CppName: LoadConfigSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Net::Cache::RequestCacheManager::LoadConfigSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::Cache::RequestCacheManager*), "LoadConfigSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
