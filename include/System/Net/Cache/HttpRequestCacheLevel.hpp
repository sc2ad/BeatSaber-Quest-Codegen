// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.Net.Cache
namespace System::Net::Cache {
  // Forward declaring type: HttpRequestCacheLevel
  struct HttpRequestCacheLevel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Net::Cache::HttpRequestCacheLevel, "System.Net.Cache", "HttpRequestCacheLevel");
// Type namespace: System.Net.Cache
namespace System::Net::Cache {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.Cache.HttpRequestCacheLevel
  // [TokenAttribute] Offset: FFFFFFFF
  struct HttpRequestCacheLevel/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: HttpRequestCacheLevel
    constexpr HttpRequestCacheLevel(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Net.Cache.HttpRequestCacheLevel Default
    static constexpr const int Default = 0;
    // Get static field: static public System.Net.Cache.HttpRequestCacheLevel Default
    static ::System::Net::Cache::HttpRequestCacheLevel _get_Default();
    // Set static field: static public System.Net.Cache.HttpRequestCacheLevel Default
    static void _set_Default(::System::Net::Cache::HttpRequestCacheLevel value);
    // static field const value: static public System.Net.Cache.HttpRequestCacheLevel BypassCache
    static constexpr const int BypassCache = 1;
    // Get static field: static public System.Net.Cache.HttpRequestCacheLevel BypassCache
    static ::System::Net::Cache::HttpRequestCacheLevel _get_BypassCache();
    // Set static field: static public System.Net.Cache.HttpRequestCacheLevel BypassCache
    static void _set_BypassCache(::System::Net::Cache::HttpRequestCacheLevel value);
    // static field const value: static public System.Net.Cache.HttpRequestCacheLevel CacheOnly
    static constexpr const int CacheOnly = 2;
    // Get static field: static public System.Net.Cache.HttpRequestCacheLevel CacheOnly
    static ::System::Net::Cache::HttpRequestCacheLevel _get_CacheOnly();
    // Set static field: static public System.Net.Cache.HttpRequestCacheLevel CacheOnly
    static void _set_CacheOnly(::System::Net::Cache::HttpRequestCacheLevel value);
    // static field const value: static public System.Net.Cache.HttpRequestCacheLevel CacheIfAvailable
    static constexpr const int CacheIfAvailable = 3;
    // Get static field: static public System.Net.Cache.HttpRequestCacheLevel CacheIfAvailable
    static ::System::Net::Cache::HttpRequestCacheLevel _get_CacheIfAvailable();
    // Set static field: static public System.Net.Cache.HttpRequestCacheLevel CacheIfAvailable
    static void _set_CacheIfAvailable(::System::Net::Cache::HttpRequestCacheLevel value);
    // static field const value: static public System.Net.Cache.HttpRequestCacheLevel Revalidate
    static constexpr const int Revalidate = 4;
    // Get static field: static public System.Net.Cache.HttpRequestCacheLevel Revalidate
    static ::System::Net::Cache::HttpRequestCacheLevel _get_Revalidate();
    // Set static field: static public System.Net.Cache.HttpRequestCacheLevel Revalidate
    static void _set_Revalidate(::System::Net::Cache::HttpRequestCacheLevel value);
    // static field const value: static public System.Net.Cache.HttpRequestCacheLevel Reload
    static constexpr const int Reload = 5;
    // Get static field: static public System.Net.Cache.HttpRequestCacheLevel Reload
    static ::System::Net::Cache::HttpRequestCacheLevel _get_Reload();
    // Set static field: static public System.Net.Cache.HttpRequestCacheLevel Reload
    static void _set_Reload(::System::Net::Cache::HttpRequestCacheLevel value);
    // static field const value: static public System.Net.Cache.HttpRequestCacheLevel NoCacheNoStore
    static constexpr const int NoCacheNoStore = 6;
    // Get static field: static public System.Net.Cache.HttpRequestCacheLevel NoCacheNoStore
    static ::System::Net::Cache::HttpRequestCacheLevel _get_NoCacheNoStore();
    // Set static field: static public System.Net.Cache.HttpRequestCacheLevel NoCacheNoStore
    static void _set_NoCacheNoStore(::System::Net::Cache::HttpRequestCacheLevel value);
    // static field const value: static public System.Net.Cache.HttpRequestCacheLevel CacheOrNextCacheOnly
    static constexpr const int CacheOrNextCacheOnly = 7;
    // Get static field: static public System.Net.Cache.HttpRequestCacheLevel CacheOrNextCacheOnly
    static ::System::Net::Cache::HttpRequestCacheLevel _get_CacheOrNextCacheOnly();
    // Set static field: static public System.Net.Cache.HttpRequestCacheLevel CacheOrNextCacheOnly
    static void _set_CacheOrNextCacheOnly(::System::Net::Cache::HttpRequestCacheLevel value);
    // static field const value: static public System.Net.Cache.HttpRequestCacheLevel Refresh
    static constexpr const int Refresh = 8;
    // Get static field: static public System.Net.Cache.HttpRequestCacheLevel Refresh
    static ::System::Net::Cache::HttpRequestCacheLevel _get_Refresh();
    // Set static field: static public System.Net.Cache.HttpRequestCacheLevel Refresh
    static void _set_Refresh(::System::Net::Cache::HttpRequestCacheLevel value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // System.Net.Cache.HttpRequestCacheLevel
  #pragma pack(pop)
  static check_size<sizeof(HttpRequestCacheLevel), 0 + sizeof(int)> __System_Net_Cache_HttpRequestCacheLevelSizeCheck;
  static_assert(sizeof(HttpRequestCacheLevel) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
