// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: WindowsInstallationType
  struct WindowsInstallationType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WindowsInstallationType, "System.Net", "WindowsInstallationType");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.WindowsInstallationType
  // [TokenAttribute] Offset: FFFFFFFF
  struct WindowsInstallationType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: WindowsInstallationType
    constexpr WindowsInstallationType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Net.WindowsInstallationType Unknown
    static constexpr const int Unknown = 0;
    // Get static field: static public System.Net.WindowsInstallationType Unknown
    static ::System::Net::WindowsInstallationType _get_Unknown();
    // Set static field: static public System.Net.WindowsInstallationType Unknown
    static void _set_Unknown(::System::Net::WindowsInstallationType value);
    // static field const value: static public System.Net.WindowsInstallationType Client
    static constexpr const int Client = 1;
    // Get static field: static public System.Net.WindowsInstallationType Client
    static ::System::Net::WindowsInstallationType _get_Client();
    // Set static field: static public System.Net.WindowsInstallationType Client
    static void _set_Client(::System::Net::WindowsInstallationType value);
    // static field const value: static public System.Net.WindowsInstallationType Server
    static constexpr const int Server = 2;
    // Get static field: static public System.Net.WindowsInstallationType Server
    static ::System::Net::WindowsInstallationType _get_Server();
    // Set static field: static public System.Net.WindowsInstallationType Server
    static void _set_Server(::System::Net::WindowsInstallationType value);
    // static field const value: static public System.Net.WindowsInstallationType ServerCore
    static constexpr const int ServerCore = 3;
    // Get static field: static public System.Net.WindowsInstallationType ServerCore
    static ::System::Net::WindowsInstallationType _get_ServerCore();
    // Set static field: static public System.Net.WindowsInstallationType ServerCore
    static void _set_ServerCore(::System::Net::WindowsInstallationType value);
    // static field const value: static public System.Net.WindowsInstallationType Embedded
    static constexpr const int Embedded = 4;
    // Get static field: static public System.Net.WindowsInstallationType Embedded
    static ::System::Net::WindowsInstallationType _get_Embedded();
    // Set static field: static public System.Net.WindowsInstallationType Embedded
    static void _set_Embedded(::System::Net::WindowsInstallationType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // System.Net.WindowsInstallationType
  #pragma pack(pop)
  static check_size<sizeof(WindowsInstallationType), 0 + sizeof(int)> __System_Net_WindowsInstallationTypeSizeCheck;
  static_assert(sizeof(WindowsInstallationType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
