// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.Configuration.UnicodeDecodingConformance
#include "System/Net/Configuration/UnicodeDecodingConformance.hpp"
// Including type: System.Net.Configuration.UnicodeEncodingConformance
#include "System/Net/Configuration/UnicodeEncodingConformance.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net
namespace System::Net {
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: TextWriter
  class TextWriter;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: WebUtility
  class WebUtility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::WebUtility);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebUtility*, "System.Net", "WebUtility");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.WebUtility
  // [TokenAttribute] Offset: FFFFFFFF
  class WebUtility : public ::Il2CppObject {
    public:
    // Nested type: ::System::Net::WebUtility::UrlDecoder
    class UrlDecoder;
    // Get static field: static private readonly System.Char[] _htmlEntityEndingChars
    static ::ArrayW<::Il2CppChar> _get__htmlEntityEndingChars();
    // Set static field: static private readonly System.Char[] _htmlEntityEndingChars
    static void _set__htmlEntityEndingChars(::ArrayW<::Il2CppChar> value);
    // Get static field: static private System.Net.Configuration.UnicodeDecodingConformance _htmlDecodeConformance
    static ::System::Net::Configuration::UnicodeDecodingConformance _get__htmlDecodeConformance();
    // Set static field: static private System.Net.Configuration.UnicodeDecodingConformance _htmlDecodeConformance
    static void _set__htmlDecodeConformance(::System::Net::Configuration::UnicodeDecodingConformance value);
    // Get static field: static private System.Net.Configuration.UnicodeEncodingConformance _htmlEncodeConformance
    static ::System::Net::Configuration::UnicodeEncodingConformance _get__htmlEncodeConformance();
    // Set static field: static private System.Net.Configuration.UnicodeEncodingConformance _htmlEncodeConformance
    static void _set__htmlEncodeConformance(::System::Net::Configuration::UnicodeEncodingConformance value);
    // static private System.Net.Configuration.UnicodeEncodingConformance get_HtmlEncodeConformance()
    // Offset: 0x1B649E0
    static ::System::Net::Configuration::UnicodeEncodingConformance get_HtmlEncodeConformance();
    // static private System.Void .cctor()
    // Offset: 0x1B650D4
    static void _cctor();
    // static public System.String HtmlEncode(System.String value)
    // Offset: 0x1B643F0
    static ::StringW HtmlEncode(::StringW value);
    // static public System.Void HtmlEncode(System.String value, System.IO.TextWriter output)
    // Offset: 0x1B6466C
    static void HtmlEncode(::StringW value, ::System::IO::TextWriter* output);
    // static private System.Int32 IndexOfHtmlEncodingChars(System.String s, System.Int32 startPos)
    // Offset: 0x1B64518
    static int IndexOfHtmlEncodingChars(::StringW s, int startPos);
    // static private System.String UrlDecodeInternal(System.String value, System.Text.Encoding encoding)
    // Offset: 0x1B64BAC
    static ::StringW UrlDecodeInternal(::StringW value, ::System::Text::Encoding* encoding);
    // static public System.String UrlDecode(System.String encodedValue)
    // Offset: 0x1B6504C
    static ::StringW UrlDecode(::StringW encodedValue);
    // static private System.Int32 GetNextUnicodeScalarValueFromUtf16Surrogate(ref System.Char* pch, ref System.Int32 charsRemaining)
    // Offset: 0x1B64AE4
    static int GetNextUnicodeScalarValueFromUtf16Surrogate(ByRef<::Il2CppChar*> pch, ByRef<int> charsRemaining);
    // static private System.Int32 HexToInt(System.Char h)
    // Offset: 0x1B64E50
    static int HexToInt(::Il2CppChar h);
  }; // System.Net.WebUtility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebUtility::get_HtmlEncodeConformance
// Il2CppName: get_HtmlEncodeConformance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::Configuration::UnicodeEncodingConformance (*)()>(&System::Net::WebUtility::get_HtmlEncodeConformance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebUtility*), "get_HtmlEncodeConformance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebUtility::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Net::WebUtility::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebUtility*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebUtility::HtmlEncode
// Il2CppName: HtmlEncode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&System::Net::WebUtility::HtmlEncode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebUtility*), "HtmlEncode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebUtility::HtmlEncode
// Il2CppName: HtmlEncode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::System::IO::TextWriter*)>(&System::Net::WebUtility::HtmlEncode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* output = &::il2cpp_utils::GetClassFromName("System.IO", "TextWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebUtility*), "HtmlEncode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, output});
  }
};
// Writing MetadataGetter for method: System::Net::WebUtility::IndexOfHtmlEncodingChars
// Il2CppName: IndexOfHtmlEncodingChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int)>(&System::Net::WebUtility::IndexOfHtmlEncodingChars)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startPos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebUtility*), "IndexOfHtmlEncodingChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, startPos});
  }
};
// Writing MetadataGetter for method: System::Net::WebUtility::UrlDecodeInternal
// Il2CppName: UrlDecodeInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::System::Text::Encoding*)>(&System::Net::WebUtility::UrlDecodeInternal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* encoding = &::il2cpp_utils::GetClassFromName("System.Text", "Encoding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebUtility*), "UrlDecodeInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, encoding});
  }
};
// Writing MetadataGetter for method: System::Net::WebUtility::UrlDecode
// Il2CppName: UrlDecode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&System::Net::WebUtility::UrlDecode)> {
  static const MethodInfo* get() {
    static auto* encodedValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebUtility*), "UrlDecode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{encodedValue});
  }
};
// Writing MetadataGetter for method: System::Net::WebUtility::GetNextUnicodeScalarValueFromUtf16Surrogate
// Il2CppName: GetNextUnicodeScalarValueFromUtf16Surrogate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<::Il2CppChar*>, ByRef<int>)>(&System::Net::WebUtility::GetNextUnicodeScalarValueFromUtf16Surrogate)> {
  static const MethodInfo* get() {
    static auto* pch = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->this_arg;
    static auto* charsRemaining = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebUtility*), "GetNextUnicodeScalarValueFromUtf16Surrogate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pch, charsRemaining});
  }
};
// Writing MetadataGetter for method: System::Net::WebUtility::HexToInt
// Il2CppName: HexToInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppChar)>(&System::Net::WebUtility::HexToInt)> {
  static const MethodInfo* get() {
    static auto* h = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebUtility*), "HexToInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{h});
  }
};
