// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: Authorization
  class Authorization;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::Authorization);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::Authorization*, "System.Net", "Authorization");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.Authorization
  // [TokenAttribute] Offset: FFFFFFFF
  class Authorization : public ::Il2CppObject {
    public:
    public:
    // private System.String m_Message
    // Size: 0x8
    // Offset: 0x10
    ::StringW m_Message;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean m_Complete
    // Size: 0x1
    // Offset: 0x18
    bool m_Complete;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Complete and: ModuleAuthenticationType
    char __padding1[0x7] = {};
    // System.String ModuleAuthenticationType
    // Size: 0x8
    // Offset: 0x20
    ::StringW ModuleAuthenticationType;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private System.String m_Message
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Message();
    // Get instance field reference: private System.Boolean m_Complete
    [[deprecated("Use field access instead!")]] bool& dyn_m_Complete();
    // Get instance field reference: System.String ModuleAuthenticationType
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ModuleAuthenticationType();
    // public System.String get_Message()
    // Offset: 0x1DAE724
    ::StringW get_Message();
    // public System.Boolean get_Complete()
    // Offset: 0x1DAE72C
    bool get_Complete();
    // public System.Void .ctor(System.String token)
    // Offset: 0x1DAE600
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Authorization* New_ctor(::StringW token) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Authorization::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Authorization*, creationType>(token)));
    }
    // public System.Void .ctor(System.String token, System.Boolean finished)
    // Offset: 0x1DAE690
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Authorization* New_ctor(::StringW token, bool finished) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Authorization::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Authorization*, creationType>(token, finished)));
    }
  }; // System.Net.Authorization
  #pragma pack(pop)
  static check_size<sizeof(Authorization), 32 + sizeof(::StringW)> __System_Net_AuthorizationSizeCheck;
  static_assert(sizeof(Authorization) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::Authorization::get_Message
// Il2CppName: get_Message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::Authorization::*)()>(&System::Net::Authorization::get_Message)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::Authorization*), "get_Message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::Authorization::get_Complete
// Il2CppName: get_Complete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::Authorization::*)()>(&System::Net::Authorization::get_Complete)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::Authorization*), "get_Complete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::Authorization::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::Authorization::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
