// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: HttpWriteMode
  struct HttpWriteMode;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Net::HttpWriteMode, "System.Net", "HttpWriteMode");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.HttpWriteMode
  // [TokenAttribute] Offset: FFFFFFFF
  struct HttpWriteMode/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: HttpWriteMode
    constexpr HttpWriteMode(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Net.HttpWriteMode Unknown
    static constexpr const int Unknown = 0;
    // Get static field: static public System.Net.HttpWriteMode Unknown
    static ::System::Net::HttpWriteMode _get_Unknown();
    // Set static field: static public System.Net.HttpWriteMode Unknown
    static void _set_Unknown(::System::Net::HttpWriteMode value);
    // static field const value: static public System.Net.HttpWriteMode ContentLength
    static constexpr const int ContentLength = 1;
    // Get static field: static public System.Net.HttpWriteMode ContentLength
    static ::System::Net::HttpWriteMode _get_ContentLength();
    // Set static field: static public System.Net.HttpWriteMode ContentLength
    static void _set_ContentLength(::System::Net::HttpWriteMode value);
    // static field const value: static public System.Net.HttpWriteMode Chunked
    static constexpr const int Chunked = 2;
    // Get static field: static public System.Net.HttpWriteMode Chunked
    static ::System::Net::HttpWriteMode _get_Chunked();
    // Set static field: static public System.Net.HttpWriteMode Chunked
    static void _set_Chunked(::System::Net::HttpWriteMode value);
    // static field const value: static public System.Net.HttpWriteMode Buffer
    static constexpr const int Buffer = 3;
    // Get static field: static public System.Net.HttpWriteMode Buffer
    static ::System::Net::HttpWriteMode _get_Buffer();
    // Set static field: static public System.Net.HttpWriteMode Buffer
    static void _set_Buffer(::System::Net::HttpWriteMode value);
    // static field const value: static public System.Net.HttpWriteMode None
    static constexpr const int None = 4;
    // Get static field: static public System.Net.HttpWriteMode None
    static ::System::Net::HttpWriteMode _get_None();
    // Set static field: static public System.Net.HttpWriteMode None
    static void _set_None(::System::Net::HttpWriteMode value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // System.Net.HttpWriteMode
  #pragma pack(pop)
  static check_size<sizeof(HttpWriteMode), 0 + sizeof(int)> __System_Net_HttpWriteModeSizeCheck;
  static_assert(sizeof(HttpWriteMode) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
