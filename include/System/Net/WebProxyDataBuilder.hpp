// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Char
#include "System/Char.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: WebProxyData
  class WebProxyData;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Uri
  class Uri;
  // Forward declaring type: FormatException
  class FormatException;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: Hashtable
  class Hashtable;
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: WebProxyDataBuilder
  class WebProxyDataBuilder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::WebProxyDataBuilder);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebProxyDataBuilder*, "System.Net", "WebProxyDataBuilder");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.WebProxyDataBuilder
  // [TokenAttribute] Offset: FFFFFFFF
  class WebProxyDataBuilder : public ::Il2CppObject {
    public:
    public:
    // private System.Net.WebProxyData m_Result
    // Size: 0x8
    // Offset: 0x10
    ::System::Net::WebProxyData* m_Result;
    // Field size check
    static_assert(sizeof(::System::Net::WebProxyData*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Net::WebProxyData*
    constexpr operator ::System::Net::WebProxyData*() const noexcept {
      return m_Result;
    }
    // static field const value: static private System.Char addressListDelimiter
    static constexpr const ::Il2CppChar addressListDelimiter = u';';
    // Get static field: static private System.Char addressListDelimiter
    static ::Il2CppChar _get_addressListDelimiter();
    // Set static field: static private System.Char addressListDelimiter
    static void _set_addressListDelimiter(::Il2CppChar value);
    // static field const value: static private System.Char addressListSchemeValueDelimiter
    static constexpr const ::Il2CppChar addressListSchemeValueDelimiter = u'=';
    // Get static field: static private System.Char addressListSchemeValueDelimiter
    static ::Il2CppChar _get_addressListSchemeValueDelimiter();
    // Set static field: static private System.Char addressListSchemeValueDelimiter
    static void _set_addressListSchemeValueDelimiter(::Il2CppChar value);
    // static field const value: static private System.Char bypassListDelimiter
    static constexpr const ::Il2CppChar bypassListDelimiter = u';';
    // Get static field: static private System.Char bypassListDelimiter
    static ::Il2CppChar _get_bypassListDelimiter();
    // Set static field: static private System.Char bypassListDelimiter
    static void _set_bypassListDelimiter(::Il2CppChar value);
    // static field const value: static private System.String regexReserved
    static constexpr const char* regexReserved = "#$()+.?[\\^{|";
    // Get static field: static private System.String regexReserved
    static ::StringW _get_regexReserved();
    // Set static field: static private System.String regexReserved
    static void _set_regexReserved(::StringW value);
    // Get instance field reference: private System.Net.WebProxyData m_Result
    [[deprecated("Use field access instead!")]] ::System::Net::WebProxyData*& dyn_m_Result();
    // protected System.Void .ctor()
    // Offset: 0xDF6CE0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebProxyDataBuilder* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyDataBuilder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebProxyDataBuilder*, creationType>()));
    }
    // public System.Net.WebProxyData Build()
    // Offset: 0xDF5F50
    ::System::Net::WebProxyData* Build();
    // protected System.Void BuildInternal()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void BuildInternal();
    // protected System.Void SetProxyAndBypassList(System.String addressString, System.String bypassListString)
    // Offset: 0xDF5FC4
    void SetProxyAndBypassList(::StringW addressString, ::StringW bypassListString);
    // protected System.Void SetAutoProxyUrl(System.String autoConfigUrl)
    // Offset: 0xDF66BC
    void SetAutoProxyUrl(::StringW autoConfigUrl);
    // protected System.Void SetAutoDetectSettings(System.Boolean value)
    // Offset: 0xDF676C
    void SetAutoDetectSettings(bool value);
    // static private System.Uri ParseProxyUri(System.String proxyString)
    // Offset: 0xDF60F8
    static ::System::Uri* ParseProxyUri(::StringW proxyString);
    // static private System.Collections.Hashtable ParseProtocolProxies(System.String proxyListString)
    // Offset: 0xDF6244
    static ::System::Collections::Hashtable* ParseProtocolProxies(::StringW proxyListString);
    // static private System.FormatException CreateInvalidProxyStringException(System.String originalProxyString)
    // Offset: 0xDF678C
    static ::System::FormatException* CreateInvalidProxyStringException(::StringW originalProxyString);
    // static private System.String BypassStringEscape(System.String rawString)
    // Offset: 0xDF688C
    static ::StringW BypassStringEscape(::StringW rawString);
    // static private System.String ConvertRegexReservedChars(System.String rawString)
    // Offset: 0xDF6B98
    static ::StringW ConvertRegexReservedChars(::StringW rawString);
    // static private System.Collections.ArrayList ParseBypassList(System.String bypassListString, out System.Boolean bypassOnLocal)
    // Offset: 0xDF6510
    static ::System::Collections::ArrayList* ParseBypassList(::StringW bypassListString, ByRef<bool> bypassOnLocal);
  }; // System.Net.WebProxyDataBuilder
  #pragma pack(pop)
  static check_size<sizeof(WebProxyDataBuilder), 16 + sizeof(::System::Net::WebProxyData*)> __System_Net_WebProxyDataBuilderSizeCheck;
  static_assert(sizeof(WebProxyDataBuilder) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebProxyDataBuilder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebProxyDataBuilder::Build
// Il2CppName: Build
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::WebProxyData* (System::Net::WebProxyDataBuilder::*)()>(&System::Net::WebProxyDataBuilder::Build)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebProxyDataBuilder*), "Build", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebProxyDataBuilder::BuildInternal
// Il2CppName: BuildInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebProxyDataBuilder::*)()>(&System::Net::WebProxyDataBuilder::BuildInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebProxyDataBuilder*), "BuildInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebProxyDataBuilder::SetProxyAndBypassList
// Il2CppName: SetProxyAndBypassList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebProxyDataBuilder::*)(::StringW, ::StringW)>(&System::Net::WebProxyDataBuilder::SetProxyAndBypassList)> {
  static const MethodInfo* get() {
    static auto* addressString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bypassListString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebProxyDataBuilder*), "SetProxyAndBypassList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{addressString, bypassListString});
  }
};
// Writing MetadataGetter for method: System::Net::WebProxyDataBuilder::SetAutoProxyUrl
// Il2CppName: SetAutoProxyUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebProxyDataBuilder::*)(::StringW)>(&System::Net::WebProxyDataBuilder::SetAutoProxyUrl)> {
  static const MethodInfo* get() {
    static auto* autoConfigUrl = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebProxyDataBuilder*), "SetAutoProxyUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{autoConfigUrl});
  }
};
// Writing MetadataGetter for method: System::Net::WebProxyDataBuilder::SetAutoDetectSettings
// Il2CppName: SetAutoDetectSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebProxyDataBuilder::*)(bool)>(&System::Net::WebProxyDataBuilder::SetAutoDetectSettings)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebProxyDataBuilder*), "SetAutoDetectSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebProxyDataBuilder::ParseProxyUri
// Il2CppName: ParseProxyUri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Uri* (*)(::StringW)>(&System::Net::WebProxyDataBuilder::ParseProxyUri)> {
  static const MethodInfo* get() {
    static auto* proxyString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebProxyDataBuilder*), "ParseProxyUri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{proxyString});
  }
};
// Writing MetadataGetter for method: System::Net::WebProxyDataBuilder::ParseProtocolProxies
// Il2CppName: ParseProtocolProxies
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Hashtable* (*)(::StringW)>(&System::Net::WebProxyDataBuilder::ParseProtocolProxies)> {
  static const MethodInfo* get() {
    static auto* proxyListString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebProxyDataBuilder*), "ParseProtocolProxies", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{proxyListString});
  }
};
// Writing MetadataGetter for method: System::Net::WebProxyDataBuilder::CreateInvalidProxyStringException
// Il2CppName: CreateInvalidProxyStringException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::FormatException* (*)(::StringW)>(&System::Net::WebProxyDataBuilder::CreateInvalidProxyStringException)> {
  static const MethodInfo* get() {
    static auto* originalProxyString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebProxyDataBuilder*), "CreateInvalidProxyStringException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{originalProxyString});
  }
};
// Writing MetadataGetter for method: System::Net::WebProxyDataBuilder::BypassStringEscape
// Il2CppName: BypassStringEscape
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&System::Net::WebProxyDataBuilder::BypassStringEscape)> {
  static const MethodInfo* get() {
    static auto* rawString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebProxyDataBuilder*), "BypassStringEscape", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rawString});
  }
};
// Writing MetadataGetter for method: System::Net::WebProxyDataBuilder::ConvertRegexReservedChars
// Il2CppName: ConvertRegexReservedChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&System::Net::WebProxyDataBuilder::ConvertRegexReservedChars)> {
  static const MethodInfo* get() {
    static auto* rawString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebProxyDataBuilder*), "ConvertRegexReservedChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rawString});
  }
};
// Writing MetadataGetter for method: System::Net::WebProxyDataBuilder::ParseBypassList
// Il2CppName: ParseBypassList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ArrayList* (*)(::StringW, ByRef<bool>)>(&System::Net::WebProxyDataBuilder::ParseBypassList)> {
  static const MethodInfo* get() {
    static auto* bypassListString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* bypassOnLocal = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebProxyDataBuilder*), "ParseBypassList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bypassListString, bypassOnLocal});
  }
};
