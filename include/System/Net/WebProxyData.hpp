// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Uri
  class Uri;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: Hashtable
  class Hashtable;
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: WebProxyData
  class WebProxyData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::WebProxyData);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebProxyData*, "System.Net", "WebProxyData");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.WebProxyData
  // [TokenAttribute] Offset: FFFFFFFF
  class WebProxyData : public ::Il2CppObject {
    public:
    public:
    // System.Boolean bypassOnLocal
    // Size: 0x1
    // Offset: 0x10
    bool bypassOnLocal;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.Boolean automaticallyDetectSettings
    // Size: 0x1
    // Offset: 0x11
    bool automaticallyDetectSettings;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: automaticallyDetectSettings and: proxyAddress
    char __padding1[0x6] = {};
    // System.Uri proxyAddress
    // Size: 0x8
    // Offset: 0x18
    ::System::Uri* proxyAddress;
    // Field size check
    static_assert(sizeof(::System::Uri*) == 0x8);
    // System.Collections.Hashtable proxyHostAddresses
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Hashtable* proxyHostAddresses;
    // Field size check
    static_assert(sizeof(::System::Collections::Hashtable*) == 0x8);
    // System.Uri scriptLocation
    // Size: 0x8
    // Offset: 0x28
    ::System::Uri* scriptLocation;
    // Field size check
    static_assert(sizeof(::System::Uri*) == 0x8);
    // System.Collections.ArrayList bypassList
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::ArrayList* bypassList;
    // Field size check
    static_assert(sizeof(::System::Collections::ArrayList*) == 0x8);
    public:
    // Get instance field reference: System.Boolean bypassOnLocal
    [[deprecated("Use field access instead!")]] bool& dyn_bypassOnLocal();
    // Get instance field reference: System.Boolean automaticallyDetectSettings
    [[deprecated("Use field access instead!")]] bool& dyn_automaticallyDetectSettings();
    // Get instance field reference: System.Uri proxyAddress
    [[deprecated("Use field access instead!")]] ::System::Uri*& dyn_proxyAddress();
    // Get instance field reference: System.Collections.Hashtable proxyHostAddresses
    [[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& dyn_proxyHostAddresses();
    // Get instance field reference: System.Uri scriptLocation
    [[deprecated("Use field access instead!")]] ::System::Uri*& dyn_scriptLocation();
    // Get instance field reference: System.Collections.ArrayList bypassList
    [[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& dyn_bypassList();
    // public System.Void .ctor()
    // Offset: 0xDF5F48
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebProxyData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxyData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebProxyData*, creationType>()));
    }
  }; // System.Net.WebProxyData
  #pragma pack(pop)
  static check_size<sizeof(WebProxyData), 48 + sizeof(::System::Collections::ArrayList*)> __System_Net_WebProxyDataSizeCheck;
  static_assert(sizeof(WebProxyData) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebProxyData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
