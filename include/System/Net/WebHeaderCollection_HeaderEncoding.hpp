// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::WebHeaderCollection::HeaderEncoding);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebHeaderCollection::HeaderEncoding*, "System.Net", "WebHeaderCollection/HeaderEncoding");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.WebHeaderCollection/System.Net.HeaderEncoding
  // [TokenAttribute] Offset: FFFFFFFF
  class WebHeaderCollection::HeaderEncoding : public ::Il2CppObject {
    public:
    // static System.String GetString(System.Byte[] bytes, System.Int32 byteIndex, System.Int32 byteCount)
    // Offset: 0xFBF968
    static ::StringW GetString(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount);
    // static System.String GetString(System.Byte* pBytes, System.Int32 byteCount)
    // Offset: 0xFBE388
    static ::StringW GetString(uint8_t* pBytes, int byteCount);
    // static System.Int32 GetByteCount(System.String myString)
    // Offset: 0xFBF98C
    static int GetByteCount(::StringW myString);
    // static System.Void GetBytes(System.String myString, System.Int32 charIndex, System.Int32 charCount, System.Byte[] bytes, System.Int32 byteIndex)
    // Offset: 0xFBF9A4
    static void GetBytes(::StringW myString, int charIndex, int charCount, ::ArrayW<uint8_t> bytes, int byteIndex);
    // static System.Byte[] GetBytes(System.String myString)
    // Offset: 0xFBD6D8
    static ::ArrayW<uint8_t> GetBytes(::StringW myString);
    // static System.String DecodeUtf8FromString(System.String input)
    // Offset: 0xFBAA74
    static ::StringW DecodeUtf8FromString(::StringW input);
  }; // System.Net.WebHeaderCollection/System.Net.HeaderEncoding
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::HeaderEncoding::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::ArrayW<uint8_t>, int, int)>(&System::Net::WebHeaderCollection::HeaderEncoding::GetString)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* byteIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* byteCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection::HeaderEncoding*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, byteIndex, byteCount});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::HeaderEncoding::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(uint8_t*, int)>(&System::Net::WebHeaderCollection::HeaderEncoding::GetString)> {
  static const MethodInfo* get() {
    static auto* pBytes = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* byteCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection::HeaderEncoding*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pBytes, byteCount});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::HeaderEncoding::GetByteCount
// Il2CppName: GetByteCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&System::Net::WebHeaderCollection::HeaderEncoding::GetByteCount)> {
  static const MethodInfo* get() {
    static auto* myString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection::HeaderEncoding*), "GetByteCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{myString});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::HeaderEncoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, int, int, ::ArrayW<uint8_t>, int)>(&System::Net::WebHeaderCollection::HeaderEncoding::GetBytes)> {
  static const MethodInfo* get() {
    static auto* myString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* charIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* charCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* byteIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection::HeaderEncoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{myString, charIndex, charCount, bytes, byteIndex});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::HeaderEncoding::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::StringW)>(&System::Net::WebHeaderCollection::HeaderEncoding::GetBytes)> {
  static const MethodInfo* get() {
    static auto* myString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection::HeaderEncoding*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{myString});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::HeaderEncoding::DecodeUtf8FromString
// Il2CppName: DecodeUtf8FromString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&System::Net::WebHeaderCollection::HeaderEncoding::DecodeUtf8FromString)> {
  static const MethodInfo* get() {
    static auto* input = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection::HeaderEncoding*), "DecodeUtf8FromString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input});
  }
};
