// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ComponentModel.Component
#include "System/ComponentModel/Component.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: ICredentials
  class ICredentials;
  // Forward declaring type: WebHeaderCollection
  class WebHeaderCollection;
  // Forward declaring type: WebResponse
  class WebResponse;
  // Forward declaring type: WebRequest
  class WebRequest;
  // Forward declaring type: IWebProxy
  class IWebProxy;
  // Forward declaring type: OpenReadCompletedEventHandler
  class OpenReadCompletedEventHandler;
  // Forward declaring type: OpenWriteCompletedEventHandler
  class OpenWriteCompletedEventHandler;
  // Forward declaring type: DownloadStringCompletedEventHandler
  class DownloadStringCompletedEventHandler;
  // Forward declaring type: DownloadDataCompletedEventHandler
  class DownloadDataCompletedEventHandler;
  // Forward declaring type: UploadStringCompletedEventHandler
  class UploadStringCompletedEventHandler;
  // Forward declaring type: UploadDataCompletedEventHandler
  class UploadDataCompletedEventHandler;
  // Forward declaring type: UploadFileCompletedEventHandler
  class UploadFileCompletedEventHandler;
  // Forward declaring type: UploadValuesCompletedEventHandler
  class UploadValuesCompletedEventHandler;
  // Forward declaring type: DownloadProgressChangedEventHandler
  class DownloadProgressChangedEventHandler;
  // Forward declaring type: UploadProgressChangedEventHandler
  class UploadProgressChangedEventHandler;
  // Forward declaring type: WriteStreamClosedEventHandler
  class WriteStreamClosedEventHandler;
  // Forward declaring type: WriteStreamClosedEventArgs
  class WriteStreamClosedEventArgs;
  // Forward declaring type: CompletionDelegate
  class CompletionDelegate;
  // Forward declaring type: OpenReadCompletedEventArgs
  class OpenReadCompletedEventArgs;
  // Forward declaring type: OpenWriteCompletedEventArgs
  class OpenWriteCompletedEventArgs;
  // Forward declaring type: DownloadStringCompletedEventArgs
  class DownloadStringCompletedEventArgs;
  // Forward declaring type: DownloadDataCompletedEventArgs
  class DownloadDataCompletedEventArgs;
  // Forward declaring type: UploadStringCompletedEventArgs
  class UploadStringCompletedEventArgs;
  // Forward declaring type: UploadDataCompletedEventArgs
  class UploadDataCompletedEventArgs;
  // Forward declaring type: UploadFileCompletedEventArgs
  class UploadFileCompletedEventArgs;
  // Forward declaring type: UploadValuesCompletedEventArgs
  class UploadValuesCompletedEventArgs;
  // Forward declaring type: DownloadProgressChangedEventArgs
  class DownloadProgressChangedEventArgs;
  // Forward declaring type: UploadProgressChangedEventArgs
  class UploadProgressChangedEventArgs;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Uri
  class Uri;
  // Forward declaring type: String
  class String;
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: Exception
  class Exception;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Forward declaring namespace: System::Collections::Specialized
namespace System::Collections::Specialized {
  // Forward declaring type: NameValueCollection
  class NameValueCollection;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
// Forward declaring namespace: System::Net::Cache
namespace System::Net::Cache {
  // Forward declaring type: RequestCachePolicy
  class RequestCachePolicy;
}
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
  // Forward declaring type: AsyncCompletedEventHandler
  class AsyncCompletedEventHandler;
  // Forward declaring type: AsyncCompletedEventArgs
  class AsyncCompletedEventArgs;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: SendOrPostCallback
  class SendOrPostCallback;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
  // Forward declaring type: FileStream
  class FileStream;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
  // Forward declaring type: Task
  class Task;
  // Forward declaring type: TaskCompletionSource`1<TResult>
  template<typename TResult>
  class TaskCompletionSource_1;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: WebClient
  class WebClient;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::WebClient);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebClient*, "System.Net", "WebClient");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x158
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.WebClient
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: 8FFCC4
  class WebClient : public ::System::ComponentModel::Component {
    public:
    // Nested type: ::System::Net::WebClient::ProgressData
    class ProgressData;
    // Nested type: ::System::Net::WebClient::DownloadBitsState
    class DownloadBitsState;
    // Nested type: ::System::Net::WebClient::UploadBitsState
    class UploadBitsState;
    // Nested type: ::System::Net::WebClient::WebClientWriteStream
    class WebClientWriteStream;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass219_0
    class $$c__DisplayClass219_0;
    // Nested type: ::System::Net::WebClient::$$c
    class $$c;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass221_0
    class $$c__DisplayClass221_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass225_0
    class $$c__DisplayClass225_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass229_0
    class $$c__DisplayClass229_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass231_0
    class $$c__DisplayClass231_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass233_0
    class $$c__DisplayClass233_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass237_0
    class $$c__DisplayClass237_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass241_0
    class $$c__DisplayClass241_0;
    // Nested type: ::System::Net::WebClient::$$c__DisplayClass245_0
    class $$c__DisplayClass245_0;
    public:
    // private System.Uri m_baseAddress
    // Size: 0x8
    // Offset: 0x28
    ::System::Uri* m_baseAddress;
    // Field size check
    static_assert(sizeof(::System::Uri*) == 0x8);
    // private System.Net.ICredentials m_credentials
    // Size: 0x8
    // Offset: 0x30
    ::System::Net::ICredentials* m_credentials;
    // Field size check
    static_assert(sizeof(::System::Net::ICredentials*) == 0x8);
    // private System.Net.WebHeaderCollection m_headers
    // Size: 0x8
    // Offset: 0x38
    ::System::Net::WebHeaderCollection* m_headers;
    // Field size check
    static_assert(sizeof(::System::Net::WebHeaderCollection*) == 0x8);
    // private System.Collections.Specialized.NameValueCollection m_requestParameters
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Specialized::NameValueCollection* m_requestParameters;
    // Field size check
    static_assert(sizeof(::System::Collections::Specialized::NameValueCollection*) == 0x8);
    // private System.Net.WebResponse m_WebResponse
    // Size: 0x8
    // Offset: 0x48
    ::System::Net::WebResponse* m_WebResponse;
    // Field size check
    static_assert(sizeof(::System::Net::WebResponse*) == 0x8);
    // private System.Net.WebRequest m_WebRequest
    // Size: 0x8
    // Offset: 0x50
    ::System::Net::WebRequest* m_WebRequest;
    // Field size check
    static_assert(sizeof(::System::Net::WebRequest*) == 0x8);
    // private System.Text.Encoding m_Encoding
    // Size: 0x8
    // Offset: 0x58
    ::System::Text::Encoding* m_Encoding;
    // Field size check
    static_assert(sizeof(::System::Text::Encoding*) == 0x8);
    // private System.String m_Method
    // Size: 0x8
    // Offset: 0x60
    ::StringW m_Method;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Int64 m_ContentLength
    // Size: 0x8
    // Offset: 0x68
    int64_t m_ContentLength;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // private System.Boolean m_InitWebClientAsync
    // Size: 0x1
    // Offset: 0x70
    bool m_InitWebClientAsync;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean m_Cancelled
    // Size: 0x1
    // Offset: 0x71
    bool m_Cancelled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_Cancelled and: m_Progress
    char __padding10[0x6] = {};
    // private System.Net.WebClient/System.Net.ProgressData m_Progress
    // Size: 0x8
    // Offset: 0x78
    ::System::Net::WebClient::ProgressData* m_Progress;
    // Field size check
    static_assert(sizeof(::System::Net::WebClient::ProgressData*) == 0x8);
    // private System.Net.IWebProxy m_Proxy
    // Size: 0x8
    // Offset: 0x80
    ::System::Net::IWebProxy* m_Proxy;
    // Field size check
    static_assert(sizeof(::System::Net::IWebProxy*) == 0x8);
    // private System.Boolean m_ProxySet
    // Size: 0x1
    // Offset: 0x88
    bool m_ProxySet;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: m_ProxySet and: m_CachePolicy
    char __padding13[0x7] = {};
    // private System.Net.Cache.RequestCachePolicy m_CachePolicy
    // Size: 0x8
    // Offset: 0x90
    ::System::Net::Cache::RequestCachePolicy* m_CachePolicy;
    // Field size check
    static_assert(sizeof(::System::Net::Cache::RequestCachePolicy*) == 0x8);
    // private System.Boolean <AllowReadStreamBuffering>k__BackingField
    // Size: 0x1
    // Offset: 0x98
    bool AllowReadStreamBuffering;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <AllowWriteStreamBuffering>k__BackingField
    // Size: 0x1
    // Offset: 0x99
    bool AllowWriteStreamBuffering;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: AllowWriteStreamBuffering and: m_CallNesting
    char __padding16[0x2] = {};
    // private System.Int32 m_CallNesting
    // Size: 0x4
    // Offset: 0x9C
    int m_CallNesting;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.ComponentModel.AsyncOperation m_AsyncOp
    // Size: 0x8
    // Offset: 0xA0
    ::System::ComponentModel::AsyncOperation* m_AsyncOp;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::AsyncOperation*) == 0x8);
    // private System.Net.OpenReadCompletedEventHandler OpenReadCompleted
    // Size: 0x8
    // Offset: 0xA8
    ::System::Net::OpenReadCompletedEventHandler* OpenReadCompleted;
    // Field size check
    static_assert(sizeof(::System::Net::OpenReadCompletedEventHandler*) == 0x8);
    // private System.Threading.SendOrPostCallback openReadOperationCompleted
    // Size: 0x8
    // Offset: 0xB0
    ::System::Threading::SendOrPostCallback* openReadOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted
    // Size: 0x8
    // Offset: 0xB8
    ::System::Net::OpenWriteCompletedEventHandler* OpenWriteCompleted;
    // Field size check
    static_assert(sizeof(::System::Net::OpenWriteCompletedEventHandler*) == 0x8);
    // private System.Threading.SendOrPostCallback openWriteOperationCompleted
    // Size: 0x8
    // Offset: 0xC0
    ::System::Threading::SendOrPostCallback* openWriteOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted
    // Size: 0x8
    // Offset: 0xC8
    ::System::Net::DownloadStringCompletedEventHandler* DownloadStringCompleted;
    // Field size check
    static_assert(sizeof(::System::Net::DownloadStringCompletedEventHandler*) == 0x8);
    // private System.Threading.SendOrPostCallback downloadStringOperationCompleted
    // Size: 0x8
    // Offset: 0xD0
    ::System::Threading::SendOrPostCallback* downloadStringOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted
    // Size: 0x8
    // Offset: 0xD8
    ::System::Net::DownloadDataCompletedEventHandler* DownloadDataCompleted;
    // Field size check
    static_assert(sizeof(::System::Net::DownloadDataCompletedEventHandler*) == 0x8);
    // private System.Threading.SendOrPostCallback downloadDataOperationCompleted
    // Size: 0x8
    // Offset: 0xE0
    ::System::Threading::SendOrPostCallback* downloadDataOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted
    // Size: 0x8
    // Offset: 0xE8
    ::System::ComponentModel::AsyncCompletedEventHandler* DownloadFileCompleted;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::AsyncCompletedEventHandler*) == 0x8);
    // private System.Threading.SendOrPostCallback downloadFileOperationCompleted
    // Size: 0x8
    // Offset: 0xF0
    ::System::Threading::SendOrPostCallback* downloadFileOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Net.UploadStringCompletedEventHandler UploadStringCompleted
    // Size: 0x8
    // Offset: 0xF8
    ::System::Net::UploadStringCompletedEventHandler* UploadStringCompleted;
    // Field size check
    static_assert(sizeof(::System::Net::UploadStringCompletedEventHandler*) == 0x8);
    // private System.Threading.SendOrPostCallback uploadStringOperationCompleted
    // Size: 0x8
    // Offset: 0x100
    ::System::Threading::SendOrPostCallback* uploadStringOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Net.UploadDataCompletedEventHandler UploadDataCompleted
    // Size: 0x8
    // Offset: 0x108
    ::System::Net::UploadDataCompletedEventHandler* UploadDataCompleted;
    // Field size check
    static_assert(sizeof(::System::Net::UploadDataCompletedEventHandler*) == 0x8);
    // private System.Threading.SendOrPostCallback uploadDataOperationCompleted
    // Size: 0x8
    // Offset: 0x110
    ::System::Threading::SendOrPostCallback* uploadDataOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Net.UploadFileCompletedEventHandler UploadFileCompleted
    // Size: 0x8
    // Offset: 0x118
    ::System::Net::UploadFileCompletedEventHandler* UploadFileCompleted;
    // Field size check
    static_assert(sizeof(::System::Net::UploadFileCompletedEventHandler*) == 0x8);
    // private System.Threading.SendOrPostCallback uploadFileOperationCompleted
    // Size: 0x8
    // Offset: 0x120
    ::System::Threading::SendOrPostCallback* uploadFileOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted
    // Size: 0x8
    // Offset: 0x128
    ::System::Net::UploadValuesCompletedEventHandler* UploadValuesCompleted;
    // Field size check
    static_assert(sizeof(::System::Net::UploadValuesCompletedEventHandler*) == 0x8);
    // private System.Threading.SendOrPostCallback uploadValuesOperationCompleted
    // Size: 0x8
    // Offset: 0x130
    ::System::Threading::SendOrPostCallback* uploadValuesOperationCompleted;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged
    // Size: 0x8
    // Offset: 0x138
    ::System::Net::DownloadProgressChangedEventHandler* DownloadProgressChanged;
    // Field size check
    static_assert(sizeof(::System::Net::DownloadProgressChangedEventHandler*) == 0x8);
    // private System.Net.UploadProgressChangedEventHandler UploadProgressChanged
    // Size: 0x8
    // Offset: 0x140
    ::System::Net::UploadProgressChangedEventHandler* UploadProgressChanged;
    // Field size check
    static_assert(sizeof(::System::Net::UploadProgressChangedEventHandler*) == 0x8);
    // private System.Threading.SendOrPostCallback reportDownloadProgressChanged
    // Size: 0x8
    // Offset: 0x148
    ::System::Threading::SendOrPostCallback* reportDownloadProgressChanged;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    // private System.Threading.SendOrPostCallback reportUploadProgressChanged
    // Size: 0x8
    // Offset: 0x150
    ::System::Threading::SendOrPostCallback* reportUploadProgressChanged;
    // Field size check
    static_assert(sizeof(::System::Threading::SendOrPostCallback*) == 0x8);
    public:
    // static field const value: static private System.Int32 DefaultCopyBufferLength
    static constexpr const int DefaultCopyBufferLength = 8192;
    // Get static field: static private System.Int32 DefaultCopyBufferLength
    static int _get_DefaultCopyBufferLength();
    // Set static field: static private System.Int32 DefaultCopyBufferLength
    static void _set_DefaultCopyBufferLength(int value);
    // static field const value: static private System.Int32 DefaultDownloadBufferLength
    static constexpr const int DefaultDownloadBufferLength = 65536;
    // Get static field: static private System.Int32 DefaultDownloadBufferLength
    static int _get_DefaultDownloadBufferLength();
    // Set static field: static private System.Int32 DefaultDownloadBufferLength
    static void _set_DefaultDownloadBufferLength(int value);
    // static field const value: static private System.String DefaultUploadFileContentType
    static constexpr const char* DefaultUploadFileContentType = "application/octet-stream";
    // Get static field: static private System.String DefaultUploadFileContentType
    static ::StringW _get_DefaultUploadFileContentType();
    // Set static field: static private System.String DefaultUploadFileContentType
    static void _set_DefaultUploadFileContentType(::StringW value);
    // static field const value: static private System.String UploadFileContentType
    static constexpr const char* UploadFileContentType = "multipart/form-data";
    // Get static field: static private System.String UploadFileContentType
    static ::StringW _get_UploadFileContentType();
    // Set static field: static private System.String UploadFileContentType
    static void _set_UploadFileContentType(::StringW value);
    // static field const value: static private System.String UploadValuesContentType
    static constexpr const char* UploadValuesContentType = "application/x-www-form-urlencoded";
    // Get static field: static private System.String UploadValuesContentType
    static ::StringW _get_UploadValuesContentType();
    // Set static field: static private System.String UploadValuesContentType
    static void _set_UploadValuesContentType(::StringW value);
    // Get instance field reference: private System.Uri m_baseAddress
    [[deprecated("Use field access instead!")]] ::System::Uri*& dyn_m_baseAddress();
    // Get instance field reference: private System.Net.ICredentials m_credentials
    [[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& dyn_m_credentials();
    // Get instance field reference: private System.Net.WebHeaderCollection m_headers
    [[deprecated("Use field access instead!")]] ::System::Net::WebHeaderCollection*& dyn_m_headers();
    // Get instance field reference: private System.Collections.Specialized.NameValueCollection m_requestParameters
    [[deprecated("Use field access instead!")]] ::System::Collections::Specialized::NameValueCollection*& dyn_m_requestParameters();
    // Get instance field reference: private System.Net.WebResponse m_WebResponse
    [[deprecated("Use field access instead!")]] ::System::Net::WebResponse*& dyn_m_WebResponse();
    // Get instance field reference: private System.Net.WebRequest m_WebRequest
    [[deprecated("Use field access instead!")]] ::System::Net::WebRequest*& dyn_m_WebRequest();
    // Get instance field reference: private System.Text.Encoding m_Encoding
    [[deprecated("Use field access instead!")]] ::System::Text::Encoding*& dyn_m_Encoding();
    // Get instance field reference: private System.String m_Method
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_Method();
    // Get instance field reference: private System.Int64 m_ContentLength
    [[deprecated("Use field access instead!")]] int64_t& dyn_m_ContentLength();
    // Get instance field reference: private System.Boolean m_InitWebClientAsync
    [[deprecated("Use field access instead!")]] bool& dyn_m_InitWebClientAsync();
    // Get instance field reference: private System.Boolean m_Cancelled
    [[deprecated("Use field access instead!")]] bool& dyn_m_Cancelled();
    // Get instance field reference: private System.Net.WebClient/System.Net.ProgressData m_Progress
    [[deprecated("Use field access instead!")]] ::System::Net::WebClient::ProgressData*& dyn_m_Progress();
    // Get instance field reference: private System.Net.IWebProxy m_Proxy
    [[deprecated("Use field access instead!")]] ::System::Net::IWebProxy*& dyn_m_Proxy();
    // Get instance field reference: private System.Boolean m_ProxySet
    [[deprecated("Use field access instead!")]] bool& dyn_m_ProxySet();
    // Get instance field reference: private System.Net.Cache.RequestCachePolicy m_CachePolicy
    [[deprecated("Use field access instead!")]] ::System::Net::Cache::RequestCachePolicy*& dyn_m_CachePolicy();
    // Get instance field reference: private System.Boolean <AllowReadStreamBuffering>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$AllowReadStreamBuffering$k__BackingField();
    // Get instance field reference: private System.Boolean <AllowWriteStreamBuffering>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$AllowWriteStreamBuffering$k__BackingField();
    // Get instance field reference: private System.Int32 m_CallNesting
    [[deprecated("Use field access instead!")]] int& dyn_m_CallNesting();
    // Get instance field reference: private System.ComponentModel.AsyncOperation m_AsyncOp
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::AsyncOperation*& dyn_m_AsyncOp();
    // Get instance field reference: private System.Net.OpenReadCompletedEventHandler OpenReadCompleted
    [[deprecated("Use field access instead!")]] ::System::Net::OpenReadCompletedEventHandler*& dyn_OpenReadCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback openReadOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn_openReadOperationCompleted();
    // Get instance field reference: private System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted
    [[deprecated("Use field access instead!")]] ::System::Net::OpenWriteCompletedEventHandler*& dyn_OpenWriteCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback openWriteOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn_openWriteOperationCompleted();
    // Get instance field reference: private System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted
    [[deprecated("Use field access instead!")]] ::System::Net::DownloadStringCompletedEventHandler*& dyn_DownloadStringCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback downloadStringOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn_downloadStringOperationCompleted();
    // Get instance field reference: private System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted
    [[deprecated("Use field access instead!")]] ::System::Net::DownloadDataCompletedEventHandler*& dyn_DownloadDataCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback downloadDataOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn_downloadDataOperationCompleted();
    // Get instance field reference: private System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::AsyncCompletedEventHandler*& dyn_DownloadFileCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback downloadFileOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn_downloadFileOperationCompleted();
    // Get instance field reference: private System.Net.UploadStringCompletedEventHandler UploadStringCompleted
    [[deprecated("Use field access instead!")]] ::System::Net::UploadStringCompletedEventHandler*& dyn_UploadStringCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback uploadStringOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn_uploadStringOperationCompleted();
    // Get instance field reference: private System.Net.UploadDataCompletedEventHandler UploadDataCompleted
    [[deprecated("Use field access instead!")]] ::System::Net::UploadDataCompletedEventHandler*& dyn_UploadDataCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback uploadDataOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn_uploadDataOperationCompleted();
    // Get instance field reference: private System.Net.UploadFileCompletedEventHandler UploadFileCompleted
    [[deprecated("Use field access instead!")]] ::System::Net::UploadFileCompletedEventHandler*& dyn_UploadFileCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback uploadFileOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn_uploadFileOperationCompleted();
    // Get instance field reference: private System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted
    [[deprecated("Use field access instead!")]] ::System::Net::UploadValuesCompletedEventHandler*& dyn_UploadValuesCompleted();
    // Get instance field reference: private System.Threading.SendOrPostCallback uploadValuesOperationCompleted
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn_uploadValuesOperationCompleted();
    // Get instance field reference: private System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged
    [[deprecated("Use field access instead!")]] ::System::Net::DownloadProgressChangedEventHandler*& dyn_DownloadProgressChanged();
    // Get instance field reference: private System.Net.UploadProgressChangedEventHandler UploadProgressChanged
    [[deprecated("Use field access instead!")]] ::System::Net::UploadProgressChangedEventHandler*& dyn_UploadProgressChanged();
    // Get instance field reference: private System.Threading.SendOrPostCallback reportDownloadProgressChanged
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn_reportDownloadProgressChanged();
    // Get instance field reference: private System.Threading.SendOrPostCallback reportUploadProgressChanged
    [[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& dyn_reportUploadProgressChanged();
    // public System.Boolean get_AllowReadStreamBuffering()
    // Offset: 0xCA1974
    bool get_AllowReadStreamBuffering();
    // public System.Void set_AllowReadStreamBuffering(System.Boolean value)
    // Offset: 0xCA197C
    void set_AllowReadStreamBuffering(bool value);
    // public System.Boolean get_AllowWriteStreamBuffering()
    // Offset: 0xCA1988
    bool get_AllowWriteStreamBuffering();
    // public System.Void set_AllowWriteStreamBuffering(System.Boolean value)
    // Offset: 0xCA1990
    void set_AllowWriteStreamBuffering(bool value);
    // public System.Text.Encoding get_Encoding()
    // Offset: 0xCA19A8
    ::System::Text::Encoding* get_Encoding();
    // public System.Void set_Encoding(System.Text.Encoding value)
    // Offset: 0xCA19B0
    void set_Encoding(::System::Text::Encoding* value);
    // public System.String get_BaseAddress()
    // Offset: 0xCA1A40
    ::StringW get_BaseAddress();
    // public System.Void set_BaseAddress(System.String value)
    // Offset: 0xCA1AEC
    void set_BaseAddress(::StringW value);
    // public System.Net.ICredentials get_Credentials()
    // Offset: 0xCA1C3C
    ::System::Net::ICredentials* get_Credentials();
    // public System.Void set_Credentials(System.Net.ICredentials value)
    // Offset: 0xCA1C44
    void set_Credentials(::System::Net::ICredentials* value);
    // public System.Boolean get_UseDefaultCredentials()
    // Offset: 0xCA1C4C
    bool get_UseDefaultCredentials();
    // public System.Void set_UseDefaultCredentials(System.Boolean value)
    // Offset: 0xCA1CD0
    void set_UseDefaultCredentials(bool value);
    // public System.Net.WebHeaderCollection get_Headers()
    // Offset: 0xCA1D58
    ::System::Net::WebHeaderCollection* get_Headers();
    // public System.Void set_Headers(System.Net.WebHeaderCollection value)
    // Offset: 0xCA1DC8
    void set_Headers(::System::Net::WebHeaderCollection* value);
    // public System.Collections.Specialized.NameValueCollection get_QueryString()
    // Offset: 0xCA1DD0
    ::System::Collections::Specialized::NameValueCollection* get_QueryString();
    // public System.Void set_QueryString(System.Collections.Specialized.NameValueCollection value)
    // Offset: 0xCA1E3C
    void set_QueryString(::System::Collections::Specialized::NameValueCollection* value);
    // public System.Net.WebHeaderCollection get_ResponseHeaders()
    // Offset: 0xCA1E44
    ::System::Net::WebHeaderCollection* get_ResponseHeaders();
    // public System.Net.IWebProxy get_Proxy()
    // Offset: 0xCA1E60
    ::System::Net::IWebProxy* get_Proxy();
    // public System.Void set_Proxy(System.Net.IWebProxy value)
    // Offset: 0xCA1EDC
    void set_Proxy(::System::Net::IWebProxy* value);
    // public System.Net.Cache.RequestCachePolicy get_CachePolicy()
    // Offset: 0xCA1EEC
    ::System::Net::Cache::RequestCachePolicy* get_CachePolicy();
    // public System.Void set_CachePolicy(System.Net.Cache.RequestCachePolicy value)
    // Offset: 0xCA1EF4
    void set_CachePolicy(::System::Net::Cache::RequestCachePolicy* value);
    // public System.Boolean get_IsBusy()
    // Offset: 0xCA1EFC
    bool get_IsBusy();
    // public System.Void add_WriteStreamClosed(System.Net.WriteStreamClosedEventHandler value)
    // Offset: 0xCA199C
    void add_WriteStreamClosed(::System::Net::WriteStreamClosedEventHandler* value);
    // public System.Void remove_WriteStreamClosed(System.Net.WriteStreamClosedEventHandler value)
    // Offset: 0xCA19A0
    void remove_WriteStreamClosed(::System::Net::WriteStreamClosedEventHandler* value);
    // public System.Void add_OpenReadCompleted(System.Net.OpenReadCompletedEventHandler value)
    // Offset: 0xCA79C0
    void add_OpenReadCompleted(::System::Net::OpenReadCompletedEventHandler* value);
    // public System.Void remove_OpenReadCompleted(System.Net.OpenReadCompletedEventHandler value)
    // Offset: 0xCA7A64
    void remove_OpenReadCompleted(::System::Net::OpenReadCompletedEventHandler* value);
    // public System.Void add_OpenWriteCompleted(System.Net.OpenWriteCompletedEventHandler value)
    // Offset: 0xCA8324
    void add_OpenWriteCompleted(::System::Net::OpenWriteCompletedEventHandler* value);
    // public System.Void remove_OpenWriteCompleted(System.Net.OpenWriteCompletedEventHandler value)
    // Offset: 0xCA83C8
    void remove_OpenWriteCompleted(::System::Net::OpenWriteCompletedEventHandler* value);
    // public System.Void add_DownloadStringCompleted(System.Net.DownloadStringCompletedEventHandler value)
    // Offset: 0xCA8BF0
    void add_DownloadStringCompleted(::System::Net::DownloadStringCompletedEventHandler* value);
    // public System.Void remove_DownloadStringCompleted(System.Net.DownloadStringCompletedEventHandler value)
    // Offset: 0xCA8C94
    void remove_DownloadStringCompleted(::System::Net::DownloadStringCompletedEventHandler* value);
    // public System.Void add_DownloadDataCompleted(System.Net.DownloadDataCompletedEventHandler value)
    // Offset: 0xCA9324
    void add_DownloadDataCompleted(::System::Net::DownloadDataCompletedEventHandler* value);
    // public System.Void remove_DownloadDataCompleted(System.Net.DownloadDataCompletedEventHandler value)
    // Offset: 0xCA93C8
    void remove_DownloadDataCompleted(::System::Net::DownloadDataCompletedEventHandler* value);
    // public System.Void add_DownloadFileCompleted(System.ComponentModel.AsyncCompletedEventHandler value)
    // Offset: 0xCA9954
    void add_DownloadFileCompleted(::System::ComponentModel::AsyncCompletedEventHandler* value);
    // public System.Void remove_DownloadFileCompleted(System.ComponentModel.AsyncCompletedEventHandler value)
    // Offset: 0xCA99F8
    void remove_DownloadFileCompleted(::System::ComponentModel::AsyncCompletedEventHandler* value);
    // public System.Void add_UploadStringCompleted(System.Net.UploadStringCompletedEventHandler value)
    // Offset: 0xCA9FDC
    void add_UploadStringCompleted(::System::Net::UploadStringCompletedEventHandler* value);
    // public System.Void remove_UploadStringCompleted(System.Net.UploadStringCompletedEventHandler value)
    // Offset: 0xCAA080
    void remove_UploadStringCompleted(::System::Net::UploadStringCompletedEventHandler* value);
    // public System.Void add_UploadDataCompleted(System.Net.UploadDataCompletedEventHandler value)
    // Offset: 0xCAAB5C
    void add_UploadDataCompleted(::System::Net::UploadDataCompletedEventHandler* value);
    // public System.Void remove_UploadDataCompleted(System.Net.UploadDataCompletedEventHandler value)
    // Offset: 0xCAAC04
    void remove_UploadDataCompleted(::System::Net::UploadDataCompletedEventHandler* value);
    // public System.Void add_UploadFileCompleted(System.Net.UploadFileCompletedEventHandler value)
    // Offset: 0xCAB3E0
    void add_UploadFileCompleted(::System::Net::UploadFileCompletedEventHandler* value);
    // public System.Void remove_UploadFileCompleted(System.Net.UploadFileCompletedEventHandler value)
    // Offset: 0xCAB488
    void remove_UploadFileCompleted(::System::Net::UploadFileCompletedEventHandler* value);
    // public System.Void add_UploadValuesCompleted(System.Net.UploadValuesCompletedEventHandler value)
    // Offset: 0xCABCB4
    void add_UploadValuesCompleted(::System::Net::UploadValuesCompletedEventHandler* value);
    // public System.Void remove_UploadValuesCompleted(System.Net.UploadValuesCompletedEventHandler value)
    // Offset: 0xCABD5C
    void remove_UploadValuesCompleted(::System::Net::UploadValuesCompletedEventHandler* value);
    // public System.Void add_DownloadProgressChanged(System.Net.DownloadProgressChangedEventHandler value)
    // Offset: 0xCAD6C8
    void add_DownloadProgressChanged(::System::Net::DownloadProgressChangedEventHandler* value);
    // public System.Void remove_DownloadProgressChanged(System.Net.DownloadProgressChangedEventHandler value)
    // Offset: 0xCAD770
    void remove_DownloadProgressChanged(::System::Net::DownloadProgressChangedEventHandler* value);
    // public System.Void add_UploadProgressChanged(System.Net.UploadProgressChangedEventHandler value)
    // Offset: 0xCAD818
    void add_UploadProgressChanged(::System::Net::UploadProgressChangedEventHandler* value);
    // public System.Void remove_UploadProgressChanged(System.Net.UploadProgressChangedEventHandler value)
    // Offset: 0xCAD8C0
    void remove_UploadProgressChanged(::System::Net::UploadProgressChangedEventHandler* value);
    // private System.Void InitWebClientAsync()
    // Offset: 0xCA1650
    void InitWebClientAsync();
    // private System.Void ClearWebClientState()
    // Offset: 0xCA1888
    void ClearWebClientState();
    // private System.Void CompleteWebClientState()
    // Offset: 0xCA1968
    void CompleteWebClientState();
    // protected System.Void OnWriteStreamClosed(System.Net.WriteStreamClosedEventArgs e)
    // Offset: 0xCA19A4
    void OnWriteStreamClosed(::System::Net::WriteStreamClosedEventArgs* e);
    // protected System.Net.WebRequest GetWebRequest(System.Uri address)
    // Offset: 0xCA1F0C
    ::System::Net::WebRequest* GetWebRequest(::System::Uri* address);
    // protected System.Net.WebResponse GetWebResponse(System.Net.WebRequest request)
    // Offset: 0xCA24EC
    ::System::Net::WebResponse* GetWebResponse(::System::Net::WebRequest* request);
    // protected System.Net.WebResponse GetWebResponse(System.Net.WebRequest request, System.IAsyncResult result)
    // Offset: 0xCA252C
    ::System::Net::WebResponse* GetWebResponse(::System::Net::WebRequest* request, ::System::IAsyncResult* result);
    // public System.Byte[] DownloadData(System.String address)
    // Offset: 0xCA2570
    ::ArrayW<uint8_t> DownloadData(::StringW address);
    // public System.Byte[] DownloadData(System.Uri address)
    // Offset: 0xCA2768
    ::ArrayW<uint8_t> DownloadData(::System::Uri* address);
    // private System.Byte[] DownloadDataInternal(System.Uri address, out System.Net.WebRequest request)
    // Offset: 0xCA28C4
    ::ArrayW<uint8_t> DownloadDataInternal(::System::Uri* address, ByRef<::System::Net::WebRequest*> request);
    // public System.Void DownloadFile(System.String address, System.String fileName)
    // Offset: 0xCA30B8
    void DownloadFile(::StringW address, ::StringW fileName);
    // public System.Void DownloadFile(System.Uri address, System.String fileName)
    // Offset: 0xCA3160
    void DownloadFile(::System::Uri* address, ::StringW fileName);
    // public System.IO.Stream OpenRead(System.String address)
    // Offset: 0xCA3578
    ::System::IO::Stream* OpenRead(::StringW address);
    // public System.IO.Stream OpenRead(System.Uri address)
    // Offset: 0xCA3618
    ::System::IO::Stream* OpenRead(::System::Uri* address);
    // public System.IO.Stream OpenWrite(System.String address)
    // Offset: 0xCA39A8
    ::System::IO::Stream* OpenWrite(::StringW address);
    // public System.IO.Stream OpenWrite(System.Uri address)
    // Offset: 0xCA3E08
    ::System::IO::Stream* OpenWrite(::System::Uri* address);
    // public System.IO.Stream OpenWrite(System.String address, System.String method)
    // Offset: 0xCA3E10
    ::System::IO::Stream* OpenWrite(::StringW address, ::StringW method);
    // public System.IO.Stream OpenWrite(System.Uri address, System.String method)
    // Offset: 0xCA3A4C
    ::System::IO::Stream* OpenWrite(::System::Uri* address, ::StringW method);
    // public System.Byte[] UploadData(System.String address, System.Byte[] data)
    // Offset: 0xCA3FFC
    ::ArrayW<uint8_t> UploadData(::StringW address, ::ArrayW<uint8_t> data);
    // public System.Byte[] UploadData(System.Uri address, System.Byte[] data)
    // Offset: 0xCA4250
    ::ArrayW<uint8_t> UploadData(::System::Uri* address, ::ArrayW<uint8_t> data);
    // public System.Byte[] UploadData(System.String address, System.String method, System.Byte[] data)
    // Offset: 0xCA425C
    ::ArrayW<uint8_t> UploadData(::StringW address, ::StringW method, ::ArrayW<uint8_t> data);
    // public System.Byte[] UploadData(System.Uri address, System.String method, System.Byte[] data)
    // Offset: 0xCA40A8
    ::ArrayW<uint8_t> UploadData(::System::Uri* address, ::StringW method, ::ArrayW<uint8_t> data);
    // private System.Byte[] UploadDataInternal(System.Uri address, System.String method, System.Byte[] data, out System.Net.WebRequest request)
    // Offset: 0xCA4314
    ::ArrayW<uint8_t> UploadDataInternal(::System::Uri* address, ::StringW method, ::ArrayW<uint8_t> data, ByRef<::System::Net::WebRequest*> request);
    // private System.Void OpenFileInternal(System.Boolean needsHeaderAndBoundary, System.String fileName, ref System.IO.FileStream fs, ref System.Byte[] buffer, ref System.Byte[] formHeaderBytes, ref System.Byte[] boundaryBytes)
    // Offset: 0xCA47B8
    void OpenFileInternal(bool needsHeaderAndBoundary, ::StringW fileName, ByRef<::System::IO::FileStream*> fs, ByRef<::ArrayW<uint8_t>> buffer, ByRef<::ArrayW<uint8_t>> formHeaderBytes, ByRef<::ArrayW<uint8_t>> boundaryBytes);
    // public System.Byte[] UploadFile(System.String address, System.String fileName)
    // Offset: 0xCA4E20
    ::ArrayW<uint8_t> UploadFile(::StringW address, ::StringW fileName);
    // public System.Byte[] UploadFile(System.Uri address, System.String fileName)
    // Offset: 0xCA4ECC
    ::ArrayW<uint8_t> UploadFile(::System::Uri* address, ::StringW fileName);
    // public System.Byte[] UploadFile(System.String address, System.String method, System.String fileName)
    // Offset: 0xCA5364
    ::ArrayW<uint8_t> UploadFile(::StringW address, ::StringW method, ::StringW fileName);
    // public System.Byte[] UploadFile(System.Uri address, System.String method, System.String fileName)
    // Offset: 0xCA4ED8
    ::ArrayW<uint8_t> UploadFile(::System::Uri* address, ::StringW method, ::StringW fileName);
    // private System.Byte[] UploadValuesInternal(System.Collections.Specialized.NameValueCollection data)
    // Offset: 0xCA53A4
    ::ArrayW<uint8_t> UploadValuesInternal(::System::Collections::Specialized::NameValueCollection* data);
    // public System.Byte[] UploadValues(System.String address, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0xCA5664
    ::ArrayW<uint8_t> UploadValues(::StringW address, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.Byte[] UploadValues(System.Uri address, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0xCA5B04
    ::ArrayW<uint8_t> UploadValues(::System::Uri* address, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.Byte[] UploadValues(System.String address, System.String method, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0xCA5B10
    ::ArrayW<uint8_t> UploadValues(::StringW address, ::StringW method, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.Byte[] UploadValues(System.Uri address, System.String method, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0xCA5710
    ::ArrayW<uint8_t> UploadValues(::System::Uri* address, ::StringW method, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.String UploadString(System.String address, System.String data)
    // Offset: 0xCA5BC8
    ::StringW UploadString(::StringW address, ::StringW data);
    // public System.String UploadString(System.Uri address, System.String data)
    // Offset: 0xCA5E58
    ::StringW UploadString(::System::Uri* address, ::StringW data);
    // public System.String UploadString(System.String address, System.String method, System.String data)
    // Offset: 0xCA5E64
    ::StringW UploadString(::StringW address, ::StringW method, ::StringW data);
    // public System.String UploadString(System.Uri address, System.String method, System.String data)
    // Offset: 0xCA5C74
    ::StringW UploadString(::System::Uri* address, ::StringW method, ::StringW data);
    // public System.String DownloadString(System.String address)
    // Offset: 0xCA63A4
    ::StringW DownloadString(::StringW address);
    // public System.String DownloadString(System.Uri address)
    // Offset: 0xCA6444
    ::StringW DownloadString(::System::Uri* address);
    // static private System.Void AbortRequest(System.Net.WebRequest request)
    // Offset: 0xCA2F80
    static void AbortRequest(::System::Net::WebRequest* request);
    // private System.Void CopyHeadersTo(System.Net.WebRequest request)
    // Offset: 0xCA203C
    void CopyHeadersTo(::System::Net::WebRequest* request);
    // private System.Uri GetUri(System.String path)
    // Offset: 0xCA2610
    ::System::Uri* GetUri(::StringW path);
    // private System.Uri GetUri(System.Uri address)
    // Offset: 0xCA2B24
    ::System::Uri* GetUri(::System::Uri* address);
    // static private System.Void DownloadBitsResponseCallback(System.IAsyncResult result)
    // Offset: 0xCA65B4
    static void DownloadBitsResponseCallback(::System::IAsyncResult* result);
    // static private System.Void DownloadBitsReadCallback(System.IAsyncResult result)
    // Offset: 0xCA694C
    static void DownloadBitsReadCallback(::System::IAsyncResult* result);
    // static private System.Void DownloadBitsReadCallbackState(System.Net.WebClient/System.Net.DownloadBitsState state, System.IAsyncResult result)
    // Offset: 0xCA6A40
    static void DownloadBitsReadCallbackState(::System::Net::WebClient::DownloadBitsState* state, ::System::IAsyncResult* result);
    // private System.Byte[] DownloadBits(System.Net.WebRequest request, System.IO.Stream writeStream, System.Net.CompletionDelegate completionDelegate, System.ComponentModel.AsyncOperation asyncOp)
    // Offset: 0xCA2E1C
    ::ArrayW<uint8_t> DownloadBits(::System::Net::WebRequest* request, ::System::IO::Stream* writeStream, ::System::Net::CompletionDelegate* completionDelegate, ::System::ComponentModel::AsyncOperation* asyncOp);
    // static private System.Void UploadBitsRequestCallback(System.IAsyncResult result)
    // Offset: 0xCA6D98
    static void UploadBitsRequestCallback(::System::IAsyncResult* result);
    // static private System.Void UploadBitsWriteCallback(System.IAsyncResult result)
    // Offset: 0xCA7114
    static void UploadBitsWriteCallback(::System::IAsyncResult* result);
    // private System.Void UploadBits(System.Net.WebRequest request, System.IO.Stream readStream, System.Byte[] buffer, System.Int32 chunkSize, System.Byte[] header, System.Byte[] footer, System.Net.CompletionDelegate uploadCompletionDelegate, System.Net.CompletionDelegate downloadCompletionDelegate, System.ComponentModel.AsyncOperation asyncOp)
    // Offset: 0xCA45B0
    void UploadBits(::System::Net::WebRequest* request, ::System::IO::Stream* readStream, ::ArrayW<uint8_t> buffer, int chunkSize, ::ArrayW<uint8_t> header, ::ArrayW<uint8_t> footer, ::System::Net::CompletionDelegate* uploadCompletionDelegate, ::System::Net::CompletionDelegate* downloadCompletionDelegate, ::System::ComponentModel::AsyncOperation* asyncOp);
    // private System.Boolean ByteArrayHasPrefix(System.Byte[] prefix, System.Byte[] byteArray)
    // Offset: 0xCA74BC
    bool ByteArrayHasPrefix(::ArrayW<uint8_t> prefix, ::ArrayW<uint8_t> byteArray);
    // private System.String GetStringUsingEncoding(System.Net.WebRequest request, System.Byte[] data)
    // Offset: 0xCA5F1C
    ::StringW GetStringUsingEncoding(::System::Net::WebRequest* request, ::ArrayW<uint8_t> data);
    // private System.String MapToDefaultMethod(System.Uri address)
    // Offset: 0xCA3EB8
    ::StringW MapToDefaultMethod(::System::Uri* address);
    // static private System.String UrlEncode(System.String str)
    // Offset: 0xCA5630
    static ::StringW UrlEncode(::StringW str);
    // static private System.String UrlEncode(System.String str, System.Text.Encoding e)
    // Offset: 0xCA7534
    static ::StringW UrlEncode(::StringW str, ::System::Text::Encoding* e);
    // static private System.Byte[] UrlEncodeToBytes(System.String str, System.Text.Encoding e)
    // Offset: 0xCA75A4
    static ::ArrayW<uint8_t> UrlEncodeToBytes(::StringW str, ::System::Text::Encoding* e);
    // static private System.Byte[] UrlEncodeBytesToBytesInternal(System.Byte[] bytes, System.Int32 offset, System.Int32 count, System.Boolean alwaysCreateReturnValue)
    // Offset: 0xCA75F4
    static ::ArrayW<uint8_t> UrlEncodeBytesToBytesInternal(::ArrayW<uint8_t> bytes, int offset, int count, bool alwaysCreateReturnValue);
    // static private System.Char IntToHex(System.Int32 n)
    // Offset: 0xCA792C
    static ::Il2CppChar IntToHex(int n);
    // static private System.Boolean IsSafe(System.Char ch)
    // Offset: 0xCA78B8
    static bool IsSafe(::Il2CppChar ch);
    // private System.Void InvokeOperationCompleted(System.ComponentModel.AsyncOperation asyncOp, System.Threading.SendOrPostCallback callback, System.ComponentModel.AsyncCompletedEventArgs eventArgs)
    // Offset: 0xCA7944
    void InvokeOperationCompleted(::System::ComponentModel::AsyncOperation* asyncOp, ::System::Threading::SendOrPostCallback* callback, ::System::ComponentModel::AsyncCompletedEventArgs* eventArgs);
    // private System.Boolean AnotherCallInProgress(System.Int32 callNesting)
    // Offset: 0xCA195C
    bool AnotherCallInProgress(int callNesting);
    // protected System.Void OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs e)
    // Offset: 0xCA7B08
    void OnOpenReadCompleted(::System::Net::OpenReadCompletedEventArgs* e);
    // private System.Void OpenReadOperationCompleted(System.Object arg)
    // Offset: 0xCA7B28
    void OpenReadOperationCompleted(::Il2CppObject* arg);
    // private System.Void OpenReadAsyncCallback(System.IAsyncResult result)
    // Offset: 0xCA7BC8
    void OpenReadAsyncCallback(::System::IAsyncResult* result);
    // public System.Void OpenReadAsync(System.Uri address)
    // Offset: 0xCA7F80
    void OpenReadAsync(::System::Uri* address);
    // public System.Void OpenReadAsync(System.Uri address, System.Object userToken)
    // Offset: 0xCA7F88
    void OpenReadAsync(::System::Uri* address, ::Il2CppObject* userToken);
    // protected System.Void OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs e)
    // Offset: 0xCA846C
    void OnOpenWriteCompleted(::System::Net::OpenWriteCompletedEventArgs* e);
    // private System.Void OpenWriteOperationCompleted(System.Object arg)
    // Offset: 0xCA848C
    void OpenWriteOperationCompleted(::Il2CppObject* arg);
    // private System.Void OpenWriteAsyncCallback(System.IAsyncResult result)
    // Offset: 0xCA852C
    void OpenWriteAsyncCallback(::System::IAsyncResult* result);
    // public System.Void OpenWriteAsync(System.Uri address)
    // Offset: 0xCA8824
    void OpenWriteAsync(::System::Uri* address);
    // public System.Void OpenWriteAsync(System.Uri address, System.String method)
    // Offset: 0xCA8BE8
    void OpenWriteAsync(::System::Uri* address, ::StringW method);
    // public System.Void OpenWriteAsync(System.Uri address, System.String method, System.Object userToken)
    // Offset: 0xCA8830
    void OpenWriteAsync(::System::Uri* address, ::StringW method, ::Il2CppObject* userToken);
    // protected System.Void OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs e)
    // Offset: 0xCA8D38
    void OnDownloadStringCompleted(::System::Net::DownloadStringCompletedEventArgs* e);
    // private System.Void DownloadStringOperationCompleted(System.Object arg)
    // Offset: 0xCA8D58
    void DownloadStringOperationCompleted(::Il2CppObject* arg);
    // private System.Void DownloadStringAsyncCallback(System.Byte[] returnBytes, System.Exception exception, System.Object state)
    // Offset: 0xCA8DF8
    void DownloadStringAsyncCallback(::ArrayW<uint8_t> returnBytes, ::System::Exception* exception, ::Il2CppObject* state);
    // public System.Void DownloadStringAsync(System.Uri address)
    // Offset: 0xCA8FCC
    void DownloadStringAsync(::System::Uri* address);
    // public System.Void DownloadStringAsync(System.Uri address, System.Object userToken)
    // Offset: 0xCA8FD4
    void DownloadStringAsync(::System::Uri* address, ::Il2CppObject* userToken);
    // protected System.Void OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs e)
    // Offset: 0xCA946C
    void OnDownloadDataCompleted(::System::Net::DownloadDataCompletedEventArgs* e);
    // private System.Void DownloadDataOperationCompleted(System.Object arg)
    // Offset: 0xCA948C
    void DownloadDataOperationCompleted(::Il2CppObject* arg);
    // private System.Void DownloadDataAsyncCallback(System.Byte[] returnBytes, System.Exception exception, System.Object state)
    // Offset: 0xCA952C
    void DownloadDataAsyncCallback(::ArrayW<uint8_t> returnBytes, ::System::Exception* exception, ::Il2CppObject* state);
    // public System.Void DownloadDataAsync(System.Uri address)
    // Offset: 0xCA95FC
    void DownloadDataAsync(::System::Uri* address);
    // public System.Void DownloadDataAsync(System.Uri address, System.Object userToken)
    // Offset: 0xCA9604
    void DownloadDataAsync(::System::Uri* address, ::Il2CppObject* userToken);
    // protected System.Void OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs e)
    // Offset: 0xCA9A9C
    void OnDownloadFileCompleted(::System::ComponentModel::AsyncCompletedEventArgs* e);
    // private System.Void DownloadFileOperationCompleted(System.Object arg)
    // Offset: 0xCA9ABC
    void DownloadFileOperationCompleted(::Il2CppObject* arg);
    // private System.Void DownloadFileAsyncCallback(System.Byte[] returnBytes, System.Exception exception, System.Object state)
    // Offset: 0xCA9B5C
    void DownloadFileAsyncCallback(::ArrayW<uint8_t> returnBytes, ::System::Exception* exception, ::Il2CppObject* state);
    // public System.Void DownloadFileAsync(System.Uri address, System.String fileName)
    // Offset: 0xCA9C1C
    void DownloadFileAsync(::System::Uri* address, ::StringW fileName);
    // public System.Void DownloadFileAsync(System.Uri address, System.String fileName, System.Object userToken)
    // Offset: 0xCA9C24
    void DownloadFileAsync(::System::Uri* address, ::StringW fileName, ::Il2CppObject* userToken);
    // protected System.Void OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs e)
    // Offset: 0xCAA124
    void OnUploadStringCompleted(::System::Net::UploadStringCompletedEventArgs* e);
    // private System.Void UploadStringOperationCompleted(System.Object arg)
    // Offset: 0xCAA140
    void UploadStringOperationCompleted(::Il2CppObject* arg);
    // private System.Void StartDownloadAsync(System.Net.WebClient/System.Net.UploadBitsState state)
    // Offset: 0xCAA1E0
    void StartDownloadAsync(::System::Net::WebClient::UploadBitsState* state);
    // private System.Void UploadStringAsyncWriteCallback(System.Byte[] returnBytes, System.Exception exception, System.Object state)
    // Offset: 0xCAA400
    void UploadStringAsyncWriteCallback(::ArrayW<uint8_t> returnBytes, ::System::Exception* exception, ::Il2CppObject* state);
    // private System.Void UploadStringAsyncReadCallback(System.Byte[] returnBytes, System.Exception exception, System.Object state)
    // Offset: 0xCAA514
    void UploadStringAsyncReadCallback(::ArrayW<uint8_t> returnBytes, ::System::Exception* exception, ::Il2CppObject* state);
    // public System.Void UploadStringAsync(System.Uri address, System.String data)
    // Offset: 0xCAA6E8
    void UploadStringAsync(::System::Uri* address, ::StringW data);
    // public System.Void UploadStringAsync(System.Uri address, System.String method, System.String data)
    // Offset: 0xCAAB54
    void UploadStringAsync(::System::Uri* address, ::StringW method, ::StringW data);
    // public System.Void UploadStringAsync(System.Uri address, System.String method, System.String data, System.Object userToken)
    // Offset: 0xCAA6F8
    void UploadStringAsync(::System::Uri* address, ::StringW method, ::StringW data, ::Il2CppObject* userToken);
    // protected System.Void OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs e)
    // Offset: 0xCAACAC
    void OnUploadDataCompleted(::System::Net::UploadDataCompletedEventArgs* e);
    // private System.Void UploadDataOperationCompleted(System.Object arg)
    // Offset: 0xCAACC8
    void UploadDataOperationCompleted(::Il2CppObject* arg);
    // private System.Void UploadDataAsyncWriteCallback(System.Byte[] returnBytes, System.Exception exception, System.Object state)
    // Offset: 0xCAAD68
    void UploadDataAsyncWriteCallback(::ArrayW<uint8_t> returnBytes, ::System::Exception* exception, ::Il2CppObject* state);
    // private System.Void UploadDataAsyncReadCallback(System.Byte[] returnBytes, System.Exception exception, System.Object state)
    // Offset: 0xCAAE8C
    void UploadDataAsyncReadCallback(::ArrayW<uint8_t> returnBytes, ::System::Exception* exception, ::Il2CppObject* state);
    // public System.Void UploadDataAsync(System.Uri address, System.Byte[] data)
    // Offset: 0xCAAF5C
    void UploadDataAsync(::System::Uri* address, ::ArrayW<uint8_t> data);
    // public System.Void UploadDataAsync(System.Uri address, System.String method, System.Byte[] data)
    // Offset: 0xCAB3D8
    void UploadDataAsync(::System::Uri* address, ::StringW method, ::ArrayW<uint8_t> data);
    // public System.Void UploadDataAsync(System.Uri address, System.String method, System.Byte[] data, System.Object userToken)
    // Offset: 0xCAAF6C
    void UploadDataAsync(::System::Uri* address, ::StringW method, ::ArrayW<uint8_t> data, ::Il2CppObject* userToken);
    // protected System.Void OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs e)
    // Offset: 0xCAB530
    void OnUploadFileCompleted(::System::Net::UploadFileCompletedEventArgs* e);
    // private System.Void UploadFileOperationCompleted(System.Object arg)
    // Offset: 0xCAB54C
    void UploadFileOperationCompleted(::Il2CppObject* arg);
    // private System.Void UploadFileAsyncWriteCallback(System.Byte[] returnBytes, System.Exception exception, System.Object state)
    // Offset: 0xCAB5EC
    void UploadFileAsyncWriteCallback(::ArrayW<uint8_t> returnBytes, ::System::Exception* exception, ::Il2CppObject* state);
    // private System.Void UploadFileAsyncReadCallback(System.Byte[] returnBytes, System.Exception exception, System.Object state)
    // Offset: 0xCAB710
    void UploadFileAsyncReadCallback(::ArrayW<uint8_t> returnBytes, ::System::Exception* exception, ::Il2CppObject* state);
    // public System.Void UploadFileAsync(System.Uri address, System.String fileName)
    // Offset: 0xCAB7E0
    void UploadFileAsync(::System::Uri* address, ::StringW fileName);
    // public System.Void UploadFileAsync(System.Uri address, System.String method, System.String fileName)
    // Offset: 0xCABCAC
    void UploadFileAsync(::System::Uri* address, ::StringW method, ::StringW fileName);
    // public System.Void UploadFileAsync(System.Uri address, System.String method, System.String fileName, System.Object userToken)
    // Offset: 0xCAB7F0
    void UploadFileAsync(::System::Uri* address, ::StringW method, ::StringW fileName, ::Il2CppObject* userToken);
    // protected System.Void OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs e)
    // Offset: 0xCABE04
    void OnUploadValuesCompleted(::System::Net::UploadValuesCompletedEventArgs* e);
    // private System.Void UploadValuesOperationCompleted(System.Object arg)
    // Offset: 0xCABE20
    void UploadValuesOperationCompleted(::Il2CppObject* arg);
    // private System.Void UploadValuesAsyncWriteCallback(System.Byte[] returnBytes, System.Exception exception, System.Object state)
    // Offset: 0xCABEC0
    void UploadValuesAsyncWriteCallback(::ArrayW<uint8_t> returnBytes, ::System::Exception* exception, ::Il2CppObject* state);
    // private System.Void UploadValuesAsyncReadCallback(System.Byte[] returnBytes, System.Exception exception, System.Object state)
    // Offset: 0xCABFE4
    void UploadValuesAsyncReadCallback(::ArrayW<uint8_t> returnBytes, ::System::Exception* exception, ::Il2CppObject* state);
    // public System.Void UploadValuesAsync(System.Uri address, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0xCAC0B4
    void UploadValuesAsync(::System::Uri* address, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.Void UploadValuesAsync(System.Uri address, System.String method, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0xCAC544
    void UploadValuesAsync(::System::Uri* address, ::StringW method, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.Void UploadValuesAsync(System.Uri address, System.String method, System.Collections.Specialized.NameValueCollection data, System.Object userToken)
    // Offset: 0xCAC0C4
    void UploadValuesAsync(::System::Uri* address, ::StringW method, ::System::Collections::Specialized::NameValueCollection* data, ::Il2CppObject* userToken);
    // public System.Void CancelAsync()
    // Offset: 0xCAC54C
    void CancelAsync();
    // public System.Threading.Tasks.Task`1<System.String> DownloadStringTaskAsync(System.String address)
    // Offset: 0xCAC560
    ::System::Threading::Tasks::Task_1<::StringW>* DownloadStringTaskAsync(::StringW address);
    // public System.Threading.Tasks.Task`1<System.String> DownloadStringTaskAsync(System.Uri address)
    // Offset: 0xCAC588
    ::System::Threading::Tasks::Task_1<::StringW>* DownloadStringTaskAsync(::System::Uri* address);
    // public System.Threading.Tasks.Task`1<System.IO.Stream> OpenReadTaskAsync(System.String address)
    // Offset: 0xCAC714
    ::System::Threading::Tasks::Task_1<::System::IO::Stream*>* OpenReadTaskAsync(::StringW address);
    // public System.Threading.Tasks.Task`1<System.IO.Stream> OpenReadTaskAsync(System.Uri address)
    // Offset: 0xCAC73C
    ::System::Threading::Tasks::Task_1<::System::IO::Stream*>* OpenReadTaskAsync(::System::Uri* address);
    // public System.Threading.Tasks.Task`1<System.IO.Stream> OpenWriteTaskAsync(System.String address)
    // Offset: 0xCAC8C8
    ::System::Threading::Tasks::Task_1<::System::IO::Stream*>* OpenWriteTaskAsync(::StringW address);
    // public System.Threading.Tasks.Task`1<System.IO.Stream> OpenWriteTaskAsync(System.Uri address)
    // Offset: 0xCACA90
    ::System::Threading::Tasks::Task_1<::System::IO::Stream*>* OpenWriteTaskAsync(::System::Uri* address);
    // public System.Threading.Tasks.Task`1<System.IO.Stream> OpenWriteTaskAsync(System.String address, System.String method)
    // Offset: 0xCACA98
    ::System::Threading::Tasks::Task_1<::System::IO::Stream*>* OpenWriteTaskAsync(::StringW address, ::StringW method);
    // public System.Threading.Tasks.Task`1<System.IO.Stream> OpenWriteTaskAsync(System.Uri address, System.String method)
    // Offset: 0xCAC8F4
    ::System::Threading::Tasks::Task_1<::System::IO::Stream*>* OpenWriteTaskAsync(::System::Uri* address, ::StringW method);
    // public System.Threading.Tasks.Task`1<System.String> UploadStringTaskAsync(System.String address, System.String data)
    // Offset: 0xCACAC8
    ::System::Threading::Tasks::Task_1<::StringW>* UploadStringTaskAsync(::StringW address, ::StringW data);
    // public System.Threading.Tasks.Task`1<System.String> UploadStringTaskAsync(System.Uri address, System.String data)
    // Offset: 0xCACB3C
    ::System::Threading::Tasks::Task_1<::StringW>* UploadStringTaskAsync(::System::Uri* address, ::StringW data);
    // public System.Threading.Tasks.Task`1<System.String> UploadStringTaskAsync(System.String address, System.String method, System.String data)
    // Offset: 0xCACAFC
    ::System::Threading::Tasks::Task_1<::StringW>* UploadStringTaskAsync(::StringW address, ::StringW method, ::StringW data);
    // public System.Threading.Tasks.Task`1<System.String> UploadStringTaskAsync(System.Uri address, System.String method, System.String data)
    // Offset: 0xCACB48
    ::System::Threading::Tasks::Task_1<::StringW>* UploadStringTaskAsync(::System::Uri* address, ::StringW method, ::StringW data);
    // public System.Threading.Tasks.Task`1<System.Byte[]> DownloadDataTaskAsync(System.String address)
    // Offset: 0xCACCE8
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* DownloadDataTaskAsync(::StringW address);
    // public System.Threading.Tasks.Task`1<System.Byte[]> DownloadDataTaskAsync(System.Uri address)
    // Offset: 0xCACD10
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* DownloadDataTaskAsync(::System::Uri* address);
    // public System.Threading.Tasks.Task DownloadFileTaskAsync(System.String address, System.String fileName)
    // Offset: 0xCACE9C
    ::System::Threading::Tasks::Task* DownloadFileTaskAsync(::StringW address, ::StringW fileName);
    // public System.Threading.Tasks.Task DownloadFileTaskAsync(System.Uri address, System.String fileName)
    // Offset: 0xCACECC
    ::System::Threading::Tasks::Task* DownloadFileTaskAsync(::System::Uri* address, ::StringW fileName);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadDataTaskAsync(System.String address, System.Byte[] data)
    // Offset: 0xCAD068
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadDataTaskAsync(::StringW address, ::ArrayW<uint8_t> data);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadDataTaskAsync(System.Uri address, System.Byte[] data)
    // Offset: 0xCAD23C
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadDataTaskAsync(::System::Uri* address, ::ArrayW<uint8_t> data);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadDataTaskAsync(System.String address, System.String method, System.Byte[] data)
    // Offset: 0xCAD248
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadDataTaskAsync(::StringW address, ::StringW method, ::ArrayW<uint8_t> data);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadDataTaskAsync(System.Uri address, System.String method, System.Byte[] data)
    // Offset: 0xCAD09C
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadDataTaskAsync(::System::Uri* address, ::StringW method, ::ArrayW<uint8_t> data);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadFileTaskAsync(System.String address, System.String fileName)
    // Offset: 0xCAD288
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadFileTaskAsync(::StringW address, ::StringW fileName);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadFileTaskAsync(System.Uri address, System.String fileName)
    // Offset: 0xCAD45C
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadFileTaskAsync(::System::Uri* address, ::StringW fileName);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadFileTaskAsync(System.String address, System.String method, System.String fileName)
    // Offset: 0xCAD468
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadFileTaskAsync(::StringW address, ::StringW method, ::StringW fileName);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadFileTaskAsync(System.Uri address, System.String method, System.String fileName)
    // Offset: 0xCAD2BC
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadFileTaskAsync(::System::Uri* address, ::StringW method, ::StringW fileName);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadValuesTaskAsync(System.String address, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0xCAD4A8
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadValuesTaskAsync(::StringW address, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadValuesTaskAsync(System.String address, System.String method, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0xCAD67C
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadValuesTaskAsync(::StringW address, ::StringW method, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadValuesTaskAsync(System.Uri address, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0xCAD6BC
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadValuesTaskAsync(::System::Uri* address, ::System::Collections::Specialized::NameValueCollection* data);
    // public System.Threading.Tasks.Task`1<System.Byte[]> UploadValuesTaskAsync(System.Uri address, System.String method, System.Collections.Specialized.NameValueCollection data)
    // Offset: 0xCAD4DC
    ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* UploadValuesTaskAsync(::System::Uri* address, ::StringW method, ::System::Collections::Specialized::NameValueCollection* data);
    // private System.Void HandleCompletion(System.Threading.Tasks.TaskCompletionSource`1<T> tcs, TAsyncCompletedEventArgs e, System.Func`2<TAsyncCompletedEventArgs,T> getResult, TCompletionDelegate handler, System.Action`2<System.Net.WebClient,TCompletionDelegate> unregisterHandler)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TAsyncCompletedEventArgs, class TCompletionDelegate, class T>
    void HandleCompletion(::System::Threading::Tasks::TaskCompletionSource_1<T>* tcs, TAsyncCompletedEventArgs e, ::System::Func_2<TAsyncCompletedEventArgs, T>* getResult, TCompletionDelegate handler, ::System::Action_2<::System::Net::WebClient*, TCompletionDelegate>* unregisterHandler) {
      static_assert(std::is_convertible_v<TAsyncCompletedEventArgs, ::System::ComponentModel::AsyncCompletedEventArgs*>);
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebClient::HandleCompletion");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCompletion", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TAsyncCompletedEventArgs>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TCompletionDelegate>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tcs), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(getResult), ::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(unregisterHandler)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TAsyncCompletedEventArgs>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TCompletionDelegate>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, tcs, e, getResult, handler, unregisterHandler);
    }
    // protected System.Void OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs e)
    // Offset: 0xCAD968
    void OnDownloadProgressChanged(::System::Net::DownloadProgressChangedEventArgs* e);
    // protected System.Void OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs e)
    // Offset: 0xCAD988
    void OnUploadProgressChanged(::System::Net::UploadProgressChangedEventArgs* e);
    // private System.Void ReportDownloadProgressChanged(System.Object arg)
    // Offset: 0xCAD9A4
    void ReportDownloadProgressChanged(::Il2CppObject* arg);
    // private System.Void ReportUploadProgressChanged(System.Object arg)
    // Offset: 0xCADA44
    void ReportUploadProgressChanged(::Il2CppObject* arg);
    // private System.Void PostProgressChanged(System.ComponentModel.AsyncOperation asyncOp, System.Net.WebClient/System.Net.ProgressData progress)
    // Offset: 0xCADAE4
    void PostProgressChanged(::System::ComponentModel::AsyncOperation* asyncOp, ::System::Net::WebClient::ProgressData* progress);
    // public System.Void .ctor()
    // Offset: 0xCA1530
    // Implemented from: System.ComponentModel.Component
    // Base method: System.Void Component::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebClient* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebClient::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebClient*, creationType>()));
    }
  }; // System.Net.WebClient
  #pragma pack(pop)
  static check_size<sizeof(WebClient), 336 + sizeof(::System::Threading::SendOrPostCallback*)> __System_Net_WebClientSizeCheck;
  static_assert(sizeof(WebClient) == 0x158);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebClient::get_AllowReadStreamBuffering
// Il2CppName: get_AllowReadStreamBuffering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::WebClient::*)()>(&System::Net::WebClient::get_AllowReadStreamBuffering)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_AllowReadStreamBuffering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_AllowReadStreamBuffering
// Il2CppName: set_AllowReadStreamBuffering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(bool)>(&System::Net::WebClient::set_AllowReadStreamBuffering)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_AllowReadStreamBuffering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_AllowWriteStreamBuffering
// Il2CppName: get_AllowWriteStreamBuffering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::WebClient::*)()>(&System::Net::WebClient::get_AllowWriteStreamBuffering)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_AllowWriteStreamBuffering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_AllowWriteStreamBuffering
// Il2CppName: set_AllowWriteStreamBuffering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(bool)>(&System::Net::WebClient::set_AllowWriteStreamBuffering)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_AllowWriteStreamBuffering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_Encoding
// Il2CppName: get_Encoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (System::Net::WebClient::*)()>(&System::Net::WebClient::get_Encoding)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_Encoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_Encoding
// Il2CppName: set_Encoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Text::Encoding*)>(&System::Net::WebClient::set_Encoding)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Text", "Encoding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_Encoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_BaseAddress
// Il2CppName: get_BaseAddress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)()>(&System::Net::WebClient::get_BaseAddress)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_BaseAddress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_BaseAddress
// Il2CppName: set_BaseAddress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::set_BaseAddress)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_BaseAddress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_Credentials
// Il2CppName: get_Credentials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::ICredentials* (System::Net::WebClient::*)()>(&System::Net::WebClient::get_Credentials)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_Credentials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_Credentials
// Il2CppName: set_Credentials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::ICredentials*)>(&System::Net::WebClient::set_Credentials)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "ICredentials")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_Credentials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_UseDefaultCredentials
// Il2CppName: get_UseDefaultCredentials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::WebClient::*)()>(&System::Net::WebClient::get_UseDefaultCredentials)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_UseDefaultCredentials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_UseDefaultCredentials
// Il2CppName: set_UseDefaultCredentials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(bool)>(&System::Net::WebClient::set_UseDefaultCredentials)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_UseDefaultCredentials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_Headers
// Il2CppName: get_Headers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::WebHeaderCollection* (System::Net::WebClient::*)()>(&System::Net::WebClient::get_Headers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_Headers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_Headers
// Il2CppName: set_Headers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::WebHeaderCollection*)>(&System::Net::WebClient::set_Headers)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "WebHeaderCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_Headers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_QueryString
// Il2CppName: get_QueryString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Specialized::NameValueCollection* (System::Net::WebClient::*)()>(&System::Net::WebClient::get_QueryString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_QueryString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_QueryString
// Il2CppName: set_QueryString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::set_QueryString)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_QueryString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_ResponseHeaders
// Il2CppName: get_ResponseHeaders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::WebHeaderCollection* (System::Net::WebClient::*)()>(&System::Net::WebClient::get_ResponseHeaders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_ResponseHeaders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_Proxy
// Il2CppName: get_Proxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::IWebProxy* (System::Net::WebClient::*)()>(&System::Net::WebClient::get_Proxy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_Proxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_Proxy
// Il2CppName: set_Proxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::IWebProxy*)>(&System::Net::WebClient::set_Proxy)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "IWebProxy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_Proxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_CachePolicy
// Il2CppName: get_CachePolicy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::Cache::RequestCachePolicy* (System::Net::WebClient::*)()>(&System::Net::WebClient::get_CachePolicy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_CachePolicy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::set_CachePolicy
// Il2CppName: set_CachePolicy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::Cache::RequestCachePolicy*)>(&System::Net::WebClient::set_CachePolicy)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net.Cache", "RequestCachePolicy")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "set_CachePolicy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::get_IsBusy
// Il2CppName: get_IsBusy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::WebClient::*)()>(&System::Net::WebClient::get_IsBusy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "get_IsBusy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_WriteStreamClosed
// Il2CppName: add_WriteStreamClosed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::WriteStreamClosedEventHandler*)>(&System::Net::WebClient::add_WriteStreamClosed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "WriteStreamClosedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_WriteStreamClosed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_WriteStreamClosed
// Il2CppName: remove_WriteStreamClosed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::WriteStreamClosedEventHandler*)>(&System::Net::WebClient::remove_WriteStreamClosed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "WriteStreamClosedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_WriteStreamClosed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_OpenReadCompleted
// Il2CppName: add_OpenReadCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::OpenReadCompletedEventHandler*)>(&System::Net::WebClient::add_OpenReadCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "OpenReadCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_OpenReadCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_OpenReadCompleted
// Il2CppName: remove_OpenReadCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::OpenReadCompletedEventHandler*)>(&System::Net::WebClient::remove_OpenReadCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "OpenReadCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_OpenReadCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_OpenWriteCompleted
// Il2CppName: add_OpenWriteCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::OpenWriteCompletedEventHandler*)>(&System::Net::WebClient::add_OpenWriteCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "OpenWriteCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_OpenWriteCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_OpenWriteCompleted
// Il2CppName: remove_OpenWriteCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::OpenWriteCompletedEventHandler*)>(&System::Net::WebClient::remove_OpenWriteCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "OpenWriteCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_OpenWriteCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_DownloadStringCompleted
// Il2CppName: add_DownloadStringCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadStringCompletedEventHandler*)>(&System::Net::WebClient::add_DownloadStringCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadStringCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_DownloadStringCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_DownloadStringCompleted
// Il2CppName: remove_DownloadStringCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadStringCompletedEventHandler*)>(&System::Net::WebClient::remove_DownloadStringCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadStringCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_DownloadStringCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_DownloadDataCompleted
// Il2CppName: add_DownloadDataCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadDataCompletedEventHandler*)>(&System::Net::WebClient::add_DownloadDataCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadDataCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_DownloadDataCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_DownloadDataCompleted
// Il2CppName: remove_DownloadDataCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadDataCompletedEventHandler*)>(&System::Net::WebClient::remove_DownloadDataCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadDataCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_DownloadDataCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_DownloadFileCompleted
// Il2CppName: add_DownloadFileCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::ComponentModel::AsyncCompletedEventHandler*)>(&System::Net::WebClient::add_DownloadFileCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_DownloadFileCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_DownloadFileCompleted
// Il2CppName: remove_DownloadFileCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::ComponentModel::AsyncCompletedEventHandler*)>(&System::Net::WebClient::remove_DownloadFileCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_DownloadFileCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_UploadStringCompleted
// Il2CppName: add_UploadStringCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadStringCompletedEventHandler*)>(&System::Net::WebClient::add_UploadStringCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadStringCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_UploadStringCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_UploadStringCompleted
// Il2CppName: remove_UploadStringCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadStringCompletedEventHandler*)>(&System::Net::WebClient::remove_UploadStringCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadStringCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_UploadStringCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_UploadDataCompleted
// Il2CppName: add_UploadDataCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadDataCompletedEventHandler*)>(&System::Net::WebClient::add_UploadDataCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadDataCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_UploadDataCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_UploadDataCompleted
// Il2CppName: remove_UploadDataCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadDataCompletedEventHandler*)>(&System::Net::WebClient::remove_UploadDataCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadDataCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_UploadDataCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_UploadFileCompleted
// Il2CppName: add_UploadFileCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadFileCompletedEventHandler*)>(&System::Net::WebClient::add_UploadFileCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadFileCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_UploadFileCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_UploadFileCompleted
// Il2CppName: remove_UploadFileCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadFileCompletedEventHandler*)>(&System::Net::WebClient::remove_UploadFileCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadFileCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_UploadFileCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_UploadValuesCompleted
// Il2CppName: add_UploadValuesCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadValuesCompletedEventHandler*)>(&System::Net::WebClient::add_UploadValuesCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadValuesCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_UploadValuesCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_UploadValuesCompleted
// Il2CppName: remove_UploadValuesCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadValuesCompletedEventHandler*)>(&System::Net::WebClient::remove_UploadValuesCompleted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadValuesCompletedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_UploadValuesCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_DownloadProgressChanged
// Il2CppName: add_DownloadProgressChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadProgressChangedEventHandler*)>(&System::Net::WebClient::add_DownloadProgressChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadProgressChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_DownloadProgressChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_DownloadProgressChanged
// Il2CppName: remove_DownloadProgressChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadProgressChangedEventHandler*)>(&System::Net::WebClient::remove_DownloadProgressChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadProgressChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_DownloadProgressChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::add_UploadProgressChanged
// Il2CppName: add_UploadProgressChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadProgressChangedEventHandler*)>(&System::Net::WebClient::add_UploadProgressChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadProgressChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "add_UploadProgressChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::remove_UploadProgressChanged
// Il2CppName: remove_UploadProgressChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadProgressChangedEventHandler*)>(&System::Net::WebClient::remove_UploadProgressChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Net", "UploadProgressChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "remove_UploadProgressChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::InitWebClientAsync
// Il2CppName: InitWebClientAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)()>(&System::Net::WebClient::InitWebClientAsync)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "InitWebClientAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::ClearWebClientState
// Il2CppName: ClearWebClientState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)()>(&System::Net::WebClient::ClearWebClientState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "ClearWebClientState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::CompleteWebClientState
// Il2CppName: CompleteWebClientState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)()>(&System::Net::WebClient::CompleteWebClientState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "CompleteWebClientState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnWriteStreamClosed
// Il2CppName: OnWriteStreamClosed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::WriteStreamClosedEventArgs*)>(&System::Net::WebClient::OnWriteStreamClosed)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "WriteStreamClosedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnWriteStreamClosed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::GetWebRequest
// Il2CppName: GetWebRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::WebRequest* (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::GetWebRequest)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "GetWebRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::GetWebResponse
// Il2CppName: GetWebResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::WebResponse* (System::Net::WebClient::*)(::System::Net::WebRequest*)>(&System::Net::WebClient::GetWebResponse)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "GetWebResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::GetWebResponse
// Il2CppName: GetWebResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Net::WebResponse* (System::Net::WebClient::*)(::System::Net::WebRequest*, ::System::IAsyncResult*)>(&System::Net::WebClient::GetWebResponse)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "GetWebResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, result});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadData
// Il2CppName: DownloadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::DownloadData)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadData
// Il2CppName: DownloadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::DownloadData)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadDataInternal
// Il2CppName: DownloadDataInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*, ByRef<::System::Net::WebRequest*>)>(&System::Net::WebClient::DownloadDataInternal)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadDataInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, request});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadFile
// Il2CppName: DownloadFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::StringW, ::StringW)>(&System::Net::WebClient::DownloadFile)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadFile
// Il2CppName: DownloadFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::DownloadFile)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenRead
// Il2CppName: OpenRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Stream* (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::OpenRead)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenRead
// Il2CppName: OpenRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Stream* (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::OpenRead)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWrite
// Il2CppName: OpenWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Stream* (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::OpenWrite)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWrite
// Il2CppName: OpenWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Stream* (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::OpenWrite)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWrite
// Il2CppName: OpenWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Stream* (System::Net::WebClient::*)(::StringW, ::StringW)>(&System::Net::WebClient::OpenWrite)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWrite
// Il2CppName: OpenWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IO::Stream* (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::OpenWrite)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadData
// Il2CppName: UploadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::StringW, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadData)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadData
// Il2CppName: UploadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadData)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadData
// Il2CppName: UploadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::StringW, ::StringW, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadData)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadData
// Il2CppName: UploadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadData)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataInternal
// Il2CppName: UploadDataInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::ArrayW<uint8_t>, ByRef<::System::Net::WebRequest*>)>(&System::Net::WebClient::UploadDataInternal)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data, request});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenFileInternal
// Il2CppName: OpenFileInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(bool, ::StringW, ByRef<::System::IO::FileStream*>, ByRef<::ArrayW<uint8_t>>, ByRef<::ArrayW<uint8_t>>, ByRef<::ArrayW<uint8_t>>)>(&System::Net::WebClient::OpenFileInternal)> {
  static const MethodInfo* get() {
    static auto* needsHeaderAndBoundary = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fs = &::il2cpp_utils::GetClassFromName("System.IO", "FileStream")->this_arg;
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->this_arg;
    static auto* formHeaderBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->this_arg;
    static auto* boundaryBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenFileInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{needsHeaderAndBoundary, fileName, fs, buffer, formHeaderBytes, boundaryBytes});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFile
// Il2CppName: UploadFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::StringW, ::StringW)>(&System::Net::WebClient::UploadFile)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFile
// Il2CppName: UploadFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::UploadFile)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFile
// Il2CppName: UploadFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::StringW, ::StringW, ::StringW)>(&System::Net::WebClient::UploadFile)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFile
// Il2CppName: UploadFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::StringW)>(&System::Net::WebClient::UploadFile)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesInternal
// Il2CppName: UploadValuesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValuesInternal)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValues
// Il2CppName: UploadValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::StringW, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValues)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValues
// Il2CppName: UploadValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValues)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValues
// Il2CppName: UploadValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::StringW, ::StringW, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValues)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValues
// Il2CppName: UploadValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValues)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadString
// Il2CppName: UploadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)(::StringW, ::StringW)>(&System::Net::WebClient::UploadString)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadString
// Il2CppName: UploadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::UploadString)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadString
// Il2CppName: UploadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)(::StringW, ::StringW, ::StringW)>(&System::Net::WebClient::UploadString)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadString
// Il2CppName: UploadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::StringW)>(&System::Net::WebClient::UploadString)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadString
// Il2CppName: DownloadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::DownloadString)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadString
// Il2CppName: DownloadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::DownloadString)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::AbortRequest
// Il2CppName: AbortRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Net::WebRequest*)>(&System::Net::WebClient::AbortRequest)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "AbortRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::CopyHeadersTo
// Il2CppName: CopyHeadersTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::WebRequest*)>(&System::Net::WebClient::CopyHeadersTo)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "CopyHeadersTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::GetUri
// Il2CppName: GetUri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Uri* (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::GetUri)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "GetUri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::GetUri
// Il2CppName: GetUri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Uri* (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::GetUri)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "GetUri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadBitsResponseCallback
// Il2CppName: DownloadBitsResponseCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IAsyncResult*)>(&System::Net::WebClient::DownloadBitsResponseCallback)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadBitsResponseCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadBitsReadCallback
// Il2CppName: DownloadBitsReadCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IAsyncResult*)>(&System::Net::WebClient::DownloadBitsReadCallback)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadBitsReadCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadBitsReadCallbackState
// Il2CppName: DownloadBitsReadCallbackState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Net::WebClient::DownloadBitsState*, ::System::IAsyncResult*)>(&System::Net::WebClient::DownloadBitsReadCallbackState)> {
  static const MethodInfo* get() {
    static auto* state = &::il2cpp_utils::GetClassFromName("System.Net", "WebClient/DownloadBitsState")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadBitsReadCallbackState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{state, result});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadBits
// Il2CppName: DownloadBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Net::WebClient::*)(::System::Net::WebRequest*, ::System::IO::Stream*, ::System::Net::CompletionDelegate*, ::System::ComponentModel::AsyncOperation*)>(&System::Net::WebClient::DownloadBits)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    static auto* writeStream = &::il2cpp_utils::GetClassFromName("System.IO", "Stream")->byval_arg;
    static auto* completionDelegate = &::il2cpp_utils::GetClassFromName("System.Net", "CompletionDelegate")->byval_arg;
    static auto* asyncOp = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncOperation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, writeStream, completionDelegate, asyncOp});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadBitsRequestCallback
// Il2CppName: UploadBitsRequestCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IAsyncResult*)>(&System::Net::WebClient::UploadBitsRequestCallback)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadBitsRequestCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadBitsWriteCallback
// Il2CppName: UploadBitsWriteCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IAsyncResult*)>(&System::Net::WebClient::UploadBitsWriteCallback)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadBitsWriteCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadBits
// Il2CppName: UploadBits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::WebRequest*, ::System::IO::Stream*, ::ArrayW<uint8_t>, int, ::ArrayW<uint8_t>, ::ArrayW<uint8_t>, ::System::Net::CompletionDelegate*, ::System::Net::CompletionDelegate*, ::System::ComponentModel::AsyncOperation*)>(&System::Net::WebClient::UploadBits)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    static auto* readStream = &::il2cpp_utils::GetClassFromName("System.IO", "Stream")->byval_arg;
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* chunkSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* header = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* footer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* uploadCompletionDelegate = &::il2cpp_utils::GetClassFromName("System.Net", "CompletionDelegate")->byval_arg;
    static auto* downloadCompletionDelegate = &::il2cpp_utils::GetClassFromName("System.Net", "CompletionDelegate")->byval_arg;
    static auto* asyncOp = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncOperation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadBits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, readStream, buffer, chunkSize, header, footer, uploadCompletionDelegate, downloadCompletionDelegate, asyncOp});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::ByteArrayHasPrefix
// Il2CppName: ByteArrayHasPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::WebClient::*)(::ArrayW<uint8_t>, ::ArrayW<uint8_t>)>(&System::Net::WebClient::ByteArrayHasPrefix)> {
  static const MethodInfo* get() {
    static auto* prefix = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* byteArray = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "ByteArrayHasPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefix, byteArray});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::GetStringUsingEncoding
// Il2CppName: GetStringUsingEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)(::System::Net::WebRequest*, ::ArrayW<uint8_t>)>(&System::Net::WebClient::GetStringUsingEncoding)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("System.Net", "WebRequest")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "GetStringUsingEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::MapToDefaultMethod
// Il2CppName: MapToDefaultMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::MapToDefaultMethod)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "MapToDefaultMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UrlEncode
// Il2CppName: UrlEncode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&System::Net::WebClient::UrlEncode)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UrlEncode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UrlEncode
// Il2CppName: UrlEncode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::System::Text::Encoding*)>(&System::Net::WebClient::UrlEncode)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Text", "Encoding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UrlEncode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UrlEncodeToBytes
// Il2CppName: UrlEncodeToBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::StringW, ::System::Text::Encoding*)>(&System::Net::WebClient::UrlEncodeToBytes)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Text", "Encoding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UrlEncodeToBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UrlEncodeBytesToBytesInternal
// Il2CppName: UrlEncodeBytesToBytesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::ArrayW<uint8_t>, int, int, bool)>(&System::Net::WebClient::UrlEncodeBytesToBytesInternal)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* alwaysCreateReturnValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UrlEncodeBytesToBytesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes, offset, count, alwaysCreateReturnValue});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::IntToHex
// Il2CppName: IntToHex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (*)(int)>(&System::Net::WebClient::IntToHex)> {
  static const MethodInfo* get() {
    static auto* n = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "IntToHex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{n});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::IsSafe
// Il2CppName: IsSafe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppChar)>(&System::Net::WebClient::IsSafe)> {
  static const MethodInfo* get() {
    static auto* ch = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "IsSafe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ch});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::InvokeOperationCompleted
// Il2CppName: InvokeOperationCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::ComponentModel::AsyncOperation*, ::System::Threading::SendOrPostCallback*, ::System::ComponentModel::AsyncCompletedEventArgs*)>(&System::Net::WebClient::InvokeOperationCompleted)> {
  static const MethodInfo* get() {
    static auto* asyncOp = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncOperation")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System.Threading", "SendOrPostCallback")->byval_arg;
    static auto* eventArgs = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "InvokeOperationCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asyncOp, callback, eventArgs});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::AnotherCallInProgress
// Il2CppName: AnotherCallInProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::WebClient::*)(int)>(&System::Net::WebClient::AnotherCallInProgress)> {
  static const MethodInfo* get() {
    static auto* callNesting = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "AnotherCallInProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callNesting});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnOpenReadCompleted
// Il2CppName: OnOpenReadCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::OpenReadCompletedEventArgs*)>(&System::Net::WebClient::OnOpenReadCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "OpenReadCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnOpenReadCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenReadOperationCompleted
// Il2CppName: OpenReadOperationCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::OpenReadOperationCompleted)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenReadOperationCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenReadAsyncCallback
// Il2CppName: OpenReadAsyncCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::IAsyncResult*)>(&System::Net::WebClient::OpenReadAsyncCallback)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenReadAsyncCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenReadAsync
// Il2CppName: OpenReadAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::OpenReadAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenReadAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenReadAsync
// Il2CppName: OpenReadAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::Il2CppObject*)>(&System::Net::WebClient::OpenReadAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenReadAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnOpenWriteCompleted
// Il2CppName: OnOpenWriteCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::OpenWriteCompletedEventArgs*)>(&System::Net::WebClient::OnOpenWriteCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "OpenWriteCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnOpenWriteCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWriteOperationCompleted
// Il2CppName: OpenWriteOperationCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::OpenWriteOperationCompleted)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWriteOperationCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWriteAsyncCallback
// Il2CppName: OpenWriteAsyncCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::IAsyncResult*)>(&System::Net::WebClient::OpenWriteAsyncCallback)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWriteAsyncCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWriteAsync
// Il2CppName: OpenWriteAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::OpenWriteAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWriteAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWriteAsync
// Il2CppName: OpenWriteAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::OpenWriteAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWriteAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWriteAsync
// Il2CppName: OpenWriteAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::Il2CppObject*)>(&System::Net::WebClient::OpenWriteAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWriteAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnDownloadStringCompleted
// Il2CppName: OnDownloadStringCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadStringCompletedEventArgs*)>(&System::Net::WebClient::OnDownloadStringCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadStringCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnDownloadStringCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadStringOperationCompleted
// Il2CppName: DownloadStringOperationCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::DownloadStringOperationCompleted)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadStringOperationCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadStringAsyncCallback
// Il2CppName: DownloadStringAsyncCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::ArrayW<uint8_t>, ::System::Exception*, ::Il2CppObject*)>(&System::Net::WebClient::DownloadStringAsyncCallback)> {
  static const MethodInfo* get() {
    static auto* returnBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadStringAsyncCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnBytes, exception, state});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadStringAsync
// Il2CppName: DownloadStringAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::DownloadStringAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadStringAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadStringAsync
// Il2CppName: DownloadStringAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::Il2CppObject*)>(&System::Net::WebClient::DownloadStringAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadStringAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnDownloadDataCompleted
// Il2CppName: OnDownloadDataCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadDataCompletedEventArgs*)>(&System::Net::WebClient::OnDownloadDataCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadDataCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnDownloadDataCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadDataOperationCompleted
// Il2CppName: DownloadDataOperationCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::DownloadDataOperationCompleted)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadDataOperationCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadDataAsyncCallback
// Il2CppName: DownloadDataAsyncCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::ArrayW<uint8_t>, ::System::Exception*, ::Il2CppObject*)>(&System::Net::WebClient::DownloadDataAsyncCallback)> {
  static const MethodInfo* get() {
    static auto* returnBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadDataAsyncCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnBytes, exception, state});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadDataAsync
// Il2CppName: DownloadDataAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::DownloadDataAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadDataAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadDataAsync
// Il2CppName: DownloadDataAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::Il2CppObject*)>(&System::Net::WebClient::DownloadDataAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadDataAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnDownloadFileCompleted
// Il2CppName: OnDownloadFileCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::ComponentModel::AsyncCompletedEventArgs*)>(&System::Net::WebClient::OnDownloadFileCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnDownloadFileCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadFileOperationCompleted
// Il2CppName: DownloadFileOperationCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::DownloadFileOperationCompleted)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadFileOperationCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadFileAsyncCallback
// Il2CppName: DownloadFileAsyncCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::ArrayW<uint8_t>, ::System::Exception*, ::Il2CppObject*)>(&System::Net::WebClient::DownloadFileAsyncCallback)> {
  static const MethodInfo* get() {
    static auto* returnBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadFileAsyncCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnBytes, exception, state});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadFileAsync
// Il2CppName: DownloadFileAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::DownloadFileAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadFileAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadFileAsync
// Il2CppName: DownloadFileAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::Il2CppObject*)>(&System::Net::WebClient::DownloadFileAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadFileAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnUploadStringCompleted
// Il2CppName: OnUploadStringCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadStringCompletedEventArgs*)>(&System::Net::WebClient::OnUploadStringCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "UploadStringCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnUploadStringCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringOperationCompleted
// Il2CppName: UploadStringOperationCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::UploadStringOperationCompleted)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringOperationCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::StartDownloadAsync
// Il2CppName: StartDownloadAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::WebClient::UploadBitsState*)>(&System::Net::WebClient::StartDownloadAsync)> {
  static const MethodInfo* get() {
    static auto* state = &::il2cpp_utils::GetClassFromName("System.Net", "WebClient/UploadBitsState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "StartDownloadAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{state});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringAsyncWriteCallback
// Il2CppName: UploadStringAsyncWriteCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::ArrayW<uint8_t>, ::System::Exception*, ::Il2CppObject*)>(&System::Net::WebClient::UploadStringAsyncWriteCallback)> {
  static const MethodInfo* get() {
    static auto* returnBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringAsyncWriteCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnBytes, exception, state});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringAsyncReadCallback
// Il2CppName: UploadStringAsyncReadCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::ArrayW<uint8_t>, ::System::Exception*, ::Il2CppObject*)>(&System::Net::WebClient::UploadStringAsyncReadCallback)> {
  static const MethodInfo* get() {
    static auto* returnBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringAsyncReadCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnBytes, exception, state});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringAsync
// Il2CppName: UploadStringAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::UploadStringAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringAsync
// Il2CppName: UploadStringAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::StringW)>(&System::Net::WebClient::UploadStringAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringAsync
// Il2CppName: UploadStringAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::StringW, ::Il2CppObject*)>(&System::Net::WebClient::UploadStringAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnUploadDataCompleted
// Il2CppName: OnUploadDataCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadDataCompletedEventArgs*)>(&System::Net::WebClient::OnUploadDataCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "UploadDataCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnUploadDataCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataOperationCompleted
// Il2CppName: UploadDataOperationCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::UploadDataOperationCompleted)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataOperationCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataAsyncWriteCallback
// Il2CppName: UploadDataAsyncWriteCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::ArrayW<uint8_t>, ::System::Exception*, ::Il2CppObject*)>(&System::Net::WebClient::UploadDataAsyncWriteCallback)> {
  static const MethodInfo* get() {
    static auto* returnBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataAsyncWriteCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnBytes, exception, state});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataAsyncReadCallback
// Il2CppName: UploadDataAsyncReadCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::ArrayW<uint8_t>, ::System::Exception*, ::Il2CppObject*)>(&System::Net::WebClient::UploadDataAsyncReadCallback)> {
  static const MethodInfo* get() {
    static auto* returnBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataAsyncReadCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnBytes, exception, state});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataAsync
// Il2CppName: UploadDataAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadDataAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataAsync
// Il2CppName: UploadDataAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadDataAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataAsync
// Il2CppName: UploadDataAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::ArrayW<uint8_t>, ::Il2CppObject*)>(&System::Net::WebClient::UploadDataAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnUploadFileCompleted
// Il2CppName: OnUploadFileCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadFileCompletedEventArgs*)>(&System::Net::WebClient::OnUploadFileCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "UploadFileCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnUploadFileCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileOperationCompleted
// Il2CppName: UploadFileOperationCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::UploadFileOperationCompleted)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileOperationCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileAsyncWriteCallback
// Il2CppName: UploadFileAsyncWriteCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::ArrayW<uint8_t>, ::System::Exception*, ::Il2CppObject*)>(&System::Net::WebClient::UploadFileAsyncWriteCallback)> {
  static const MethodInfo* get() {
    static auto* returnBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileAsyncWriteCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnBytes, exception, state});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileAsyncReadCallback
// Il2CppName: UploadFileAsyncReadCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::ArrayW<uint8_t>, ::System::Exception*, ::Il2CppObject*)>(&System::Net::WebClient::UploadFileAsyncReadCallback)> {
  static const MethodInfo* get() {
    static auto* returnBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileAsyncReadCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnBytes, exception, state});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileAsync
// Il2CppName: UploadFileAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::UploadFileAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileAsync
// Il2CppName: UploadFileAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::StringW)>(&System::Net::WebClient::UploadFileAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileAsync
// Il2CppName: UploadFileAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::StringW, ::Il2CppObject*)>(&System::Net::WebClient::UploadFileAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, fileName, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnUploadValuesCompleted
// Il2CppName: OnUploadValuesCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadValuesCompletedEventArgs*)>(&System::Net::WebClient::OnUploadValuesCompleted)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "UploadValuesCompletedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnUploadValuesCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesOperationCompleted
// Il2CppName: UploadValuesOperationCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::UploadValuesOperationCompleted)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesOperationCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesAsyncWriteCallback
// Il2CppName: UploadValuesAsyncWriteCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::ArrayW<uint8_t>, ::System::Exception*, ::Il2CppObject*)>(&System::Net::WebClient::UploadValuesAsyncWriteCallback)> {
  static const MethodInfo* get() {
    static auto* returnBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesAsyncWriteCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnBytes, exception, state});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesAsyncReadCallback
// Il2CppName: UploadValuesAsyncReadCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::ArrayW<uint8_t>, ::System::Exception*, ::Il2CppObject*)>(&System::Net::WebClient::UploadValuesAsyncReadCallback)> {
  static const MethodInfo* get() {
    static auto* returnBytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* exception = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesAsyncReadCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnBytes, exception, state});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesAsync
// Il2CppName: UploadValuesAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValuesAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesAsync
// Il2CppName: UploadValuesAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValuesAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesAsync
// Il2CppName: UploadValuesAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::System::Collections::Specialized::NameValueCollection*, ::Il2CppObject*)>(&System::Net::WebClient::UploadValuesAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    static auto* userToken = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data, userToken});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::CancelAsync
// Il2CppName: CancelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)()>(&System::Net::WebClient::CancelAsync)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "CancelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadStringTaskAsync
// Il2CppName: DownloadStringTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::StringW>* (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::DownloadStringTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadStringTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadStringTaskAsync
// Il2CppName: DownloadStringTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::StringW>* (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::DownloadStringTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadStringTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenReadTaskAsync
// Il2CppName: OpenReadTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::System::IO::Stream*>* (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::OpenReadTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenReadTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenReadTaskAsync
// Il2CppName: OpenReadTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::System::IO::Stream*>* (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::OpenReadTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenReadTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWriteTaskAsync
// Il2CppName: OpenWriteTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::System::IO::Stream*>* (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::OpenWriteTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWriteTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWriteTaskAsync
// Il2CppName: OpenWriteTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::System::IO::Stream*>* (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::OpenWriteTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWriteTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWriteTaskAsync
// Il2CppName: OpenWriteTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::System::IO::Stream*>* (System::Net::WebClient::*)(::StringW, ::StringW)>(&System::Net::WebClient::OpenWriteTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWriteTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OpenWriteTaskAsync
// Il2CppName: OpenWriteTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::System::IO::Stream*>* (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::OpenWriteTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OpenWriteTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringTaskAsync
// Il2CppName: UploadStringTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::StringW>* (System::Net::WebClient::*)(::StringW, ::StringW)>(&System::Net::WebClient::UploadStringTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringTaskAsync
// Il2CppName: UploadStringTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::StringW>* (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::UploadStringTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringTaskAsync
// Il2CppName: UploadStringTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::StringW>* (System::Net::WebClient::*)(::StringW, ::StringW, ::StringW)>(&System::Net::WebClient::UploadStringTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadStringTaskAsync
// Il2CppName: UploadStringTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::StringW>* (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::StringW)>(&System::Net::WebClient::UploadStringTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadStringTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadDataTaskAsync
// Il2CppName: DownloadDataTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::StringW)>(&System::Net::WebClient::DownloadDataTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadDataTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadDataTaskAsync
// Il2CppName: DownloadDataTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::System::Uri*)>(&System::Net::WebClient::DownloadDataTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadDataTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadFileTaskAsync
// Il2CppName: DownloadFileTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (System::Net::WebClient::*)(::StringW, ::StringW)>(&System::Net::WebClient::DownloadFileTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadFileTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::DownloadFileTaskAsync
// Il2CppName: DownloadFileTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task* (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::DownloadFileTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "DownloadFileTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataTaskAsync
// Il2CppName: UploadDataTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::StringW, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadDataTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataTaskAsync
// Il2CppName: UploadDataTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::System::Uri*, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadDataTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataTaskAsync
// Il2CppName: UploadDataTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::StringW, ::StringW, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadDataTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadDataTaskAsync
// Il2CppName: UploadDataTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::ArrayW<uint8_t>)>(&System::Net::WebClient::UploadDataTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadDataTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileTaskAsync
// Il2CppName: UploadFileTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::StringW, ::StringW)>(&System::Net::WebClient::UploadFileTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileTaskAsync
// Il2CppName: UploadFileTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::System::Uri*, ::StringW)>(&System::Net::WebClient::UploadFileTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileTaskAsync
// Il2CppName: UploadFileTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::StringW, ::StringW, ::StringW)>(&System::Net::WebClient::UploadFileTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadFileTaskAsync
// Il2CppName: UploadFileTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::StringW)>(&System::Net::WebClient::UploadFileTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadFileTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, fileName});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesTaskAsync
// Il2CppName: UploadValuesTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::StringW, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValuesTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesTaskAsync
// Il2CppName: UploadValuesTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::StringW, ::StringW, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValuesTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesTaskAsync
// Il2CppName: UploadValuesTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::System::Uri*, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValuesTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::UploadValuesTaskAsync
// Il2CppName: UploadValuesTaskAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* (System::Net::WebClient::*)(::System::Uri*, ::StringW, ::System::Collections::Specialized::NameValueCollection*)>(&System::Net::WebClient::UploadValuesTaskAsync)> {
  static const MethodInfo* get() {
    static auto* address = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "UploadValuesTaskAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{address, method, data});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::HandleCompletion
// Il2CppName: HandleCompletion
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: System::Net::WebClient::OnDownloadProgressChanged
// Il2CppName: OnDownloadProgressChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::DownloadProgressChangedEventArgs*)>(&System::Net::WebClient::OnDownloadProgressChanged)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "DownloadProgressChangedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnDownloadProgressChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::OnUploadProgressChanged
// Il2CppName: OnUploadProgressChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::Net::UploadProgressChangedEventArgs*)>(&System::Net::WebClient::OnUploadProgressChanged)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net", "UploadProgressChangedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "OnUploadProgressChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::ReportDownloadProgressChanged
// Il2CppName: ReportDownloadProgressChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::ReportDownloadProgressChanged)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "ReportDownloadProgressChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::ReportUploadProgressChanged
// Il2CppName: ReportUploadProgressChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::Il2CppObject*)>(&System::Net::WebClient::ReportUploadProgressChanged)> {
  static const MethodInfo* get() {
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "ReportUploadProgressChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::PostProgressChanged
// Il2CppName: PostProgressChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebClient::*)(::System::ComponentModel::AsyncOperation*, ::System::Net::WebClient::ProgressData*)>(&System::Net::WebClient::PostProgressChanged)> {
  static const MethodInfo* get() {
    static auto* asyncOp = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "AsyncOperation")->byval_arg;
    static auto* progress = &::il2cpp_utils::GetClassFromName("System.Net", "WebClient/ProgressData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebClient*), "PostProgressChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{asyncOp, progress});
  }
};
// Writing MetadataGetter for method: System::Net::WebClient::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
