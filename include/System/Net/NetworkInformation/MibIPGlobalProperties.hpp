// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.NetworkInformation.UnixIPGlobalProperties
#include "System/Net/NetworkInformation/UnixIPGlobalProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: System.Net.NetworkInformation
namespace System::Net::NetworkInformation {
  // Forward declaring type: MibIPGlobalProperties
  class MibIPGlobalProperties;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::NetworkInformation::MibIPGlobalProperties);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::NetworkInformation::MibIPGlobalProperties*, "System.Net.NetworkInformation", "MibIPGlobalProperties");
// Type namespace: System.Net.NetworkInformation
namespace System::Net::NetworkInformation {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.NetworkInformation.MibIPGlobalProperties
  // [TokenAttribute] Offset: FFFFFFFF
  class MibIPGlobalProperties : public ::System::Net::NetworkInformation::UnixIPGlobalProperties {
    public:
    public:
    // public readonly System.String StatisticsFile
    // Size: 0x8
    // Offset: 0x10
    ::StringW StatisticsFile;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public readonly System.String StatisticsFileIPv6
    // Size: 0x8
    // Offset: 0x18
    ::StringW StatisticsFileIPv6;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public readonly System.String TcpFile
    // Size: 0x8
    // Offset: 0x20
    ::StringW TcpFile;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public readonly System.String Tcp6File
    // Size: 0x8
    // Offset: 0x28
    ::StringW Tcp6File;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public readonly System.String UdpFile
    // Size: 0x8
    // Offset: 0x30
    ::StringW UdpFile;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public readonly System.String Udp6File
    // Size: 0x8
    // Offset: 0x38
    ::StringW Udp6File;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get static field: static private readonly System.Char[] wsChars
    static ::ArrayW<::Il2CppChar> _get_wsChars();
    // Set static field: static private readonly System.Char[] wsChars
    static void _set_wsChars(::ArrayW<::Il2CppChar> value);
    // Get instance field reference: public readonly System.String StatisticsFile
    [[deprecated("Use field access instead!")]] ::StringW& dyn_StatisticsFile();
    // Get instance field reference: public readonly System.String StatisticsFileIPv6
    [[deprecated("Use field access instead!")]] ::StringW& dyn_StatisticsFileIPv6();
    // Get instance field reference: public readonly System.String TcpFile
    [[deprecated("Use field access instead!")]] ::StringW& dyn_TcpFile();
    // Get instance field reference: public readonly System.String Tcp6File
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Tcp6File();
    // Get instance field reference: public readonly System.String UdpFile
    [[deprecated("Use field access instead!")]] ::StringW& dyn_UdpFile();
    // Get instance field reference: public readonly System.String Udp6File
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Udp6File();
    // public System.Void .ctor(System.String procDir)
    // Offset: 0x1BC4770
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MibIPGlobalProperties* New_ctor(::StringW procDir) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MibIPGlobalProperties*, creationType>(procDir)));
    }
    // static private System.Void .cctor()
    // Offset: 0x1BC4898
    static void _cctor();
  }; // System.Net.NetworkInformation.MibIPGlobalProperties
  #pragma pack(pop)
  static check_size<sizeof(MibIPGlobalProperties), 56 + sizeof(::StringW)> __System_Net_NetworkInformation_MibIPGlobalPropertiesSizeCheck;
  static_assert(sizeof(MibIPGlobalProperties) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::NetworkInformation::MibIPGlobalProperties::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::NetworkInformation::MibIPGlobalProperties::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Net::NetworkInformation::MibIPGlobalProperties::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::NetworkInformation::MibIPGlobalProperties*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
