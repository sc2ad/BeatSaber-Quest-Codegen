// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Uri
  class Uri;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: NclConstants
  class NclConstants;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::NclConstants);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::NclConstants*, "System.Net", "NclConstants");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.NclConstants
  // [TokenAttribute] Offset: FFFFFFFF
  class NclConstants : public ::Il2CppObject {
    public:
    // Get static field: static readonly System.Object Sentinel
    static ::Il2CppObject* _get_Sentinel();
    // Set static field: static readonly System.Object Sentinel
    static void _set_Sentinel(::Il2CppObject* value);
    // Get static field: static readonly System.Object[] EmptyObjectArray
    static ::ArrayW<::Il2CppObject*> _get_EmptyObjectArray();
    // Set static field: static readonly System.Object[] EmptyObjectArray
    static void _set_EmptyObjectArray(::ArrayW<::Il2CppObject*> value);
    // Get static field: static readonly System.Uri[] EmptyUriArray
    static ::ArrayW<::System::Uri*> _get_EmptyUriArray();
    // Set static field: static readonly System.Uri[] EmptyUriArray
    static void _set_EmptyUriArray(::ArrayW<::System::Uri*> value);
    // Get static field: static readonly System.Byte[] CRLF
    static ::ArrayW<uint8_t> _get_CRLF();
    // Set static field: static readonly System.Byte[] CRLF
    static void _set_CRLF(::ArrayW<uint8_t> value);
    // Get static field: static readonly System.Byte[] ChunkTerminator
    static ::ArrayW<uint8_t> _get_ChunkTerminator();
    // Set static field: static readonly System.Byte[] ChunkTerminator
    static void _set_ChunkTerminator(::ArrayW<uint8_t> value);
    // static private System.Void .cctor()
    // Offset: 0xF6ACE8
    static void _cctor();
  }; // System.Net.NclConstants
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::NclConstants::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Net::NclConstants::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::NclConstants*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
