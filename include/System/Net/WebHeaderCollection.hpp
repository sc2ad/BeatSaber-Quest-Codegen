// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.Specialized.NameValueCollection
#include "System/Collections/Specialized/NameValueCollection.hpp"
// Including type: System.Net.WebHeaderCollectionType
#include "System/Net/WebHeaderCollectionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: HttpRequestHeader
  struct HttpRequestHeader;
  // Forward declaring type: HeaderInfoTable
  class HeaderInfoTable;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: WebHeaderCollection
  class WebHeaderCollection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::WebHeaderCollection);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebHeaderCollection*, "System.Net", "WebHeaderCollection");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x7A
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.WebHeaderCollection
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: 10484A0
  // [DefaultMemberAttribute] Offset: 10484A0
  class WebHeaderCollection : public ::System::Collections::Specialized::NameValueCollection {
    public:
    // Nested type: ::System::Net::WebHeaderCollection::RfcChar
    struct RfcChar;
    // Size: 0x1
    #pragma pack(push, 1)
    // Autogenerated type: System.Net.WebHeaderCollection/System.Net.RfcChar
    // [TokenAttribute] Offset: FFFFFFFF
    struct RfcChar/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Byte value__
      // Size: 0x1
      // Offset: 0x0
      uint8_t value;
      // Field size check
      static_assert(sizeof(uint8_t) == 0x1);
      public:
      // Creating value type constructor for type: RfcChar
      constexpr RfcChar(uint8_t value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator uint8_t
      constexpr operator uint8_t() const noexcept {
        return value;
      }
      // static field const value: static public System.Net.WebHeaderCollection/System.Net.RfcChar High
      static constexpr const uint8_t High = 0u;
      // Get static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar High
      static ::System::Net::WebHeaderCollection::RfcChar _get_High();
      // Set static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar High
      static void _set_High(::System::Net::WebHeaderCollection::RfcChar value);
      // static field const value: static public System.Net.WebHeaderCollection/System.Net.RfcChar Reg
      static constexpr const uint8_t Reg = 1u;
      // Get static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar Reg
      static ::System::Net::WebHeaderCollection::RfcChar _get_Reg();
      // Set static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar Reg
      static void _set_Reg(::System::Net::WebHeaderCollection::RfcChar value);
      // static field const value: static public System.Net.WebHeaderCollection/System.Net.RfcChar Ctl
      static constexpr const uint8_t Ctl = 2u;
      // Get static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar Ctl
      static ::System::Net::WebHeaderCollection::RfcChar _get_Ctl();
      // Set static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar Ctl
      static void _set_Ctl(::System::Net::WebHeaderCollection::RfcChar value);
      // static field const value: static public System.Net.WebHeaderCollection/System.Net.RfcChar CR
      static constexpr const uint8_t CR = 3u;
      // Get static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar CR
      static ::System::Net::WebHeaderCollection::RfcChar _get_CR();
      // Set static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar CR
      static void _set_CR(::System::Net::WebHeaderCollection::RfcChar value);
      // static field const value: static public System.Net.WebHeaderCollection/System.Net.RfcChar LF
      static constexpr const uint8_t LF = 4u;
      // Get static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar LF
      static ::System::Net::WebHeaderCollection::RfcChar _get_LF();
      // Set static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar LF
      static void _set_LF(::System::Net::WebHeaderCollection::RfcChar value);
      // static field const value: static public System.Net.WebHeaderCollection/System.Net.RfcChar WS
      static constexpr const uint8_t WS = 5u;
      // Get static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar WS
      static ::System::Net::WebHeaderCollection::RfcChar _get_WS();
      // Set static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar WS
      static void _set_WS(::System::Net::WebHeaderCollection::RfcChar value);
      // static field const value: static public System.Net.WebHeaderCollection/System.Net.RfcChar Colon
      static constexpr const uint8_t Colon = 6u;
      // Get static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar Colon
      static ::System::Net::WebHeaderCollection::RfcChar _get_Colon();
      // Set static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar Colon
      static void _set_Colon(::System::Net::WebHeaderCollection::RfcChar value);
      // static field const value: static public System.Net.WebHeaderCollection/System.Net.RfcChar Delim
      static constexpr const uint8_t Delim = 7u;
      // Get static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar Delim
      static ::System::Net::WebHeaderCollection::RfcChar _get_Delim();
      // Set static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar Delim
      static void _set_Delim(::System::Net::WebHeaderCollection::RfcChar value);
      // Get instance field reference: public System.Byte value__
      [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
    }; // System.Net.WebHeaderCollection/System.Net.RfcChar
    #pragma pack(pop)
    static check_size<sizeof(WebHeaderCollection::RfcChar), 0 + sizeof(uint8_t)> __System_Net_WebHeaderCollection_RfcCharSizeCheck;
    static_assert(sizeof(WebHeaderCollection::RfcChar) == 0x1);
    public:
    // private System.String[] m_CommonHeaders
    // Size: 0x8
    // Offset: 0x60
    ::ArrayW<::StringW> m_CommonHeaders;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // private System.Int32 m_NumCommonHeaders
    // Size: 0x4
    // Offset: 0x68
    int m_NumCommonHeaders;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_NumCommonHeaders and: m_InnerCollection
    char __padding1[0x4] = {};
    // private System.Collections.Specialized.NameValueCollection m_InnerCollection
    // Size: 0x8
    // Offset: 0x70
    ::System::Collections::Specialized::NameValueCollection* m_InnerCollection;
    // Field size check
    static_assert(sizeof(::System::Collections::Specialized::NameValueCollection*) == 0x8);
    // private System.Net.WebHeaderCollectionType m_Type
    // Size: 0x2
    // Offset: 0x78
    ::System::Net::WebHeaderCollectionType m_Type;
    // Field size check
    static_assert(sizeof(::System::Net::WebHeaderCollectionType) == 0x2);
    public:
    // Get static field: static private readonly System.Net.HeaderInfoTable HInfo
    static ::System::Net::HeaderInfoTable* _get_HInfo();
    // Set static field: static private readonly System.Net.HeaderInfoTable HInfo
    static void _set_HInfo(::System::Net::HeaderInfoTable* value);
    // Get static field: static private readonly System.String[] s_CommonHeaderNames
    static ::ArrayW<::StringW> _get_s_CommonHeaderNames();
    // Set static field: static private readonly System.String[] s_CommonHeaderNames
    static void _set_s_CommonHeaderNames(::ArrayW<::StringW> value);
    // Get static field: static private readonly System.SByte[] s_CommonHeaderHints
    static ::ArrayW<int8_t> _get_s_CommonHeaderHints();
    // Set static field: static private readonly System.SByte[] s_CommonHeaderHints
    static void _set_s_CommonHeaderHints(::ArrayW<int8_t> value);
    // Get static field: static private readonly System.Char[] HttpTrimCharacters
    static ::ArrayW<::Il2CppChar> _get_HttpTrimCharacters();
    // Set static field: static private readonly System.Char[] HttpTrimCharacters
    static void _set_HttpTrimCharacters(::ArrayW<::Il2CppChar> value);
    // Get static field: static private System.Net.WebHeaderCollection/System.Net.RfcChar[] RfcCharMap
    static ::ArrayW<::System::Net::WebHeaderCollection::RfcChar> _get_RfcCharMap();
    // Set static field: static private System.Net.WebHeaderCollection/System.Net.RfcChar[] RfcCharMap
    static void _set_RfcCharMap(::ArrayW<::System::Net::WebHeaderCollection::RfcChar> value);
    // Get instance field reference: private System.String[] m_CommonHeaders
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_m_CommonHeaders();
    // Get instance field reference: private System.Int32 m_NumCommonHeaders
    [[deprecated("Use field access instead!")]] int& dyn_m_NumCommonHeaders();
    // Get instance field reference: private System.Collections.Specialized.NameValueCollection m_InnerCollection
    [[deprecated("Use field access instead!")]] ::System::Collections::Specialized::NameValueCollection*& dyn_m_InnerCollection();
    // Get instance field reference: private System.Net.WebHeaderCollectionType m_Type
    [[deprecated("Use field access instead!")]] ::System::Net::WebHeaderCollectionType& dyn_m_Type();
    // private System.Collections.Specialized.NameValueCollection get_InnerCollection()
    // Offset: 0x1B5EA9C
    ::System::Collections::Specialized::NameValueCollection* get_InnerCollection();
    // private System.Boolean get_AllowHttpRequestHeader()
    // Offset: 0x1B5EB44
    bool get_AllowHttpRequestHeader();
    // System.Void .ctor(System.Net.WebHeaderCollectionType type)
    // Offset: 0x1B5FCFC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebHeaderCollection* New_ctor(::System::Net::WebHeaderCollectionType type) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebHeaderCollection*, creationType>(type)));
    }
    // private System.Void NormalizeCommonHeaders()
    // Offset: 0x1B5E97C
    void NormalizeCommonHeaders();
    // static System.Boolean AllowMultiValues(System.String name)
    // Offset: 0x1B57394
    static bool AllowMultiValues(::StringW name);
    // public System.Void Remove(System.Net.HttpRequestHeader header)
    // Offset: 0x1B5EB7C
    void Remove(::System::Net::HttpRequestHeader header);
    // System.Void AddInternal(System.String name, System.String value)
    // Offset: 0x1B57444
    void AddInternal(::StringW name, ::StringW value);
    // System.Void ChangeInternal(System.String name, System.String value)
    // Offset: 0x1B5EC7C
    void ChangeInternal(::StringW name, ::StringW value);
    // System.Void RemoveInternal(System.String name)
    // Offset: 0x1B5ECDC
    void RemoveInternal(::StringW name);
    // static System.String CheckBadChars(System.String name, System.Boolean isHeaderValue)
    // Offset: 0x1B5ED3C
    static ::StringW CheckBadChars(::StringW name, bool isHeaderValue);
    // static System.Boolean ContainsNonAsciiChars(System.String token)
    // Offset: 0x1B5F0B8
    static bool ContainsNonAsciiChars(::StringW token);
    // System.Void ThrowOnRestrictedHeader(System.String headerName)
    // Offset: 0x1B5F140
    void ThrowOnRestrictedHeader(::StringW headerName);
    // public System.Void Add(System.String header)
    // Offset: 0x1B55458
    void Add(::StringW header);
    // System.Void SetInternal(System.String name, System.String value)
    // Offset: 0x1B574A4
    void SetInternal(::StringW name, ::StringW value);
    // static System.String GetAsString(System.Collections.Specialized.NameValueCollection cc, System.Boolean winInetCompat, System.Boolean forTrace)
    // Offset: 0x1B5FA4C
    static ::StringW GetAsString(::System::Collections::Specialized::NameValueCollection* cc, bool winInetCompat, bool forTrace);
    // private System.Void System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    // Offset: 0x1B60120
    void System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext);
    // public override System.Int32 get_Count()
    // Offset: 0x1B6050C
    // Implemented from: System.Collections.Specialized.NameObjectCollectionBase
    // Base method: System.Int32 NameObjectCollectionBase::get_Count()
    int get_Count();
    // public System.Void .ctor()
    // Offset: 0x1B55340
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.Void NameValueCollection::.ctor()
    // Base method: System.Void NameObjectCollectionBase::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebHeaderCollection* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebHeaderCollection*, creationType>()));
    }
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    // Offset: 0x1B5FDE0
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.Void NameValueCollection::.ctor(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    // Base method: System.Void NameObjectCollectionBase::.ctor(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebHeaderCollection* New_ctor(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebHeaderCollection*, creationType>(serializationInfo, streamingContext)));
    }
    // static private System.Void .cctor()
    // Offset: 0x1B60614
    // Implemented from: System.Collections.Specialized.NameObjectCollectionBase
    // Base method: System.Void NameObjectCollectionBase::.cctor()
    static void _cctor();
    // public override System.Void Add(System.String name, System.String value)
    // Offset: 0x1B5F2CC
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.Void NameValueCollection::Add(System.String name, System.String value)
    void Add(::StringW name, ::StringW value);
    // public override System.Void Set(System.String name, System.String value)
    // Offset: 0x1B5F484
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.Void NameValueCollection::Set(System.String name, System.String value)
    void Set(::StringW name, ::StringW value);
    // public override System.Void Remove(System.String name)
    // Offset: 0x1B5F6A4
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.Void NameValueCollection::Remove(System.String name)
    void Remove(::StringW name);
    // public override System.String[] GetValues(System.String header)
    // Offset: 0x1B5F7DC
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.String[] NameValueCollection::GetValues(System.String header)
    ::ArrayW<::StringW> GetValues(::StringW header);
    // public override System.String ToString()
    // Offset: 0x1B5F9E0
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
    // public override System.Void OnDeserialization(System.Object sender)
    // Offset: 0x1B5FF94
    // Implemented from: System.Collections.Specialized.NameObjectCollectionBase
    // Base method: System.Void NameObjectCollectionBase::OnDeserialization(System.Object sender)
    void OnDeserialization(::Il2CppObject* sender);
    // public override System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    // Offset: 0x1B5FF98
    // Implemented from: System.Collections.Specialized.NameObjectCollectionBase
    // Base method: System.Void NameObjectCollectionBase::GetObjectData(System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext)
    void GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext);
    // public override System.String Get(System.String name)
    // Offset: 0x1B6012C
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.String NameValueCollection::Get(System.String name)
    ::StringW Get(::StringW name);
    // public override System.Collections.IEnumerator GetEnumerator()
    // Offset: 0x1B60490
    // Implemented from: System.Collections.Specialized.NameObjectCollectionBase
    // Base method: System.Collections.IEnumerator NameObjectCollectionBase::GetEnumerator()
    ::System::Collections::IEnumerator* GetEnumerator();
    // public override System.String Get(System.Int32 index)
    // Offset: 0x1B60548
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.String NameValueCollection::Get(System.Int32 index)
    ::StringW Get(int index);
    // public override System.String[] GetValues(System.Int32 index)
    // Offset: 0x1B6058C
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.String[] NameValueCollection::GetValues(System.Int32 index)
    ::ArrayW<::StringW> GetValues(int index);
    // public override System.String GetKey(System.Int32 index)
    // Offset: 0x1B605D0
    // Implemented from: System.Collections.Specialized.NameValueCollection
    // Base method: System.String NameValueCollection::GetKey(System.Int32 index)
    ::StringW GetKey(int index);
  }; // System.Net.WebHeaderCollection
  #pragma pack(pop)
  static check_size<sizeof(WebHeaderCollection), 120 + sizeof(::System::Net::WebHeaderCollectionType)> __System_Net_WebHeaderCollectionSizeCheck;
  static_assert(sizeof(WebHeaderCollection) == 0x7A);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebHeaderCollection::RfcChar, "System.Net", "WebHeaderCollection/RfcChar");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_InnerCollection
// Il2CppName: get_InnerCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Specialized::NameValueCollection* (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_InnerCollection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_InnerCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_AllowHttpRequestHeader
// Il2CppName: get_AllowHttpRequestHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_AllowHttpRequestHeader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_AllowHttpRequestHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::NormalizeCommonHeaders
// Il2CppName: NormalizeCommonHeaders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::NormalizeCommonHeaders)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "NormalizeCommonHeaders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::AllowMultiValues
// Il2CppName: AllowMultiValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&System::Net::WebHeaderCollection::AllowMultiValues)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "AllowMultiValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::System::Net::HttpRequestHeader)>(&System::Net::WebHeaderCollection::Remove)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System.Net", "HttpRequestHeader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::AddInternal
// Il2CppName: AddInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW, ::StringW)>(&System::Net::WebHeaderCollection::AddInternal)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "AddInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::ChangeInternal
// Il2CppName: ChangeInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW, ::StringW)>(&System::Net::WebHeaderCollection::ChangeInternal)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "ChangeInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::RemoveInternal
// Il2CppName: RemoveInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW)>(&System::Net::WebHeaderCollection::RemoveInternal)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "RemoveInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::CheckBadChars
// Il2CppName: CheckBadChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, bool)>(&System::Net::WebHeaderCollection::CheckBadChars)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isHeaderValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "CheckBadChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, isHeaderValue});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::ContainsNonAsciiChars
// Il2CppName: ContainsNonAsciiChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&System::Net::WebHeaderCollection::ContainsNonAsciiChars)> {
  static const MethodInfo* get() {
    static auto* token = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "ContainsNonAsciiChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{token});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::ThrowOnRestrictedHeader
// Il2CppName: ThrowOnRestrictedHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW)>(&System::Net::WebHeaderCollection::ThrowOnRestrictedHeader)> {
  static const MethodInfo* get() {
    static auto* headerName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "ThrowOnRestrictedHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{headerName});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW)>(&System::Net::WebHeaderCollection::Add)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::SetInternal
// Il2CppName: SetInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW, ::StringW)>(&System::Net::WebHeaderCollection::SetInternal)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "SetInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::GetAsString
// Il2CppName: GetAsString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::Collections::Specialized::NameValueCollection*, bool, bool)>(&System::Net::WebHeaderCollection::GetAsString)> {
  static const MethodInfo* get() {
    static auto* cc = &::il2cpp_utils::GetClassFromName("System.Collections.Specialized", "NameValueCollection")->byval_arg;
    static auto* winInetCompat = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* forTrace = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "GetAsString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cc, winInetCompat, forTrace});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::System_Runtime_Serialization_ISerializable_GetObjectData
// Il2CppName: System.Runtime.Serialization.ISerializable.GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Net::WebHeaderCollection::System_Runtime_Serialization_ISerializable_GetObjectData)> {
  static const MethodInfo* get() {
    static auto* serializationInfo = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* streamingContext = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serializationInfo, streamingContext});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Net::WebHeaderCollection::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW, ::StringW)>(&System::Net::WebHeaderCollection::Add)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW, ::StringW)>(&System::Net::WebHeaderCollection::Set)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::StringW)>(&System::Net::WebHeaderCollection::Remove)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::GetValues
// Il2CppName: GetValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (System::Net::WebHeaderCollection::*)(::StringW)>(&System::Net::WebHeaderCollection::GetValues)> {
  static const MethodInfo* get() {
    static auto* header = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "GetValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{header});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::OnDeserialization
// Il2CppName: OnDeserialization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::Il2CppObject*)>(&System::Net::WebHeaderCollection::OnDeserialization)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "OnDeserialization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebHeaderCollection::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Net::WebHeaderCollection::GetObjectData)> {
  static const MethodInfo* get() {
    static auto* serializationInfo = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* streamingContext = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serializationInfo, streamingContext});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)(::StringW)>(&System::Net::WebHeaderCollection::Get)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (System::Net::WebHeaderCollection::*)()>(&System::Net::WebHeaderCollection::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)(int)>(&System::Net::WebHeaderCollection::Get)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::GetValues
// Il2CppName: GetValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (System::Net::WebHeaderCollection::*)(int)>(&System::Net::WebHeaderCollection::GetValues)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "GetValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Net::WebHeaderCollection::GetKey
// Il2CppName: GetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebHeaderCollection::*)(int)>(&System::Net::WebHeaderCollection::GetKey)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebHeaderCollection*), "GetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
