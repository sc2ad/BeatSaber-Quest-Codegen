// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: SecChannelBindings
  class SecChannelBindings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::SecChannelBindings);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::SecChannelBindings*, "System.Net", "SecChannelBindings");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x30
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Net.SecChannelBindings
  // [TokenAttribute] Offset: FFFFFFFF
  class SecChannelBindings : public ::Il2CppObject {
    public:
    public:
    // System.Int32 dwInitiatorAddrType
    // Size: 0x4
    // Offset: 0x10
    int dwInitiatorAddrType;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 cbInitiatorLength
    // Size: 0x4
    // Offset: 0x14
    int cbInitiatorLength;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 dwInitiatorOffset
    // Size: 0x4
    // Offset: 0x18
    int dwInitiatorOffset;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 dwAcceptorAddrType
    // Size: 0x4
    // Offset: 0x1C
    int dwAcceptorAddrType;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 cbAcceptorLength
    // Size: 0x4
    // Offset: 0x20
    int cbAcceptorLength;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 dwAcceptorOffset
    // Size: 0x4
    // Offset: 0x24
    int dwAcceptorOffset;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 cbApplicationDataLength
    // Size: 0x4
    // Offset: 0x28
    int cbApplicationDataLength;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 dwApplicationDataOffset
    // Size: 0x4
    // Offset: 0x2C
    int dwApplicationDataOffset;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: System.Int32 dwInitiatorAddrType
    [[deprecated("Use field access instead!")]] int& dyn_dwInitiatorAddrType();
    // Get instance field reference: System.Int32 cbInitiatorLength
    [[deprecated("Use field access instead!")]] int& dyn_cbInitiatorLength();
    // Get instance field reference: System.Int32 dwInitiatorOffset
    [[deprecated("Use field access instead!")]] int& dyn_dwInitiatorOffset();
    // Get instance field reference: System.Int32 dwAcceptorAddrType
    [[deprecated("Use field access instead!")]] int& dyn_dwAcceptorAddrType();
    // Get instance field reference: System.Int32 cbAcceptorLength
    [[deprecated("Use field access instead!")]] int& dyn_cbAcceptorLength();
    // Get instance field reference: System.Int32 dwAcceptorOffset
    [[deprecated("Use field access instead!")]] int& dyn_dwAcceptorOffset();
    // Get instance field reference: System.Int32 cbApplicationDataLength
    [[deprecated("Use field access instead!")]] int& dyn_cbApplicationDataLength();
    // Get instance field reference: System.Int32 dwApplicationDataOffset
    [[deprecated("Use field access instead!")]] int& dyn_dwApplicationDataOffset();
    // public System.Void .ctor()
    // Offset: 0xF74368
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SecChannelBindings* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SecChannelBindings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SecChannelBindings*, creationType>()));
    }
  }; // System.Net.SecChannelBindings
  #pragma pack(pop)
  static check_size<sizeof(SecChannelBindings), 44 + sizeof(int)> __System_Net_SecChannelBindingsSizeCheck;
  static_assert(sizeof(SecChannelBindings) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::SecChannelBindings::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
