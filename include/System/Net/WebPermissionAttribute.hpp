// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Security.Permissions.CodeAccessSecurityAttribute
#include "System/Security/Permissions/CodeAccessSecurityAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security
namespace System::Security {
  // Forward declaring type: IPermission
  class IPermission;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: WebPermissionAttribute
  class WebPermissionAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::WebPermissionAttribute);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebPermissionAttribute*, "System.Net", "WebPermissionAttribute");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.WebPermissionAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 8FFB0C
  class WebPermissionAttribute : public ::System::Security::Permissions::CodeAccessSecurityAttribute {
    public:
    // Writing base type padding for base size: 0x15 to desired offset: 0x18
    char ___base_padding[0x3] = {};
    public:
    // private System.Object m_accept
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppObject* m_accept;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Object m_connect
    // Size: 0x8
    // Offset: 0x20
    ::Il2CppObject* m_connect;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    public:
    // Get instance field reference: private System.Object m_accept
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_m_accept();
    // Get instance field reference: private System.Object m_connect
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_m_connect();
    // public System.String get_Connect()
    // Offset: 0xFC5C9C
    ::StringW get_Connect();
    // public System.Void set_Connect(System.String value)
    // Offset: 0xFC5D04
    void set_Connect(::StringW value);
    // public System.String get_Accept()
    // Offset: 0xFC5E20
    ::StringW get_Accept();
    // public System.Void set_Accept(System.String value)
    // Offset: 0xFC5E88
    void set_Accept(::StringW value);
    // public System.String get_ConnectPattern()
    // Offset: 0xFC5FA4
    ::StringW get_ConnectPattern();
    // public System.Void set_ConnectPattern(System.String value)
    // Offset: 0xFC6068
    void set_ConnectPattern(::StringW value);
    // public System.String get_AcceptPattern()
    // Offset: 0xFC61E4
    ::StringW get_AcceptPattern();
    // public System.Void set_AcceptPattern(System.String value)
    // Offset: 0xFC62A8
    void set_AcceptPattern(::StringW value);
    // public System.Void .ctor(System.Security.Permissions.SecurityAction action)
    // Offset: 0xFC5C94
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebPermissionAttribute* New_ctor(::System::Security::Permissions::SecurityAction action) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebPermissionAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebPermissionAttribute*, creationType>(action)));
    }
    // public override System.Security.IPermission CreatePermission()
    // Offset: 0xFC6424
    // Implemented from: System.Security.Permissions.SecurityAttribute
    // Base method: System.Security.IPermission SecurityAttribute::CreatePermission()
    ::System::Security::IPermission* CreatePermission();
  }; // System.Net.WebPermissionAttribute
  #pragma pack(pop)
  static check_size<sizeof(WebPermissionAttribute), 32 + sizeof(::Il2CppObject*)> __System_Net_WebPermissionAttributeSizeCheck;
  static_assert(sizeof(WebPermissionAttribute) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebPermissionAttribute::get_Connect
// Il2CppName: get_Connect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebPermissionAttribute::*)()>(&System::Net::WebPermissionAttribute::get_Connect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebPermissionAttribute*), "get_Connect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebPermissionAttribute::set_Connect
// Il2CppName: set_Connect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebPermissionAttribute::*)(::StringW)>(&System::Net::WebPermissionAttribute::set_Connect)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebPermissionAttribute*), "set_Connect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebPermissionAttribute::get_Accept
// Il2CppName: get_Accept
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebPermissionAttribute::*)()>(&System::Net::WebPermissionAttribute::get_Accept)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebPermissionAttribute*), "get_Accept", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebPermissionAttribute::set_Accept
// Il2CppName: set_Accept
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebPermissionAttribute::*)(::StringW)>(&System::Net::WebPermissionAttribute::set_Accept)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebPermissionAttribute*), "set_Accept", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebPermissionAttribute::get_ConnectPattern
// Il2CppName: get_ConnectPattern
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebPermissionAttribute::*)()>(&System::Net::WebPermissionAttribute::get_ConnectPattern)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebPermissionAttribute*), "get_ConnectPattern", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebPermissionAttribute::set_ConnectPattern
// Il2CppName: set_ConnectPattern
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebPermissionAttribute::*)(::StringW)>(&System::Net::WebPermissionAttribute::set_ConnectPattern)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebPermissionAttribute*), "set_ConnectPattern", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebPermissionAttribute::get_AcceptPattern
// Il2CppName: get_AcceptPattern
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::WebPermissionAttribute::*)()>(&System::Net::WebPermissionAttribute::get_AcceptPattern)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebPermissionAttribute*), "get_AcceptPattern", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebPermissionAttribute::set_AcceptPattern
// Il2CppName: set_AcceptPattern
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebPermissionAttribute::*)(::StringW)>(&System::Net::WebPermissionAttribute::set_AcceptPattern)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebPermissionAttribute*), "set_AcceptPattern", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Net::WebPermissionAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebPermissionAttribute::CreatePermission
// Il2CppName: CreatePermission
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::IPermission* (System::Net::WebPermissionAttribute::*)()>(&System::Net::WebPermissionAttribute::CreatePermission)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebPermissionAttribute*), "CreatePermission", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
