// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.WebSockets.ManagedWebSocket
#include "System/Net/WebSockets/ManagedWebSocket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::WebSockets::ManagedWebSocket::Utf8MessageState);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebSockets::ManagedWebSocket::Utf8MessageState*, "System.Net.WebSockets", "ManagedWebSocket/Utf8MessageState");
// Type namespace: System.Net.WebSockets
namespace System::Net::WebSockets {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.WebSockets.ManagedWebSocket/System.Net.WebSockets.Utf8MessageState
  // [TokenAttribute] Offset: FFFFFFFF
  class ManagedWebSocket::Utf8MessageState : public ::Il2CppObject {
    public:
    public:
    // System.Boolean SequenceInProgress
    // Size: 0x1
    // Offset: 0x10
    bool SequenceInProgress;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: SequenceInProgress and: AdditionalBytesExpected
    char __padding0[0x3] = {};
    // System.Int32 AdditionalBytesExpected
    // Size: 0x4
    // Offset: 0x14
    int AdditionalBytesExpected;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 ExpectedValueMin
    // Size: 0x4
    // Offset: 0x18
    int ExpectedValueMin;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Int32 CurrentDecodeBits
    // Size: 0x4
    // Offset: 0x1C
    int CurrentDecodeBits;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: System.Boolean SequenceInProgress
    [[deprecated("Use field access instead!")]] bool& dyn_SequenceInProgress();
    // Get instance field reference: System.Int32 AdditionalBytesExpected
    [[deprecated("Use field access instead!")]] int& dyn_AdditionalBytesExpected();
    // Get instance field reference: System.Int32 ExpectedValueMin
    [[deprecated("Use field access instead!")]] int& dyn_ExpectedValueMin();
    // Get instance field reference: System.Int32 CurrentDecodeBits
    [[deprecated("Use field access instead!")]] int& dyn_CurrentDecodeBits();
    // public System.Void .ctor()
    // Offset: 0xDFBFFC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ManagedWebSocket::Utf8MessageState* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::ManagedWebSocket::Utf8MessageState::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ManagedWebSocket::Utf8MessageState*, creationType>()));
    }
  }; // System.Net.WebSockets.ManagedWebSocket/System.Net.WebSockets.Utf8MessageState
  #pragma pack(pop)
  static check_size<sizeof(ManagedWebSocket::Utf8MessageState), 28 + sizeof(int)> __System_Net_WebSockets_ManagedWebSocket_Utf8MessageStateSizeCheck;
  static_assert(sizeof(ManagedWebSocket::Utf8MessageState) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebSockets::ManagedWebSocket::Utf8MessageState::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
