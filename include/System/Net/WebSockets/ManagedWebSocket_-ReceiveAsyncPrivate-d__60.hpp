// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.WebSockets.ManagedWebSocket
#include "System/Net/WebSockets/ManagedWebSocket.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Runtime.CompilerServices.IAsyncStateMachine
#include "System/Runtime/CompilerServices/IAsyncStateMachine.hpp"
// Including type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
#include "System/Runtime/CompilerServices/AsyncTaskMethodBuilder_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.ArraySegment`1
#include "System/ArraySegment_1.hpp"
// Including type: System.Threading.CancellationTokenRegistration
#include "System/Threading/CancellationTokenRegistration.hpp"
// Including type: System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter
#include "System/Runtime/CompilerServices/ConfiguredTaskAwaitable.hpp"
// Including type: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter
#include "System/Runtime/CompilerServices/ConfiguredTaskAwaitable_1.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net::WebSockets
namespace System::Net::WebSockets {
  // Forward declaring type: WebSocketReceiveResult
  class WebSocketReceiveResult;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebSockets::ManagedWebSocket::$ReceiveAsyncPrivate$d__60, "System.Net.WebSockets", "ManagedWebSocket/<ReceiveAsyncPrivate>d__60");
// Type namespace: System.Net.WebSockets
namespace System::Net::WebSockets {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Net.WebSockets.ManagedWebSocket/System.Net.WebSockets.<ReceiveAsyncPrivate>d__60
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  struct ManagedWebSocket::$ReceiveAsyncPrivate$d__60/*, public ::System::ValueType, public ::System::Runtime::CompilerServices::IAsyncStateMachine*/ {
    public:
    public:
    // public System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x0
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Net.WebSockets.WebSocketReceiveResult> <>t__builder
    // Size: 0xFFFFFFFF
    // Offset: 0x8
    ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Net::WebSockets::WebSocketReceiveResult*> $$t__builder;
    // public System.Threading.CancellationToken cancellationToken
    // Size: 0x8
    // Offset: 0x20
    ::System::Threading::CancellationToken cancellationToken;
    // Field size check
    static_assert(sizeof(::System::Threading::CancellationToken) == 0x8);
    // public System.Net.WebSockets.ManagedWebSocket <>4__this
    // Size: 0x8
    // Offset: 0x28
    ::System::Net::WebSockets::ManagedWebSocket* $$4__this;
    // Field size check
    static_assert(sizeof(::System::Net::WebSockets::ManagedWebSocket*) == 0x8);
    // private System.Net.WebSockets.ManagedWebSocket/System.Net.WebSockets.MessageHeader <header>5__1
    // Size: 0x14
    // Offset: 0x30
    ::System::Net::WebSockets::ManagedWebSocket::MessageHeader $header$5__1;
    // Field size check
    static_assert(sizeof(::System::Net::WebSockets::ManagedWebSocket::MessageHeader) == 0x14);
    // public System.ArraySegment`1<System.Byte> payloadBuffer
    // Size: 0xFFFFFFFF
    // Offset: 0x48
    ::System::ArraySegment_1<uint8_t> payloadBuffer;
    // private System.Int32 <bytesToRead>5__2
    // Size: 0x4
    // Offset: 0x58
    int $bytesToRead$5__2;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 <bytesToCopy>5__3
    // Size: 0x4
    // Offset: 0x5C
    int $bytesToCopy$5__3;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Threading.CancellationTokenRegistration <registration>5__4
    // Size: 0xFFFFFFFF
    // Offset: 0x60
    ::System::Threading::CancellationTokenRegistration $registration$5__4;
    // private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
    // Size: 0x9
    // Offset: 0x78
    ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter $$u__1;
    // Field size check
    static_assert(sizeof(::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter) == 0x9);
    // private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Net.WebSockets.WebSocketReceiveResult> <>u__2
    // Size: 0xFFFFFFFF
    // Offset: 0x88
    typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::WebSockets::WebSocketReceiveResult*>::ConfiguredTaskAwaiter $$u__2;
    public:
    // Creating value type constructor for type: $ReceiveAsyncPrivate$d__60
    constexpr $ReceiveAsyncPrivate$d__60(int $$1__state_ = {}, ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Net::WebSockets::WebSocketReceiveResult*> $$t__builder_ = {}, ::System::Threading::CancellationToken cancellationToken_ = {}, ::System::Net::WebSockets::ManagedWebSocket* $$4__this_ = {}, ::System::Net::WebSockets::ManagedWebSocket::MessageHeader $header$5__1_ = {}, ::System::ArraySegment_1<uint8_t> payloadBuffer_ = {}, int $bytesToRead$5__2_ = {}, int $bytesToCopy$5__3_ = {}, ::System::Threading::CancellationTokenRegistration $registration$5__4_ = {}, ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter $$u__1_ = {}, typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::WebSockets::WebSocketReceiveResult*>::ConfiguredTaskAwaiter $$u__2_ = {}) noexcept : $$1__state{$$1__state_}, $$t__builder{$$t__builder_}, cancellationToken{cancellationToken_}, $$4__this{$$4__this_}, $header$5__1{$header$5__1_}, payloadBuffer{payloadBuffer_}, $bytesToRead$5__2{$bytesToRead$5__2_}, $bytesToCopy$5__3{$bytesToCopy$5__3_}, $registration$5__4{$registration$5__4_}, $$u__1{$$u__1_}, $$u__2{$$u__2_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::Runtime::CompilerServices::IAsyncStateMachine
    operator ::System::Runtime::CompilerServices::IAsyncStateMachine() noexcept {
      return *reinterpret_cast<::System::Runtime::CompilerServices::IAsyncStateMachine*>(this);
    }
    // Get instance field reference: public System.Int32 <>1__state
    [[deprecated("Use field access instead!")]] int& dyn_$$1__state();
    // Get instance field reference: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Net.WebSockets.WebSocketReceiveResult> <>t__builder
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Net::WebSockets::WebSocketReceiveResult*>& dyn_$$t__builder();
    // Get instance field reference: public System.Threading.CancellationToken cancellationToken
    [[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& dyn_cancellationToken();
    // Get instance field reference: public System.Net.WebSockets.ManagedWebSocket <>4__this
    [[deprecated("Use field access instead!")]] ::System::Net::WebSockets::ManagedWebSocket*& dyn_$$4__this();
    // Get instance field reference: private System.Net.WebSockets.ManagedWebSocket/System.Net.WebSockets.MessageHeader <header>5__1
    [[deprecated("Use field access instead!")]] ::System::Net::WebSockets::ManagedWebSocket::MessageHeader& dyn_$header$5__1();
    // Get instance field reference: public System.ArraySegment`1<System.Byte> payloadBuffer
    [[deprecated("Use field access instead!")]] ::System::ArraySegment_1<uint8_t>& dyn_payloadBuffer();
    // Get instance field reference: private System.Int32 <bytesToRead>5__2
    [[deprecated("Use field access instead!")]] int& dyn_$bytesToRead$5__2();
    // Get instance field reference: private System.Int32 <bytesToCopy>5__3
    [[deprecated("Use field access instead!")]] int& dyn_$bytesToCopy$5__3();
    // Get instance field reference: private System.Threading.CancellationTokenRegistration <registration>5__4
    [[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenRegistration& dyn_$registration$5__4();
    // Get instance field reference: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& dyn_$$u__1();
    // Get instance field reference: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Net.WebSockets.WebSocketReceiveResult> <>u__2
    [[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::WebSockets::WebSocketReceiveResult*>::ConfiguredTaskAwaiter& dyn_$$u__2();
    // private System.Void MoveNext()
    // Offset: 0xA44370
    void MoveNext();
    // private System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)
    // Offset: 0xA44378
    void SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine);
  }; // System.Net.WebSockets.ManagedWebSocket/System.Net.WebSockets.<ReceiveAsyncPrivate>d__60
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebSockets::ManagedWebSocket::$ReceiveAsyncPrivate$d__60::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebSockets::ManagedWebSocket::$ReceiveAsyncPrivate$d__60::*)()>(&System::Net::WebSockets::ManagedWebSocket::$ReceiveAsyncPrivate$d__60::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::ManagedWebSocket::$ReceiveAsyncPrivate$d__60), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::ManagedWebSocket::$ReceiveAsyncPrivate$d__60::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebSockets::ManagedWebSocket::$ReceiveAsyncPrivate$d__60::*)(::System::Runtime::CompilerServices::IAsyncStateMachine*)>(&System::Net::WebSockets::ManagedWebSocket::$ReceiveAsyncPrivate$d__60::SetStateMachine)> {
  static const MethodInfo* get() {
    static auto* stateMachine = &::il2cpp_utils::GetClassFromName("System.Runtime.CompilerServices", "IAsyncStateMachine")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::ManagedWebSocket::$ReceiveAsyncPrivate$d__60), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateMachine});
  }
};
