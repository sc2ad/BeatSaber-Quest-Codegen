// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.WebSockets.WebSocketHandle
#include "System/Net/WebSockets/WebSocketHandle.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Runtime.CompilerServices.IAsyncStateMachine
#include "System/Runtime/CompilerServices/IAsyncStateMachine.hpp"
// Including type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
#include "System/Runtime/CompilerServices/AsyncTaskMethodBuilder.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
// Including type: System.Threading.CancellationTokenRegistration
#include "System/Threading/CancellationTokenRegistration.hpp"
// Including type: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter
#include "System/Runtime/CompilerServices/ConfiguredTaskAwaitable_1.hpp"
// Including type: System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter
#include "System/Runtime/CompilerServices/ConfiguredTaskAwaitable.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Uri
  class Uri;
}
// Forward declaring namespace: System::Net::WebSockets
namespace System::Net::WebSockets {
  // Forward declaring type: ClientWebSocketOptions
  class ClientWebSocketOptions;
}
// Forward declaring namespace: System::Net::Security
namespace System::Net::Security {
  // Forward declaring type: SslStream
  class SslStream;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Forward declaring namespace: System::Net::Sockets
namespace System::Net::Sockets {
  // Forward declaring type: Socket
  class Socket;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebSockets::WebSocketHandle::$ConnectAsyncCore$d__24, "System.Net.WebSockets", "WebSocketHandle/<ConnectAsyncCore>d__24");
// Type namespace: System.Net.WebSockets
namespace System::Net::WebSockets {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Net.WebSockets.WebSocketHandle/System.Net.WebSockets.<ConnectAsyncCore>d__24
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  struct WebSocketHandle::$ConnectAsyncCore$d__24/*, public ::System::ValueType, public ::System::Runtime::CompilerServices::IAsyncStateMachine*/ {
    public:
    public:
    // public System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x0
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
    // Size: 0xFFFFFFFF
    // Offset: 0x8
    ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder $$t__builder;
    // public System.Threading.CancellationToken cancellationToken
    // Size: 0x8
    // Offset: 0x20
    ::System::Threading::CancellationToken cancellationToken;
    // Field size check
    static_assert(sizeof(::System::Threading::CancellationToken) == 0x8);
    // public System.Net.WebSockets.WebSocketHandle <>4__this
    // Size: 0x8
    // Offset: 0x28
    ::System::Net::WebSockets::WebSocketHandle* $$4__this;
    // Field size check
    static_assert(sizeof(::System::Net::WebSockets::WebSocketHandle*) == 0x8);
    // public System.Uri uri
    // Size: 0x8
    // Offset: 0x30
    ::System::Uri* uri;
    // Field size check
    static_assert(sizeof(::System::Uri*) == 0x8);
    // public System.Net.WebSockets.ClientWebSocketOptions options
    // Size: 0x8
    // Offset: 0x38
    ::System::Net::WebSockets::ClientWebSocketOptions* options;
    // Field size check
    static_assert(sizeof(::System::Net::WebSockets::ClientWebSocketOptions*) == 0x8);
    // private System.Net.Security.SslStream <sslStream>5__1
    // Size: 0x8
    // Offset: 0x40
    ::System::Net::Security::SslStream* $sslStream$5__1;
    // Field size check
    static_assert(sizeof(::System::Net::Security::SslStream*) == 0x8);
    // private System.IO.Stream <stream>5__2
    // Size: 0x8
    // Offset: 0x48
    ::System::IO::Stream* $stream$5__2;
    // Field size check
    static_assert(sizeof(::System::IO::Stream*) == 0x8);
    // private System.Collections.Generic.KeyValuePair`2<System.String,System.String> <secKeyAndSecWebSocketAccept>5__3
    // Size: 0xFFFFFFFF
    // Offset: 0x50
    ::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW> $secKeyAndSecWebSocketAccept$5__3;
    // private System.Threading.CancellationTokenRegistration <registration>5__4
    // Size: 0xFFFFFFFF
    // Offset: 0x60
    ::System::Threading::CancellationTokenRegistration $registration$5__4;
    // private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Net.Sockets.Socket> <>u__1
    // Size: 0xFFFFFFFF
    // Offset: 0x78
    typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::Sockets::Socket*>::ConfiguredTaskAwaiter $$u__1;
    // private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__2
    // Size: 0x9
    // Offset: 0x88
    ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter $$u__2;
    // Field size check
    static_assert(sizeof(::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter) == 0x9);
    // private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.String> <>u__3
    // Size: 0xFFFFFFFF
    // Offset: 0x98
    typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::StringW>::ConfiguredTaskAwaiter $$u__3;
    public:
    // Creating value type constructor for type: $ConnectAsyncCore$d__24
    constexpr $ConnectAsyncCore$d__24(int $$1__state_ = {}, ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder $$t__builder_ = {}, ::System::Threading::CancellationToken cancellationToken_ = {}, ::System::Net::WebSockets::WebSocketHandle* $$4__this_ = {}, ::System::Uri* uri_ = {}, ::System::Net::WebSockets::ClientWebSocketOptions* options_ = {}, ::System::Net::Security::SslStream* $sslStream$5__1_ = {}, ::System::IO::Stream* $stream$5__2_ = {}, ::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW> $secKeyAndSecWebSocketAccept$5__3_ = {}, ::System::Threading::CancellationTokenRegistration $registration$5__4_ = {}, typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::Sockets::Socket*>::ConfiguredTaskAwaiter $$u__1_ = {}, ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter $$u__2_ = {}, typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::StringW>::ConfiguredTaskAwaiter $$u__3_ = {}) noexcept : $$1__state{$$1__state_}, $$t__builder{$$t__builder_}, cancellationToken{cancellationToken_}, $$4__this{$$4__this_}, uri{uri_}, options{options_}, $sslStream$5__1{$sslStream$5__1_}, $stream$5__2{$stream$5__2_}, $secKeyAndSecWebSocketAccept$5__3{$secKeyAndSecWebSocketAccept$5__3_}, $registration$5__4{$registration$5__4_}, $$u__1{$$u__1_}, $$u__2{$$u__2_}, $$u__3{$$u__3_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::Runtime::CompilerServices::IAsyncStateMachine
    operator ::System::Runtime::CompilerServices::IAsyncStateMachine() noexcept {
      return *reinterpret_cast<::System::Runtime::CompilerServices::IAsyncStateMachine*>(this);
    }
    // Get instance field reference: public System.Int32 <>1__state
    [[deprecated("Use field access instead!")]] int& dyn_$$1__state();
    // Get instance field reference: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& dyn_$$t__builder();
    // Get instance field reference: public System.Threading.CancellationToken cancellationToken
    [[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& dyn_cancellationToken();
    // Get instance field reference: public System.Net.WebSockets.WebSocketHandle <>4__this
    [[deprecated("Use field access instead!")]] ::System::Net::WebSockets::WebSocketHandle*& dyn_$$4__this();
    // Get instance field reference: public System.Uri uri
    [[deprecated("Use field access instead!")]] ::System::Uri*& dyn_uri();
    // Get instance field reference: public System.Net.WebSockets.ClientWebSocketOptions options
    [[deprecated("Use field access instead!")]] ::System::Net::WebSockets::ClientWebSocketOptions*& dyn_options();
    // Get instance field reference: private System.Net.Security.SslStream <sslStream>5__1
    [[deprecated("Use field access instead!")]] ::System::Net::Security::SslStream*& dyn_$sslStream$5__1();
    // Get instance field reference: private System.IO.Stream <stream>5__2
    [[deprecated("Use field access instead!")]] ::System::IO::Stream*& dyn_$stream$5__2();
    // Get instance field reference: private System.Collections.Generic.KeyValuePair`2<System.String,System.String> <secKeyAndSecWebSocketAccept>5__3
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>& dyn_$secKeyAndSecWebSocketAccept$5__3();
    // Get instance field reference: private System.Threading.CancellationTokenRegistration <registration>5__4
    [[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenRegistration& dyn_$registration$5__4();
    // Get instance field reference: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Net.Sockets.Socket> <>u__1
    [[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::Sockets::Socket*>::ConfiguredTaskAwaiter& dyn_$$u__1();
    // Get instance field reference: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__2
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& dyn_$$u__2();
    // Get instance field reference: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.String> <>u__3
    [[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::StringW>::ConfiguredTaskAwaiter& dyn_$$u__3();
    // private System.Void MoveNext()
    // Offset: 0xA44444
    void MoveNext();
    // private System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)
    // Offset: 0xA4444C
    void SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine);
  }; // System.Net.WebSockets.WebSocketHandle/System.Net.WebSockets.<ConnectAsyncCore>d__24
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketHandle::$ConnectAsyncCore$d__24::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebSockets::WebSocketHandle::$ConnectAsyncCore$d__24::*)()>(&System::Net::WebSockets::WebSocketHandle::$ConnectAsyncCore$d__24::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::WebSocketHandle::$ConnectAsyncCore$d__24), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketHandle::$ConnectAsyncCore$d__24::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebSockets::WebSocketHandle::$ConnectAsyncCore$d__24::*)(::System::Runtime::CompilerServices::IAsyncStateMachine*)>(&System::Net::WebSockets::WebSocketHandle::$ConnectAsyncCore$d__24::SetStateMachine)> {
  static const MethodInfo* get() {
    static auto* stateMachine = &::il2cpp_utils::GetClassFromName("System.Runtime.CompilerServices", "IAsyncStateMachine")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::WebSocketHandle::$ConnectAsyncCore$d__24), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stateMachine});
  }
};
