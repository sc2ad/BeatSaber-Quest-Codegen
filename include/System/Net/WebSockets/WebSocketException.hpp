// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ComponentModel.Win32Exception
#include "System/ComponentModel/Win32Exception.hpp"
// Including type: System.Net.WebSockets.WebSocketError
#include "System/Net/WebSockets/WebSocketError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: Exception because it is already included!
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
  // Skipping declaration: StreamingContext because it is already included!
}
// Completed forward declares
// Type namespace: System.Net.WebSockets
namespace System::Net::WebSockets {
  // Forward declaring type: WebSocketException
  class WebSocketException;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::WebSockets::WebSocketException);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebSockets::WebSocketException*, "System.Net.WebSockets", "WebSocketException");
// Type namespace: System.Net.WebSockets
namespace System::Net::WebSockets {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.WebSockets.WebSocketException
  // [TokenAttribute] Offset: FFFFFFFF
  class WebSocketException : public ::System::ComponentModel::Win32Exception {
    public:
    public:
    // private readonly System.Net.WebSockets.WebSocketError _webSocketErrorCode
    // Size: 0x4
    // Offset: 0x8C
    ::System::Net::WebSockets::WebSocketError webSocketErrorCode;
    // Field size check
    static_assert(sizeof(::System::Net::WebSockets::WebSocketError) == 0x4);
    public:
    // Deleting conversion operator: operator int
    constexpr operator int() const noexcept = delete;
    // Get instance field reference: private readonly System.Net.WebSockets.WebSocketError _webSocketErrorCode
    [[deprecated("Use field access instead!")]] ::System::Net::WebSockets::WebSocketError& dyn__webSocketErrorCode();
    // public System.Void .ctor(System.Net.WebSockets.WebSocketError error)
    // Offset: 0xDFF6CC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebSocketException* New_ctor(::System::Net::WebSockets::WebSocketError error) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebSocketException*, creationType>(error)));
    }
    // public System.Void .ctor(System.Net.WebSockets.WebSocketError error, System.String message)
    // Offset: 0xE02328
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebSocketException* New_ctor(::System::Net::WebSockets::WebSocketError error, ::StringW message) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebSocketException*, creationType>(error, message)));
    }
    // public System.Void .ctor(System.Net.WebSockets.WebSocketError error, System.Exception innerException)
    // Offset: 0xDFD878
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebSocketException* New_ctor(::System::Net::WebSockets::WebSocketError error, ::System::Exception* innerException) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebSocketException*, creationType>(error, innerException)));
    }
    // public System.Void .ctor(System.Net.WebSockets.WebSocketError error, System.String message, System.Exception innerException)
    // Offset: 0xE023AC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebSocketException* New_ctor(::System::Net::WebSockets::WebSocketError error, ::StringW message, ::System::Exception* innerException) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebSocketException*, creationType>(error, message, innerException)));
    }
    // static private System.String GetErrorMessage(System.Net.WebSockets.WebSocketError error)
    // Offset: 0xE021F0
    static ::StringW GetErrorMessage(::System::Net::WebSockets::WebSocketError error);
    // private System.Void SetErrorCodeOnError(System.Int32 nativeError)
    // Offset: 0xE0244C
    void SetErrorCodeOnError(int nativeError);
    // static private System.Boolean Succeeded(System.Int32 hr)
    // Offset: 0xE02440
    static bool Succeeded(int hr);
    // public override System.Int32 get_ErrorCode()
    // Offset: 0xE0255C
    // Implemented from: System.Runtime.InteropServices.ExternalException
    // Base method: System.Int32 ExternalException::get_ErrorCode()
    int get_ErrorCode();
    // public System.Void .ctor()
    // Offset: 0xE020E4
    // Implemented from: System.ComponentModel.Win32Exception
    // Base method: System.Void Win32Exception::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebSocketException* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebSocketException*, creationType>()));
    }
    // public System.Void .ctor(System.Int32 nativeError)
    // Offset: 0xE02154
    // Implemented from: System.ComponentModel.Win32Exception
    // Base method: System.Void Win32Exception::.ctor(System.Int32 nativeError)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebSocketException* New_ctor(int nativeError) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebSocketException*, creationType>(nativeError)));
    }
    // public System.Void .ctor(System.String message)
    // Offset: 0xE0245C
    // Implemented from: System.ComponentModel.Win32Exception
    // Base method: System.Void Win32Exception::.ctor(System.String message)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebSocketException* New_ctor(::StringW message) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebSocketException*, creationType>(message)));
    }
    // public System.Void .ctor(System.String message, System.Exception innerException)
    // Offset: 0xE024D4
    // Implemented from: System.ComponentModel.Win32Exception
    // Base method: System.Void Win32Exception::.ctor(System.String message, System.Exception innerException)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebSocketException* New_ctor(::StringW message, ::System::Exception* innerException) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebSocketException*, creationType>(message, innerException)));
    }
    // public override System.Void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0xE02554
    // Implemented from: System.ComponentModel.Win32Exception
    // Base method: System.Void Win32Exception::GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    void GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context);
  }; // System.Net.WebSockets.WebSocketException
  #pragma pack(pop)
  static check_size<sizeof(WebSocketException), 140 + sizeof(::System::Net::WebSockets::WebSocketError)> __System_Net_WebSockets_WebSocketExceptionSizeCheck;
  static_assert(sizeof(WebSocketException) == 0x90);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketException::GetErrorMessage
// Il2CppName: GetErrorMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::Net::WebSockets::WebSocketError)>(&System::Net::WebSockets::WebSocketException::GetErrorMessage)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("System.Net.WebSockets", "WebSocketError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::WebSocketException*), "GetErrorMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketException::SetErrorCodeOnError
// Il2CppName: SetErrorCodeOnError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebSockets::WebSocketException::*)(int)>(&System::Net::WebSockets::WebSocketException::SetErrorCodeOnError)> {
  static const MethodInfo* get() {
    static auto* nativeError = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::WebSocketException*), "SetErrorCodeOnError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nativeError});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketException::Succeeded
// Il2CppName: Succeeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&System::Net::WebSockets::WebSocketException::Succeeded)> {
  static const MethodInfo* get() {
    static auto* hr = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::WebSocketException*), "Succeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hr});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketException::get_ErrorCode
// Il2CppName: get_ErrorCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Net::WebSockets::WebSocketException::*)()>(&System::Net::WebSockets::WebSocketException::get_ErrorCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::WebSocketException*), "get_ErrorCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketException::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::WebSockets::WebSocketException::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Net::WebSockets::WebSocketException::GetObjectData)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::WebSocketException*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context});
  }
};
