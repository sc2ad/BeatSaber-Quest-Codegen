// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.WebSockets.WebSocketState
#include "System/Net/WebSockets/WebSocketState.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net::WebSockets
namespace System::Net::WebSockets {
  // Forward declaring type: WebSocketCloseStatus
  struct WebSocketCloseStatus;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ArraySegment`1<T>
  template<typename T>
  struct ArraySegment_1;
}
// Completed forward declares
// Type namespace: System.Net.WebSockets
namespace System::Net::WebSockets {
  // Forward declaring type: WebSocketValidate
  class WebSocketValidate;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::WebSockets::WebSocketValidate);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebSockets::WebSocketValidate*, "System.Net.WebSockets", "WebSocketValidate");
// Type namespace: System.Net.WebSockets
namespace System::Net::WebSockets {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.WebSockets.WebSocketValidate
  // [TokenAttribute] Offset: FFFFFFFF
  class WebSocketValidate : public ::Il2CppObject {
    public:
    // static System.Void ThrowIfInvalidState(System.Net.WebSockets.WebSocketState currentState, System.Boolean isDisposed, System.Net.WebSockets.WebSocketState[] validStates)
    // Offset: 0xDFC650
    static void ThrowIfInvalidState(::System::Net::WebSockets::WebSocketState currentState, bool isDisposed, ::ArrayW<::System::Net::WebSockets::WebSocketState> validStates);
    // static System.Void ValidateSubprotocol(System.String subProtocol)
    // Offset: 0xDFB8C8
    static void ValidateSubprotocol(::StringW subProtocol);
    // static System.Void ValidateCloseStatus(System.Net.WebSockets.WebSocketCloseStatus closeStatus, System.String statusDescription)
    // Offset: 0xDFCE38
    static void ValidateCloseStatus(::System::Net::WebSockets::WebSocketCloseStatus closeStatus, ::StringW statusDescription);
    // static System.Void ValidateArraySegment(System.ArraySegment`1<System.Byte> arraySegment, System.String parameterName)
    // Offset: 0xDFC538
    static void ValidateArraySegment(::System::ArraySegment_1<uint8_t> arraySegment, ::StringW parameterName);
  }; // System.Net.WebSockets.WebSocketValidate
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketValidate::ThrowIfInvalidState
// Il2CppName: ThrowIfInvalidState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Net::WebSockets::WebSocketState, bool, ::ArrayW<::System::Net::WebSockets::WebSocketState>)>(&System::Net::WebSockets::WebSocketValidate::ThrowIfInvalidState)> {
  static const MethodInfo* get() {
    static auto* currentState = &::il2cpp_utils::GetClassFromName("System.Net.WebSockets", "WebSocketState")->byval_arg;
    static auto* isDisposed = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* validStates = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Net.WebSockets", "WebSocketState"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::WebSocketValidate*), "ThrowIfInvalidState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{currentState, isDisposed, validStates});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketValidate::ValidateSubprotocol
// Il2CppName: ValidateSubprotocol
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&System::Net::WebSockets::WebSocketValidate::ValidateSubprotocol)> {
  static const MethodInfo* get() {
    static auto* subProtocol = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::WebSocketValidate*), "ValidateSubprotocol", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{subProtocol});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketValidate::ValidateCloseStatus
// Il2CppName: ValidateCloseStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Net::WebSockets::WebSocketCloseStatus, ::StringW)>(&System::Net::WebSockets::WebSocketValidate::ValidateCloseStatus)> {
  static const MethodInfo* get() {
    static auto* closeStatus = &::il2cpp_utils::GetClassFromName("System.Net.WebSockets", "WebSocketCloseStatus")->byval_arg;
    static auto* statusDescription = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::WebSocketValidate*), "ValidateCloseStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{closeStatus, statusDescription});
  }
};
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketValidate::ValidateArraySegment
// Il2CppName: ValidateArraySegment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::ArraySegment_1<uint8_t>, ::StringW)>(&System::Net::WebSockets::WebSocketValidate::ValidateArraySegment)> {
  static const MethodInfo* get() {
    static auto* arraySegment = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ArraySegment`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Byte")})->byval_arg;
    static auto* parameterName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::WebSocketValidate*), "ValidateArraySegment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arraySegment, parameterName});
  }
};
