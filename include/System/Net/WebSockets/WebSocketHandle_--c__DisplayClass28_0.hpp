// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.WebSockets.WebSocketHandle
#include "System/Net/WebSockets/WebSocketHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::WebSockets::WebSocketHandle::$$c__DisplayClass28_0);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::WebSockets::WebSocketHandle::$$c__DisplayClass28_0*, "System.Net.WebSockets", "WebSocketHandle/<>c__DisplayClass28_0");
// Type namespace: System.Net.WebSockets
namespace System::Net::WebSockets {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.WebSockets.WebSocketHandle/System.Net.WebSockets.<>c__DisplayClass28_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class WebSocketHandle::$$c__DisplayClass28_0 : public ::Il2CppObject {
    public:
    public:
    // public System.String headerValue
    // Size: 0x8
    // Offset: 0x10
    ::StringW headerValue;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return headerValue;
    }
    // Get instance field reference: public System.String headerValue
    [[deprecated("Use field access instead!")]] ::StringW& dyn_headerValue();
    // public System.Void .ctor()
    // Offset: 0xE03610
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebSocketHandle::$$c__DisplayClass28_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebSockets::WebSocketHandle::$$c__DisplayClass28_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebSocketHandle::$$c__DisplayClass28_0*, creationType>()));
    }
    // System.Boolean <ParseAndValidateConnectResponseAsync>b__0(System.String requested)
    // Offset: 0xE03618
    bool $ParseAndValidateConnectResponseAsync$b__0(::StringW requested);
  }; // System.Net.WebSockets.WebSocketHandle/System.Net.WebSockets.<>c__DisplayClass28_0
  #pragma pack(pop)
  static check_size<sizeof(WebSocketHandle::$$c__DisplayClass28_0), 16 + sizeof(::StringW)> __System_Net_WebSockets_WebSocketHandle_$$c__DisplayClass28_0SizeCheck;
  static_assert(sizeof(WebSocketHandle::$$c__DisplayClass28_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketHandle::$$c__DisplayClass28_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::WebSockets::WebSocketHandle::$$c__DisplayClass28_0::$ParseAndValidateConnectResponseAsync$b__0
// Il2CppName: <ParseAndValidateConnectResponseAsync>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::WebSockets::WebSocketHandle::$$c__DisplayClass28_0::*)(::StringW)>(&System::Net::WebSockets::WebSocketHandle::$$c__DisplayClass28_0::$ParseAndValidateConnectResponseAsync$b__0)> {
  static const MethodInfo* get() {
    static auto* requested = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::WebSockets::WebSocketHandle::$$c__DisplayClass28_0*), "<ParseAndValidateConnectResponseAsync>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{requested});
  }
};
