// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: System.Net.Mime
namespace System::Net::Mime {
  // Forward declaring type: EncodedStreamFactory
  class EncodedStreamFactory;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::Mime::EncodedStreamFactory);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::Mime::EncodedStreamFactory*, "System.Net.Mime", "EncodedStreamFactory");
// Type namespace: System.Net.Mime
namespace System::Net::Mime {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.Mime.EncodedStreamFactory
  // [TokenAttribute] Offset: FFFFFFFF
  class EncodedStreamFactory : public ::Il2CppObject {
    public:
    // static System.Int32 get_DefaultMaxLineLength()
    // Offset: 0xF69718
    static int get_DefaultMaxLineLength();
  }; // System.Net.Mime.EncodedStreamFactory
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::Mime::EncodedStreamFactory::get_DefaultMaxLineLength
// Il2CppName: get_DefaultMaxLineLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&System::Net::Mime::EncodedStreamFactory::get_DefaultMaxLineLength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::Mime::EncodedStreamFactory*), "get_DefaultMaxLineLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
