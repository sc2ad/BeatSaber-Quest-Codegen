// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: BaseLoggingObject
  class BaseLoggingObject;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::BaseLoggingObject);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::BaseLoggingObject*, "System.Net", "BaseLoggingObject");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.BaseLoggingObject
  // [TokenAttribute] Offset: FFFFFFFF
  class BaseLoggingObject : public ::Il2CppObject {
    public:
    // System.Void .ctor()
    // Offset: 0x12F9724
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BaseLoggingObject* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BaseLoggingObject::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BaseLoggingObject*, creationType>()));
    }
    // System.Void EnterFunc(System.String funcname)
    // Offset: 0x12F972C
    void EnterFunc(::StringW funcname);
    // System.Void LeaveFunc(System.String funcname)
    // Offset: 0x12F9730
    void LeaveFunc(::StringW funcname);
    // System.Void DumpArrayToConsole()
    // Offset: 0x12F9734
    void DumpArrayToConsole();
    // System.Void PrintLine(System.String msg)
    // Offset: 0x12F9738
    void PrintLine(::StringW msg);
    // System.Void DumpArray(System.Boolean shouldClose)
    // Offset: 0x12F973C
    void DumpArray(bool shouldClose);
    // System.Void DumpArrayToFile(System.Boolean shouldClose)
    // Offset: 0x12F9740
    void DumpArrayToFile(bool shouldClose);
    // System.Void Flush()
    // Offset: 0x12F9744
    void Flush();
    // System.Void Flush(System.Boolean close)
    // Offset: 0x12F9748
    void Flush(bool close);
    // System.Void LoggingMonitorTick()
    // Offset: 0x12F974C
    void LoggingMonitorTick();
    // System.Void Dump(System.Byte[] buffer)
    // Offset: 0x12F9750
    void Dump(::ArrayW<uint8_t> buffer);
    // System.Void Dump(System.Byte[] buffer, System.Int32 length)
    // Offset: 0x12F9754
    void Dump(::ArrayW<uint8_t> buffer, int length);
    // System.Void Dump(System.Byte[] buffer, System.Int32 offset, System.Int32 length)
    // Offset: 0x12F9758
    void Dump(::ArrayW<uint8_t> buffer, int offset, int length);
    // System.Void Dump(System.IntPtr pBuffer, System.Int32 offset, System.Int32 length)
    // Offset: 0x12F975C
    void Dump(::System::IntPtr pBuffer, int offset, int length);
  }; // System.Net.BaseLoggingObject
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::BaseLoggingObject::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Net::BaseLoggingObject::EnterFunc
// Il2CppName: EnterFunc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::BaseLoggingObject::*)(::StringW)>(&System::Net::BaseLoggingObject::EnterFunc)> {
  static const MethodInfo* get() {
    static auto* funcname = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::BaseLoggingObject*), "EnterFunc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{funcname});
  }
};
// Writing MetadataGetter for method: System::Net::BaseLoggingObject::LeaveFunc
// Il2CppName: LeaveFunc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::BaseLoggingObject::*)(::StringW)>(&System::Net::BaseLoggingObject::LeaveFunc)> {
  static const MethodInfo* get() {
    static auto* funcname = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::BaseLoggingObject*), "LeaveFunc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{funcname});
  }
};
// Writing MetadataGetter for method: System::Net::BaseLoggingObject::DumpArrayToConsole
// Il2CppName: DumpArrayToConsole
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::BaseLoggingObject::*)()>(&System::Net::BaseLoggingObject::DumpArrayToConsole)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::BaseLoggingObject*), "DumpArrayToConsole", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::BaseLoggingObject::PrintLine
// Il2CppName: PrintLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::BaseLoggingObject::*)(::StringW)>(&System::Net::BaseLoggingObject::PrintLine)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::BaseLoggingObject*), "PrintLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: System::Net::BaseLoggingObject::DumpArray
// Il2CppName: DumpArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::BaseLoggingObject::*)(bool)>(&System::Net::BaseLoggingObject::DumpArray)> {
  static const MethodInfo* get() {
    static auto* shouldClose = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::BaseLoggingObject*), "DumpArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shouldClose});
  }
};
// Writing MetadataGetter for method: System::Net::BaseLoggingObject::DumpArrayToFile
// Il2CppName: DumpArrayToFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::BaseLoggingObject::*)(bool)>(&System::Net::BaseLoggingObject::DumpArrayToFile)> {
  static const MethodInfo* get() {
    static auto* shouldClose = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::BaseLoggingObject*), "DumpArrayToFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shouldClose});
  }
};
// Writing MetadataGetter for method: System::Net::BaseLoggingObject::Flush
// Il2CppName: Flush
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::BaseLoggingObject::*)()>(&System::Net::BaseLoggingObject::Flush)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::BaseLoggingObject*), "Flush", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::BaseLoggingObject::Flush
// Il2CppName: Flush
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::BaseLoggingObject::*)(bool)>(&System::Net::BaseLoggingObject::Flush)> {
  static const MethodInfo* get() {
    static auto* close = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::BaseLoggingObject*), "Flush", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{close});
  }
};
// Writing MetadataGetter for method: System::Net::BaseLoggingObject::LoggingMonitorTick
// Il2CppName: LoggingMonitorTick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::BaseLoggingObject::*)()>(&System::Net::BaseLoggingObject::LoggingMonitorTick)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::BaseLoggingObject*), "LoggingMonitorTick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::BaseLoggingObject::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::BaseLoggingObject::*)(::ArrayW<uint8_t>)>(&System::Net::BaseLoggingObject::Dump)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::BaseLoggingObject*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer});
  }
};
// Writing MetadataGetter for method: System::Net::BaseLoggingObject::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::BaseLoggingObject::*)(::ArrayW<uint8_t>, int)>(&System::Net::BaseLoggingObject::Dump)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::BaseLoggingObject*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, length});
  }
};
// Writing MetadataGetter for method: System::Net::BaseLoggingObject::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::BaseLoggingObject::*)(::ArrayW<uint8_t>, int, int)>(&System::Net::BaseLoggingObject::Dump)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::BaseLoggingObject*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, offset, length});
  }
};
// Writing MetadataGetter for method: System::Net::BaseLoggingObject::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::BaseLoggingObject::*)(::System::IntPtr, int, int)>(&System::Net::BaseLoggingObject::Dump)> {
  static const MethodInfo* get() {
    static auto* pBuffer = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::BaseLoggingObject*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pBuffer, offset, length});
  }
};
