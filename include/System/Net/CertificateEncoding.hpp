// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: CertificateEncoding
  struct CertificateEncoding;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Net::CertificateEncoding, "System.Net", "CertificateEncoding");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.CertificateEncoding
  // [TokenAttribute] Offset: FFFFFFFF
  struct CertificateEncoding/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: CertificateEncoding
    constexpr CertificateEncoding(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Net.CertificateEncoding Zero
    static constexpr const int Zero = 0;
    // Get static field: static public System.Net.CertificateEncoding Zero
    static ::System::Net::CertificateEncoding _get_Zero();
    // Set static field: static public System.Net.CertificateEncoding Zero
    static void _set_Zero(::System::Net::CertificateEncoding value);
    // static field const value: static public System.Net.CertificateEncoding X509AsnEncoding
    static constexpr const int X509AsnEncoding = 1;
    // Get static field: static public System.Net.CertificateEncoding X509AsnEncoding
    static ::System::Net::CertificateEncoding _get_X509AsnEncoding();
    // Set static field: static public System.Net.CertificateEncoding X509AsnEncoding
    static void _set_X509AsnEncoding(::System::Net::CertificateEncoding value);
    // static field const value: static public System.Net.CertificateEncoding X509NdrEncoding
    static constexpr const int X509NdrEncoding = 2;
    // Get static field: static public System.Net.CertificateEncoding X509NdrEncoding
    static ::System::Net::CertificateEncoding _get_X509NdrEncoding();
    // Set static field: static public System.Net.CertificateEncoding X509NdrEncoding
    static void _set_X509NdrEncoding(::System::Net::CertificateEncoding value);
    // static field const value: static public System.Net.CertificateEncoding Pkcs7AsnEncoding
    static constexpr const int Pkcs7AsnEncoding = 65536;
    // Get static field: static public System.Net.CertificateEncoding Pkcs7AsnEncoding
    static ::System::Net::CertificateEncoding _get_Pkcs7AsnEncoding();
    // Set static field: static public System.Net.CertificateEncoding Pkcs7AsnEncoding
    static void _set_Pkcs7AsnEncoding(::System::Net::CertificateEncoding value);
    // static field const value: static public System.Net.CertificateEncoding Pkcs7NdrEncoding
    static constexpr const int Pkcs7NdrEncoding = 131072;
    // Get static field: static public System.Net.CertificateEncoding Pkcs7NdrEncoding
    static ::System::Net::CertificateEncoding _get_Pkcs7NdrEncoding();
    // Set static field: static public System.Net.CertificateEncoding Pkcs7NdrEncoding
    static void _set_Pkcs7NdrEncoding(::System::Net::CertificateEncoding value);
    // static field const value: static public System.Net.CertificateEncoding AnyAsnEncoding
    static constexpr const int AnyAsnEncoding = 65537;
    // Get static field: static public System.Net.CertificateEncoding AnyAsnEncoding
    static ::System::Net::CertificateEncoding _get_AnyAsnEncoding();
    // Set static field: static public System.Net.CertificateEncoding AnyAsnEncoding
    static void _set_AnyAsnEncoding(::System::Net::CertificateEncoding value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // System.Net.CertificateEncoding
  #pragma pack(pop)
  static check_size<sizeof(CertificateEncoding), 0 + sizeof(int)> __System_Net_CertificateEncodingSizeCheck;
  static_assert(sizeof(CertificateEncoding) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
