// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.ScatterGatherBuffers
#include "System/Net/ScatterGatherBuffers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::ScatterGatherBuffers::MemoryChunk);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::ScatterGatherBuffers::MemoryChunk*, "System.Net", "ScatterGatherBuffers/MemoryChunk");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.ScatterGatherBuffers/System.Net.MemoryChunk
  // [TokenAttribute] Offset: FFFFFFFF
  class ScatterGatherBuffers::MemoryChunk : public ::Il2CppObject {
    public:
    public:
    // System.Byte[] Buffer
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<uint8_t> Buffer;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // System.Int32 FreeOffset
    // Size: 0x4
    // Offset: 0x18
    int FreeOffset;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: FreeOffset and: Next
    char __padding1[0x4] = {};
    // System.Net.ScatterGatherBuffers/System.Net.MemoryChunk Next
    // Size: 0x8
    // Offset: 0x20
    ::System::Net::ScatterGatherBuffers::MemoryChunk* Next;
    // Field size check
    static_assert(sizeof(::System::Net::ScatterGatherBuffers::MemoryChunk*) == 0x8);
    public:
    // Get instance field reference: System.Byte[] Buffer
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_Buffer();
    // Get instance field reference: System.Int32 FreeOffset
    [[deprecated("Use field access instead!")]] int& dyn_FreeOffset();
    // Get instance field reference: System.Net.ScatterGatherBuffers/System.Net.MemoryChunk Next
    [[deprecated("Use field access instead!")]] ::System::Net::ScatterGatherBuffers::MemoryChunk*& dyn_Next();
    // System.Void .ctor(System.Int32 bufferSize)
    // Offset: 0xF742F8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ScatterGatherBuffers::MemoryChunk* New_ctor(int bufferSize) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ScatterGatherBuffers::MemoryChunk::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ScatterGatherBuffers::MemoryChunk*, creationType>(bufferSize)));
    }
  }; // System.Net.ScatterGatherBuffers/System.Net.MemoryChunk
  #pragma pack(pop)
  static check_size<sizeof(ScatterGatherBuffers::MemoryChunk), 32 + sizeof(::System::Net::ScatterGatherBuffers::MemoryChunk*)> __System_Net_ScatterGatherBuffers_MemoryChunkSizeCheck;
  static_assert(sizeof(ScatterGatherBuffers::MemoryChunk) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::ScatterGatherBuffers::MemoryChunk::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
