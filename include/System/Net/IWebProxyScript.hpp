// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Uri
  class Uri;
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System.Net
namespace System::Net {
  // Forward declaring type: IWebProxyScript
  class IWebProxyScript;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Net::IWebProxyScript);
DEFINE_IL2CPP_ARG_TYPE(::System::Net::IWebProxyScript*, "System.Net", "IWebProxyScript");
// Type namespace: System.Net
namespace System::Net {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.IWebProxyScript
  // [TokenAttribute] Offset: FFFFFFFF
  class IWebProxyScript {
    public:
    // public System.Void Close()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Close();
    // public System.Boolean Load(System.Uri scriptLocation, System.String script, System.Type helperType)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool Load(::System::Uri* scriptLocation, ::StringW script, ::System::Type* helperType);
    // public System.String Run(System.String url, System.String host)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW Run(::StringW url, ::StringW host);
  }; // System.Net.IWebProxyScript
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Net::IWebProxyScript::Close
// Il2CppName: Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Net::IWebProxyScript::*)()>(&System::Net::IWebProxyScript::Close)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Net::IWebProxyScript*), "Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Net::IWebProxyScript::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Net::IWebProxyScript::*)(::System::Uri*, ::StringW, ::System::Type*)>(&System::Net::IWebProxyScript::Load)> {
  static const MethodInfo* get() {
    static auto* scriptLocation = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* script = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* helperType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::IWebProxyScript*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scriptLocation, script, helperType});
  }
};
// Writing MetadataGetter for method: System::Net::IWebProxyScript::Run
// Il2CppName: Run
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Net::IWebProxyScript::*)(::StringW, ::StringW)>(&System::Net::IWebProxyScript::Run)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* host = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Net::IWebProxyScript*), "Run", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, host});
  }
};
