// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Net.Configuration.ProxyElement
#include "System/Net/Configuration/ProxyElement.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Net::Configuration::ProxyElement::BypassOnLocalValues, "System.Net.Configuration", "ProxyElement/BypassOnLocalValues");
// Type namespace: System.Net.Configuration
namespace System::Net::Configuration {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.Net.Configuration.ProxyElement/System.Net.Configuration.BypassOnLocalValues
  // [TokenAttribute] Offset: FFFFFFFF
  struct ProxyElement::BypassOnLocalValues/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: BypassOnLocalValues
    constexpr BypassOnLocalValues(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Net.Configuration.ProxyElement/System.Net.Configuration.BypassOnLocalValues False
    static constexpr const int False = 0;
    // Get static field: static public System.Net.Configuration.ProxyElement/System.Net.Configuration.BypassOnLocalValues False
    static ::System::Net::Configuration::ProxyElement::BypassOnLocalValues _get_False();
    // Set static field: static public System.Net.Configuration.ProxyElement/System.Net.Configuration.BypassOnLocalValues False
    static void _set_False(::System::Net::Configuration::ProxyElement::BypassOnLocalValues value);
    // static field const value: static public System.Net.Configuration.ProxyElement/System.Net.Configuration.BypassOnLocalValues True
    static constexpr const int True = 1;
    // Get static field: static public System.Net.Configuration.ProxyElement/System.Net.Configuration.BypassOnLocalValues True
    static ::System::Net::Configuration::ProxyElement::BypassOnLocalValues _get_True();
    // Set static field: static public System.Net.Configuration.ProxyElement/System.Net.Configuration.BypassOnLocalValues True
    static void _set_True(::System::Net::Configuration::ProxyElement::BypassOnLocalValues value);
    // static field const value: static public System.Net.Configuration.ProxyElement/System.Net.Configuration.BypassOnLocalValues Unspecified
    static constexpr const int Unspecified = -1;
    // Get static field: static public System.Net.Configuration.ProxyElement/System.Net.Configuration.BypassOnLocalValues Unspecified
    static ::System::Net::Configuration::ProxyElement::BypassOnLocalValues _get_Unspecified();
    // Set static field: static public System.Net.Configuration.ProxyElement/System.Net.Configuration.BypassOnLocalValues Unspecified
    static void _set_Unspecified(::System::Net::Configuration::ProxyElement::BypassOnLocalValues value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // System.Net.Configuration.ProxyElement/System.Net.Configuration.BypassOnLocalValues
  #pragma pack(pop)
  static check_size<sizeof(ProxyElement::BypassOnLocalValues), 0 + sizeof(int)> __System_Net_Configuration_ProxyElement_BypassOnLocalValuesSizeCheck;
  static_assert(sizeof(ProxyElement::BypassOnLocalValues) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
