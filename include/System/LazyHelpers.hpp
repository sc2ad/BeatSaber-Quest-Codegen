// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: System
namespace System {
  // Forward declaring type: LazyHelpers
  class LazyHelpers;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::LazyHelpers);
DEFINE_IL2CPP_ARG_TYPE(::System::LazyHelpers*, "System", "LazyHelpers");
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.LazyHelpers
  // [TokenAttribute] Offset: FFFFFFFF
  class LazyHelpers : public ::Il2CppObject {
    public:
    // Get static field: static readonly System.Object PUBLICATION_ONLY_SENTINEL
    static ::Il2CppObject* _get_PUBLICATION_ONLY_SENTINEL();
    // Set static field: static readonly System.Object PUBLICATION_ONLY_SENTINEL
    static void _set_PUBLICATION_ONLY_SENTINEL(::Il2CppObject* value);
    // static private System.Void .cctor()
    // Offset: 0x1C265DC
    static void _cctor();
  }; // System.LazyHelpers
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::LazyHelpers::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::LazyHelpers::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::LazyHelpers*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
