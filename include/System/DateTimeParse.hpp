// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: DateTime
  struct DateTime;
  // Forward declaring type: TimeSpan
  struct TimeSpan;
  // Forward declaring type: DateTimeResult
  struct DateTimeResult;
  // Forward declaring type: __DTString
  struct __DTString;
  // Skipping declaration: DS because it is already included!
  // Forward declaring type: DateTimeToken
  struct DateTimeToken;
  // Forward declaring type: DateTimeRawInfo
  struct DateTimeRawInfo;
  // Forward declaring type: ParsingInfo
  struct ParsingInfo;
  // Forward declaring type: Exception
  class Exception;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: DateTimeFormatInfo
  class DateTimeFormatInfo;
  // Forward declaring type: DateTimeStyles
  struct DateTimeStyles;
  // Forward declaring type: Calendar
  class Calendar;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Forward declaring type: DateTimeParse
  class DateTimeParse;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::DateTimeParse);
DEFINE_IL2CPP_ARG_TYPE(::System::DateTimeParse*, "System", "DateTimeParse");
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.DateTimeParse
  // [TokenAttribute] Offset: FFFFFFFF
  class DateTimeParse : public ::Il2CppObject {
    public:
    // Nested type: ::System::DateTimeParse::MatchNumberDelegate
    class MatchNumberDelegate;
    // Nested type: ::System::DateTimeParse::DTT
    struct DTT;
    // Nested type: ::System::DateTimeParse::TM
    struct TM;
    // Nested type: ::System::DateTimeParse::DS
    struct DS;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: System.DateTimeParse/System.DS
    // [TokenAttribute] Offset: FFFFFFFF
    struct DS/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: DS
      constexpr DS(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating interface conversion operator: i_Enum
      inline ::System::Enum* i_Enum() noexcept {
        return reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public System.DateTimeParse/System.DS BEGIN
      static constexpr const int BEGIN = 0;
      // Get static field: static public System.DateTimeParse/System.DS BEGIN
      static ::System::DateTimeParse::DS _get_BEGIN();
      // Set static field: static public System.DateTimeParse/System.DS BEGIN
      static void _set_BEGIN(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS N
      static constexpr const int N = 1;
      // Get static field: static public System.DateTimeParse/System.DS N
      static ::System::DateTimeParse::DS _get_N();
      // Set static field: static public System.DateTimeParse/System.DS N
      static void _set_N(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS NN
      static constexpr const int NN = 2;
      // Get static field: static public System.DateTimeParse/System.DS NN
      static ::System::DateTimeParse::DS _get_NN();
      // Set static field: static public System.DateTimeParse/System.DS NN
      static void _set_NN(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS D_Nd
      static constexpr const int D_Nd = 3;
      // Get static field: static public System.DateTimeParse/System.DS D_Nd
      static ::System::DateTimeParse::DS _get_D_Nd();
      // Set static field: static public System.DateTimeParse/System.DS D_Nd
      static void _set_D_Nd(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS D_NN
      static constexpr const int D_NN = 4;
      // Get static field: static public System.DateTimeParse/System.DS D_NN
      static ::System::DateTimeParse::DS _get_D_NN();
      // Set static field: static public System.DateTimeParse/System.DS D_NN
      static void _set_D_NN(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS D_NNd
      static constexpr const int D_NNd = 5;
      // Get static field: static public System.DateTimeParse/System.DS D_NNd
      static ::System::DateTimeParse::DS _get_D_NNd();
      // Set static field: static public System.DateTimeParse/System.DS D_NNd
      static void _set_D_NNd(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS D_M
      static constexpr const int D_M = 6;
      // Get static field: static public System.DateTimeParse/System.DS D_M
      static ::System::DateTimeParse::DS _get_D_M();
      // Set static field: static public System.DateTimeParse/System.DS D_M
      static void _set_D_M(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS D_MN
      static constexpr const int D_MN = 7;
      // Get static field: static public System.DateTimeParse/System.DS D_MN
      static ::System::DateTimeParse::DS _get_D_MN();
      // Set static field: static public System.DateTimeParse/System.DS D_MN
      static void _set_D_MN(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS D_NM
      static constexpr const int D_NM = 8;
      // Get static field: static public System.DateTimeParse/System.DS D_NM
      static ::System::DateTimeParse::DS _get_D_NM();
      // Set static field: static public System.DateTimeParse/System.DS D_NM
      static void _set_D_NM(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS D_MNd
      static constexpr const int D_MNd = 9;
      // Get static field: static public System.DateTimeParse/System.DS D_MNd
      static ::System::DateTimeParse::DS _get_D_MNd();
      // Set static field: static public System.DateTimeParse/System.DS D_MNd
      static void _set_D_MNd(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS D_NDS
      static constexpr const int D_NDS = 10;
      // Get static field: static public System.DateTimeParse/System.DS D_NDS
      static ::System::DateTimeParse::DS _get_D_NDS();
      // Set static field: static public System.DateTimeParse/System.DS D_NDS
      static void _set_D_NDS(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS D_Y
      static constexpr const int D_Y = 11;
      // Get static field: static public System.DateTimeParse/System.DS D_Y
      static ::System::DateTimeParse::DS _get_D_Y();
      // Set static field: static public System.DateTimeParse/System.DS D_Y
      static void _set_D_Y(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS D_YN
      static constexpr const int D_YN = 12;
      // Get static field: static public System.DateTimeParse/System.DS D_YN
      static ::System::DateTimeParse::DS _get_D_YN();
      // Set static field: static public System.DateTimeParse/System.DS D_YN
      static void _set_D_YN(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS D_YNd
      static constexpr const int D_YNd = 13;
      // Get static field: static public System.DateTimeParse/System.DS D_YNd
      static ::System::DateTimeParse::DS _get_D_YNd();
      // Set static field: static public System.DateTimeParse/System.DS D_YNd
      static void _set_D_YNd(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS D_YM
      static constexpr const int D_YM = 14;
      // Get static field: static public System.DateTimeParse/System.DS D_YM
      static ::System::DateTimeParse::DS _get_D_YM();
      // Set static field: static public System.DateTimeParse/System.DS D_YM
      static void _set_D_YM(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS D_YMd
      static constexpr const int D_YMd = 15;
      // Get static field: static public System.DateTimeParse/System.DS D_YMd
      static ::System::DateTimeParse::DS _get_D_YMd();
      // Set static field: static public System.DateTimeParse/System.DS D_YMd
      static void _set_D_YMd(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS D_S
      static constexpr const int D_S = 16;
      // Get static field: static public System.DateTimeParse/System.DS D_S
      static ::System::DateTimeParse::DS _get_D_S();
      // Set static field: static public System.DateTimeParse/System.DS D_S
      static void _set_D_S(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS T_S
      static constexpr const int T_S = 17;
      // Get static field: static public System.DateTimeParse/System.DS T_S
      static ::System::DateTimeParse::DS _get_T_S();
      // Set static field: static public System.DateTimeParse/System.DS T_S
      static void _set_T_S(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS T_Nt
      static constexpr const int T_Nt = 18;
      // Get static field: static public System.DateTimeParse/System.DS T_Nt
      static ::System::DateTimeParse::DS _get_T_Nt();
      // Set static field: static public System.DateTimeParse/System.DS T_Nt
      static void _set_T_Nt(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS T_NNt
      static constexpr const int T_NNt = 19;
      // Get static field: static public System.DateTimeParse/System.DS T_NNt
      static ::System::DateTimeParse::DS _get_T_NNt();
      // Set static field: static public System.DateTimeParse/System.DS T_NNt
      static void _set_T_NNt(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS ERROR
      static constexpr const int ERROR = 20;
      // Get static field: static public System.DateTimeParse/System.DS ERROR
      static ::System::DateTimeParse::DS _get_ERROR();
      // Set static field: static public System.DateTimeParse/System.DS ERROR
      static void _set_ERROR(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS DX_NN
      static constexpr const int DX_NN = 21;
      // Get static field: static public System.DateTimeParse/System.DS DX_NN
      static ::System::DateTimeParse::DS _get_DX_NN();
      // Set static field: static public System.DateTimeParse/System.DS DX_NN
      static void _set_DX_NN(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS DX_NNN
      static constexpr const int DX_NNN = 22;
      // Get static field: static public System.DateTimeParse/System.DS DX_NNN
      static ::System::DateTimeParse::DS _get_DX_NNN();
      // Set static field: static public System.DateTimeParse/System.DS DX_NNN
      static void _set_DX_NNN(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS DX_MN
      static constexpr const int DX_MN = 23;
      // Get static field: static public System.DateTimeParse/System.DS DX_MN
      static ::System::DateTimeParse::DS _get_DX_MN();
      // Set static field: static public System.DateTimeParse/System.DS DX_MN
      static void _set_DX_MN(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS DX_NM
      static constexpr const int DX_NM = 24;
      // Get static field: static public System.DateTimeParse/System.DS DX_NM
      static ::System::DateTimeParse::DS _get_DX_NM();
      // Set static field: static public System.DateTimeParse/System.DS DX_NM
      static void _set_DX_NM(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS DX_MNN
      static constexpr const int DX_MNN = 25;
      // Get static field: static public System.DateTimeParse/System.DS DX_MNN
      static ::System::DateTimeParse::DS _get_DX_MNN();
      // Set static field: static public System.DateTimeParse/System.DS DX_MNN
      static void _set_DX_MNN(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS DX_DS
      static constexpr const int DX_DS = 26;
      // Get static field: static public System.DateTimeParse/System.DS DX_DS
      static ::System::DateTimeParse::DS _get_DX_DS();
      // Set static field: static public System.DateTimeParse/System.DS DX_DS
      static void _set_DX_DS(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS DX_DSN
      static constexpr const int DX_DSN = 27;
      // Get static field: static public System.DateTimeParse/System.DS DX_DSN
      static ::System::DateTimeParse::DS _get_DX_DSN();
      // Set static field: static public System.DateTimeParse/System.DS DX_DSN
      static void _set_DX_DSN(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS DX_NDS
      static constexpr const int DX_NDS = 28;
      // Get static field: static public System.DateTimeParse/System.DS DX_NDS
      static ::System::DateTimeParse::DS _get_DX_NDS();
      // Set static field: static public System.DateTimeParse/System.DS DX_NDS
      static void _set_DX_NDS(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS DX_NNDS
      static constexpr const int DX_NNDS = 29;
      // Get static field: static public System.DateTimeParse/System.DS DX_NNDS
      static ::System::DateTimeParse::DS _get_DX_NNDS();
      // Set static field: static public System.DateTimeParse/System.DS DX_NNDS
      static void _set_DX_NNDS(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS DX_YNN
      static constexpr const int DX_YNN = 30;
      // Get static field: static public System.DateTimeParse/System.DS DX_YNN
      static ::System::DateTimeParse::DS _get_DX_YNN();
      // Set static field: static public System.DateTimeParse/System.DS DX_YNN
      static void _set_DX_YNN(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS DX_YMN
      static constexpr const int DX_YMN = 31;
      // Get static field: static public System.DateTimeParse/System.DS DX_YMN
      static ::System::DateTimeParse::DS _get_DX_YMN();
      // Set static field: static public System.DateTimeParse/System.DS DX_YMN
      static void _set_DX_YMN(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS DX_YN
      static constexpr const int DX_YN = 32;
      // Get static field: static public System.DateTimeParse/System.DS DX_YN
      static ::System::DateTimeParse::DS _get_DX_YN();
      // Set static field: static public System.DateTimeParse/System.DS DX_YN
      static void _set_DX_YN(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS DX_YM
      static constexpr const int DX_YM = 33;
      // Get static field: static public System.DateTimeParse/System.DS DX_YM
      static ::System::DateTimeParse::DS _get_DX_YM();
      // Set static field: static public System.DateTimeParse/System.DS DX_YM
      static void _set_DX_YM(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS TX_N
      static constexpr const int TX_N = 34;
      // Get static field: static public System.DateTimeParse/System.DS TX_N
      static ::System::DateTimeParse::DS _get_TX_N();
      // Set static field: static public System.DateTimeParse/System.DS TX_N
      static void _set_TX_N(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS TX_NN
      static constexpr const int TX_NN = 35;
      // Get static field: static public System.DateTimeParse/System.DS TX_NN
      static ::System::DateTimeParse::DS _get_TX_NN();
      // Set static field: static public System.DateTimeParse/System.DS TX_NN
      static void _set_TX_NN(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS TX_NNN
      static constexpr const int TX_NNN = 36;
      // Get static field: static public System.DateTimeParse/System.DS TX_NNN
      static ::System::DateTimeParse::DS _get_TX_NNN();
      // Set static field: static public System.DateTimeParse/System.DS TX_NNN
      static void _set_TX_NNN(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS TX_TS
      static constexpr const int TX_TS = 37;
      // Get static field: static public System.DateTimeParse/System.DS TX_TS
      static ::System::DateTimeParse::DS _get_TX_TS();
      // Set static field: static public System.DateTimeParse/System.DS TX_TS
      static void _set_TX_TS(::System::DateTimeParse::DS value);
      // static field const value: static public System.DateTimeParse/System.DS DX_NNY
      static constexpr const int DX_NNY = 38;
      // Get static field: static public System.DateTimeParse/System.DS DX_NNY
      static ::System::DateTimeParse::DS _get_DX_NNY();
      // Set static field: static public System.DateTimeParse/System.DS DX_NNY
      static void _set_DX_NNY(::System::DateTimeParse::DS value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // System.DateTimeParse/System.DS
    #pragma pack(pop)
    static check_size<sizeof(DateTimeParse::DS), 0 + sizeof(int)> __System_DateTimeParse_DSSizeCheck;
    static_assert(sizeof(DateTimeParse::DS) == 0x4);
    // Get static field: static System.DateTimeParse/System.MatchNumberDelegate m_hebrewNumberParser
    static ::System::DateTimeParse::MatchNumberDelegate* _get_m_hebrewNumberParser();
    // Set static field: static System.DateTimeParse/System.MatchNumberDelegate m_hebrewNumberParser
    static void _set_m_hebrewNumberParser(::System::DateTimeParse::MatchNumberDelegate* value);
    // Get static field: static private System.DateTimeParse/System.DS[][] dateParsingStates
    static ::ArrayW<::ArrayW<::System::DateTimeParse::DS>> _get_dateParsingStates();
    // Set static field: static private System.DateTimeParse/System.DS[][] dateParsingStates
    static void _set_dateParsingStates(::ArrayW<::ArrayW<::System::DateTimeParse::DS>> value);
    // static private System.Void .cctor()
    // Offset: 0x22E1960
    static void _cctor();
    // static System.DateTime ParseExact(System.String s, System.String format, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles style)
    // Offset: 0x22D8EEC
    static ::System::DateTime ParseExact(::StringW s, ::StringW format, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style);
    // static System.DateTime ParseExact(System.String s, System.String format, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles style, out System.TimeSpan offset)
    // Offset: 0x22D8124
    static ::System::DateTime ParseExact(::StringW s, ::StringW format, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style, ByRef<::System::TimeSpan> offset);
    // static System.Boolean TryParseExact(System.String s, System.String format, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles style, out System.DateTime result)
    // Offset: 0x22D92BC
    static bool TryParseExact(::StringW s, ::StringW format, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style, ByRef<::System::DateTime> result);
    // static System.Boolean TryParseExact(System.String s, System.String format, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles style, out System.DateTime result, out System.TimeSpan offset)
    // Offset: 0x22D88A0
    static bool TryParseExact(::StringW s, ::StringW format, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style, ByRef<::System::DateTime> result, ByRef<::System::TimeSpan> offset);
    // static System.Boolean TryParseExact(System.String s, System.String format, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles style, ref System.DateTimeResult result)
    // Offset: 0x22D900C
    static bool TryParseExact(::StringW s, ::StringW format, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style, ByRef<::System::DateTimeResult> result);
    // static System.Boolean TryParseExactMultiple(System.String s, System.String[] formats, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles style, out System.DateTime result, out System.TimeSpan offset)
    // Offset: 0x22D8B58
    static bool TryParseExactMultiple(::StringW s, ::ArrayW<::StringW> formats, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style, ByRef<::System::DateTime> result, ByRef<::System::TimeSpan> offset);
    // static System.Boolean TryParseExactMultiple(System.String s, System.String[] formats, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles style, ref System.DateTimeResult result)
    // Offset: 0x22D9A34
    static bool TryParseExactMultiple(::StringW s, ::ArrayW<::StringW> formats, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles style, ByRef<::System::DateTimeResult> result);
    // static private System.Boolean MatchWord(ref System.__DTString str, System.String target)
    // Offset: 0x22D9C10
    static bool MatchWord(ByRef<::System::__DTString> str, ::StringW target);
    // static private System.Boolean GetTimeZoneName(ref System.__DTString str)
    // Offset: 0x22D9D58
    static bool GetTimeZoneName(ByRef<::System::__DTString> str);
    // static System.Boolean IsDigit(System.Char ch)
    // Offset: 0x22D9E08
    static bool IsDigit(::Il2CppChar ch);
    // static private System.Boolean ParseFraction(ref System.__DTString str, out System.Double result)
    // Offset: 0x22D9E1C
    static bool ParseFraction(ByRef<::System::__DTString> str, ByRef<double> result);
    // static private System.Boolean ParseTimeZone(ref System.__DTString str, ref System.TimeSpan result)
    // Offset: 0x22D9F00
    static bool ParseTimeZone(ByRef<::System::__DTString> str, ByRef<::System::TimeSpan> result);
    // static private System.Boolean HandleTimeZone(ref System.__DTString str, ref System.DateTimeResult result)
    // Offset: 0x22DA194
    static bool HandleTimeZone(ByRef<::System::__DTString> str, ByRef<::System::DateTimeResult> result);
    // static private System.Boolean Lex(System.DateTimeParse/System.DS dps, ref System.__DTString str, ref System.DateTimeToken dtok, ref System.DateTimeRawInfo raw, ref System.DateTimeResult result, ref System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles styles)
    // Offset: 0x22DA308
    static bool Lex(::System::DateTimeParse::DS dps, ByRef<::System::__DTString> str, ByRef<::System::DateTimeToken> dtok, ByRef<::System::DateTimeRawInfo> raw, ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::DateTimeFormatInfo*> dtfi, ::System::Globalization::DateTimeStyles styles);
    // static private System.Boolean VerifyValidPunctuation(ref System.__DTString str)
    // Offset: 0x22DB3DC
    static bool VerifyValidPunctuation(ByRef<::System::__DTString> str);
    // static private System.Boolean GetYearMonthDayOrder(System.String datePattern, System.Globalization.DateTimeFormatInfo dtfi, out System.Int32 order)
    // Offset: 0x22DB554
    static bool GetYearMonthDayOrder(::StringW datePattern, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> order);
    // static private System.Boolean GetYearMonthOrder(System.String pattern, System.Globalization.DateTimeFormatInfo dtfi, out System.Int32 order)
    // Offset: 0x22DB7FC
    static bool GetYearMonthOrder(::StringW pattern, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> order);
    // static private System.Boolean GetMonthDayOrder(System.String pattern, System.Globalization.DateTimeFormatInfo dtfi, out System.Int32 order)
    // Offset: 0x22DB9B8
    static bool GetMonthDayOrder(::StringW pattern, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> order);
    // static private System.Boolean TryAdjustYear(ref System.DateTimeResult result, System.Int32 year, out System.Int32 adjustedYear)
    // Offset: 0x22DBBBC
    static bool TryAdjustYear(ByRef<::System::DateTimeResult> result, int year, ByRef<int> adjustedYear);
    // static private System.Boolean SetDateYMD(ref System.DateTimeResult result, System.Int32 year, System.Int32 month, System.Int32 day)
    // Offset: 0x22DBCBC
    static bool SetDateYMD(ByRef<::System::DateTimeResult> result, int year, int month, int day);
    // static private System.Boolean SetDateMDY(ref System.DateTimeResult result, System.Int32 month, System.Int32 day, System.Int32 year)
    // Offset: 0x22DBD30
    static bool SetDateMDY(ByRef<::System::DateTimeResult> result, int month, int day, int year);
    // static private System.Boolean SetDateDMY(ref System.DateTimeResult result, System.Int32 day, System.Int32 month, System.Int32 year)
    // Offset: 0x22DBDBC
    static bool SetDateDMY(ByRef<::System::DateTimeResult> result, int day, int month, int year);
    // static private System.Boolean SetDateYDM(ref System.DateTimeResult result, System.Int32 year, System.Int32 day, System.Int32 month)
    // Offset: 0x22DBE48
    static bool SetDateYDM(ByRef<::System::DateTimeResult> result, int year, int day, int month);
    // static private System.Void GetDefaultYear(ref System.DateTimeResult result, ref System.Globalization.DateTimeStyles styles)
    // Offset: 0x22DBED4
    static void GetDefaultYear(ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::DateTimeStyles> styles);
    // static private System.Boolean GetDayOfNN(ref System.DateTimeResult result, ref System.Globalization.DateTimeStyles styles, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)
    // Offset: 0x22DC0A0
    static bool GetDayOfNN(ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::DateTimeStyles> styles, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi);
    // static private System.Boolean GetDayOfNNN(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)
    // Offset: 0x22DC234
    static bool GetDayOfNNN(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi);
    // static private System.Boolean GetDayOfMN(ref System.DateTimeResult result, ref System.Globalization.DateTimeStyles styles, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)
    // Offset: 0x22DC504
    static bool GetDayOfMN(ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::DateTimeStyles> styles, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi);
    // static private System.Boolean GetHebrewDayOfNM(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)
    // Offset: 0x22DC730
    static bool GetHebrewDayOfNM(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi);
    // static private System.Boolean GetDayOfNM(ref System.DateTimeResult result, ref System.Globalization.DateTimeStyles styles, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)
    // Offset: 0x22DC87C
    static bool GetDayOfNM(ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::DateTimeStyles> styles, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi);
    // static private System.Boolean GetDayOfMNN(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)
    // Offset: 0x22DCAA8
    static bool GetDayOfMNN(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi);
    // static private System.Boolean GetDayOfYNN(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)
    // Offset: 0x22DCD98
    static bool GetDayOfYNN(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi);
    // static private System.Boolean GetDayOfNNY(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)
    // Offset: 0x22DCEF4
    static bool GetDayOfNNY(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi);
    // static private System.Boolean GetDayOfYMN(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)
    // Offset: 0x22DD078
    static bool GetDayOfYMN(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi);
    // static private System.Boolean GetDayOfYN(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)
    // Offset: 0x22DD140
    static bool GetDayOfYN(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi);
    // static private System.Boolean GetDayOfYM(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)
    // Offset: 0x22DD208
    static bool GetDayOfYM(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi);
    // static private System.Void AdjustTimeMark(System.Globalization.DateTimeFormatInfo dtfi, ref System.DateTimeRawInfo raw)
    // Offset: 0x22DD2C8
    static void AdjustTimeMark(::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<::System::DateTimeRawInfo> raw);
    // static private System.Boolean AdjustHour(ref System.Int32 hour, System.DateTimeParse/System.TM timeMark)
    // Offset: 0x22DD33C
    static bool AdjustHour(ByRef<int> hour, ::System::DateTimeParse::TM timeMark);
    // static private System.Boolean GetTimeOfN(System.Globalization.DateTimeFormatInfo dtfi, ref System.DateTimeResult result, ref System.DateTimeRawInfo raw)
    // Offset: 0x22DD384
    static bool GetTimeOfN(::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw);
    // static private System.Boolean GetTimeOfNN(System.Globalization.DateTimeFormatInfo dtfi, ref System.DateTimeResult result, ref System.DateTimeRawInfo raw)
    // Offset: 0x22DD41C
    static bool GetTimeOfNN(::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw);
    // static private System.Boolean GetTimeOfNNN(System.Globalization.DateTimeFormatInfo dtfi, ref System.DateTimeResult result, ref System.DateTimeRawInfo raw)
    // Offset: 0x22DD4B4
    static bool GetTimeOfNNN(::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw);
    // static private System.Boolean GetDateOfDSN(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw)
    // Offset: 0x22DD558
    static bool GetDateOfDSN(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw);
    // static private System.Boolean GetDateOfNDS(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw)
    // Offset: 0x22DD5EC
    static bool GetDateOfNDS(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw);
    // static private System.Boolean GetDateOfNNDS(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)
    // Offset: 0x22DD6B4
    static bool GetDateOfNNDS(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi);
    // static private System.Boolean ProcessDateTimeSuffix(ref System.DateTimeResult result, ref System.DateTimeRawInfo raw, ref System.DateTimeToken dtok)
    // Offset: 0x22DD904
    static bool ProcessDateTimeSuffix(ByRef<::System::DateTimeResult> result, ByRef<::System::DateTimeRawInfo> raw, ByRef<::System::DateTimeToken> dtok);
    // static System.Boolean ProcessHebrewTerminalState(System.DateTimeParse/System.DS dps, ref System.DateTimeResult result, ref System.Globalization.DateTimeStyles styles, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)
    // Offset: 0x22DD9FC
    static bool ProcessHebrewTerminalState(::System::DateTimeParse::DS dps, ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::DateTimeStyles> styles, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi);
    // static System.Boolean ProcessTerminaltState(System.DateTimeParse/System.DS dps, ref System.DateTimeResult result, ref System.Globalization.DateTimeStyles styles, ref System.DateTimeRawInfo raw, System.Globalization.DateTimeFormatInfo dtfi)
    // Offset: 0x22DAFDC
    static bool ProcessTerminaltState(::System::DateTimeParse::DS dps, ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::DateTimeStyles> styles, ByRef<::System::DateTimeRawInfo> raw, ::System::Globalization::DateTimeFormatInfo* dtfi);
    // static System.DateTime Parse(System.String s, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles styles)
    // Offset: 0x22DDCE0
    static ::System::DateTime Parse(::StringW s, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles styles);
    // static System.DateTime Parse(System.String s, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles styles, out System.TimeSpan offset)
    // Offset: 0x22D7EDC
    static ::System::DateTime Parse(::StringW s, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles styles, ByRef<::System::TimeSpan> offset);
    // static System.Boolean TryParse(System.String s, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles styles, out System.DateTime result)
    // Offset: 0x22DE4D0
    static bool TryParse(::StringW s, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles styles, ByRef<::System::DateTime> result);
    // static System.Boolean TryParse(System.String s, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles styles, out System.DateTime result, out System.TimeSpan offset)
    // Offset: 0x22D85F8
    static bool TryParse(::StringW s, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles styles, ByRef<::System::DateTime> result, ByRef<::System::TimeSpan> offset);
    // static System.Boolean TryParse(System.String s, System.Globalization.DateTimeFormatInfo dtfi, System.Globalization.DateTimeStyles styles, ref System.DateTimeResult result)
    // Offset: 0x22DDDD0
    static bool TryParse(::StringW s, ::System::Globalization::DateTimeFormatInfo* dtfi, ::System::Globalization::DateTimeStyles styles, ByRef<::System::DateTimeResult> result);
    // static private System.Boolean DetermineTimeZoneAdjustments(ref System.DateTimeResult result, System.Globalization.DateTimeStyles styles, System.Boolean bTimeOnly)
    // Offset: 0x22DED80
    static bool DetermineTimeZoneAdjustments(ByRef<::System::DateTimeResult> result, ::System::Globalization::DateTimeStyles styles, bool bTimeOnly);
    // static private System.Boolean DateTimeOffsetTimeZonePostProcessing(ref System.DateTimeResult result, System.Globalization.DateTimeStyles styles)
    // Offset: 0x22DEF4C
    static bool DateTimeOffsetTimeZonePostProcessing(ByRef<::System::DateTimeResult> result, ::System::Globalization::DateTimeStyles styles);
    // static private System.Boolean AdjustTimeZoneToUniversal(ref System.DateTimeResult result)
    // Offset: 0x22DF154
    static bool AdjustTimeZoneToUniversal(ByRef<::System::DateTimeResult> result);
    // static private System.Boolean AdjustTimeZoneToLocal(ref System.DateTimeResult result, System.Boolean bTimeOnly)
    // Offset: 0x22DF224
    static bool AdjustTimeZoneToLocal(ByRef<::System::DateTimeResult> result, bool bTimeOnly);
    // static private System.Boolean ParseISO8601(ref System.DateTimeRawInfo raw, ref System.__DTString str, System.Globalization.DateTimeStyles styles, ref System.DateTimeResult result)
    // Offset: 0x22DE610
    static bool ParseISO8601(ByRef<::System::DateTimeRawInfo> raw, ByRef<::System::__DTString> str, ::System::Globalization::DateTimeStyles styles, ByRef<::System::DateTimeResult> result);
    // static System.Boolean MatchHebrewDigits(ref System.__DTString str, System.Int32 digitLen, out System.Int32 number)
    // Offset: 0x22DF4C8
    static bool MatchHebrewDigits(ByRef<::System::__DTString> str, int digitLen, ByRef<int> number);
    // static System.Boolean ParseDigits(ref System.__DTString str, System.Int32 digitLen, out System.Int32 result)
    // Offset: 0x22DF420
    static bool ParseDigits(ByRef<::System::__DTString> str, int digitLen, ByRef<int> result);
    // static System.Boolean ParseDigits(ref System.__DTString str, System.Int32 minDigitLen, System.Int32 maxDigitLen, out System.Int32 result)
    // Offset: 0x22DF5B4
    static bool ParseDigits(ByRef<::System::__DTString> str, int minDigitLen, int maxDigitLen, ByRef<int> result);
    // static private System.Boolean ParseFractionExact(ref System.__DTString str, System.Int32 maxDigitLen, ref System.Double result)
    // Offset: 0x22DF670
    static bool ParseFractionExact(ByRef<::System::__DTString> str, int maxDigitLen, ByRef<double> result);
    // static private System.Boolean ParseSign(ref System.__DTString str, ref System.Boolean result)
    // Offset: 0x22DF7A0
    static bool ParseSign(ByRef<::System::__DTString> str, ByRef<bool> result);
    // static private System.Boolean ParseTimeZoneOffset(ref System.__DTString str, System.Int32 len, ref System.TimeSpan result)
    // Offset: 0x22DF808
    static bool ParseTimeZoneOffset(ByRef<::System::__DTString> str, int len, ByRef<::System::TimeSpan> result);
    // static private System.Boolean MatchAbbreviatedMonthName(ref System.__DTString str, System.Globalization.DateTimeFormatInfo dtfi, ref System.Int32 result)
    // Offset: 0x22DF9C4
    static bool MatchAbbreviatedMonthName(ByRef<::System::__DTString> str, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> result);
    // static private System.Boolean MatchMonthName(ref System.__DTString str, System.Globalization.DateTimeFormatInfo dtfi, ref System.Int32 result)
    // Offset: 0x22DFB3C
    static bool MatchMonthName(ByRef<::System::__DTString> str, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> result);
    // static private System.Boolean MatchAbbreviatedDayName(ref System.__DTString str, System.Globalization.DateTimeFormatInfo dtfi, ref System.Int32 result)
    // Offset: 0x22DFCF0
    static bool MatchAbbreviatedDayName(ByRef<::System::__DTString> str, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> result);
    // static private System.Boolean MatchDayName(ref System.__DTString str, System.Globalization.DateTimeFormatInfo dtfi, ref System.Int32 result)
    // Offset: 0x22DFE04
    static bool MatchDayName(ByRef<::System::__DTString> str, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> result);
    // static private System.Boolean MatchEraName(ref System.__DTString str, System.Globalization.DateTimeFormatInfo dtfi, ref System.Int32 result)
    // Offset: 0x22DFF18
    static bool MatchEraName(ByRef<::System::__DTString> str, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<int> result);
    // static private System.Boolean MatchTimeMark(ref System.__DTString str, System.Globalization.DateTimeFormatInfo dtfi, ref System.DateTimeParse/System.TM result)
    // Offset: 0x22E005C
    static bool MatchTimeMark(ByRef<::System::__DTString> str, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<::System::DateTimeParse::TM> result);
    // static private System.Boolean MatchAbbreviatedTimeMark(ref System.__DTString str, System.Globalization.DateTimeFormatInfo dtfi, ref System.DateTimeParse/System.TM result)
    // Offset: 0x22E0168
    static bool MatchAbbreviatedTimeMark(ByRef<::System::__DTString> str, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<::System::DateTimeParse::TM> result);
    // static private System.Boolean CheckNewValue(ref System.Int32 currentValue, System.Int32 newValue, System.Char patternChar, ref System.DateTimeResult result)
    // Offset: 0x22E022C
    static bool CheckNewValue(ByRef<int> currentValue, int newValue, ::Il2CppChar patternChar, ByRef<::System::DateTimeResult> result);
    // static private System.DateTime GetDateTimeNow(ref System.DateTimeResult result, ref System.Globalization.DateTimeStyles styles)
    // Offset: 0x22DBF80
    static ::System::DateTime GetDateTimeNow(ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::DateTimeStyles> styles);
    // static private System.Boolean CheckDefaultDateTime(ref System.DateTimeResult result, ref System.Globalization.Calendar cal, System.Globalization.DateTimeStyles styles)
    // Offset: 0x22DEB00
    static bool CheckDefaultDateTime(ByRef<::System::DateTimeResult> result, ByRef<::System::Globalization::Calendar*> cal, ::System::Globalization::DateTimeStyles styles);
    // static private System.String ExpandPredefinedFormat(System.String format, ref System.Globalization.DateTimeFormatInfo dtfi, ref System.ParsingInfo parseInfo, ref System.DateTimeResult result)
    // Offset: 0x22E02E0
    static ::StringW ExpandPredefinedFormat(::StringW format, ByRef<::System::Globalization::DateTimeFormatInfo*> dtfi, ByRef<::System::ParsingInfo> parseInfo, ByRef<::System::DateTimeResult> result);
    // static private System.Boolean ParseByFormat(ref System.__DTString str, ref System.__DTString format, ref System.ParsingInfo parseInfo, System.Globalization.DateTimeFormatInfo dtfi, ref System.DateTimeResult result)
    // Offset: 0x22E0680
    static bool ParseByFormat(ByRef<::System::__DTString> str, ByRef<::System::__DTString> format, ByRef<::System::ParsingInfo> parseInfo, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<::System::DateTimeResult> result);
    // static System.Boolean TryParseQuoteString(System.String format, System.Int32 pos, System.Text.StringBuilder result, out System.Int32 returnValue)
    // Offset: 0x22E1874
    static bool TryParseQuoteString(::StringW format, int pos, ::System::Text::StringBuilder* result, ByRef<int> returnValue);
    // static private System.Boolean DoStrictParse(System.String s, System.String formatParam, System.Globalization.DateTimeStyles styles, System.Globalization.DateTimeFormatInfo dtfi, ref System.DateTimeResult result)
    // Offset: 0x22D93FC
    static bool DoStrictParse(::StringW s, ::StringW formatParam, ::System::Globalization::DateTimeStyles styles, ::System::Globalization::DateTimeFormatInfo* dtfi, ByRef<::System::DateTimeResult> result);
    // static private System.Exception GetDateTimeParseException(ref System.DateTimeResult result)
    // Offset: 0x22D9134
    static ::System::Exception* GetDateTimeParseException(ByRef<::System::DateTimeResult> result);
  }; // System.DateTimeParse
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::DateTimeParse::DS, "System", "DateTimeParse/DS");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::DateTimeParse::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::DateTimeParse::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::ParseExact
// Il2CppName: ParseExact
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::StringW, ::StringW, ::System::Globalization::DateTimeFormatInfo*, ::System::Globalization::DateTimeStyles)>(&System::DateTimeParse::ParseExact)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "ParseExact", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, format, dtfi, style});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::ParseExact
// Il2CppName: ParseExact
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::StringW, ::StringW, ::System::Globalization::DateTimeFormatInfo*, ::System::Globalization::DateTimeStyles, ByRef<::System::TimeSpan>)>(&System::DateTimeParse::ParseExact)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "TimeSpan")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "ParseExact", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, format, dtfi, style, offset});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::TryParseExact
// Il2CppName: TryParseExact
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW, ::System::Globalization::DateTimeFormatInfo*, ::System::Globalization::DateTimeStyles, ByRef<::System::DateTime>)>(&System::DateTimeParse::TryParseExact)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTime")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "TryParseExact", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, format, dtfi, style, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::TryParseExact
// Il2CppName: TryParseExact
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW, ::System::Globalization::DateTimeFormatInfo*, ::System::Globalization::DateTimeStyles, ByRef<::System::DateTime>, ByRef<::System::TimeSpan>)>(&System::DateTimeParse::TryParseExact)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTime")->this_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "TimeSpan")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "TryParseExact", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, format, dtfi, style, result, offset});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::TryParseExact
// Il2CppName: TryParseExact
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW, ::System::Globalization::DateTimeFormatInfo*, ::System::Globalization::DateTimeStyles, ByRef<::System::DateTimeResult>)>(&System::DateTimeParse::TryParseExact)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "TryParseExact", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, format, dtfi, style, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::TryParseExactMultiple
// Il2CppName: TryParseExactMultiple
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::ArrayW<::StringW>, ::System::Globalization::DateTimeFormatInfo*, ::System::Globalization::DateTimeStyles, ByRef<::System::DateTime>, ByRef<::System::TimeSpan>)>(&System::DateTimeParse::TryParseExactMultiple)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* formats = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTime")->this_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "TimeSpan")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "TryParseExactMultiple", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, formats, dtfi, style, result, offset});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::TryParseExactMultiple
// Il2CppName: TryParseExactMultiple
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::ArrayW<::StringW>, ::System::Globalization::DateTimeFormatInfo*, ::System::Globalization::DateTimeStyles, ByRef<::System::DateTimeResult>)>(&System::DateTimeParse::TryParseExactMultiple)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* formats = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "TryParseExactMultiple", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, formats, dtfi, style, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::MatchWord
// Il2CppName: MatchWord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, ::StringW)>(&System::DateTimeParse::MatchWord)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "MatchWord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, target});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetTimeZoneName
// Il2CppName: GetTimeZoneName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>)>(&System::DateTimeParse::GetTimeZoneName)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetTimeZoneName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::IsDigit
// Il2CppName: IsDigit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppChar)>(&System::DateTimeParse::IsDigit)> {
  static const MethodInfo* get() {
    static auto* ch = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "IsDigit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ch});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::ParseFraction
// Il2CppName: ParseFraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, ByRef<double>)>(&System::DateTimeParse::ParseFraction)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Double")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "ParseFraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::ParseTimeZone
// Il2CppName: ParseTimeZone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, ByRef<::System::TimeSpan>)>(&System::DateTimeParse::ParseTimeZone)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "TimeSpan")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "ParseTimeZone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::HandleTimeZone
// Il2CppName: HandleTimeZone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, ByRef<::System::DateTimeResult>)>(&System::DateTimeParse::HandleTimeZone)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "HandleTimeZone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::Lex
// Il2CppName: Lex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::DateTimeParse::DS, ByRef<::System::__DTString>, ByRef<::System::DateTimeToken>, ByRef<::System::DateTimeRawInfo>, ByRef<::System::DateTimeResult>, ByRef<::System::Globalization::DateTimeFormatInfo*>, ::System::Globalization::DateTimeStyles)>(&System::DateTimeParse::Lex)> {
  static const MethodInfo* get() {
    static auto* dps = &::il2cpp_utils::GetClassFromName("System", "DateTimeParse/DS")->byval_arg;
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* dtok = &::il2cpp_utils::GetClassFromName("System", "DateTimeToken")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->this_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "Lex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dps, str, dtok, raw, result, dtfi, styles});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::VerifyValidPunctuation
// Il2CppName: VerifyValidPunctuation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>)>(&System::DateTimeParse::VerifyValidPunctuation)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "VerifyValidPunctuation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetYearMonthDayOrder
// Il2CppName: GetYearMonthDayOrder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Globalization::DateTimeFormatInfo*, ByRef<int>)>(&System::DateTimeParse::GetYearMonthDayOrder)> {
  static const MethodInfo* get() {
    static auto* datePattern = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* order = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetYearMonthDayOrder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{datePattern, dtfi, order});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetYearMonthOrder
// Il2CppName: GetYearMonthOrder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Globalization::DateTimeFormatInfo*, ByRef<int>)>(&System::DateTimeParse::GetYearMonthOrder)> {
  static const MethodInfo* get() {
    static auto* pattern = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* order = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetYearMonthOrder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pattern, dtfi, order});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetMonthDayOrder
// Il2CppName: GetMonthDayOrder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Globalization::DateTimeFormatInfo*, ByRef<int>)>(&System::DateTimeParse::GetMonthDayOrder)> {
  static const MethodInfo* get() {
    static auto* pattern = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* order = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetMonthDayOrder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pattern, dtfi, order});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::TryAdjustYear
// Il2CppName: TryAdjustYear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, int, ByRef<int>)>(&System::DateTimeParse::TryAdjustYear)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* year = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* adjustedYear = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "TryAdjustYear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, year, adjustedYear});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::SetDateYMD
// Il2CppName: SetDateYMD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, int, int, int)>(&System::DateTimeParse::SetDateYMD)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* year = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* month = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* day = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "SetDateYMD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, year, month, day});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::SetDateMDY
// Il2CppName: SetDateMDY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, int, int, int)>(&System::DateTimeParse::SetDateMDY)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* month = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* day = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* year = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "SetDateMDY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, month, day, year});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::SetDateDMY
// Il2CppName: SetDateDMY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, int, int, int)>(&System::DateTimeParse::SetDateDMY)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* day = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* month = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* year = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "SetDateDMY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, day, month, year});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::SetDateYDM
// Il2CppName: SetDateYDM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, int, int, int)>(&System::DateTimeParse::SetDateYDM)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* year = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* day = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* month = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "SetDateYDM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, year, day, month});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetDefaultYear
// Il2CppName: GetDefaultYear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::System::DateTimeResult>, ByRef<::System::Globalization::DateTimeStyles>)>(&System::DateTimeParse::GetDefaultYear)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetDefaultYear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, styles});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetDayOfNN
// Il2CppName: GetDayOfNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ByRef<::System::Globalization::DateTimeStyles>, ByRef<::System::DateTimeRawInfo>, ::System::Globalization::DateTimeFormatInfo*)>(&System::DateTimeParse::GetDayOfNN)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetDayOfNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, styles, raw, dtfi});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetDayOfNNN
// Il2CppName: GetDayOfNNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ByRef<::System::DateTimeRawInfo>, ::System::Globalization::DateTimeFormatInfo*)>(&System::DateTimeParse::GetDayOfNNN)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetDayOfNNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, raw, dtfi});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetDayOfMN
// Il2CppName: GetDayOfMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ByRef<::System::Globalization::DateTimeStyles>, ByRef<::System::DateTimeRawInfo>, ::System::Globalization::DateTimeFormatInfo*)>(&System::DateTimeParse::GetDayOfMN)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetDayOfMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, styles, raw, dtfi});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetHebrewDayOfNM
// Il2CppName: GetHebrewDayOfNM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ByRef<::System::DateTimeRawInfo>, ::System::Globalization::DateTimeFormatInfo*)>(&System::DateTimeParse::GetHebrewDayOfNM)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetHebrewDayOfNM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, raw, dtfi});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetDayOfNM
// Il2CppName: GetDayOfNM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ByRef<::System::Globalization::DateTimeStyles>, ByRef<::System::DateTimeRawInfo>, ::System::Globalization::DateTimeFormatInfo*)>(&System::DateTimeParse::GetDayOfNM)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetDayOfNM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, styles, raw, dtfi});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetDayOfMNN
// Il2CppName: GetDayOfMNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ByRef<::System::DateTimeRawInfo>, ::System::Globalization::DateTimeFormatInfo*)>(&System::DateTimeParse::GetDayOfMNN)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetDayOfMNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, raw, dtfi});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetDayOfYNN
// Il2CppName: GetDayOfYNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ByRef<::System::DateTimeRawInfo>, ::System::Globalization::DateTimeFormatInfo*)>(&System::DateTimeParse::GetDayOfYNN)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetDayOfYNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, raw, dtfi});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetDayOfNNY
// Il2CppName: GetDayOfNNY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ByRef<::System::DateTimeRawInfo>, ::System::Globalization::DateTimeFormatInfo*)>(&System::DateTimeParse::GetDayOfNNY)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetDayOfNNY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, raw, dtfi});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetDayOfYMN
// Il2CppName: GetDayOfYMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ByRef<::System::DateTimeRawInfo>, ::System::Globalization::DateTimeFormatInfo*)>(&System::DateTimeParse::GetDayOfYMN)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetDayOfYMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, raw, dtfi});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetDayOfYN
// Il2CppName: GetDayOfYN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ByRef<::System::DateTimeRawInfo>, ::System::Globalization::DateTimeFormatInfo*)>(&System::DateTimeParse::GetDayOfYN)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetDayOfYN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, raw, dtfi});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetDayOfYM
// Il2CppName: GetDayOfYM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ByRef<::System::DateTimeRawInfo>, ::System::Globalization::DateTimeFormatInfo*)>(&System::DateTimeParse::GetDayOfYM)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetDayOfYM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, raw, dtfi});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::AdjustTimeMark
// Il2CppName: AdjustTimeMark
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Globalization::DateTimeFormatInfo*, ByRef<::System::DateTimeRawInfo>)>(&System::DateTimeParse::AdjustTimeMark)> {
  static const MethodInfo* get() {
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "AdjustTimeMark", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dtfi, raw});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::AdjustHour
// Il2CppName: AdjustHour
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<int>, ::System::DateTimeParse::TM)>(&System::DateTimeParse::AdjustHour)> {
  static const MethodInfo* get() {
    static auto* hour = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* timeMark = &::il2cpp_utils::GetClassFromName("System", "DateTimeParse/TM")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "AdjustHour", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hour, timeMark});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetTimeOfN
// Il2CppName: GetTimeOfN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Globalization::DateTimeFormatInfo*, ByRef<::System::DateTimeResult>, ByRef<::System::DateTimeRawInfo>)>(&System::DateTimeParse::GetTimeOfN)> {
  static const MethodInfo* get() {
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetTimeOfN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dtfi, result, raw});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetTimeOfNN
// Il2CppName: GetTimeOfNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Globalization::DateTimeFormatInfo*, ByRef<::System::DateTimeResult>, ByRef<::System::DateTimeRawInfo>)>(&System::DateTimeParse::GetTimeOfNN)> {
  static const MethodInfo* get() {
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetTimeOfNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dtfi, result, raw});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetTimeOfNNN
// Il2CppName: GetTimeOfNNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Globalization::DateTimeFormatInfo*, ByRef<::System::DateTimeResult>, ByRef<::System::DateTimeRawInfo>)>(&System::DateTimeParse::GetTimeOfNNN)> {
  static const MethodInfo* get() {
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetTimeOfNNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dtfi, result, raw});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetDateOfDSN
// Il2CppName: GetDateOfDSN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ByRef<::System::DateTimeRawInfo>)>(&System::DateTimeParse::GetDateOfDSN)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetDateOfDSN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, raw});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetDateOfNDS
// Il2CppName: GetDateOfNDS
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ByRef<::System::DateTimeRawInfo>)>(&System::DateTimeParse::GetDateOfNDS)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetDateOfNDS", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, raw});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetDateOfNNDS
// Il2CppName: GetDateOfNNDS
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ByRef<::System::DateTimeRawInfo>, ::System::Globalization::DateTimeFormatInfo*)>(&System::DateTimeParse::GetDateOfNNDS)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetDateOfNNDS", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, raw, dtfi});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::ProcessDateTimeSuffix
// Il2CppName: ProcessDateTimeSuffix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ByRef<::System::DateTimeRawInfo>, ByRef<::System::DateTimeToken>)>(&System::DateTimeParse::ProcessDateTimeSuffix)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* dtok = &::il2cpp_utils::GetClassFromName("System", "DateTimeToken")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "ProcessDateTimeSuffix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, raw, dtok});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::ProcessHebrewTerminalState
// Il2CppName: ProcessHebrewTerminalState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::DateTimeParse::DS, ByRef<::System::DateTimeResult>, ByRef<::System::Globalization::DateTimeStyles>, ByRef<::System::DateTimeRawInfo>, ::System::Globalization::DateTimeFormatInfo*)>(&System::DateTimeParse::ProcessHebrewTerminalState)> {
  static const MethodInfo* get() {
    static auto* dps = &::il2cpp_utils::GetClassFromName("System", "DateTimeParse/DS")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "ProcessHebrewTerminalState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dps, result, styles, raw, dtfi});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::ProcessTerminaltState
// Il2CppName: ProcessTerminaltState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::DateTimeParse::DS, ByRef<::System::DateTimeResult>, ByRef<::System::Globalization::DateTimeStyles>, ByRef<::System::DateTimeRawInfo>, ::System::Globalization::DateTimeFormatInfo*)>(&System::DateTimeParse::ProcessTerminaltState)> {
  static const MethodInfo* get() {
    static auto* dps = &::il2cpp_utils::GetClassFromName("System", "DateTimeParse/DS")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->this_arg;
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "ProcessTerminaltState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dps, result, styles, raw, dtfi});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::StringW, ::System::Globalization::DateTimeFormatInfo*, ::System::Globalization::DateTimeStyles)>(&System::DateTimeParse::Parse)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, dtfi, styles});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(::StringW, ::System::Globalization::DateTimeFormatInfo*, ::System::Globalization::DateTimeStyles, ByRef<::System::TimeSpan>)>(&System::DateTimeParse::Parse)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "TimeSpan")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, dtfi, styles, offset});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::TryParse
// Il2CppName: TryParse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Globalization::DateTimeFormatInfo*, ::System::Globalization::DateTimeStyles, ByRef<::System::DateTime>)>(&System::DateTimeParse::TryParse)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTime")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "TryParse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, dtfi, styles, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::TryParse
// Il2CppName: TryParse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Globalization::DateTimeFormatInfo*, ::System::Globalization::DateTimeStyles, ByRef<::System::DateTime>, ByRef<::System::TimeSpan>)>(&System::DateTimeParse::TryParse)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTime")->this_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "TimeSpan")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "TryParse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, dtfi, styles, result, offset});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::TryParse
// Il2CppName: TryParse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Globalization::DateTimeFormatInfo*, ::System::Globalization::DateTimeStyles, ByRef<::System::DateTimeResult>)>(&System::DateTimeParse::TryParse)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "TryParse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, dtfi, styles, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::DetermineTimeZoneAdjustments
// Il2CppName: DetermineTimeZoneAdjustments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ::System::Globalization::DateTimeStyles, bool)>(&System::DateTimeParse::DetermineTimeZoneAdjustments)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    static auto* bTimeOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "DetermineTimeZoneAdjustments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, styles, bTimeOnly});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::DateTimeOffsetTimeZonePostProcessing
// Il2CppName: DateTimeOffsetTimeZonePostProcessing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ::System::Globalization::DateTimeStyles)>(&System::DateTimeParse::DateTimeOffsetTimeZonePostProcessing)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "DateTimeOffsetTimeZonePostProcessing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, styles});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::AdjustTimeZoneToUniversal
// Il2CppName: AdjustTimeZoneToUniversal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>)>(&System::DateTimeParse::AdjustTimeZoneToUniversal)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "AdjustTimeZoneToUniversal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::AdjustTimeZoneToLocal
// Il2CppName: AdjustTimeZoneToLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, bool)>(&System::DateTimeParse::AdjustTimeZoneToLocal)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* bTimeOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "AdjustTimeZoneToLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, bTimeOnly});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::ParseISO8601
// Il2CppName: ParseISO8601
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeRawInfo>, ByRef<::System::__DTString>, ::System::Globalization::DateTimeStyles, ByRef<::System::DateTimeResult>)>(&System::DateTimeParse::ParseISO8601)> {
  static const MethodInfo* get() {
    static auto* raw = &::il2cpp_utils::GetClassFromName("System", "DateTimeRawInfo")->this_arg;
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "ParseISO8601", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{raw, str, styles, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::MatchHebrewDigits
// Il2CppName: MatchHebrewDigits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, int, ByRef<int>)>(&System::DateTimeParse::MatchHebrewDigits)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* digitLen = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "MatchHebrewDigits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, digitLen, number});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::ParseDigits
// Il2CppName: ParseDigits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, int, ByRef<int>)>(&System::DateTimeParse::ParseDigits)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* digitLen = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "ParseDigits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, digitLen, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::ParseDigits
// Il2CppName: ParseDigits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, int, int, ByRef<int>)>(&System::DateTimeParse::ParseDigits)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* minDigitLen = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* maxDigitLen = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "ParseDigits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, minDigitLen, maxDigitLen, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::ParseFractionExact
// Il2CppName: ParseFractionExact
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, int, ByRef<double>)>(&System::DateTimeParse::ParseFractionExact)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* maxDigitLen = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Double")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "ParseFractionExact", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, maxDigitLen, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::ParseSign
// Il2CppName: ParseSign
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, ByRef<bool>)>(&System::DateTimeParse::ParseSign)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Boolean")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "ParseSign", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::ParseTimeZoneOffset
// Il2CppName: ParseTimeZoneOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, int, ByRef<::System::TimeSpan>)>(&System::DateTimeParse::ParseTimeZoneOffset)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* len = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "TimeSpan")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "ParseTimeZoneOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, len, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::MatchAbbreviatedMonthName
// Il2CppName: MatchAbbreviatedMonthName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, ::System::Globalization::DateTimeFormatInfo*, ByRef<int>)>(&System::DateTimeParse::MatchAbbreviatedMonthName)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "MatchAbbreviatedMonthName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, dtfi, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::MatchMonthName
// Il2CppName: MatchMonthName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, ::System::Globalization::DateTimeFormatInfo*, ByRef<int>)>(&System::DateTimeParse::MatchMonthName)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "MatchMonthName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, dtfi, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::MatchAbbreviatedDayName
// Il2CppName: MatchAbbreviatedDayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, ::System::Globalization::DateTimeFormatInfo*, ByRef<int>)>(&System::DateTimeParse::MatchAbbreviatedDayName)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "MatchAbbreviatedDayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, dtfi, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::MatchDayName
// Il2CppName: MatchDayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, ::System::Globalization::DateTimeFormatInfo*, ByRef<int>)>(&System::DateTimeParse::MatchDayName)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "MatchDayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, dtfi, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::MatchEraName
// Il2CppName: MatchEraName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, ::System::Globalization::DateTimeFormatInfo*, ByRef<int>)>(&System::DateTimeParse::MatchEraName)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "MatchEraName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, dtfi, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::MatchTimeMark
// Il2CppName: MatchTimeMark
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, ::System::Globalization::DateTimeFormatInfo*, ByRef<::System::DateTimeParse::TM>)>(&System::DateTimeParse::MatchTimeMark)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeParse/TM")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "MatchTimeMark", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, dtfi, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::MatchAbbreviatedTimeMark
// Il2CppName: MatchAbbreviatedTimeMark
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, ::System::Globalization::DateTimeFormatInfo*, ByRef<::System::DateTimeParse::TM>)>(&System::DateTimeParse::MatchAbbreviatedTimeMark)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeParse/TM")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "MatchAbbreviatedTimeMark", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, dtfi, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::CheckNewValue
// Il2CppName: CheckNewValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<int>, int, ::Il2CppChar, ByRef<::System::DateTimeResult>)>(&System::DateTimeParse::CheckNewValue)> {
  static const MethodInfo* get() {
    static auto* currentValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* newValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* patternChar = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "CheckNewValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{currentValue, newValue, patternChar, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetDateTimeNow
// Il2CppName: GetDateTimeNow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (*)(ByRef<::System::DateTimeResult>, ByRef<::System::Globalization::DateTimeStyles>)>(&System::DateTimeParse::GetDateTimeNow)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetDateTimeNow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, styles});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::CheckDefaultDateTime
// Il2CppName: CheckDefaultDateTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::DateTimeResult>, ByRef<::System::Globalization::Calendar*>, ::System::Globalization::DateTimeStyles)>(&System::DateTimeParse::CheckDefaultDateTime)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    static auto* cal = &::il2cpp_utils::GetClassFromName("System.Globalization", "Calendar")->this_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "CheckDefaultDateTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result, cal, styles});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::ExpandPredefinedFormat
// Il2CppName: ExpandPredefinedFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ByRef<::System::Globalization::DateTimeFormatInfo*>, ByRef<::System::ParsingInfo>, ByRef<::System::DateTimeResult>)>(&System::DateTimeParse::ExpandPredefinedFormat)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->this_arg;
    static auto* parseInfo = &::il2cpp_utils::GetClassFromName("System", "ParsingInfo")->this_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "ExpandPredefinedFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, dtfi, parseInfo, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::ParseByFormat
// Il2CppName: ParseByFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::__DTString>, ByRef<::System::__DTString>, ByRef<::System::ParsingInfo>, ::System::Globalization::DateTimeFormatInfo*, ByRef<::System::DateTimeResult>)>(&System::DateTimeParse::ParseByFormat)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "__DTString")->this_arg;
    static auto* parseInfo = &::il2cpp_utils::GetClassFromName("System", "ParsingInfo")->this_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "ParseByFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, format, parseInfo, dtfi, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::TryParseQuoteString
// Il2CppName: TryParseQuoteString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, int, ::System::Text::StringBuilder*, ByRef<int>)>(&System::DateTimeParse::TryParseQuoteString)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* pos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* returnValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "TryParseQuoteString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, pos, result, returnValue});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::DoStrictParse
// Il2CppName: DoStrictParse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW, ::System::Globalization::DateTimeStyles, ::System::Globalization::DateTimeFormatInfo*, ByRef<::System::DateTimeResult>)>(&System::DateTimeParse::DoStrictParse)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* formatParam = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* styles = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeStyles")->byval_arg;
    static auto* dtfi = &::il2cpp_utils::GetClassFromName("System.Globalization", "DateTimeFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "DoStrictParse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, formatParam, styles, dtfi, result});
  }
};
// Writing MetadataGetter for method: System::DateTimeParse::GetDateTimeParseException
// Il2CppName: GetDateTimeParseException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)(ByRef<::System::DateTimeResult>)>(&System::DateTimeParse::GetDateTimeParseException)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "DateTimeResult")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::DateTimeParse*), "GetDateTimeParseException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
