// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: SynchronizationContext
  class SynchronizationContext;
  // Forward declaring type: SendOrPostCallback
  class SendOrPostCallback;
}
// Completed forward declares
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::ComponentModel::AsyncOperation);
DEFINE_IL2CPP_ARG_TYPE(::System::ComponentModel::AsyncOperation*, "System.ComponentModel", "AsyncOperation");
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: System.ComponentModel.AsyncOperation
  // [TokenAttribute] Offset: FFFFFFFF
  class AsyncOperation : public ::Il2CppObject {
    public:
    public:
    // private System.Threading.SynchronizationContext syncContext
    // Size: 0x8
    // Offset: 0x10
    ::System::Threading::SynchronizationContext* syncContext;
    // Field size check
    static_assert(sizeof(::System::Threading::SynchronizationContext*) == 0x8);
    // private System.Object userSuppliedState
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppObject* userSuppliedState;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Boolean alreadyCompleted
    // Size: 0x1
    // Offset: 0x20
    bool alreadyCompleted;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private System.Threading.SynchronizationContext syncContext
    [[deprecated("Use field access instead!")]] ::System::Threading::SynchronizationContext*& dyn_syncContext();
    // Get instance field reference: private System.Object userSuppliedState
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_userSuppliedState();
    // Get instance field reference: private System.Boolean alreadyCompleted
    [[deprecated("Use field access instead!")]] bool& dyn_alreadyCompleted();
    // public System.Object get_UserSuppliedState()
    // Offset: 0x11D3AF8
    ::Il2CppObject* get_UserSuppliedState();
    // public System.Threading.SynchronizationContext get_SynchronizationContext()
    // Offset: 0x11D3B00
    ::System::Threading::SynchronizationContext* get_SynchronizationContext();
    // private System.Void .ctor(System.Object userSuppliedState, System.Threading.SynchronizationContext syncContext)
    // Offset: 0x11D3A28
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AsyncOperation* New_ctor(::Il2CppObject* userSuppliedState, ::System::Threading::SynchronizationContext* syncContext) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AsyncOperation*, creationType>(userSuppliedState, syncContext)));
    }
    // System.Void .ctor()
    // Offset: 0x11D3E00
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AsyncOperation* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncOperation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AsyncOperation*, creationType>()));
    }
    // public System.Void Post(System.Threading.SendOrPostCallback d, System.Object arg)
    // Offset: 0x11D3B08
    void Post(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* arg);
    // public System.Void PostOperationCompleted(System.Threading.SendOrPostCallback d, System.Object arg)
    // Offset: 0x11D3C74
    void PostOperationCompleted(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* arg);
    // public System.Void OperationCompleted()
    // Offset: 0x11D3D6C
    void OperationCompleted();
    // private System.Void OperationCompletedCore()
    // Offset: 0x11D3C98
    void OperationCompletedCore();
    // private System.Void VerifyNotCompleted()
    // Offset: 0x11D3B5C
    void VerifyNotCompleted();
    // private System.Void VerifyDelegateNotNull(System.Threading.SendOrPostCallback d)
    // Offset: 0x11D3BE4
    void VerifyDelegateNotNull(::System::Threading::SendOrPostCallback* d);
    // static System.ComponentModel.AsyncOperation CreateOperation(System.Object userSuppliedState, System.Threading.SynchronizationContext syncContext)
    // Offset: 0x11D3D90
    static ::System::ComponentModel::AsyncOperation* CreateOperation(::Il2CppObject* userSuppliedState, ::System::Threading::SynchronizationContext* syncContext);
    // protected override System.Void Finalize()
    // Offset: 0x11D3A78
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // System.ComponentModel.AsyncOperation
  #pragma pack(pop)
  static check_size<sizeof(AsyncOperation), 32 + sizeof(bool)> __System_ComponentModel_AsyncOperationSizeCheck;
  static_assert(sizeof(AsyncOperation) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::ComponentModel::AsyncOperation::get_UserSuppliedState
// Il2CppName: get_UserSuppliedState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::ComponentModel::AsyncOperation::*)()>(&System::ComponentModel::AsyncOperation::get_UserSuppliedState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::AsyncOperation*), "get_UserSuppliedState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::AsyncOperation::get_SynchronizationContext
// Il2CppName: get_SynchronizationContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::SynchronizationContext* (System::ComponentModel::AsyncOperation::*)()>(&System::ComponentModel::AsyncOperation::get_SynchronizationContext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::AsyncOperation*), "get_SynchronizationContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::AsyncOperation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::AsyncOperation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::AsyncOperation::Post
// Il2CppName: Post
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::AsyncOperation::*)(::System::Threading::SendOrPostCallback*, ::Il2CppObject*)>(&System::ComponentModel::AsyncOperation::Post)> {
  static const MethodInfo* get() {
    static auto* d = &::il2cpp_utils::GetClassFromName("System.Threading", "SendOrPostCallback")->byval_arg;
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::AsyncOperation*), "Post", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{d, arg});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::AsyncOperation::PostOperationCompleted
// Il2CppName: PostOperationCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::AsyncOperation::*)(::System::Threading::SendOrPostCallback*, ::Il2CppObject*)>(&System::ComponentModel::AsyncOperation::PostOperationCompleted)> {
  static const MethodInfo* get() {
    static auto* d = &::il2cpp_utils::GetClassFromName("System.Threading", "SendOrPostCallback")->byval_arg;
    static auto* arg = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::AsyncOperation*), "PostOperationCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{d, arg});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::AsyncOperation::OperationCompleted
// Il2CppName: OperationCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::AsyncOperation::*)()>(&System::ComponentModel::AsyncOperation::OperationCompleted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::AsyncOperation*), "OperationCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::AsyncOperation::OperationCompletedCore
// Il2CppName: OperationCompletedCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::AsyncOperation::*)()>(&System::ComponentModel::AsyncOperation::OperationCompletedCore)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::AsyncOperation*), "OperationCompletedCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::AsyncOperation::VerifyNotCompleted
// Il2CppName: VerifyNotCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::AsyncOperation::*)()>(&System::ComponentModel::AsyncOperation::VerifyNotCompleted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::AsyncOperation*), "VerifyNotCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::AsyncOperation::VerifyDelegateNotNull
// Il2CppName: VerifyDelegateNotNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::AsyncOperation::*)(::System::Threading::SendOrPostCallback*)>(&System::ComponentModel::AsyncOperation::VerifyDelegateNotNull)> {
  static const MethodInfo* get() {
    static auto* d = &::il2cpp_utils::GetClassFromName("System.Threading", "SendOrPostCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::AsyncOperation*), "VerifyDelegateNotNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{d});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::AsyncOperation::CreateOperation
// Il2CppName: CreateOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::AsyncOperation* (*)(::Il2CppObject*, ::System::Threading::SynchronizationContext*)>(&System::ComponentModel::AsyncOperation::CreateOperation)> {
  static const MethodInfo* get() {
    static auto* userSuppliedState = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* syncContext = &::il2cpp_utils::GetClassFromName("System.Threading", "SynchronizationContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::AsyncOperation*), "CreateOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userSuppliedState, syncContext});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::AsyncOperation::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::AsyncOperation::*)()>(&System::ComponentModel::AsyncOperation::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::AsyncOperation*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
