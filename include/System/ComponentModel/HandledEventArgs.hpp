// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: HandledEventArgs
  class HandledEventArgs;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::ComponentModel::HandledEventArgs);
DEFINE_IL2CPP_ARG_TYPE(::System::ComponentModel::HandledEventArgs*, "System.ComponentModel", "HandledEventArgs");
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Size: 0x11
  #pragma pack(push, 1)
  // Autogenerated type: System.ComponentModel.HandledEventArgs
  // [TokenAttribute] Offset: FFFFFFFF
  class HandledEventArgs : public ::System::EventArgs {
    public:
    public:
    // private System.Boolean handled
    // Size: 0x1
    // Offset: 0x10
    bool handled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating conversion operator: operator bool
    constexpr operator bool() const noexcept {
      return handled;
    }
    // Get instance field reference: private System.Boolean handled
    [[deprecated("Use field access instead!")]] bool& dyn_handled();
    // public System.Boolean get_Handled()
    // Offset: 0x1217C3C
    bool get_Handled();
    // public System.Void set_Handled(System.Boolean value)
    // Offset: 0x1217C44
    void set_Handled(bool value);
    // public System.Void .ctor()
    // Offset: 0x1217BB4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HandledEventArgs* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::HandledEventArgs::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HandledEventArgs*, creationType>()));
    }
    // public System.Void .ctor(System.Boolean defaultHandledValue)
    // Offset: 0x1217BBC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HandledEventArgs* New_ctor(bool defaultHandledValue) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::HandledEventArgs::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HandledEventArgs*, creationType>(defaultHandledValue)));
    }
  }; // System.ComponentModel.HandledEventArgs
  #pragma pack(pop)
  static check_size<sizeof(HandledEventArgs), 16 + sizeof(bool)> __System_ComponentModel_HandledEventArgsSizeCheck;
  static_assert(sizeof(HandledEventArgs) == 0x11);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::ComponentModel::HandledEventArgs::get_Handled
// Il2CppName: get_Handled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::HandledEventArgs::*)()>(&System::ComponentModel::HandledEventArgs::get_Handled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::HandledEventArgs*), "get_Handled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::HandledEventArgs::set_Handled
// Il2CppName: set_Handled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::HandledEventArgs::*)(bool)>(&System::ComponentModel::HandledEventArgs::set_Handled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::HandledEventArgs*), "set_Handled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::HandledEventArgs::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::HandledEventArgs::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
