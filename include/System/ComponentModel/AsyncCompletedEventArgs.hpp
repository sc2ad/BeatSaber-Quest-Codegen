// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Completed forward declares
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: AsyncCompletedEventArgs
  class AsyncCompletedEventArgs;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::ComponentModel::AsyncCompletedEventArgs);
DEFINE_IL2CPP_ARG_TYPE(::System::ComponentModel::AsyncCompletedEventArgs*, "System.ComponentModel", "AsyncCompletedEventArgs");
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: System.ComponentModel.AsyncCompletedEventArgs
  // [TokenAttribute] Offset: FFFFFFFF
  class AsyncCompletedEventArgs : public ::System::EventArgs {
    public:
    public:
    // private readonly System.Exception error
    // Size: 0x8
    // Offset: 0x10
    ::System::Exception* error;
    // Field size check
    static_assert(sizeof(::System::Exception*) == 0x8);
    // private readonly System.Boolean cancelled
    // Size: 0x1
    // Offset: 0x18
    bool cancelled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: cancelled and: userState
    char __padding1[0x7] = {};
    // private readonly System.Object userState
    // Size: 0x8
    // Offset: 0x20
    ::Il2CppObject* userState;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    public:
    // Get instance field reference: private readonly System.Exception error
    [[deprecated("Use field access instead!")]] ::System::Exception*& dyn_error();
    // Get instance field reference: private readonly System.Boolean cancelled
    [[deprecated("Use field access instead!")]] bool& dyn_cancelled();
    // Get instance field reference: private readonly System.Object userState
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_userState();
    // public System.Boolean get_Cancelled()
    // Offset: 0x11D34E4
    bool get_Cancelled();
    // public System.Exception get_Error()
    // Offset: 0x11D34EC
    ::System::Exception* get_Error();
    // public System.Object get_UserState()
    // Offset: 0x11D34F4
    ::Il2CppObject* get_UserState();
    // public System.Void .ctor()
    // Offset: 0x11D33E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AsyncCompletedEventArgs* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncCompletedEventArgs::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AsyncCompletedEventArgs*, creationType>()));
    }
    // public System.Void .ctor(System.Exception error, System.Boolean cancelled, System.Object userState)
    // Offset: 0x11D344C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AsyncCompletedEventArgs* New_ctor(::System::Exception* error, bool cancelled, ::Il2CppObject* userState) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AsyncCompletedEventArgs::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AsyncCompletedEventArgs*, creationType>(error, cancelled, userState)));
    }
    // protected System.Void RaiseExceptionIfNecessary()
    // Offset: 0x11D34FC
    void RaiseExceptionIfNecessary();
  }; // System.ComponentModel.AsyncCompletedEventArgs
  #pragma pack(pop)
  static check_size<sizeof(AsyncCompletedEventArgs), 32 + sizeof(::Il2CppObject*)> __System_ComponentModel_AsyncCompletedEventArgsSizeCheck;
  static_assert(sizeof(AsyncCompletedEventArgs) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::ComponentModel::AsyncCompletedEventArgs::get_Cancelled
// Il2CppName: get_Cancelled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::AsyncCompletedEventArgs::*)()>(&System::ComponentModel::AsyncCompletedEventArgs::get_Cancelled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::AsyncCompletedEventArgs*), "get_Cancelled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::AsyncCompletedEventArgs::get_Error
// Il2CppName: get_Error
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (System::ComponentModel::AsyncCompletedEventArgs::*)()>(&System::ComponentModel::AsyncCompletedEventArgs::get_Error)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::AsyncCompletedEventArgs*), "get_Error", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::AsyncCompletedEventArgs::get_UserState
// Il2CppName: get_UserState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::ComponentModel::AsyncCompletedEventArgs::*)()>(&System::ComponentModel::AsyncCompletedEventArgs::get_UserState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::AsyncCompletedEventArgs*), "get_UserState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::AsyncCompletedEventArgs::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::AsyncCompletedEventArgs::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::AsyncCompletedEventArgs::RaiseExceptionIfNecessary
// Il2CppName: RaiseExceptionIfNecessary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::AsyncCompletedEventArgs::*)()>(&System::ComponentModel::AsyncCompletedEventArgs::RaiseExceptionIfNecessary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::AsyncCompletedEventArgs*), "RaiseExceptionIfNecessary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
