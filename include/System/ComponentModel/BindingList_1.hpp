// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.ObjectModel.Collection`1
#include "System/Collections/ObjectModel/Collection_1.hpp"
// Including type: System.ComponentModel.IBindingList
#include "System/ComponentModel/IBindingList.hpp"
// Including type: System.ComponentModel.ICancelAddNew
#include "System/ComponentModel/ICancelAddNew.hpp"
// Including type: System.ComponentModel.IRaiseItemChangedEvents
#include "System/ComponentModel/IRaiseItemChangedEvents.hpp"
// Including type: System.ComponentModel.ListSortDirection
#include "System/ComponentModel/ListSortDirection.hpp"
// Including type: System.ComponentModel.ListChangedType
#include "System/ComponentModel/ListChangedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: PropertyDescriptorCollection
  class PropertyDescriptorCollection;
  // Forward declaring type: PropertyChangedEventHandler
  class PropertyChangedEventHandler;
  // Forward declaring type: AddingNewEventHandler
  class AddingNewEventHandler;
  // Forward declaring type: ListChangedEventHandler
  class ListChangedEventHandler;
  // Forward declaring type: PropertyDescriptor
  class PropertyDescriptor;
  // Forward declaring type: AddingNewEventArgs
  class AddingNewEventArgs;
  // Forward declaring type: ListChangedEventArgs
  class ListChangedEventArgs;
  // Forward declaring type: PropertyChangedEventArgs
  class PropertyChangedEventArgs;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Skipping declaration: IList`1 because it is already included!
}
// Completed forward declares
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: BindingList`1<T>
  template<typename T>
  class BindingList_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::System::ComponentModel::BindingList_1, "System.ComponentModel", "BindingList`1");
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // WARNING Size may be invalid!
  // Autogenerated type: System.ComponentModel.BindingList`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class BindingList_1 : public ::System::Collections::ObjectModel::Collection_1<T>/*, public ::System::ComponentModel::IBindingList, public ::System::ComponentModel::ICancelAddNew, public ::System::ComponentModel::IRaiseItemChangedEvents*/ {
    public:
    public:
    // private System.Int32 addNewPos
    // Size: 0x4
    // Offset: 0x0
    int addNewPos;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean raiseListChangedEvents
    // Size: 0x1
    // Offset: 0x0
    bool raiseListChangedEvents;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean raiseItemChangedEvents
    // Size: 0x1
    // Offset: 0x0
    bool raiseItemChangedEvents;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.ComponentModel.PropertyDescriptorCollection itemTypeProperties
    // Size: 0x8
    // Offset: 0x0
    ::System::ComponentModel::PropertyDescriptorCollection* itemTypeProperties;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::PropertyDescriptorCollection*) == 0x8);
    // private System.ComponentModel.PropertyChangedEventHandler propertyChangedEventHandler
    // Size: 0x8
    // Offset: 0x0
    ::System::ComponentModel::PropertyChangedEventHandler* propertyChangedEventHandler;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::PropertyChangedEventHandler*) == 0x8);
    // private System.ComponentModel.AddingNewEventHandler onAddingNew
    // Size: 0x8
    // Offset: 0x0
    ::System::ComponentModel::AddingNewEventHandler* onAddingNew;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::AddingNewEventHandler*) == 0x8);
    // private System.ComponentModel.ListChangedEventHandler onListChanged
    // Size: 0x8
    // Offset: 0x0
    ::System::ComponentModel::ListChangedEventHandler* onListChanged;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::ListChangedEventHandler*) == 0x8);
    // private System.Int32 lastChangeIndex
    // Size: 0x4
    // Offset: 0x0
    int lastChangeIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean allowNew
    // Size: 0x1
    // Offset: 0x0
    bool allowNew;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean allowEdit
    // Size: 0x1
    // Offset: 0x0
    bool allowEdit;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean allowRemove
    // Size: 0x1
    // Offset: 0x0
    bool allowRemove;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean userSetAllowNew
    // Size: 0x1
    // Offset: 0x0
    bool userSetAllowNew;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::ComponentModel::IBindingList
    operator ::System::ComponentModel::IBindingList() noexcept {
      return *reinterpret_cast<::System::ComponentModel::IBindingList*>(this);
    }
    // Creating interface conversion operator: operator ::System::ComponentModel::ICancelAddNew
    operator ::System::ComponentModel::ICancelAddNew() noexcept {
      return *reinterpret_cast<::System::ComponentModel::ICancelAddNew*>(this);
    }
    // Creating interface conversion operator: operator ::System::ComponentModel::IRaiseItemChangedEvents
    operator ::System::ComponentModel::IRaiseItemChangedEvents() noexcept {
      return *reinterpret_cast<::System::ComponentModel::IRaiseItemChangedEvents*>(this);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 addNewPos
    [[deprecated("Use field access instead!")]] int& dyn_addNewPos() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::dyn_addNewPos");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addNewPos"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean raiseListChangedEvents
    [[deprecated("Use field access instead!")]] bool& dyn_raiseListChangedEvents() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::dyn_raiseListChangedEvents");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raiseListChangedEvents"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean raiseItemChangedEvents
    [[deprecated("Use field access instead!")]] bool& dyn_raiseItemChangedEvents() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::dyn_raiseItemChangedEvents");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raiseItemChangedEvents"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.ComponentModel.PropertyDescriptorCollection itemTypeProperties
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyDescriptorCollection*& dyn_itemTypeProperties() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::dyn_itemTypeProperties");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemTypeProperties"))->offset;
      return *reinterpret_cast<::System::ComponentModel::PropertyDescriptorCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.ComponentModel.PropertyChangedEventHandler propertyChangedEventHandler
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& dyn_propertyChangedEventHandler() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::dyn_propertyChangedEventHandler");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyChangedEventHandler"))->offset;
      return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.ComponentModel.AddingNewEventHandler onAddingNew
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::AddingNewEventHandler*& dyn_onAddingNew() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::dyn_onAddingNew");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onAddingNew"))->offset;
      return *reinterpret_cast<::System::ComponentModel::AddingNewEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.ComponentModel.ListChangedEventHandler onListChanged
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::ListChangedEventHandler*& dyn_onListChanged() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::dyn_onListChanged");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onListChanged"))->offset;
      return *reinterpret_cast<::System::ComponentModel::ListChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Int32 lastChangeIndex
    [[deprecated("Use field access instead!")]] int& dyn_lastChangeIndex() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::dyn_lastChangeIndex");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastChangeIndex"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean allowNew
    [[deprecated("Use field access instead!")]] bool& dyn_allowNew() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::dyn_allowNew");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowNew"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean allowEdit
    [[deprecated("Use field access instead!")]] bool& dyn_allowEdit() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::dyn_allowEdit");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowEdit"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean allowRemove
    [[deprecated("Use field access instead!")]] bool& dyn_allowRemove() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::dyn_allowRemove");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowRemove"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Boolean userSetAllowNew
    [[deprecated("Use field access instead!")]] bool& dyn_userSetAllowNew() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::dyn_userSetAllowNew");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userSetAllowNew"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // private System.Boolean get_ItemTypeHasDefaultConstructor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_ItemTypeHasDefaultConstructor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::get_ItemTypeHasDefaultConstructor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemTypeHasDefaultConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Boolean get_RaiseListChangedEvents()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_RaiseListChangedEvents() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::get_RaiseListChangedEvents");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RaiseListChangedEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void set_RaiseListChangedEvents(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_RaiseListChangedEvents(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::set_RaiseListChangedEvents");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RaiseListChangedEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Boolean get_AddingNewHandled()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_AddingNewHandled() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::get_AddingNewHandled");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AddingNewHandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Boolean get_AllowNew()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_AllowNew() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::get_AllowNew");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void set_AllowNew(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_AllowNew(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::set_AllowNew");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Boolean System.ComponentModel.IBindingList.get_AllowNew()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool System_ComponentModel_IBindingList_get_AllowNew() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::System.ComponentModel.IBindingList.get_AllowNew");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Boolean get_AllowEdit()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_AllowEdit() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::get_AllowEdit");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowEdit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void set_AllowEdit(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_AllowEdit(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::set_AllowEdit");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowEdit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Boolean System.ComponentModel.IBindingList.get_AllowEdit()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool System_ComponentModel_IBindingList_get_AllowEdit() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::System.ComponentModel.IBindingList.get_AllowEdit");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Boolean get_AllowRemove()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_AllowRemove() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::get_AllowRemove");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void set_AllowRemove(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_AllowRemove(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::set_AllowRemove");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // private System.Boolean System.ComponentModel.IBindingList.get_AllowRemove()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool System_ComponentModel_IBindingList_get_AllowRemove() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::System.ComponentModel.IBindingList.get_AllowRemove");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // private System.Boolean System.ComponentModel.IBindingList.get_SupportsChangeNotification()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool System_ComponentModel_IBindingList_get_SupportsChangeNotification() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::System.ComponentModel.IBindingList.get_SupportsChangeNotification");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // protected System.Boolean get_SupportsChangeNotificationCore()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_SupportsChangeNotificationCore() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::get_SupportsChangeNotificationCore");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // private System.Boolean System.ComponentModel.IBindingList.get_SupportsSearching()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool System_ComponentModel_IBindingList_get_SupportsSearching() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::System.ComponentModel.IBindingList.get_SupportsSearching");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // protected System.Boolean get_SupportsSearchingCore()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_SupportsSearchingCore() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::get_SupportsSearchingCore");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // private System.Boolean System.ComponentModel.IBindingList.get_SupportsSorting()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool System_ComponentModel_IBindingList_get_SupportsSorting() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::System.ComponentModel.IBindingList.get_SupportsSorting");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // protected System.Boolean get_SupportsSortingCore()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_SupportsSortingCore() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::get_SupportsSortingCore");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // private System.Boolean System.ComponentModel.IBindingList.get_IsSorted()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool System_ComponentModel_IBindingList_get_IsSorted() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::System.ComponentModel.IBindingList.get_IsSorted");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // protected System.Boolean get_IsSortedCore()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsSortedCore() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::get_IsSortedCore");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // private System.ComponentModel.PropertyDescriptor System.ComponentModel.IBindingList.get_SortProperty()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::ComponentModel::PropertyDescriptor* System_ComponentModel_IBindingList_get_SortProperty() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::System.ComponentModel.IBindingList.get_SortProperty");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method);
    }
    // protected System.ComponentModel.PropertyDescriptor get_SortPropertyCore()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::ComponentModel::PropertyDescriptor* get_SortPropertyCore() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::get_SortPropertyCore");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method);
    }
    // private System.ComponentModel.ListSortDirection System.ComponentModel.IBindingList.get_SortDirection()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::ComponentModel::ListSortDirection System_ComponentModel_IBindingList_get_SortDirection() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::System.ComponentModel.IBindingList.get_SortDirection");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ListSortDirection, false>(this, ___internal__method);
    }
    // protected System.ComponentModel.ListSortDirection get_SortDirectionCore()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::ComponentModel::ListSortDirection get_SortDirectionCore() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::get_SortDirectionCore");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ListSortDirection, false>(this, ___internal__method);
    }
    // private System.Boolean System.ComponentModel.IRaiseItemChangedEvents.get_RaisesItemChangedEvents()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool System_ComponentModel_IRaiseItemChangedEvents_get_RaisesItemChangedEvents() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::System.ComponentModel.IRaiseItemChangedEvents.get_RaisesItemChangedEvents");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
    }
    // public System.Void add_AddingNew(System.ComponentModel.AddingNewEventHandler value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_AddingNew(::System::ComponentModel::AddingNewEventHandler* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::add_AddingNew");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_AddingNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_AddingNew(System.ComponentModel.AddingNewEventHandler value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_AddingNew(::System::ComponentModel::AddingNewEventHandler* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::remove_AddingNew");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_AddingNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void add_ListChanged(System.ComponentModel.ListChangedEventHandler value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void add_ListChanged(::System::ComponentModel::ListChangedEventHandler* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::add_ListChanged");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void remove_ListChanged(System.ComponentModel.ListChangedEventHandler value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void remove_ListChanged(::System::ComponentModel::ListChangedEventHandler* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::remove_ListChanged");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BindingList_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BindingList_1<T>*, creationType>()));
    }
    // public System.Void .ctor(System.Collections.Generic.IList`1<T> list)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BindingList_1<T>* New_ctor(::System::Collections::Generic::IList_1<T>* list) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BindingList_1<T>*, creationType>(list)));
    }
    // private System.Void Initialize()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Initialize() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::Initialize");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void OnAddingNew(System.ComponentModel.AddingNewEventArgs e)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnAddingNew(::System::ComponentModel::AddingNewEventArgs* e) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::OnAddingNew");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
    }
    // private System.Object FireAddingNew()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* FireAddingNew() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::FireAddingNew");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireAddingNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
    }
    // protected System.Void OnListChanged(System.ComponentModel.ListChangedEventArgs e)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnListChanged(::System::ComponentModel::ListChangedEventArgs* e) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::OnListChanged");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
    }
    // public System.Void ResetBindings()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ResetBindings() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::ResetBindings");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void ResetItem(System.Int32 position)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ResetItem(int position) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::ResetItem");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
    }
    // private System.Void FireListChanged(System.ComponentModel.ListChangedType type, System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void FireListChanged(::System::ComponentModel::ListChangedType type, int index) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::FireListChanged");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireListChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(index)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, index);
    }
    // public System.Void CancelNew(System.Int32 itemIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void CancelNew(int itemIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::CancelNew");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, itemIndex);
    }
    // public System.Void EndNew(System.Int32 itemIndex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndNew(int itemIndex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::EndNew");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, itemIndex);
    }
    // public T AddNew()
    // Offset: 0xFFFFFFFFFFFFFFFF
    T AddNew() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::AddNew");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___internal__method);
    }
    // private System.Object System.ComponentModel.IBindingList.AddNew()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* System_ComponentModel_IBindingList_AddNew() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::System.ComponentModel.IBindingList.AddNew");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
    }
    // protected System.Object AddNewCore()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Il2CppObject* AddNewCore() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::AddNewCore");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
    }
    // private System.Void System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor prop, System.ComponentModel.ListSortDirection direction)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void System_ComponentModel_IBindingList_ApplySort(::System::ComponentModel::PropertyDescriptor* prop, ::System::ComponentModel::ListSortDirection direction) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::System.ComponentModel.IBindingList.ApplySort");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prop, direction);
    }
    // protected System.Void ApplySortCore(System.ComponentModel.PropertyDescriptor prop, System.ComponentModel.ListSortDirection direction)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ApplySortCore(::System::ComponentModel::PropertyDescriptor* prop, ::System::ComponentModel::ListSortDirection direction) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::ApplySortCore");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prop, direction);
    }
    // private System.Void System.ComponentModel.IBindingList.RemoveSort()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void System_ComponentModel_IBindingList_RemoveSort() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::System.ComponentModel.IBindingList.RemoveSort");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected System.Void RemoveSortCore()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void RemoveSortCore() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::RemoveSortCore");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Int32 System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor prop, System.Object key)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int System_ComponentModel_IBindingList_Find(::System::ComponentModel::PropertyDescriptor* prop, ::Il2CppObject* key) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::System.ComponentModel.IBindingList.Find");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, prop, key);
    }
    // protected System.Int32 FindCore(System.ComponentModel.PropertyDescriptor prop, System.Object key)
    // Offset: 0xFFFFFFFFFFFFFFFF
    int FindCore(::System::ComponentModel::PropertyDescriptor* prop, ::Il2CppObject* key) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::FindCore");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, prop, key);
    }
    // private System.Void System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor prop)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void System_ComponentModel_IBindingList_AddIndex(::System::ComponentModel::PropertyDescriptor* prop) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::System.ComponentModel.IBindingList.AddIndex");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prop);
    }
    // private System.Void System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor prop)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void System_ComponentModel_IBindingList_RemoveIndex(::System::ComponentModel::PropertyDescriptor* prop) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::System.ComponentModel.IBindingList.RemoveIndex");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::BindingList_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prop);
    }
    // private System.Void HookPropertyChanged(T item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void HookPropertyChanged(T item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::HookPropertyChanged");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HookPropertyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
    }
    // private System.Void UnhookPropertyChanged(T item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UnhookPropertyChanged(T item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::UnhookPropertyChanged");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnhookPropertyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
    }
    // private System.Void Child_PropertyChanged(System.Object sender, System.ComponentModel.PropertyChangedEventArgs e)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Child_PropertyChanged(::Il2CppObject* sender, ::System::ComponentModel::PropertyChangedEventArgs* e) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::Child_PropertyChanged");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Child_PropertyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
    }
    // protected override System.Void ClearItems()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Collections.ObjectModel.Collection`1
    // Base method: System.Void Collection_1::ClearItems()
    void ClearItems() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::ClearItems");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ObjectModel::Collection_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // protected override System.Void InsertItem(System.Int32 index, T item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Collections.ObjectModel.Collection`1
    // Base method: System.Void Collection_1::InsertItem(System.Int32 index, T item)
    void InsertItem(int index, T item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::InsertItem");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ObjectModel::Collection_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
    }
    // protected override System.Void RemoveItem(System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Collections.ObjectModel.Collection`1
    // Base method: System.Void Collection_1::RemoveItem(System.Int32 index)
    void RemoveItem(int index) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::RemoveItem");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ObjectModel::Collection_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
    }
    // protected override System.Void SetItem(System.Int32 index, T item)
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Collections.ObjectModel.Collection`1
    // Base method: System.Void Collection_1::SetItem(System.Int32 index, T item)
    void SetItem(int index, T item) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BindingList_1::SetItem");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::ObjectModel::Collection_1<T>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
    }
  }; // System.ComponentModel.BindingList`1
  // Could not write size check! Type: System.ComponentModel.BindingList`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
