// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: SyntaxCheck
  class SyntaxCheck;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::ComponentModel::SyntaxCheck);
DEFINE_IL2CPP_ARG_TYPE(::System::ComponentModel::SyntaxCheck*, "System.ComponentModel", "SyntaxCheck");
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.ComponentModel.SyntaxCheck
  // [TokenAttribute] Offset: FFFFFFFF
  class SyntaxCheck : public ::Il2CppObject {
    public:
    // static public System.Boolean CheckMachineName(System.String value)
    // Offset: 0x12CE508
    static bool CheckMachineName(::StringW value);
    // static public System.Boolean CheckPath(System.String value)
    // Offset: 0x12CE5A4
    static bool CheckPath(::StringW value);
    // static public System.Boolean CheckRootedPath(System.String value)
    // Offset: 0x12CE644
    static bool CheckRootedPath(::StringW value);
  }; // System.ComponentModel.SyntaxCheck
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::ComponentModel::SyntaxCheck::CheckMachineName
// Il2CppName: CheckMachineName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&System::ComponentModel::SyntaxCheck::CheckMachineName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::SyntaxCheck*), "CheckMachineName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::SyntaxCheck::CheckPath
// Il2CppName: CheckPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&System::ComponentModel::SyntaxCheck::CheckPath)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::SyntaxCheck*), "CheckPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::SyntaxCheck::CheckRootedPath
// Il2CppName: CheckRootedPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&System::ComponentModel::SyntaxCheck::CheckRootedPath)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::SyntaxCheck*), "CheckRootedPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
