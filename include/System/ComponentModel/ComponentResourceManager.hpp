// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Resources.ResourceManager
#include "System/Resources/ResourceManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: CultureInfo
  class CultureInfo;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: SortedList`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class SortedList_2;
}
// Forward declaring namespace: System::Resources
namespace System::Resources {
  // Forward declaring type: ResourceSet
  class ResourceSet;
}
// Completed forward declares
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: ComponentResourceManager
  class ComponentResourceManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::ComponentModel::ComponentResourceManager);
DEFINE_IL2CPP_ARG_TYPE(::System::ComponentModel::ComponentResourceManager*, "System.ComponentModel", "ComponentResourceManager");
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Size: 0x98
  #pragma pack(push, 1)
  // Autogenerated type: System.ComponentModel.ComponentResourceManager
  // [TokenAttribute] Offset: FFFFFFFF
  class ComponentResourceManager : public ::System::Resources::ResourceManager {
    public:
    public:
    // private System.Collections.Hashtable _resourceSets
    // Size: 0x8
    // Offset: 0x88
    ::System::Collections::Hashtable* resourceSets;
    // Field size check
    static_assert(sizeof(::System::Collections::Hashtable*) == 0x8);
    // private System.Globalization.CultureInfo _neutralResourcesCulture
    // Size: 0x8
    // Offset: 0x90
    ::System::Globalization::CultureInfo* neutralResourcesCulture;
    // Field size check
    static_assert(sizeof(::System::Globalization::CultureInfo*) == 0x8);
    public:
    // Get instance field reference: private System.Collections.Hashtable _resourceSets
    [[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& dyn__resourceSets();
    // Get instance field reference: private System.Globalization.CultureInfo _neutralResourcesCulture
    [[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& dyn__neutralResourcesCulture();
    // private System.Globalization.CultureInfo get_NeutralResourcesCulture()
    // Offset: 0x11DACFC
    ::System::Globalization::CultureInfo* get_NeutralResourcesCulture();
    // public System.Void .ctor()
    // Offset: 0x11DAC1C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ComponentResourceManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComponentResourceManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ComponentResourceManager*, creationType>()));
    }
    // public System.Void .ctor(System.Type t)
    // Offset: 0x11DAC84
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ComponentResourceManager* New_ctor(::System::Type* t) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ComponentResourceManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ComponentResourceManager*, creationType>(t)));
    }
    // public System.Void ApplyResources(System.Object value, System.String objectName)
    // Offset: 0x11DAD94
    void ApplyResources(::Il2CppObject* value, ::StringW objectName);
    // public System.Void ApplyResources(System.Object value, System.String objectName, System.Globalization.CultureInfo culture)
    // Offset: 0x11DADA4
    void ApplyResources(::Il2CppObject* value, ::StringW objectName, ::System::Globalization::CultureInfo* culture);
    // private System.Collections.Generic.SortedList`2<System.String,System.Object> FillResources(System.Globalization.CultureInfo culture, out System.Resources.ResourceSet resourceSet)
    // Offset: 0x11DB76C
    ::System::Collections::Generic::SortedList_2<::StringW, ::Il2CppObject*>* FillResources(::System::Globalization::CultureInfo* culture, ByRef<::System::Resources::ResourceSet*> resourceSet);
  }; // System.ComponentModel.ComponentResourceManager
  #pragma pack(pop)
  static check_size<sizeof(ComponentResourceManager), 144 + sizeof(::System::Globalization::CultureInfo*)> __System_ComponentModel_ComponentResourceManagerSizeCheck;
  static_assert(sizeof(ComponentResourceManager) == 0x98);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::ComponentModel::ComponentResourceManager::get_NeutralResourcesCulture
// Il2CppName: get_NeutralResourcesCulture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::CultureInfo* (System::ComponentModel::ComponentResourceManager::*)()>(&System::ComponentModel::ComponentResourceManager::get_NeutralResourcesCulture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ComponentResourceManager*), "get_NeutralResourcesCulture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ComponentResourceManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::ComponentResourceManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::ComponentResourceManager::ApplyResources
// Il2CppName: ApplyResources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::ComponentResourceManager::*)(::Il2CppObject*, ::StringW)>(&System::ComponentModel::ComponentResourceManager::ApplyResources)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* objectName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ComponentResourceManager*), "ApplyResources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, objectName});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ComponentResourceManager::ApplyResources
// Il2CppName: ApplyResources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::ComponentResourceManager::*)(::Il2CppObject*, ::StringW, ::System::Globalization::CultureInfo*)>(&System::ComponentModel::ComponentResourceManager::ApplyResources)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* objectName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* culture = &::il2cpp_utils::GetClassFromName("System.Globalization", "CultureInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ComponentResourceManager*), "ApplyResources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, objectName, culture});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ComponentResourceManager::FillResources
// Il2CppName: FillResources
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::SortedList_2<::StringW, ::Il2CppObject*>* (System::ComponentModel::ComponentResourceManager::*)(::System::Globalization::CultureInfo*, ByRef<::System::Resources::ResourceSet*>)>(&System::ComponentModel::ComponentResourceManager::FillResources)> {
  static const MethodInfo* get() {
    static auto* culture = &::il2cpp_utils::GetClassFromName("System.Globalization", "CultureInfo")->byval_arg;
    static auto* resourceSet = &::il2cpp_utils::GetClassFromName("System.Resources", "ResourceSet")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ComponentResourceManager*), "FillResources", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{culture, resourceSet});
  }
};
