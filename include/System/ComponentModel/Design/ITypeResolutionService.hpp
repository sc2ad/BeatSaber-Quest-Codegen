// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: AssemblyName
  class AssemblyName;
}
// Completed forward declares
// Type namespace: System.ComponentModel.Design
namespace System::ComponentModel::Design {
  // Forward declaring type: ITypeResolutionService
  class ITypeResolutionService;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::ComponentModel::Design::ITypeResolutionService);
DEFINE_IL2CPP_ARG_TYPE(::System::ComponentModel::Design::ITypeResolutionService*, "System.ComponentModel.Design", "ITypeResolutionService");
// Type namespace: System.ComponentModel.Design
namespace System::ComponentModel::Design {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.ComponentModel.Design.ITypeResolutionService
  // [TokenAttribute] Offset: FFFFFFFF
  class ITypeResolutionService {
    public:
    // public System.Type GetType(System.String name)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Type* GetType(::StringW name);
    // public System.String GetPathOfAssembly(System.Reflection.AssemblyName name)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW GetPathOfAssembly(::System::Reflection::AssemblyName* name);
  }; // System.ComponentModel.Design.ITypeResolutionService
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::ComponentModel::Design::ITypeResolutionService::GetType
// Il2CppName: GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::ComponentModel::Design::ITypeResolutionService::*)(::StringW)>(&System::ComponentModel::Design::ITypeResolutionService::GetType)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::Design::ITypeResolutionService*), "GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::Design::ITypeResolutionService::GetPathOfAssembly
// Il2CppName: GetPathOfAssembly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::ComponentModel::Design::ITypeResolutionService::*)(::System::Reflection::AssemblyName*)>(&System::ComponentModel::Design::ITypeResolutionService::GetPathOfAssembly)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System.Reflection", "AssemblyName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::Design::ITypeResolutionService*), "GetPathOfAssembly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
