// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: System.ComponentModel.Design.Serialization
namespace System::ComponentModel::Design::Serialization {
  // Forward declaring type: DesignerSerializerAttribute
  class DesignerSerializerAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::ComponentModel::Design::Serialization::DesignerSerializerAttribute);
DEFINE_IL2CPP_ARG_TYPE(::System::ComponentModel::Design::Serialization::DesignerSerializerAttribute*, "System.ComponentModel.Design.Serialization", "DesignerSerializerAttribute");
// Type namespace: System.ComponentModel.Design.Serialization
namespace System::ComponentModel::Design::Serialization {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 1048064
  class DesignerSerializerAttribute : public ::System::Attribute {
    public:
    public:
    // private System.String serializerTypeName
    // Size: 0x8
    // Offset: 0x10
    ::StringW serializerTypeName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String serializerBaseTypeName
    // Size: 0x8
    // Offset: 0x18
    ::StringW serializerBaseTypeName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String typeId
    // Size: 0x8
    // Offset: 0x20
    ::StringW typeId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private System.String serializerTypeName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_serializerTypeName();
    // Get instance field reference: private System.String serializerBaseTypeName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_serializerBaseTypeName();
    // Get instance field reference: private System.String typeId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_typeId();
    // public System.Void .ctor(System.String serializerTypeName, System.String baseSerializerTypeName)
    // Offset: 0x1D9AB20
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DesignerSerializerAttribute* New_ctor(::StringW serializerTypeName, ::StringW baseSerializerTypeName) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::Serialization::DesignerSerializerAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DesignerSerializerAttribute*, creationType>(serializerTypeName, baseSerializerTypeName)));
    }
    // public override System.Object get_TypeId()
    // Offset: 0x1D9AB58
    // Implemented from: System.Attribute
    // Base method: System.Object Attribute::get_TypeId()
    ::Il2CppObject* get_TypeId();
  }; // System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  #pragma pack(pop)
  static check_size<sizeof(DesignerSerializerAttribute), 32 + sizeof(::StringW)> __System_ComponentModel_Design_Serialization_DesignerSerializerAttributeSizeCheck;
  static_assert(sizeof(DesignerSerializerAttribute) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::ComponentModel::Design::Serialization::DesignerSerializerAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::Design::Serialization::DesignerSerializerAttribute::get_TypeId
// Il2CppName: get_TypeId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::ComponentModel::Design::Serialization::DesignerSerializerAttribute::*)()>(&System::ComponentModel::Design::Serialization::DesignerSerializerAttribute::get_TypeId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::Design::Serialization::DesignerSerializerAttribute*), "get_TypeId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
