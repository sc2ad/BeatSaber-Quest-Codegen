// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Runtime.InteropServices.ExternalException
#include "System/Runtime/InteropServices/ExternalException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System.ComponentModel.Design
namespace System::ComponentModel::Design {
  // Forward declaring type: CheckoutException
  class CheckoutException;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::ComponentModel::Design::CheckoutException);
DEFINE_IL2CPP_ARG_TYPE(::System::ComponentModel::Design::CheckoutException*, "System.ComponentModel.Design", "CheckoutException");
// Type namespace: System.ComponentModel.Design
namespace System::ComponentModel::Design {
  // Size: 0x88
  #pragma pack(push, 1)
  // Autogenerated type: System.ComponentModel.Design.CheckoutException
  // [TokenAttribute] Offset: FFFFFFFF
  class CheckoutException : public ::System::Runtime::InteropServices::ExternalException {
    public:
    // Get static field: static public readonly System.ComponentModel.Design.CheckoutException Canceled
    static ::System::ComponentModel::Design::CheckoutException* _get_Canceled();
    // Set static field: static public readonly System.ComponentModel.Design.CheckoutException Canceled
    static void _set_Canceled(::System::ComponentModel::Design::CheckoutException* value);
    // public System.Void .ctor()
    // Offset: 0x120FB20
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CheckoutException* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::CheckoutException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CheckoutException*, creationType>()));
    }
    // public System.Void .ctor(System.String message, System.Int32 errorCode)
    // Offset: 0x120FB28
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CheckoutException* New_ctor(::StringW message, int errorCode) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::CheckoutException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CheckoutException*, creationType>(message, errorCode)));
    }
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x120FB30
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CheckoutException* New_ctor(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::CheckoutException::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CheckoutException*, creationType>(info, context)));
    }
    // static private System.Void .cctor()
    // Offset: 0x120FB38
    static void _cctor();
  }; // System.ComponentModel.Design.CheckoutException
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::ComponentModel::Design::CheckoutException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::Design::CheckoutException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::Design::CheckoutException::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::Design::CheckoutException::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ComponentModel::Design::CheckoutException::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::Design::CheckoutException*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
