// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.Collections.Specialized.BitVector32
#include "System/Collections/Specialized/BitVector32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Attribute
  class Attribute;
  // Forward declaring type: EventHandler
  class EventHandler;
  // Forward declaring type: EventArgs
  class EventArgs;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: PropertyInfo
  class PropertyInfo;
  // Forward declaring type: MethodInfo
  class MethodInfo;
}
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: EventDescriptor
  class EventDescriptor;
  // Forward declaring type: IExtenderProvider
  class IExtenderProvider;
  // Forward declaring type: PropertyChangedEventArgs
  class PropertyChangedEventArgs;
}
// Forward declaring namespace: System::Diagnostics
namespace System::Diagnostics {
  // Forward declaring type: TraceSwitch
  class TraceSwitch;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IList
  class IList;
}
// Completed forward declares
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: ReflectPropertyDescriptor
  class ReflectPropertyDescriptor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::ComponentModel::ReflectPropertyDescriptor);
DEFINE_IL2CPP_ARG_TYPE(::System::ComponentModel::ReflectPropertyDescriptor*, "System.ComponentModel", "ReflectPropertyDescriptor");
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Size: 0xE8
  #pragma pack(push, 1)
  // Autogenerated type: System.ComponentModel.ReflectPropertyDescriptor
  // [TokenAttribute] Offset: FFFFFFFF
  class ReflectPropertyDescriptor : public ::System::ComponentModel::PropertyDescriptor {
    public:
    public:
    // private System.Collections.Specialized.BitVector32 state
    // Size: 0x4
    // Offset: 0x84
    ::System::Collections::Specialized::BitVector32 state;
    // Field size check
    static_assert(sizeof(::System::Collections::Specialized::BitVector32) == 0x4);
    // private System.Type componentClass
    // Size: 0x8
    // Offset: 0x88
    ::System::Type* componentClass;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    // private System.Type type
    // Size: 0x8
    // Offset: 0x90
    ::System::Type* type;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    // private System.Object defaultValue
    // Size: 0x8
    // Offset: 0x98
    ::Il2CppObject* defaultValue;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Object ambientValue
    // Size: 0x8
    // Offset: 0xA0
    ::Il2CppObject* ambientValue;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Reflection.PropertyInfo propInfo
    // Size: 0x8
    // Offset: 0xA8
    ::System::Reflection::PropertyInfo* propInfo;
    // Field size check
    static_assert(sizeof(::System::Reflection::PropertyInfo*) == 0x8);
    // private System.Reflection.MethodInfo getMethod
    // Size: 0x8
    // Offset: 0xB0
    ::System::Reflection::MethodInfo* getMethod;
    // Field size check
    static_assert(sizeof(::System::Reflection::MethodInfo*) == 0x8);
    // private System.Reflection.MethodInfo setMethod
    // Size: 0x8
    // Offset: 0xB8
    ::System::Reflection::MethodInfo* setMethod;
    // Field size check
    static_assert(sizeof(::System::Reflection::MethodInfo*) == 0x8);
    // private System.Reflection.MethodInfo shouldSerializeMethod
    // Size: 0x8
    // Offset: 0xC0
    ::System::Reflection::MethodInfo* shouldSerializeMethod;
    // Field size check
    static_assert(sizeof(::System::Reflection::MethodInfo*) == 0x8);
    // private System.Reflection.MethodInfo resetMethod
    // Size: 0x8
    // Offset: 0xC8
    ::System::Reflection::MethodInfo* resetMethod;
    // Field size check
    static_assert(sizeof(::System::Reflection::MethodInfo*) == 0x8);
    // private System.ComponentModel.EventDescriptor realChangedEvent
    // Size: 0x8
    // Offset: 0xD0
    ::System::ComponentModel::EventDescriptor* realChangedEvent;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::EventDescriptor*) == 0x8);
    // private System.ComponentModel.EventDescriptor realIPropChangedEvent
    // Size: 0x8
    // Offset: 0xD8
    ::System::ComponentModel::EventDescriptor* realIPropChangedEvent;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::EventDescriptor*) == 0x8);
    // private System.Type receiverType
    // Size: 0x8
    // Offset: 0xE0
    ::System::Type* receiverType;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    public:
    // Get static field: static private readonly System.Type[] argsNone
    static ::ArrayW<::System::Type*> _get_argsNone();
    // Set static field: static private readonly System.Type[] argsNone
    static void _set_argsNone(::ArrayW<::System::Type*> value);
    // Get static field: static private readonly System.Object noValue
    static ::Il2CppObject* _get_noValue();
    // Set static field: static private readonly System.Object noValue
    static void _set_noValue(::Il2CppObject* value);
    // Get static field: static private System.Diagnostics.TraceSwitch PropDescCreateSwitch
    static ::System::Diagnostics::TraceSwitch* _get_PropDescCreateSwitch();
    // Set static field: static private System.Diagnostics.TraceSwitch PropDescCreateSwitch
    static void _set_PropDescCreateSwitch(::System::Diagnostics::TraceSwitch* value);
    // Get static field: static private System.Diagnostics.TraceSwitch PropDescUsageSwitch
    static ::System::Diagnostics::TraceSwitch* _get_PropDescUsageSwitch();
    // Set static field: static private System.Diagnostics.TraceSwitch PropDescUsageSwitch
    static void _set_PropDescUsageSwitch(::System::Diagnostics::TraceSwitch* value);
    // Get static field: static private readonly System.Int32 BitDefaultValueQueried
    static int _get_BitDefaultValueQueried();
    // Set static field: static private readonly System.Int32 BitDefaultValueQueried
    static void _set_BitDefaultValueQueried(int value);
    // Get static field: static private readonly System.Int32 BitGetQueried
    static int _get_BitGetQueried();
    // Set static field: static private readonly System.Int32 BitGetQueried
    static void _set_BitGetQueried(int value);
    // Get static field: static private readonly System.Int32 BitSetQueried
    static int _get_BitSetQueried();
    // Set static field: static private readonly System.Int32 BitSetQueried
    static void _set_BitSetQueried(int value);
    // Get static field: static private readonly System.Int32 BitShouldSerializeQueried
    static int _get_BitShouldSerializeQueried();
    // Set static field: static private readonly System.Int32 BitShouldSerializeQueried
    static void _set_BitShouldSerializeQueried(int value);
    // Get static field: static private readonly System.Int32 BitResetQueried
    static int _get_BitResetQueried();
    // Set static field: static private readonly System.Int32 BitResetQueried
    static void _set_BitResetQueried(int value);
    // Get static field: static private readonly System.Int32 BitChangedQueried
    static int _get_BitChangedQueried();
    // Set static field: static private readonly System.Int32 BitChangedQueried
    static void _set_BitChangedQueried(int value);
    // Get static field: static private readonly System.Int32 BitIPropChangedQueried
    static int _get_BitIPropChangedQueried();
    // Set static field: static private readonly System.Int32 BitIPropChangedQueried
    static void _set_BitIPropChangedQueried(int value);
    // Get static field: static private readonly System.Int32 BitReadOnlyChecked
    static int _get_BitReadOnlyChecked();
    // Set static field: static private readonly System.Int32 BitReadOnlyChecked
    static void _set_BitReadOnlyChecked(int value);
    // Get static field: static private readonly System.Int32 BitAmbientValueQueried
    static int _get_BitAmbientValueQueried();
    // Set static field: static private readonly System.Int32 BitAmbientValueQueried
    static void _set_BitAmbientValueQueried(int value);
    // Get static field: static private readonly System.Int32 BitSetOnDemand
    static int _get_BitSetOnDemand();
    // Set static field: static private readonly System.Int32 BitSetOnDemand
    static void _set_BitSetOnDemand(int value);
    // Get instance field reference: private System.Collections.Specialized.BitVector32 state
    [[deprecated("Use field access instead!")]] ::System::Collections::Specialized::BitVector32& dyn_state();
    // Get instance field reference: private System.Type componentClass
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_componentClass();
    // Get instance field reference: private System.Type type
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_type();
    // Get instance field reference: private System.Object defaultValue
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_defaultValue();
    // Get instance field reference: private System.Object ambientValue
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_ambientValue();
    // Get instance field reference: private System.Reflection.PropertyInfo propInfo
    [[deprecated("Use field access instead!")]] ::System::Reflection::PropertyInfo*& dyn_propInfo();
    // Get instance field reference: private System.Reflection.MethodInfo getMethod
    [[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& dyn_getMethod();
    // Get instance field reference: private System.Reflection.MethodInfo setMethod
    [[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& dyn_setMethod();
    // Get instance field reference: private System.Reflection.MethodInfo shouldSerializeMethod
    [[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& dyn_shouldSerializeMethod();
    // Get instance field reference: private System.Reflection.MethodInfo resetMethod
    [[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& dyn_resetMethod();
    // Get instance field reference: private System.ComponentModel.EventDescriptor realChangedEvent
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::EventDescriptor*& dyn_realChangedEvent();
    // Get instance field reference: private System.ComponentModel.EventDescriptor realIPropChangedEvent
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::EventDescriptor*& dyn_realIPropChangedEvent();
    // Get instance field reference: private System.Type receiverType
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_receiverType();
    // private System.Object get_AmbientValue()
    // Offset: 0x12BF014
    ::Il2CppObject* get_AmbientValue();
    // private System.ComponentModel.EventDescriptor get_ChangedEventValue()
    // Offset: 0x12BF194
    ::System::ComponentModel::EventDescriptor* get_ChangedEventValue();
    // private System.ComponentModel.EventDescriptor get_IPropChangedEventValue()
    // Offset: 0x12BF470
    ::System::ComponentModel::EventDescriptor* get_IPropChangedEventValue();
    // private System.Void set_IPropChangedEventValue(System.ComponentModel.EventDescriptor value)
    // Offset: 0x12BF620
    void set_IPropChangedEventValue(::System::ComponentModel::EventDescriptor* value);
    // private System.Object get_DefaultValue()
    // Offset: 0x12BF6B4
    ::Il2CppObject* get_DefaultValue();
    // private System.Reflection.MethodInfo get_GetMethodValue()
    // Offset: 0x12BF964
    ::System::Reflection::MethodInfo* get_GetMethodValue();
    // private System.Boolean get_IsExtender()
    // Offset: 0x12BFDA4
    bool get_IsExtender();
    // private System.Reflection.MethodInfo get_ResetMethodValue()
    // Offset: 0x12C0458
    ::System::Reflection::MethodInfo* get_ResetMethodValue();
    // private System.Reflection.MethodInfo get_SetMethodValue()
    // Offset: 0x12BFF0C
    ::System::Reflection::MethodInfo* get_SetMethodValue();
    // private System.Reflection.MethodInfo get_ShouldSerializeMethodValue()
    // Offset: 0x12C066C
    ::System::Reflection::MethodInfo* get_ShouldSerializeMethodValue();
    // public System.Void .ctor(System.Type componentClass, System.String name, System.Type type, System.Attribute[] attributes)
    // Offset: 0x12BE6CC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ReflectPropertyDescriptor* New_ctor(::System::Type* componentClass, ::StringW name, ::System::Type* type, ::ArrayW<::System::Attribute*> attributes) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectPropertyDescriptor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ReflectPropertyDescriptor*, creationType>(componentClass, name, type, attributes)));
    }
    // public System.Void .ctor(System.Type componentClass, System.String name, System.Type type, System.Reflection.PropertyInfo propInfo, System.Reflection.MethodInfo getMethod, System.Reflection.MethodInfo setMethod, System.Attribute[] attrs)
    // Offset: 0x12BE9B4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ReflectPropertyDescriptor* New_ctor(::System::Type* componentClass, ::StringW name, ::System::Type* type, ::System::Reflection::PropertyInfo* propInfo, ::System::Reflection::MethodInfo* getMethod, ::System::Reflection::MethodInfo* setMethod, ::ArrayW<::System::Attribute*> attrs) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectPropertyDescriptor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ReflectPropertyDescriptor*, creationType>(componentClass, name, type, propInfo, getMethod, setMethod, attrs)));
    }
    // public System.Void .ctor(System.Type componentClass, System.String name, System.Type type, System.Type receiverType, System.Reflection.MethodInfo getMethod, System.Reflection.MethodInfo setMethod, System.Attribute[] attrs)
    // Offset: 0x12BEB08
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ReflectPropertyDescriptor* New_ctor(::System::Type* componentClass, ::StringW name, ::System::Type* type, ::System::Type* receiverType, ::System::Reflection::MethodInfo* getMethod, ::System::Reflection::MethodInfo* setMethod, ::ArrayW<::System::Attribute*> attrs) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectPropertyDescriptor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ReflectPropertyDescriptor*, creationType>(componentClass, name, type, receiverType, getMethod, setMethod, attrs)));
    }
    // public System.Void .ctor(System.Type componentClass, System.ComponentModel.PropertyDescriptor oldReflectPropertyDescriptor, System.Attribute[] attributes)
    // Offset: 0x12BEBE8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ReflectPropertyDescriptor* New_ctor(::System::Type* componentClass, ::System::ComponentModel::PropertyDescriptor* oldReflectPropertyDescriptor, ::ArrayW<::System::Attribute*> attributes) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectPropertyDescriptor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ReflectPropertyDescriptor*, creationType>(componentClass, oldReflectPropertyDescriptor, attributes)));
    }
    // static private System.Void .cctor()
    // Offset: 0x12C3E5C
    static void _cctor();
    // System.Boolean ExtenderCanResetValue(System.ComponentModel.IExtenderProvider provider, System.Object component)
    // Offset: 0x12C0A20
    bool ExtenderCanResetValue(::System::ComponentModel::IExtenderProvider* provider, ::Il2CppObject* component);
    // System.Type ExtenderGetReceiverType()
    // Offset: 0x12C0DE8
    ::System::Type* ExtenderGetReceiverType();
    // System.Type ExtenderGetType(System.ComponentModel.IExtenderProvider provider)
    // Offset: 0x12C0DF0
    ::System::Type* ExtenderGetType(::System::ComponentModel::IExtenderProvider* provider);
    // System.Object ExtenderGetValue(System.ComponentModel.IExtenderProvider provider, System.Object component)
    // Offset: 0x12C0CA4
    ::Il2CppObject* ExtenderGetValue(::System::ComponentModel::IExtenderProvider* provider, ::Il2CppObject* component);
    // System.Void ExtenderResetValue(System.ComponentModel.IExtenderProvider provider, System.Object component, System.ComponentModel.PropertyDescriptor notifyDesc)
    // Offset: 0x12C0E00
    void ExtenderResetValue(::System::ComponentModel::IExtenderProvider* provider, ::Il2CppObject* component, ::System::ComponentModel::PropertyDescriptor* notifyDesc);
    // System.Void ExtenderSetValue(System.ComponentModel.IExtenderProvider provider, System.Object component, System.Object value, System.ComponentModel.PropertyDescriptor notifyDesc)
    // Offset: 0x12C1310
    void ExtenderSetValue(::System::ComponentModel::IExtenderProvider* provider, ::Il2CppObject* component, ::Il2CppObject* value, ::System::ComponentModel::PropertyDescriptor* notifyDesc);
    // System.Boolean ExtenderShouldSerializeValue(System.ComponentModel.IExtenderProvider provider, System.Object component)
    // Offset: 0x12C1768
    bool ExtenderShouldSerializeValue(::System::ComponentModel::IExtenderProvider* provider, ::Il2CppObject* component);
    // System.Void OnINotifyPropertyChanged(System.Object component, System.ComponentModel.PropertyChangedEventArgs e)
    // Offset: 0x12C2D94
    void OnINotifyPropertyChanged(::Il2CppObject* component, ::System::ComponentModel::PropertyChangedEventArgs* e);
    // public override System.Type get_ComponentType()
    // Offset: 0x12BF6AC
    // Implemented from: System.ComponentModel.PropertyDescriptor
    // Base method: System.Type PropertyDescriptor::get_ComponentType()
    ::System::Type* get_ComponentType();
    // public override System.Boolean get_IsReadOnly()
    // Offset: 0x12BFE14
    // Implemented from: System.ComponentModel.PropertyDescriptor
    // Base method: System.Boolean PropertyDescriptor::get_IsReadOnly()
    bool get_IsReadOnly();
    // public override System.Type get_PropertyType()
    // Offset: 0x12C0450
    // Implemented from: System.ComponentModel.PropertyDescriptor
    // Base method: System.Type PropertyDescriptor::get_PropertyType()
    ::System::Type* get_PropertyType();
    // public override System.Boolean get_SupportsChangeEvents()
    // Offset: 0x12C3E20
    // Implemented from: System.ComponentModel.PropertyDescriptor
    // Base method: System.Boolean PropertyDescriptor::get_SupportsChangeEvents()
    bool get_SupportsChangeEvents();
    // public override System.Void AddValueChanged(System.Object component, System.EventHandler handler)
    // Offset: 0x12C0880
    // Implemented from: System.ComponentModel.PropertyDescriptor
    // Base method: System.Void PropertyDescriptor::AddValueChanged(System.Object component, System.EventHandler handler)
    void AddValueChanged(::Il2CppObject* component, ::System::EventHandler* handler);
    // public override System.Boolean CanResetValue(System.Object component)
    // Offset: 0x12C1BA4
    // Implemented from: System.ComponentModel.PropertyDescriptor
    // Base method: System.Boolean PropertyDescriptor::CanResetValue(System.Object component)
    bool CanResetValue(::Il2CppObject* component);
    // protected override System.Void FillAttributes(System.Collections.IList attributes)
    // Offset: 0x12C1E28
    // Implemented from: System.ComponentModel.PropertyDescriptor
    // Base method: System.Void PropertyDescriptor::FillAttributes(System.Collections.IList attributes)
    void FillAttributes(::System::Collections::IList* attributes);
    // public override System.Object GetValue(System.Object component)
    // Offset: 0x12C29A0
    // Implemented from: System.ComponentModel.PropertyDescriptor
    // Base method: System.Object PropertyDescriptor::GetValue(System.Object component)
    ::Il2CppObject* GetValue(::Il2CppObject* component);
    // protected override System.Void OnValueChanged(System.Object component, System.EventArgs e)
    // Offset: 0x12C2EAC
    // Implemented from: System.ComponentModel.PropertyDescriptor
    // Base method: System.Void PropertyDescriptor::OnValueChanged(System.Object component, System.EventArgs e)
    void OnValueChanged(::Il2CppObject* component, ::System::EventArgs* e);
    // public override System.Void RemoveValueChanged(System.Object component, System.EventHandler handler)
    // Offset: 0x12C2F70
    // Implemented from: System.ComponentModel.PropertyDescriptor
    // Base method: System.Void PropertyDescriptor::RemoveValueChanged(System.Object component, System.EventHandler handler)
    void RemoveValueChanged(::Il2CppObject* component, ::System::EventHandler* handler);
    // public override System.Void ResetValue(System.Object component)
    // Offset: 0x12C3100
    // Implemented from: System.ComponentModel.PropertyDescriptor
    // Base method: System.Void PropertyDescriptor::ResetValue(System.Object component)
    void ResetValue(::Il2CppObject* component);
    // public override System.Void SetValue(System.Object component, System.Object value)
    // Offset: 0x12C3574
    // Implemented from: System.ComponentModel.PropertyDescriptor
    // Base method: System.Void PropertyDescriptor::SetValue(System.Object component, System.Object value)
    void SetValue(::Il2CppObject* component, ::Il2CppObject* value);
    // public override System.Boolean ShouldSerializeValue(System.Object component)
    // Offset: 0x12C3AEC
    // Implemented from: System.ComponentModel.PropertyDescriptor
    // Base method: System.Boolean PropertyDescriptor::ShouldSerializeValue(System.Object component)
    bool ShouldSerializeValue(::Il2CppObject* component);
  }; // System.ComponentModel.ReflectPropertyDescriptor
  #pragma pack(pop)
  static check_size<sizeof(ReflectPropertyDescriptor), 224 + sizeof(::System::Type*)> __System_ComponentModel_ReflectPropertyDescriptorSizeCheck;
  static_assert(sizeof(ReflectPropertyDescriptor) == 0xE8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::get_AmbientValue
// Il2CppName: get_AmbientValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::ComponentModel::ReflectPropertyDescriptor::*)()>(&System::ComponentModel::ReflectPropertyDescriptor::get_AmbientValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "get_AmbientValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::get_ChangedEventValue
// Il2CppName: get_ChangedEventValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::EventDescriptor* (System::ComponentModel::ReflectPropertyDescriptor::*)()>(&System::ComponentModel::ReflectPropertyDescriptor::get_ChangedEventValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "get_ChangedEventValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::get_IPropChangedEventValue
// Il2CppName: get_IPropChangedEventValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ComponentModel::EventDescriptor* (System::ComponentModel::ReflectPropertyDescriptor::*)()>(&System::ComponentModel::ReflectPropertyDescriptor::get_IPropChangedEventValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "get_IPropChangedEventValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::set_IPropChangedEventValue
// Il2CppName: set_IPropChangedEventValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::ReflectPropertyDescriptor::*)(::System::ComponentModel::EventDescriptor*)>(&System::ComponentModel::ReflectPropertyDescriptor::set_IPropChangedEventValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "EventDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "set_IPropChangedEventValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::get_DefaultValue
// Il2CppName: get_DefaultValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::ComponentModel::ReflectPropertyDescriptor::*)()>(&System::ComponentModel::ReflectPropertyDescriptor::get_DefaultValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "get_DefaultValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::get_GetMethodValue
// Il2CppName: get_GetMethodValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::MethodInfo* (System::ComponentModel::ReflectPropertyDescriptor::*)()>(&System::ComponentModel::ReflectPropertyDescriptor::get_GetMethodValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "get_GetMethodValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::get_IsExtender
// Il2CppName: get_IsExtender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::ReflectPropertyDescriptor::*)()>(&System::ComponentModel::ReflectPropertyDescriptor::get_IsExtender)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "get_IsExtender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::get_ResetMethodValue
// Il2CppName: get_ResetMethodValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::MethodInfo* (System::ComponentModel::ReflectPropertyDescriptor::*)()>(&System::ComponentModel::ReflectPropertyDescriptor::get_ResetMethodValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "get_ResetMethodValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::get_SetMethodValue
// Il2CppName: get_SetMethodValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::MethodInfo* (System::ComponentModel::ReflectPropertyDescriptor::*)()>(&System::ComponentModel::ReflectPropertyDescriptor::get_SetMethodValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "get_SetMethodValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::get_ShouldSerializeMethodValue
// Il2CppName: get_ShouldSerializeMethodValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::MethodInfo* (System::ComponentModel::ReflectPropertyDescriptor::*)()>(&System::ComponentModel::ReflectPropertyDescriptor::get_ShouldSerializeMethodValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "get_ShouldSerializeMethodValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ComponentModel::ReflectPropertyDescriptor::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::ExtenderCanResetValue
// Il2CppName: ExtenderCanResetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::ReflectPropertyDescriptor::*)(::System::ComponentModel::IExtenderProvider*, ::Il2CppObject*)>(&System::ComponentModel::ReflectPropertyDescriptor::ExtenderCanResetValue)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "IExtenderProvider")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "ExtenderCanResetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider, component});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::ExtenderGetReceiverType
// Il2CppName: ExtenderGetReceiverType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::ComponentModel::ReflectPropertyDescriptor::*)()>(&System::ComponentModel::ReflectPropertyDescriptor::ExtenderGetReceiverType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "ExtenderGetReceiverType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::ExtenderGetType
// Il2CppName: ExtenderGetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::ComponentModel::ReflectPropertyDescriptor::*)(::System::ComponentModel::IExtenderProvider*)>(&System::ComponentModel::ReflectPropertyDescriptor::ExtenderGetType)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "IExtenderProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "ExtenderGetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::ExtenderGetValue
// Il2CppName: ExtenderGetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::ComponentModel::ReflectPropertyDescriptor::*)(::System::ComponentModel::IExtenderProvider*, ::Il2CppObject*)>(&System::ComponentModel::ReflectPropertyDescriptor::ExtenderGetValue)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "IExtenderProvider")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "ExtenderGetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider, component});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::ExtenderResetValue
// Il2CppName: ExtenderResetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::ReflectPropertyDescriptor::*)(::System::ComponentModel::IExtenderProvider*, ::Il2CppObject*, ::System::ComponentModel::PropertyDescriptor*)>(&System::ComponentModel::ReflectPropertyDescriptor::ExtenderResetValue)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "IExtenderProvider")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* notifyDesc = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "ExtenderResetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider, component, notifyDesc});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::ExtenderSetValue
// Il2CppName: ExtenderSetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::ReflectPropertyDescriptor::*)(::System::ComponentModel::IExtenderProvider*, ::Il2CppObject*, ::Il2CppObject*, ::System::ComponentModel::PropertyDescriptor*)>(&System::ComponentModel::ReflectPropertyDescriptor::ExtenderSetValue)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "IExtenderProvider")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* notifyDesc = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyDescriptor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "ExtenderSetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider, component, value, notifyDesc});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::ExtenderShouldSerializeValue
// Il2CppName: ExtenderShouldSerializeValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::ReflectPropertyDescriptor::*)(::System::ComponentModel::IExtenderProvider*, ::Il2CppObject*)>(&System::ComponentModel::ReflectPropertyDescriptor::ExtenderShouldSerializeValue)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "IExtenderProvider")->byval_arg;
    static auto* component = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "ExtenderShouldSerializeValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider, component});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::OnINotifyPropertyChanged
// Il2CppName: OnINotifyPropertyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::ReflectPropertyDescriptor::*)(::Il2CppObject*, ::System::ComponentModel::PropertyChangedEventArgs*)>(&System::ComponentModel::ReflectPropertyDescriptor::OnINotifyPropertyChanged)> {
  static const MethodInfo* get() {
    static auto* component = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyChangedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "OnINotifyPropertyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{component, e});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::get_ComponentType
// Il2CppName: get_ComponentType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::ComponentModel::ReflectPropertyDescriptor::*)()>(&System::ComponentModel::ReflectPropertyDescriptor::get_ComponentType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "get_ComponentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::get_IsReadOnly
// Il2CppName: get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::ReflectPropertyDescriptor::*)()>(&System::ComponentModel::ReflectPropertyDescriptor::get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::get_PropertyType
// Il2CppName: get_PropertyType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (System::ComponentModel::ReflectPropertyDescriptor::*)()>(&System::ComponentModel::ReflectPropertyDescriptor::get_PropertyType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "get_PropertyType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::get_SupportsChangeEvents
// Il2CppName: get_SupportsChangeEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::ReflectPropertyDescriptor::*)()>(&System::ComponentModel::ReflectPropertyDescriptor::get_SupportsChangeEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "get_SupportsChangeEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::AddValueChanged
// Il2CppName: AddValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::ReflectPropertyDescriptor::*)(::Il2CppObject*, ::System::EventHandler*)>(&System::ComponentModel::ReflectPropertyDescriptor::AddValueChanged)> {
  static const MethodInfo* get() {
    static auto* component = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* handler = &::il2cpp_utils::GetClassFromName("System", "EventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "AddValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{component, handler});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::CanResetValue
// Il2CppName: CanResetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::ReflectPropertyDescriptor::*)(::Il2CppObject*)>(&System::ComponentModel::ReflectPropertyDescriptor::CanResetValue)> {
  static const MethodInfo* get() {
    static auto* component = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "CanResetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{component});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::FillAttributes
// Il2CppName: FillAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::ReflectPropertyDescriptor::*)(::System::Collections::IList*)>(&System::ComponentModel::ReflectPropertyDescriptor::FillAttributes)> {
  static const MethodInfo* get() {
    static auto* attributes = &::il2cpp_utils::GetClassFromName("System.Collections", "IList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "FillAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attributes});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::GetValue
// Il2CppName: GetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::ComponentModel::ReflectPropertyDescriptor::*)(::Il2CppObject*)>(&System::ComponentModel::ReflectPropertyDescriptor::GetValue)> {
  static const MethodInfo* get() {
    static auto* component = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "GetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{component});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::OnValueChanged
// Il2CppName: OnValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::ReflectPropertyDescriptor::*)(::Il2CppObject*, ::System::EventArgs*)>(&System::ComponentModel::ReflectPropertyDescriptor::OnValueChanged)> {
  static const MethodInfo* get() {
    static auto* component = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System", "EventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "OnValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{component, e});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::RemoveValueChanged
// Il2CppName: RemoveValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::ReflectPropertyDescriptor::*)(::Il2CppObject*, ::System::EventHandler*)>(&System::ComponentModel::ReflectPropertyDescriptor::RemoveValueChanged)> {
  static const MethodInfo* get() {
    static auto* component = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* handler = &::il2cpp_utils::GetClassFromName("System", "EventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "RemoveValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{component, handler});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::ResetValue
// Il2CppName: ResetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::ReflectPropertyDescriptor::*)(::Il2CppObject*)>(&System::ComponentModel::ReflectPropertyDescriptor::ResetValue)> {
  static const MethodInfo* get() {
    static auto* component = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "ResetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{component});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::SetValue
// Il2CppName: SetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::ComponentModel::ReflectPropertyDescriptor::*)(::Il2CppObject*, ::Il2CppObject*)>(&System::ComponentModel::ReflectPropertyDescriptor::SetValue)> {
  static const MethodInfo* get() {
    static auto* component = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "SetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{component, value});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::ReflectPropertyDescriptor::ShouldSerializeValue
// Il2CppName: ShouldSerializeValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::ReflectPropertyDescriptor::*)(::Il2CppObject*)>(&System::ComponentModel::ReflectPropertyDescriptor::ShouldSerializeValue)> {
  static const MethodInfo* get() {
    static auto* component = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::ReflectPropertyDescriptor*), "ShouldSerializeValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{component});
  }
};
