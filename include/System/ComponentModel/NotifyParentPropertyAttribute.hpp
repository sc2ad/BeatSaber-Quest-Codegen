// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: NotifyParentPropertyAttribute
  class NotifyParentPropertyAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::ComponentModel::NotifyParentPropertyAttribute);
DEFINE_IL2CPP_ARG_TYPE(::System::ComponentModel::NotifyParentPropertyAttribute*, "System.ComponentModel", "NotifyParentPropertyAttribute");
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Size: 0x11
  #pragma pack(push, 1)
  // Autogenerated type: System.ComponentModel.NotifyParentPropertyAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 1085090
  class NotifyParentPropertyAttribute : public ::System::Attribute {
    public:
    public:
    // private System.Boolean notifyParent
    // Size: 0x1
    // Offset: 0x10
    bool notifyParent;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating conversion operator: operator bool
    constexpr operator bool() const noexcept {
      return notifyParent;
    }
    // Get static field: static public readonly System.ComponentModel.NotifyParentPropertyAttribute Yes
    static ::System::ComponentModel::NotifyParentPropertyAttribute* _get_Yes();
    // Set static field: static public readonly System.ComponentModel.NotifyParentPropertyAttribute Yes
    static void _set_Yes(::System::ComponentModel::NotifyParentPropertyAttribute* value);
    // Get static field: static public readonly System.ComponentModel.NotifyParentPropertyAttribute No
    static ::System::ComponentModel::NotifyParentPropertyAttribute* _get_No();
    // Set static field: static public readonly System.ComponentModel.NotifyParentPropertyAttribute No
    static void _set_No(::System::ComponentModel::NotifyParentPropertyAttribute* value);
    // Get static field: static public readonly System.ComponentModel.NotifyParentPropertyAttribute Default
    static ::System::ComponentModel::NotifyParentPropertyAttribute* _get_Default();
    // Set static field: static public readonly System.ComponentModel.NotifyParentPropertyAttribute Default
    static void _set_Default(::System::ComponentModel::NotifyParentPropertyAttribute* value);
    // Get instance field reference: private System.Boolean notifyParent
    [[deprecated("Use field access instead!")]] bool& dyn_notifyParent();
    // public System.Boolean get_NotifyParent()
    // Offset: 0x1E53D88
    bool get_NotifyParent();
    // public System.Void .ctor(System.Boolean notifyParent)
    // Offset: 0x1E53D58
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NotifyParentPropertyAttribute* New_ctor(bool notifyParent) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyParentPropertyAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NotifyParentPropertyAttribute*, creationType>(notifyParent)));
    }
    // static private System.Void .cctor()
    // Offset: 0x1E53EAC
    static void _cctor();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x1E53D90
    // Implemented from: System.Attribute
    // Base method: System.Boolean Attribute::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x1E53E2C
    // Implemented from: System.Attribute
    // Base method: System.Int32 Attribute::GetHashCode()
    int GetHashCode();
    // public override System.Boolean IsDefaultAttribute()
    // Offset: 0x1E53E34
    // Implemented from: System.Attribute
    // Base method: System.Boolean Attribute::IsDefaultAttribute()
    bool IsDefaultAttribute();
  }; // System.ComponentModel.NotifyParentPropertyAttribute
  #pragma pack(pop)
  static check_size<sizeof(NotifyParentPropertyAttribute), 16 + sizeof(bool)> __System_ComponentModel_NotifyParentPropertyAttributeSizeCheck;
  static_assert(sizeof(NotifyParentPropertyAttribute) == 0x11);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::ComponentModel::NotifyParentPropertyAttribute::get_NotifyParent
// Il2CppName: get_NotifyParent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::NotifyParentPropertyAttribute::*)()>(&System::ComponentModel::NotifyParentPropertyAttribute::get_NotifyParent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::NotifyParentPropertyAttribute*), "get_NotifyParent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::NotifyParentPropertyAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::NotifyParentPropertyAttribute::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ComponentModel::NotifyParentPropertyAttribute::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::NotifyParentPropertyAttribute*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::NotifyParentPropertyAttribute::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::NotifyParentPropertyAttribute::*)(::Il2CppObject*)>(&System::ComponentModel::NotifyParentPropertyAttribute::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::NotifyParentPropertyAttribute*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::NotifyParentPropertyAttribute::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::ComponentModel::NotifyParentPropertyAttribute::*)()>(&System::ComponentModel::NotifyParentPropertyAttribute::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::NotifyParentPropertyAttribute*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::NotifyParentPropertyAttribute::IsDefaultAttribute
// Il2CppName: IsDefaultAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::NotifyParentPropertyAttribute::*)()>(&System::ComponentModel::NotifyParentPropertyAttribute::IsDefaultAttribute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::NotifyParentPropertyAttribute*), "IsDefaultAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
