// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: LookupBindingPropertiesAttribute
  class LookupBindingPropertiesAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::ComponentModel::LookupBindingPropertiesAttribute);
DEFINE_IL2CPP_ARG_TYPE(::System::ComponentModel::LookupBindingPropertiesAttribute*, "System.ComponentModel", "LookupBindingPropertiesAttribute");
// Type namespace: System.ComponentModel
namespace System::ComponentModel {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: System.ComponentModel.LookupBindingPropertiesAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 8FF228
  class LookupBindingPropertiesAttribute : public ::System::Attribute {
    public:
    public:
    // private readonly System.String dataSource
    // Size: 0x8
    // Offset: 0x10
    ::StringW dataSource;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private readonly System.String displayMember
    // Size: 0x8
    // Offset: 0x18
    ::StringW displayMember;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private readonly System.String valueMember
    // Size: 0x8
    // Offset: 0x20
    ::StringW valueMember;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private readonly System.String lookupMember
    // Size: 0x8
    // Offset: 0x28
    ::StringW lookupMember;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get static field: static public readonly System.ComponentModel.LookupBindingPropertiesAttribute Default
    static ::System::ComponentModel::LookupBindingPropertiesAttribute* _get_Default();
    // Set static field: static public readonly System.ComponentModel.LookupBindingPropertiesAttribute Default
    static void _set_Default(::System::ComponentModel::LookupBindingPropertiesAttribute* value);
    // Get instance field reference: private readonly System.String dataSource
    [[deprecated("Use field access instead!")]] ::StringW& dyn_dataSource();
    // Get instance field reference: private readonly System.String displayMember
    [[deprecated("Use field access instead!")]] ::StringW& dyn_displayMember();
    // Get instance field reference: private readonly System.String valueMember
    [[deprecated("Use field access instead!")]] ::StringW& dyn_valueMember();
    // Get instance field reference: private readonly System.String lookupMember
    [[deprecated("Use field access instead!")]] ::StringW& dyn_lookupMember();
    // public System.String get_DataSource()
    // Offset: 0x121D398
    ::StringW get_DataSource();
    // public System.String get_DisplayMember()
    // Offset: 0x121D3A0
    ::StringW get_DisplayMember();
    // public System.String get_ValueMember()
    // Offset: 0x121D3A8
    ::StringW get_ValueMember();
    // public System.String get_LookupMember()
    // Offset: 0x121D3B0
    ::StringW get_LookupMember();
    // public System.Void .ctor()
    // Offset: 0x121D320
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LookupBindingPropertiesAttribute* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LookupBindingPropertiesAttribute*, creationType>()));
    }
    // public System.Void .ctor(System.String dataSource, System.String displayMember, System.String valueMember, System.String lookupMember)
    // Offset: 0x121D34C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LookupBindingPropertiesAttribute* New_ctor(::StringW dataSource, ::StringW displayMember, ::StringW valueMember, ::StringW lookupMember) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::LookupBindingPropertiesAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LookupBindingPropertiesAttribute*, creationType>(dataSource, displayMember, valueMember, lookupMember)));
    }
    // static private System.Void .cctor()
    // Offset: 0x121D490
    static void _cctor();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x121D3B8
    // Implemented from: System.Attribute
    // Base method: System.Boolean Attribute::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x121D488
    // Implemented from: System.Attribute
    // Base method: System.Int32 Attribute::GetHashCode()
    int GetHashCode();
  }; // System.ComponentModel.LookupBindingPropertiesAttribute
  #pragma pack(pop)
  static check_size<sizeof(LookupBindingPropertiesAttribute), 40 + sizeof(::StringW)> __System_ComponentModel_LookupBindingPropertiesAttributeSizeCheck;
  static_assert(sizeof(LookupBindingPropertiesAttribute) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::ComponentModel::LookupBindingPropertiesAttribute::get_DataSource
// Il2CppName: get_DataSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::ComponentModel::LookupBindingPropertiesAttribute::*)()>(&System::ComponentModel::LookupBindingPropertiesAttribute::get_DataSource)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::LookupBindingPropertiesAttribute*), "get_DataSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::LookupBindingPropertiesAttribute::get_DisplayMember
// Il2CppName: get_DisplayMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::ComponentModel::LookupBindingPropertiesAttribute::*)()>(&System::ComponentModel::LookupBindingPropertiesAttribute::get_DisplayMember)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::LookupBindingPropertiesAttribute*), "get_DisplayMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::LookupBindingPropertiesAttribute::get_ValueMember
// Il2CppName: get_ValueMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::ComponentModel::LookupBindingPropertiesAttribute::*)()>(&System::ComponentModel::LookupBindingPropertiesAttribute::get_ValueMember)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::LookupBindingPropertiesAttribute*), "get_ValueMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::LookupBindingPropertiesAttribute::get_LookupMember
// Il2CppName: get_LookupMember
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::ComponentModel::LookupBindingPropertiesAttribute::*)()>(&System::ComponentModel::LookupBindingPropertiesAttribute::get_LookupMember)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::LookupBindingPropertiesAttribute*), "get_LookupMember", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::LookupBindingPropertiesAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::LookupBindingPropertiesAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::ComponentModel::LookupBindingPropertiesAttribute::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::ComponentModel::LookupBindingPropertiesAttribute::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::LookupBindingPropertiesAttribute*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::LookupBindingPropertiesAttribute::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::ComponentModel::LookupBindingPropertiesAttribute::*)(::Il2CppObject*)>(&System::ComponentModel::LookupBindingPropertiesAttribute::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::LookupBindingPropertiesAttribute*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: System::ComponentModel::LookupBindingPropertiesAttribute::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::ComponentModel::LookupBindingPropertiesAttribute::*)()>(&System::ComponentModel::LookupBindingPropertiesAttribute::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::ComponentModel::LookupBindingPropertiesAttribute*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
