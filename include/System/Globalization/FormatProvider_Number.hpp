// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Globalization.FormatProvider
#include "System/Globalization/FormatProvider.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: NumberFormatInfo
  class NumberFormatInfo;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Globalization::FormatProvider::Number);
DEFINE_IL2CPP_ARG_TYPE(::System::Globalization::FormatProvider::Number*, "System.Globalization", "FormatProvider/Number");
// Type namespace: System.Globalization
namespace System::Globalization {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Globalization.FormatProvider/System.Globalization.Number
  // [TokenAttribute] Offset: FFFFFFFF
  class FormatProvider::Number : public ::Il2CppObject {
    public:
    // Nested type: ::System::Globalization::FormatProvider::Number::NumberBuffer
    struct NumberBuffer;
    // Get static field: static private System.String[] s_posCurrencyFormats
    static ::ArrayW<::StringW> _get_s_posCurrencyFormats();
    // Set static field: static private System.String[] s_posCurrencyFormats
    static void _set_s_posCurrencyFormats(::ArrayW<::StringW> value);
    // Get static field: static private System.String[] s_negCurrencyFormats
    static ::ArrayW<::StringW> _get_s_negCurrencyFormats();
    // Set static field: static private System.String[] s_negCurrencyFormats
    static void _set_s_negCurrencyFormats(::ArrayW<::StringW> value);
    // Get static field: static private System.String[] s_posPercentFormats
    static ::ArrayW<::StringW> _get_s_posPercentFormats();
    // Set static field: static private System.String[] s_posPercentFormats
    static void _set_s_posPercentFormats(::ArrayW<::StringW> value);
    // Get static field: static private System.String[] s_negPercentFormats
    static ::ArrayW<::StringW> _get_s_negPercentFormats();
    // Set static field: static private System.String[] s_negPercentFormats
    static void _set_s_negPercentFormats(::ArrayW<::StringW> value);
    // Get static field: static private System.String[] s_negNumberFormats
    static ::ArrayW<::StringW> _get_s_negNumberFormats();
    // Set static field: static private System.String[] s_negNumberFormats
    static void _set_s_negNumberFormats(::ArrayW<::StringW> value);
    // Get static field: static private System.String s_posNumberFormat
    static ::StringW _get_s_posNumberFormat();
    // Set static field: static private System.String s_posNumberFormat
    static void _set_s_posNumberFormat(::StringW value);
    // static private System.Void .cctor()
    // Offset: 0x1BB874C
    static void _cctor();
    // static System.Void Int32ToDecChars(System.Char* buffer, ref System.Int32 index, System.UInt32 value, System.Int32 digits)
    // Offset: 0x1BB76E4
    static void Int32ToDecChars(::Il2CppChar* buffer, ByRef<int> index, uint value, int digits);
    // static System.Char ParseFormatSpecifier(System.String format, out System.Int32 digits)
    // Offset: 0x1BB6734
    static ::Il2CppChar ParseFormatSpecifier(::StringW format, ByRef<int> digits);
    // static System.String NumberToString(System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer number, System.Char format, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info, System.Boolean isDecimal)
    // Offset: 0x1BB67EC
    static ::StringW NumberToString(::System::Globalization::FormatProvider::Number::NumberBuffer number, ::Il2CppChar format, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, bool isDecimal);
    // static private System.Void FormatCurrency(System.Text.StringBuilder sb, System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info)
    // Offset: 0x1BB7820
    static void FormatCurrency(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info);
    // static private System.Int32 wcslen(System.Char* s)
    // Offset: 0x1BB84F8
    static int wcslen(::Il2CppChar* s);
    // static private System.Void FormatFixed(System.Text.StringBuilder sb, System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info, System.Int32[] groupDigits, System.String sDecimal, System.String sGroup)
    // Offset: 0x1BB7A1C
    static void FormatFixed(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, ::ArrayW<int> groupDigits, ::StringW sDecimal, ::StringW sGroup);
    // static private System.Void FormatNumber(System.Text.StringBuilder sb, System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info)
    // Offset: 0x1BB7E10
    static void FormatNumber(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info);
    // static private System.Void FormatScientific(System.Text.StringBuilder sb, System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info, System.Char expChar)
    // Offset: 0x1BB7FF8
    static void FormatScientific(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, ::Il2CppChar expChar);
    // static private System.Void FormatExponent(System.Text.StringBuilder sb, System.Globalization.NumberFormatInfo info, System.Int32 value, System.Char expChar, System.Int32 minDigits, System.Boolean positiveSign)
    // Offset: 0x1BB8518
    static void FormatExponent(::System::Text::StringBuilder* sb, ::System::Globalization::NumberFormatInfo* info, int value, ::Il2CppChar expChar, int minDigits, bool positiveSign);
    // static private System.Void FormatGeneral(System.Text.StringBuilder sb, System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info, System.Char expChar, System.Boolean bSuppressScientific)
    // Offset: 0x1BB8138
    static void FormatGeneral(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, ::Il2CppChar expChar, bool bSuppressScientific);
    // static private System.Void FormatPercent(System.Text.StringBuilder sb, System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info)
    // Offset: 0x1BB82FC
    static void FormatPercent(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info);
    // static private System.Void RoundNumber(ref System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer number, System.Int32 pos)
    // Offset: 0x1BB773C
    static void RoundNumber(ByRef<::System::Globalization::FormatProvider::Number::NumberBuffer> number, int pos);
    // static private System.Int32 FindSection(System.String format, System.Int32 section)
    // Offset: 0x1BB8688
    static int FindSection(::StringW format, int section);
    // static System.String NumberToStringFormat(System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer number, System.String format, System.Globalization.NumberFormatInfo info)
    // Offset: 0x1BB6CC8
    static ::StringW NumberToStringFormat(::System::Globalization::FormatProvider::Number::NumberBuffer number, ::StringW format, ::System::Globalization::NumberFormatInfo* info);
  }; // System.Globalization.FormatProvider/System.Globalization.Number
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Globalization::FormatProvider::Number::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Globalization::FormatProvider::Number::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider::Number*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::FormatProvider::Number::Int32ToDecChars
// Il2CppName: Int32ToDecChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppChar*, ByRef<int>, uint, int)>(&System::Globalization::FormatProvider::Number::Int32ToDecChars)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* digits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider::Number*), "Int32ToDecChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, index, value, digits});
  }
};
// Writing MetadataGetter for method: System::Globalization::FormatProvider::Number::ParseFormatSpecifier
// Il2CppName: ParseFormatSpecifier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (*)(::StringW, ByRef<int>)>(&System::Globalization::FormatProvider::Number::ParseFormatSpecifier)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* digits = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider::Number*), "ParseFormatSpecifier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, digits});
  }
};
// Writing MetadataGetter for method: System::Globalization::FormatProvider::Number::NumberToString
// Il2CppName: NumberToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::Globalization::FormatProvider::Number::NumberBuffer, ::Il2CppChar, int, ::System::Globalization::NumberFormatInfo*, bool)>(&System::Globalization::FormatProvider::Number::NumberToString)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("System.Globalization", "FormatProvider/Number/NumberBuffer")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* nMaxDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* isDecimal = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider::Number*), "NumberToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, format, nMaxDigits, info, isDecimal});
  }
};
// Writing MetadataGetter for method: System::Globalization::FormatProvider::Number::FormatCurrency
// Il2CppName: FormatCurrency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Text::StringBuilder*, ::System::Globalization::FormatProvider::Number::NumberBuffer, int, int, ::System::Globalization::NumberFormatInfo*)>(&System::Globalization::FormatProvider::Number::FormatCurrency)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* number = &::il2cpp_utils::GetClassFromName("System.Globalization", "FormatProvider/Number/NumberBuffer")->byval_arg;
    static auto* nMinDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* nMaxDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider::Number*), "FormatCurrency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, number, nMinDigits, nMaxDigits, info});
  }
};
// Writing MetadataGetter for method: System::Globalization::FormatProvider::Number::wcslen
// Il2CppName: wcslen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppChar*)>(&System::Globalization::FormatProvider::Number::wcslen)> {
  static const MethodInfo* get() {
    static auto* s = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider::Number*), "wcslen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: System::Globalization::FormatProvider::Number::FormatFixed
// Il2CppName: FormatFixed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Text::StringBuilder*, ::System::Globalization::FormatProvider::Number::NumberBuffer, int, int, ::System::Globalization::NumberFormatInfo*, ::ArrayW<int>, ::StringW, ::StringW)>(&System::Globalization::FormatProvider::Number::FormatFixed)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* number = &::il2cpp_utils::GetClassFromName("System.Globalization", "FormatProvider/Number/NumberBuffer")->byval_arg;
    static auto* nMinDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* nMaxDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* groupDigits = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* sDecimal = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* sGroup = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider::Number*), "FormatFixed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, number, nMinDigits, nMaxDigits, info, groupDigits, sDecimal, sGroup});
  }
};
// Writing MetadataGetter for method: System::Globalization::FormatProvider::Number::FormatNumber
// Il2CppName: FormatNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Text::StringBuilder*, ::System::Globalization::FormatProvider::Number::NumberBuffer, int, int, ::System::Globalization::NumberFormatInfo*)>(&System::Globalization::FormatProvider::Number::FormatNumber)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* number = &::il2cpp_utils::GetClassFromName("System.Globalization", "FormatProvider/Number/NumberBuffer")->byval_arg;
    static auto* nMinDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* nMaxDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider::Number*), "FormatNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, number, nMinDigits, nMaxDigits, info});
  }
};
// Writing MetadataGetter for method: System::Globalization::FormatProvider::Number::FormatScientific
// Il2CppName: FormatScientific
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Text::StringBuilder*, ::System::Globalization::FormatProvider::Number::NumberBuffer, int, int, ::System::Globalization::NumberFormatInfo*, ::Il2CppChar)>(&System::Globalization::FormatProvider::Number::FormatScientific)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* number = &::il2cpp_utils::GetClassFromName("System.Globalization", "FormatProvider/Number/NumberBuffer")->byval_arg;
    static auto* nMinDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* nMaxDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* expChar = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider::Number*), "FormatScientific", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, number, nMinDigits, nMaxDigits, info, expChar});
  }
};
// Writing MetadataGetter for method: System::Globalization::FormatProvider::Number::FormatExponent
// Il2CppName: FormatExponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Text::StringBuilder*, ::System::Globalization::NumberFormatInfo*, int, ::Il2CppChar, int, bool)>(&System::Globalization::FormatProvider::Number::FormatExponent)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* expChar = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* minDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* positiveSign = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider::Number*), "FormatExponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, info, value, expChar, minDigits, positiveSign});
  }
};
// Writing MetadataGetter for method: System::Globalization::FormatProvider::Number::FormatGeneral
// Il2CppName: FormatGeneral
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Text::StringBuilder*, ::System::Globalization::FormatProvider::Number::NumberBuffer, int, int, ::System::Globalization::NumberFormatInfo*, ::Il2CppChar, bool)>(&System::Globalization::FormatProvider::Number::FormatGeneral)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* number = &::il2cpp_utils::GetClassFromName("System.Globalization", "FormatProvider/Number/NumberBuffer")->byval_arg;
    static auto* nMinDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* nMaxDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* expChar = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* bSuppressScientific = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider::Number*), "FormatGeneral", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, number, nMinDigits, nMaxDigits, info, expChar, bSuppressScientific});
  }
};
// Writing MetadataGetter for method: System::Globalization::FormatProvider::Number::FormatPercent
// Il2CppName: FormatPercent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Text::StringBuilder*, ::System::Globalization::FormatProvider::Number::NumberBuffer, int, int, ::System::Globalization::NumberFormatInfo*)>(&System::Globalization::FormatProvider::Number::FormatPercent)> {
  static const MethodInfo* get() {
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* number = &::il2cpp_utils::GetClassFromName("System.Globalization", "FormatProvider/Number/NumberBuffer")->byval_arg;
    static auto* nMinDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* nMaxDigits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider::Number*), "FormatPercent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sb, number, nMinDigits, nMaxDigits, info});
  }
};
// Writing MetadataGetter for method: System::Globalization::FormatProvider::Number::RoundNumber
// Il2CppName: RoundNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::System::Globalization::FormatProvider::Number::NumberBuffer>, int)>(&System::Globalization::FormatProvider::Number::RoundNumber)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("System.Globalization", "FormatProvider/Number/NumberBuffer")->this_arg;
    static auto* pos = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider::Number*), "RoundNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, pos});
  }
};
// Writing MetadataGetter for method: System::Globalization::FormatProvider::Number::FindSection
// Il2CppName: FindSection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int)>(&System::Globalization::FormatProvider::Number::FindSection)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* section = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider::Number*), "FindSection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, section});
  }
};
// Writing MetadataGetter for method: System::Globalization::FormatProvider::Number::NumberToStringFormat
// Il2CppName: NumberToStringFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::Globalization::FormatProvider::Number::NumberBuffer, ::StringW, ::System::Globalization::NumberFormatInfo*)>(&System::Globalization::FormatProvider::Number::NumberToStringFormat)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("System.Globalization", "FormatProvider/Number/NumberBuffer")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::FormatProvider::Number*), "NumberToStringFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, format, info});
  }
};
