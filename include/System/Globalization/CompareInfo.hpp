// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Runtime.Serialization.IDeserializationCallback
#include "System/Runtime/Serialization/IDeserializationCallback.hpp"
// Including type: System.Globalization.CompareOptions
#include "System/Globalization/CompareOptions.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: SortVersion
  class SortVersion;
  // Forward declaring type: CultureInfo
  class CultureInfo;
  // Forward declaring type: SortKey
  class SortKey;
}
// Forward declaring namespace: Mono::Globalization::Unicode
namespace Mono::Globalization::Unicode {
  // Forward declaring type: SimpleCollator
  class SimpleCollator;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: StreamingContext
  struct StreamingContext;
}
// Completed forward declares
// Type namespace: System.Globalization
namespace System::Globalization {
  // Forward declaring type: CompareInfo
  class CompareInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Globalization::CompareInfo);
DEFINE_IL2CPP_ARG_TYPE(::System::Globalization::CompareInfo*, "System.Globalization", "CompareInfo");
// Type namespace: System.Globalization
namespace System::Globalization {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: System.Globalization.CompareInfo
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: 103A688
  class CompareInfo : public ::Il2CppObject/*, public ::System::Runtime::Serialization::IDeserializationCallback*/ {
    public:
    public:
    // [OptionalFieldAttribute] Offset: 0x1040320
    // private System.String m_name
    // Size: 0x8
    // Offset: 0x10
    ::StringW m_name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String m_sortName
    // Size: 0x8
    // Offset: 0x18
    ::StringW m_sortName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [OptionalFieldAttribute] Offset: 0x1040358
    // private System.Int32 win32LCID
    // Size: 0x4
    // Offset: 0x20
    int win32LCID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 culture
    // Size: 0x4
    // Offset: 0x24
    int culture;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [OptionalFieldAttribute] Offset: 0x1040390
    // private System.Globalization.SortVersion m_SortVersion
    // Size: 0x8
    // Offset: 0x28
    ::System::Globalization::SortVersion* m_SortVersion;
    // Field size check
    static_assert(sizeof(::System::Globalization::SortVersion*) == 0x8);
    // private Mono.Globalization.Unicode.SimpleCollator collator
    // Size: 0x8
    // Offset: 0x30
    ::Mono::Globalization::Unicode::SimpleCollator* collator;
    // Field size check
    static_assert(sizeof(::Mono::Globalization::Unicode::SimpleCollator*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Runtime::Serialization::IDeserializationCallback
    operator ::System::Runtime::Serialization::IDeserializationCallback() noexcept {
      return *reinterpret_cast<::System::Runtime::Serialization::IDeserializationCallback*>(this);
    }
    // Creating interface conversion operator: i_IDeserializationCallback
    inline ::System::Runtime::Serialization::IDeserializationCallback* i_IDeserializationCallback() noexcept {
      return reinterpret_cast<::System::Runtime::Serialization::IDeserializationCallback*>(this);
    }
    // static field const value: static private System.Globalization.CompareOptions ValidIndexMaskOffFlags
    static constexpr const int ValidIndexMaskOffFlags = -32;
    // Get static field: static private System.Globalization.CompareOptions ValidIndexMaskOffFlags
    static ::System::Globalization::CompareOptions _get_ValidIndexMaskOffFlags();
    // Set static field: static private System.Globalization.CompareOptions ValidIndexMaskOffFlags
    static void _set_ValidIndexMaskOffFlags(::System::Globalization::CompareOptions value);
    // static field const value: static private System.Globalization.CompareOptions ValidCompareMaskOffFlags
    static constexpr const int ValidCompareMaskOffFlags = -536870944;
    // Get static field: static private System.Globalization.CompareOptions ValidCompareMaskOffFlags
    static ::System::Globalization::CompareOptions _get_ValidCompareMaskOffFlags();
    // Set static field: static private System.Globalization.CompareOptions ValidCompareMaskOffFlags
    static void _set_ValidCompareMaskOffFlags(::System::Globalization::CompareOptions value);
    // static field const value: static private System.Globalization.CompareOptions ValidHashCodeOfStringMaskOffFlags
    static constexpr const int ValidHashCodeOfStringMaskOffFlags = -32;
    // Get static field: static private System.Globalization.CompareOptions ValidHashCodeOfStringMaskOffFlags
    static ::System::Globalization::CompareOptions _get_ValidHashCodeOfStringMaskOffFlags();
    // Set static field: static private System.Globalization.CompareOptions ValidHashCodeOfStringMaskOffFlags
    static void _set_ValidHashCodeOfStringMaskOffFlags(::System::Globalization::CompareOptions value);
    // static field const value: static private System.Int32 LINGUISTIC_IGNORECASE
    static constexpr const int LINGUISTIC_IGNORECASE = 16;
    // Get static field: static private System.Int32 LINGUISTIC_IGNORECASE
    static int _get_LINGUISTIC_IGNORECASE();
    // Set static field: static private System.Int32 LINGUISTIC_IGNORECASE
    static void _set_LINGUISTIC_IGNORECASE(int value);
    // static field const value: static private System.Int32 NORM_IGNORECASE
    static constexpr const int NORM_IGNORECASE = 1;
    // Get static field: static private System.Int32 NORM_IGNORECASE
    static int _get_NORM_IGNORECASE();
    // Set static field: static private System.Int32 NORM_IGNORECASE
    static void _set_NORM_IGNORECASE(int value);
    // static field const value: static private System.Int32 NORM_IGNOREKANATYPE
    static constexpr const int NORM_IGNOREKANATYPE = 65536;
    // Get static field: static private System.Int32 NORM_IGNOREKANATYPE
    static int _get_NORM_IGNOREKANATYPE();
    // Set static field: static private System.Int32 NORM_IGNOREKANATYPE
    static void _set_NORM_IGNOREKANATYPE(int value);
    // static field const value: static private System.Int32 LINGUISTIC_IGNOREDIACRITIC
    static constexpr const int LINGUISTIC_IGNOREDIACRITIC = 32;
    // Get static field: static private System.Int32 LINGUISTIC_IGNOREDIACRITIC
    static int _get_LINGUISTIC_IGNOREDIACRITIC();
    // Set static field: static private System.Int32 LINGUISTIC_IGNOREDIACRITIC
    static void _set_LINGUISTIC_IGNOREDIACRITIC(int value);
    // static field const value: static private System.Int32 NORM_IGNORENONSPACE
    static constexpr const int NORM_IGNORENONSPACE = 2;
    // Get static field: static private System.Int32 NORM_IGNORENONSPACE
    static int _get_NORM_IGNORENONSPACE();
    // Set static field: static private System.Int32 NORM_IGNORENONSPACE
    static void _set_NORM_IGNORENONSPACE(int value);
    // static field const value: static private System.Int32 NORM_IGNORESYMBOLS
    static constexpr const int NORM_IGNORESYMBOLS = 4;
    // Get static field: static private System.Int32 NORM_IGNORESYMBOLS
    static int _get_NORM_IGNORESYMBOLS();
    // Set static field: static private System.Int32 NORM_IGNORESYMBOLS
    static void _set_NORM_IGNORESYMBOLS(int value);
    // static field const value: static private System.Int32 NORM_IGNOREWIDTH
    static constexpr const int NORM_IGNOREWIDTH = 131072;
    // Get static field: static private System.Int32 NORM_IGNOREWIDTH
    static int _get_NORM_IGNOREWIDTH();
    // Set static field: static private System.Int32 NORM_IGNOREWIDTH
    static void _set_NORM_IGNOREWIDTH(int value);
    // static field const value: static private System.Int32 SORT_STRINGSORT
    static constexpr const int SORT_STRINGSORT = 4096;
    // Get static field: static private System.Int32 SORT_STRINGSORT
    static int _get_SORT_STRINGSORT();
    // Set static field: static private System.Int32 SORT_STRINGSORT
    static void _set_SORT_STRINGSORT(int value);
    // static field const value: static private System.Int32 COMPARE_OPTIONS_ORDINAL
    static constexpr const int COMPARE_OPTIONS_ORDINAL = 1073741824;
    // Get static field: static private System.Int32 COMPARE_OPTIONS_ORDINAL
    static int _get_COMPARE_OPTIONS_ORDINAL();
    // Set static field: static private System.Int32 COMPARE_OPTIONS_ORDINAL
    static void _set_COMPARE_OPTIONS_ORDINAL(int value);
    // static field const value: static System.Int32 NORM_LINGUISTIC_CASING
    static constexpr const int NORM_LINGUISTIC_CASING = 134217728;
    // Get static field: static System.Int32 NORM_LINGUISTIC_CASING
    static int _get_NORM_LINGUISTIC_CASING();
    // Set static field: static System.Int32 NORM_LINGUISTIC_CASING
    static void _set_NORM_LINGUISTIC_CASING(int value);
    // static field const value: static private System.Int32 RESERVED_FIND_ASCII_STRING
    static constexpr const int RESERVED_FIND_ASCII_STRING = 536870912;
    // Get static field: static private System.Int32 RESERVED_FIND_ASCII_STRING
    static int _get_RESERVED_FIND_ASCII_STRING();
    // Set static field: static private System.Int32 RESERVED_FIND_ASCII_STRING
    static void _set_RESERVED_FIND_ASCII_STRING(int value);
    // static field const value: static private System.Int32 SORT_VERSION_WHIDBEY
    static constexpr const int SORT_VERSION_WHIDBEY = 4096;
    // Get static field: static private System.Int32 SORT_VERSION_WHIDBEY
    static int _get_SORT_VERSION_WHIDBEY();
    // Set static field: static private System.Int32 SORT_VERSION_WHIDBEY
    static void _set_SORT_VERSION_WHIDBEY(int value);
    // static field const value: static private System.Int32 SORT_VERSION_V4
    static constexpr const int SORT_VERSION_V4 = 393473;
    // Get static field: static private System.Int32 SORT_VERSION_V4
    static int _get_SORT_VERSION_V4();
    // Set static field: static private System.Int32 SORT_VERSION_V4
    static void _set_SORT_VERSION_V4(int value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.String,Mono.Globalization.Unicode.SimpleCollator> collators
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::Mono::Globalization::Unicode::SimpleCollator*>* _get_collators();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.String,Mono.Globalization.Unicode.SimpleCollator> collators
    static void _set_collators(::System::Collections::Generic::Dictionary_2<::StringW, ::Mono::Globalization::Unicode::SimpleCollator*>* value);
    // Get static field: static private System.Boolean managedCollation
    static bool _get_managedCollation();
    // Set static field: static private System.Boolean managedCollation
    static void _set_managedCollation(bool value);
    // Get static field: static private System.Boolean managedCollationChecked
    static bool _get_managedCollationChecked();
    // Set static field: static private System.Boolean managedCollationChecked
    static void _set_managedCollationChecked(bool value);
    // Get instance field reference: private System.String m_name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_name();
    // Get instance field reference: private System.String m_sortName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_sortName();
    // Get instance field reference: private System.Int32 win32LCID
    [[deprecated("Use field access instead!")]] int& dyn_win32LCID();
    // Get instance field reference: private System.Int32 culture
    [[deprecated("Use field access instead!")]] int& dyn_culture();
    // Get instance field reference: private System.Globalization.SortVersion m_SortVersion
    [[deprecated("Use field access instead!")]] ::System::Globalization::SortVersion*& dyn_m_SortVersion();
    // Get instance field reference: private Mono.Globalization.Unicode.SimpleCollator collator
    [[deprecated("Use field access instead!")]] ::Mono::Globalization::Unicode::SimpleCollator*& dyn_collator();
    // public System.String get_Name()
    // Offset: 0x1969B54
    ::StringW get_Name();
    // static private System.Boolean get_UseManagedCollation()
    // Offset: 0x196A35C
    static bool get_UseManagedCollation();
    // System.Void .ctor(System.Globalization.CultureInfo culture)
    // Offset: 0x19696FC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CompareInfo* New_ctor(::System::Globalization::CultureInfo* culture) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CompareInfo*, creationType>(culture)));
    }
    // static public System.Globalization.CompareInfo GetCompareInfo(System.String name)
    // Offset: 0x196973C
    static ::System::Globalization::CompareInfo* GetCompareInfo(::StringW name);
    // private System.Void OnDeserializing(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x19697F4
    void OnDeserializing(::System::Runtime::Serialization::StreamingContext ctx);
    // private System.Void OnDeserialized()
    // Offset: 0x19697FC
    void OnDeserialized();
    // private System.Void OnDeserialized(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x1969AB4
    void OnDeserialized(::System::Runtime::Serialization::StreamingContext ctx);
    // private System.Void OnSerializing(System.Runtime.Serialization.StreamingContext ctx)
    // Offset: 0x1969AB8
    void OnSerializing(::System::Runtime::Serialization::StreamingContext ctx);
    // private System.Void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object sender)
    // Offset: 0x1969B50
    void System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender);
    // public System.Int32 Compare(System.String string1, System.String string2)
    // Offset: 0x1969BDC
    int Compare(::StringW string1, ::StringW string2);
    // public System.Int32 Compare(System.String string1, System.String string2, System.Globalization.CompareOptions options)
    // Offset: 0x1969BEC
    int Compare(::StringW string1, ::StringW string2, ::System::Globalization::CompareOptions options);
    // public System.Int32 Compare(System.String string1, System.Int32 offset1, System.Int32 length1, System.String string2, System.Int32 offset2, System.Int32 length2, System.Globalization.CompareOptions options)
    // Offset: 0x1969E10
    int Compare(::StringW string1, int offset1, int length1, ::StringW string2, int offset2, int length2, ::System::Globalization::CompareOptions options);
    // static private System.Int32 CompareOrdinal(System.String string1, System.Int32 offset1, System.Int32 length1, System.String string2, System.Int32 offset2, System.Int32 length2)
    // Offset: 0x196A0F8
    static int CompareOrdinal(::StringW string1, int offset1, int length1, ::StringW string2, int offset2, int length2);
    // public System.Boolean IsPrefix(System.String source, System.String prefix, System.Globalization.CompareOptions options)
    // Offset: 0x196A14C
    bool IsPrefix(::StringW source, ::StringW prefix, ::System::Globalization::CompareOptions options);
    // public System.Boolean IsSuffix(System.String source, System.String suffix, System.Globalization.CompareOptions options)
    // Offset: 0x196A6C4
    bool IsSuffix(::StringW source, ::StringW suffix, ::System::Globalization::CompareOptions options);
    // public System.Int32 IndexOf(System.String source, System.String value, System.Globalization.CompareOptions options)
    // Offset: 0x196A8D0
    int IndexOf(::StringW source, ::StringW value, ::System::Globalization::CompareOptions options);
    // public System.Int32 IndexOf(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Globalization.CompareOptions options)
    // Offset: 0x196A98C
    int IndexOf(::StringW source, ::StringW value, int startIndex, int count, ::System::Globalization::CompareOptions options);
    // public System.Int32 LastIndexOf(System.String source, System.String value, System.Int32 startIndex, System.Int32 count, System.Globalization.CompareOptions options)
    // Offset: 0x196ACA0
    int LastIndexOf(::StringW source, ::StringW value, int startIndex, int count, ::System::Globalization::CompareOptions options);
    // public System.Globalization.SortKey GetSortKey(System.String source, System.Globalization.CompareOptions options)
    // Offset: 0x196AF1C
    ::System::Globalization::SortKey* GetSortKey(::StringW source, ::System::Globalization::CompareOptions options);
    // private System.Globalization.SortKey CreateSortKey(System.String source, System.Globalization.CompareOptions options)
    // Offset: 0x196AF20
    ::System::Globalization::SortKey* CreateSortKey(::StringW source, ::System::Globalization::CompareOptions options);
    // System.Int32 GetHashCodeOfString(System.String source, System.Globalization.CompareOptions options)
    // Offset: 0x196B208
    int GetHashCodeOfString(::StringW source, ::System::Globalization::CompareOptions options);
    // System.Int32 GetHashCodeOfString(System.String source, System.Globalization.CompareOptions options, System.Boolean forceRandomizedHashing, System.Int64 additionalEntropy)
    // Offset: 0x196B210
    int GetHashCodeOfString(::StringW source, ::System::Globalization::CompareOptions options, bool forceRandomizedHashing, int64_t additionalEntropy);
    // private Mono.Globalization.Unicode.SimpleCollator GetCollator()
    // Offset: 0x196A470
    ::Mono::Globalization::Unicode::SimpleCollator* GetCollator();
    // private System.Globalization.SortKey CreateSortKeyCore(System.String source, System.Globalization.CompareOptions options)
    // Offset: 0x196B034
    ::System::Globalization::SortKey* CreateSortKeyCore(::StringW source, ::System::Globalization::CompareOptions options);
    // private System.Int32 internal_index_switch(System.String s1, System.Int32 sindex, System.Int32 count, System.String s2, System.Globalization.CompareOptions opt, System.Boolean first)
    // Offset: 0x196ABBC
    int internal_index_switch(::StringW s1, int sindex, int count, ::StringW s2, ::System::Globalization::CompareOptions opt, bool first);
    // private System.Int32 internal_compare_switch(System.String str1, System.Int32 offset1, System.Int32 length1, System.String str2, System.Int32 offset2, System.Int32 length2, System.Globalization.CompareOptions options)
    // Offset: 0x1969D60
    int internal_compare_switch(::StringW str1, int offset1, int length1, ::StringW str2, int offset2, int length2, ::System::Globalization::CompareOptions options);
    // private System.Int32 internal_compare_managed(System.String str1, System.Int32 offset1, System.Int32 length1, System.String str2, System.Int32 offset2, System.Int32 length2, System.Globalization.CompareOptions options)
    // Offset: 0x196B430
    int internal_compare_managed(::StringW str1, int offset1, int length1, ::StringW str2, int offset2, int length2, ::System::Globalization::CompareOptions options);
    // private System.Int32 internal_index_managed(System.String s1, System.Int32 sindex, System.Int32 count, System.String s2, System.Globalization.CompareOptions opt, System.Boolean first)
    // Offset: 0x196B3B0
    int internal_index_managed(::StringW s1, int sindex, int count, ::StringW s2, ::System::Globalization::CompareOptions opt, bool first);
    // private System.Void assign_sortkey(System.Object key, System.String source, System.Globalization.CompareOptions options)
    // Offset: 0x196B3A4
    void assign_sortkey(::Il2CppObject* key, ::StringW source, ::System::Globalization::CompareOptions options);
    // private System.Int32 internal_compare(System.String str1, System.Int32 offset1, System.Int32 length1, System.String str2, System.Int32 offset2, System.Int32 length2, System.Globalization.CompareOptions options)
    // Offset: 0x196B42C
    int internal_compare(::StringW str1, int offset1, int length1, ::StringW str2, int offset2, int length2, ::System::Globalization::CompareOptions options);
    // private System.Int32 internal_index(System.String source, System.Int32 sindex, System.Int32 count, System.String value, System.Globalization.CompareOptions options, System.Boolean first)
    // Offset: 0x196B3A8
    int internal_index(::StringW source, int sindex, int count, ::StringW value, ::System::Globalization::CompareOptions options, bool first);
    // System.Void .ctor()
    // Offset: 0x196B4A8
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CompareInfo* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::CompareInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CompareInfo*, creationType>()));
    }
    // public override System.Boolean Equals(System.Object value)
    // Offset: 0x196B108
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object value)
    bool Equals(::Il2CppObject* value);
    // public override System.Int32 GetHashCode()
    // Offset: 0x196B1DC
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public override System.String ToString()
    // Offset: 0x196B33C
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // System.Globalization.CompareInfo
  #pragma pack(pop)
  static check_size<sizeof(CompareInfo), 48 + sizeof(::Mono::Globalization::Unicode::SimpleCollator*)> __System_Globalization_CompareInfoSizeCheck;
  static_assert(sizeof(CompareInfo) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Globalization::CompareInfo::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Globalization::CompareInfo::*)()>(&System::Globalization::CompareInfo::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::get_UseManagedCollation
// Il2CppName: get_UseManagedCollation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&System::Globalization::CompareInfo::get_UseManagedCollation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "get_UseManagedCollation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Globalization::CompareInfo::GetCompareInfo
// Il2CppName: GetCompareInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::CompareInfo* (*)(::StringW)>(&System::Globalization::CompareInfo::GetCompareInfo)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "GetCompareInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::OnDeserializing
// Il2CppName: OnDeserializing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Globalization::CompareInfo::*)(::System::Runtime::Serialization::StreamingContext)>(&System::Globalization::CompareInfo::OnDeserializing)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "OnDeserializing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::OnDeserialized
// Il2CppName: OnDeserialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Globalization::CompareInfo::*)()>(&System::Globalization::CompareInfo::OnDeserialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "OnDeserialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::OnDeserialized
// Il2CppName: OnDeserialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Globalization::CompareInfo::*)(::System::Runtime::Serialization::StreamingContext)>(&System::Globalization::CompareInfo::OnDeserialized)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "OnDeserialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::OnSerializing
// Il2CppName: OnSerializing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Globalization::CompareInfo::*)(::System::Runtime::Serialization::StreamingContext)>(&System::Globalization::CompareInfo::OnSerializing)> {
  static const MethodInfo* get() {
    static auto* ctx = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "OnSerializing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ctx});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization
// Il2CppName: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Globalization::CompareInfo::*)(::Il2CppObject*)>(&System::Globalization::CompareInfo::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::StringW)>(&System::Globalization::CompareInfo::Compare)> {
  static const MethodInfo* get() {
    static auto* string1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* string2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{string1, string2});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::Compare)> {
  static const MethodInfo* get() {
    static auto* string1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* string2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{string1, string2, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, int, int, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::Compare)> {
  static const MethodInfo* get() {
    static auto* string1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* string2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{string1, offset1, length1, string2, offset2, length2, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::CompareOrdinal
// Il2CppName: CompareOrdinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int, int, ::StringW, int, int)>(&System::Globalization::CompareInfo::CompareOrdinal)> {
  static const MethodInfo* get() {
    static auto* string1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* string2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "CompareOrdinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{string1, offset1, length1, string2, offset2, length2});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IsPrefix
// Il2CppName: IsPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::CompareInfo::*)(::StringW, ::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::IsPrefix)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IsPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, prefix, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IsSuffix
// Il2CppName: IsSuffix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::CompareInfo::*)(::StringW, ::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::IsSuffix)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* suffix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IsSuffix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, suffix, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::IndexOf)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::IndexOf)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, startIndex, count, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::LastIndexOf
// Il2CppName: LastIndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::LastIndexOf)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* startIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "LastIndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, value, startIndex, count, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::GetSortKey
// Il2CppName: GetSortKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::SortKey* (System::Globalization::CompareInfo::*)(::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::GetSortKey)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "GetSortKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::CreateSortKey
// Il2CppName: CreateSortKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::SortKey* (System::Globalization::CompareInfo::*)(::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::CreateSortKey)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "CreateSortKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::GetHashCodeOfString
// Il2CppName: GetHashCodeOfString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::GetHashCodeOfString)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "GetHashCodeOfString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::GetHashCodeOfString
// Il2CppName: GetHashCodeOfString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, ::System::Globalization::CompareOptions, bool, int64_t)>(&System::Globalization::CompareInfo::GetHashCodeOfString)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    static auto* forceRandomizedHashing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* additionalEntropy = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "GetHashCodeOfString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, options, forceRandomizedHashing, additionalEntropy});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::GetCollator
// Il2CppName: GetCollator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Mono::Globalization::Unicode::SimpleCollator* (System::Globalization::CompareInfo::*)()>(&System::Globalization::CompareInfo::GetCollator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "GetCollator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::CreateSortKeyCore
// Il2CppName: CreateSortKeyCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::SortKey* (System::Globalization::CompareInfo::*)(::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::CreateSortKeyCore)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "CreateSortKeyCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::internal_index_switch
// Il2CppName: internal_index_switch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, int, int, ::StringW, ::System::Globalization::CompareOptions, bool)>(&System::Globalization::CompareInfo::internal_index_switch)> {
  static const MethodInfo* get() {
    static auto* s1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* sindex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* s2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    static auto* first = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "internal_index_switch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s1, sindex, count, s2, opt, first});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::internal_compare_switch
// Il2CppName: internal_compare_switch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, int, int, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::internal_compare_switch)> {
  static const MethodInfo* get() {
    static auto* str1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* str2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "internal_compare_switch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str1, offset1, length1, str2, offset2, length2, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::internal_compare_managed
// Il2CppName: internal_compare_managed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, int, int, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::internal_compare_managed)> {
  static const MethodInfo* get() {
    static auto* str1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* str2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "internal_compare_managed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str1, offset1, length1, str2, offset2, length2, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::internal_index_managed
// Il2CppName: internal_index_managed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, int, int, ::StringW, ::System::Globalization::CompareOptions, bool)>(&System::Globalization::CompareInfo::internal_index_managed)> {
  static const MethodInfo* get() {
    static auto* s1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* sindex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* s2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* opt = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    static auto* first = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "internal_index_managed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s1, sindex, count, s2, opt, first});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::assign_sortkey
// Il2CppName: assign_sortkey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Globalization::CompareInfo::*)(::Il2CppObject*, ::StringW, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::assign_sortkey)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "assign_sortkey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, source, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::internal_compare
// Il2CppName: internal_compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, int, int, ::StringW, int, int, ::System::Globalization::CompareOptions)>(&System::Globalization::CompareInfo::internal_compare)> {
  static const MethodInfo* get() {
    static auto* str1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* str2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "internal_compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str1, offset1, length1, str2, offset2, length2, options});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::internal_index
// Il2CppName: internal_index
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)(::StringW, int, int, ::StringW, ::System::Globalization::CompareOptions, bool)>(&System::Globalization::CompareInfo::internal_index)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* sindex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* count = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "CompareOptions")->byval_arg;
    static auto* first = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "internal_index", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, sindex, count, value, options, first});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Globalization::CompareInfo::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Globalization::CompareInfo::*)(::Il2CppObject*)>(&System::Globalization::CompareInfo::Equals)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Globalization::CompareInfo::*)()>(&System::Globalization::CompareInfo::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Globalization::CompareInfo::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Globalization::CompareInfo::*)()>(&System::Globalization::CompareInfo::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Globalization::CompareInfo*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
