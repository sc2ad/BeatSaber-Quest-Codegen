// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: System.CodeDom.Compiler
namespace System::CodeDom::Compiler {
  // Forward declaring type: GeneratedCodeAttribute
  class GeneratedCodeAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::CodeDom::Compiler::GeneratedCodeAttribute);
DEFINE_IL2CPP_ARG_TYPE(::System::CodeDom::Compiler::GeneratedCodeAttribute*, "System.CodeDom.Compiler", "GeneratedCodeAttribute");
// Type namespace: System.CodeDom.Compiler
namespace System::CodeDom::Compiler {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.CodeDom.Compiler.GeneratedCodeAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 8FF998
  class GeneratedCodeAttribute : public ::System::Attribute {
    public:
    public:
    // private readonly System.String tool
    // Size: 0x8
    // Offset: 0x10
    ::StringW tool;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private readonly System.String version
    // Size: 0x8
    // Offset: 0x18
    ::StringW version;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private readonly System.String tool
    [[deprecated("Use field access instead!")]] ::StringW& dyn_tool();
    // Get instance field reference: private readonly System.String version
    [[deprecated("Use field access instead!")]] ::StringW& dyn_version();
    // public System.Void .ctor(System.String tool, System.String version)
    // Offset: 0x11C9A4C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GeneratedCodeAttribute* New_ctor(::StringW tool, ::StringW version) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::CodeDom::Compiler::GeneratedCodeAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GeneratedCodeAttribute*, creationType>(tool, version)));
    }
  }; // System.CodeDom.Compiler.GeneratedCodeAttribute
  #pragma pack(pop)
  static check_size<sizeof(GeneratedCodeAttribute), 24 + sizeof(::StringW)> __System_CodeDom_Compiler_GeneratedCodeAttributeSizeCheck;
  static_assert(sizeof(GeneratedCodeAttribute) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::CodeDom::Compiler::GeneratedCodeAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
