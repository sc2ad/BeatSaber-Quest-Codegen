// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Security.Principal.IPrincipal
#include "System/Security/Principal/IPrincipal.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: System::Security::Claims
namespace System::Security::Claims {
  // Forward declaring type: ClaimsIdentity
  class ClaimsIdentity;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
// Type namespace: System.Security.Claims
namespace System::Security::Claims {
  // Forward declaring type: ClaimsPrincipal
  class ClaimsPrincipal;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Security::Claims::ClaimsPrincipal);
DEFINE_IL2CPP_ARG_TYPE(::System::Security::Claims::ClaimsPrincipal*, "System.Security.Claims", "ClaimsPrincipal");
// Type namespace: System.Security.Claims
namespace System::Security::Claims {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.Claims.ClaimsPrincipal
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: 1079334
  class ClaimsPrincipal : public ::Il2CppObject/*, public ::System::Security::Principal::IPrincipal*/ {
    public:
    public:
    // [OptionalFieldAttribute] Offset: 0x107DFC8
    // private System.String m_version
    // Size: 0x8
    // Offset: 0x10
    ::StringW m_version;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [OptionalFieldAttribute] Offset: 0x107E000
    // private System.String m_serializedClaimsIdentities
    // Size: 0x8
    // Offset: 0x18
    ::StringW m_serializedClaimsIdentities;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Collections.Generic.List`1<System.Security.Claims.ClaimsIdentity> m_identities
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::System::Security::Claims::ClaimsIdentity*>* m_identities;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::System::Security::Claims::ClaimsIdentity*>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Security::Principal::IPrincipal
    operator ::System::Security::Principal::IPrincipal() noexcept {
      return *reinterpret_cast<::System::Security::Principal::IPrincipal*>(this);
    }
    // Creating interface conversion operator: i_IPrincipal
    inline ::System::Security::Principal::IPrincipal* i_IPrincipal() noexcept {
      return reinterpret_cast<::System::Security::Principal::IPrincipal*>(this);
    }
    // Get static field: static private System.Func`2<System.Collections.Generic.IEnumerable`1<System.Security.Claims.ClaimsIdentity>,System.Security.Claims.ClaimsIdentity> s_identitySelector
    static ::System::Func_2<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::ClaimsIdentity*>*, ::System::Security::Claims::ClaimsIdentity*>* _get_s_identitySelector();
    // Set static field: static private System.Func`2<System.Collections.Generic.IEnumerable`1<System.Security.Claims.ClaimsIdentity>,System.Security.Claims.ClaimsIdentity> s_identitySelector
    static void _set_s_identitySelector(::System::Func_2<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::ClaimsIdentity*>*, ::System::Security::Claims::ClaimsIdentity*>* value);
    // Get static field: static private System.Func`1<System.Security.Claims.ClaimsPrincipal> s_principalSelector
    static ::System::Func_1<::System::Security::Claims::ClaimsPrincipal*>* _get_s_principalSelector();
    // Set static field: static private System.Func`1<System.Security.Claims.ClaimsPrincipal> s_principalSelector
    static void _set_s_principalSelector(::System::Func_1<::System::Security::Claims::ClaimsPrincipal*>* value);
    // Get instance field reference: private System.String m_version
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_version();
    // Get instance field reference: private System.String m_serializedClaimsIdentities
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_serializedClaimsIdentities();
    // Get instance field reference: private System.Collections.Generic.List`1<System.Security.Claims.ClaimsIdentity> m_identities
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Security::Claims::ClaimsIdentity*>*& dyn_m_identities();
    // static public System.Func`1<System.Security.Claims.ClaimsPrincipal> get_ClaimsPrincipalSelector()
    // Offset: 0x1BB88D8
    static ::System::Func_1<::System::Security::Claims::ClaimsPrincipal*>* get_ClaimsPrincipalSelector();
    // protected System.Void .ctor(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1BB89C0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ClaimsPrincipal* New_ctor(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ClaimsPrincipal*, creationType>(info, context)));
    }
    // static private System.Void .cctor()
    // Offset: 0x1BB9A2C
    static void _cctor();
    // static private System.Security.Claims.ClaimsIdentity SelectPrimaryIdentity(System.Collections.Generic.IEnumerable`1<System.Security.Claims.ClaimsIdentity> identities)
    // Offset: 0x1BB85F8
    static ::System::Security::Claims::ClaimsIdentity* SelectPrimaryIdentity(::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::ClaimsIdentity*>* identities);
    // private System.Void OnSerializingMethod(System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1BB8BD8
    void OnSerializingMethod(::System::Runtime::Serialization::StreamingContext context);
    // private System.Void OnDeserializedMethod(System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1BB943C
    void OnDeserializedMethod(::System::Runtime::Serialization::StreamingContext context);
    // private System.Void Deserialize(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x1BB8A98
    void Deserialize(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context);
    // private System.Void DeserializeIdentities(System.String identities)
    // Offset: 0x1BB94A4
    void DeserializeIdentities(::StringW identities);
    // private System.String SerializeIdentities()
    // Offset: 0x1BB8C3C
    ::StringW SerializeIdentities();
    // public System.Void .ctor()
    // Offset: 0x1BB8940
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ClaimsPrincipal* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ClaimsPrincipal*, creationType>()));
    }
  }; // System.Security.Claims.ClaimsPrincipal
  #pragma pack(pop)
  static check_size<sizeof(ClaimsPrincipal), 32 + sizeof(::System::Collections::Generic::List_1<::System::Security::Claims::ClaimsIdentity*>*)> __System_Security_Claims_ClaimsPrincipalSizeCheck;
  static_assert(sizeof(ClaimsPrincipal) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Security::Claims::ClaimsPrincipal::get_ClaimsPrincipalSelector
// Il2CppName: get_ClaimsPrincipalSelector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_1<::System::Security::Claims::ClaimsPrincipal*>* (*)()>(&System::Security::Claims::ClaimsPrincipal::get_ClaimsPrincipalSelector)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Claims::ClaimsPrincipal*), "get_ClaimsPrincipalSelector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Claims::ClaimsPrincipal::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Claims::ClaimsPrincipal::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Security::Claims::ClaimsPrincipal::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Claims::ClaimsPrincipal*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Claims::ClaimsPrincipal::SelectPrimaryIdentity
// Il2CppName: SelectPrimaryIdentity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Claims::ClaimsIdentity* (*)(::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::ClaimsIdentity*>*)>(&System::Security::Claims::ClaimsPrincipal::SelectPrimaryIdentity)> {
  static const MethodInfo* get() {
    static auto* identities = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IEnumerable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System.Security.Claims", "ClaimsIdentity")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Claims::ClaimsPrincipal*), "SelectPrimaryIdentity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{identities});
  }
};
// Writing MetadataGetter for method: System::Security::Claims::ClaimsPrincipal::OnSerializingMethod
// Il2CppName: OnSerializingMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Claims::ClaimsPrincipal::*)(::System::Runtime::Serialization::StreamingContext)>(&System::Security::Claims::ClaimsPrincipal::OnSerializingMethod)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Claims::ClaimsPrincipal*), "OnSerializingMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: System::Security::Claims::ClaimsPrincipal::OnDeserializedMethod
// Il2CppName: OnDeserializedMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Claims::ClaimsPrincipal::*)(::System::Runtime::Serialization::StreamingContext)>(&System::Security::Claims::ClaimsPrincipal::OnDeserializedMethod)> {
  static const MethodInfo* get() {
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Claims::ClaimsPrincipal*), "OnDeserializedMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{context});
  }
};
// Writing MetadataGetter for method: System::Security::Claims::ClaimsPrincipal::Deserialize
// Il2CppName: Deserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Claims::ClaimsPrincipal::*)(::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Security::Claims::ClaimsPrincipal::Deserialize)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Claims::ClaimsPrincipal*), "Deserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info, context});
  }
};
// Writing MetadataGetter for method: System::Security::Claims::ClaimsPrincipal::DeserializeIdentities
// Il2CppName: DeserializeIdentities
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Claims::ClaimsPrincipal::*)(::StringW)>(&System::Security::Claims::ClaimsPrincipal::DeserializeIdentities)> {
  static const MethodInfo* get() {
    static auto* identities = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Claims::ClaimsPrincipal*), "DeserializeIdentities", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{identities});
  }
};
// Writing MetadataGetter for method: System::Security::Claims::ClaimsPrincipal::SerializeIdentities
// Il2CppName: SerializeIdentities
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Security::Claims::ClaimsPrincipal::*)()>(&System::Security::Claims::ClaimsPrincipal::SerializeIdentities)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Claims::ClaimsPrincipal*), "SerializeIdentities", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Claims::ClaimsPrincipal::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
