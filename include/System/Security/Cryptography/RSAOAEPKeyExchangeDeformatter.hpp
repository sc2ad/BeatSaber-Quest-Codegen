// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
#include "System/Security/Cryptography/AsymmetricKeyExchangeDeformatter.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security::Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: RSA
  class RSA;
  // Forward declaring type: AsymmetricAlgorithm
  class AsymmetricAlgorithm;
}
// Completed forward declares
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: RSAOAEPKeyExchangeDeformatter
  class RSAOAEPKeyExchangeDeformatter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter);
DEFINE_IL2CPP_ARG_TYPE(::System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter*, "System.Security.Cryptography", "RSAOAEPKeyExchangeDeformatter");
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: 8F3990
  class RSAOAEPKeyExchangeDeformatter : public ::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter {
    public:
    public:
    // private System.Security.Cryptography.RSA _rsaKey
    // Size: 0x8
    // Offset: 0x10
    ::System::Security::Cryptography::RSA* rsaKey;
    // Field size check
    static_assert(sizeof(::System::Security::Cryptography::RSA*) == 0x8);
    // private System.Nullable`1<System.Boolean> _rsaOverridesDecrypt
    // Size: 0xFFFFFFFF
    // Offset: 0x18
    ::System::Nullable_1<bool> rsaOverridesDecrypt;
    public:
    // Get instance field reference: private System.Security.Cryptography.RSA _rsaKey
    [[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSA*& dyn__rsaKey();
    // Get instance field reference: private System.Nullable`1<System.Boolean> _rsaOverridesDecrypt
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& dyn__rsaOverridesDecrypt();
    // private System.Boolean get_OverridesDecrypt()
    // Offset: 0x168B280
    bool get_OverridesDecrypt();
    // public System.Void .ctor(System.Security.Cryptography.AsymmetricAlgorithm key)
    // Offset: 0x168933C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RSAOAEPKeyExchangeDeformatter* New_ctor(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RSAOAEPKeyExchangeDeformatter*, creationType>(key)));
    }
    // public override System.String get_Parameters()
    // Offset: 0x168B0DC
    // Implemented from: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
    // Base method: System.String AsymmetricKeyExchangeDeformatter::get_Parameters()
    ::StringW get_Parameters();
    // public override System.Void set_Parameters(System.String value)
    // Offset: 0x168B0E4
    // Implemented from: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
    // Base method: System.Void AsymmetricKeyExchangeDeformatter::set_Parameters(System.String value)
    void set_Parameters(::StringW value);
    // public System.Void .ctor()
    // Offset: 0x168B0D4
    // Implemented from: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
    // Base method: System.Void AsymmetricKeyExchangeDeformatter::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RSAOAEPKeyExchangeDeformatter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RSAOAEPKeyExchangeDeformatter*, creationType>()));
    }
    // public override System.Byte[] DecryptKeyExchange(System.Byte[] rgbData)
    // Offset: 0x168B0E8
    // Implemented from: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
    // Base method: System.Byte[] AsymmetricKeyExchangeDeformatter::DecryptKeyExchange(System.Byte[] rgbData)
    ::ArrayW<uint8_t> DecryptKeyExchange(::ArrayW<uint8_t> rgbData);
    // public override System.Void SetKey(System.Security.Cryptography.AsymmetricAlgorithm key)
    // Offset: 0x168B508
    // Implemented from: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
    // Base method: System.Void AsymmetricKeyExchangeDeformatter::SetKey(System.Security.Cryptography.AsymmetricAlgorithm key)
    void SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key);
  }; // System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::get_OverridesDecrypt
// Il2CppName: get_OverridesDecrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::*)()>(&System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::get_OverridesDecrypt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter*), "get_OverridesDecrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::get_Parameters
// Il2CppName: get_Parameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::*)()>(&System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::get_Parameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter*), "get_Parameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::set_Parameters
// Il2CppName: set_Parameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::*)(::StringW)>(&System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::set_Parameters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter*), "set_Parameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::DecryptKeyExchange
// Il2CppName: DecryptKeyExchange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::*)(::ArrayW<uint8_t>)>(&System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::DecryptKeyExchange)> {
  static const MethodInfo* get() {
    static auto* rgbData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter*), "DecryptKeyExchange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rgbData});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::*)(::System::Security::Cryptography::AsymmetricAlgorithm*)>(&System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter::SetKey)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography", "AsymmetricAlgorithm")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAOAEPKeyExchangeDeformatter*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
