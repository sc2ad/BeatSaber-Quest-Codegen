// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: System.Security.Cryptography.RSAEncryptionPaddingMode
#include "System/Security/Cryptography/RSAEncryptionPaddingMode.hpp"
// Including type: System.Security.Cryptography.HashAlgorithmName
#include "System/Security/Cryptography/HashAlgorithmName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: RSAEncryptionPadding
  class RSAEncryptionPadding;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Security::Cryptography::RSAEncryptionPadding);
DEFINE_IL2CPP_ARG_TYPE(::System::Security::Cryptography::RSAEncryptionPadding*, "System.Security.Cryptography", "RSAEncryptionPadding");
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.Cryptography.RSAEncryptionPadding
  // [TokenAttribute] Offset: FFFFFFFF
  class RSAEncryptionPadding : public ::Il2CppObject/*, public ::System::IEquatable_1<::System::Security::Cryptography::RSAEncryptionPadding*>*/ {
    public:
    public:
    // private System.Security.Cryptography.RSAEncryptionPaddingMode _mode
    // Size: 0x4
    // Offset: 0x10
    ::System::Security::Cryptography::RSAEncryptionPaddingMode mode;
    // Field size check
    static_assert(sizeof(::System::Security::Cryptography::RSAEncryptionPaddingMode) == 0x4);
    // Padding between fields: mode and: oaepHashAlgorithm
    char __padding0[0x4] = {};
    // private System.Security.Cryptography.HashAlgorithmName _oaepHashAlgorithm
    // Size: 0x8
    // Offset: 0x18
    ::System::Security::Cryptography::HashAlgorithmName oaepHashAlgorithm;
    // Field size check
    static_assert(sizeof(::System::Security::Cryptography::HashAlgorithmName) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::IEquatable_1<::System::Security::Cryptography::RSAEncryptionPadding*>
    operator ::System::IEquatable_1<::System::Security::Cryptography::RSAEncryptionPadding*>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::System::Security::Cryptography::RSAEncryptionPadding*>*>(this);
    }
    // Get static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_pkcs1
    static ::System::Security::Cryptography::RSAEncryptionPadding* _get_s_pkcs1();
    // Set static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_pkcs1
    static void _set_s_pkcs1(::System::Security::Cryptography::RSAEncryptionPadding* value);
    // Get static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_oaepSHA1
    static ::System::Security::Cryptography::RSAEncryptionPadding* _get_s_oaepSHA1();
    // Set static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_oaepSHA1
    static void _set_s_oaepSHA1(::System::Security::Cryptography::RSAEncryptionPadding* value);
    // Get static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_oaepSHA256
    static ::System::Security::Cryptography::RSAEncryptionPadding* _get_s_oaepSHA256();
    // Set static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_oaepSHA256
    static void _set_s_oaepSHA256(::System::Security::Cryptography::RSAEncryptionPadding* value);
    // Get static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_oaepSHA384
    static ::System::Security::Cryptography::RSAEncryptionPadding* _get_s_oaepSHA384();
    // Set static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_oaepSHA384
    static void _set_s_oaepSHA384(::System::Security::Cryptography::RSAEncryptionPadding* value);
    // Get static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_oaepSHA512
    static ::System::Security::Cryptography::RSAEncryptionPadding* _get_s_oaepSHA512();
    // Set static field: static private readonly System.Security.Cryptography.RSAEncryptionPadding s_oaepSHA512
    static void _set_s_oaepSHA512(::System::Security::Cryptography::RSAEncryptionPadding* value);
    // Get instance field reference: private System.Security.Cryptography.RSAEncryptionPaddingMode _mode
    [[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSAEncryptionPaddingMode& dyn__mode();
    // Get instance field reference: private System.Security.Cryptography.HashAlgorithmName _oaepHashAlgorithm
    [[deprecated("Use field access instead!")]] ::System::Security::Cryptography::HashAlgorithmName& dyn__oaepHashAlgorithm();
    // static public System.Security.Cryptography.RSAEncryptionPadding get_Pkcs1()
    // Offset: 0x168A9C8
    static ::System::Security::Cryptography::RSAEncryptionPadding* get_Pkcs1();
    // static public System.Security.Cryptography.RSAEncryptionPadding get_OaepSHA1()
    // Offset: 0x168AA30
    static ::System::Security::Cryptography::RSAEncryptionPadding* get_OaepSHA1();
    // static public System.Security.Cryptography.RSAEncryptionPadding get_OaepSHA256()
    // Offset: 0x168AA98
    static ::System::Security::Cryptography::RSAEncryptionPadding* get_OaepSHA256();
    // static public System.Security.Cryptography.RSAEncryptionPadding get_OaepSHA384()
    // Offset: 0x168AB00
    static ::System::Security::Cryptography::RSAEncryptionPadding* get_OaepSHA384();
    // static public System.Security.Cryptography.RSAEncryptionPadding get_OaepSHA512()
    // Offset: 0x168AB68
    static ::System::Security::Cryptography::RSAEncryptionPadding* get_OaepSHA512();
    // public System.Security.Cryptography.RSAEncryptionPaddingMode get_Mode()
    // Offset: 0x168ACE4
    ::System::Security::Cryptography::RSAEncryptionPaddingMode get_Mode();
    // public System.Security.Cryptography.HashAlgorithmName get_OaepHashAlgorithm()
    // Offset: 0x168ACEC
    ::System::Security::Cryptography::HashAlgorithmName get_OaepHashAlgorithm();
    // private System.Void .ctor(System.Security.Cryptography.RSAEncryptionPaddingMode mode, System.Security.Cryptography.HashAlgorithmName oaepHashAlgorithm)
    // Offset: 0x168ABD0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RSAEncryptionPadding* New_ctor(::System::Security::Cryptography::RSAEncryptionPaddingMode mode, ::System::Security::Cryptography::HashAlgorithmName oaepHashAlgorithm) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RSAEncryptionPadding*, creationType>(mode, oaepHashAlgorithm)));
    }
    // static private System.Void .cctor()
    // Offset: 0x168AFC8
    static void _cctor();
    // static public System.Security.Cryptography.RSAEncryptionPadding CreateOaep(System.Security.Cryptography.HashAlgorithmName hashAlgorithm)
    // Offset: 0x168AC0C
    static ::System::Security::Cryptography::RSAEncryptionPadding* CreateOaep(::System::Security::Cryptography::HashAlgorithmName hashAlgorithm);
    // static private System.Int32 CombineHashCodes(System.Int32 h1, System.Int32 h2)
    // Offset: 0x168AD80
    static int CombineHashCodes(int h1, int h2);
    // public System.Boolean Equals(System.Security.Cryptography.RSAEncryptionPadding other)
    // Offset: 0x168AE00
    bool Equals(::System::Security::Cryptography::RSAEncryptionPadding* other);
    // System.Void .ctor()
    // Offset: 0x168B094
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RSAEncryptionPadding* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAEncryptionPadding::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RSAEncryptionPadding*, creationType>()));
    }
    // public override System.Int32 GetHashCode()
    // Offset: 0x168ACF4
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x168AD8C
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.String ToString()
    // Offset: 0x168AF34
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // System.Security.Cryptography.RSAEncryptionPadding
  #pragma pack(pop)
  static check_size<sizeof(RSAEncryptionPadding), 24 + sizeof(::System::Security::Cryptography::HashAlgorithmName)> __System_Security_Cryptography_RSAEncryptionPaddingSizeCheck;
  static_assert(sizeof(RSAEncryptionPadding) == 0x20);
  // static public System.Boolean op_Equality(System.Security.Cryptography.RSAEncryptionPadding left, System.Security.Cryptography.RSAEncryptionPadding right)
  // Offset: 0x16882A4
  bool operator ==(::System::Security::Cryptography::RSAEncryptionPadding* left, ::System::Security::Cryptography::RSAEncryptionPadding& right);
  // static public System.Boolean op_Inequality(System.Security.Cryptography.RSAEncryptionPadding left, System.Security.Cryptography.RSAEncryptionPadding right)
  // Offset: 0x168AEB4
  bool operator !=(::System::Security::Cryptography::RSAEncryptionPadding* left, ::System::Security::Cryptography::RSAEncryptionPadding& right);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::get_Pkcs1
// Il2CppName: get_Pkcs1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::RSAEncryptionPadding* (*)()>(&System::Security::Cryptography::RSAEncryptionPadding::get_Pkcs1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAEncryptionPadding*), "get_Pkcs1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::get_OaepSHA1
// Il2CppName: get_OaepSHA1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::RSAEncryptionPadding* (*)()>(&System::Security::Cryptography::RSAEncryptionPadding::get_OaepSHA1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAEncryptionPadding*), "get_OaepSHA1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::get_OaepSHA256
// Il2CppName: get_OaepSHA256
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::RSAEncryptionPadding* (*)()>(&System::Security::Cryptography::RSAEncryptionPadding::get_OaepSHA256)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAEncryptionPadding*), "get_OaepSHA256", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::get_OaepSHA384
// Il2CppName: get_OaepSHA384
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::RSAEncryptionPadding* (*)()>(&System::Security::Cryptography::RSAEncryptionPadding::get_OaepSHA384)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAEncryptionPadding*), "get_OaepSHA384", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::get_OaepSHA512
// Il2CppName: get_OaepSHA512
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::RSAEncryptionPadding* (*)()>(&System::Security::Cryptography::RSAEncryptionPadding::get_OaepSHA512)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAEncryptionPadding*), "get_OaepSHA512", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::get_Mode
// Il2CppName: get_Mode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::RSAEncryptionPaddingMode (System::Security::Cryptography::RSAEncryptionPadding::*)()>(&System::Security::Cryptography::RSAEncryptionPadding::get_Mode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAEncryptionPadding*), "get_Mode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::get_OaepHashAlgorithm
// Il2CppName: get_OaepHashAlgorithm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::HashAlgorithmName (System::Security::Cryptography::RSAEncryptionPadding::*)()>(&System::Security::Cryptography::RSAEncryptionPadding::get_OaepHashAlgorithm)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAEncryptionPadding*), "get_OaepHashAlgorithm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Security::Cryptography::RSAEncryptionPadding::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAEncryptionPadding*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::CreateOaep
// Il2CppName: CreateOaep
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::RSAEncryptionPadding* (*)(::System::Security::Cryptography::HashAlgorithmName)>(&System::Security::Cryptography::RSAEncryptionPadding::CreateOaep)> {
  static const MethodInfo* get() {
    static auto* hashAlgorithm = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography", "HashAlgorithmName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAEncryptionPadding*), "CreateOaep", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{hashAlgorithm});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::CombineHashCodes
// Il2CppName: CombineHashCodes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, int)>(&System::Security::Cryptography::RSAEncryptionPadding::CombineHashCodes)> {
  static const MethodInfo* get() {
    static auto* h1 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* h2 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAEncryptionPadding*), "CombineHashCodes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{h1, h2});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Security::Cryptography::RSAEncryptionPadding::*)(::System::Security::Cryptography::RSAEncryptionPadding*)>(&System::Security::Cryptography::RSAEncryptionPadding::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography", "RSAEncryptionPadding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAEncryptionPadding*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Security::Cryptography::RSAEncryptionPadding::*)()>(&System::Security::Cryptography::RSAEncryptionPadding::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAEncryptionPadding*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Security::Cryptography::RSAEncryptionPadding::*)(::Il2CppObject*)>(&System::Security::Cryptography::RSAEncryptionPadding::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAEncryptionPadding*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Security::Cryptography::RSAEncryptionPadding::*)()>(&System::Security::Cryptography::RSAEncryptionPadding::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAEncryptionPadding*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::operator ==
// Il2CppName: op_Equality
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: System::Security::Cryptography::RSAEncryptionPadding::operator !=
// Il2CppName: op_Inequality
// Cannot perform method pointer template specialization from operators!
