// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security::Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: AsymmetricAlgorithm
  class AsymmetricAlgorithm;
}
// Completed forward declares
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: AsymmetricKeyExchangeDeformatter
  class AsymmetricKeyExchangeDeformatter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter);
DEFINE_IL2CPP_ARG_TYPE(::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*, "System.Security.Cryptography", "AsymmetricKeyExchangeDeformatter");
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: 8F3560
  class AsymmetricKeyExchangeDeformatter : public ::Il2CppObject {
    public:
    // public System.String get_Parameters()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_Parameters();
    // public System.Void set_Parameters(System.String value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Parameters(::StringW value);
    // public System.Void SetKey(System.Security.Cryptography.AsymmetricAlgorithm key)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key);
    // public System.Byte[] DecryptKeyExchange(System.Byte[] rgb)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::ArrayW<uint8_t> DecryptKeyExchange(::ArrayW<uint8_t> rgb);
    // protected System.Void .ctor()
    // Offset: 0x12A2624
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AsymmetricKeyExchangeDeformatter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AsymmetricKeyExchangeDeformatter*, creationType>()));
    }
  }; // System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::get_Parameters
// Il2CppName: get_Parameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::*)()>(&System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::get_Parameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*), "get_Parameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::set_Parameters
// Il2CppName: set_Parameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::*)(::StringW)>(&System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::set_Parameters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*), "set_Parameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::*)(::System::Security::Cryptography::AsymmetricAlgorithm*)>(&System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::SetKey)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography", "AsymmetricAlgorithm")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::DecryptKeyExchange
// Il2CppName: DecryptKeyExchange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::*)(::ArrayW<uint8_t>)>(&System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::DecryptKeyExchange)> {
  static const MethodInfo* get() {
    static auto* rgb = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::AsymmetricKeyExchangeDeformatter*), "DecryptKeyExchange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rgb});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::AsymmetricKeyExchangeDeformatter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
