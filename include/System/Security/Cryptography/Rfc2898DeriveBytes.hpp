// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Security.Cryptography.DeriveBytes
#include "System/Security/Cryptography/DeriveBytes.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security::Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: HMACSHA1
  class HMACSHA1;
}
// Completed forward declares
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: Rfc2898DeriveBytes
  class Rfc2898DeriveBytes;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Security::Cryptography::Rfc2898DeriveBytes);
DEFINE_IL2CPP_ARG_TYPE(::System::Security::Cryptography::Rfc2898DeriveBytes*, "System.Security.Cryptography", "Rfc2898DeriveBytes");
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.Cryptography.Rfc2898DeriveBytes
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: 8F38DC
  class Rfc2898DeriveBytes : public ::System::Security::Cryptography::DeriveBytes {
    public:
    public:
    // private System.Byte[] m_buffer
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<uint8_t> m_buffer;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private System.Byte[] m_salt
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<uint8_t> m_salt;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private System.Security.Cryptography.HMACSHA1 m_hmacsha1
    // Size: 0x8
    // Offset: 0x20
    ::System::Security::Cryptography::HMACSHA1* m_hmacsha1;
    // Field size check
    static_assert(sizeof(::System::Security::Cryptography::HMACSHA1*) == 0x8);
    // private System.Byte[] m_password
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<uint8_t> m_password;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private System.UInt32 m_iterations
    // Size: 0x4
    // Offset: 0x30
    uint m_iterations;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 m_block
    // Size: 0x4
    // Offset: 0x34
    uint m_block;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.Int32 m_startIndex
    // Size: 0x4
    // Offset: 0x38
    int m_startIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 m_endIndex
    // Size: 0x4
    // Offset: 0x3C
    int m_endIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // static field const value: static private System.Int32 BlockSize
    static constexpr const int BlockSize = 20;
    // Get static field: static private System.Int32 BlockSize
    static int _get_BlockSize();
    // Set static field: static private System.Int32 BlockSize
    static void _set_BlockSize(int value);
    // Get instance field reference: private System.Byte[] m_buffer
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_m_buffer();
    // Get instance field reference: private System.Byte[] m_salt
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_m_salt();
    // Get instance field reference: private System.Security.Cryptography.HMACSHA1 m_hmacsha1
    [[deprecated("Use field access instead!")]] ::System::Security::Cryptography::HMACSHA1*& dyn_m_hmacsha1();
    // Get instance field reference: private System.Byte[] m_password
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_m_password();
    // Get instance field reference: private System.UInt32 m_iterations
    [[deprecated("Use field access instead!")]] uint& dyn_m_iterations();
    // Get instance field reference: private System.UInt32 m_block
    [[deprecated("Use field access instead!")]] uint& dyn_m_block();
    // Get instance field reference: private System.Int32 m_startIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_startIndex();
    // Get instance field reference: private System.Int32 m_endIndex
    [[deprecated("Use field access instead!")]] int& dyn_m_endIndex();
    // public System.Int32 get_IterationCount()
    // Offset: 0x168DE8C
    int get_IterationCount();
    // public System.Void set_IterationCount(System.Int32 value)
    // Offset: 0x168DBF4
    void set_IterationCount(int value);
    // public System.Byte[] get_Salt()
    // Offset: 0x168DE94
    ::ArrayW<uint8_t> get_Salt();
    // public System.Void set_Salt(System.Byte[] value)
    // Offset: 0x168DACC
    void set_Salt(::ArrayW<uint8_t> value);
    // public System.Void .ctor(System.String password, System.Int32 saltSize)
    // Offset: 0x168D844
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Rfc2898DeriveBytes* New_ctor(::StringW password, int saltSize) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Rfc2898DeriveBytes*, creationType>(password, saltSize)));
    }
    // public System.Void .ctor(System.String password, System.Int32 saltSize, System.Int32 iterations)
    // Offset: 0x168D84C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Rfc2898DeriveBytes* New_ctor(::StringW password, int saltSize, int iterations) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Rfc2898DeriveBytes*, creationType>(password, saltSize, iterations)));
    }
    // public System.Void .ctor(System.String password, System.Byte[] salt)
    // Offset: 0x168DD2C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Rfc2898DeriveBytes* New_ctor(::StringW password, ::ArrayW<uint8_t> salt) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Rfc2898DeriveBytes*, creationType>(password, salt)));
    }
    // public System.Void .ctor(System.String password, System.Byte[] salt, System.Int32 iterations)
    // Offset: 0x168DD34
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Rfc2898DeriveBytes* New_ctor(::StringW password, ::ArrayW<uint8_t> salt, int iterations) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Rfc2898DeriveBytes*, creationType>(password, salt, iterations)));
    }
    // public System.Void .ctor(System.Byte[] password, System.Byte[] salt, System.Int32 iterations)
    // Offset: 0x168DDE0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Rfc2898DeriveBytes* New_ctor(::ArrayW<uint8_t> password, ::ArrayW<uint8_t> salt, int iterations) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Rfc2898DeriveBytes::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Rfc2898DeriveBytes*, creationType>(password, salt, iterations)));
    }
    // private System.Void Initialize()
    // Offset: 0x168DCAC
    void Initialize();
    // private System.Byte[] Func()
    // Offset: 0x168E0D8
    ::ArrayW<uint8_t> Func();
    // public System.Byte[] CryptDeriveKey(System.String algname, System.String alghashname, System.Int32 keySize, System.Byte[] rgbIV)
    // Offset: 0x168E4D8
    ::ArrayW<uint8_t> CryptDeriveKey(::StringW algname, ::StringW alghashname, int keySize, ::ArrayW<uint8_t> rgbIV);
    // public override System.Byte[] GetBytes(System.Int32 cb)
    // Offset: 0x168DF14
    // Implemented from: System.Security.Cryptography.DeriveBytes
    // Base method: System.Byte[] DeriveBytes::GetBytes(System.Int32 cb)
    ::ArrayW<uint8_t> GetBytes(int cb);
    // public override System.Void Reset()
    // Offset: 0x168E324
    // Implemented from: System.Security.Cryptography.DeriveBytes
    // Base method: System.Void DeriveBytes::Reset()
    void Reset();
    // protected override System.Void Dispose(System.Boolean disposing)
    // Offset: 0x168E328
    // Implemented from: System.Security.Cryptography.DeriveBytes
    // Base method: System.Void DeriveBytes::Dispose(System.Boolean disposing)
    void Dispose(bool disposing);
  }; // System.Security.Cryptography.Rfc2898DeriveBytes
  #pragma pack(pop)
  static check_size<sizeof(Rfc2898DeriveBytes), 60 + sizeof(int)> __System_Security_Cryptography_Rfc2898DeriveBytesSizeCheck;
  static_assert(sizeof(Rfc2898DeriveBytes) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Security::Cryptography::Rfc2898DeriveBytes::get_IterationCount
// Il2CppName: get_IterationCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Security::Cryptography::Rfc2898DeriveBytes::*)()>(&System::Security::Cryptography::Rfc2898DeriveBytes::get_IterationCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::Rfc2898DeriveBytes*), "get_IterationCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::Rfc2898DeriveBytes::set_IterationCount
// Il2CppName: set_IterationCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::Rfc2898DeriveBytes::*)(int)>(&System::Security::Cryptography::Rfc2898DeriveBytes::set_IterationCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::Rfc2898DeriveBytes*), "set_IterationCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::Rfc2898DeriveBytes::get_Salt
// Il2CppName: get_Salt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Security::Cryptography::Rfc2898DeriveBytes::*)()>(&System::Security::Cryptography::Rfc2898DeriveBytes::get_Salt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::Rfc2898DeriveBytes*), "get_Salt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::Rfc2898DeriveBytes::set_Salt
// Il2CppName: set_Salt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::Rfc2898DeriveBytes::*)(::ArrayW<uint8_t>)>(&System::Security::Cryptography::Rfc2898DeriveBytes::set_Salt)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::Rfc2898DeriveBytes*), "set_Salt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::Rfc2898DeriveBytes::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::Rfc2898DeriveBytes::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::Rfc2898DeriveBytes::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::Rfc2898DeriveBytes::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::Rfc2898DeriveBytes::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::Rfc2898DeriveBytes::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::Rfc2898DeriveBytes::*)()>(&System::Security::Cryptography::Rfc2898DeriveBytes::Initialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::Rfc2898DeriveBytes*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::Rfc2898DeriveBytes::Func
// Il2CppName: Func
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Security::Cryptography::Rfc2898DeriveBytes::*)()>(&System::Security::Cryptography::Rfc2898DeriveBytes::Func)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::Rfc2898DeriveBytes*), "Func", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::Rfc2898DeriveBytes::CryptDeriveKey
// Il2CppName: CryptDeriveKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Security::Cryptography::Rfc2898DeriveBytes::*)(::StringW, ::StringW, int, ::ArrayW<uint8_t>)>(&System::Security::Cryptography::Rfc2898DeriveBytes::CryptDeriveKey)> {
  static const MethodInfo* get() {
    static auto* algname = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* alghashname = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* keySize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* rgbIV = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::Rfc2898DeriveBytes*), "CryptDeriveKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{algname, alghashname, keySize, rgbIV});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::Rfc2898DeriveBytes::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Security::Cryptography::Rfc2898DeriveBytes::*)(int)>(&System::Security::Cryptography::Rfc2898DeriveBytes::GetBytes)> {
  static const MethodInfo* get() {
    static auto* cb = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::Rfc2898DeriveBytes*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cb});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::Rfc2898DeriveBytes::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::Rfc2898DeriveBytes::*)()>(&System::Security::Cryptography::Rfc2898DeriveBytes::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::Rfc2898DeriveBytes*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::Rfc2898DeriveBytes::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::Rfc2898DeriveBytes::*)(bool)>(&System::Security::Cryptography::Rfc2898DeriveBytes::Dispose)> {
  static const MethodInfo* get() {
    static auto* disposing = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::Rfc2898DeriveBytes*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{disposing});
  }
};
