// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
#include "System/Security/Cryptography/AsymmetricKeyExchangeFormatter.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security::Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: RSA
  class RSA;
  // Forward declaring type: RandomNumberGenerator
  class RandomNumberGenerator;
  // Forward declaring type: AsymmetricAlgorithm
  class AsymmetricAlgorithm;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // Forward declaring type: RSAOAEPKeyExchangeFormatter
  class RSAOAEPKeyExchangeFormatter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter);
DEFINE_IL2CPP_ARG_TYPE(::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter*, "System.Security.Cryptography", "RSAOAEPKeyExchangeFormatter");
// Type namespace: System.Security.Cryptography
namespace System::Security::Cryptography {
  // WARNING Size may be invalid!
  // Autogenerated type: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: 8F39A4
  class RSAOAEPKeyExchangeFormatter : public ::System::Security::Cryptography::AsymmetricKeyExchangeFormatter {
    public:
    public:
    // private System.Byte[] ParameterValue
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<uint8_t> ParameterValue;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private System.Security.Cryptography.RSA _rsaKey
    // Size: 0x8
    // Offset: 0x18
    ::System::Security::Cryptography::RSA* rsaKey;
    // Field size check
    static_assert(sizeof(::System::Security::Cryptography::RSA*) == 0x8);
    // private System.Nullable`1<System.Boolean> _rsaOverridesEncrypt
    // Size: 0xFFFFFFFF
    // Offset: 0x20
    ::System::Nullable_1<bool> rsaOverridesEncrypt;
    // private System.Security.Cryptography.RandomNumberGenerator RngValue
    // Size: 0x8
    // Offset: 0x28
    ::System::Security::Cryptography::RandomNumberGenerator* RngValue;
    // Field size check
    static_assert(sizeof(::System::Security::Cryptography::RandomNumberGenerator*) == 0x8);
    public:
    // Get instance field reference: private System.Byte[] ParameterValue
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_ParameterValue();
    // Get instance field reference: private System.Security.Cryptography.RSA _rsaKey
    [[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSA*& dyn__rsaKey();
    // Get instance field reference: private System.Nullable`1<System.Boolean> _rsaOverridesEncrypt
    [[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& dyn__rsaOverridesEncrypt();
    // Get instance field reference: private System.Security.Cryptography.RandomNumberGenerator RngValue
    [[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RandomNumberGenerator*& dyn_RngValue();
    // public System.Byte[] get_Parameter()
    // Offset: 0x168B6D0
    ::ArrayW<uint8_t> get_Parameter();
    // public System.Void set_Parameter(System.Byte[] value)
    // Offset: 0x168B74C
    void set_Parameter(::ArrayW<uint8_t> value);
    // public System.Security.Cryptography.RandomNumberGenerator get_Rng()
    // Offset: 0x168B7E8
    ::System::Security::Cryptography::RandomNumberGenerator* get_Rng();
    // public System.Void set_Rng(System.Security.Cryptography.RandomNumberGenerator value)
    // Offset: 0x168B7F0
    void set_Rng(::System::Security::Cryptography::RandomNumberGenerator* value);
    // private System.Boolean get_OverridesEncrypt()
    // Offset: 0x168BA70
    bool get_OverridesEncrypt();
    // public System.Void .ctor(System.Security.Cryptography.AsymmetricAlgorithm key)
    // Offset: 0x16895A4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RSAOAEPKeyExchangeFormatter* New_ctor(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RSAOAEPKeyExchangeFormatter*, creationType>(key)));
    }
    // public override System.String get_Parameters()
    // Offset: 0x168B7E0
    // Implemented from: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
    // Base method: System.String AsymmetricKeyExchangeFormatter::get_Parameters()
    ::StringW get_Parameters();
    // public System.Void .ctor()
    // Offset: 0x168B6C8
    // Implemented from: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
    // Base method: System.Void AsymmetricKeyExchangeFormatter::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RSAOAEPKeyExchangeFormatter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RSAOAEPKeyExchangeFormatter*, creationType>()));
    }
    // public override System.Void SetKey(System.Security.Cryptography.AsymmetricAlgorithm key)
    // Offset: 0x168B7F8
    // Implemented from: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
    // Base method: System.Void AsymmetricKeyExchangeFormatter::SetKey(System.Security.Cryptography.AsymmetricAlgorithm key)
    void SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key);
    // public override System.Byte[] CreateKeyExchange(System.Byte[] rgbData)
    // Offset: 0x168B8C8
    // Implemented from: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
    // Base method: System.Byte[] AsymmetricKeyExchangeFormatter::CreateKeyExchange(System.Byte[] rgbData)
    ::ArrayW<uint8_t> CreateKeyExchange(::ArrayW<uint8_t> rgbData);
    // public override System.Byte[] CreateKeyExchange(System.Byte[] rgbData, System.Type symAlgType)
    // Offset: 0x168BD08
    // Implemented from: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
    // Base method: System.Byte[] AsymmetricKeyExchangeFormatter::CreateKeyExchange(System.Byte[] rgbData, System.Type symAlgType)
    ::ArrayW<uint8_t> CreateKeyExchange(::ArrayW<uint8_t> rgbData, ::System::Type* symAlgType);
  }; // System.Security.Cryptography.RSAOAEPKeyExchangeFormatter
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::get_Parameter
// Il2CppName: get_Parameter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::*)()>(&System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::get_Parameter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAOAEPKeyExchangeFormatter*), "get_Parameter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::set_Parameter
// Il2CppName: set_Parameter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::*)(::ArrayW<uint8_t>)>(&System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::set_Parameter)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAOAEPKeyExchangeFormatter*), "set_Parameter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::get_Rng
// Il2CppName: get_Rng
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::Cryptography::RandomNumberGenerator* (System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::*)()>(&System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::get_Rng)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAOAEPKeyExchangeFormatter*), "get_Rng", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::set_Rng
// Il2CppName: set_Rng
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::*)(::System::Security::Cryptography::RandomNumberGenerator*)>(&System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::set_Rng)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography", "RandomNumberGenerator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAOAEPKeyExchangeFormatter*), "set_Rng", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::get_OverridesEncrypt
// Il2CppName: get_OverridesEncrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::*)()>(&System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::get_OverridesEncrypt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAOAEPKeyExchangeFormatter*), "get_OverridesEncrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::get_Parameters
// Il2CppName: get_Parameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::*)()>(&System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::get_Parameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAOAEPKeyExchangeFormatter*), "get_Parameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::*)(::System::Security::Cryptography::AsymmetricAlgorithm*)>(&System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::SetKey)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System.Security.Cryptography", "AsymmetricAlgorithm")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAOAEPKeyExchangeFormatter*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::CreateKeyExchange
// Il2CppName: CreateKeyExchange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::*)(::ArrayW<uint8_t>)>(&System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::CreateKeyExchange)> {
  static const MethodInfo* get() {
    static auto* rgbData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAOAEPKeyExchangeFormatter*), "CreateKeyExchange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rgbData});
  }
};
// Writing MetadataGetter for method: System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::CreateKeyExchange
// Il2CppName: CreateKeyExchange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::*)(::ArrayW<uint8_t>, ::System::Type*)>(&System::Security::Cryptography::RSAOAEPKeyExchangeFormatter::CreateKeyExchange)> {
  static const MethodInfo* get() {
    static auto* rgbData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* symAlgType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::Cryptography::RSAOAEPKeyExchangeFormatter*), "CreateKeyExchange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rgbData, symAlgType});
  }
};
