// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: System.Security.Permissions
namespace System::Security::Permissions {
  // Forward declaring type: SecurityPermissionFlag
  struct SecurityPermissionFlag;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::System::Security::Permissions::SecurityPermissionFlag, "System.Security.Permissions", "SecurityPermissionFlag");
// Type namespace: System.Security.Permissions
namespace System::Security::Permissions {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.Permissions.SecurityPermissionFlag
  // [TokenAttribute] Offset: FFFFFFFF
  // [FlagsAttribute] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: 1079004
  // [ComVisibleAttribute] Offset: 1079004
  struct SecurityPermissionFlag/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: SecurityPermissionFlag
    constexpr SecurityPermissionFlag(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating interface conversion operator: i_Enum
    inline ::System::Enum* i_Enum() noexcept {
      return reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public System.Security.Permissions.SecurityPermissionFlag NoFlags
    static constexpr const int NoFlags = 0;
    // Get static field: static public System.Security.Permissions.SecurityPermissionFlag NoFlags
    static ::System::Security::Permissions::SecurityPermissionFlag _get_NoFlags();
    // Set static field: static public System.Security.Permissions.SecurityPermissionFlag NoFlags
    static void _set_NoFlags(::System::Security::Permissions::SecurityPermissionFlag value);
    // static field const value: static public System.Security.Permissions.SecurityPermissionFlag Assertion
    static constexpr const int Assertion = 1;
    // Get static field: static public System.Security.Permissions.SecurityPermissionFlag Assertion
    static ::System::Security::Permissions::SecurityPermissionFlag _get_Assertion();
    // Set static field: static public System.Security.Permissions.SecurityPermissionFlag Assertion
    static void _set_Assertion(::System::Security::Permissions::SecurityPermissionFlag value);
    // static field const value: static public System.Security.Permissions.SecurityPermissionFlag UnmanagedCode
    static constexpr const int UnmanagedCode = 2;
    // Get static field: static public System.Security.Permissions.SecurityPermissionFlag UnmanagedCode
    static ::System::Security::Permissions::SecurityPermissionFlag _get_UnmanagedCode();
    // Set static field: static public System.Security.Permissions.SecurityPermissionFlag UnmanagedCode
    static void _set_UnmanagedCode(::System::Security::Permissions::SecurityPermissionFlag value);
    // static field const value: static public System.Security.Permissions.SecurityPermissionFlag SkipVerification
    static constexpr const int SkipVerification = 4;
    // Get static field: static public System.Security.Permissions.SecurityPermissionFlag SkipVerification
    static ::System::Security::Permissions::SecurityPermissionFlag _get_SkipVerification();
    // Set static field: static public System.Security.Permissions.SecurityPermissionFlag SkipVerification
    static void _set_SkipVerification(::System::Security::Permissions::SecurityPermissionFlag value);
    // static field const value: static public System.Security.Permissions.SecurityPermissionFlag Execution
    static constexpr const int Execution = 8;
    // Get static field: static public System.Security.Permissions.SecurityPermissionFlag Execution
    static ::System::Security::Permissions::SecurityPermissionFlag _get_Execution();
    // Set static field: static public System.Security.Permissions.SecurityPermissionFlag Execution
    static void _set_Execution(::System::Security::Permissions::SecurityPermissionFlag value);
    // static field const value: static public System.Security.Permissions.SecurityPermissionFlag ControlThread
    static constexpr const int ControlThread = 16;
    // Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlThread
    static ::System::Security::Permissions::SecurityPermissionFlag _get_ControlThread();
    // Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlThread
    static void _set_ControlThread(::System::Security::Permissions::SecurityPermissionFlag value);
    // static field const value: static public System.Security.Permissions.SecurityPermissionFlag ControlEvidence
    static constexpr const int ControlEvidence = 32;
    // Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlEvidence
    static ::System::Security::Permissions::SecurityPermissionFlag _get_ControlEvidence();
    // Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlEvidence
    static void _set_ControlEvidence(::System::Security::Permissions::SecurityPermissionFlag value);
    // static field const value: static public System.Security.Permissions.SecurityPermissionFlag ControlPolicy
    static constexpr const int ControlPolicy = 64;
    // Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlPolicy
    static ::System::Security::Permissions::SecurityPermissionFlag _get_ControlPolicy();
    // Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlPolicy
    static void _set_ControlPolicy(::System::Security::Permissions::SecurityPermissionFlag value);
    // static field const value: static public System.Security.Permissions.SecurityPermissionFlag SerializationFormatter
    static constexpr const int SerializationFormatter = 128;
    // Get static field: static public System.Security.Permissions.SecurityPermissionFlag SerializationFormatter
    static ::System::Security::Permissions::SecurityPermissionFlag _get_SerializationFormatter();
    // Set static field: static public System.Security.Permissions.SecurityPermissionFlag SerializationFormatter
    static void _set_SerializationFormatter(::System::Security::Permissions::SecurityPermissionFlag value);
    // static field const value: static public System.Security.Permissions.SecurityPermissionFlag ControlDomainPolicy
    static constexpr const int ControlDomainPolicy = 256;
    // Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlDomainPolicy
    static ::System::Security::Permissions::SecurityPermissionFlag _get_ControlDomainPolicy();
    // Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlDomainPolicy
    static void _set_ControlDomainPolicy(::System::Security::Permissions::SecurityPermissionFlag value);
    // static field const value: static public System.Security.Permissions.SecurityPermissionFlag ControlPrincipal
    static constexpr const int ControlPrincipal = 512;
    // Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlPrincipal
    static ::System::Security::Permissions::SecurityPermissionFlag _get_ControlPrincipal();
    // Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlPrincipal
    static void _set_ControlPrincipal(::System::Security::Permissions::SecurityPermissionFlag value);
    // static field const value: static public System.Security.Permissions.SecurityPermissionFlag ControlAppDomain
    static constexpr const int ControlAppDomain = 1024;
    // Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlAppDomain
    static ::System::Security::Permissions::SecurityPermissionFlag _get_ControlAppDomain();
    // Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlAppDomain
    static void _set_ControlAppDomain(::System::Security::Permissions::SecurityPermissionFlag value);
    // static field const value: static public System.Security.Permissions.SecurityPermissionFlag RemotingConfiguration
    static constexpr const int RemotingConfiguration = 2048;
    // Get static field: static public System.Security.Permissions.SecurityPermissionFlag RemotingConfiguration
    static ::System::Security::Permissions::SecurityPermissionFlag _get_RemotingConfiguration();
    // Set static field: static public System.Security.Permissions.SecurityPermissionFlag RemotingConfiguration
    static void _set_RemotingConfiguration(::System::Security::Permissions::SecurityPermissionFlag value);
    // static field const value: static public System.Security.Permissions.SecurityPermissionFlag Infrastructure
    static constexpr const int Infrastructure = 4096;
    // Get static field: static public System.Security.Permissions.SecurityPermissionFlag Infrastructure
    static ::System::Security::Permissions::SecurityPermissionFlag _get_Infrastructure();
    // Set static field: static public System.Security.Permissions.SecurityPermissionFlag Infrastructure
    static void _set_Infrastructure(::System::Security::Permissions::SecurityPermissionFlag value);
    // static field const value: static public System.Security.Permissions.SecurityPermissionFlag BindingRedirects
    static constexpr const int BindingRedirects = 8192;
    // Get static field: static public System.Security.Permissions.SecurityPermissionFlag BindingRedirects
    static ::System::Security::Permissions::SecurityPermissionFlag _get_BindingRedirects();
    // Set static field: static public System.Security.Permissions.SecurityPermissionFlag BindingRedirects
    static void _set_BindingRedirects(::System::Security::Permissions::SecurityPermissionFlag value);
    // static field const value: static public System.Security.Permissions.SecurityPermissionFlag AllFlags
    static constexpr const int AllFlags = 16383;
    // Get static field: static public System.Security.Permissions.SecurityPermissionFlag AllFlags
    static ::System::Security::Permissions::SecurityPermissionFlag _get_AllFlags();
    // Set static field: static public System.Security.Permissions.SecurityPermissionFlag AllFlags
    static void _set_AllFlags(::System::Security::Permissions::SecurityPermissionFlag value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // System.Security.Permissions.SecurityPermissionFlag
  #pragma pack(pop)
  static check_size<sizeof(SecurityPermissionFlag), 0 + sizeof(int)> __System_Security_Permissions_SecurityPermissionFlagSizeCheck;
  static_assert(sizeof(SecurityPermissionFlag) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
