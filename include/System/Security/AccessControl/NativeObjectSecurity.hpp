// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Security.AccessControl.CommonObjectSecurity
#include "System/Security/AccessControl/CommonObjectSecurity.hpp"
// Including type: System.Security.AccessControl.ResourceType
#include "System/Security/AccessControl/ResourceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security::AccessControl
namespace System::Security::AccessControl {
  // Forward declaring type: SecurityInfos
  struct SecurityInfos;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Forward declaring namespace: System::Runtime::InteropServices
namespace System::Runtime::InteropServices {
  // Forward declaring type: SafeHandle
  class SafeHandle;
}
// Completed forward declares
// Type namespace: System.Security.AccessControl
namespace System::Security::AccessControl {
  // Forward declaring type: NativeObjectSecurity
  class NativeObjectSecurity;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Security::AccessControl::NativeObjectSecurity);
DEFINE_IL2CPP_ARG_TYPE(::System::Security::AccessControl::NativeObjectSecurity*, "System.Security.AccessControl", "NativeObjectSecurity");
// Type namespace: System.Security.AccessControl
namespace System::Security::AccessControl {
  // Size: 0x34
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.AccessControl.NativeObjectSecurity
  // [TokenAttribute] Offset: FFFFFFFF
  class NativeObjectSecurity : public ::System::Security::AccessControl::CommonObjectSecurity {
    public:
    // Nested type: ::System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode
    class ExceptionFromErrorCode;
    // Nested type: ::System::Security::AccessControl::NativeObjectSecurity::GetSecurityInfoNativeCall
    class GetSecurityInfoNativeCall;
    // Nested type: ::System::Security::AccessControl::NativeObjectSecurity::$$c__DisplayClass20_0
    class $$c__DisplayClass20_0;
    public:
    // private System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.ExceptionFromErrorCode exception_from_error_code
    // Size: 0x8
    // Offset: 0x28
    ::System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode* exception_from_error_code;
    // Field size check
    static_assert(sizeof(::System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode*) == 0x8);
    // private System.Security.AccessControl.ResourceType resource_type
    // Size: 0x4
    // Offset: 0x30
    ::System::Security::AccessControl::ResourceType resource_type;
    // Field size check
    static_assert(sizeof(::System::Security::AccessControl::ResourceType) == 0x4);
    public:
    // Get instance field reference: private System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.ExceptionFromErrorCode exception_from_error_code
    [[deprecated("Use field access instead!")]] ::System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode*& dyn_exception_from_error_code();
    // Get instance field reference: private System.Security.AccessControl.ResourceType resource_type
    [[deprecated("Use field access instead!")]] ::System::Security::AccessControl::ResourceType& dyn_resource_type();
    // System.Security.AccessControl.ResourceType get_ResourceType()
    // Offset: 0x1BB39D4
    ::System::Security::AccessControl::ResourceType get_ResourceType();
    // protected System.Void .ctor(System.Boolean isContainer, System.Security.AccessControl.ResourceType resourceType, System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.ExceptionFromErrorCode exceptionFromErrorCode, System.Object exceptionContext)
    // Offset: 0x1BB30E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NativeObjectSecurity* New_ctor(bool isContainer, ::System::Security::AccessControl::ResourceType resourceType, ::System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode* exceptionFromErrorCode, ::Il2CppObject* exceptionContext) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NativeObjectSecurity*, creationType>(isContainer, resourceType, exceptionFromErrorCode, exceptionContext)));
    }
    // protected System.Void .ctor(System.Boolean isContainer, System.Security.AccessControl.ResourceType resourceType, System.String name, System.Security.AccessControl.AccessControlSections includeSections)
    // Offset: 0x1BB2724
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NativeObjectSecurity* New_ctor(bool isContainer, ::System::Security::AccessControl::ResourceType resourceType, ::StringW name, ::System::Security::AccessControl::AccessControlSections includeSections) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NativeObjectSecurity*, creationType>(isContainer, resourceType, name, includeSections)));
    }
    // protected System.Void .ctor(System.Boolean isContainer, System.Security.AccessControl.ResourceType resourceType, System.String name, System.Security.AccessControl.AccessControlSections includeSections, System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.ExceptionFromErrorCode exceptionFromErrorCode, System.Object exceptionContext)
    // Offset: 0x1BB3124
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NativeObjectSecurity* New_ctor(bool isContainer, ::System::Security::AccessControl::ResourceType resourceType, ::StringW name, ::System::Security::AccessControl::AccessControlSections includeSections, ::System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode* exceptionFromErrorCode, ::Il2CppObject* exceptionContext) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NativeObjectSecurity*, creationType>(isContainer, resourceType, name, includeSections, exceptionFromErrorCode, exceptionContext)));
    }
    // private System.Void ClearAccessControlSectionsModified()
    // Offset: 0x1BB3274
    void ClearAccessControlSectionsModified();
    // static System.Exception DefaultExceptionFromErrorCode(System.Int32 errorCode, System.String name, System.Runtime.InteropServices.SafeHandle handle, System.Object context)
    // Offset: 0x1BB3348
    static ::System::Exception* DefaultExceptionFromErrorCode(int errorCode, ::StringW name, ::System::Runtime::InteropServices::SafeHandle* handle, ::Il2CppObject* context);
    // private System.Void RaiseExceptionOnFailure(System.Int32 errorCode, System.String name, System.Runtime.InteropServices.SafeHandle handle, System.Object context)
    // Offset: 0x1BB31AC
    void RaiseExceptionOnFailure(int errorCode, ::StringW name, ::System::Runtime::InteropServices::SafeHandle* handle, ::Il2CppObject* context);
    // System.Int32 InternalGet(System.String name, System.Security.AccessControl.AccessControlSections includeSections)
    // Offset: 0x1BB3750
    int InternalGet(::StringW name, ::System::Security::AccessControl::AccessControlSections includeSections);
    // private System.Int32 Win32GetHelper(System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.GetSecurityInfoNativeCall nativeCall, System.Security.AccessControl.AccessControlSections includeSections)
    // Offset: 0x1BB385C
    int Win32GetHelper(::System::Security::AccessControl::NativeObjectSecurity::GetSecurityInfoNativeCall* nativeCall, ::System::Security::AccessControl::AccessControlSections includeSections);
    // private System.String Win32FixName(System.String name)
    // Offset: 0x1BB3F24
    ::StringW Win32FixName(::StringW name);
    // static private System.Int32 GetNamedSecurityInfo(System.String name, System.Security.AccessControl.ResourceType resourceType, System.Security.AccessControl.SecurityInfos securityInfos, out System.IntPtr owner, out System.IntPtr group, out System.IntPtr dacl, out System.IntPtr sacl, out System.IntPtr descriptor)
    // Offset: 0x1BB3FF8
    static int GetNamedSecurityInfo(::StringW name, ::System::Security::AccessControl::ResourceType resourceType, ::System::Security::AccessControl::SecurityInfos securityInfos, ByRef<::System::IntPtr> owner, ByRef<::System::IntPtr> group, ByRef<::System::IntPtr> dacl, ByRef<::System::IntPtr> sacl, ByRef<::System::IntPtr> descriptor);
    // static private System.IntPtr LocalFree(System.IntPtr handle)
    // Offset: 0x1BB3EA4
    static ::System::IntPtr LocalFree(::System::IntPtr handle);
    // static private System.Int32 GetSecurityDescriptorLength(System.IntPtr descriptor)
    // Offset: 0x1BB3D84
    static int GetSecurityDescriptorLength(::System::IntPtr descriptor);
    // static private System.Boolean IsValidSecurityDescriptor(System.IntPtr descriptor)
    // Offset: 0x1BB3CFC
    static bool IsValidSecurityDescriptor(::System::IntPtr descriptor);
  }; // System.Security.AccessControl.NativeObjectSecurity
  #pragma pack(pop)
  static check_size<sizeof(NativeObjectSecurity), 48 + sizeof(::System::Security::AccessControl::ResourceType)> __System_Security_AccessControl_NativeObjectSecuritySizeCheck;
  static_assert(sizeof(NativeObjectSecurity) == 0x34);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Security::AccessControl::NativeObjectSecurity::get_ResourceType
// Il2CppName: get_ResourceType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::AccessControl::ResourceType (System::Security::AccessControl::NativeObjectSecurity::*)()>(&System::Security::AccessControl::NativeObjectSecurity::get_ResourceType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::NativeObjectSecurity*), "get_ResourceType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::NativeObjectSecurity::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::AccessControl::NativeObjectSecurity::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::AccessControl::NativeObjectSecurity::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::AccessControl::NativeObjectSecurity::ClearAccessControlSectionsModified
// Il2CppName: ClearAccessControlSectionsModified
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::AccessControl::NativeObjectSecurity::*)()>(&System::Security::AccessControl::NativeObjectSecurity::ClearAccessControlSectionsModified)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::NativeObjectSecurity*), "ClearAccessControlSectionsModified", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::NativeObjectSecurity::DefaultExceptionFromErrorCode
// Il2CppName: DefaultExceptionFromErrorCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (*)(int, ::StringW, ::System::Runtime::InteropServices::SafeHandle*, ::Il2CppObject*)>(&System::Security::AccessControl::NativeObjectSecurity::DefaultExceptionFromErrorCode)> {
  static const MethodInfo* get() {
    static auto* errorCode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* handle = &::il2cpp_utils::GetClassFromName("System.Runtime.InteropServices", "SafeHandle")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::NativeObjectSecurity*), "DefaultExceptionFromErrorCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{errorCode, name, handle, context});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::NativeObjectSecurity::RaiseExceptionOnFailure
// Il2CppName: RaiseExceptionOnFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::AccessControl::NativeObjectSecurity::*)(int, ::StringW, ::System::Runtime::InteropServices::SafeHandle*, ::Il2CppObject*)>(&System::Security::AccessControl::NativeObjectSecurity::RaiseExceptionOnFailure)> {
  static const MethodInfo* get() {
    static auto* errorCode = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* handle = &::il2cpp_utils::GetClassFromName("System.Runtime.InteropServices", "SafeHandle")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::NativeObjectSecurity*), "RaiseExceptionOnFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{errorCode, name, handle, context});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::NativeObjectSecurity::InternalGet
// Il2CppName: InternalGet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Security::AccessControl::NativeObjectSecurity::*)(::StringW, ::System::Security::AccessControl::AccessControlSections)>(&System::Security::AccessControl::NativeObjectSecurity::InternalGet)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* includeSections = &::il2cpp_utils::GetClassFromName("System.Security.AccessControl", "AccessControlSections")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::NativeObjectSecurity*), "InternalGet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, includeSections});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::NativeObjectSecurity::Win32GetHelper
// Il2CppName: Win32GetHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Security::AccessControl::NativeObjectSecurity::*)(::System::Security::AccessControl::NativeObjectSecurity::GetSecurityInfoNativeCall*, ::System::Security::AccessControl::AccessControlSections)>(&System::Security::AccessControl::NativeObjectSecurity::Win32GetHelper)> {
  static const MethodInfo* get() {
    static auto* nativeCall = &::il2cpp_utils::GetClassFromName("System.Security.AccessControl", "NativeObjectSecurity/GetSecurityInfoNativeCall")->byval_arg;
    static auto* includeSections = &::il2cpp_utils::GetClassFromName("System.Security.AccessControl", "AccessControlSections")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::NativeObjectSecurity*), "Win32GetHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nativeCall, includeSections});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::NativeObjectSecurity::Win32FixName
// Il2CppName: Win32FixName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Security::AccessControl::NativeObjectSecurity::*)(::StringW)>(&System::Security::AccessControl::NativeObjectSecurity::Win32FixName)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::NativeObjectSecurity*), "Win32FixName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::NativeObjectSecurity::GetNamedSecurityInfo
// Il2CppName: GetNamedSecurityInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, ::System::Security::AccessControl::ResourceType, ::System::Security::AccessControl::SecurityInfos, ByRef<::System::IntPtr>, ByRef<::System::IntPtr>, ByRef<::System::IntPtr>, ByRef<::System::IntPtr>, ByRef<::System::IntPtr>)>(&System::Security::AccessControl::NativeObjectSecurity::GetNamedSecurityInfo)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* resourceType = &::il2cpp_utils::GetClassFromName("System.Security.AccessControl", "ResourceType")->byval_arg;
    static auto* securityInfos = &::il2cpp_utils::GetClassFromName("System.Security.AccessControl", "SecurityInfos")->byval_arg;
    static auto* owner = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    static auto* group = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    static auto* dacl = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    static auto* sacl = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    static auto* descriptor = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::NativeObjectSecurity*), "GetNamedSecurityInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, resourceType, securityInfos, owner, group, dacl, sacl, descriptor});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::NativeObjectSecurity::LocalFree
// Il2CppName: LocalFree
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)(::System::IntPtr)>(&System::Security::AccessControl::NativeObjectSecurity::LocalFree)> {
  static const MethodInfo* get() {
    static auto* handle = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::NativeObjectSecurity*), "LocalFree", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{handle});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::NativeObjectSecurity::GetSecurityDescriptorLength
// Il2CppName: GetSecurityDescriptorLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&System::Security::AccessControl::NativeObjectSecurity::GetSecurityDescriptorLength)> {
  static const MethodInfo* get() {
    static auto* descriptor = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::NativeObjectSecurity*), "GetSecurityDescriptorLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{descriptor});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::NativeObjectSecurity::IsValidSecurityDescriptor
// Il2CppName: IsValidSecurityDescriptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&System::Security::AccessControl::NativeObjectSecurity::IsValidSecurityDescriptor)> {
  static const MethodInfo* get() {
    static auto* descriptor = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::NativeObjectSecurity*), "IsValidSecurityDescriptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{descriptor});
  }
};
