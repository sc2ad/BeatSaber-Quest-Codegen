// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security::AccessControl
namespace System::Security::AccessControl {
  // Forward declaring type: GenericAce
  class GenericAce;
  // Forward declaring type: AceEnumerator
  class AceEnumerator;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: System.Security.AccessControl
namespace System::Security::AccessControl {
  // Forward declaring type: GenericAcl
  class GenericAcl;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Security::AccessControl::GenericAcl);
DEFINE_IL2CPP_ARG_TYPE(::System::Security::AccessControl::GenericAcl*, "System.Security.AccessControl", "GenericAcl");
// Type namespace: System.Security.AccessControl
namespace System::Security::AccessControl {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.AccessControl.GenericAcl
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 1079124
  class GenericAcl : public ::Il2CppObject/*, public ::System::Collections::ICollection*/ {
    public:
    // Creating interface conversion operator: operator ::System::Collections::ICollection
    operator ::System::Collections::ICollection() noexcept {
      return *reinterpret_cast<::System::Collections::ICollection*>(this);
    }
    // Creating interface conversion operator: i_ICollection
    inline ::System::Collections::ICollection* i_ICollection() noexcept {
      return reinterpret_cast<::System::Collections::ICollection*>(this);
    }
    // Get static field: static public readonly System.Byte AclRevision
    static uint8_t _get_AclRevision();
    // Set static field: static public readonly System.Byte AclRevision
    static void _set_AclRevision(uint8_t value);
    // Get static field: static public readonly System.Byte AclRevisionDS
    static uint8_t _get_AclRevisionDS();
    // Set static field: static public readonly System.Byte AclRevisionDS
    static void _set_AclRevisionDS(uint8_t value);
    // Get static field: static public readonly System.Int32 MaxBinaryLength
    static int _get_MaxBinaryLength();
    // Set static field: static public readonly System.Int32 MaxBinaryLength
    static void _set_MaxBinaryLength(int value);
    // public System.Int32 get_BinaryLength()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_BinaryLength();
    // public System.Int32 get_Count()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_Count();
    // public System.Security.AccessControl.GenericAce get_Item(System.Int32 index)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Security::AccessControl::GenericAce* get_Item(int index);
    // public System.Void set_Item(System.Int32 index, System.Security.AccessControl.GenericAce value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Item(int index, ::System::Security::AccessControl::GenericAce* value);
    // public System.Byte get_Revision()
    // Offset: 0xFFFFFFFFFFFFFFFF
    uint8_t get_Revision();
    // public System.Object get_SyncRoot()
    // Offset: 0x1BB2E84
    ::Il2CppObject* get_SyncRoot();
    // static private System.Void .cctor()
    // Offset: 0x1BB2E10
    static void _cctor();
    // public System.Void CopyTo(System.Security.AccessControl.GenericAce[] array, System.Int32 index)
    // Offset: 0x1BB2E88
    void CopyTo(::ArrayW<::System::Security::AccessControl::GenericAce*> array, int index);
    // private System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)
    // Offset: 0x1BB302C
    void System_Collections_ICollection_CopyTo(::System::Array* array, int index);
    // public System.Void GetBinaryForm(System.Byte[] binaryForm, System.Int32 offset)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void GetBinaryForm(::ArrayW<uint8_t> binaryForm, int offset);
    // public System.Security.AccessControl.AceEnumerator GetEnumerator()
    // Offset: 0x1BB0714
    ::System::Security::AccessControl::AceEnumerator* GetEnumerator();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x1BB30B8
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // protected System.Void .ctor()
    // Offset: 0x1BAF97C
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GenericAcl* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::GenericAcl::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GenericAcl*, creationType>()));
    }
  }; // System.Security.AccessControl.GenericAcl
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Security::AccessControl::GenericAcl::get_BinaryLength
// Il2CppName: get_BinaryLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Security::AccessControl::GenericAcl::*)()>(&System::Security::AccessControl::GenericAcl::get_BinaryLength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::GenericAcl*), "get_BinaryLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::GenericAcl::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Security::AccessControl::GenericAcl::*)()>(&System::Security::AccessControl::GenericAcl::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::GenericAcl*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::GenericAcl::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::AccessControl::GenericAce* (System::Security::AccessControl::GenericAcl::*)(int)>(&System::Security::AccessControl::GenericAcl::get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::GenericAcl*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::GenericAcl::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::AccessControl::GenericAcl::*)(int, ::System::Security::AccessControl::GenericAce*)>(&System::Security::AccessControl::GenericAcl::set_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Security.AccessControl", "GenericAce")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::GenericAcl*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::GenericAcl::get_Revision
// Il2CppName: get_Revision
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (System::Security::AccessControl::GenericAcl::*)()>(&System::Security::AccessControl::GenericAcl::get_Revision)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::GenericAcl*), "get_Revision", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::GenericAcl::get_SyncRoot
// Il2CppName: get_SyncRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Security::AccessControl::GenericAcl::*)()>(&System::Security::AccessControl::GenericAcl::get_SyncRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::GenericAcl*), "get_SyncRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::GenericAcl::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Security::AccessControl::GenericAcl::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::GenericAcl*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::GenericAcl::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::AccessControl::GenericAcl::*)(::ArrayW<::System::Security::AccessControl::GenericAce*>, int)>(&System::Security::AccessControl::GenericAcl::CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Security.AccessControl", "GenericAce"), 1)->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::GenericAcl*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, index});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::GenericAcl::System_Collections_ICollection_CopyTo
// Il2CppName: System.Collections.ICollection.CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::AccessControl::GenericAcl::*)(::System::Array*, int)>(&System::Security::AccessControl::GenericAcl::System_Collections_ICollection_CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::GenericAcl*), "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, index});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::GenericAcl::GetBinaryForm
// Il2CppName: GetBinaryForm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::AccessControl::GenericAcl::*)(::ArrayW<uint8_t>, int)>(&System::Security::AccessControl::GenericAcl::GetBinaryForm)> {
  static const MethodInfo* get() {
    static auto* binaryForm = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::GenericAcl*), "GetBinaryForm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binaryForm, offset});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::GenericAcl::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::AccessControl::AceEnumerator* (System::Security::AccessControl::GenericAcl::*)()>(&System::Security::AccessControl::GenericAcl::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::GenericAcl*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::GenericAcl::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (System::Security::AccessControl::GenericAcl::*)()>(&System::Security::AccessControl::GenericAcl::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::GenericAcl*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::GenericAcl::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
