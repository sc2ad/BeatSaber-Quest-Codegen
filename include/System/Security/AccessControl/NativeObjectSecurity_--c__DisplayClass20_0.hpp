// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Security.AccessControl.NativeObjectSecurity
#include "System/Security/AccessControl/NativeObjectSecurity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Security::AccessControl
namespace System::Security::AccessControl {
  // Forward declaring type: SecurityInfos
  struct SecurityInfos;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Security::AccessControl::NativeObjectSecurity::$$c__DisplayClass20_0);
DEFINE_IL2CPP_ARG_TYPE(::System::Security::AccessControl::NativeObjectSecurity::$$c__DisplayClass20_0*, "System.Security.AccessControl", "NativeObjectSecurity/<>c__DisplayClass20_0");
// Type namespace: System.Security.AccessControl
namespace System::Security::AccessControl {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.<>c__DisplayClass20_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: 107916C
  class NativeObjectSecurity::$$c__DisplayClass20_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Security.AccessControl.NativeObjectSecurity <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::System::Security::AccessControl::NativeObjectSecurity* $$4__this;
    // Field size check
    static_assert(sizeof(::System::Security::AccessControl::NativeObjectSecurity*) == 0x8);
    // public System.String name
    // Size: 0x8
    // Offset: 0x18
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.Security.AccessControl.NativeObjectSecurity <>4__this
    [[deprecated("Use field access instead!")]] ::System::Security::AccessControl::NativeObjectSecurity*& dyn_$$4__this();
    // Get instance field reference: public System.String name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_name();
    // System.Int32 <InternalGet>b__0(System.Security.AccessControl.SecurityInfos securityInfos, out System.IntPtr owner, out System.IntPtr group, out System.IntPtr dacl, out System.IntPtr sacl, out System.IntPtr descriptor)
    // Offset: 0x1BB40D8
    int $InternalGet$b__0(::System::Security::AccessControl::SecurityInfos securityInfos, ByRef<::System::IntPtr> owner, ByRef<::System::IntPtr> group, ByRef<::System::IntPtr> dacl, ByRef<::System::IntPtr> sacl, ByRef<::System::IntPtr> descriptor);
    // public System.Void .ctor()
    // Offset: 0x1BB3844
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NativeObjectSecurity::$$c__DisplayClass20_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::NativeObjectSecurity::$$c__DisplayClass20_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NativeObjectSecurity::$$c__DisplayClass20_0*, creationType>()));
    }
  }; // System.Security.AccessControl.NativeObjectSecurity/System.Security.AccessControl.<>c__DisplayClass20_0
  #pragma pack(pop)
  static check_size<sizeof(NativeObjectSecurity::$$c__DisplayClass20_0), 24 + sizeof(::StringW)> __System_Security_AccessControl_NativeObjectSecurity_$$c__DisplayClass20_0SizeCheck;
  static_assert(sizeof(NativeObjectSecurity::$$c__DisplayClass20_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Security::AccessControl::NativeObjectSecurity::$$c__DisplayClass20_0::$InternalGet$b__0
// Il2CppName: <InternalGet>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Security::AccessControl::NativeObjectSecurity::$$c__DisplayClass20_0::*)(::System::Security::AccessControl::SecurityInfos, ByRef<::System::IntPtr>, ByRef<::System::IntPtr>, ByRef<::System::IntPtr>, ByRef<::System::IntPtr>, ByRef<::System::IntPtr>)>(&System::Security::AccessControl::NativeObjectSecurity::$$c__DisplayClass20_0::$InternalGet$b__0)> {
  static const MethodInfo* get() {
    static auto* securityInfos = &::il2cpp_utils::GetClassFromName("System.Security.AccessControl", "SecurityInfos")->byval_arg;
    static auto* owner = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    static auto* group = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    static auto* dacl = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    static auto* sacl = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    static auto* descriptor = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::NativeObjectSecurity::$$c__DisplayClass20_0*), "<InternalGet>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{securityInfos, owner, group, dacl, sacl, descriptor});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::NativeObjectSecurity::$$c__DisplayClass20_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
