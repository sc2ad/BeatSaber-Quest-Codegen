// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Security.AccessControl.GenericAcl
#include "System/Security/AccessControl/GenericAcl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System::Security::AccessControl
namespace System::Security::AccessControl {
  // Forward declaring type: GenericAce
  class GenericAce;
}
// Completed forward declares
// Type namespace: System.Security.AccessControl
namespace System::Security::AccessControl {
  // Forward declaring type: RawAcl
  class RawAcl;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Security::AccessControl::RawAcl);
DEFINE_IL2CPP_ARG_TYPE(::System::Security::AccessControl::RawAcl*, "System.Security.AccessControl", "RawAcl");
// Type namespace: System.Security.AccessControl
namespace System::Security::AccessControl {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Security.AccessControl.RawAcl
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: 107919C
  class RawAcl : public ::System::Security::AccessControl::GenericAcl {
    public:
    public:
    // private System.Byte revision
    // Size: 0x1
    // Offset: 0x10
    uint8_t revision;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: revision and: list
    char __padding0[0x7] = {};
    // private System.Collections.Generic.List`1<System.Security.AccessControl.GenericAce> list
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::System::Security::AccessControl::GenericAce*>* list;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::System::Security::AccessControl::GenericAce*>*) == 0x8);
    public:
    // Get instance field reference: private System.Byte revision
    [[deprecated("Use field access instead!")]] uint8_t& dyn_revision();
    // Get instance field reference: private System.Collections.Generic.List`1<System.Security.AccessControl.GenericAce> list
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Security::AccessControl::GenericAce*>*& dyn_list();
    // public System.Void .ctor(System.Byte revision, System.Int32 capacity)
    // Offset: 0x1BAF984
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RawAcl* New_ctor(uint8_t revision, int capacity) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawAcl::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RawAcl*, creationType>(revision, capacity)));
    }
    // public System.Void .ctor(System.Byte[] binaryForm, System.Int32 offset)
    // Offset: 0x1BAFA30
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RawAcl* New_ctor(::ArrayW<uint8_t> binaryForm, int offset) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::AccessControl::RawAcl::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RawAcl*, creationType>(binaryForm, offset)));
    }
    // public System.Void InsertAce(System.Int32 index, System.Security.AccessControl.GenericAce ace)
    // Offset: 0x1BB1604
    void InsertAce(int index, ::System::Security::AccessControl::GenericAce* ace);
    // public System.Void RemoveAce(System.Int32 index)
    // Offset: 0x1BB0FEC
    void RemoveAce(int index);
    // private System.Void WriteUShort(System.UInt16 val, System.Byte[] buffer, System.Int32 offset)
    // Offset: 0x1BB51AC
    void WriteUShort(uint16_t val, ::ArrayW<uint8_t> buffer, int offset);
    // private System.UInt16 ReadUShort(System.Byte[] buffer, System.Int32 offset)
    // Offset: 0x1BB4CB8
    uint16_t ReadUShort(::ArrayW<uint8_t> buffer, int offset);
    // public override System.Int32 get_BinaryLength()
    // Offset: 0x1BB4D04
    // Implemented from: System.Security.AccessControl.GenericAcl
    // Base method: System.Int32 GenericAcl::get_BinaryLength()
    int get_BinaryLength();
    // public override System.Int32 get_Count()
    // Offset: 0x1BB4E0C
    // Implemented from: System.Security.AccessControl.GenericAcl
    // Base method: System.Int32 GenericAcl::get_Count()
    int get_Count();
    // public override System.Security.AccessControl.GenericAce get_Item(System.Int32 index)
    // Offset: 0x1BB4E5C
    // Implemented from: System.Security.AccessControl.GenericAcl
    // Base method: System.Security.AccessControl.GenericAce GenericAcl::get_Item(System.Int32 index)
    ::System::Security::AccessControl::GenericAce* get_Item(int index);
    // public override System.Void set_Item(System.Int32 index, System.Security.AccessControl.GenericAce value)
    // Offset: 0x1BB4ED4
    // Implemented from: System.Security.AccessControl.GenericAcl
    // Base method: System.Void GenericAcl::set_Item(System.Int32 index, System.Security.AccessControl.GenericAce value)
    void set_Item(int index, ::System::Security::AccessControl::GenericAce* value);
    // public override System.Byte get_Revision()
    // Offset: 0x1BB4F44
    // Implemented from: System.Security.AccessControl.GenericAcl
    // Base method: System.Byte GenericAcl::get_Revision()
    uint8_t get_Revision();
    // public override System.Void GetBinaryForm(System.Byte[] binaryForm, System.Int32 offset)
    // Offset: 0x1BB4F4C
    // Implemented from: System.Security.AccessControl.GenericAcl
    // Base method: System.Void GenericAcl::GetBinaryForm(System.Byte[] binaryForm, System.Int32 offset)
    void GetBinaryForm(::ArrayW<uint8_t> binaryForm, int offset);
  }; // System.Security.AccessControl.RawAcl
  #pragma pack(pop)
  static check_size<sizeof(RawAcl), 24 + sizeof(::System::Collections::Generic::List_1<::System::Security::AccessControl::GenericAce*>*)> __System_Security_AccessControl_RawAclSizeCheck;
  static_assert(sizeof(RawAcl) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Security::AccessControl::RawAcl::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::AccessControl::RawAcl::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Security::AccessControl::RawAcl::InsertAce
// Il2CppName: InsertAce
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::AccessControl::RawAcl::*)(int, ::System::Security::AccessControl::GenericAce*)>(&System::Security::AccessControl::RawAcl::InsertAce)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ace = &::il2cpp_utils::GetClassFromName("System.Security.AccessControl", "GenericAce")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::RawAcl*), "InsertAce", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, ace});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::RawAcl::RemoveAce
// Il2CppName: RemoveAce
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::AccessControl::RawAcl::*)(int)>(&System::Security::AccessControl::RawAcl::RemoveAce)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::RawAcl*), "RemoveAce", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::RawAcl::WriteUShort
// Il2CppName: WriteUShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::AccessControl::RawAcl::*)(uint16_t, ::ArrayW<uint8_t>, int)>(&System::Security::AccessControl::RawAcl::WriteUShort)> {
  static const MethodInfo* get() {
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::RawAcl*), "WriteUShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{val, buffer, offset});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::RawAcl::ReadUShort
// Il2CppName: ReadUShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (System::Security::AccessControl::RawAcl::*)(::ArrayW<uint8_t>, int)>(&System::Security::AccessControl::RawAcl::ReadUShort)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::RawAcl*), "ReadUShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, offset});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::RawAcl::get_BinaryLength
// Il2CppName: get_BinaryLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Security::AccessControl::RawAcl::*)()>(&System::Security::AccessControl::RawAcl::get_BinaryLength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::RawAcl*), "get_BinaryLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::RawAcl::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Security::AccessControl::RawAcl::*)()>(&System::Security::AccessControl::RawAcl::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::RawAcl*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::RawAcl::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Security::AccessControl::GenericAce* (System::Security::AccessControl::RawAcl::*)(int)>(&System::Security::AccessControl::RawAcl::get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::RawAcl*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::RawAcl::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::AccessControl::RawAcl::*)(int, ::System::Security::AccessControl::GenericAce*)>(&System::Security::AccessControl::RawAcl::set_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System.Security.AccessControl", "GenericAce")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::RawAcl*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::RawAcl::get_Revision
// Il2CppName: get_Revision
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (System::Security::AccessControl::RawAcl::*)()>(&System::Security::AccessControl::RawAcl::get_Revision)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::RawAcl*), "get_Revision", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Security::AccessControl::RawAcl::GetBinaryForm
// Il2CppName: GetBinaryForm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Security::AccessControl::RawAcl::*)(::ArrayW<uint8_t>, int)>(&System::Security::AccessControl::RawAcl::GetBinaryForm)> {
  static const MethodInfo* get() {
    static auto* binaryForm = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Security::AccessControl::RawAcl*), "GetBinaryForm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{binaryForm, offset});
  }
};
