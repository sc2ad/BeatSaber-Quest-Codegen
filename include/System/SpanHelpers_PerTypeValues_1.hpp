// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.SpanHelpers
#include "System/SpanHelpers.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::System::SpanHelpers::PerTypeValues_1, "System", "SpanHelpers/PerTypeValues`1");
// Type namespace: System
namespace System {
  // WARNING Size may be invalid!
  // Autogenerated type: System.SpanHelpers/System.PerTypeValues`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename T>
  class SpanHelpers::PerTypeValues_1 : public ::Il2CppObject {
    public:
    // Autogenerated static field getter
    // Get static field: static public readonly System.Boolean IsReferenceOrContainsReferences
    static bool _get_IsReferenceOrContainsReferences() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::PerTypeValues_1::_get_IsReferenceOrContainsReferences");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<SpanHelpers::PerTypeValues_1<T>*>::get(), "IsReferenceOrContainsReferences"));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.Boolean IsReferenceOrContainsReferences
    static void _set_IsReferenceOrContainsReferences(bool value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::PerTypeValues_1::_set_IsReferenceOrContainsReferences");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<SpanHelpers::PerTypeValues_1<T>*>::get(), "IsReferenceOrContainsReferences", value));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly T[] EmptyArray
    static ::ArrayW<T> _get_EmptyArray() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::PerTypeValues_1::_get_EmptyArray");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<T>>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<SpanHelpers::PerTypeValues_1<T>*>::get(), "EmptyArray"));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly T[] EmptyArray
    static void _set_EmptyArray(::ArrayW<T> value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::PerTypeValues_1::_set_EmptyArray");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<SpanHelpers::PerTypeValues_1<T>*>::get(), "EmptyArray", value));
    }
    // Autogenerated static field getter
    // Get static field: static public readonly System.IntPtr ArrayAdjustment
    static ::System::IntPtr _get_ArrayAdjustment() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::PerTypeValues_1::_get_ArrayAdjustment");
      return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<SpanHelpers::PerTypeValues_1<T>*>::get(), "ArrayAdjustment"));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly System.IntPtr ArrayAdjustment
    static void _set_ArrayAdjustment(::System::IntPtr value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::PerTypeValues_1::_set_ArrayAdjustment");
      THROW_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<SpanHelpers::PerTypeValues_1<T>*>::get(), "ArrayAdjustment", value));
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::PerTypeValues_1::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<SpanHelpers::PerTypeValues_1<T>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static private System.IntPtr MeasureArrayAdjustment()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static ::System::IntPtr MeasureArrayAdjustment() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::SpanHelpers::PerTypeValues_1::MeasureArrayAdjustment");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<SpanHelpers::PerTypeValues_1<T>*>::get(), "MeasureArrayAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
  }; // System.SpanHelpers/System.PerTypeValues`1
  // Could not write size check! Type: System.SpanHelpers/System.PerTypeValues`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
