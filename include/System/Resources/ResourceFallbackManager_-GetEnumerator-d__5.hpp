// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Resources.ResourceFallbackManager
#include "System/Resources/ResourceFallbackManager.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: CultureInfo
  class CultureInfo;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Resources::ResourceFallbackManager::$GetEnumerator$d__5);
DEFINE_IL2CPP_ARG_TYPE(::System::Resources::ResourceFallbackManager::$GetEnumerator$d__5*, "System.Resources", "ResourceFallbackManager/<GetEnumerator>d__5");
// Type namespace: System.Resources
namespace System::Resources {
  // Size: 0x31
  #pragma pack(push, 1)
  // Autogenerated type: System.Resources.ResourceFallbackManager/System.Resources.<GetEnumerator>d__5
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: 8F00D8
  class ResourceFallbackManager::$GetEnumerator$d__5 : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerator_1<::System::Globalization::CultureInfo*>*/ {
    public:
    public:
    // private System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x10
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: $$1__state and: $$2__current
    char __padding0[0x4] = {};
    // private System.Globalization.CultureInfo <>2__current
    // Size: 0x8
    // Offset: 0x18
    ::System::Globalization::CultureInfo* $$2__current;
    // Field size check
    static_assert(sizeof(::System::Globalization::CultureInfo*) == 0x8);
    // public System.Resources.ResourceFallbackManager <>4__this
    // Size: 0x8
    // Offset: 0x20
    ::System::Resources::ResourceFallbackManager* $$4__this;
    // Field size check
    static_assert(sizeof(::System::Resources::ResourceFallbackManager*) == 0x8);
    // private System.Globalization.CultureInfo <currentCulture>5__1
    // Size: 0x8
    // Offset: 0x28
    ::System::Globalization::CultureInfo* $currentCulture$5__1;
    // Field size check
    static_assert(sizeof(::System::Globalization::CultureInfo*) == 0x8);
    // private System.Boolean <reachedNeutralResourcesCulture>5__2
    // Size: 0x1
    // Offset: 0x30
    bool $reachedNeutralResourcesCulture$5__2;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<::System::Globalization::CultureInfo*>
    operator ::System::Collections::Generic::IEnumerator_1<::System::Globalization::CultureInfo*>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::System::Globalization::CultureInfo*>*>(this);
    }
    // Get instance field reference: private System.Int32 <>1__state
    [[deprecated("Use field access instead!")]] int& dyn_$$1__state();
    // Get instance field reference: private System.Globalization.CultureInfo <>2__current
    [[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& dyn_$$2__current();
    // Get instance field reference: public System.Resources.ResourceFallbackManager <>4__this
    [[deprecated("Use field access instead!")]] ::System::Resources::ResourceFallbackManager*& dyn_$$4__this();
    // Get instance field reference: private System.Globalization.CultureInfo <currentCulture>5__1
    [[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& dyn_$currentCulture$5__1();
    // Get instance field reference: private System.Boolean <reachedNeutralResourcesCulture>5__2
    [[deprecated("Use field access instead!")]] bool& dyn_$reachedNeutralResourcesCulture$5__2();
    // private System.Globalization.CultureInfo System.Collections.Generic.IEnumerator<System.Globalization.CultureInfo>.get_Current()
    // Offset: 0x13F62A0
    ::System::Globalization::CultureInfo* System_Collections_Generic_IEnumerator$System_Globalization_CultureInfo$_get_Current();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0x13F6308
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
    // public System.Void .ctor(System.Int32 <>1__state)
    // Offset: 0x13F608C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ResourceFallbackManager::$GetEnumerator$d__5* New_ctor(int $$1__state) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ResourceFallbackManager::$GetEnumerator$d__5*, creationType>($$1__state)));
    }
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0x13F60B8
    void System_IDisposable_Dispose();
    // private System.Boolean MoveNext()
    // Offset: 0x13F60BC
    bool MoveNext();
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0x13F62A8
    void System_Collections_IEnumerator_Reset();
  }; // System.Resources.ResourceFallbackManager/System.Resources.<GetEnumerator>d__5
  #pragma pack(pop)
  static check_size<sizeof(ResourceFallbackManager::$GetEnumerator$d__5), 48 + sizeof(bool)> __System_Resources_ResourceFallbackManager_$GetEnumerator$d__5SizeCheck;
  static_assert(sizeof(ResourceFallbackManager::$GetEnumerator$d__5) == 0x31);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::System_Collections_Generic_IEnumerator$System_Globalization_CultureInfo$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Globalization.CultureInfo>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Globalization::CultureInfo* (System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::*)()>(&System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::System_Collections_Generic_IEnumerator$System_Globalization_CultureInfo$_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceFallbackManager::$GetEnumerator$d__5*), "System.Collections.Generic.IEnumerator<System.Globalization.CultureInfo>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::*)()>(&System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::System_Collections_IEnumerator_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceFallbackManager::$GetEnumerator$d__5*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::*)()>(&System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::System_IDisposable_Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceFallbackManager::$GetEnumerator$d__5*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::*)()>(&System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceFallbackManager::$GetEnumerator$d__5*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::*)()>(&System::Resources::ResourceFallbackManager::$GetEnumerator$d__5::System_Collections_IEnumerator_Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Resources::ResourceFallbackManager::$GetEnumerator$d__5*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
