// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Diagnostics.Tracing.EventSource
#include "System/Diagnostics/Tracing/EventSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Buffers
namespace System::Buffers {
}
// Completed forward declares
// Type namespace: System.Buffers
namespace System::Buffers {
  // Forward declaring type: ArrayPoolEventSource
  class ArrayPoolEventSource;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Buffers::ArrayPoolEventSource);
DEFINE_IL2CPP_ARG_TYPE(::System::Buffers::ArrayPoolEventSource*, "System.Buffers", "ArrayPoolEventSource");
// Type namespace: System.Buffers
namespace System::Buffers {
  // Size: 0xD0
  #pragma pack(push, 1)
  // Autogenerated type: System.Buffers.ArrayPoolEventSource
  // [TokenAttribute] Offset: FFFFFFFF
  // [EventSourceAttribute] Offset: 8FF9E0
  class ArrayPoolEventSource : public ::System::Diagnostics::Tracing::EventSource {
    public:
    // Nested type: ::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason
    struct BufferAllocatedReason;
    // Get static field: static readonly System.Buffers.ArrayPoolEventSource Log
    static ::System::Buffers::ArrayPoolEventSource* _get_Log();
    // Set static field: static readonly System.Buffers.ArrayPoolEventSource Log
    static void _set_Log(::System::Buffers::ArrayPoolEventSource* value);
    // public System.Void .ctor()
    // Offset: 0x11C98FC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ArrayPoolEventSource* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ArrayPoolEventSource*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x11C9964
    static void _cctor();
    // System.Void BufferRented(System.Int32 bufferId, System.Int32 bufferSize, System.Int32 poolId, System.Int32 bucketId)
    // Offset: 0x11C9668
    void BufferRented(int bufferId, int bufferSize, int poolId, int bucketId);
    // System.Void BufferAllocated(System.Int32 bufferId, System.Int32 bufferSize, System.Int32 poolId, System.Int32 bucketId, System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason reason)
    // Offset: 0x11C9798
    void BufferAllocated(int bufferId, int bufferSize, int poolId, int bucketId, ::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason reason);
    // System.Void BufferReturned(System.Int32 bufferId, System.Int32 bufferSize, System.Int32 poolId)
    // Offset: 0x11C98E4
    void BufferReturned(int bufferId, int bufferSize, int poolId);
  }; // System.Buffers.ArrayPoolEventSource
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Buffers::ArrayPoolEventSource::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Buffers::ArrayPoolEventSource::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Buffers::ArrayPoolEventSource::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::ArrayPoolEventSource*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Buffers::ArrayPoolEventSource::BufferRented
// Il2CppName: BufferRented
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Buffers::ArrayPoolEventSource::*)(int, int, int, int)>(&System::Buffers::ArrayPoolEventSource::BufferRented)> {
  static const MethodInfo* get() {
    static auto* bufferId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bufferSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* poolId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bucketId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::ArrayPoolEventSource*), "BufferRented", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bufferId, bufferSize, poolId, bucketId});
  }
};
// Writing MetadataGetter for method: System::Buffers::ArrayPoolEventSource::BufferAllocated
// Il2CppName: BufferAllocated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Buffers::ArrayPoolEventSource::*)(int, int, int, int, ::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason)>(&System::Buffers::ArrayPoolEventSource::BufferAllocated)> {
  static const MethodInfo* get() {
    static auto* bufferId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bufferSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* poolId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bucketId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* reason = &::il2cpp_utils::GetClassFromName("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::ArrayPoolEventSource*), "BufferAllocated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bufferId, bufferSize, poolId, bucketId, reason});
  }
};
// Writing MetadataGetter for method: System::Buffers::ArrayPoolEventSource::BufferReturned
// Il2CppName: BufferReturned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Buffers::ArrayPoolEventSource::*)(int, int, int)>(&System::Buffers::ArrayPoolEventSource::BufferReturned)> {
  static const MethodInfo* get() {
    static auto* bufferId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bufferSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* poolId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Buffers::ArrayPoolEventSource*), "BufferReturned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bufferId, bufferSize, poolId});
  }
};
