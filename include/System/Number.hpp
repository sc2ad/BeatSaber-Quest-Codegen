// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Decimal
  struct Decimal;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: NumberFormatInfo
  class NumberFormatInfo;
  // Forward declaring type: NumberStyles
  struct NumberStyles;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Forward declaring type: Number
  class Number;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Number);
DEFINE_IL2CPP_ARG_TYPE(::System::Number*, "System", "Number");
// Type namespace: System
namespace System {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Number
  // [TokenAttribute] Offset: FFFFFFFF
  // [FriendAccessAllowedAttribute] Offset: 1038574
  class Number : public ::Il2CppObject {
    public:
    // Nested type: ::System::Number::NumberBuffer
    struct NumberBuffer;
    // static public System.Boolean NumberBufferToDecimal(System.Byte* number, ref System.Decimal value)
    // Offset: 0x1BA7B30
    static bool NumberBufferToDecimal(uint8_t* number, ByRef<::System::Decimal> value);
    // static System.Boolean NumberBufferToDouble(System.Byte* number, ref System.Double value)
    // Offset: 0x1BA7B34
    static bool NumberBufferToDouble(uint8_t* number, ByRef<double> value);
    // static public System.String FormatDecimal(System.Decimal value, System.String format, System.Globalization.NumberFormatInfo info)
    // Offset: 0x1BA7B38
    static ::StringW FormatDecimal(::System::Decimal value, ::StringW format, ::System::Globalization::NumberFormatInfo* info);
    // static public System.String FormatDouble(System.Double value, System.String format, System.Globalization.NumberFormatInfo info)
    // Offset: 0x1BA7BC8
    static ::StringW FormatDouble(double value, ::StringW format, ::System::Globalization::NumberFormatInfo* info);
    // static public System.String FormatInt32(System.Int32 value, System.String format, System.Globalization.NumberFormatInfo info)
    // Offset: 0x1B9F664
    static ::StringW FormatInt32(int value, ::StringW format, ::System::Globalization::NumberFormatInfo* info);
    // static public System.String FormatUInt32(System.UInt32 value, System.String format, System.Globalization.NumberFormatInfo info)
    // Offset: 0x1B9F7F8
    static ::StringW FormatUInt32(uint value, ::StringW format, ::System::Globalization::NumberFormatInfo* info);
    // static public System.String FormatInt64(System.Int64 value, System.String format, System.Globalization.NumberFormatInfo info)
    // Offset: 0x1BA115C
    static ::StringW FormatInt64(int64_t value, ::StringW format, ::System::Globalization::NumberFormatInfo* info);
    // static public System.String FormatUInt64(System.UInt64 value, System.String format, System.Globalization.NumberFormatInfo info)
    // Offset: 0x1BA7C50
    static ::StringW FormatUInt64(uint64_t value, ::StringW format, ::System::Globalization::NumberFormatInfo* info);
    // static public System.String FormatSingle(System.Single value, System.String format, System.Globalization.NumberFormatInfo info)
    // Offset: 0x1BA7CD0
    static ::StringW FormatSingle(float value, ::StringW format, ::System::Globalization::NumberFormatInfo* info);
    // static private System.Boolean HexNumberToInt32(ref System.Number/System.NumberBuffer number, ref System.Int32 value)
    // Offset: 0x1BA7D58
    static bool HexNumberToInt32(ByRef<::System::Number::NumberBuffer> number, ByRef<int> value);
    // static private System.Boolean HexNumberToInt64(ref System.Number/System.NumberBuffer number, ref System.Int64 value)
    // Offset: 0x1BA7E24
    static bool HexNumberToInt64(ByRef<::System::Number::NumberBuffer> number, ByRef<int64_t> value);
    // static private System.Boolean HexNumberToUInt32(ref System.Number/System.NumberBuffer number, ref System.UInt32 value)
    // Offset: 0x1BA7D8C
    static bool HexNumberToUInt32(ByRef<::System::Number::NumberBuffer> number, ByRef<uint> value);
    // static private System.Boolean HexNumberToUInt64(ref System.Number/System.NumberBuffer number, ref System.UInt64 value)
    // Offset: 0x1BA7E58
    static bool HexNumberToUInt64(ByRef<::System::Number::NumberBuffer> number, ByRef<uint64_t> value);
    // static private System.Boolean IsWhite(System.Char ch)
    // Offset: 0x1BA7EF4
    static bool IsWhite(::Il2CppChar ch);
    // static private System.Boolean NumberToInt32(ref System.Number/System.NumberBuffer number, ref System.Int32 value)
    // Offset: 0x1BA7F1C
    static bool NumberToInt32(ByRef<::System::Number::NumberBuffer> number, ByRef<int> value);
    // static private System.Boolean NumberToInt64(ref System.Number/System.NumberBuffer number, ref System.Int64 value)
    // Offset: 0x1BA7FA8
    static bool NumberToInt64(ByRef<::System::Number::NumberBuffer> number, ByRef<int64_t> value);
    // static private System.Boolean NumberToUInt32(ref System.Number/System.NumberBuffer number, ref System.UInt32 value)
    // Offset: 0x1BA802C
    static bool NumberToUInt32(ByRef<::System::Number::NumberBuffer> number, ByRef<uint> value);
    // static private System.Boolean NumberToUInt64(ref System.Number/System.NumberBuffer number, ref System.UInt64 value)
    // Offset: 0x1BA80B0
    static bool NumberToUInt64(ByRef<::System::Number::NumberBuffer> number, ByRef<uint64_t> value);
    // static private System.Char* MatchChars(System.Char* p, System.String str)
    // Offset: 0x1BA8134
    static ::Il2CppChar* MatchChars(::Il2CppChar* p, ::StringW str);
    // static private System.Char* MatchChars(System.Char* p, System.Char* str)
    // Offset: 0x1BA81A8
    static ::Il2CppChar* MatchChars(::Il2CppChar* p, ::Il2CppChar* str);
    // static System.Decimal ParseDecimal(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt)
    // Offset: 0x1BA81F4
    static ::System::Decimal ParseDecimal(::StringW value, ::System::Globalization::NumberStyles options, ::System::Globalization::NumberFormatInfo* numfmt);
    // static System.Double ParseDouble(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt)
    // Offset: 0x1BA8494
    static double ParseDouble(::StringW value, ::System::Globalization::NumberStyles options, ::System::Globalization::NumberFormatInfo* numfmt);
    // static System.Int32 ParseInt32(System.String s, System.Globalization.NumberStyles style, System.Globalization.NumberFormatInfo info)
    // Offset: 0x1B9FA7C
    static int ParseInt32(::StringW s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info);
    // static System.Int64 ParseInt64(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt)
    // Offset: 0x1BA12AC
    static int64_t ParseInt64(::StringW value, ::System::Globalization::NumberStyles options, ::System::Globalization::NumberFormatInfo* numfmt);
    // static private System.Boolean ParseNumber(ref System.Char* str, System.Globalization.NumberStyles options, ref System.Number/System.NumberBuffer number, System.Text.StringBuilder sb, System.Globalization.NumberFormatInfo numfmt, System.Boolean parseDecimal)
    // Offset: 0x1BA86F4
    static bool ParseNumber(ByRef<::Il2CppChar*> str, ::System::Globalization::NumberStyles options, ByRef<::System::Number::NumberBuffer> number, ::System::Text::StringBuilder* sb, ::System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal);
    // static System.Single ParseSingle(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt)
    // Offset: 0x1BA8C1C
    static float ParseSingle(::StringW value, ::System::Globalization::NumberStyles options, ::System::Globalization::NumberFormatInfo* numfmt);
    // static System.UInt32 ParseUInt32(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt)
    // Offset: 0x1BA8E84
    static uint ParseUInt32(::StringW value, ::System::Globalization::NumberStyles options, ::System::Globalization::NumberFormatInfo* numfmt);
    // static System.UInt64 ParseUInt64(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt)
    // Offset: 0x1BA8FD0
    static uint64_t ParseUInt64(::StringW value, ::System::Globalization::NumberStyles options, ::System::Globalization::NumberFormatInfo* numfmt);
    // static private System.Void StringToNumber(System.String str, System.Globalization.NumberStyles options, ref System.Number/System.NumberBuffer number, System.Globalization.NumberFormatInfo info, System.Boolean parseDecimal)
    // Offset: 0x1BA833C
    static void StringToNumber(::StringW str, ::System::Globalization::NumberStyles options, ByRef<::System::Number::NumberBuffer> number, ::System::Globalization::NumberFormatInfo* info, bool parseDecimal);
    // static private System.Boolean TrailingZeros(System.String s, System.Int32 index)
    // Offset: 0x1BA911C
    static bool TrailingZeros(::StringW s, int index);
    // static System.Boolean TryParseDecimal(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt, out System.Decimal result)
    // Offset: 0x1BA9184
    static bool TryParseDecimal(::StringW value, ::System::Globalization::NumberStyles options, ::System::Globalization::NumberFormatInfo* numfmt, ByRef<::System::Decimal> result);
    // static System.Boolean TryParseDouble(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt, out System.Double result)
    // Offset: 0x1BA9290
    static bool TryParseDouble(::StringW value, ::System::Globalization::NumberStyles options, ::System::Globalization::NumberFormatInfo* numfmt, ByRef<double> result);
    // static System.Boolean TryParseInt32(System.String s, System.Globalization.NumberStyles style, System.Globalization.NumberFormatInfo info, out System.Int32 result)
    // Offset: 0x1B9FCB0
    static bool TryParseInt32(::StringW s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info, ByRef<int> result);
    // static System.Boolean TryParseInt64(System.String s, System.Globalization.NumberStyles style, System.Globalization.NumberFormatInfo info, out System.Int64 result)
    // Offset: 0x1BA14D4
    static bool TryParseInt64(::StringW s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info, ByRef<int64_t> result);
    // static System.Boolean TryParseSingle(System.String value, System.Globalization.NumberStyles options, System.Globalization.NumberFormatInfo numfmt, out System.Single result)
    // Offset: 0x1BA939C
    static bool TryParseSingle(::StringW value, ::System::Globalization::NumberStyles options, ::System::Globalization::NumberFormatInfo* numfmt, ByRef<float> result);
    // static System.Boolean TryParseUInt32(System.String s, System.Globalization.NumberStyles style, System.Globalization.NumberFormatInfo info, out System.UInt32 result)
    // Offset: 0x1BA94E0
    static bool TryParseUInt32(::StringW s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info, ByRef<uint> result);
    // static System.Boolean TryParseUInt64(System.String s, System.Globalization.NumberStyles style, System.Globalization.NumberFormatInfo info, out System.UInt64 result)
    // Offset: 0x1BA95FC
    static bool TryParseUInt64(::StringW s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info, ByRef<uint64_t> result);
    // static System.Boolean TryStringToNumber(System.String str, System.Globalization.NumberStyles options, ref System.Number/System.NumberBuffer number, System.Globalization.NumberFormatInfo numfmt, System.Boolean parseDecimal)
    // Offset: 0x1BA86E0
    static bool TryStringToNumber(::StringW str, ::System::Globalization::NumberStyles options, ByRef<::System::Number::NumberBuffer> number, ::System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal);
    // static System.Boolean TryStringToNumber(System.String str, System.Globalization.NumberStyles options, ref System.Number/System.NumberBuffer number, System.Text.StringBuilder sb, System.Globalization.NumberFormatInfo numfmt, System.Boolean parseDecimal)
    // Offset: 0x1BA9718
    static bool TryStringToNumber(::StringW str, ::System::Globalization::NumberStyles options, ByRef<::System::Number::NumberBuffer> number, ::System::Text::StringBuilder* sb, ::System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal);
  }; // System.Number
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Number::NumberBufferToDecimal
// Il2CppName: NumberBufferToDecimal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint8_t*, ByRef<::System::Decimal>)>(&System::Number::NumberBufferToDecimal)> {
  static const MethodInfo* get() {
    static auto* number = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Decimal")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "NumberBufferToDecimal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, value});
  }
};
// Writing MetadataGetter for method: System::Number::NumberBufferToDouble
// Il2CppName: NumberBufferToDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint8_t*, ByRef<double>)>(&System::Number::NumberBufferToDouble)> {
  static const MethodInfo* get() {
    static auto* number = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Byte"))->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "NumberBufferToDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, value});
  }
};
// Writing MetadataGetter for method: System::Number::FormatDecimal
// Il2CppName: FormatDecimal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::Decimal, ::StringW, ::System::Globalization::NumberFormatInfo*)>(&System::Number::FormatDecimal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Decimal")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "FormatDecimal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, format, info});
  }
};
// Writing MetadataGetter for method: System::Number::FormatDouble
// Il2CppName: FormatDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(double, ::StringW, ::System::Globalization::NumberFormatInfo*)>(&System::Number::FormatDouble)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "FormatDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, format, info});
  }
};
// Writing MetadataGetter for method: System::Number::FormatInt32
// Il2CppName: FormatInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int, ::StringW, ::System::Globalization::NumberFormatInfo*)>(&System::Number::FormatInt32)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "FormatInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, format, info});
  }
};
// Writing MetadataGetter for method: System::Number::FormatUInt32
// Il2CppName: FormatUInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(uint, ::StringW, ::System::Globalization::NumberFormatInfo*)>(&System::Number::FormatUInt32)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "FormatUInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, format, info});
  }
};
// Writing MetadataGetter for method: System::Number::FormatInt64
// Il2CppName: FormatInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int64_t, ::StringW, ::System::Globalization::NumberFormatInfo*)>(&System::Number::FormatInt64)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "FormatInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, format, info});
  }
};
// Writing MetadataGetter for method: System::Number::FormatUInt64
// Il2CppName: FormatUInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(uint64_t, ::StringW, ::System::Globalization::NumberFormatInfo*)>(&System::Number::FormatUInt64)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "FormatUInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, format, info});
  }
};
// Writing MetadataGetter for method: System::Number::FormatSingle
// Il2CppName: FormatSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(float, ::StringW, ::System::Globalization::NumberFormatInfo*)>(&System::Number::FormatSingle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "FormatSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, format, info});
  }
};
// Writing MetadataGetter for method: System::Number::HexNumberToInt32
// Il2CppName: HexNumberToInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::Number::NumberBuffer>, ByRef<int>)>(&System::Number::HexNumberToInt32)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Number/NumberBuffer")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "HexNumberToInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, value});
  }
};
// Writing MetadataGetter for method: System::Number::HexNumberToInt64
// Il2CppName: HexNumberToInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::Number::NumberBuffer>, ByRef<int64_t>)>(&System::Number::HexNumberToInt64)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Number/NumberBuffer")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "HexNumberToInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, value});
  }
};
// Writing MetadataGetter for method: System::Number::HexNumberToUInt32
// Il2CppName: HexNumberToUInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::Number::NumberBuffer>, ByRef<uint>)>(&System::Number::HexNumberToUInt32)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Number/NumberBuffer")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "HexNumberToUInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, value});
  }
};
// Writing MetadataGetter for method: System::Number::HexNumberToUInt64
// Il2CppName: HexNumberToUInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::Number::NumberBuffer>, ByRef<uint64_t>)>(&System::Number::HexNumberToUInt64)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Number/NumberBuffer")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "HexNumberToUInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, value});
  }
};
// Writing MetadataGetter for method: System::Number::IsWhite
// Il2CppName: IsWhite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppChar)>(&System::Number::IsWhite)> {
  static const MethodInfo* get() {
    static auto* ch = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "IsWhite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ch});
  }
};
// Writing MetadataGetter for method: System::Number::NumberToInt32
// Il2CppName: NumberToInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::Number::NumberBuffer>, ByRef<int>)>(&System::Number::NumberToInt32)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Number/NumberBuffer")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "NumberToInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, value});
  }
};
// Writing MetadataGetter for method: System::Number::NumberToInt64
// Il2CppName: NumberToInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::Number::NumberBuffer>, ByRef<int64_t>)>(&System::Number::NumberToInt64)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Number/NumberBuffer")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "NumberToInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, value});
  }
};
// Writing MetadataGetter for method: System::Number::NumberToUInt32
// Il2CppName: NumberToUInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::Number::NumberBuffer>, ByRef<uint>)>(&System::Number::NumberToUInt32)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Number/NumberBuffer")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "NumberToUInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, value});
  }
};
// Writing MetadataGetter for method: System::Number::NumberToUInt64
// Il2CppName: NumberToUInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::System::Number::NumberBuffer>, ByRef<uint64_t>)>(&System::Number::NumberToUInt64)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Number/NumberBuffer")->this_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "NumberToUInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, value});
  }
};
// Writing MetadataGetter for method: System::Number::MatchChars
// Il2CppName: MatchChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar* (*)(::Il2CppChar*, ::StringW)>(&System::Number::MatchChars)> {
  static const MethodInfo* get() {
    static auto* p = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "MatchChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p, str});
  }
};
// Writing MetadataGetter for method: System::Number::MatchChars
// Il2CppName: MatchChars
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar* (*)(::Il2CppChar*, ::Il2CppChar*)>(&System::Number::MatchChars)> {
  static const MethodInfo* get() {
    static auto* p = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    static auto* str = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "MatchChars", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p, str});
  }
};
// Writing MetadataGetter for method: System::Number::ParseDecimal
// Il2CppName: ParseDecimal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Decimal (*)(::StringW, ::System::Globalization::NumberStyles, ::System::Globalization::NumberFormatInfo*)>(&System::Number::ParseDecimal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* numfmt = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "ParseDecimal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, options, numfmt});
  }
};
// Writing MetadataGetter for method: System::Number::ParseDouble
// Il2CppName: ParseDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(::StringW, ::System::Globalization::NumberStyles, ::System::Globalization::NumberFormatInfo*)>(&System::Number::ParseDouble)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* numfmt = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "ParseDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, options, numfmt});
  }
};
// Writing MetadataGetter for method: System::Number::ParseInt32
// Il2CppName: ParseInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, ::System::Globalization::NumberStyles, ::System::Globalization::NumberFormatInfo*)>(&System::Number::ParseInt32)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "ParseInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, style, info});
  }
};
// Writing MetadataGetter for method: System::Number::ParseInt64
// Il2CppName: ParseInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(::StringW, ::System::Globalization::NumberStyles, ::System::Globalization::NumberFormatInfo*)>(&System::Number::ParseInt64)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* numfmt = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "ParseInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, options, numfmt});
  }
};
// Writing MetadataGetter for method: System::Number::ParseNumber
// Il2CppName: ParseNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(ByRef<::Il2CppChar*>, ::System::Globalization::NumberStyles, ByRef<::System::Number::NumberBuffer>, ::System::Text::StringBuilder*, ::System::Globalization::NumberFormatInfo*, bool)>(&System::Number::ParseNumber)> {
  static const MethodInfo* get() {
    static auto* str = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Char"))->this_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Number/NumberBuffer")->this_arg;
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* numfmt = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* parseDecimal = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "ParseNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, options, number, sb, numfmt, parseDecimal});
  }
};
// Writing MetadataGetter for method: System::Number::ParseSingle
// Il2CppName: ParseSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::StringW, ::System::Globalization::NumberStyles, ::System::Globalization::NumberFormatInfo*)>(&System::Number::ParseSingle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* numfmt = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "ParseSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, options, numfmt});
  }
};
// Writing MetadataGetter for method: System::Number::ParseUInt32
// Il2CppName: ParseUInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::StringW, ::System::Globalization::NumberStyles, ::System::Globalization::NumberFormatInfo*)>(&System::Number::ParseUInt32)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* numfmt = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "ParseUInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, options, numfmt});
  }
};
// Writing MetadataGetter for method: System::Number::ParseUInt64
// Il2CppName: ParseUInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::StringW, ::System::Globalization::NumberStyles, ::System::Globalization::NumberFormatInfo*)>(&System::Number::ParseUInt64)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* numfmt = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "ParseUInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, options, numfmt});
  }
};
// Writing MetadataGetter for method: System::Number::StringToNumber
// Il2CppName: StringToNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::System::Globalization::NumberStyles, ByRef<::System::Number::NumberBuffer>, ::System::Globalization::NumberFormatInfo*, bool)>(&System::Number::StringToNumber)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Number/NumberBuffer")->this_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* parseDecimal = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "StringToNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, options, number, info, parseDecimal});
  }
};
// Writing MetadataGetter for method: System::Number::TrailingZeros
// Il2CppName: TrailingZeros
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, int)>(&System::Number::TrailingZeros)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "TrailingZeros", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, index});
  }
};
// Writing MetadataGetter for method: System::Number::TryParseDecimal
// Il2CppName: TryParseDecimal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Globalization::NumberStyles, ::System::Globalization::NumberFormatInfo*, ByRef<::System::Decimal>)>(&System::Number::TryParseDecimal)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* numfmt = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Decimal")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "TryParseDecimal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, options, numfmt, result});
  }
};
// Writing MetadataGetter for method: System::Number::TryParseDouble
// Il2CppName: TryParseDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Globalization::NumberStyles, ::System::Globalization::NumberFormatInfo*, ByRef<double>)>(&System::Number::TryParseDouble)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* numfmt = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Double")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "TryParseDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, options, numfmt, result});
  }
};
// Writing MetadataGetter for method: System::Number::TryParseInt32
// Il2CppName: TryParseInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Globalization::NumberStyles, ::System::Globalization::NumberFormatInfo*, ByRef<int>)>(&System::Number::TryParseInt32)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "TryParseInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, style, info, result});
  }
};
// Writing MetadataGetter for method: System::Number::TryParseInt64
// Il2CppName: TryParseInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Globalization::NumberStyles, ::System::Globalization::NumberFormatInfo*, ByRef<int64_t>)>(&System::Number::TryParseInt64)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Int64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "TryParseInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, style, info, result});
  }
};
// Writing MetadataGetter for method: System::Number::TryParseSingle
// Il2CppName: TryParseSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Globalization::NumberStyles, ::System::Globalization::NumberFormatInfo*, ByRef<float>)>(&System::Number::TryParseSingle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* numfmt = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "TryParseSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, options, numfmt, result});
  }
};
// Writing MetadataGetter for method: System::Number::TryParseUInt32
// Il2CppName: TryParseUInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Globalization::NumberStyles, ::System::Globalization::NumberFormatInfo*, ByRef<uint>)>(&System::Number::TryParseUInt32)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "UInt32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "TryParseUInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, style, info, result});
  }
};
// Writing MetadataGetter for method: System::Number::TryParseUInt64
// Il2CppName: TryParseUInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Globalization::NumberStyles, ::System::Globalization::NumberFormatInfo*, ByRef<uint64_t>)>(&System::Number::TryParseUInt64)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "UInt64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "TryParseUInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, style, info, result});
  }
};
// Writing MetadataGetter for method: System::Number::TryStringToNumber
// Il2CppName: TryStringToNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Globalization::NumberStyles, ByRef<::System::Number::NumberBuffer>, ::System::Globalization::NumberFormatInfo*, bool)>(&System::Number::TryStringToNumber)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Number/NumberBuffer")->this_arg;
    static auto* numfmt = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* parseDecimal = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "TryStringToNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, options, number, numfmt, parseDecimal});
  }
};
// Writing MetadataGetter for method: System::Number::TryStringToNumber
// Il2CppName: TryStringToNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::System::Globalization::NumberStyles, ByRef<::System::Number::NumberBuffer>, ::System::Text::StringBuilder*, ::System::Globalization::NumberFormatInfo*, bool)>(&System::Number::TryStringToNumber)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* options = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberStyles")->byval_arg;
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Number/NumberBuffer")->this_arg;
    static auto* sb = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    static auto* numfmt = &::il2cpp_utils::GetClassFromName("System.Globalization", "NumberFormatInfo")->byval_arg;
    static auto* parseDecimal = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Number*), "TryStringToNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str, options, number, sb, numfmt, parseDecimal});
  }
};
