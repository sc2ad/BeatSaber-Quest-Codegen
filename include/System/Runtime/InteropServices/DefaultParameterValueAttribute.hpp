// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Runtime.InteropServices
namespace System::Runtime::InteropServices {
  // Forward declaring type: DefaultParameterValueAttribute
  class DefaultParameterValueAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Runtime::InteropServices::DefaultParameterValueAttribute);
DEFINE_IL2CPP_ARG_TYPE(::System::Runtime::InteropServices::DefaultParameterValueAttribute*, "System.Runtime.InteropServices", "DefaultParameterValueAttribute");
// Type namespace: System.Runtime.InteropServices
namespace System::Runtime::InteropServices {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.InteropServices.DefaultParameterValueAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 8FF718
  class DefaultParameterValueAttribute : public ::System::Attribute {
    public:
    public:
    // private System.Object value
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppObject* value;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    public:
    // Creating conversion operator: operator ::Il2CppObject*
    constexpr operator ::Il2CppObject*() const noexcept {
      return value;
    }
    // Get instance field reference: private System.Object value
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_value();
    // public System.Object get_Value()
    // Offset: 0xE08134
    ::Il2CppObject* get_Value();
    // public System.Void .ctor(System.Object value)
    // Offset: 0xE08108
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DefaultParameterValueAttribute* New_ctor(::Il2CppObject* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DefaultParameterValueAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DefaultParameterValueAttribute*, creationType>(value)));
    }
  }; // System.Runtime.InteropServices.DefaultParameterValueAttribute
  #pragma pack(pop)
  static check_size<sizeof(DefaultParameterValueAttribute), 16 + sizeof(::Il2CppObject*)> __System_Runtime_InteropServices_DefaultParameterValueAttributeSizeCheck;
  static_assert(sizeof(DefaultParameterValueAttribute) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Runtime::InteropServices::DefaultParameterValueAttribute::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Runtime::InteropServices::DefaultParameterValueAttribute::*)()>(&System::Runtime::InteropServices::DefaultParameterValueAttribute::get_Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::InteropServices::DefaultParameterValueAttribute*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::InteropServices::DefaultParameterValueAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
