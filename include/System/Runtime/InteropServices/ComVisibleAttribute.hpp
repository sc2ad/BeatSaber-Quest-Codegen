// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Runtime.InteropServices
namespace System::Runtime::InteropServices {
  // Forward declaring type: ComVisibleAttribute
  class ComVisibleAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Runtime::InteropServices::ComVisibleAttribute);
DEFINE_IL2CPP_ARG_TYPE(::System::Runtime::InteropServices::ComVisibleAttribute*, "System.Runtime.InteropServices", "ComVisibleAttribute");
// Type namespace: System.Runtime.InteropServices
namespace System::Runtime::InteropServices {
  // Size: 0x11
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.InteropServices.ComVisibleAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: 103DC50
  // [AttributeUsageAttribute] Offset: 103DC50
  class ComVisibleAttribute : public ::System::Attribute {
    public:
    public:
    // System.Boolean _val
    // Size: 0x1
    // Offset: 0x10
    bool val;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating conversion operator: operator bool
    constexpr operator bool() const noexcept {
      return val;
    }
    // Get instance field reference: System.Boolean _val
    [[deprecated("Use field access instead!")]] bool& dyn__val();
    // public System.Void .ctor(System.Boolean visibility)
    // Offset: 0x1D88B90
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ComVisibleAttribute* New_ctor(bool visibility) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ComVisibleAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ComVisibleAttribute*, creationType>(visibility)));
    }
  }; // System.Runtime.InteropServices.ComVisibleAttribute
  #pragma pack(pop)
  static check_size<sizeof(ComVisibleAttribute), 16 + sizeof(bool)> __System_Runtime_InteropServices_ComVisibleAttributeSizeCheck;
  static_assert(sizeof(ComVisibleAttribute) == 0x11);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Runtime::InteropServices::ComVisibleAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
