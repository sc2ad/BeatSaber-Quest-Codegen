// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Runtime.InteropServices.UnmanagedType
#include "System/Runtime/InteropServices/UnmanagedType.hpp"
// Including type: System.Runtime.InteropServices.VarEnum
#include "System/Runtime/InteropServices/VarEnum.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: System.Runtime.InteropServices
namespace System::Runtime::InteropServices {
  // Forward declaring type: MarshalAsAttribute
  class MarshalAsAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Runtime::InteropServices::MarshalAsAttribute);
DEFINE_IL2CPP_ARG_TYPE(::System::Runtime::InteropServices::MarshalAsAttribute*, "System.Runtime.InteropServices", "MarshalAsAttribute");
// Type namespace: System.Runtime.InteropServices
namespace System::Runtime::InteropServices {
  // Size: 0x46
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: System.Runtime.InteropServices.MarshalAsAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 107AFD4
  // [ComVisibleAttribute] Offset: 107AFD4
  class MarshalAsAttribute : public ::System::Attribute {
    public:
    public:
    // public System.String MarshalCookie
    // Size: 0x8
    // Offset: 0x10
    ::StringW MarshalCookie;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [ComVisibleAttribute] Offset: 0x107E0B8
    // public System.String MarshalType
    // Size: 0x8
    // Offset: 0x18
    ::StringW MarshalType;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [ComVisibleAttribute] Offset: 0x107E0CC
    // public System.Type MarshalTypeRef
    // Size: 0x8
    // Offset: 0x20
    ::System::Type* MarshalTypeRef;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    // public System.Type SafeArrayUserDefinedSubType
    // Size: 0x8
    // Offset: 0x28
    ::System::Type* SafeArrayUserDefinedSubType;
    // Field size check
    static_assert(sizeof(::System::Type*) == 0x8);
    // private System.Runtime.InteropServices.UnmanagedType utype
    // Size: 0x4
    // Offset: 0x30
    ::System::Runtime::InteropServices::UnmanagedType utype;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::UnmanagedType) == 0x4);
    // public System.Runtime.InteropServices.UnmanagedType ArraySubType
    // Size: 0x4
    // Offset: 0x34
    ::System::Runtime::InteropServices::UnmanagedType ArraySubType;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::UnmanagedType) == 0x4);
    // public System.Runtime.InteropServices.VarEnum SafeArraySubType
    // Size: 0x4
    // Offset: 0x38
    ::System::Runtime::InteropServices::VarEnum SafeArraySubType;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::VarEnum) == 0x4);
    // public System.Int32 SizeConst
    // Size: 0x4
    // Offset: 0x3C
    int SizeConst;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 IidParameterIndex
    // Size: 0x4
    // Offset: 0x40
    int IidParameterIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int16 SizeParamIndex
    // Size: 0x2
    // Offset: 0x44
    int16_t SizeParamIndex;
    // Field size check
    static_assert(sizeof(int16_t) == 0x2);
    public:
    // Get instance field reference: public System.String MarshalCookie
    [[deprecated("Use field access instead!")]] ::StringW& dyn_MarshalCookie();
    // Get instance field reference: public System.String MarshalType
    [[deprecated("Use field access instead!")]] ::StringW& dyn_MarshalType();
    // Get instance field reference: public System.Type MarshalTypeRef
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_MarshalTypeRef();
    // Get instance field reference: public System.Type SafeArrayUserDefinedSubType
    [[deprecated("Use field access instead!")]] ::System::Type*& dyn_SafeArrayUserDefinedSubType();
    // Get instance field reference: private System.Runtime.InteropServices.UnmanagedType utype
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::UnmanagedType& dyn_utype();
    // Get instance field reference: public System.Runtime.InteropServices.UnmanagedType ArraySubType
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::UnmanagedType& dyn_ArraySubType();
    // Get instance field reference: public System.Runtime.InteropServices.VarEnum SafeArraySubType
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::VarEnum& dyn_SafeArraySubType();
    // Get instance field reference: public System.Int32 SizeConst
    [[deprecated("Use field access instead!")]] int& dyn_SizeConst();
    // Get instance field reference: public System.Int32 IidParameterIndex
    [[deprecated("Use field access instead!")]] int& dyn_IidParameterIndex();
    // Get instance field reference: public System.Int16 SizeParamIndex
    [[deprecated("Use field access instead!")]] int16_t& dyn_SizeParamIndex();
    // System.Runtime.InteropServices.MarshalAsAttribute Copy()
    // Offset: 0x1E2F7F4
    ::System::Runtime::InteropServices::MarshalAsAttribute* Copy();
  }; // System.Runtime.InteropServices.MarshalAsAttribute
  #pragma pack(pop)
  static check_size<sizeof(MarshalAsAttribute), 68 + sizeof(int16_t)> __System_Runtime_InteropServices_MarshalAsAttributeSizeCheck;
  static_assert(sizeof(MarshalAsAttribute) == 0x46);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Runtime::InteropServices::MarshalAsAttribute::Copy
// Il2CppName: Copy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::InteropServices::MarshalAsAttribute* (System::Runtime::InteropServices::MarshalAsAttribute::*)()>(&System::Runtime::InteropServices::MarshalAsAttribute::Copy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::InteropServices::MarshalAsAttribute*), "Copy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
