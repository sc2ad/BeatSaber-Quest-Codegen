// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Remoting
namespace System::Runtime::Remoting {
  // Forward declaring type: ObjRef
  class ObjRef;
  // Forward declaring type: ActivatedClientTypeEntry
  class ActivatedClientTypeEntry;
  // Forward declaring type: WellKnownClientTypeEntry
  class WellKnownClientTypeEntry;
  // Forward declaring type: Identity
  class Identity;
  // Forward declaring type: ClientIdentity
  class ClientIdentity;
  // Forward declaring type: ClientActivatedIdentity
  class ClientActivatedIdentity;
  // Forward declaring type: ServerIdentity
  class ServerIdentity;
  // Forward declaring type: WellKnownObjectMode
  struct WellKnownObjectMode;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Forward declaring namespace: System::Runtime::Serialization::Formatters::Binary
namespace System::Runtime::Serialization::Formatters::Binary {
  // Forward declaring type: BinaryFormatter
  class BinaryFormatter;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MethodInfo
  class MethodInfo;
  // Forward declaring type: MethodBase
  class MethodBase;
  // Forward declaring type: ParameterInfo
  class ParameterInfo;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: MarshalByRefObject
  class MarshalByRefObject;
  // Forward declaring type: Exception
  class Exception;
}
// Forward declaring namespace: System::Runtime::Remoting::Messaging
namespace System::Runtime::Remoting::Messaging {
  // Forward declaring type: IMethodReturnMessage
  class IMethodReturnMessage;
  // Forward declaring type: IMethodCallMessage
  class IMethodCallMessage;
  // Forward declaring type: IMethodMessage
  class IMethodMessage;
  // Forward declaring type: IMessageSink
  class IMessageSink;
  // Forward declaring type: IMessage
  class IMessage;
}
// Forward declaring namespace: System::Runtime::Remoting::Proxies
namespace System::Runtime::Remoting::Proxies {
  // Forward declaring type: RealProxy
  class RealProxy;
}
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
  // Forward declaring type: StreamingContext
  struct StreamingContext;
}
// Completed forward declares
// Type namespace: System.Runtime.Remoting
namespace System::Runtime::Remoting {
  // Forward declaring type: RemotingServices
  class RemotingServices;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Runtime::Remoting::RemotingServices);
DEFINE_IL2CPP_ARG_TYPE(::System::Runtime::Remoting::RemotingServices*, "System.Runtime.Remoting", "RemotingServices");
// Type namespace: System.Runtime.Remoting
namespace System::Runtime::Remoting {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.Remoting.RemotingServices
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: 103CE74
  class RemotingServices : public ::Il2CppObject {
    public:
    // Nested type: ::System::Runtime::Remoting::RemotingServices::CACD
    class CACD;
    // Get static field: static private System.Collections.Hashtable uri_hash
    static ::System::Collections::Hashtable* _get_uri_hash();
    // Set static field: static private System.Collections.Hashtable uri_hash
    static void _set_uri_hash(::System::Collections::Hashtable* value);
    // Get static field: static private System.Runtime.Serialization.Formatters.Binary.BinaryFormatter _serializationFormatter
    static ::System::Runtime::Serialization::Formatters::Binary::BinaryFormatter* _get__serializationFormatter();
    // Set static field: static private System.Runtime.Serialization.Formatters.Binary.BinaryFormatter _serializationFormatter
    static void _set__serializationFormatter(::System::Runtime::Serialization::Formatters::Binary::BinaryFormatter* value);
    // Get static field: static private System.Runtime.Serialization.Formatters.Binary.BinaryFormatter _deserializationFormatter
    static ::System::Runtime::Serialization::Formatters::Binary::BinaryFormatter* _get__deserializationFormatter();
    // Set static field: static private System.Runtime.Serialization.Formatters.Binary.BinaryFormatter _deserializationFormatter
    static void _set__deserializationFormatter(::System::Runtime::Serialization::Formatters::Binary::BinaryFormatter* value);
    // Get static field: static private System.String app_id
    static ::StringW _get_app_id();
    // Set static field: static private System.String app_id
    static void _set_app_id(::StringW value);
    // Get static field: static private readonly System.Object app_id_lock
    static ::Il2CppObject* _get_app_id_lock();
    // Set static field: static private readonly System.Object app_id_lock
    static void _set_app_id_lock(::Il2CppObject* value);
    // Get static field: static private System.Int32 next_id
    static int _get_next_id();
    // Set static field: static private System.Int32 next_id
    static void _set_next_id(int value);
    // Get static field: static private readonly System.Reflection.MethodInfo FieldSetterMethod
    static ::System::Reflection::MethodInfo* _get_FieldSetterMethod();
    // Set static field: static private readonly System.Reflection.MethodInfo FieldSetterMethod
    static void _set_FieldSetterMethod(::System::Reflection::MethodInfo* value);
    // Get static field: static private readonly System.Reflection.MethodInfo FieldGetterMethod
    static ::System::Reflection::MethodInfo* _get_FieldGetterMethod();
    // Set static field: static private readonly System.Reflection.MethodInfo FieldGetterMethod
    static void _set_FieldGetterMethod(::System::Reflection::MethodInfo* value);
    // static private System.Void .cctor()
    // Offset: 0x18EBC04
    static void _cctor();
    // static System.Object InternalExecute(System.Reflection.MethodBase method, System.Object obj, System.Object[] parameters, out System.Object[] out_args)
    // Offset: 0x18EBF04
    static ::Il2CppObject* InternalExecute(::System::Reflection::MethodBase* method, ::Il2CppObject* obj, ::ArrayW<::Il2CppObject*> parameters, ByRef<::ArrayW<::Il2CppObject*>> out_args);
    // static System.Reflection.MethodBase GetVirtualMethod(System.Type type, System.Reflection.MethodBase method)
    // Offset: 0x18EBF08
    static ::System::Reflection::MethodBase* GetVirtualMethod(::System::Type* type, ::System::Reflection::MethodBase* method);
    // static public System.Boolean IsTransparentProxy(System.Object proxy)
    // Offset: 0x18EBF0C
    static bool IsTransparentProxy(::Il2CppObject* proxy);
    // static System.Runtime.Remoting.Messaging.IMethodReturnMessage InternalExecuteMessage(System.MarshalByRefObject target, System.Runtime.Remoting.Messaging.IMethodCallMessage reqMsg)
    // Offset: 0x18EBF6C
    static ::System::Runtime::Remoting::Messaging::IMethodReturnMessage* InternalExecuteMessage(::System::MarshalByRefObject* target, ::System::Runtime::Remoting::Messaging::IMethodCallMessage* reqMsg);
    // static public System.Object Connect(System.Type classToProxy, System.String url)
    // Offset: 0x18EC9DC
    static ::Il2CppObject* Connect(::System::Type* classToProxy, ::StringW url);
    // static public System.Object Connect(System.Type classToProxy, System.String url, System.Object data)
    // Offset: 0x18ECAFC
    static ::Il2CppObject* Connect(::System::Type* classToProxy, ::StringW url, ::Il2CppObject* data);
    // static public System.Type GetServerTypeForUri(System.String URI)
    // Offset: 0x18ECB9C
    static ::System::Type* GetServerTypeForUri(::StringW URI);
    // static public System.Object Unmarshal(System.Runtime.Remoting.ObjRef objectRef)
    // Offset: 0x18ECC5C
    static ::Il2CppObject* Unmarshal(::System::Runtime::Remoting::ObjRef* objectRef);
    // static public System.Object Unmarshal(System.Runtime.Remoting.ObjRef objectRef, System.Boolean fRefine)
    // Offset: 0x18ECCC4
    static ::Il2CppObject* Unmarshal(::System::Runtime::Remoting::ObjRef* objectRef, bool fRefine);
    // static public System.Runtime.Remoting.ObjRef Marshal(System.MarshalByRefObject Obj)
    // Offset: 0x18ED240
    static ::System::Runtime::Remoting::ObjRef* Marshal(::System::MarshalByRefObject* Obj);
    // static public System.Runtime.Remoting.ObjRef Marshal(System.MarshalByRefObject Obj, System.String ObjURI, System.Type RequestedType)
    // Offset: 0x18ED2AC
    static ::System::Runtime::Remoting::ObjRef* Marshal(::System::MarshalByRefObject* Obj, ::StringW ObjURI, ::System::Type* RequestedType);
    // static private System.String NewUri()
    // Offset: 0x18ED300
    static ::StringW NewUri();
    // static public System.Runtime.Remoting.Proxies.RealProxy GetRealProxy(System.Object proxy)
    // Offset: 0x18E6510
    static ::System::Runtime::Remoting::Proxies::RealProxy* GetRealProxy(::Il2CppObject* proxy);
    // static public System.Reflection.MethodBase GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage msg)
    // Offset: 0x18EDE00
    static ::System::Reflection::MethodBase* GetMethodBaseFromMethodMessage(::System::Runtime::Remoting::Messaging::IMethodMessage* msg);
    // static System.Reflection.MethodBase GetMethodBaseFromName(System.Type type, System.String methodName, System.Type[] signature)
    // Offset: 0x18EE0D0
    static ::System::Reflection::MethodBase* GetMethodBaseFromName(::System::Type* type, ::StringW methodName, ::ArrayW<::System::Type*> signature);
    // static private System.Reflection.MethodBase FindInterfaceMethod(System.Type type, System.String methodName, System.Type[] signature)
    // Offset: 0x18EE2B0
    static ::System::Reflection::MethodBase* FindInterfaceMethod(::System::Type* type, ::StringW methodName, ::ArrayW<::System::Type*> signature);
    // static public System.Void GetObjectData(System.Object obj, System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context)
    // Offset: 0x18E6890
    static void GetObjectData(::Il2CppObject* obj, ::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context);
    // static public System.Boolean IsOneWay(System.Reflection.MethodBase method)
    // Offset: 0x18EE400
    static bool IsOneWay(::System::Reflection::MethodBase* method);
    // static System.Object CreateClientProxy(System.Runtime.Remoting.ActivatedClientTypeEntry entry, System.Object[] activationAttributes)
    // Offset: 0x18EE498
    static ::Il2CppObject* CreateClientProxy(::System::Runtime::Remoting::ActivatedClientTypeEntry* entry, ::ArrayW<::Il2CppObject*> activationAttributes);
    // static System.Object CreateClientProxy(System.Type objectType, System.String url, System.Object[] activationAttributes)
    // Offset: 0x18EE5FC
    static ::Il2CppObject* CreateClientProxy(::System::Type* objectType, ::StringW url, ::ArrayW<::Il2CppObject*> activationAttributes);
    // static System.Object CreateClientProxy(System.Runtime.Remoting.WellKnownClientTypeEntry entry)
    // Offset: 0x18EE818
    static ::Il2CppObject* CreateClientProxy(::System::Runtime::Remoting::WellKnownClientTypeEntry* entry);
    // static System.Object CreateClientProxyForContextBound(System.Type type, System.Object[] activationAttributes)
    // Offset: 0x18EE890
    static ::Il2CppObject* CreateClientProxyForContextBound(::System::Type* type, ::ArrayW<::Il2CppObject*> activationAttributes);
    // static System.Runtime.Remoting.Identity GetIdentityForUri(System.String uri)
    // Offset: 0x18E7CD0
    static ::System::Runtime::Remoting::Identity* GetIdentityForUri(::StringW uri);
    // static private System.String RemoveAppNameFromUri(System.String uri)
    // Offset: 0x18EEA88
    static ::StringW RemoveAppNameFromUri(::StringW uri);
    // static System.Runtime.Remoting.ClientIdentity GetOrCreateClientIdentity(System.Runtime.Remoting.ObjRef objRef, System.Type proxyType, out System.Object clientProxy)
    // Offset: 0x18EEB98
    static ::System::Runtime::Remoting::ClientIdentity* GetOrCreateClientIdentity(::System::Runtime::Remoting::ObjRef* objRef, ::System::Type* proxyType, ByRef<::Il2CppObject*> clientProxy);
    // static private System.Runtime.Remoting.Messaging.IMessageSink GetClientChannelSinkChain(System.String url, System.Object channelData, out System.String objectUri)
    // Offset: 0x18EE72C
    static ::System::Runtime::Remoting::Messaging::IMessageSink* GetClientChannelSinkChain(::StringW url, ::Il2CppObject* channelData, ByRef<::StringW> objectUri);
    // static System.Runtime.Remoting.ClientActivatedIdentity CreateContextBoundObjectIdentity(System.Type objectType)
    // Offset: 0x18EF03C
    static ::System::Runtime::Remoting::ClientActivatedIdentity* CreateContextBoundObjectIdentity(::System::Type* objectType);
    // static System.Runtime.Remoting.ClientActivatedIdentity CreateClientActivatedServerIdentity(System.MarshalByRefObject realObject, System.Type objectType, System.String objectUri)
    // Offset: 0x18EDCD0
    static ::System::Runtime::Remoting::ClientActivatedIdentity* CreateClientActivatedServerIdentity(::System::MarshalByRefObject* realObject, ::System::Type* objectType, ::StringW objectUri);
    // static System.Runtime.Remoting.ServerIdentity CreateWellKnownServerIdentity(System.Type objectType, System.String objectUri, System.Runtime.Remoting.WellKnownObjectMode mode)
    // Offset: 0x18EA520
    static ::System::Runtime::Remoting::ServerIdentity* CreateWellKnownServerIdentity(::System::Type* objectType, ::StringW objectUri, ::System::Runtime::Remoting::WellKnownObjectMode mode);
    // static private System.Void RegisterServerIdentity(System.Runtime.Remoting.ServerIdentity identity)
    // Offset: 0x18ED674
    static void RegisterServerIdentity(::System::Runtime::Remoting::ServerIdentity* identity);
    // static System.Object GetProxyForRemoteObject(System.Runtime.Remoting.ObjRef objref, System.Type classToProxy)
    // Offset: 0x18E6410
    static ::Il2CppObject* GetProxyForRemoteObject(::System::Runtime::Remoting::ObjRef* objref, ::System::Type* classToProxy);
    // static System.Object GetRemoteObject(System.Runtime.Remoting.ObjRef objRef, System.Type proxyType)
    // Offset: 0x18ECA78
    static ::Il2CppObject* GetRemoteObject(::System::Runtime::Remoting::ObjRef* objRef, ::System::Type* proxyType);
    // static System.Byte[] SerializeCallData(System.Object obj)
    // Offset: 0x18EF20C
    static ::ArrayW<uint8_t> SerializeCallData(::Il2CppObject* obj);
    // static System.Object DeserializeCallData(System.Byte[] array)
    // Offset: 0x18EF370
    static ::Il2CppObject* DeserializeCallData(::ArrayW<uint8_t> array);
    // static System.Byte[] SerializeExceptionData(System.Exception ex)
    // Offset: 0x18EF4D8
    static ::ArrayW<uint8_t> SerializeExceptionData(::System::Exception* ex);
    // static private System.Void RegisterInternalChannels()
    // Offset: 0x18EBEA4
    static void RegisterInternalChannels();
    // static System.Void DisposeIdentity(System.Runtime.Remoting.Identity ident)
    // Offset: 0x18E8D24
    static void DisposeIdentity(::System::Runtime::Remoting::Identity* ident);
    // static System.Runtime.Remoting.Identity GetMessageTargetIdentity(System.Runtime.Remoting.Messaging.IMessage msg)
    // Offset: 0x18EF598
    static ::System::Runtime::Remoting::Identity* GetMessageTargetIdentity(::System::Runtime::Remoting::Messaging::IMessage* msg);
    // static System.Void SetMessageTargetIdentity(System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Identity ident)
    // Offset: 0x18EF89C
    static void SetMessageTargetIdentity(::System::Runtime::Remoting::Messaging::IMessage* msg, ::System::Runtime::Remoting::Identity* ident);
    // static System.Boolean UpdateOutArgObject(System.Reflection.ParameterInfo pi, System.Object local, System.Object remote)
    // Offset: 0x18E7F10
    static bool UpdateOutArgObject(::System::Reflection::ParameterInfo* pi, ::Il2CppObject* local, ::Il2CppObject* remote);
    // static private System.String GetNormalizedUri(System.String uri)
    // Offset: 0x18EEA08
    static ::StringW GetNormalizedUri(::StringW uri);
  }; // System.Runtime.Remoting.RemotingServices
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Runtime::Remoting::RemotingServices::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::InternalExecute
// Il2CppName: InternalExecute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Reflection::MethodBase*, ::Il2CppObject*, ::ArrayW<::Il2CppObject*>, ByRef<::ArrayW<::Il2CppObject*>>)>(&System::Runtime::Remoting::RemotingServices::InternalExecute)> {
  static const MethodInfo* get() {
    static auto* method = &::il2cpp_utils::GetClassFromName("System.Reflection", "MethodBase")->byval_arg;
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* parameters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    static auto* out_args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "InternalExecute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{method, obj, parameters, out_args});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::GetVirtualMethod
// Il2CppName: GetVirtualMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::MethodBase* (*)(::System::Type*, ::System::Reflection::MethodBase*)>(&System::Runtime::Remoting::RemotingServices::GetVirtualMethod)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* method = &::il2cpp_utils::GetClassFromName("System.Reflection", "MethodBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "GetVirtualMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, method});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::IsTransparentProxy
// Il2CppName: IsTransparentProxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppObject*)>(&System::Runtime::Remoting::RemotingServices::IsTransparentProxy)> {
  static const MethodInfo* get() {
    static auto* proxy = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "IsTransparentProxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{proxy});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::InternalExecuteMessage
// Il2CppName: InternalExecuteMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::Remoting::Messaging::IMethodReturnMessage* (*)(::System::MarshalByRefObject*, ::System::Runtime::Remoting::Messaging::IMethodCallMessage*)>(&System::Runtime::Remoting::RemotingServices::InternalExecuteMessage)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "MarshalByRefObject")->byval_arg;
    static auto* reqMsg = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Messaging", "IMethodCallMessage")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "InternalExecuteMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, reqMsg});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::Connect
// Il2CppName: Connect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Type*, ::StringW)>(&System::Runtime::Remoting::RemotingServices::Connect)> {
  static const MethodInfo* get() {
    static auto* classToProxy = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "Connect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{classToProxy, url});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::Connect
// Il2CppName: Connect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Type*, ::StringW, ::Il2CppObject*)>(&System::Runtime::Remoting::RemotingServices::Connect)> {
  static const MethodInfo* get() {
    static auto* classToProxy = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* data = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "Connect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{classToProxy, url, data});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::GetServerTypeForUri
// Il2CppName: GetServerTypeForUri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Type* (*)(::StringW)>(&System::Runtime::Remoting::RemotingServices::GetServerTypeForUri)> {
  static const MethodInfo* get() {
    static auto* URI = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "GetServerTypeForUri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{URI});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::Unmarshal
// Il2CppName: Unmarshal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Runtime::Remoting::ObjRef*)>(&System::Runtime::Remoting::RemotingServices::Unmarshal)> {
  static const MethodInfo* get() {
    static auto* objectRef = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting", "ObjRef")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "Unmarshal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectRef});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::Unmarshal
// Il2CppName: Unmarshal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Runtime::Remoting::ObjRef*, bool)>(&System::Runtime::Remoting::RemotingServices::Unmarshal)> {
  static const MethodInfo* get() {
    static auto* objectRef = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting", "ObjRef")->byval_arg;
    static auto* fRefine = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "Unmarshal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectRef, fRefine});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::Marshal
// Il2CppName: Marshal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::Remoting::ObjRef* (*)(::System::MarshalByRefObject*)>(&System::Runtime::Remoting::RemotingServices::Marshal)> {
  static const MethodInfo* get() {
    static auto* Obj = &::il2cpp_utils::GetClassFromName("System", "MarshalByRefObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "Marshal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{Obj});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::Marshal
// Il2CppName: Marshal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::Remoting::ObjRef* (*)(::System::MarshalByRefObject*, ::StringW, ::System::Type*)>(&System::Runtime::Remoting::RemotingServices::Marshal)> {
  static const MethodInfo* get() {
    static auto* Obj = &::il2cpp_utils::GetClassFromName("System", "MarshalByRefObject")->byval_arg;
    static auto* ObjURI = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* RequestedType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "Marshal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{Obj, ObjURI, RequestedType});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::NewUri
// Il2CppName: NewUri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&System::Runtime::Remoting::RemotingServices::NewUri)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "NewUri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::GetRealProxy
// Il2CppName: GetRealProxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::Remoting::Proxies::RealProxy* (*)(::Il2CppObject*)>(&System::Runtime::Remoting::RemotingServices::GetRealProxy)> {
  static const MethodInfo* get() {
    static auto* proxy = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "GetRealProxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{proxy});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::GetMethodBaseFromMethodMessage
// Il2CppName: GetMethodBaseFromMethodMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::MethodBase* (*)(::System::Runtime::Remoting::Messaging::IMethodMessage*)>(&System::Runtime::Remoting::RemotingServices::GetMethodBaseFromMethodMessage)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Messaging", "IMethodMessage")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "GetMethodBaseFromMethodMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::GetMethodBaseFromName
// Il2CppName: GetMethodBaseFromName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::MethodBase* (*)(::System::Type*, ::StringW, ::ArrayW<::System::Type*>)>(&System::Runtime::Remoting::RemotingServices::GetMethodBaseFromName)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* methodName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* signature = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Type"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "GetMethodBaseFromName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, methodName, signature});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::FindInterfaceMethod
// Il2CppName: FindInterfaceMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::MethodBase* (*)(::System::Type*, ::StringW, ::ArrayW<::System::Type*>)>(&System::Runtime::Remoting::RemotingServices::FindInterfaceMethod)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* methodName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* signature = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Type"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "FindInterfaceMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, methodName, signature});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*, ::System::Runtime::Serialization::StreamingContext)>(&System::Runtime::Remoting::RemotingServices::GetObjectData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "SerializationInfo")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System.Runtime.Serialization", "StreamingContext")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, info, context});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::IsOneWay
// Il2CppName: IsOneWay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Reflection::MethodBase*)>(&System::Runtime::Remoting::RemotingServices::IsOneWay)> {
  static const MethodInfo* get() {
    static auto* method = &::il2cpp_utils::GetClassFromName("System.Reflection", "MethodBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "IsOneWay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{method});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::CreateClientProxy
// Il2CppName: CreateClientProxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Runtime::Remoting::ActivatedClientTypeEntry*, ::ArrayW<::Il2CppObject*>)>(&System::Runtime::Remoting::RemotingServices::CreateClientProxy)> {
  static const MethodInfo* get() {
    static auto* entry = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting", "ActivatedClientTypeEntry")->byval_arg;
    static auto* activationAttributes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "CreateClientProxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{entry, activationAttributes});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::CreateClientProxy
// Il2CppName: CreateClientProxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Type*, ::StringW, ::ArrayW<::Il2CppObject*>)>(&System::Runtime::Remoting::RemotingServices::CreateClientProxy)> {
  static const MethodInfo* get() {
    static auto* objectType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* activationAttributes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "CreateClientProxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectType, url, activationAttributes});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::CreateClientProxy
// Il2CppName: CreateClientProxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Runtime::Remoting::WellKnownClientTypeEntry*)>(&System::Runtime::Remoting::RemotingServices::CreateClientProxy)> {
  static const MethodInfo* get() {
    static auto* entry = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting", "WellKnownClientTypeEntry")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "CreateClientProxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{entry});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::CreateClientProxyForContextBound
// Il2CppName: CreateClientProxyForContextBound
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Type*, ::ArrayW<::Il2CppObject*>)>(&System::Runtime::Remoting::RemotingServices::CreateClientProxyForContextBound)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* activationAttributes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "CreateClientProxyForContextBound", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, activationAttributes});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::GetIdentityForUri
// Il2CppName: GetIdentityForUri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::Remoting::Identity* (*)(::StringW)>(&System::Runtime::Remoting::RemotingServices::GetIdentityForUri)> {
  static const MethodInfo* get() {
    static auto* uri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "GetIdentityForUri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uri});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::RemoveAppNameFromUri
// Il2CppName: RemoveAppNameFromUri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&System::Runtime::Remoting::RemotingServices::RemoveAppNameFromUri)> {
  static const MethodInfo* get() {
    static auto* uri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "RemoveAppNameFromUri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uri});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::GetOrCreateClientIdentity
// Il2CppName: GetOrCreateClientIdentity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::Remoting::ClientIdentity* (*)(::System::Runtime::Remoting::ObjRef*, ::System::Type*, ByRef<::Il2CppObject*>)>(&System::Runtime::Remoting::RemotingServices::GetOrCreateClientIdentity)> {
  static const MethodInfo* get() {
    static auto* objRef = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting", "ObjRef")->byval_arg;
    static auto* proxyType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* clientProxy = &::il2cpp_utils::GetClassFromName("System", "Object")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "GetOrCreateClientIdentity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objRef, proxyType, clientProxy});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::GetClientChannelSinkChain
// Il2CppName: GetClientChannelSinkChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::Remoting::Messaging::IMessageSink* (*)(::StringW, ::Il2CppObject*, ByRef<::StringW>)>(&System::Runtime::Remoting::RemotingServices::GetClientChannelSinkChain)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* channelData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* objectUri = &::il2cpp_utils::GetClassFromName("System", "String")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "GetClientChannelSinkChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, channelData, objectUri});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::CreateContextBoundObjectIdentity
// Il2CppName: CreateContextBoundObjectIdentity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::Remoting::ClientActivatedIdentity* (*)(::System::Type*)>(&System::Runtime::Remoting::RemotingServices::CreateContextBoundObjectIdentity)> {
  static const MethodInfo* get() {
    static auto* objectType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "CreateContextBoundObjectIdentity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectType});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::CreateClientActivatedServerIdentity
// Il2CppName: CreateClientActivatedServerIdentity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::Remoting::ClientActivatedIdentity* (*)(::System::MarshalByRefObject*, ::System::Type*, ::StringW)>(&System::Runtime::Remoting::RemotingServices::CreateClientActivatedServerIdentity)> {
  static const MethodInfo* get() {
    static auto* realObject = &::il2cpp_utils::GetClassFromName("System", "MarshalByRefObject")->byval_arg;
    static auto* objectType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* objectUri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "CreateClientActivatedServerIdentity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{realObject, objectType, objectUri});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::CreateWellKnownServerIdentity
// Il2CppName: CreateWellKnownServerIdentity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::Remoting::ServerIdentity* (*)(::System::Type*, ::StringW, ::System::Runtime::Remoting::WellKnownObjectMode)>(&System::Runtime::Remoting::RemotingServices::CreateWellKnownServerIdentity)> {
  static const MethodInfo* get() {
    static auto* objectType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* objectUri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting", "WellKnownObjectMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "CreateWellKnownServerIdentity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objectType, objectUri, mode});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::RegisterServerIdentity
// Il2CppName: RegisterServerIdentity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Runtime::Remoting::ServerIdentity*)>(&System::Runtime::Remoting::RemotingServices::RegisterServerIdentity)> {
  static const MethodInfo* get() {
    static auto* identity = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting", "ServerIdentity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "RegisterServerIdentity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{identity});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::GetProxyForRemoteObject
// Il2CppName: GetProxyForRemoteObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Runtime::Remoting::ObjRef*, ::System::Type*)>(&System::Runtime::Remoting::RemotingServices::GetProxyForRemoteObject)> {
  static const MethodInfo* get() {
    static auto* objref = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting", "ObjRef")->byval_arg;
    static auto* classToProxy = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "GetProxyForRemoteObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objref, classToProxy});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::GetRemoteObject
// Il2CppName: GetRemoteObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Runtime::Remoting::ObjRef*, ::System::Type*)>(&System::Runtime::Remoting::RemotingServices::GetRemoteObject)> {
  static const MethodInfo* get() {
    static auto* objRef = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting", "ObjRef")->byval_arg;
    static auto* proxyType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "GetRemoteObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{objRef, proxyType});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::SerializeCallData
// Il2CppName: SerializeCallData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::Il2CppObject*)>(&System::Runtime::Remoting::RemotingServices::SerializeCallData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "SerializeCallData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::DeserializeCallData
// Il2CppName: DeserializeCallData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::ArrayW<uint8_t>)>(&System::Runtime::Remoting::RemotingServices::DeserializeCallData)> {
  static const MethodInfo* get() {
    static auto* array = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "DeserializeCallData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::SerializeExceptionData
// Il2CppName: SerializeExceptionData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::System::Exception*)>(&System::Runtime::Remoting::RemotingServices::SerializeExceptionData)> {
  static const MethodInfo* get() {
    static auto* ex = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "SerializeExceptionData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ex});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::RegisterInternalChannels
// Il2CppName: RegisterInternalChannels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&System::Runtime::Remoting::RemotingServices::RegisterInternalChannels)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "RegisterInternalChannels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::DisposeIdentity
// Il2CppName: DisposeIdentity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Runtime::Remoting::Identity*)>(&System::Runtime::Remoting::RemotingServices::DisposeIdentity)> {
  static const MethodInfo* get() {
    static auto* ident = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting", "Identity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "DisposeIdentity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ident});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::GetMessageTargetIdentity
// Il2CppName: GetMessageTargetIdentity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::Remoting::Identity* (*)(::System::Runtime::Remoting::Messaging::IMessage*)>(&System::Runtime::Remoting::RemotingServices::GetMessageTargetIdentity)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Messaging", "IMessage")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "GetMessageTargetIdentity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::SetMessageTargetIdentity
// Il2CppName: SetMessageTargetIdentity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Runtime::Remoting::Messaging::IMessage*, ::System::Runtime::Remoting::Identity*)>(&System::Runtime::Remoting::RemotingServices::SetMessageTargetIdentity)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting.Messaging", "IMessage")->byval_arg;
    static auto* ident = &::il2cpp_utils::GetClassFromName("System.Runtime.Remoting", "Identity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "SetMessageTargetIdentity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg, ident});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::UpdateOutArgObject
// Il2CppName: UpdateOutArgObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Reflection::ParameterInfo*, ::Il2CppObject*, ::Il2CppObject*)>(&System::Runtime::Remoting::RemotingServices::UpdateOutArgObject)> {
  static const MethodInfo* get() {
    static auto* pi = &::il2cpp_utils::GetClassFromName("System.Reflection", "ParameterInfo")->byval_arg;
    static auto* local = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* remote = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "UpdateOutArgObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pi, local, remote});
  }
};
// Writing MetadataGetter for method: System::Runtime::Remoting::RemotingServices::GetNormalizedUri
// Il2CppName: GetNormalizedUri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&System::Runtime::Remoting::RemotingServices::GetNormalizedUri)> {
  static const MethodInfo* get() {
    static auto* uri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::Remoting::RemotingServices*), "GetNormalizedUri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uri});
  }
};
