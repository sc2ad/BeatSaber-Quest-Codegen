// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Runtime.CompilerServices.LoadHint
#include "System/Runtime/CompilerServices/LoadHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: System.Runtime.CompilerServices
namespace System::Runtime::CompilerServices {
  // Forward declaring type: DefaultDependencyAttribute
  class DefaultDependencyAttribute;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Runtime::CompilerServices::DefaultDependencyAttribute);
DEFINE_IL2CPP_ARG_TYPE(::System::Runtime::CompilerServices::DefaultDependencyAttribute*, "System.Runtime.CompilerServices", "DefaultDependencyAttribute");
// Type namespace: System.Runtime.CompilerServices
namespace System::Runtime::CompilerServices {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.CompilerServices.DefaultDependencyAttribute
  // [TokenAttribute] Offset: FFFFFFFF
  // [AttributeUsageAttribute] Offset: 103D79C
  class DefaultDependencyAttribute : public ::System::Attribute {
    public:
    public:
    // private System.Runtime.CompilerServices.LoadHint loadHint
    // Size: 0x4
    // Offset: 0x10
    ::System::Runtime::CompilerServices::LoadHint loadHint;
    // Field size check
    static_assert(sizeof(::System::Runtime::CompilerServices::LoadHint) == 0x4);
    public:
    // Creating conversion operator: operator ::System::Runtime::CompilerServices::LoadHint
    constexpr operator ::System::Runtime::CompilerServices::LoadHint() const noexcept {
      return loadHint;
    }
    // Get instance field reference: private System.Runtime.CompilerServices.LoadHint loadHint
    [[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::LoadHint& dyn_loadHint();
    // public System.Void .ctor(System.Runtime.CompilerServices.LoadHint loadHintArgument)
    // Offset: 0x1D87950
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DefaultDependencyAttribute* New_ctor(::System::Runtime::CompilerServices::LoadHint loadHintArgument) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::DefaultDependencyAttribute::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DefaultDependencyAttribute*, creationType>(loadHintArgument)));
    }
  }; // System.Runtime.CompilerServices.DefaultDependencyAttribute
  #pragma pack(pop)
  static check_size<sizeof(DefaultDependencyAttribute), 16 + sizeof(::System::Runtime::CompilerServices::LoadHint)> __System_Runtime_CompilerServices_DefaultDependencyAttributeSizeCheck;
  static_assert(sizeof(DefaultDependencyAttribute) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Runtime::CompilerServices::DefaultDependencyAttribute::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
