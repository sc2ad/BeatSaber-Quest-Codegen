// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Runtime.CompilerServices.FormattableStringFactory
#include "System/Runtime/CompilerServices/FormattableStringFactory.hpp"
// Including type: System.FormattableString
#include "System/FormattableString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IFormatProvider
  class IFormatProvider;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString);
DEFINE_IL2CPP_ARG_TYPE(::System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString*, "System.Runtime.CompilerServices", "FormattableStringFactory/ConcreteFormattableString");
// Type namespace: System.Runtime.CompilerServices
namespace System::Runtime::CompilerServices {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: System.Runtime.CompilerServices.FormattableStringFactory/System.Runtime.CompilerServices.ConcreteFormattableString
  // [TokenAttribute] Offset: FFFFFFFF
  class FormattableStringFactory::ConcreteFormattableString : public ::System::FormattableString {
    public:
    public:
    // private readonly System.String _format
    // Size: 0x8
    // Offset: 0x10
    ::StringW format;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private readonly System.Object[] _arguments
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::Il2CppObject*> arguments;
    // Field size check
    static_assert(sizeof(::ArrayW<::Il2CppObject*>) == 0x8);
    public:
    // Get instance field reference: private readonly System.String _format
    [[deprecated("Use field access instead!")]] ::StringW& dyn__format();
    // Get instance field reference: private readonly System.Object[] _arguments
    [[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& dyn__arguments();
    // System.Void .ctor(System.String format, System.Object[] arguments)
    // Offset: 0xF092C0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FormattableStringFactory::ConcreteFormattableString* New_ctor(::StringW format, ::ArrayW<::Il2CppObject*> arguments) {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FormattableStringFactory::ConcreteFormattableString*, creationType>(format, arguments)));
    }
    // public override System.String get_Format()
    // Offset: 0xF092F8
    // Implemented from: System.FormattableString
    // Base method: System.String FormattableString::get_Format()
    ::StringW get_Format();
    // public override System.Int32 get_ArgumentCount()
    // Offset: 0xF09308
    // Implemented from: System.FormattableString
    // Base method: System.Int32 FormattableString::get_ArgumentCount()
    int get_ArgumentCount();
    // public override System.Object[] GetArguments()
    // Offset: 0xF09300
    // Implemented from: System.FormattableString
    // Base method: System.Object[] FormattableString::GetArguments()
    ::ArrayW<::Il2CppObject*> GetArguments();
    // public override System.Object GetArgument(System.Int32 index)
    // Offset: 0xF09324
    // Implemented from: System.FormattableString
    // Base method: System.Object FormattableString::GetArgument(System.Int32 index)
    ::Il2CppObject* GetArgument(int index);
    // public override System.String ToString(System.IFormatProvider formatProvider)
    // Offset: 0xF09360
    // Implemented from: System.FormattableString
    // Base method: System.String FormattableString::ToString(System.IFormatProvider formatProvider)
    ::StringW ToString(::System::IFormatProvider* formatProvider);
  }; // System.Runtime.CompilerServices.FormattableStringFactory/System.Runtime.CompilerServices.ConcreteFormattableString
  #pragma pack(pop)
  static check_size<sizeof(FormattableStringFactory::ConcreteFormattableString), 24 + sizeof(::ArrayW<::Il2CppObject*>)> __System_Runtime_CompilerServices_FormattableStringFactory_ConcreteFormattableStringSizeCheck;
  static_assert(sizeof(FormattableStringFactory::ConcreteFormattableString) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::get_Format
// Il2CppName: get_Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::*)()>(&System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::get_Format)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString*), "get_Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::get_ArgumentCount
// Il2CppName: get_ArgumentCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::*)()>(&System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::get_ArgumentCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString*), "get_ArgumentCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::GetArguments
// Il2CppName: GetArguments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppObject*> (System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::*)()>(&System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::GetArguments)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString*), "GetArguments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::GetArgument
// Il2CppName: GetArgument
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::*)(int)>(&System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::GetArgument)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString*), "GetArgument", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::*)(::System::IFormatProvider*)>(&System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString::ToString)> {
  static const MethodInfo* get() {
    static auto* formatProvider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Runtime::CompilerServices::FormattableStringFactory::ConcreteFormattableString*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{formatProvider});
  }
};
