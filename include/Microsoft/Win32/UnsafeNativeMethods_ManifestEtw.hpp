// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Microsoft::Win32
namespace Microsoft::Win32 {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Guid
  struct Guid;
}
// Forward declaring namespace: System::Diagnostics::Tracing
namespace System::Diagnostics::Tracing {
  // Forward declaring type: EventDescriptor
  struct EventDescriptor;
  // Forward declaring type: EventData
  struct EventProvider_EventData;
}
// Completed forward declares
// Type namespace: Microsoft.Win32
namespace Microsoft::Win32 {
  // Forward declaring type: ManifestEtw
  class UnsafeNativeMethods_ManifestEtw;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw);
DEFINE_IL2CPP_ARG_TYPE(::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw*, "Microsoft.Win32", "UnsafeNativeMethods/ManifestEtw");
// Type namespace: Microsoft.Win32
namespace Microsoft::Win32 {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Microsoft.Win32.UnsafeNativeMethods/Microsoft.Win32.ManifestEtw
  // [TokenAttribute] Offset: FFFFFFFF
  class UnsafeNativeMethods_ManifestEtw : public ::Il2CppObject {
    public:
    // Nested type: ::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EtwEnableCallback
    class EtwEnableCallback;
    // Nested type: ::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EVENT_FILTER_DESCRIPTOR
    struct EVENT_FILTER_DESCRIPTOR;
    // Nested type: ::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::ActivityControl
    struct ActivityControl;
    // Nested type: ::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EVENT_INFO_CLASS
    struct EVENT_INFO_CLASS;
    // Nested type: ::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::TRACE_QUERY_INFO_CLASS
    struct TRACE_QUERY_INFO_CLASS;
    // Nested type: ::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::TRACE_GUID_INFO
    struct TRACE_GUID_INFO;
    // Nested type: ::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::TRACE_PROVIDER_INSTANCE_INFO
    struct TRACE_PROVIDER_INSTANCE_INFO;
    // Nested type: ::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::TRACE_ENABLE_INFO
    struct TRACE_ENABLE_INFO;
    // static System.UInt32 EventRegister(in System.Guid providerId, in Microsoft.Win32.UnsafeNativeMethods/Microsoft.Win32.ManifestEtw/Microsoft.Win32.EtwEnableCallback enableCallback, in System.Void* callbackContext, in System.Int64 registrationHandle)
    // Offset: 0x135A348
    static uint EventRegister(ByRef<::System::Guid> providerId, ByRef<::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EtwEnableCallback*> enableCallback, ByRef<void*> callbackContext, ByRef<int64_t> registrationHandle);
    // static System.UInt32 EventUnregister(in System.Int64 registrationHandle)
    // Offset: 0x135A3FC
    static uint EventUnregister(ByRef<int64_t> registrationHandle);
    // static System.Int32 EventWriteTransferWrapper(System.Int64 registrationHandle, ref System.Diagnostics.Tracing.EventDescriptor eventDescriptor, System.Guid* activityId, System.Guid* relatedActivityId, System.Int32 userDataCount, System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.EventData* userData)
    // Offset: 0x135A480
    static int EventWriteTransferWrapper(int64_t registrationHandle, ByRef<::System::Diagnostics::Tracing::EventDescriptor> eventDescriptor, ::System::Guid* activityId, ::System::Guid* relatedActivityId, int userDataCount, ::System::Diagnostics::Tracing::EventProvider_EventData* userData);
    // static private System.Int32 EventWriteTransfer(in System.Int64 registrationHandle, in System.Diagnostics.Tracing.EventDescriptor eventDescriptor, in System.Guid* activityId, in System.Guid* relatedActivityId, in System.Int32 userDataCount, in System.Diagnostics.Tracing.EventProvider/System.Diagnostics.Tracing.EventData* userData)
    // Offset: 0x135A574
    static int EventWriteTransfer(ByRef<int64_t> registrationHandle, ByRef<::System::Diagnostics::Tracing::EventDescriptor> eventDescriptor, ByRef<::System::Guid*> activityId, ByRef<::System::Guid*> relatedActivityId, ByRef<int> userDataCount, ByRef<::System::Diagnostics::Tracing::EventProvider_EventData*> userData);
    // static System.Int32 EventActivityIdControl(in Microsoft.Win32.UnsafeNativeMethods/Microsoft.Win32.ManifestEtw/Microsoft.Win32.ActivityControl ControlCode, in System.Guid ActivityId)
    // Offset: 0x135A638
    static int EventActivityIdControl(ByRef<::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::ActivityControl> ControlCode, ByRef<::System::Guid> ActivityId);
    // static System.Int32 EventSetInformation(in System.Int64 registrationHandle, in Microsoft.Win32.UnsafeNativeMethods/Microsoft.Win32.ManifestEtw/Microsoft.Win32.EVENT_INFO_CLASS informationClass, in System.Void* eventInformation, in System.Int32 informationLength)
    // Offset: 0x135A6C8
    static int EventSetInformation(ByRef<int64_t> registrationHandle, ByRef<::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EVENT_INFO_CLASS> informationClass, ByRef<void*> eventInformation, ByRef<int> informationLength);
    // static System.Int32 EnumerateTraceGuidsEx(Microsoft.Win32.UnsafeNativeMethods/Microsoft.Win32.ManifestEtw/Microsoft.Win32.TRACE_QUERY_INFO_CLASS TraceQueryInfoClass, System.Void* InBuffer, System.Int32 InBufferSize, System.Void* OutBuffer, System.Int32 OutBufferSize, ref System.Int32 ReturnLength)
    // Offset: 0x135A774
    static int EnumerateTraceGuidsEx(::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::TRACE_QUERY_INFO_CLASS TraceQueryInfoClass, void* InBuffer, int InBufferSize, void* OutBuffer, int OutBufferSize, ByRef<int> ReturnLength);
  }; // Microsoft.Win32.UnsafeNativeMethods/Microsoft.Win32.ManifestEtw
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EventRegister
// Il2CppName: EventRegister
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(ByRef<::System::Guid>, ByRef<::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EtwEnableCallback*>, ByRef<void*>, ByRef<int64_t>)>(&Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EventRegister)> {
  static const MethodInfo* get() {
    static auto* providerId = &::il2cpp_utils::GetClassFromName("System", "Guid")->this_arg;
    static auto* enableCallback = &::il2cpp_utils::GetClassFromName("Microsoft.Win32", "UnsafeNativeMethods/ManifestEtw/EtwEnableCallback")->this_arg;
    static auto* callbackContext = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->this_arg;
    static auto* registrationHandle = &::il2cpp_utils::GetClassFromName("System", "Int64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Microsoft::Win32::UnsafeNativeMethods_ManifestEtw*), "EventRegister", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{providerId, enableCallback, callbackContext, registrationHandle});
  }
};
// Writing MetadataGetter for method: Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EventUnregister
// Il2CppName: EventUnregister
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(ByRef<int64_t>)>(&Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EventUnregister)> {
  static const MethodInfo* get() {
    static auto* registrationHandle = &::il2cpp_utils::GetClassFromName("System", "Int64")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Microsoft::Win32::UnsafeNativeMethods_ManifestEtw*), "EventUnregister", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{registrationHandle});
  }
};
// Writing MetadataGetter for method: Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EventWriteTransferWrapper
// Il2CppName: EventWriteTransferWrapper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int64_t, ByRef<::System::Diagnostics::Tracing::EventDescriptor>, ::System::Guid*, ::System::Guid*, int, ::System::Diagnostics::Tracing::EventProvider_EventData*)>(&Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EventWriteTransferWrapper)> {
  static const MethodInfo* get() {
    static auto* registrationHandle = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* eventDescriptor = &::il2cpp_utils::GetClassFromName("System.Diagnostics.Tracing", "EventDescriptor")->this_arg;
    static auto* activityId = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Guid"))->byval_arg;
    static auto* relatedActivityId = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Guid"))->byval_arg;
    static auto* userDataCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* userData = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System.Diagnostics.Tracing", "EventProvider/EventData"))->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Microsoft::Win32::UnsafeNativeMethods_ManifestEtw*), "EventWriteTransferWrapper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{registrationHandle, eventDescriptor, activityId, relatedActivityId, userDataCount, userData});
  }
};
// Writing MetadataGetter for method: Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EventWriteTransfer
// Il2CppName: EventWriteTransfer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<int64_t>, ByRef<::System::Diagnostics::Tracing::EventDescriptor>, ByRef<::System::Guid*>, ByRef<::System::Guid*>, ByRef<int>, ByRef<::System::Diagnostics::Tracing::EventProvider_EventData*>)>(&Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EventWriteTransfer)> {
  static const MethodInfo* get() {
    static auto* registrationHandle = &::il2cpp_utils::GetClassFromName("System", "Int64")->this_arg;
    static auto* eventDescriptor = &::il2cpp_utils::GetClassFromName("System.Diagnostics.Tracing", "EventDescriptor")->this_arg;
    static auto* activityId = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Guid"))->this_arg;
    static auto* relatedActivityId = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Guid"))->this_arg;
    static auto* userDataCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* userData = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System.Diagnostics.Tracing", "EventProvider/EventData"))->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Microsoft::Win32::UnsafeNativeMethods_ManifestEtw*), "EventWriteTransfer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{registrationHandle, eventDescriptor, activityId, relatedActivityId, userDataCount, userData});
  }
};
// Writing MetadataGetter for method: Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EventActivityIdControl
// Il2CppName: EventActivityIdControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::ActivityControl>, ByRef<::System::Guid>)>(&Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EventActivityIdControl)> {
  static const MethodInfo* get() {
    static auto* ControlCode = &::il2cpp_utils::GetClassFromName("Microsoft.Win32", "UnsafeNativeMethods/ManifestEtw/ActivityControl")->this_arg;
    static auto* ActivityId = &::il2cpp_utils::GetClassFromName("System", "Guid")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Microsoft::Win32::UnsafeNativeMethods_ManifestEtw*), "EventActivityIdControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ControlCode, ActivityId});
  }
};
// Writing MetadataGetter for method: Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EventSetInformation
// Il2CppName: EventSetInformation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(ByRef<int64_t>, ByRef<::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EVENT_INFO_CLASS>, ByRef<void*>, ByRef<int>)>(&Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EventSetInformation)> {
  static const MethodInfo* get() {
    static auto* registrationHandle = &::il2cpp_utils::GetClassFromName("System", "Int64")->this_arg;
    static auto* informationClass = &::il2cpp_utils::GetClassFromName("Microsoft.Win32", "UnsafeNativeMethods/ManifestEtw/EVENT_INFO_CLASS")->this_arg;
    static auto* eventInformation = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->this_arg;
    static auto* informationLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Microsoft::Win32::UnsafeNativeMethods_ManifestEtw*), "EventSetInformation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{registrationHandle, informationClass, eventInformation, informationLength});
  }
};
// Writing MetadataGetter for method: Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EnumerateTraceGuidsEx
// Il2CppName: EnumerateTraceGuidsEx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::TRACE_QUERY_INFO_CLASS, void*, int, void*, int, ByRef<int>)>(&Microsoft::Win32::UnsafeNativeMethods_ManifestEtw::EnumerateTraceGuidsEx)> {
  static const MethodInfo* get() {
    static auto* TraceQueryInfoClass = &::il2cpp_utils::GetClassFromName("Microsoft.Win32", "UnsafeNativeMethods/ManifestEtw/TRACE_QUERY_INFO_CLASS")->byval_arg;
    static auto* InBuffer = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* InBufferSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* OutBuffer = &il2cpp_functions::Class_GetPtrClass(::il2cpp_utils::GetClassFromName("System", "Void"))->byval_arg;
    static auto* OutBufferSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ReturnLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Microsoft::Win32::UnsafeNativeMethods_ManifestEtw*), "EnumerateTraceGuidsEx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{TraceQueryInfoClass, InBuffer, InBufferSize, OutBuffer, OutBufferSize, ReturnLength});
  }
};
