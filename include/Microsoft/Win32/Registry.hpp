// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
#include "extern/beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Microsoft::Win32
namespace Microsoft::Win32 {
  // Forward declaring type: RegistryKey
  class RegistryKey;
}
// Completed forward declares
// Type namespace: Microsoft.Win32
namespace Microsoft::Win32 {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Microsoft.Win32.Registry
  // [TokenAttribute] Offset: FFFFFFFF
  // [ComVisibleAttribute] Offset: E5B7FC
  class Registry : public ::Il2CppObject {
    public:
    // Creating value type constructor for type: Registry
    Registry() noexcept {}
    // Get static field: static public readonly Microsoft.Win32.RegistryKey ClassesRoot
    static Microsoft::Win32::RegistryKey* _get_ClassesRoot();
    // Set static field: static public readonly Microsoft.Win32.RegistryKey ClassesRoot
    static void _set_ClassesRoot(Microsoft::Win32::RegistryKey* value);
    // Get static field: static public readonly Microsoft.Win32.RegistryKey CurrentConfig
    static Microsoft::Win32::RegistryKey* _get_CurrentConfig();
    // Set static field: static public readonly Microsoft.Win32.RegistryKey CurrentConfig
    static void _set_CurrentConfig(Microsoft::Win32::RegistryKey* value);
    // Get static field: static public readonly Microsoft.Win32.RegistryKey CurrentUser
    static Microsoft::Win32::RegistryKey* _get_CurrentUser();
    // Set static field: static public readonly Microsoft.Win32.RegistryKey CurrentUser
    static void _set_CurrentUser(Microsoft::Win32::RegistryKey* value);
    // [ObsoleteAttribute] Offset: 0xE62924
    // Get static field: static public readonly Microsoft.Win32.RegistryKey DynData
    static Microsoft::Win32::RegistryKey* _get_DynData();
    // Set static field: static public readonly Microsoft.Win32.RegistryKey DynData
    static void _set_DynData(Microsoft::Win32::RegistryKey* value);
    // Get static field: static public readonly Microsoft.Win32.RegistryKey LocalMachine
    static Microsoft::Win32::RegistryKey* _get_LocalMachine();
    // Set static field: static public readonly Microsoft.Win32.RegistryKey LocalMachine
    static void _set_LocalMachine(Microsoft::Win32::RegistryKey* value);
    // Get static field: static public readonly Microsoft.Win32.RegistryKey PerformanceData
    static Microsoft::Win32::RegistryKey* _get_PerformanceData();
    // Set static field: static public readonly Microsoft.Win32.RegistryKey PerformanceData
    static void _set_PerformanceData(Microsoft::Win32::RegistryKey* value);
    // Get static field: static public readonly Microsoft.Win32.RegistryKey Users
    static Microsoft::Win32::RegistryKey* _get_Users();
    // Set static field: static public readonly Microsoft.Win32.RegistryKey Users
    static void _set_Users(Microsoft::Win32::RegistryKey* value);
    // static private System.Void .cctor()
    // Offset: 0x1C2EDB8
    static void _cctor();
  }; // Microsoft.Win32.Registry
  #pragma pack(pop)
}
#include "extern/beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(Microsoft::Win32::Registry*, "Microsoft.Win32", "Registry");
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Microsoft::Win32::Registry::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Microsoft::Win32::Registry::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Microsoft::Win32::Registry*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
