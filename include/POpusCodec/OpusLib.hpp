// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: POpusCodec
namespace POpusCodec {
  // Forward declaring type: OpusLib
  class OpusLib;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::POpusCodec::OpusLib);
DEFINE_IL2CPP_ARG_TYPE(::POpusCodec::OpusLib*, "POpusCodec", "OpusLib");
// Type namespace: POpusCodec
namespace POpusCodec {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: POpusCodec.OpusLib
  // [TokenAttribute] Offset: FFFFFFFF
  class OpusLib : public ::Il2CppObject {
    public:
    // static public System.String get_Version()
    // Offset: 0x115DA28
    static ::StringW get_Version();
  }; // POpusCodec.OpusLib
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: POpusCodec::OpusLib::get_Version
// Il2CppName: get_Version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&POpusCodec::OpusLib::get_Version)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(POpusCodec::OpusLib*), "get_Version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
