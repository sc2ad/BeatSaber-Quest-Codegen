// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: POpusCodec.Enums
namespace POpusCodec::Enums {
  // Forward declaring type: Bandwidth
  struct Bandwidth;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::POpusCodec::Enums::Bandwidth, "POpusCodec.Enums", "Bandwidth");
// Type namespace: POpusCodec.Enums
namespace POpusCodec::Enums {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: POpusCodec.Enums.Bandwidth
  // [TokenAttribute] Offset: FFFFFFFF
  struct Bandwidth/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: Bandwidth
    constexpr Bandwidth(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public POpusCodec.Enums.Bandwidth Narrowband
    static constexpr const int Narrowband = 1101;
    // Get static field: static public POpusCodec.Enums.Bandwidth Narrowband
    static ::POpusCodec::Enums::Bandwidth _get_Narrowband();
    // Set static field: static public POpusCodec.Enums.Bandwidth Narrowband
    static void _set_Narrowband(::POpusCodec::Enums::Bandwidth value);
    // static field const value: static public POpusCodec.Enums.Bandwidth Mediumband
    static constexpr const int Mediumband = 1102;
    // Get static field: static public POpusCodec.Enums.Bandwidth Mediumband
    static ::POpusCodec::Enums::Bandwidth _get_Mediumband();
    // Set static field: static public POpusCodec.Enums.Bandwidth Mediumband
    static void _set_Mediumband(::POpusCodec::Enums::Bandwidth value);
    // static field const value: static public POpusCodec.Enums.Bandwidth Wideband
    static constexpr const int Wideband = 1103;
    // Get static field: static public POpusCodec.Enums.Bandwidth Wideband
    static ::POpusCodec::Enums::Bandwidth _get_Wideband();
    // Set static field: static public POpusCodec.Enums.Bandwidth Wideband
    static void _set_Wideband(::POpusCodec::Enums::Bandwidth value);
    // static field const value: static public POpusCodec.Enums.Bandwidth SuperWideband
    static constexpr const int SuperWideband = 1104;
    // Get static field: static public POpusCodec.Enums.Bandwidth SuperWideband
    static ::POpusCodec::Enums::Bandwidth _get_SuperWideband();
    // Set static field: static public POpusCodec.Enums.Bandwidth SuperWideband
    static void _set_SuperWideband(::POpusCodec::Enums::Bandwidth value);
    // static field const value: static public POpusCodec.Enums.Bandwidth Fullband
    static constexpr const int Fullband = 1105;
    // Get static field: static public POpusCodec.Enums.Bandwidth Fullband
    static ::POpusCodec::Enums::Bandwidth _get_Fullband();
    // Set static field: static public POpusCodec.Enums.Bandwidth Fullband
    static void _set_Fullband(::POpusCodec::Enums::Bandwidth value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // POpusCodec.Enums.Bandwidth
  #pragma pack(pop)
  static check_size<sizeof(Bandwidth), 0 + sizeof(int)> __POpusCodec_Enums_BandwidthSizeCheck;
  static_assert(sizeof(Bandwidth) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
