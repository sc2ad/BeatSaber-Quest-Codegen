// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: POpusCodec.Enums
namespace POpusCodec::Enums {
  // Forward declaring type: Complexity
  struct Complexity;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::POpusCodec::Enums::Complexity, "POpusCodec.Enums", "Complexity");
// Type namespace: POpusCodec.Enums
namespace POpusCodec::Enums {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: POpusCodec.Enums.Complexity
  // [TokenAttribute] Offset: FFFFFFFF
  struct Complexity/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: Complexity
    constexpr Complexity(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public POpusCodec.Enums.Complexity Complexity0
    static constexpr const int Complexity0 = 0;
    // Get static field: static public POpusCodec.Enums.Complexity Complexity0
    static ::POpusCodec::Enums::Complexity _get_Complexity0();
    // Set static field: static public POpusCodec.Enums.Complexity Complexity0
    static void _set_Complexity0(::POpusCodec::Enums::Complexity value);
    // static field const value: static public POpusCodec.Enums.Complexity Complexity1
    static constexpr const int Complexity1 = 1;
    // Get static field: static public POpusCodec.Enums.Complexity Complexity1
    static ::POpusCodec::Enums::Complexity _get_Complexity1();
    // Set static field: static public POpusCodec.Enums.Complexity Complexity1
    static void _set_Complexity1(::POpusCodec::Enums::Complexity value);
    // static field const value: static public POpusCodec.Enums.Complexity Complexity2
    static constexpr const int Complexity2 = 2;
    // Get static field: static public POpusCodec.Enums.Complexity Complexity2
    static ::POpusCodec::Enums::Complexity _get_Complexity2();
    // Set static field: static public POpusCodec.Enums.Complexity Complexity2
    static void _set_Complexity2(::POpusCodec::Enums::Complexity value);
    // static field const value: static public POpusCodec.Enums.Complexity Complexity3
    static constexpr const int Complexity3 = 3;
    // Get static field: static public POpusCodec.Enums.Complexity Complexity3
    static ::POpusCodec::Enums::Complexity _get_Complexity3();
    // Set static field: static public POpusCodec.Enums.Complexity Complexity3
    static void _set_Complexity3(::POpusCodec::Enums::Complexity value);
    // static field const value: static public POpusCodec.Enums.Complexity Complexity4
    static constexpr const int Complexity4 = 4;
    // Get static field: static public POpusCodec.Enums.Complexity Complexity4
    static ::POpusCodec::Enums::Complexity _get_Complexity4();
    // Set static field: static public POpusCodec.Enums.Complexity Complexity4
    static void _set_Complexity4(::POpusCodec::Enums::Complexity value);
    // static field const value: static public POpusCodec.Enums.Complexity Complexity5
    static constexpr const int Complexity5 = 5;
    // Get static field: static public POpusCodec.Enums.Complexity Complexity5
    static ::POpusCodec::Enums::Complexity _get_Complexity5();
    // Set static field: static public POpusCodec.Enums.Complexity Complexity5
    static void _set_Complexity5(::POpusCodec::Enums::Complexity value);
    // static field const value: static public POpusCodec.Enums.Complexity Complexity6
    static constexpr const int Complexity6 = 6;
    // Get static field: static public POpusCodec.Enums.Complexity Complexity6
    static ::POpusCodec::Enums::Complexity _get_Complexity6();
    // Set static field: static public POpusCodec.Enums.Complexity Complexity6
    static void _set_Complexity6(::POpusCodec::Enums::Complexity value);
    // static field const value: static public POpusCodec.Enums.Complexity Complexity7
    static constexpr const int Complexity7 = 7;
    // Get static field: static public POpusCodec.Enums.Complexity Complexity7
    static ::POpusCodec::Enums::Complexity _get_Complexity7();
    // Set static field: static public POpusCodec.Enums.Complexity Complexity7
    static void _set_Complexity7(::POpusCodec::Enums::Complexity value);
    // static field const value: static public POpusCodec.Enums.Complexity Complexity8
    static constexpr const int Complexity8 = 8;
    // Get static field: static public POpusCodec.Enums.Complexity Complexity8
    static ::POpusCodec::Enums::Complexity _get_Complexity8();
    // Set static field: static public POpusCodec.Enums.Complexity Complexity8
    static void _set_Complexity8(::POpusCodec::Enums::Complexity value);
    // static field const value: static public POpusCodec.Enums.Complexity Complexity9
    static constexpr const int Complexity9 = 9;
    // Get static field: static public POpusCodec.Enums.Complexity Complexity9
    static ::POpusCodec::Enums::Complexity _get_Complexity9();
    // Set static field: static public POpusCodec.Enums.Complexity Complexity9
    static void _set_Complexity9(::POpusCodec::Enums::Complexity value);
    // static field const value: static public POpusCodec.Enums.Complexity Complexity10
    static constexpr const int Complexity10 = 10;
    // Get static field: static public POpusCodec.Enums.Complexity Complexity10
    static ::POpusCodec::Enums::Complexity _get_Complexity10();
    // Set static field: static public POpusCodec.Enums.Complexity Complexity10
    static void _set_Complexity10(::POpusCodec::Enums::Complexity value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // POpusCodec.Enums.Complexity
  #pragma pack(pop)
  static check_size<sizeof(Complexity), 0 + sizeof(int)> __POpusCodec_Enums_ComplexitySizeCheck;
  static_assert(sizeof(Complexity) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
