// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: WardrobeItemButton
  class WardrobeItemButton;
  // Forward declaring type: HeadModel
  class HeadModel;
}
// Completed forward declares
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Forward declaring type: Wardrobe
  struct CosmeticsController_Wardrobe;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::CosmeticsController_Wardrobe, "GorillaNetworking", "CosmeticsController/Wardrobe");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: GorillaNetworking.CosmeticsController/GorillaNetworking.Wardrobe
  // [TokenAttribute] Offset: FFFFFFFF
  struct CosmeticsController_Wardrobe/*, public ::System::ValueType*/ {
    public:
    public:
    // public WardrobeItemButton[] wardrobeItemButtons
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<::GlobalNamespace::WardrobeItemButton*> wardrobeItemButtons;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::WardrobeItemButton*>) == 0x8);
    // public HeadModel selfDoll
    // Size: 0x8
    // Offset: 0x8
    ::GlobalNamespace::HeadModel* selfDoll;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::HeadModel*) == 0x8);
    public:
    // Creating value type constructor for type: CosmeticsController_Wardrobe
    constexpr CosmeticsController_Wardrobe(::ArrayW<::GlobalNamespace::WardrobeItemButton*> wardrobeItemButtons_ = ::ArrayW<::GlobalNamespace::WardrobeItemButton*>(static_cast<void*>(nullptr)), ::GlobalNamespace::HeadModel* selfDoll_ = {}) noexcept : wardrobeItemButtons{wardrobeItemButtons_}, selfDoll{selfDoll_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public WardrobeItemButton[] wardrobeItemButtons
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::WardrobeItemButton*>& dyn_wardrobeItemButtons();
    // Get instance field reference: public HeadModel selfDoll
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::HeadModel*& dyn_selfDoll();
  }; // GorillaNetworking.CosmeticsController/GorillaNetworking.Wardrobe
  #pragma pack(pop)
  static check_size<sizeof(CosmeticsController_Wardrobe), 8 + sizeof(::GlobalNamespace::HeadModel*)> __GorillaNetworking_CosmeticsController_WardrobeSizeCheck;
  static_assert(sizeof(CosmeticsController_Wardrobe) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
