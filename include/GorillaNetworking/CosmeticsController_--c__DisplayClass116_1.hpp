// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaNetworking.CosmeticsController
#include "GorillaNetworking/CosmeticsController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PlayFab::ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: CatalogItem
  class CatalogItem;
}
// Forward declaring namespace: GorillaNetworking
namespace GorillaNetworking {
  // Forward declaring type: CosmeticItem
  struct CosmeticsController_CosmeticItem;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::CosmeticsController::$$c__DisplayClass116_1);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::CosmeticsController::$$c__DisplayClass116_1*, "GorillaNetworking", "CosmeticsController/<>c__DisplayClass116_1");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.CosmeticsController/GorillaNetworking.<>c__DisplayClass116_1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class CosmeticsController::$$c__DisplayClass116_1 : public ::Il2CppObject {
    public:
    public:
    // public PlayFab.ClientModels.CatalogItem catalogItem
    // Size: 0x8
    // Offset: 0x10
    ::PlayFab::ClientModels::CatalogItem* catalogItem;
    // Field size check
    static_assert(sizeof(::PlayFab::ClientModels::CatalogItem*) == 0x8);
    public:
    // Creating conversion operator: operator ::PlayFab::ClientModels::CatalogItem*
    constexpr operator ::PlayFab::ClientModels::CatalogItem*() const noexcept {
      return catalogItem;
    }
    // Get instance field reference: public PlayFab.ClientModels.CatalogItem catalogItem
    [[deprecated("Use field access instead!")]] ::PlayFab::ClientModels::CatalogItem*& dyn_catalogItem();
    // public System.Void .ctor()
    // Offset: 0xDC3284
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CosmeticsController::$$c__DisplayClass116_1* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass116_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CosmeticsController::$$c__DisplayClass116_1*, creationType>()));
    }
    // System.Boolean <GetUserCosmeticsAllowed>b__4(GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem x)
    // Offset: 0xDC329C
    bool $GetUserCosmeticsAllowed$b__4(::GorillaNetworking::CosmeticsController_CosmeticItem x);
  }; // GorillaNetworking.CosmeticsController/GorillaNetworking.<>c__DisplayClass116_1
  #pragma pack(pop)
  static check_size<sizeof(CosmeticsController::$$c__DisplayClass116_1), 16 + sizeof(::PlayFab::ClientModels::CatalogItem*)> __GorillaNetworking_CosmeticsController_$$c__DisplayClass116_1SizeCheck;
  static_assert(sizeof(CosmeticsController::$$c__DisplayClass116_1) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$$c__DisplayClass116_1::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$$c__DisplayClass116_1::$GetUserCosmeticsAllowed$b__4
// Il2CppName: <GetUserCosmeticsAllowed>b__4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::$$c__DisplayClass116_1::*)(::GorillaNetworking::CosmeticsController_CosmeticItem)>(&GorillaNetworking::CosmeticsController::$$c__DisplayClass116_1::$GetUserCosmeticsAllowed$b__4)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController::$$c__DisplayClass116_1*), "<GetUserCosmeticsAllowed>b__4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
