// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem
#include "GorillaNetworking/CosmeticsController_CosmeticItem.hpp"
// Including type: GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticSet
#include "GorillaNetworking/CosmeticsController_CosmeticSet.hpp"
// Including type: GorillaNetworking.CosmeticsController/GorillaNetworking.PurchaseItemStages
#include "GorillaNetworking/CosmeticsController_PurchaseItemStages.hpp"
// Including type: GorillaNetworking.CosmeticsController/GorillaNetworking.Wardrobe
#include "GorillaNetworking/CosmeticsController_Wardrobe.hpp"
// Including type: GorillaNetworking.CosmeticsController/GorillaNetworking.ATMStages
#include "GorillaNetworking/CosmeticsController_ATMStages.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GorillaNetworking
namespace GorillaNetworking {
  // Forward declaring type: GorillaComputer
  class GorillaComputer;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: PlayFab::ClientModels
namespace PlayFab::ClientModels {
  // Forward declaring type: CatalogItem
  class CatalogItem;
  // Forward declaring type: UserDataRecord
  class UserDataRecord;
  // Forward declaring type: PurchaseItemResult
  class PurchaseItemResult;
  // Forward declaring type: GetUserDataResult
  class GetUserDataResult;
  // Forward declaring type: ExecuteCloudScriptResult
  class ExecuteCloudScriptResult;
  // Forward declaring type: GetUserInventoryResult
  class GetUserInventoryResult;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: FittingRoomButton
  class FittingRoomButton;
  // Forward declaring type: CosmeticStand
  class CosmeticStand;
  // Forward declaring type: CheckoutCartButton
  class CheckoutCartButton;
  // Forward declaring type: PurchaseItemButton
  class PurchaseItemButton;
  // Forward declaring type: HeadModel
  class HeadModel;
  // Forward declaring type: PurchaseCurrencyButton
  class PurchaseCurrencyButton;
  // Forward declaring type: EarlyAccessButton
  class EarlyAccessButton;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: Oculus::Platform
namespace Oculus::Platform {
  // Forward declaring type: Message
  class Message;
  // Forward declaring type: Message`1<T>
  template<typename T>
  class Message_1;
}
// Forward declaring namespace: Oculus::Platform::Models
namespace Oculus::Platform::Models {
  // Forward declaring type: Purchase
  class Purchase;
}
// Forward declaring namespace: PlayFab
namespace PlayFab {
  // Forward declaring type: PlayFabError
  class PlayFabError;
}
// Completed forward declares
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Forward declaring type: CosmeticsController
  class CosmeticsController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::CosmeticsController);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::CosmeticsController*, "GorillaNetworking", "CosmeticsController");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x540
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.CosmeticsController
  // [TokenAttribute] Offset: FFFFFFFF
  class CosmeticsController : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass102_0
    class $$c__DisplayClass102_0;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass103_0
    class $$c__DisplayClass103_0;
    // Nested type: ::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103
    class $CheckIfMyCosmeticsUpdated$d__103;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass112_0
    class $$c__DisplayClass112_0;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass113_0
    class $$c__DisplayClass113_0;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c
    class $$c;
    // Nested type: ::GorillaNetworking::CosmeticsController::$CheckCanGetDaily$d__114
    class $CheckCanGetDaily$d__114;
    // Nested type: ::GorillaNetworking::CosmeticsController::$GetMyDaily$d__115
    class $GetMyDaily$d__115;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass116_0
    class $$c__DisplayClass116_0;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass116_1
    class $$c__DisplayClass116_1;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass116_2
    class $$c__DisplayClass116_2;
    // Nested type: ::GorillaNetworking::CosmeticsController::$$c__DisplayClass116_3
    class $$c__DisplayClass116_3;
    // Nested type: ::GorillaNetworking::CosmeticsController::$CheckIfQuitPurchase$d__124
    class $CheckIfQuitPurchase$d__124;
    public:
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem> allCosmetics
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>* allCosmetics;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.String,GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem> allCosmeticsDict
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaNetworking::CosmeticsController_CosmeticItem>* allCosmeticsDict;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaNetworking::CosmeticsController_CosmeticItem>*) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.String,System.String> allCosmeticsItemIDsfromDisplayNamesDict
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* allCosmeticsItemIDsfromDisplayNamesDict;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*) == 0x8);
    // public GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem nullItem
    // Size: 0x32
    // Offset: 0x30
    ::GorillaNetworking::CosmeticsController_CosmeticItem nullItem;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController_CosmeticItem) == 0x32);
    // Padding between fields: nullItem and: catalog
    char __padding3[0x6] = {};
    // public System.String catalog
    // Size: 0x8
    // Offset: 0x68
    ::StringW catalog;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public GorillaNetworking.GorillaComputer computer
    // Size: 0x8
    // Offset: 0x70
    ::GorillaNetworking::GorillaComputer* computer;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::GorillaComputer*) == 0x8);
    // private System.String[] tempStringArray
    // Size: 0x8
    // Offset: 0x78
    ::ArrayW<::StringW> tempStringArray;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // private GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem tempItem
    // Size: 0x32
    // Offset: 0x80
    ::GorillaNetworking::CosmeticsController_CosmeticItem tempItem;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController_CosmeticItem) == 0x32);
    // Padding between fields: tempItem and: catalogItems
    char __padding7[0x6] = {};
    // public System.Collections.Generic.List`1<PlayFab.ClientModels.CatalogItem> catalogItems
    // Size: 0x8
    // Offset: 0xB8
    ::System::Collections::Generic::List_1<::PlayFab::ClientModels::CatalogItem*>* catalogItems;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::PlayFab::ClientModels::CatalogItem*>*) == 0x8);
    // public System.Boolean tryTwice
    // Size: 0x1
    // Offset: 0xC0
    bool tryTwice;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: tryTwice and: tryOnSet
    char __padding9[0x7] = {};
    // public GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticSet tryOnSet
    // Size: 0x112
    // Offset: 0xC8
    ::GorillaNetworking::CosmeticsController_CosmeticSet tryOnSet;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController_CosmeticSet) == 0x112);
    // Padding between fields: tryOnSet and: fittingRoomButtons
    char __padding10[0x6] = {};
    // public FittingRoomButton[] fittingRoomButtons
    // Size: 0x8
    // Offset: 0x1E0
    ::ArrayW<::GlobalNamespace::FittingRoomButton*> fittingRoomButtons;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::FittingRoomButton*>) == 0x8);
    // public CosmeticStand[] cosmeticStands
    // Size: 0x8
    // Offset: 0x1E8
    ::ArrayW<::GlobalNamespace::CosmeticStand*> cosmeticStands;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::CosmeticStand*>) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem> currentCart
    // Size: 0x8
    // Offset: 0x1F0
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>* currentCart;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*) == 0x8);
    // public GorillaNetworking.CosmeticsController/GorillaNetworking.PurchaseItemStages currentPurchaseItemStage
    // Size: 0x4
    // Offset: 0x1F8
    ::GorillaNetworking::CosmeticsController_PurchaseItemStages currentPurchaseItemStage;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController_PurchaseItemStages) == 0x4);
    // Padding between fields: currentPurchaseItemStage and: checkoutCartButtons
    char __padding14[0x4] = {};
    // public CheckoutCartButton[] checkoutCartButtons
    // Size: 0x8
    // Offset: 0x200
    ::ArrayW<::GlobalNamespace::CheckoutCartButton*> checkoutCartButtons;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::CheckoutCartButton*>) == 0x8);
    // public PurchaseItemButton leftPurchaseButton
    // Size: 0x8
    // Offset: 0x208
    ::GlobalNamespace::PurchaseItemButton* leftPurchaseButton;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PurchaseItemButton*) == 0x8);
    // public PurchaseItemButton rightPurchaseButton
    // Size: 0x8
    // Offset: 0x210
    ::GlobalNamespace::PurchaseItemButton* rightPurchaseButton;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PurchaseItemButton*) == 0x8);
    // public UnityEngine.UI.Text purchaseText
    // Size: 0x8
    // Offset: 0x218
    ::UnityEngine::UI::Text* purchaseText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem itemToBuy
    // Size: 0x32
    // Offset: 0x220
    ::GorillaNetworking::CosmeticsController_CosmeticItem itemToBuy;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController_CosmeticItem) == 0x32);
    // Padding between fields: itemToBuy and: checkoutHeadModel
    char __padding19[0x6] = {};
    // public HeadModel checkoutHeadModel
    // Size: 0x8
    // Offset: 0x258
    ::GlobalNamespace::HeadModel* checkoutHeadModel;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::HeadModel*) == 0x8);
    // private System.Collections.Generic.List`1<System.String> playerIDList
    // Size: 0x8
    // Offset: 0x260
    ::System::Collections::Generic::List_1<::StringW>* playerIDList;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // private System.Boolean foundCosmetic
    // Size: 0x1
    // Offset: 0x268
    bool foundCosmetic;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: foundCosmetic and: attempts
    char __padding22[0x3] = {};
    // private System.Int32 attempts
    // Size: 0x4
    // Offset: 0x26C
    int attempts;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.String finalLine
    // Size: 0x8
    // Offset: 0x270
    ::StringW finalLine;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean purchaseLocked
    // Size: 0x1
    // Offset: 0x278
    bool purchaseLocked;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean isLastHandTouchedLeft
    // Size: 0x1
    // Offset: 0x279
    bool isLastHandTouchedLeft;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isLastHandTouchedLeft and: wardrobes
    char __padding26[0x6] = {};
    // public GorillaNetworking.CosmeticsController/GorillaNetworking.Wardrobe[] wardrobes
    // Size: 0x8
    // Offset: 0x280
    ::ArrayW<::GorillaNetworking::CosmeticsController_Wardrobe> wardrobes;
    // Field size check
    static_assert(sizeof(::ArrayW<::GorillaNetworking::CosmeticsController_Wardrobe>) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem> unlockedCosmetics
    // Size: 0x8
    // Offset: 0x288
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>* unlockedCosmetics;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem> unlockedHats
    // Size: 0x8
    // Offset: 0x290
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>* unlockedHats;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem> unlockedFaces
    // Size: 0x8
    // Offset: 0x298
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>* unlockedFaces;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem> unlockedBadges
    // Size: 0x8
    // Offset: 0x2A0
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>* unlockedBadges;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*) == 0x8);
    // public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem> unlockedHoldable
    // Size: 0x8
    // Offset: 0x2A8
    ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>* unlockedHoldable;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*) == 0x8);
    // public System.Int32[] cosmeticsPages
    // Size: 0x8
    // Offset: 0x2B0
    ::ArrayW<int> cosmeticsPages;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem>[] itemLists
    // Size: 0x8
    // Offset: 0x2B8
    ::ArrayW<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*> itemLists;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*>) == 0x8);
    // private System.Int32 wardrobeType
    // Size: 0x4
    // Offset: 0x2C0
    int wardrobeType;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: wardrobeType and: currentWornSet
    char __padding35[0x4] = {};
    // public GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticSet currentWornSet
    // Size: 0x112
    // Offset: 0x2C8
    ::GorillaNetworking::CosmeticsController_CosmeticSet currentWornSet;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController_CosmeticSet) == 0x112);
    // Padding between fields: currentWornSet and: concatStringCosmeticsAllowed
    char __padding36[0x6] = {};
    // public System.String concatStringCosmeticsAllowed
    // Size: 0x8
    // Offset: 0x3E0
    ::StringW concatStringCosmeticsAllowed;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.UI.Text atmText
    // Size: 0x8
    // Offset: 0x3E8
    ::UnityEngine::UI::Text* atmText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public System.String currentAtmString
    // Size: 0x8
    // Offset: 0x3F0
    ::StringW currentAtmString;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.UI.Text infoText
    // Size: 0x8
    // Offset: 0x3F8
    ::UnityEngine::UI::Text* infoText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public UnityEngine.UI.Text earlyAccessText
    // Size: 0x8
    // Offset: 0x400
    ::UnityEngine::UI::Text* earlyAccessText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public UnityEngine.UI.Text[] purchaseButtonText
    // Size: 0x8
    // Offset: 0x408
    ::ArrayW<::UnityEngine::UI::Text*> purchaseButtonText;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::UI::Text*>) == 0x8);
    // public UnityEngine.UI.Text dailyText
    // Size: 0x8
    // Offset: 0x410
    ::UnityEngine::UI::Text* dailyText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public GorillaNetworking.CosmeticsController/GorillaNetworking.ATMStages currentATMStage
    // Size: 0x4
    // Offset: 0x418
    ::GorillaNetworking::CosmeticsController_ATMStages currentATMStage;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController_ATMStages) == 0x4);
    // Padding between fields: currentATMStage and: atmButtonsText
    char __padding44[0x4] = {};
    // public UnityEngine.UI.Text atmButtonsText
    // Size: 0x8
    // Offset: 0x420
    ::UnityEngine::UI::Text* atmButtonsText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public System.Int32 currencyBalance
    // Size: 0x4
    // Offset: 0x428
    int currencyBalance;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: currencyBalance and: currencyName
    char __padding46[0x4] = {};
    // public System.String currencyName
    // Size: 0x8
    // Offset: 0x430
    ::StringW currencyName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public PurchaseCurrencyButton[] purchaseCurrencyButtons
    // Size: 0x8
    // Offset: 0x438
    ::ArrayW<::GlobalNamespace::PurchaseCurrencyButton*> purchaseCurrencyButtons;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::PurchaseCurrencyButton*>) == 0x8);
    // public UnityEngine.UI.Text currencyBoardText
    // Size: 0x8
    // Offset: 0x440
    ::UnityEngine::UI::Text* currencyBoardText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public UnityEngine.UI.Text currencyBoxText
    // Size: 0x8
    // Offset: 0x448
    ::UnityEngine::UI::Text* currencyBoxText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public System.String startingCurrencyBoxTextString
    // Size: 0x8
    // Offset: 0x450
    ::StringW startingCurrencyBoxTextString;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String successfulCurrencyPurchaseTextString
    // Size: 0x8
    // Offset: 0x458
    ::StringW successfulCurrencyPurchaseTextString;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Int32 numShinyRocksToBuy
    // Size: 0x4
    // Offset: 0x460
    int numShinyRocksToBuy;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Single shinyRocksCost
    // Size: 0x4
    // Offset: 0x464
    float shinyRocksCost;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.String itemToPurchase
    // Size: 0x8
    // Offset: 0x468
    ::StringW itemToPurchase;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean confirmedDidntPlayInBeta
    // Size: 0x1
    // Offset: 0x470
    bool confirmedDidntPlayInBeta;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean playedInBeta
    // Size: 0x1
    // Offset: 0x471
    bool playedInBeta;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean gotMyDaily
    // Size: 0x1
    // Offset: 0x472
    bool gotMyDaily;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean checkedDaily
    // Size: 0x1
    // Offset: 0x473
    bool checkedDaily;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: checkedDaily and: currentPurchaseID
    char __padding59[0x4] = {};
    // public System.String currentPurchaseID
    // Size: 0x8
    // Offset: 0x478
    ::StringW currentPurchaseID;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean hasPrice
    // Size: 0x1
    // Offset: 0x480
    bool hasPrice;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: hasPrice and: searchIndex
    char __padding61[0x3] = {};
    // private System.Int32 searchIndex
    // Size: 0x4
    // Offset: 0x484
    int searchIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 iterator
    // Size: 0x4
    // Offset: 0x488
    int iterator;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: iterator and: cosmeticItemVar
    char __padding63[0x4] = {};
    // private GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem cosmeticItemVar
    // Size: 0x32
    // Offset: 0x490
    ::GorillaNetworking::CosmeticsController_CosmeticItem cosmeticItemVar;
    // Field size check
    static_assert(sizeof(::GorillaNetworking::CosmeticsController_CosmeticItem) == 0x32);
    // Padding between fields: cosmeticItemVar and: earlyAccessButton
    char __padding64[0x6] = {};
    // public EarlyAccessButton earlyAccessButton
    // Size: 0x8
    // Offset: 0x4C8
    ::GlobalNamespace::EarlyAccessButton* earlyAccessButton;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::EarlyAccessButton*) == 0x8);
    // private System.String userToken
    // Size: 0x8
    // Offset: 0x4D0
    ::StringW userToken;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean triggerAPI
    // Size: 0x1
    // Offset: 0x4D8
    bool triggerAPI;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: triggerAPI and: cloudscriptAttempts
    char __padding67[0x3] = {};
    // public System.Int32 cloudscriptAttempts
    // Size: 0x4
    // Offset: 0x4DC
    int cloudscriptAttempts;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 userLockAttempts
    // Size: 0x4
    // Offset: 0x4E0
    int userLockAttempts;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 attemptsLimit
    // Size: 0x4
    // Offset: 0x4E4
    int attemptsLimit;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean tryGetPurchasesTwice
    // Size: 0x1
    // Offset: 0x4E8
    bool tryGetPurchasesTwice;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: tryGetPurchasesTwice and: startupSKU
    char __padding71[0x7] = {};
    // public System.String startupSKU
    // Size: 0x8
    // Offset: 0x4F0
    ::StringW startupSKU;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Int32 startupAttempts
    // Size: 0x4
    // Offset: 0x4F8
    int startupAttempts;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean oculusAttemptingToPurchase
    // Size: 0x1
    // Offset: 0x4FC
    bool oculusAttemptingToPurchase;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: oculusAttemptingToPurchase and: debugParameters
    char __padding74[0x3] = {};
    // public System.Boolean[] debugParameters
    // Size: 0x8
    // Offset: 0x500
    ::ArrayW<bool> debugParameters;
    // Field size check
    static_assert(sizeof(::ArrayW<bool>) == 0x8);
    // public System.Boolean hasLockableItem
    // Size: 0x1
    // Offset: 0x508
    bool hasLockableItem;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: hasLockableItem and: currentTime
    char __padding76[0x7] = {};
    // public System.DateTime currentTime
    // Size: 0x8
    // Offset: 0x510
    ::System::DateTime currentTime;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    // public System.String lastDailyLogin
    // Size: 0x8
    // Offset: 0x518
    ::StringW lastDailyLogin;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public PlayFab.ClientModels.UserDataRecord userDataRecord
    // Size: 0x8
    // Offset: 0x520
    ::PlayFab::ClientModels::UserDataRecord* userDataRecord;
    // Field size check
    static_assert(sizeof(::PlayFab::ClientModels::UserDataRecord*) == 0x8);
    // public System.Int32 secondsUntilTomorrow
    // Size: 0x4
    // Offset: 0x528
    int secondsUntilTomorrow;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Single secondsToWaitToCheckDaily
    // Size: 0x4
    // Offset: 0x52C
    float secondsToWaitToCheckDaily;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.String returnString
    // Size: 0x8
    // Offset: 0x530
    ::StringW returnString;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String[] returnStringArray
    // Size: 0x8
    // Offset: 0x538
    ::ArrayW<::StringW> returnStringArray;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get static field: static public GorillaNetworking.CosmeticsController instance
    static ::GorillaNetworking::CosmeticsController* _get_instance();
    // Set static field: static public GorillaNetworking.CosmeticsController instance
    static void _set_instance(::GorillaNetworking::CosmeticsController* value);
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem> allCosmetics
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*& dyn_allCosmetics();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem> allCosmeticsDict
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaNetworking::CosmeticsController_CosmeticItem>*& dyn_allCosmeticsDict();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,System.String> allCosmeticsItemIDsfromDisplayNamesDict
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& dyn_allCosmeticsItemIDsfromDisplayNamesDict();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem nullItem
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController_CosmeticItem& dyn_nullItem();
    // Get instance field reference: public System.String catalog
    [[deprecated("Use field access instead!")]] ::StringW& dyn_catalog();
    // Get instance field reference: public GorillaNetworking.GorillaComputer computer
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaComputer*& dyn_computer();
    // Get instance field reference: private System.String[] tempStringArray
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_tempStringArray();
    // Get instance field reference: private GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem tempItem
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController_CosmeticItem& dyn_tempItem();
    // Get instance field reference: public System.Collections.Generic.List`1<PlayFab.ClientModels.CatalogItem> catalogItems
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ClientModels::CatalogItem*>*& dyn_catalogItems();
    // Get instance field reference: public System.Boolean tryTwice
    [[deprecated("Use field access instead!")]] bool& dyn_tryTwice();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticSet tryOnSet
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController_CosmeticSet& dyn_tryOnSet();
    // Get instance field reference: public FittingRoomButton[] fittingRoomButtons
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::FittingRoomButton*>& dyn_fittingRoomButtons();
    // Get instance field reference: public CosmeticStand[] cosmeticStands
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::CosmeticStand*>& dyn_cosmeticStands();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem> currentCart
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*& dyn_currentCart();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/GorillaNetworking.PurchaseItemStages currentPurchaseItemStage
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController_PurchaseItemStages& dyn_currentPurchaseItemStage();
    // Get instance field reference: public CheckoutCartButton[] checkoutCartButtons
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::CheckoutCartButton*>& dyn_checkoutCartButtons();
    // Get instance field reference: public PurchaseItemButton leftPurchaseButton
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PurchaseItemButton*& dyn_leftPurchaseButton();
    // Get instance field reference: public PurchaseItemButton rightPurchaseButton
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PurchaseItemButton*& dyn_rightPurchaseButton();
    // Get instance field reference: public UnityEngine.UI.Text purchaseText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_purchaseText();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem itemToBuy
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController_CosmeticItem& dyn_itemToBuy();
    // Get instance field reference: public HeadModel checkoutHeadModel
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::HeadModel*& dyn_checkoutHeadModel();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> playerIDList
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_playerIDList();
    // Get instance field reference: private System.Boolean foundCosmetic
    [[deprecated("Use field access instead!")]] bool& dyn_foundCosmetic();
    // Get instance field reference: private System.Int32 attempts
    [[deprecated("Use field access instead!")]] int& dyn_attempts();
    // Get instance field reference: private System.String finalLine
    [[deprecated("Use field access instead!")]] ::StringW& dyn_finalLine();
    // Get instance field reference: private System.Boolean purchaseLocked
    [[deprecated("Use field access instead!")]] bool& dyn_purchaseLocked();
    // Get instance field reference: private System.Boolean isLastHandTouchedLeft
    [[deprecated("Use field access instead!")]] bool& dyn_isLastHandTouchedLeft();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/GorillaNetworking.Wardrobe[] wardrobes
    [[deprecated("Use field access instead!")]] ::ArrayW<::GorillaNetworking::CosmeticsController_Wardrobe>& dyn_wardrobes();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem> unlockedCosmetics
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*& dyn_unlockedCosmetics();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem> unlockedHats
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*& dyn_unlockedHats();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem> unlockedFaces
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*& dyn_unlockedFaces();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem> unlockedBadges
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*& dyn_unlockedBadges();
    // Get instance field reference: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem> unlockedHoldable
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*& dyn_unlockedHoldable();
    // Get instance field reference: public System.Int32[] cosmeticsPages
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_cosmeticsPages();
    // Get instance field reference: private System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem>[] itemLists
    [[deprecated("Use field access instead!")]] ::ArrayW<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController_CosmeticItem>*>& dyn_itemLists();
    // Get instance field reference: private System.Int32 wardrobeType
    [[deprecated("Use field access instead!")]] int& dyn_wardrobeType();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticSet currentWornSet
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController_CosmeticSet& dyn_currentWornSet();
    // Get instance field reference: public System.String concatStringCosmeticsAllowed
    [[deprecated("Use field access instead!")]] ::StringW& dyn_concatStringCosmeticsAllowed();
    // Get instance field reference: public UnityEngine.UI.Text atmText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_atmText();
    // Get instance field reference: public System.String currentAtmString
    [[deprecated("Use field access instead!")]] ::StringW& dyn_currentAtmString();
    // Get instance field reference: public UnityEngine.UI.Text infoText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_infoText();
    // Get instance field reference: public UnityEngine.UI.Text earlyAccessText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_earlyAccessText();
    // Get instance field reference: public UnityEngine.UI.Text[] purchaseButtonText
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::Text*>& dyn_purchaseButtonText();
    // Get instance field reference: public UnityEngine.UI.Text dailyText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_dailyText();
    // Get instance field reference: public GorillaNetworking.CosmeticsController/GorillaNetworking.ATMStages currentATMStage
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController_ATMStages& dyn_currentATMStage();
    // Get instance field reference: public UnityEngine.UI.Text atmButtonsText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_atmButtonsText();
    // Get instance field reference: public System.Int32 currencyBalance
    [[deprecated("Use field access instead!")]] int& dyn_currencyBalance();
    // Get instance field reference: public System.String currencyName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_currencyName();
    // Get instance field reference: public PurchaseCurrencyButton[] purchaseCurrencyButtons
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PurchaseCurrencyButton*>& dyn_purchaseCurrencyButtons();
    // Get instance field reference: public UnityEngine.UI.Text currencyBoardText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_currencyBoardText();
    // Get instance field reference: public UnityEngine.UI.Text currencyBoxText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_currencyBoxText();
    // Get instance field reference: public System.String startingCurrencyBoxTextString
    [[deprecated("Use field access instead!")]] ::StringW& dyn_startingCurrencyBoxTextString();
    // Get instance field reference: public System.String successfulCurrencyPurchaseTextString
    [[deprecated("Use field access instead!")]] ::StringW& dyn_successfulCurrencyPurchaseTextString();
    // Get instance field reference: public System.Int32 numShinyRocksToBuy
    [[deprecated("Use field access instead!")]] int& dyn_numShinyRocksToBuy();
    // Get instance field reference: public System.Single shinyRocksCost
    [[deprecated("Use field access instead!")]] float& dyn_shinyRocksCost();
    // Get instance field reference: public System.String itemToPurchase
    [[deprecated("Use field access instead!")]] ::StringW& dyn_itemToPurchase();
    // Get instance field reference: public System.Boolean confirmedDidntPlayInBeta
    [[deprecated("Use field access instead!")]] bool& dyn_confirmedDidntPlayInBeta();
    // Get instance field reference: public System.Boolean playedInBeta
    [[deprecated("Use field access instead!")]] bool& dyn_playedInBeta();
    // Get instance field reference: public System.Boolean gotMyDaily
    [[deprecated("Use field access instead!")]] bool& dyn_gotMyDaily();
    // Get instance field reference: public System.Boolean checkedDaily
    [[deprecated("Use field access instead!")]] bool& dyn_checkedDaily();
    // Get instance field reference: public System.String currentPurchaseID
    [[deprecated("Use field access instead!")]] ::StringW& dyn_currentPurchaseID();
    // Get instance field reference: public System.Boolean hasPrice
    [[deprecated("Use field access instead!")]] bool& dyn_hasPrice();
    // Get instance field reference: private System.Int32 searchIndex
    [[deprecated("Use field access instead!")]] int& dyn_searchIndex();
    // Get instance field reference: private System.Int32 iterator
    [[deprecated("Use field access instead!")]] int& dyn_iterator();
    // Get instance field reference: private GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem cosmeticItemVar
    [[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController_CosmeticItem& dyn_cosmeticItemVar();
    // Get instance field reference: public EarlyAccessButton earlyAccessButton
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::EarlyAccessButton*& dyn_earlyAccessButton();
    // Get instance field reference: private System.String userToken
    [[deprecated("Use field access instead!")]] ::StringW& dyn_userToken();
    // Get instance field reference: public System.Boolean triggerAPI
    [[deprecated("Use field access instead!")]] bool& dyn_triggerAPI();
    // Get instance field reference: public System.Int32 cloudscriptAttempts
    [[deprecated("Use field access instead!")]] int& dyn_cloudscriptAttempts();
    // Get instance field reference: public System.Int32 userLockAttempts
    [[deprecated("Use field access instead!")]] int& dyn_userLockAttempts();
    // Get instance field reference: public System.Int32 attemptsLimit
    [[deprecated("Use field access instead!")]] int& dyn_attemptsLimit();
    // Get instance field reference: public System.Boolean tryGetPurchasesTwice
    [[deprecated("Use field access instead!")]] bool& dyn_tryGetPurchasesTwice();
    // Get instance field reference: public System.String startupSKU
    [[deprecated("Use field access instead!")]] ::StringW& dyn_startupSKU();
    // Get instance field reference: public System.Int32 startupAttempts
    [[deprecated("Use field access instead!")]] int& dyn_startupAttempts();
    // Get instance field reference: public System.Boolean oculusAttemptingToPurchase
    [[deprecated("Use field access instead!")]] bool& dyn_oculusAttemptingToPurchase();
    // Get instance field reference: public System.Boolean[] debugParameters
    [[deprecated("Use field access instead!")]] ::ArrayW<bool>& dyn_debugParameters();
    // Get instance field reference: public System.Boolean hasLockableItem
    [[deprecated("Use field access instead!")]] bool& dyn_hasLockableItem();
    // Get instance field reference: public System.DateTime currentTime
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn_currentTime();
    // Get instance field reference: public System.String lastDailyLogin
    [[deprecated("Use field access instead!")]] ::StringW& dyn_lastDailyLogin();
    // Get instance field reference: public PlayFab.ClientModels.UserDataRecord userDataRecord
    [[deprecated("Use field access instead!")]] ::PlayFab::ClientModels::UserDataRecord*& dyn_userDataRecord();
    // Get instance field reference: public System.Int32 secondsUntilTomorrow
    [[deprecated("Use field access instead!")]] int& dyn_secondsUntilTomorrow();
    // Get instance field reference: public System.Single secondsToWaitToCheckDaily
    [[deprecated("Use field access instead!")]] float& dyn_secondsToWaitToCheckDaily();
    // Get instance field reference: private System.String returnString
    [[deprecated("Use field access instead!")]] ::StringW& dyn_returnString();
    // Get instance field reference: private System.String[] returnStringArray
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_returnStringArray();
    // public System.Void .ctor()
    // Offset: 0xDBF838
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CosmeticsController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CosmeticsController*, creationType>()));
    }
    // public System.Void Awake()
    // Offset: 0xDB8D24
    void Awake();
    // public System.Void Update()
    // Offset: 0xDB96D0
    void Update();
    // public System.Void PressFittingRoomButton(FittingRoomButton pressedFittingRoomButton, System.Boolean isLeftHand)
    // Offset: 0xDB9798
    void PressFittingRoomButton(::GlobalNamespace::FittingRoomButton* pressedFittingRoomButton, bool isLeftHand);
    // public System.Void PressCosmeticStandButton(CosmeticStand pressedStand)
    // Offset: 0xDBAE78
    void PressCosmeticStandButton(::GlobalNamespace::CosmeticStand* pressedStand);
    // public System.Void PressWardrobeItemButton(GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem cosmeticItem, System.Boolean isLeftHand)
    // Offset: 0xDBB18C
    void PressWardrobeItemButton(::GorillaNetworking::CosmeticsController_CosmeticItem cosmeticItem, bool isLeftHand);
    // public System.Void PressWardrobeFunctionButton(System.String function)
    // Offset: 0xDBB800
    void PressWardrobeFunctionButton(::StringW function);
    // public System.Void PressCheckoutCartButton(CheckoutCartButton pressedCheckoutCartButton, System.Boolean isLeftHand)
    // Offset: 0xDBBF74
    void PressCheckoutCartButton(::GlobalNamespace::CheckoutCartButton* pressedCheckoutCartButton, bool isLeftHand);
    // public System.Void PressPurchaseItemButton(PurchaseItemButton pressedPurchaseItemButton, System.Boolean isLeftHand)
    // Offset: 0xDBD0F4
    void PressPurchaseItemButton(::GlobalNamespace::PurchaseItemButton* pressedPurchaseItemButton, bool isLeftHand);
    // public System.Void PressEarlyAccessButton()
    // Offset: 0xDBD110
    void PressEarlyAccessButton();
    // public System.Void ProcessPurchaseItemState(System.String buttonSide, System.Boolean isLeftHand)
    // Offset: 0xDBCB18
    void ProcessPurchaseItemState(::StringW buttonSide, bool isLeftHand);
    // public System.Void FormattedPurchaseText(System.String finalLineVar)
    // Offset: 0xDBD1F4
    void FormattedPurchaseText(::StringW finalLineVar);
    // public System.Void PurchaseItem()
    // Offset: 0xDBD45C
    void PurchaseItem();
    // private System.Void UnlockItem(System.String itemIdToUnlock)
    // Offset: 0xDBD588
    void UnlockItem(::StringW itemIdToUnlock);
    // private System.Collections.IEnumerator CheckIfMyCosmeticsUpdated(System.String itemToBuyID)
    // Offset: 0xDBD874
    ::System::Collections::IEnumerator* CheckIfMyCosmeticsUpdated(::StringW itemToBuyID);
    // public System.Void UpdateWardrobeModelsAndButtons()
    // Offset: 0xDBBA90
    void UpdateWardrobeModelsAndButtons();
    // public System.Void UpdateShoppingCart()
    // Offset: 0xDBA704
    void UpdateShoppingCart();
    // public GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem GetItemFromDict(System.String itemID)
    // Offset: 0xDBA398
    ::GorillaNetworking::CosmeticsController_CosmeticItem GetItemFromDict(::StringW itemID);
    // public System.String GetItemNameFromDisplayName(System.String displayName)
    // Offset: 0xDBDA64
    ::StringW GetItemNameFromDisplayName(::StringW displayName);
    // public System.Boolean AnyMatch(GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticSet set, GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem item)
    // Offset: 0xDBA43C
    bool AnyMatch(::GorillaNetworking::CosmeticsController_CosmeticSet set, ::GorillaNetworking::CosmeticsController_CosmeticItem item);
    // public System.Void Initialize()
    // Offset: 0xDBDAEC
    void Initialize();
    // public System.Void GetLastDailyLogin()
    // Offset: 0xDBDC38
    void GetLastDailyLogin();
    // public System.Void GetOculusPurchaseLock(System.Boolean clearLock)
    // Offset: 0xDBDD3C
    void GetOculusPurchaseLock(bool clearLock);
    // public System.Void GetOculusPurchaseLockAttempt(System.Boolean clearLock)
    // Offset: 0xDBDD48
    void GetOculusPurchaseLockAttempt(bool clearLock);
    // private System.Void ClearMyLock(System.Int32 attempts)
    // Offset: 0xDBDE88
    void ClearMyLock(int attempts);
    // private System.Collections.IEnumerator CheckCanGetDaily()
    // Offset: 0xDB9660
    ::System::Collections::IEnumerator* CheckCanGetDaily();
    // private System.Collections.IEnumerator GetMyDaily()
    // Offset: 0xDBE0A4
    ::System::Collections::IEnumerator* GetMyDaily();
    // public System.Void GetUserCosmeticsAllowed()
    // Offset: 0xDBDB34
    void GetUserCosmeticsAllowed();
    // public System.Void ProcessATMState(System.String currencyButton)
    // Offset: 0xDBE140
    void ProcessATMState(::StringW currencyButton);
    // public System.Void SwitchToStage(GorillaNetworking.CosmeticsController/GorillaNetworking.ATMStages newStage)
    // Offset: 0xDB9154
    void SwitchToStage(::GorillaNetworking::CosmeticsController_ATMStages newStage);
    // public System.Void PressCurrencyPurchaseButton(System.String currencyPurchaseSize)
    // Offset: 0xDBE438
    void PressCurrencyPurchaseButton(::StringW currencyPurchaseSize);
    // public System.String[] SetToStringArray(GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticSet set)
    // Offset: 0xDBD91C
    ::ArrayW<::StringW> SetToStringArray(::GorillaNetworking::CosmeticsController_CosmeticSet set);
    // public System.Void UpdateCurrencyBoard()
    // Offset: 0xDBE43C
    void UpdateCurrencyBoard();
    // public System.Void GetCurrencyBalance()
    // Offset: 0xDBE710
    void GetCurrencyBalance();
    // public System.Void LeaveSystemMenu()
    // Offset: 0xDBE878
    void LeaveSystemMenu();
    // private System.Collections.IEnumerator CheckIfQuitPurchase()
    // Offset: 0xDBE8B4
    ::System::Collections::IEnumerator* CheckIfQuitPurchase();
    // public System.Void CheckIAPPurchases()
    // Offset: 0xDB96E4
    void CheckIAPPurchases();
    // private System.Void OnGetViewerPurchasesStartup(Oculus.Platform.Message msg)
    // Offset: 0xDBE950
    void OnGetViewerPurchasesStartup(::Oculus::Platform::Message* msg);
    // private System.Void OnGetAccessTokenForStartupIAPCheck(Oculus.Platform.Message msg)
    // Offset: 0xDBEED4
    void OnGetAccessTokenForStartupIAPCheck(::Oculus::Platform::Message* msg);
    // private System.Void OnGetNonceForStartupIAPCheck(Oculus.Platform.Message msg)
    // Offset: 0xDBF020
    void OnGetNonceForStartupIAPCheck(::Oculus::Platform::Message* msg);
    // private System.Void LaunchCheckoutFlowCallback(Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase> msg)
    // Offset: 0xDBF2BC
    void LaunchCheckoutFlowCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>* msg);
    // private System.Void OnGetAccessTokenForCurrencyPurchase(Oculus.Platform.Message msg)
    // Offset: 0xDBF448
    void OnGetAccessTokenForCurrencyPurchase(::Oculus::Platform::Message* msg);
    // private System.Void OnGetNonceForCurrencyPurchase(Oculus.Platform.Message msg)
    // Offset: 0xDBF598
    void OnGetNonceForCurrencyPurchase(::Oculus::Platform::Message* msg);
    // private System.Boolean <ProcessPurchaseItemState>b__99_0(GorillaNetworking.CosmeticsController/GorillaNetworking.CosmeticItem x)
    // Offset: 0xDBFA20
    bool $ProcessPurchaseItemState$b__99_0(::GorillaNetworking::CosmeticsController_CosmeticItem x);
    // private System.Void <PurchaseItem>b__101_0(PlayFab.ClientModels.PurchaseItemResult result)
    // Offset: 0xDBFA30
    void $PurchaseItem$b__101_0(::PlayFab::ClientModels::PurchaseItemResult* result);
    // private System.Void <PurchaseItem>b__101_1(PlayFab.PlayFabError error)
    // Offset: 0xDBFC9C
    void $PurchaseItem$b__101_1(::PlayFab::PlayFabError* error);
    // private System.Void <GetLastDailyLogin>b__110_0(PlayFab.ClientModels.GetUserDataResult result)
    // Offset: 0xDBFCB0
    void $GetLastDailyLogin$b__110_0(::PlayFab::ClientModels::GetUserDataResult* result);
    // private System.Void <GetLastDailyLogin>b__110_1(PlayFab.PlayFabError error)
    // Offset: 0xDBFD78
    void $GetLastDailyLogin$b__110_1(::PlayFab::PlayFabError* error);
    // private System.Void <GetMyDaily>b__115_0(PlayFab.ClientModels.ExecuteCloudScriptResult result)
    // Offset: 0xDBFE38
    void $GetMyDaily$b__115_0(::PlayFab::ClientModels::ExecuteCloudScriptResult* result);
    // private System.Void <GetUserCosmeticsAllowed>b__116_0(PlayFab.ClientModels.GetUserInventoryResult result)
    // Offset: 0xDBFE5C
    void $GetUserCosmeticsAllowed$b__116_0(::PlayFab::ClientModels::GetUserInventoryResult* result);
    // private System.Void <GetUserCosmeticsAllowed>b__116_3(PlayFab.PlayFabError error)
    // Offset: 0xDBFFA0
    void $GetUserCosmeticsAllowed$b__116_3(::PlayFab::PlayFabError* error);
    // private System.Void <GetUserCosmeticsAllowed>b__116_1(PlayFab.PlayFabError error)
    // Offset: 0xDC0060
    void $GetUserCosmeticsAllowed$b__116_1(::PlayFab::PlayFabError* error);
    // private System.Void <GetCurrencyBalance>b__122_0(PlayFab.ClientModels.GetUserInventoryResult result)
    // Offset: 0xDC0120
    void $GetCurrencyBalance$b__122_0(::PlayFab::ClientModels::GetUserInventoryResult* result);
    // private System.Void <OnGetNonceForStartupIAPCheck>b__128_0(PlayFab.ClientModels.ExecuteCloudScriptResult result)
    // Offset: 0xDC0198
    void $OnGetNonceForStartupIAPCheck$b__128_0(::PlayFab::ClientModels::ExecuteCloudScriptResult* result);
    // private System.Void <OnGetNonceForStartupIAPCheck>b__128_1(PlayFab.PlayFabError error)
    // Offset: 0xDC057C
    void $OnGetNonceForStartupIAPCheck$b__128_1(::PlayFab::PlayFabError* error);
    // private System.Void <OnGetNonceForCurrencyPurchase>b__131_0(PlayFab.ClientModels.ExecuteCloudScriptResult result)
    // Offset: 0xDC06E0
    void $OnGetNonceForCurrencyPurchase$b__131_0(::PlayFab::ClientModels::ExecuteCloudScriptResult* result);
    // private System.Void <OnGetNonceForCurrencyPurchase>b__131_1(PlayFab.PlayFabError error)
    // Offset: 0xDC0B58
    void $OnGetNonceForCurrencyPurchase$b__131_1(::PlayFab::PlayFabError* error);
  }; // GorillaNetworking.CosmeticsController
  #pragma pack(pop)
  static check_size<sizeof(CosmeticsController), 1336 + sizeof(::ArrayW<::StringW>)> __GorillaNetworking_CosmeticsControllerSizeCheck;
  static_assert(sizeof(CosmeticsController) == 0x540);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressFittingRoomButton
// Il2CppName: PressFittingRoomButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GlobalNamespace::FittingRoomButton*, bool)>(&GorillaNetworking::CosmeticsController::PressFittingRoomButton)> {
  static const MethodInfo* get() {
    static auto* pressedFittingRoomButton = &::il2cpp_utils::GetClassFromName("", "FittingRoomButton")->byval_arg;
    static auto* isLeftHand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressFittingRoomButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pressedFittingRoomButton, isLeftHand});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressCosmeticStandButton
// Il2CppName: PressCosmeticStandButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GlobalNamespace::CosmeticStand*)>(&GorillaNetworking::CosmeticsController::PressCosmeticStandButton)> {
  static const MethodInfo* get() {
    static auto* pressedStand = &::il2cpp_utils::GetClassFromName("", "CosmeticStand")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressCosmeticStandButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pressedStand});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressWardrobeItemButton
// Il2CppName: PressWardrobeItemButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController_CosmeticItem, bool)>(&GorillaNetworking::CosmeticsController::PressWardrobeItemButton)> {
  static const MethodInfo* get() {
    static auto* cosmeticItem = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    static auto* isLeftHand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressWardrobeItemButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cosmeticItem, isLeftHand});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressWardrobeFunctionButton
// Il2CppName: PressWardrobeFunctionButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::PressWardrobeFunctionButton)> {
  static const MethodInfo* get() {
    static auto* function = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressWardrobeFunctionButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{function});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressCheckoutCartButton
// Il2CppName: PressCheckoutCartButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GlobalNamespace::CheckoutCartButton*, bool)>(&GorillaNetworking::CosmeticsController::PressCheckoutCartButton)> {
  static const MethodInfo* get() {
    static auto* pressedCheckoutCartButton = &::il2cpp_utils::GetClassFromName("", "CheckoutCartButton")->byval_arg;
    static auto* isLeftHand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressCheckoutCartButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pressedCheckoutCartButton, isLeftHand});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressPurchaseItemButton
// Il2CppName: PressPurchaseItemButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GlobalNamespace::PurchaseItemButton*, bool)>(&GorillaNetworking::CosmeticsController::PressPurchaseItemButton)> {
  static const MethodInfo* get() {
    static auto* pressedPurchaseItemButton = &::il2cpp_utils::GetClassFromName("", "PurchaseItemButton")->byval_arg;
    static auto* isLeftHand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressPurchaseItemButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pressedPurchaseItemButton, isLeftHand});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressEarlyAccessButton
// Il2CppName: PressEarlyAccessButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::PressEarlyAccessButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressEarlyAccessButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::ProcessPurchaseItemState
// Il2CppName: ProcessPurchaseItemState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::StringW, bool)>(&GorillaNetworking::CosmeticsController::ProcessPurchaseItemState)> {
  static const MethodInfo* get() {
    static auto* buttonSide = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isLeftHand = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "ProcessPurchaseItemState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buttonSide, isLeftHand});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::FormattedPurchaseText
// Il2CppName: FormattedPurchaseText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::FormattedPurchaseText)> {
  static const MethodInfo* get() {
    static auto* finalLineVar = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "FormattedPurchaseText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{finalLineVar});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PurchaseItem
// Il2CppName: PurchaseItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::PurchaseItem)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PurchaseItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::UnlockItem
// Il2CppName: UnlockItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::UnlockItem)> {
  static const MethodInfo* get() {
    static auto* itemIdToUnlock = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "UnlockItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemIdToUnlock});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CheckIfMyCosmeticsUpdated
// Il2CppName: CheckIfMyCosmeticsUpdated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::CheckIfMyCosmeticsUpdated)> {
  static const MethodInfo* get() {
    static auto* itemToBuyID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "CheckIfMyCosmeticsUpdated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemToBuyID});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::UpdateWardrobeModelsAndButtons
// Il2CppName: UpdateWardrobeModelsAndButtons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::UpdateWardrobeModelsAndButtons)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "UpdateWardrobeModelsAndButtons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::UpdateShoppingCart
// Il2CppName: UpdateShoppingCart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::UpdateShoppingCart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "UpdateShoppingCart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetItemFromDict
// Il2CppName: GetItemFromDict
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GorillaNetworking::CosmeticsController_CosmeticItem (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::GetItemFromDict)> {
  static const MethodInfo* get() {
    static auto* itemID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetItemFromDict", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemID});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetItemNameFromDisplayName
// Il2CppName: GetItemNameFromDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::GetItemNameFromDisplayName)> {
  static const MethodInfo* get() {
    static auto* displayName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetItemNameFromDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{displayName});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::AnyMatch
// Il2CppName: AnyMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController_CosmeticSet, ::GorillaNetworking::CosmeticsController_CosmeticItem)>(&GorillaNetworking::CosmeticsController::AnyMatch)> {
  static const MethodInfo* get() {
    static auto* set = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    static auto* item = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "AnyMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{set, item});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::Initialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetLastDailyLogin
// Il2CppName: GetLastDailyLogin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::GetLastDailyLogin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetLastDailyLogin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetOculusPurchaseLock
// Il2CppName: GetOculusPurchaseLock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(bool)>(&GorillaNetworking::CosmeticsController::GetOculusPurchaseLock)> {
  static const MethodInfo* get() {
    static auto* clearLock = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetOculusPurchaseLock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clearLock});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetOculusPurchaseLockAttempt
// Il2CppName: GetOculusPurchaseLockAttempt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(bool)>(&GorillaNetworking::CosmeticsController::GetOculusPurchaseLockAttempt)> {
  static const MethodInfo* get() {
    static auto* clearLock = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetOculusPurchaseLockAttempt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clearLock});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::ClearMyLock
// Il2CppName: ClearMyLock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(int)>(&GorillaNetworking::CosmeticsController::ClearMyLock)> {
  static const MethodInfo* get() {
    static auto* attempts = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "ClearMyLock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{attempts});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CheckCanGetDaily
// Il2CppName: CheckCanGetDaily
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::CheckCanGetDaily)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "CheckCanGetDaily", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetMyDaily
// Il2CppName: GetMyDaily
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::GetMyDaily)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetMyDaily", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetUserCosmeticsAllowed
// Il2CppName: GetUserCosmeticsAllowed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::GetUserCosmeticsAllowed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetUserCosmeticsAllowed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::ProcessATMState
// Il2CppName: ProcessATMState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::ProcessATMState)> {
  static const MethodInfo* get() {
    static auto* currencyButton = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "ProcessATMState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{currencyButton});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::SwitchToStage
// Il2CppName: SwitchToStage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController_ATMStages)>(&GorillaNetworking::CosmeticsController::SwitchToStage)> {
  static const MethodInfo* get() {
    static auto* newStage = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/ATMStages")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "SwitchToStage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newStage});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::PressCurrencyPurchaseButton
// Il2CppName: PressCurrencyPurchaseButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::StringW)>(&GorillaNetworking::CosmeticsController::PressCurrencyPurchaseButton)> {
  static const MethodInfo* get() {
    static auto* currencyPurchaseSize = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "PressCurrencyPurchaseButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{currencyPurchaseSize});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::SetToStringArray
// Il2CppName: SetToStringArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController_CosmeticSet)>(&GorillaNetworking::CosmeticsController::SetToStringArray)> {
  static const MethodInfo* get() {
    static auto* set = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticSet")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "SetToStringArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{set});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::UpdateCurrencyBoard
// Il2CppName: UpdateCurrencyBoard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::UpdateCurrencyBoard)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "UpdateCurrencyBoard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::GetCurrencyBalance
// Il2CppName: GetCurrencyBalance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::GetCurrencyBalance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "GetCurrencyBalance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::LeaveSystemMenu
// Il2CppName: LeaveSystemMenu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::LeaveSystemMenu)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "LeaveSystemMenu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CheckIfQuitPurchase
// Il2CppName: CheckIfQuitPurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::CheckIfQuitPurchase)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "CheckIfQuitPurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::CheckIAPPurchases
// Il2CppName: CheckIAPPurchases
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)()>(&GorillaNetworking::CosmeticsController::CheckIAPPurchases)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "CheckIAPPurchases", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::OnGetViewerPurchasesStartup
// Il2CppName: OnGetViewerPurchasesStartup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::Oculus::Platform::Message*)>(&GorillaNetworking::CosmeticsController::OnGetViewerPurchasesStartup)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "OnGetViewerPurchasesStartup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::OnGetAccessTokenForStartupIAPCheck
// Il2CppName: OnGetAccessTokenForStartupIAPCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::Oculus::Platform::Message*)>(&GorillaNetworking::CosmeticsController::OnGetAccessTokenForStartupIAPCheck)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "OnGetAccessTokenForStartupIAPCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::OnGetNonceForStartupIAPCheck
// Il2CppName: OnGetNonceForStartupIAPCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::Oculus::Platform::Message*)>(&GorillaNetworking::CosmeticsController::OnGetNonceForStartupIAPCheck)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "OnGetNonceForStartupIAPCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::LaunchCheckoutFlowCallback
// Il2CppName: LaunchCheckoutFlowCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*)>(&GorillaNetworking::CosmeticsController::LaunchCheckoutFlowCallback)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Platform.Models", "Purchase")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "LaunchCheckoutFlowCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::OnGetAccessTokenForCurrencyPurchase
// Il2CppName: OnGetAccessTokenForCurrencyPurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::Oculus::Platform::Message*)>(&GorillaNetworking::CosmeticsController::OnGetAccessTokenForCurrencyPurchase)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "OnGetAccessTokenForCurrencyPurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::OnGetNonceForCurrencyPurchase
// Il2CppName: OnGetNonceForCurrencyPurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::Oculus::Platform::Message*)>(&GorillaNetworking::CosmeticsController::OnGetNonceForCurrencyPurchase)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "OnGetNonceForCurrencyPurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$ProcessPurchaseItemState$b__99_0
// Il2CppName: <ProcessPurchaseItemState>b__99_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GorillaNetworking::CosmeticsController::*)(::GorillaNetworking::CosmeticsController_CosmeticItem)>(&GorillaNetworking::CosmeticsController::$ProcessPurchaseItemState$b__99_0)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("GorillaNetworking", "CosmeticsController/CosmeticItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<ProcessPurchaseItemState>b__99_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$PurchaseItem$b__101_0
// Il2CppName: <PurchaseItem>b__101_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::ClientModels::PurchaseItemResult*)>(&GorillaNetworking::CosmeticsController::$PurchaseItem$b__101_0)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.ClientModels", "PurchaseItemResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<PurchaseItem>b__101_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$PurchaseItem$b__101_1
// Il2CppName: <PurchaseItem>b__101_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::PlayFabError*)>(&GorillaNetworking::CosmeticsController::$PurchaseItem$b__101_1)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<PurchaseItem>b__101_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$GetLastDailyLogin$b__110_0
// Il2CppName: <GetLastDailyLogin>b__110_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::ClientModels::GetUserDataResult*)>(&GorillaNetworking::CosmeticsController::$GetLastDailyLogin$b__110_0)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.ClientModels", "GetUserDataResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<GetLastDailyLogin>b__110_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$GetLastDailyLogin$b__110_1
// Il2CppName: <GetLastDailyLogin>b__110_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::PlayFabError*)>(&GorillaNetworking::CosmeticsController::$GetLastDailyLogin$b__110_1)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<GetLastDailyLogin>b__110_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$GetMyDaily$b__115_0
// Il2CppName: <GetMyDaily>b__115_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::ClientModels::ExecuteCloudScriptResult*)>(&GorillaNetworking::CosmeticsController::$GetMyDaily$b__115_0)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.ClientModels", "ExecuteCloudScriptResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<GetMyDaily>b__115_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$GetUserCosmeticsAllowed$b__116_0
// Il2CppName: <GetUserCosmeticsAllowed>b__116_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::ClientModels::GetUserInventoryResult*)>(&GorillaNetworking::CosmeticsController::$GetUserCosmeticsAllowed$b__116_0)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.ClientModels", "GetUserInventoryResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<GetUserCosmeticsAllowed>b__116_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$GetUserCosmeticsAllowed$b__116_3
// Il2CppName: <GetUserCosmeticsAllowed>b__116_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::PlayFabError*)>(&GorillaNetworking::CosmeticsController::$GetUserCosmeticsAllowed$b__116_3)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<GetUserCosmeticsAllowed>b__116_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$GetUserCosmeticsAllowed$b__116_1
// Il2CppName: <GetUserCosmeticsAllowed>b__116_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::PlayFabError*)>(&GorillaNetworking::CosmeticsController::$GetUserCosmeticsAllowed$b__116_1)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<GetUserCosmeticsAllowed>b__116_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$GetCurrencyBalance$b__122_0
// Il2CppName: <GetCurrencyBalance>b__122_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::ClientModels::GetUserInventoryResult*)>(&GorillaNetworking::CosmeticsController::$GetCurrencyBalance$b__122_0)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.ClientModels", "GetUserInventoryResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<GetCurrencyBalance>b__122_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$OnGetNonceForStartupIAPCheck$b__128_0
// Il2CppName: <OnGetNonceForStartupIAPCheck>b__128_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::ClientModels::ExecuteCloudScriptResult*)>(&GorillaNetworking::CosmeticsController::$OnGetNonceForStartupIAPCheck$b__128_0)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.ClientModels", "ExecuteCloudScriptResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<OnGetNonceForStartupIAPCheck>b__128_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$OnGetNonceForStartupIAPCheck$b__128_1
// Il2CppName: <OnGetNonceForStartupIAPCheck>b__128_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::PlayFabError*)>(&GorillaNetworking::CosmeticsController::$OnGetNonceForStartupIAPCheck$b__128_1)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<OnGetNonceForStartupIAPCheck>b__128_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$OnGetNonceForCurrencyPurchase$b__131_0
// Il2CppName: <OnGetNonceForCurrencyPurchase>b__131_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::ClientModels::ExecuteCloudScriptResult*)>(&GorillaNetworking::CosmeticsController::$OnGetNonceForCurrencyPurchase$b__131_0)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("PlayFab.ClientModels", "ExecuteCloudScriptResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<OnGetNonceForCurrencyPurchase>b__131_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::CosmeticsController::$OnGetNonceForCurrencyPurchase$b__131_1
// Il2CppName: <OnGetNonceForCurrencyPurchase>b__131_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::CosmeticsController::*)(::PlayFab::PlayFabError*)>(&GorillaNetworking::CosmeticsController::$OnGetNonceForCurrencyPurchase$b__131_1)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::CosmeticsController*), "<OnGetNonceForCurrencyPurchase>b__131_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
