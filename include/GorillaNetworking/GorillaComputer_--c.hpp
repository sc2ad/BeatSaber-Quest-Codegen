// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: GorillaNetworking.GorillaComputer
#include "GorillaNetworking/GorillaComputer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: PlayFab
namespace PlayFab {
  // Forward declaring type: PlayFabError
  class PlayFabError;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GorillaNetworking::GorillaComputer::$$c);
DEFINE_IL2CPP_ARG_TYPE(::GorillaNetworking::GorillaComputer::$$c*, "GorillaNetworking", "GorillaComputer/<>c");
// Type namespace: GorillaNetworking
namespace GorillaNetworking {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: GorillaNetworking.GorillaComputer/GorillaNetworking.<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class GorillaComputer::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly GorillaNetworking.GorillaComputer/GorillaNetworking.<>c <>9
    static ::GorillaNetworking::GorillaComputer::$$c* _get_$$9();
    // Set static field: static public readonly GorillaNetworking.GorillaComputer/GorillaNetworking.<>c <>9
    static void _set_$$9(::GorillaNetworking::GorillaComputer::$$c* value);
    // Get static field: static public System.Action`1<PlayFab.PlayFabError> <>9__125_1
    static ::System::Action_1<::PlayFab::PlayFabError*>* _get_$$9__125_1();
    // Set static field: static public System.Action`1<PlayFab.PlayFabError> <>9__125_1
    static void _set_$$9__125_1(::System::Action_1<::PlayFab::PlayFabError*>* value);
    // static private System.Void .cctor()
    // Offset: 0xC72EBC
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0xC72F20
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GorillaComputer::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::GorillaComputer::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GorillaComputer::$$c*, creationType>()));
    }
    // System.Void <SaveModAccountData>b__125_1(PlayFab.PlayFabError error)
    // Offset: 0xC72F28
    void $SaveModAccountData$b__125_1(::PlayFab::PlayFabError* error);
  }; // GorillaNetworking.GorillaComputer/GorillaNetworking.<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GorillaNetworking::GorillaComputer::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GorillaNetworking::GorillaComputer::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::GorillaComputer::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GorillaNetworking::GorillaComputer::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GorillaNetworking::GorillaComputer::$$c::$SaveModAccountData$b__125_1
// Il2CppName: <SaveModAccountData>b__125_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GorillaNetworking::GorillaComputer::$$c::*)(::PlayFab::PlayFabError*)>(&GorillaNetworking::GorillaComputer::$$c::$SaveModAccountData$b__125_1)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PlayFab", "PlayFabError")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GorillaNetworking::GorillaComputer::$$c*), "<SaveModAccountData>b__125_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
