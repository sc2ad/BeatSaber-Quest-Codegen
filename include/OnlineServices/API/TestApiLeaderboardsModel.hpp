// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OnlineServices.API.IApiLeaderboardsModel
#include "OnlineServices/API/IApiLeaderboardsModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: OnlineServices::API
namespace OnlineServices::API {
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Forward declaring namespace: BeatSaberAPI::DataTransferObjects
namespace BeatSaberAPI::DataTransferObjects {
  // Forward declaring type: LeaderboardEntries
  class LeaderboardEntries;
  // Forward declaring type: LeaderboardQuery
  class LeaderboardQuery;
  // Forward declaring type: LevelScoreResult
  class LevelScoreResult;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationToken
  struct CancellationToken;
}
// Completed forward declares
// Type namespace: OnlineServices.API
namespace OnlineServices::API {
  // Forward declaring type: TestApiLeaderboardsModel
  class TestApiLeaderboardsModel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::OnlineServices::API::TestApiLeaderboardsModel);
DEFINE_IL2CPP_ARG_TYPE(::OnlineServices::API::TestApiLeaderboardsModel*, "OnlineServices.API", "TestApiLeaderboardsModel");
// Type namespace: OnlineServices.API
namespace OnlineServices::API {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OnlineServices.API.TestApiLeaderboardsModel
  // [TokenAttribute] Offset: FFFFFFFF
  class TestApiLeaderboardsModel : public ::Il2CppObject/*, public ::OnlineServices::API::IApiLeaderboardsModel*/ {
    public:
    // Nested type: ::OnlineServices::API::TestApiLeaderboardsModel::$LogoutAsync$d__0
    struct $LogoutAsync$d__0;
    // Nested type: ::OnlineServices::API::TestApiLeaderboardsModel::$GetLeaderboardEntriesAsync$d__1
    struct $GetLeaderboardEntriesAsync$d__1;
    // Nested type: ::OnlineServices::API::TestApiLeaderboardsModel::$SendLevelScoreResultAsync$d__2
    struct $SendLevelScoreResultAsync$d__2;
    // Creating interface conversion operator: operator ::OnlineServices::API::IApiLeaderboardsModel
    operator ::OnlineServices::API::IApiLeaderboardsModel() noexcept {
      return *reinterpret_cast<::OnlineServices::API::IApiLeaderboardsModel*>(this);
    }
    // Creating interface conversion operator: i_IApiLeaderboardsModel
    inline ::OnlineServices::API::IApiLeaderboardsModel* i_IApiLeaderboardsModel() noexcept {
      return reinterpret_cast<::OnlineServices::API::IApiLeaderboardsModel*>(this);
    }
    // public System.Void .ctor()
    // Offset: 0x13370A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TestApiLeaderboardsModel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::OnlineServices::API::TestApiLeaderboardsModel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TestApiLeaderboardsModel*, creationType>()));
    }
    // public System.Void LogoutAsync()
    // Offset: 0x1336E04
    void LogoutAsync();
    // public System.Threading.Tasks.Task`1<OnlineServices.API.ApiResponse`1<BeatSaberAPI.DataTransferObjects.LeaderboardEntries>> GetLeaderboardEntriesAsync(BeatSaberAPI.DataTransferObjects.LeaderboardQuery leaderboardQueryDTO, System.Threading.CancellationToken cancellationToken)
    // Offset: 0x1336EA8
    ::System::Threading::Tasks::Task_1<::OnlineServices::API::ApiResponse_1<::BeatSaberAPI::DataTransferObjects::LeaderboardEntries*>>* GetLeaderboardEntriesAsync(::BeatSaberAPI::DataTransferObjects::LeaderboardQuery* leaderboardQueryDTO, ::System::Threading::CancellationToken cancellationToken);
    // public System.Threading.Tasks.Task`1<OnlineServices.API.Response> SendLevelScoreResultAsync(BeatSaberAPI.DataTransferObjects.LevelScoreResult levelScoreResult, System.Threading.CancellationToken cancellationToken)
    // Offset: 0x1336FA8
    ::System::Threading::Tasks::Task_1<::OnlineServices::API::Response>* SendLevelScoreResultAsync(::BeatSaberAPI::DataTransferObjects::LevelScoreResult* levelScoreResult, ::System::Threading::CancellationToken cancellationToken);
  }; // OnlineServices.API.TestApiLeaderboardsModel
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: OnlineServices::API::TestApiLeaderboardsModel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: OnlineServices::API::TestApiLeaderboardsModel::LogoutAsync
// Il2CppName: LogoutAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServices::API::TestApiLeaderboardsModel::*)()>(&OnlineServices::API::TestApiLeaderboardsModel::LogoutAsync)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServices::API::TestApiLeaderboardsModel*), "LogoutAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OnlineServices::API::TestApiLeaderboardsModel::GetLeaderboardEntriesAsync
// Il2CppName: GetLeaderboardEntriesAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::OnlineServices::API::ApiResponse_1<::BeatSaberAPI::DataTransferObjects::LeaderboardEntries*>>* (OnlineServices::API::TestApiLeaderboardsModel::*)(::BeatSaberAPI::DataTransferObjects::LeaderboardQuery*, ::System::Threading::CancellationToken)>(&OnlineServices::API::TestApiLeaderboardsModel::GetLeaderboardEntriesAsync)> {
  static const MethodInfo* get() {
    static auto* leaderboardQueryDTO = &::il2cpp_utils::GetClassFromName("BeatSaberAPI.DataTransferObjects", "LeaderboardQuery")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OnlineServices::API::TestApiLeaderboardsModel*), "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{leaderboardQueryDTO, cancellationToken});
  }
};
// Writing MetadataGetter for method: OnlineServices::API::TestApiLeaderboardsModel::SendLevelScoreResultAsync
// Il2CppName: SendLevelScoreResultAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::OnlineServices::API::Response>* (OnlineServices::API::TestApiLeaderboardsModel::*)(::BeatSaberAPI::DataTransferObjects::LevelScoreResult*, ::System::Threading::CancellationToken)>(&OnlineServices::API::TestApiLeaderboardsModel::SendLevelScoreResultAsync)> {
  static const MethodInfo* get() {
    static auto* levelScoreResult = &::il2cpp_utils::GetClassFromName("BeatSaberAPI.DataTransferObjects", "LevelScoreResult")->byval_arg;
    static auto* cancellationToken = &::il2cpp_utils::GetClassFromName("System.Threading", "CancellationToken")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OnlineServices::API::TestApiLeaderboardsModel*), "SendLevelScoreResultAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelScoreResult, cancellationToken});
  }
};
