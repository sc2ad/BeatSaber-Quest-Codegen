// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: ClipperLib
namespace ClipperLib {
  // Forward declaring type: Maxima
  class Maxima;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ClipperLib::Maxima);
DEFINE_IL2CPP_ARG_TYPE(::ClipperLib::Maxima*, "ClipperLib", "Maxima");
// Type namespace: ClipperLib
namespace ClipperLib {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: ClipperLib.Maxima
  // [TokenAttribute] Offset: FFFFFFFF
  class Maxima : public ::Il2CppObject {
    public:
    public:
    // System.Int64 X
    // Size: 0x8
    // Offset: 0x10
    int64_t X;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // ClipperLib.Maxima Next
    // Size: 0x8
    // Offset: 0x18
    ::ClipperLib::Maxima* Next;
    // Field size check
    static_assert(sizeof(::ClipperLib::Maxima*) == 0x8);
    // ClipperLib.Maxima Prev
    // Size: 0x8
    // Offset: 0x20
    ::ClipperLib::Maxima* Prev;
    // Field size check
    static_assert(sizeof(::ClipperLib::Maxima*) == 0x8);
    public:
    // Get instance field reference: System.Int64 X
    [[deprecated("Use field access instead!")]] int64_t& dyn_X();
    // Get instance field reference: ClipperLib.Maxima Next
    [[deprecated("Use field access instead!")]] ::ClipperLib::Maxima*& dyn_Next();
    // Get instance field reference: ClipperLib.Maxima Prev
    [[deprecated("Use field access instead!")]] ::ClipperLib::Maxima*& dyn_Prev();
    // public System.Void .ctor()
    // Offset: 0x1B7DB58
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Maxima* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Maxima::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Maxima*, creationType>()));
    }
  }; // ClipperLib.Maxima
  #pragma pack(pop)
  static check_size<sizeof(Maxima), 32 + sizeof(::ClipperLib::Maxima*)> __ClipperLib_MaximaSizeCheck;
  static_assert(sizeof(Maxima) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ClipperLib::Maxima::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
