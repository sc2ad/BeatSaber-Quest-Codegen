// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: ClipperLib.IntPoint
#include "ClipperLib/IntPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ClipperLib
namespace ClipperLib {
  // Forward declaring type: OutPt
  class OutPt;
}
// Completed forward declares
// Type namespace: ClipperLib
namespace ClipperLib {
  // Forward declaring type: Join
  class Join;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ClipperLib::Join);
DEFINE_IL2CPP_ARG_TYPE(::ClipperLib::Join*, "ClipperLib", "Join");
// Type namespace: ClipperLib
namespace ClipperLib {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: ClipperLib.Join
  // [TokenAttribute] Offset: FFFFFFFF
  class Join : public ::Il2CppObject {
    public:
    public:
    // ClipperLib.OutPt OutPt1
    // Size: 0x8
    // Offset: 0x10
    ::ClipperLib::OutPt* OutPt1;
    // Field size check
    static_assert(sizeof(::ClipperLib::OutPt*) == 0x8);
    // ClipperLib.OutPt OutPt2
    // Size: 0x8
    // Offset: 0x18
    ::ClipperLib::OutPt* OutPt2;
    // Field size check
    static_assert(sizeof(::ClipperLib::OutPt*) == 0x8);
    // ClipperLib.IntPoint OffPt
    // Size: 0x10
    // Offset: 0x20
    ::ClipperLib::IntPoint OffPt;
    // Field size check
    static_assert(sizeof(::ClipperLib::IntPoint) == 0x10);
    public:
    // Get instance field reference: ClipperLib.OutPt OutPt1
    [[deprecated("Use field access instead!")]] ::ClipperLib::OutPt*& dyn_OutPt1();
    // Get instance field reference: ClipperLib.OutPt OutPt2
    [[deprecated("Use field access instead!")]] ::ClipperLib::OutPt*& dyn_OutPt2();
    // Get instance field reference: ClipperLib.IntPoint OffPt
    [[deprecated("Use field access instead!")]] ::ClipperLib::IntPoint& dyn_OffPt();
    // public System.Void .ctor()
    // Offset: 0x1B7F5C4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Join* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::ClipperLib::Join::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Join*, creationType>()));
    }
  }; // ClipperLib.Join
  #pragma pack(pop)
  static check_size<sizeof(Join), 32 + sizeof(::ClipperLib::IntPoint)> __ClipperLib_JoinSizeCheck;
  static_assert(sizeof(Join) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ClipperLib::Join::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
