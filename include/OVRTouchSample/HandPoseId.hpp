// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: OVRTouchSample
namespace OVRTouchSample {
  // Forward declaring type: HandPoseId
  struct HandPoseId;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::OVRTouchSample::HandPoseId, "OVRTouchSample", "HandPoseId");
// Type namespace: OVRTouchSample
namespace OVRTouchSample {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: OVRTouchSample.HandPoseId
  // [TokenAttribute] Offset: FFFFFFFF
  struct HandPoseId/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: HandPoseId
    constexpr HandPoseId(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public OVRTouchSample.HandPoseId Default
    static constexpr const int Default = 0;
    // Get static field: static public OVRTouchSample.HandPoseId Default
    static ::OVRTouchSample::HandPoseId _get_Default();
    // Set static field: static public OVRTouchSample.HandPoseId Default
    static void _set_Default(::OVRTouchSample::HandPoseId value);
    // static field const value: static public OVRTouchSample.HandPoseId Generic
    static constexpr const int Generic = 1;
    // Get static field: static public OVRTouchSample.HandPoseId Generic
    static ::OVRTouchSample::HandPoseId _get_Generic();
    // Set static field: static public OVRTouchSample.HandPoseId Generic
    static void _set_Generic(::OVRTouchSample::HandPoseId value);
    // static field const value: static public OVRTouchSample.HandPoseId PingPongBall
    static constexpr const int PingPongBall = 2;
    // Get static field: static public OVRTouchSample.HandPoseId PingPongBall
    static ::OVRTouchSample::HandPoseId _get_PingPongBall();
    // Set static field: static public OVRTouchSample.HandPoseId PingPongBall
    static void _set_PingPongBall(::OVRTouchSample::HandPoseId value);
    // static field const value: static public OVRTouchSample.HandPoseId Controller
    static constexpr const int Controller = 3;
    // Get static field: static public OVRTouchSample.HandPoseId Controller
    static ::OVRTouchSample::HandPoseId _get_Controller();
    // Set static field: static public OVRTouchSample.HandPoseId Controller
    static void _set_Controller(::OVRTouchSample::HandPoseId value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // OVRTouchSample.HandPoseId
  #pragma pack(pop)
  static check_size<sizeof(HandPoseId), 0 + sizeof(int)> __OVRTouchSample_HandPoseIdSizeCheck;
  static_assert(sizeof(HandPoseId) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
