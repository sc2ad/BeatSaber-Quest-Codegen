// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Photon.Chat
namespace Photon::Chat {
  // Forward declaring type: ChatState
  struct ChatState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Photon::Chat::ChatState, "Photon.Chat", "ChatState");
// Type namespace: Photon.Chat
namespace Photon::Chat {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Chat.ChatState
  // [TokenAttribute] Offset: FFFFFFFF
  struct ChatState/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ChatState
    constexpr ChatState(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Photon.Chat.ChatState Uninitialized
    static constexpr const int Uninitialized = 0;
    // Get static field: static public Photon.Chat.ChatState Uninitialized
    static ::Photon::Chat::ChatState _get_Uninitialized();
    // Set static field: static public Photon.Chat.ChatState Uninitialized
    static void _set_Uninitialized(::Photon::Chat::ChatState value);
    // static field const value: static public Photon.Chat.ChatState ConnectingToNameServer
    static constexpr const int ConnectingToNameServer = 1;
    // Get static field: static public Photon.Chat.ChatState ConnectingToNameServer
    static ::Photon::Chat::ChatState _get_ConnectingToNameServer();
    // Set static field: static public Photon.Chat.ChatState ConnectingToNameServer
    static void _set_ConnectingToNameServer(::Photon::Chat::ChatState value);
    // static field const value: static public Photon.Chat.ChatState ConnectedToNameServer
    static constexpr const int ConnectedToNameServer = 2;
    // Get static field: static public Photon.Chat.ChatState ConnectedToNameServer
    static ::Photon::Chat::ChatState _get_ConnectedToNameServer();
    // Set static field: static public Photon.Chat.ChatState ConnectedToNameServer
    static void _set_ConnectedToNameServer(::Photon::Chat::ChatState value);
    // static field const value: static public Photon.Chat.ChatState Authenticating
    static constexpr const int Authenticating = 3;
    // Get static field: static public Photon.Chat.ChatState Authenticating
    static ::Photon::Chat::ChatState _get_Authenticating();
    // Set static field: static public Photon.Chat.ChatState Authenticating
    static void _set_Authenticating(::Photon::Chat::ChatState value);
    // static field const value: static public Photon.Chat.ChatState Authenticated
    static constexpr const int Authenticated = 4;
    // Get static field: static public Photon.Chat.ChatState Authenticated
    static ::Photon::Chat::ChatState _get_Authenticated();
    // Set static field: static public Photon.Chat.ChatState Authenticated
    static void _set_Authenticated(::Photon::Chat::ChatState value);
    // static field const value: static public Photon.Chat.ChatState DisconnectingFromNameServer
    static constexpr const int DisconnectingFromNameServer = 5;
    // Get static field: static public Photon.Chat.ChatState DisconnectingFromNameServer
    static ::Photon::Chat::ChatState _get_DisconnectingFromNameServer();
    // Set static field: static public Photon.Chat.ChatState DisconnectingFromNameServer
    static void _set_DisconnectingFromNameServer(::Photon::Chat::ChatState value);
    // static field const value: static public Photon.Chat.ChatState ConnectingToFrontEnd
    static constexpr const int ConnectingToFrontEnd = 6;
    // Get static field: static public Photon.Chat.ChatState ConnectingToFrontEnd
    static ::Photon::Chat::ChatState _get_ConnectingToFrontEnd();
    // Set static field: static public Photon.Chat.ChatState ConnectingToFrontEnd
    static void _set_ConnectingToFrontEnd(::Photon::Chat::ChatState value);
    // static field const value: static public Photon.Chat.ChatState ConnectedToFrontEnd
    static constexpr const int ConnectedToFrontEnd = 7;
    // Get static field: static public Photon.Chat.ChatState ConnectedToFrontEnd
    static ::Photon::Chat::ChatState _get_ConnectedToFrontEnd();
    // Set static field: static public Photon.Chat.ChatState ConnectedToFrontEnd
    static void _set_ConnectedToFrontEnd(::Photon::Chat::ChatState value);
    // static field const value: static public Photon.Chat.ChatState DisconnectingFromFrontEnd
    static constexpr const int DisconnectingFromFrontEnd = 8;
    // Get static field: static public Photon.Chat.ChatState DisconnectingFromFrontEnd
    static ::Photon::Chat::ChatState _get_DisconnectingFromFrontEnd();
    // Set static field: static public Photon.Chat.ChatState DisconnectingFromFrontEnd
    static void _set_DisconnectingFromFrontEnd(::Photon::Chat::ChatState value);
    // static field const value: static public Photon.Chat.ChatState QueuedComingFromFrontEnd
    static constexpr const int QueuedComingFromFrontEnd = 9;
    // Get static field: static public Photon.Chat.ChatState QueuedComingFromFrontEnd
    static ::Photon::Chat::ChatState _get_QueuedComingFromFrontEnd();
    // Set static field: static public Photon.Chat.ChatState QueuedComingFromFrontEnd
    static void _set_QueuedComingFromFrontEnd(::Photon::Chat::ChatState value);
    // static field const value: static public Photon.Chat.ChatState Disconnecting
    static constexpr const int Disconnecting = 10;
    // Get static field: static public Photon.Chat.ChatState Disconnecting
    static ::Photon::Chat::ChatState _get_Disconnecting();
    // Set static field: static public Photon.Chat.ChatState Disconnecting
    static void _set_Disconnecting(::Photon::Chat::ChatState value);
    // static field const value: static public Photon.Chat.ChatState Disconnected
    static constexpr const int Disconnected = 11;
    // Get static field: static public Photon.Chat.ChatState Disconnected
    static ::Photon::Chat::ChatState _get_Disconnected();
    // Set static field: static public Photon.Chat.ChatState Disconnected
    static void _set_Disconnected(::Photon::Chat::ChatState value);
    // static field const value: static public Photon.Chat.ChatState ConnectWithFallbackProtocol
    static constexpr const int ConnectWithFallbackProtocol = 12;
    // Get static field: static public Photon.Chat.ChatState ConnectWithFallbackProtocol
    static ::Photon::Chat::ChatState _get_ConnectWithFallbackProtocol();
    // Set static field: static public Photon.Chat.ChatState ConnectWithFallbackProtocol
    static void _set_ConnectWithFallbackProtocol(::Photon::Chat::ChatState value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Photon.Chat.ChatState
  #pragma pack(pop)
  static check_size<sizeof(ChatState), 0 + sizeof(int)> __Photon_Chat_ChatStateSizeCheck;
  static_assert(sizeof(ChatState) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
