// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.OpusCodec
#include "Photon/Voice/OpusCodec.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::OpusCodec::Util);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::OpusCodec::Util*, "Photon.Voice", "OpusCodec/Util");
// Type namespace: Photon.Voice
namespace Photon::Voice {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.OpusCodec/Photon.Voice.Util
  // [TokenAttribute] Offset: FFFFFFFF
  class OpusCodec::Util : public ::Il2CppObject {
    public:
    // public System.Void .ctor()
    // Offset: 0x11676F4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OpusCodec::Util* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::Util::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OpusCodec::Util*, creationType>()));
    }
    // static System.Int32 bestEncoderSampleRate(System.Int32 f)
    // Offset: 0x11673B4
    static int bestEncoderSampleRate(int f);
  }; // Photon.Voice.OpusCodec/Photon.Voice.Util
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::OpusCodec::Util::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Voice::OpusCodec::Util::bestEncoderSampleRate
// Il2CppName: bestEncoderSampleRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&Photon::Voice::OpusCodec::Util::bestEncoderSampleRate)> {
  static const MethodInfo* get() {
    static auto* f = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::OpusCodec::Util*), "bestEncoderSampleRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{f});
  }
};
