// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.VoiceInfo
#include "Photon/Voice/VoiceInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Photon::Voice
namespace Photon::Voice {
  // Forward declaring type: IDeviceEnumerator
  class IDeviceEnumerator;
  // Forward declaring type: ILogger
  class ILogger;
  // Forward declaring type: IAudioInChangeNotifier
  class IAudioInChangeNotifier;
  // Forward declaring type: IEncoder
  class IEncoder;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: Photon.Voice
namespace Photon::Voice {
  // Forward declaring type: Platform
  class Platform;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::Platform);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::Platform*, "Photon.Voice", "Platform");
// Type namespace: Photon.Voice
namespace Photon::Voice {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.Platform
  // [TokenAttribute] Offset: FFFFFFFF
  class Platform : public ::Il2CppObject {
    public:
    // static public Photon.Voice.IDeviceEnumerator CreateAudioInEnumerator(Photon.Voice.ILogger logger)
    // Offset: 0x1168DB4
    static ::Photon::Voice::IDeviceEnumerator* CreateAudioInEnumerator(::Photon::Voice::ILogger* logger);
    // static public Photon.Voice.IAudioInChangeNotifier CreateAudioInChangeNotifier(System.Action callback, Photon.Voice.ILogger logger)
    // Offset: 0x1168E14
    static ::Photon::Voice::IAudioInChangeNotifier* CreateAudioInChangeNotifier(::System::Action* callback, ::Photon::Voice::ILogger* logger);
    // static public Photon.Voice.IEncoder CreateDefaultAudioEncoder(Photon.Voice.ILogger logger, Photon.Voice.VoiceInfo info)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::Photon::Voice::IEncoder* CreateDefaultAudioEncoder(::Photon::Voice::ILogger* logger, ::Photon::Voice::VoiceInfo info) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Platform::CreateDefaultAudioEncoder");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "Platform", "CreateDefaultAudioEncoder", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logger), ::il2cpp_utils::ExtractType(info)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::IEncoder*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, logger, info);
    }
  }; // Photon.Voice.Platform
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::Platform::CreateAudioInEnumerator
// Il2CppName: CreateAudioInEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Voice::IDeviceEnumerator* (*)(::Photon::Voice::ILogger*)>(&Photon::Voice::Platform::CreateAudioInEnumerator)> {
  static const MethodInfo* get() {
    static auto* logger = &::il2cpp_utils::GetClassFromName("Photon.Voice", "ILogger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Platform*), "CreateAudioInEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{logger});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Platform::CreateAudioInChangeNotifier
// Il2CppName: CreateAudioInChangeNotifier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Voice::IAudioInChangeNotifier* (*)(::System::Action*, ::Photon::Voice::ILogger*)>(&Photon::Voice::Platform::CreateAudioInChangeNotifier)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* logger = &::il2cpp_utils::GetClassFromName("Photon.Voice", "ILogger")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Platform*), "CreateAudioInChangeNotifier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, logger});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Platform::CreateDefaultAudioEncoder
// Il2CppName: CreateDefaultAudioEncoder
// Cannot write MetadataGetter for generic methods!
