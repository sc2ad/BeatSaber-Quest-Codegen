// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.WebRTCAudioLib
#include "Photon/Voice/WebRTCAudioLib.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::WebRTCAudioLib::Error, "Photon.Voice", "WebRTCAudioLib/Error");
// Type namespace: Photon.Voice
namespace Photon::Voice {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.WebRTCAudioLib/Photon.Voice.Error
  // [TokenAttribute] Offset: FFFFFFFF
  struct WebRTCAudioLib::Error/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: Error
    constexpr Error(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kNoError
    static constexpr const int kNoError = 0;
    // Get static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kNoError
    static ::Photon::Voice::WebRTCAudioLib::Error _get_kNoError();
    // Set static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kNoError
    static void _set_kNoError(::Photon::Voice::WebRTCAudioLib::Error value);
    // static field const value: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kUnspecifiedError
    static constexpr const int kUnspecifiedError = -1;
    // Get static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kUnspecifiedError
    static ::Photon::Voice::WebRTCAudioLib::Error _get_kUnspecifiedError();
    // Set static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kUnspecifiedError
    static void _set_kUnspecifiedError(::Photon::Voice::WebRTCAudioLib::Error value);
    // static field const value: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kCreationFailedError
    static constexpr const int kCreationFailedError = -2;
    // Get static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kCreationFailedError
    static ::Photon::Voice::WebRTCAudioLib::Error _get_kCreationFailedError();
    // Set static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kCreationFailedError
    static void _set_kCreationFailedError(::Photon::Voice::WebRTCAudioLib::Error value);
    // static field const value: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kUnsupportedComponentError
    static constexpr const int kUnsupportedComponentError = -3;
    // Get static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kUnsupportedComponentError
    static ::Photon::Voice::WebRTCAudioLib::Error _get_kUnsupportedComponentError();
    // Set static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kUnsupportedComponentError
    static void _set_kUnsupportedComponentError(::Photon::Voice::WebRTCAudioLib::Error value);
    // static field const value: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kUnsupportedFunctionError
    static constexpr const int kUnsupportedFunctionError = -4;
    // Get static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kUnsupportedFunctionError
    static ::Photon::Voice::WebRTCAudioLib::Error _get_kUnsupportedFunctionError();
    // Set static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kUnsupportedFunctionError
    static void _set_kUnsupportedFunctionError(::Photon::Voice::WebRTCAudioLib::Error value);
    // static field const value: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kNullPointerError
    static constexpr const int kNullPointerError = -5;
    // Get static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kNullPointerError
    static ::Photon::Voice::WebRTCAudioLib::Error _get_kNullPointerError();
    // Set static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kNullPointerError
    static void _set_kNullPointerError(::Photon::Voice::WebRTCAudioLib::Error value);
    // static field const value: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kBadParameterError
    static constexpr const int kBadParameterError = -6;
    // Get static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kBadParameterError
    static ::Photon::Voice::WebRTCAudioLib::Error _get_kBadParameterError();
    // Set static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kBadParameterError
    static void _set_kBadParameterError(::Photon::Voice::WebRTCAudioLib::Error value);
    // static field const value: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kBadSampleRateError
    static constexpr const int kBadSampleRateError = -7;
    // Get static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kBadSampleRateError
    static ::Photon::Voice::WebRTCAudioLib::Error _get_kBadSampleRateError();
    // Set static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kBadSampleRateError
    static void _set_kBadSampleRateError(::Photon::Voice::WebRTCAudioLib::Error value);
    // static field const value: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kBadDataLengthError
    static constexpr const int kBadDataLengthError = -8;
    // Get static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kBadDataLengthError
    static ::Photon::Voice::WebRTCAudioLib::Error _get_kBadDataLengthError();
    // Set static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kBadDataLengthError
    static void _set_kBadDataLengthError(::Photon::Voice::WebRTCAudioLib::Error value);
    // static field const value: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kBadNumberChannelsError
    static constexpr const int kBadNumberChannelsError = -9;
    // Get static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kBadNumberChannelsError
    static ::Photon::Voice::WebRTCAudioLib::Error _get_kBadNumberChannelsError();
    // Set static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kBadNumberChannelsError
    static void _set_kBadNumberChannelsError(::Photon::Voice::WebRTCAudioLib::Error value);
    // static field const value: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kFileError
    static constexpr const int kFileError = -10;
    // Get static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kFileError
    static ::Photon::Voice::WebRTCAudioLib::Error _get_kFileError();
    // Set static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kFileError
    static void _set_kFileError(::Photon::Voice::WebRTCAudioLib::Error value);
    // static field const value: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kStreamParameterNotSetError
    static constexpr const int kStreamParameterNotSetError = -11;
    // Get static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kStreamParameterNotSetError
    static ::Photon::Voice::WebRTCAudioLib::Error _get_kStreamParameterNotSetError();
    // Set static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kStreamParameterNotSetError
    static void _set_kStreamParameterNotSetError(::Photon::Voice::WebRTCAudioLib::Error value);
    // static field const value: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kNotEnabledError
    static constexpr const int kNotEnabledError = -12;
    // Get static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kNotEnabledError
    static ::Photon::Voice::WebRTCAudioLib::Error _get_kNotEnabledError();
    // Set static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kNotEnabledError
    static void _set_kNotEnabledError(::Photon::Voice::WebRTCAudioLib::Error value);
    // static field const value: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kBadStreamParameterWarning
    static constexpr const int kBadStreamParameterWarning = -13;
    // Get static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kBadStreamParameterWarning
    static ::Photon::Voice::WebRTCAudioLib::Error _get_kBadStreamParameterWarning();
    // Set static field: static public Photon.Voice.WebRTCAudioLib/Photon.Voice.Error kBadStreamParameterWarning
    static void _set_kBadStreamParameterWarning(::Photon::Voice::WebRTCAudioLib::Error value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Photon.Voice.WebRTCAudioLib/Photon.Voice.Error
  #pragma pack(pop)
  static check_size<sizeof(WebRTCAudioLib::Error), 0 + sizeof(int)> __Photon_Voice_WebRTCAudioLib_ErrorSizeCheck;
  static_assert(sizeof(WebRTCAudioLib::Error) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
