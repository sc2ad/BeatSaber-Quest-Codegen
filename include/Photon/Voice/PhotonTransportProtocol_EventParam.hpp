// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.PhotonTransportProtocol
#include "Photon/Voice/PhotonTransportProtocol.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::PhotonTransportProtocol::EventParam, "Photon.Voice", "PhotonTransportProtocol/EventParam");
// Type namespace: Photon.Voice
namespace Photon::Voice {
  // Size: 0x1
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam
  // [TokenAttribute] Offset: FFFFFFFF
  struct PhotonTransportProtocol::EventParam/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Byte value__
    // Size: 0x1
    // Offset: 0x0
    uint8_t value;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Creating value type constructor for type: EventParam
    constexpr EventParam(uint8_t value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint8_t
    constexpr operator uint8_t() const noexcept {
      return value;
    }
    // static field const value: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam VoiceId
    static constexpr const uint8_t VoiceId = 1u;
    // Get static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam VoiceId
    static ::Photon::Voice::PhotonTransportProtocol::EventParam _get_VoiceId();
    // Set static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam VoiceId
    static void _set_VoiceId(::Photon::Voice::PhotonTransportProtocol::EventParam value);
    // static field const value: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam SamplingRate
    static constexpr const uint8_t SamplingRate = 2u;
    // Get static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam SamplingRate
    static ::Photon::Voice::PhotonTransportProtocol::EventParam _get_SamplingRate();
    // Set static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam SamplingRate
    static void _set_SamplingRate(::Photon::Voice::PhotonTransportProtocol::EventParam value);
    // static field const value: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam Channels
    static constexpr const uint8_t Channels = 3u;
    // Get static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam Channels
    static ::Photon::Voice::PhotonTransportProtocol::EventParam _get_Channels();
    // Set static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam Channels
    static void _set_Channels(::Photon::Voice::PhotonTransportProtocol::EventParam value);
    // static field const value: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam FrameDurationUs
    static constexpr const uint8_t FrameDurationUs = 4u;
    // Get static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam FrameDurationUs
    static ::Photon::Voice::PhotonTransportProtocol::EventParam _get_FrameDurationUs();
    // Set static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam FrameDurationUs
    static void _set_FrameDurationUs(::Photon::Voice::PhotonTransportProtocol::EventParam value);
    // static field const value: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam Bitrate
    static constexpr const uint8_t Bitrate = 5u;
    // Get static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam Bitrate
    static ::Photon::Voice::PhotonTransportProtocol::EventParam _get_Bitrate();
    // Set static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam Bitrate
    static void _set_Bitrate(::Photon::Voice::PhotonTransportProtocol::EventParam value);
    // static field const value: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam Width
    static constexpr const uint8_t Width = 6u;
    // Get static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam Width
    static ::Photon::Voice::PhotonTransportProtocol::EventParam _get_Width();
    // Set static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam Width
    static void _set_Width(::Photon::Voice::PhotonTransportProtocol::EventParam value);
    // static field const value: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam Height
    static constexpr const uint8_t Height = 7u;
    // Get static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam Height
    static ::Photon::Voice::PhotonTransportProtocol::EventParam _get_Height();
    // Set static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam Height
    static void _set_Height(::Photon::Voice::PhotonTransportProtocol::EventParam value);
    // static field const value: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam FPS
    static constexpr const uint8_t FPS = 8u;
    // Get static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam FPS
    static ::Photon::Voice::PhotonTransportProtocol::EventParam _get_FPS();
    // Set static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam FPS
    static void _set_FPS(::Photon::Voice::PhotonTransportProtocol::EventParam value);
    // static field const value: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam KeyFrameInt
    static constexpr const uint8_t KeyFrameInt = 9u;
    // Get static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam KeyFrameInt
    static ::Photon::Voice::PhotonTransportProtocol::EventParam _get_KeyFrameInt();
    // Set static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam KeyFrameInt
    static void _set_KeyFrameInt(::Photon::Voice::PhotonTransportProtocol::EventParam value);
    // static field const value: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam UserData
    static constexpr const uint8_t UserData = 10u;
    // Get static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam UserData
    static ::Photon::Voice::PhotonTransportProtocol::EventParam _get_UserData();
    // Set static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam UserData
    static void _set_UserData(::Photon::Voice::PhotonTransportProtocol::EventParam value);
    // static field const value: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam EventNumber
    static constexpr const uint8_t EventNumber = 11u;
    // Get static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam EventNumber
    static ::Photon::Voice::PhotonTransportProtocol::EventParam _get_EventNumber();
    // Set static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam EventNumber
    static void _set_EventNumber(::Photon::Voice::PhotonTransportProtocol::EventParam value);
    // static field const value: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam Codec
    static constexpr const uint8_t Codec = 12u;
    // Get static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam Codec
    static ::Photon::Voice::PhotonTransportProtocol::EventParam _get_Codec();
    // Set static field: static public Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam Codec
    static void _set_Codec(::Photon::Voice::PhotonTransportProtocol::EventParam value);
    // Get instance field reference: public System.Byte value__
    [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
  }; // Photon.Voice.PhotonTransportProtocol/Photon.Voice.EventParam
  #pragma pack(pop)
  static check_size<sizeof(PhotonTransportProtocol::EventParam), 0 + sizeof(uint8_t)> __Photon_Voice_PhotonTransportProtocol_EventParamSizeCheck;
  static_assert(sizeof(PhotonTransportProtocol::EventParam) == 0x1);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
