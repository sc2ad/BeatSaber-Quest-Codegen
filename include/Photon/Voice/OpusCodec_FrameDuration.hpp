// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.OpusCodec
#include "Photon/Voice/OpusCodec.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::OpusCodec::FrameDuration, "Photon.Voice", "OpusCodec/FrameDuration");
// Type namespace: Photon.Voice
namespace Photon::Voice {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.OpusCodec/Photon.Voice.FrameDuration
  // [TokenAttribute] Offset: FFFFFFFF
  struct OpusCodec::FrameDuration/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: FrameDuration
    constexpr FrameDuration(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame2dot5ms
    static constexpr const int Frame2dot5ms = 2500;
    // Get static field: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame2dot5ms
    static ::Photon::Voice::OpusCodec::FrameDuration _get_Frame2dot5ms();
    // Set static field: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame2dot5ms
    static void _set_Frame2dot5ms(::Photon::Voice::OpusCodec::FrameDuration value);
    // static field const value: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame5ms
    static constexpr const int Frame5ms = 5000;
    // Get static field: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame5ms
    static ::Photon::Voice::OpusCodec::FrameDuration _get_Frame5ms();
    // Set static field: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame5ms
    static void _set_Frame5ms(::Photon::Voice::OpusCodec::FrameDuration value);
    // static field const value: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame10ms
    static constexpr const int Frame10ms = 10000;
    // Get static field: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame10ms
    static ::Photon::Voice::OpusCodec::FrameDuration _get_Frame10ms();
    // Set static field: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame10ms
    static void _set_Frame10ms(::Photon::Voice::OpusCodec::FrameDuration value);
    // static field const value: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame20ms
    static constexpr const int Frame20ms = 20000;
    // Get static field: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame20ms
    static ::Photon::Voice::OpusCodec::FrameDuration _get_Frame20ms();
    // Set static field: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame20ms
    static void _set_Frame20ms(::Photon::Voice::OpusCodec::FrameDuration value);
    // static field const value: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame40ms
    static constexpr const int Frame40ms = 40000;
    // Get static field: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame40ms
    static ::Photon::Voice::OpusCodec::FrameDuration _get_Frame40ms();
    // Set static field: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame40ms
    static void _set_Frame40ms(::Photon::Voice::OpusCodec::FrameDuration value);
    // static field const value: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame60ms
    static constexpr const int Frame60ms = 60000;
    // Get static field: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame60ms
    static ::Photon::Voice::OpusCodec::FrameDuration _get_Frame60ms();
    // Set static field: static public Photon.Voice.OpusCodec/Photon.Voice.FrameDuration Frame60ms
    static void _set_Frame60ms(::Photon::Voice::OpusCodec::FrameDuration value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Photon.Voice.OpusCodec/Photon.Voice.FrameDuration
  #pragma pack(pop)
  static check_size<sizeof(OpusCodec::FrameDuration), 0 + sizeof(int)> __Photon_Voice_OpusCodec_FrameDurationSizeCheck;
  static_assert(sizeof(OpusCodec::FrameDuration) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
