// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.IEncoder
#include "Photon/Voice/IEncoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Photon.Voice
namespace Photon::Voice {
  // Forward declaring type: IEncoderDirect`1<B>
  template<typename B>
  class IEncoderDirect_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Photon::Voice::IEncoderDirect_1, "Photon.Voice", "IEncoderDirect`1");
// Type namespace: Photon.Voice
namespace Photon::Voice {
  // WARNING Size may be invalid!
  // Autogenerated type: Photon.Voice.IEncoderDirect`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename B>
  class IEncoderDirect_1/*, public ::Photon::Voice::IEncoder*/ {
    public:
    // Creating interface conversion operator: operator ::Photon::Voice::IEncoder
    operator ::Photon::Voice::IEncoder() noexcept {
      return *reinterpret_cast<::Photon::Voice::IEncoder*>(this);
    }
    // public System.Void Input(B buf)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Input(B buf) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IEncoderDirect_1::Input");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IEncoderDirect_1<B>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buf);
    }
  }; // Photon.Voice.IEncoderDirect`1
  // Could not write size check! Type: Photon.Voice.IEncoderDirect`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
