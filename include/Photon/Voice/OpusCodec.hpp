// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Photon::Voice
namespace Photon::Voice {
}
// Completed forward declares
// Type namespace: Photon.Voice
namespace Photon::Voice {
  // Forward declaring type: OpusCodec
  class OpusCodec;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::OpusCodec);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::OpusCodec*, "Photon.Voice", "OpusCodec");
// Type namespace: Photon.Voice
namespace Photon::Voice {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.OpusCodec
  // [TokenAttribute] Offset: FFFFFFFF
  class OpusCodec : public ::Il2CppObject {
    public:
    // Nested type: ::Photon::Voice::OpusCodec::FrameDuration
    struct FrameDuration;
    // Nested type: ::Photon::Voice::OpusCodec::Factory
    class Factory;
    // Nested type: ::Photon::Voice::OpusCodec::DecoderFactory
    class DecoderFactory;
    // Nested type: ::Photon::Voice::OpusCodec::Encoder_1<T>
    template<typename T>
    class Encoder_1;
    // Nested type: ::Photon::Voice::OpusCodec::EncoderFloat
    class EncoderFloat;
    // Nested type: ::Photon::Voice::OpusCodec::EncoderShort
    class EncoderShort;
    // Nested type: ::Photon::Voice::OpusCodec::Decoder_1<T>
    template<typename T>
    class Decoder_1;
    // Nested type: ::Photon::Voice::OpusCodec::Util
    class Util;
    // static public System.String get_Version()
    // Offset: 0x1167210
    static ::StringW get_Version();
    // public System.Void .ctor()
    // Offset: 0x1167214
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OpusCodec* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::OpusCodec::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OpusCodec*, creationType>()));
    }
  }; // Photon.Voice.OpusCodec
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::OpusCodec::get_Version
// Il2CppName: get_Version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&Photon::Voice::OpusCodec::get_Version)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::OpusCodec*), "get_Version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::OpusCodec::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
