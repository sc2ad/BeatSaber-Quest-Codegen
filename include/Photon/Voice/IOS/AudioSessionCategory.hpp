// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Photon.Voice.IOS
namespace Photon::Voice::IOS {
  // Forward declaring type: AudioSessionCategory
  struct AudioSessionCategory;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::IOS::AudioSessionCategory, "Photon.Voice.IOS", "AudioSessionCategory");
// Type namespace: Photon.Voice.IOS
namespace Photon::Voice::IOS {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.IOS.AudioSessionCategory
  // [TokenAttribute] Offset: FFFFFFFF
  struct AudioSessionCategory/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: AudioSessionCategory
    constexpr AudioSessionCategory(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Photon.Voice.IOS.AudioSessionCategory Ambient
    static constexpr const int Ambient = 0;
    // Get static field: static public Photon.Voice.IOS.AudioSessionCategory Ambient
    static ::Photon::Voice::IOS::AudioSessionCategory _get_Ambient();
    // Set static field: static public Photon.Voice.IOS.AudioSessionCategory Ambient
    static void _set_Ambient(::Photon::Voice::IOS::AudioSessionCategory value);
    // static field const value: static public Photon.Voice.IOS.AudioSessionCategory SoloAmbient
    static constexpr const int SoloAmbient = 1;
    // Get static field: static public Photon.Voice.IOS.AudioSessionCategory SoloAmbient
    static ::Photon::Voice::IOS::AudioSessionCategory _get_SoloAmbient();
    // Set static field: static public Photon.Voice.IOS.AudioSessionCategory SoloAmbient
    static void _set_SoloAmbient(::Photon::Voice::IOS::AudioSessionCategory value);
    // static field const value: static public Photon.Voice.IOS.AudioSessionCategory Playback
    static constexpr const int Playback = 2;
    // Get static field: static public Photon.Voice.IOS.AudioSessionCategory Playback
    static ::Photon::Voice::IOS::AudioSessionCategory _get_Playback();
    // Set static field: static public Photon.Voice.IOS.AudioSessionCategory Playback
    static void _set_Playback(::Photon::Voice::IOS::AudioSessionCategory value);
    // static field const value: static public Photon.Voice.IOS.AudioSessionCategory Record
    static constexpr const int Record = 3;
    // Get static field: static public Photon.Voice.IOS.AudioSessionCategory Record
    static ::Photon::Voice::IOS::AudioSessionCategory _get_Record();
    // Set static field: static public Photon.Voice.IOS.AudioSessionCategory Record
    static void _set_Record(::Photon::Voice::IOS::AudioSessionCategory value);
    // static field const value: static public Photon.Voice.IOS.AudioSessionCategory PlayAndRecord
    static constexpr const int PlayAndRecord = 4;
    // Get static field: static public Photon.Voice.IOS.AudioSessionCategory PlayAndRecord
    static ::Photon::Voice::IOS::AudioSessionCategory _get_PlayAndRecord();
    // Set static field: static public Photon.Voice.IOS.AudioSessionCategory PlayAndRecord
    static void _set_PlayAndRecord(::Photon::Voice::IOS::AudioSessionCategory value);
    // static field const value: static public Photon.Voice.IOS.AudioSessionCategory AudioProcessing
    static constexpr const int AudioProcessing = 5;
    // Get static field: static public Photon.Voice.IOS.AudioSessionCategory AudioProcessing
    static ::Photon::Voice::IOS::AudioSessionCategory _get_AudioProcessing();
    // Set static field: static public Photon.Voice.IOS.AudioSessionCategory AudioProcessing
    static void _set_AudioProcessing(::Photon::Voice::IOS::AudioSessionCategory value);
    // static field const value: static public Photon.Voice.IOS.AudioSessionCategory MultiRoute
    static constexpr const int MultiRoute = 6;
    // Get static field: static public Photon.Voice.IOS.AudioSessionCategory MultiRoute
    static ::Photon::Voice::IOS::AudioSessionCategory _get_MultiRoute();
    // Set static field: static public Photon.Voice.IOS.AudioSessionCategory MultiRoute
    static void _set_MultiRoute(::Photon::Voice::IOS::AudioSessionCategory value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Photon.Voice.IOS.AudioSessionCategory
  #pragma pack(pop)
  static check_size<sizeof(AudioSessionCategory), 0 + sizeof(int)> __Photon_Voice_IOS_AudioSessionCategorySizeCheck;
  static_assert(sizeof(AudioSessionCategory) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
