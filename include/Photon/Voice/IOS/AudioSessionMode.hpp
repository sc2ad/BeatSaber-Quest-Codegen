// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Photon.Voice.IOS
namespace Photon::Voice::IOS {
  // Forward declaring type: AudioSessionMode
  struct AudioSessionMode;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::IOS::AudioSessionMode, "Photon.Voice.IOS", "AudioSessionMode");
// Type namespace: Photon.Voice.IOS
namespace Photon::Voice::IOS {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.IOS.AudioSessionMode
  // [TokenAttribute] Offset: FFFFFFFF
  struct AudioSessionMode/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: AudioSessionMode
    constexpr AudioSessionMode(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Photon.Voice.IOS.AudioSessionMode Default
    static constexpr const int Default = 0;
    // Get static field: static public Photon.Voice.IOS.AudioSessionMode Default
    static ::Photon::Voice::IOS::AudioSessionMode _get_Default();
    // Set static field: static public Photon.Voice.IOS.AudioSessionMode Default
    static void _set_Default(::Photon::Voice::IOS::AudioSessionMode value);
    // static field const value: static public Photon.Voice.IOS.AudioSessionMode VoiceChat
    static constexpr const int VoiceChat = 1;
    // Get static field: static public Photon.Voice.IOS.AudioSessionMode VoiceChat
    static ::Photon::Voice::IOS::AudioSessionMode _get_VoiceChat();
    // Set static field: static public Photon.Voice.IOS.AudioSessionMode VoiceChat
    static void _set_VoiceChat(::Photon::Voice::IOS::AudioSessionMode value);
    // static field const value: static public Photon.Voice.IOS.AudioSessionMode VideoRecording
    static constexpr const int VideoRecording = 3;
    // Get static field: static public Photon.Voice.IOS.AudioSessionMode VideoRecording
    static ::Photon::Voice::IOS::AudioSessionMode _get_VideoRecording();
    // Set static field: static public Photon.Voice.IOS.AudioSessionMode VideoRecording
    static void _set_VideoRecording(::Photon::Voice::IOS::AudioSessionMode value);
    // static field const value: static public Photon.Voice.IOS.AudioSessionMode Measurement
    static constexpr const int Measurement = 4;
    // Get static field: static public Photon.Voice.IOS.AudioSessionMode Measurement
    static ::Photon::Voice::IOS::AudioSessionMode _get_Measurement();
    // Set static field: static public Photon.Voice.IOS.AudioSessionMode Measurement
    static void _set_Measurement(::Photon::Voice::IOS::AudioSessionMode value);
    // static field const value: static public Photon.Voice.IOS.AudioSessionMode MoviePlayback
    static constexpr const int MoviePlayback = 5;
    // Get static field: static public Photon.Voice.IOS.AudioSessionMode MoviePlayback
    static ::Photon::Voice::IOS::AudioSessionMode _get_MoviePlayback();
    // Set static field: static public Photon.Voice.IOS.AudioSessionMode MoviePlayback
    static void _set_MoviePlayback(::Photon::Voice::IOS::AudioSessionMode value);
    // static field const value: static public Photon.Voice.IOS.AudioSessionMode VideoChat
    static constexpr const int VideoChat = 6;
    // Get static field: static public Photon.Voice.IOS.AudioSessionMode VideoChat
    static ::Photon::Voice::IOS::AudioSessionMode _get_VideoChat();
    // Set static field: static public Photon.Voice.IOS.AudioSessionMode VideoChat
    static void _set_VideoChat(::Photon::Voice::IOS::AudioSessionMode value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Photon.Voice.IOS.AudioSessionMode
  #pragma pack(pop)
  static check_size<sizeof(AudioSessionMode), 0 + sizeof(int)> __Photon_Voice_IOS_AudioSessionModeSizeCheck;
  static_assert(sizeof(AudioSessionMode) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
