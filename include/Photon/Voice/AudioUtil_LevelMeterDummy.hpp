// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.AudioUtil
#include "Photon/Voice/AudioUtil.hpp"
// Including type: Photon.Voice.AudioUtil/Photon.Voice.ILevelMeter
#include "Photon/Voice/AudioUtil_ILevelMeter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::AudioUtil::LevelMeterDummy);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::AudioUtil::LevelMeterDummy*, "Photon.Voice", "AudioUtil/LevelMeterDummy");
// Type namespace: Photon.Voice
namespace Photon::Voice {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.AudioUtil/Photon.Voice.LevelMeterDummy
  // [TokenAttribute] Offset: FFFFFFFF
  class AudioUtil::LevelMeterDummy : public ::Il2CppObject/*, public ::Photon::Voice::AudioUtil::ILevelMeter*/ {
    public:
    // Creating interface conversion operator: operator ::Photon::Voice::AudioUtil::ILevelMeter
    operator ::Photon::Voice::AudioUtil::ILevelMeter() noexcept {
      return *reinterpret_cast<::Photon::Voice::AudioUtil::ILevelMeter*>(this);
    }
    // public System.Single get_CurrentAvgAmp()
    // Offset: 0x115F220
    float get_CurrentAvgAmp();
    // public System.Single get_CurrentPeakAmp()
    // Offset: 0x115F228
    float get_CurrentPeakAmp();
    // public System.Single get_AccumAvgPeakAmp()
    // Offset: 0x115F230
    float get_AccumAvgPeakAmp();
    // public System.Void .ctor()
    // Offset: 0x115F23C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AudioUtil::LevelMeterDummy* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::AudioUtil::LevelMeterDummy::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AudioUtil::LevelMeterDummy*, creationType>()));
    }
    // public System.Void ResetAccumAvgPeakAmp()
    // Offset: 0x115F238
    void ResetAccumAvgPeakAmp();
  }; // Photon.Voice.AudioUtil/Photon.Voice.LevelMeterDummy
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::AudioUtil::LevelMeterDummy::get_CurrentAvgAmp
// Il2CppName: get_CurrentAvgAmp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Photon::Voice::AudioUtil::LevelMeterDummy::*)()>(&Photon::Voice::AudioUtil::LevelMeterDummy::get_CurrentAvgAmp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::AudioUtil::LevelMeterDummy*), "get_CurrentAvgAmp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::AudioUtil::LevelMeterDummy::get_CurrentPeakAmp
// Il2CppName: get_CurrentPeakAmp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Photon::Voice::AudioUtil::LevelMeterDummy::*)()>(&Photon::Voice::AudioUtil::LevelMeterDummy::get_CurrentPeakAmp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::AudioUtil::LevelMeterDummy*), "get_CurrentPeakAmp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::AudioUtil::LevelMeterDummy::get_AccumAvgPeakAmp
// Il2CppName: get_AccumAvgPeakAmp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Photon::Voice::AudioUtil::LevelMeterDummy::*)()>(&Photon::Voice::AudioUtil::LevelMeterDummy::get_AccumAvgPeakAmp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::AudioUtil::LevelMeterDummy*), "get_AccumAvgPeakAmp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::AudioUtil::LevelMeterDummy::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Voice::AudioUtil::LevelMeterDummy::ResetAccumAvgPeakAmp
// Il2CppName: ResetAccumAvgPeakAmp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::AudioUtil::LevelMeterDummy::*)()>(&Photon::Voice::AudioUtil::LevelMeterDummy::ResetAccumAvgPeakAmp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::AudioUtil::LevelMeterDummy*), "ResetAccumAvgPeakAmp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
