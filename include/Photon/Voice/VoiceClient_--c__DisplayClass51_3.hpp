// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.VoiceClient
#include "Photon/Voice/VoiceClient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Photon::Voice
namespace Photon::Voice {
  // Forward declaring type: LocalVoiceAudio`1<T>
  template<typename T>
  class LocalVoiceAudio_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::VoiceClient::$$c__DisplayClass51_3);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::VoiceClient::$$c__DisplayClass51_3*, "Photon.Voice", "VoiceClient/<>c__DisplayClass51_3");
// Type namespace: Photon.Voice
namespace Photon::Voice {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.VoiceClient/Photon.Voice.<>c__DisplayClass51_3
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class VoiceClient::$$c__DisplayClass51_3 : public ::Il2CppObject {
    public:
    public:
    // public Photon.Voice.LocalVoiceAudio`1<System.Int16> localVoice
    // Size: 0x8
    // Offset: 0x10
    ::Photon::Voice::LocalVoiceAudio_1<int16_t>* localVoice;
    // Field size check
    static_assert(sizeof(::Photon::Voice::LocalVoiceAudio_1<int16_t>*) == 0x8);
    public:
    // Creating conversion operator: operator ::Photon::Voice::LocalVoiceAudio_1<int16_t>*
    constexpr operator ::Photon::Voice::LocalVoiceAudio_1<int16_t>*() const noexcept {
      return localVoice;
    }
    // Get instance field reference: public Photon.Voice.LocalVoiceAudio`1<System.Int16> localVoice
    [[deprecated("Use field access instead!")]] ::Photon::Voice::LocalVoiceAudio_1<int16_t>*& dyn_localVoice();
    // public System.Void .ctor()
    // Offset: 0x1BDD5B0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VoiceClient::$$c__DisplayClass51_3* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c__DisplayClass51_3::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VoiceClient::$$c__DisplayClass51_3*, creationType>()));
    }
    // System.Void <CreateLocalVoiceAudioFromSource>b__3(System.Int16[] buf)
    // Offset: 0x1BDD5B8
    void $CreateLocalVoiceAudioFromSource$b__3(::ArrayW<int16_t> buf);
  }; // Photon.Voice.VoiceClient/Photon.Voice.<>c__DisplayClass51_3
  #pragma pack(pop)
  static check_size<sizeof(VoiceClient::$$c__DisplayClass51_3), 16 + sizeof(::Photon::Voice::LocalVoiceAudio_1<int16_t>*)> __Photon_Voice_VoiceClient_$$c__DisplayClass51_3SizeCheck;
  static_assert(sizeof(VoiceClient::$$c__DisplayClass51_3) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::VoiceClient::$$c__DisplayClass51_3::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Voice::VoiceClient::$$c__DisplayClass51_3::$CreateLocalVoiceAudioFromSource$b__3
// Il2CppName: <CreateLocalVoiceAudioFromSource>b__3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::VoiceClient::$$c__DisplayClass51_3::*)(::ArrayW<int16_t>)>(&Photon::Voice::VoiceClient::$$c__DisplayClass51_3::$CreateLocalVoiceAudioFromSource$b__3)> {
  static const MethodInfo* get() {
    static auto* buf = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::VoiceClient::$$c__DisplayClass51_3*), "<CreateLocalVoiceAudioFromSource>b__3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buf});
  }
};
