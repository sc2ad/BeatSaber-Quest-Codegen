// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: Photon.Voice
namespace Photon::Voice {
  // Forward declaring type: ILogger
  class ILogger;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::ILogger);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::ILogger*, "Photon.Voice", "ILogger");
// Type namespace: Photon.Voice
namespace Photon::Voice {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.ILogger
  // [TokenAttribute] Offset: FFFFFFFF
  class ILogger {
    public:
    // public System.Void LogError(System.String fmt, params System.Object[] args)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LogError(::StringW fmt, ::ArrayW<::Il2CppObject*> args);
    // public System.Void LogWarning(System.String fmt, params System.Object[] args)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LogWarning(::StringW fmt, ::ArrayW<::Il2CppObject*> args);
    // public System.Void LogInfo(System.String fmt, params System.Object[] args)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LogInfo(::StringW fmt, ::ArrayW<::Il2CppObject*> args);
    // public System.Void LogDebug(System.String fmt, params System.Object[] args)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void LogDebug(::StringW fmt, ::ArrayW<::Il2CppObject*> args);
  }; // Photon.Voice.ILogger
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::ILogger::LogError
// Il2CppName: LogError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::ILogger::*)(::StringW, ::ArrayW<::Il2CppObject*>)>(&Photon::Voice::ILogger::LogError)> {
  static const MethodInfo* get() {
    static auto* fmt = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::ILogger*), "LogError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fmt, args});
  }
};
// Writing MetadataGetter for method: Photon::Voice::ILogger::LogWarning
// Il2CppName: LogWarning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::ILogger::*)(::StringW, ::ArrayW<::Il2CppObject*>)>(&Photon::Voice::ILogger::LogWarning)> {
  static const MethodInfo* get() {
    static auto* fmt = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::ILogger*), "LogWarning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fmt, args});
  }
};
// Writing MetadataGetter for method: Photon::Voice::ILogger::LogInfo
// Il2CppName: LogInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::ILogger::*)(::StringW, ::ArrayW<::Il2CppObject*>)>(&Photon::Voice::ILogger::LogInfo)> {
  static const MethodInfo* get() {
    static auto* fmt = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::ILogger*), "LogInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fmt, args});
  }
};
// Writing MetadataGetter for method: Photon::Voice::ILogger::LogDebug
// Il2CppName: LogDebug
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::ILogger::*)(::StringW, ::ArrayW<::Il2CppObject*>)>(&Photon::Voice::ILogger::LogDebug)> {
  static const MethodInfo* get() {
    static auto* fmt = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* args = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::ILogger*), "LogDebug", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fmt, args});
  }
};
