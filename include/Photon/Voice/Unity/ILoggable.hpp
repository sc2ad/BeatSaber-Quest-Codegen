// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: DebugLevel
  struct DebugLevel;
}
// Forward declaring namespace: Photon::Voice::Unity
namespace Photon::Voice::Unity {
  // Forward declaring type: VoiceLogger
  class VoiceLogger;
}
// Completed forward declares
// Type namespace: Photon.Voice.Unity
namespace Photon::Voice::Unity {
  // Forward declaring type: ILoggable
  class ILoggable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::Unity::ILoggable);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::Unity::ILoggable*, "Photon.Voice.Unity", "ILoggable");
// Type namespace: Photon.Voice.Unity
namespace Photon::Voice::Unity {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.Unity.ILoggable
  // [TokenAttribute] Offset: FFFFFFFF
  class ILoggable {
    public:
    // public ExitGames.Client.Photon.DebugLevel get_LogLevel()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::ExitGames::Client::Photon::DebugLevel get_LogLevel();
    // public System.Void set_LogLevel(ExitGames.Client.Photon.DebugLevel value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_LogLevel(::ExitGames::Client::Photon::DebugLevel value);
    // public Photon.Voice.Unity.VoiceLogger get_Logger()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::Photon::Voice::Unity::VoiceLogger* get_Logger();
  }; // Photon.Voice.Unity.ILoggable
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::Unity::ILoggable::get_LogLevel
// Il2CppName: get_LogLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::DebugLevel (Photon::Voice::Unity::ILoggable::*)()>(&Photon::Voice::Unity::ILoggable::get_LogLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::ILoggable*), "get_LogLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::ILoggable::set_LogLevel
// Il2CppName: set_LogLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::ILoggable::*)(::ExitGames::Client::Photon::DebugLevel)>(&Photon::Voice::Unity::ILoggable::set_LogLevel)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "DebugLevel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::ILoggable*), "set_LogLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::ILoggable::get_Logger
// Il2CppName: get_Logger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Voice::Unity::VoiceLogger* (Photon::Voice::Unity::ILoggable::*)()>(&Photon::Voice::Unity::ILoggable::get_Logger)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::ILoggable*), "get_Logger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
