// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.Unity.VoiceComponent
#include "Photon/Voice/Unity/VoiceComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Photon::Voice::Unity::UtilityScripts
namespace Photon::Voice::Unity::UtilityScripts {
}
// Forward declaring namespace: CSCore::Codecs::WAV
namespace CSCore::Codecs::WAV {
  // Forward declaring type: WaveWriter
  class WaveWriter;
}
// Forward declaring namespace: Photon::Voice::Unity
namespace Photon::Voice::Unity {
  // Forward declaring type: PhotonVoiceCreatedParams
  class PhotonVoiceCreatedParams;
}
// Completed forward declares
// Type namespace: Photon.Voice.Unity.UtilityScripts
namespace Photon::Voice::Unity::UtilityScripts {
  // Forward declaring type: SaveOutgoingStreamToFile
  class SaveOutgoingStreamToFile;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile*, "Photon.Voice.Unity.UtilityScripts", "SaveOutgoingStreamToFile");
// Type namespace: Photon.Voice.Unity.UtilityScripts
namespace Photon::Voice::Unity::UtilityScripts {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: 955CCC
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  class SaveOutgoingStreamToFile : public ::Photon::Voice::Unity::VoiceComponent {
    public:
    // Writing base type padding for base size: 0x22 to desired offset: 0x28
    char ___base_padding[0x6] = {};
    // Nested type: ::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverFloat
    class OutgoingStreamSaverFloat;
    // Nested type: ::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort
    class OutgoingStreamSaverShort;
    public:
    // private CSCore.Codecs.WAV.WaveWriter wavWriter
    // Size: 0x8
    // Offset: 0x28
    ::CSCore::Codecs::WAV::WaveWriter* wavWriter;
    // Field size check
    static_assert(sizeof(::CSCore::Codecs::WAV::WaveWriter*) == 0x8);
    public:
    // Get instance field reference: private CSCore.Codecs.WAV.WaveWriter wavWriter
    [[deprecated("Use field access instead!")]] ::CSCore::Codecs::WAV::WaveWriter*& dyn_wavWriter();
    // private System.Void PhotonVoiceCreated(Photon.Voice.Unity.PhotonVoiceCreatedParams photonVoiceCreatedParams)
    // Offset: 0x1048304
    void PhotonVoiceCreated(::Photon::Voice::Unity::PhotonVoiceCreatedParams* photonVoiceCreatedParams);
    // private System.String GetFilePath()
    // Offset: 0x10486C4
    ::StringW GetFilePath();
    // private System.Void PhotonVoiceRemoved()
    // Offset: 0x104883C
    void PhotonVoiceRemoved();
    // public System.Void .ctor()
    // Offset: 0x104896C
    // Implemented from: Photon.Voice.Unity.VoiceComponent
    // Base method: System.Void VoiceComponent::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SaveOutgoingStreamToFile* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SaveOutgoingStreamToFile*, creationType>()));
    }
  }; // Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile
  #pragma pack(pop)
  static check_size<sizeof(SaveOutgoingStreamToFile), 40 + sizeof(::CSCore::Codecs::WAV::WaveWriter*)> __Photon_Voice_Unity_UtilityScripts_SaveOutgoingStreamToFileSizeCheck;
  static_assert(sizeof(SaveOutgoingStreamToFile) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::PhotonVoiceCreated
// Il2CppName: PhotonVoiceCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::*)(::Photon::Voice::Unity::PhotonVoiceCreatedParams*)>(&Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::PhotonVoiceCreated)> {
  static const MethodInfo* get() {
    static auto* photonVoiceCreatedParams = &::il2cpp_utils::GetClassFromName("Photon.Voice.Unity", "PhotonVoiceCreatedParams")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile*), "PhotonVoiceCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{photonVoiceCreatedParams});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::GetFilePath
// Il2CppName: GetFilePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::*)()>(&Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::GetFilePath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile*), "GetFilePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::PhotonVoiceRemoved
// Il2CppName: PhotonVoiceRemoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::*)()>(&Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::PhotonVoiceRemoved)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile*), "PhotonVoiceRemoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
