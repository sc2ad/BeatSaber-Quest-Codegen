// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.IProcessor`1
#include "Photon/Voice/IProcessor_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: Photon.Voice.Unity.UtilityScripts
namespace Photon::Voice::Unity::UtilityScripts {
  // Forward declaring type: MicAmplifierShort
  class MicAmplifierShort;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort*, "Photon.Voice.Unity.UtilityScripts", "MicAmplifierShort");
// Type namespace: Photon.Voice.Unity.UtilityScripts
namespace Photon::Voice::Unity::UtilityScripts {
  // Size: 0x19
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.Unity.UtilityScripts.MicAmplifierShort
  // [TokenAttribute] Offset: FFFFFFFF
  class MicAmplifierShort : public ::Il2CppObject/*, public ::Photon::Voice::IProcessor_1<int16_t>*/ {
    public:
    public:
    // private System.Int16 <AmplificationFactor>k__BackingField
    // Size: 0x2
    // Offset: 0x10
    int16_t AmplificationFactor;
    // Field size check
    static_assert(sizeof(int16_t) == 0x2);
    // private System.Int16 <BoostValue>k__BackingField
    // Size: 0x2
    // Offset: 0x12
    int16_t BoostValue;
    // Field size check
    static_assert(sizeof(int16_t) == 0x2);
    // private System.Int16 <MaxBefore>k__BackingField
    // Size: 0x2
    // Offset: 0x14
    int16_t MaxBefore;
    // Field size check
    static_assert(sizeof(int16_t) == 0x2);
    // private System.Int16 <MaxAfter>k__BackingField
    // Size: 0x2
    // Offset: 0x16
    int16_t MaxAfter;
    // Field size check
    static_assert(sizeof(int16_t) == 0x2);
    // private System.Boolean <Disabled>k__BackingField
    // Size: 0x1
    // Offset: 0x18
    bool Disabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::Photon::Voice::IProcessor_1<int16_t>
    operator ::Photon::Voice::IProcessor_1<int16_t>() noexcept {
      return *reinterpret_cast<::Photon::Voice::IProcessor_1<int16_t>*>(this);
    }
    // Get instance field reference: private System.Int16 <AmplificationFactor>k__BackingField
    [[deprecated("Use field access instead!")]] int16_t& dyn_$AmplificationFactor$k__BackingField();
    // Get instance field reference: private System.Int16 <BoostValue>k__BackingField
    [[deprecated("Use field access instead!")]] int16_t& dyn_$BoostValue$k__BackingField();
    // Get instance field reference: private System.Int16 <MaxBefore>k__BackingField
    [[deprecated("Use field access instead!")]] int16_t& dyn_$MaxBefore$k__BackingField();
    // Get instance field reference: private System.Int16 <MaxAfter>k__BackingField
    [[deprecated("Use field access instead!")]] int16_t& dyn_$MaxAfter$k__BackingField();
    // Get instance field reference: private System.Boolean <Disabled>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$Disabled$k__BackingField();
    // public System.Int16 get_AmplificationFactor()
    // Offset: 0x1044838
    int16_t get_AmplificationFactor();
    // public System.Void set_AmplificationFactor(System.Int16 value)
    // Offset: 0x1044840
    void set_AmplificationFactor(int16_t value);
    // public System.Int16 get_BoostValue()
    // Offset: 0x1044848
    int16_t get_BoostValue();
    // public System.Void set_BoostValue(System.Int16 value)
    // Offset: 0x1044850
    void set_BoostValue(int16_t value);
    // public System.Int16 get_MaxBefore()
    // Offset: 0x1044858
    int16_t get_MaxBefore();
    // private System.Void set_MaxBefore(System.Int16 value)
    // Offset: 0x1044860
    void set_MaxBefore(int16_t value);
    // public System.Int16 get_MaxAfter()
    // Offset: 0x1044868
    int16_t get_MaxAfter();
    // private System.Void set_MaxAfter(System.Int16 value)
    // Offset: 0x1044870
    void set_MaxAfter(int16_t value);
    // public System.Boolean get_Disabled()
    // Offset: 0x1044878
    bool get_Disabled();
    // public System.Void set_Disabled(System.Boolean value)
    // Offset: 0x1044880
    void set_Disabled(bool value);
    // public System.Void .ctor(System.Int16 amplificationFactor, System.Int16 boostValue)
    // Offset: 0x10446E8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MicAmplifierShort* New_ctor(int16_t amplificationFactor, int16_t boostValue) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MicAmplifierShort*, creationType>(amplificationFactor, boostValue)));
    }
    // public System.Int16[] Process(System.Int16[] buf)
    // Offset: 0x104488C
    ::ArrayW<int16_t> Process(::ArrayW<int16_t> buf);
    // public System.Void Dispose()
    // Offset: 0x104492C
    void Dispose();
  }; // Photon.Voice.Unity.UtilityScripts.MicAmplifierShort
  #pragma pack(pop)
  static check_size<sizeof(MicAmplifierShort), 24 + sizeof(bool)> __Photon_Voice_Unity_UtilityScripts_MicAmplifierShortSizeCheck;
  static_assert(sizeof(MicAmplifierShort) == 0x19);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_AmplificationFactor
// Il2CppName: get_AmplificationFactor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int16_t (Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::*)()>(&Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_AmplificationFactor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::MicAmplifierShort*), "get_AmplificationFactor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_AmplificationFactor
// Il2CppName: set_AmplificationFactor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::*)(int16_t)>(&Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_AmplificationFactor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::MicAmplifierShort*), "set_AmplificationFactor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_BoostValue
// Il2CppName: get_BoostValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int16_t (Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::*)()>(&Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_BoostValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::MicAmplifierShort*), "get_BoostValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_BoostValue
// Il2CppName: set_BoostValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::*)(int16_t)>(&Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_BoostValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::MicAmplifierShort*), "set_BoostValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_MaxBefore
// Il2CppName: get_MaxBefore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int16_t (Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::*)()>(&Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_MaxBefore)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::MicAmplifierShort*), "get_MaxBefore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_MaxBefore
// Il2CppName: set_MaxBefore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::*)(int16_t)>(&Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_MaxBefore)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::MicAmplifierShort*), "set_MaxBefore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_MaxAfter
// Il2CppName: get_MaxAfter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int16_t (Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::*)()>(&Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_MaxAfter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::MicAmplifierShort*), "get_MaxAfter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_MaxAfter
// Il2CppName: set_MaxAfter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::*)(int16_t)>(&Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_MaxAfter)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::MicAmplifierShort*), "set_MaxAfter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_Disabled
// Il2CppName: get_Disabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::*)()>(&Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_Disabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::MicAmplifierShort*), "get_Disabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_Disabled
// Il2CppName: set_Disabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::*)(bool)>(&Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_Disabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::MicAmplifierShort*), "set_Disabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::Process
// Il2CppName: Process
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int16_t> (Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::*)(::ArrayW<int16_t>)>(&Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::Process)> {
  static const MethodInfo* get() {
    static auto* buf = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::MicAmplifierShort*), "Process", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buf});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::*)()>(&Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::MicAmplifierShort*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
