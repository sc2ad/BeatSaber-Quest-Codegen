// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile
#include "Photon/Voice/Unity/UtilityScripts/SaveIncomingStreamToFile.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: CSCore::Codecs::WAV
namespace CSCore::Codecs::WAV {
  // Forward declaring type: WaveWriter
  class WaveWriter;
}
// Forward declaring namespace: Photon::Voice
namespace Photon::Voice {
  // Forward declaring type: FrameOut`1<T>
  template<typename T>
  class FrameOut_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0*, "Photon.Voice.Unity.UtilityScripts", "SaveIncomingStreamToFile/<>c__DisplayClass5_0");
// Type namespace: Photon.Voice.Unity.UtilityScripts
namespace Photon::Voice::Unity::UtilityScripts {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile/Photon.Voice.Unity.UtilityScripts.<>c__DisplayClass5_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class SaveIncomingStreamToFile::$$c__DisplayClass5_0 : public ::Il2CppObject {
    public:
    public:
    // public CSCore.Codecs.WAV.WaveWriter waveWriter
    // Size: 0x8
    // Offset: 0x10
    ::CSCore::Codecs::WAV::WaveWriter* waveWriter;
    // Field size check
    static_assert(sizeof(::CSCore::Codecs::WAV::WaveWriter*) == 0x8);
    // public Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile <>4__this
    // Size: 0x8
    // Offset: 0x18
    ::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile* $$4__this;
    // Field size check
    static_assert(sizeof(::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile*) == 0x8);
    public:
    // Get instance field reference: public CSCore.Codecs.WAV.WaveWriter waveWriter
    [[deprecated("Use field access instead!")]] ::CSCore::Codecs::WAV::WaveWriter*& dyn_waveWriter();
    // Get instance field reference: public Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile <>4__this
    [[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile*& dyn_$$4__this();
    // public System.Void .ctor()
    // Offset: 0x1047EE4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SaveIncomingStreamToFile::$$c__DisplayClass5_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SaveIncomingStreamToFile::$$c__DisplayClass5_0*, creationType>()));
    }
    // System.Void <OnRemoteVoiceAdded>b__0(Photon.Voice.FrameOut`1<System.Single> f)
    // Offset: 0x1048170
    void $OnRemoteVoiceAdded$b__0(::Photon::Voice::FrameOut_1<float>* f);
    // System.Void <OnRemoteVoiceAdded>b__1()
    // Offset: 0x10481DC
    void $OnRemoteVoiceAdded$b__1();
  }; // Photon.Voice.Unity.UtilityScripts.SaveIncomingStreamToFile/Photon.Voice.Unity.UtilityScripts.<>c__DisplayClass5_0
  #pragma pack(pop)
  static check_size<sizeof(SaveIncomingStreamToFile::$$c__DisplayClass5_0), 24 + sizeof(::Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile*)> __Photon_Voice_Unity_UtilityScripts_SaveIncomingStreamToFile_$$c__DisplayClass5_0SizeCheck;
  static_assert(sizeof(SaveIncomingStreamToFile::$$c__DisplayClass5_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0::$OnRemoteVoiceAdded$b__0
// Il2CppName: <OnRemoteVoiceAdded>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0::*)(::Photon::Voice::FrameOut_1<float>*)>(&Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0::$OnRemoteVoiceAdded$b__0)> {
  static const MethodInfo* get() {
    static auto* f = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Photon.Voice", "FrameOut`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0*), "<OnRemoteVoiceAdded>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{f});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0::$OnRemoteVoiceAdded$b__1
// Il2CppName: <OnRemoteVoiceAdded>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0::*)()>(&Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0::$OnRemoteVoiceAdded$b__1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::SaveIncomingStreamToFile::$$c__DisplayClass5_0*), "<OnRemoteVoiceAdded>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
