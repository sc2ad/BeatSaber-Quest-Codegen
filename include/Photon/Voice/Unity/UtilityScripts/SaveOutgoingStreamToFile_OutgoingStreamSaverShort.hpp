// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile
#include "Photon/Voice/Unity/UtilityScripts/SaveOutgoingStreamToFile.hpp"
// Including type: Photon.Voice.IProcessor`1
#include "Photon/Voice/IProcessor_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: CSCore::Codecs::WAV
namespace CSCore::Codecs::WAV {
  // Forward declaring type: WaveWriter
  class WaveWriter;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort*, "Photon.Voice.Unity.UtilityScripts", "SaveOutgoingStreamToFile/OutgoingStreamSaverShort");
// Type namespace: Photon.Voice.Unity.UtilityScripts
namespace Photon::Voice::Unity::UtilityScripts {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile/Photon.Voice.Unity.UtilityScripts.OutgoingStreamSaverShort
  // [TokenAttribute] Offset: FFFFFFFF
  class SaveOutgoingStreamToFile::OutgoingStreamSaverShort : public ::Il2CppObject/*, public ::Photon::Voice::IProcessor_1<int16_t>*/ {
    public:
    public:
    // private CSCore.Codecs.WAV.WaveWriter wavWriter
    // Size: 0x8
    // Offset: 0x10
    ::CSCore::Codecs::WAV::WaveWriter* wavWriter;
    // Field size check
    static_assert(sizeof(::CSCore::Codecs::WAV::WaveWriter*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Photon::Voice::IProcessor_1<int16_t>
    operator ::Photon::Voice::IProcessor_1<int16_t>() noexcept {
      return *reinterpret_cast<::Photon::Voice::IProcessor_1<int16_t>*>(this);
    }
    // Creating conversion operator: operator ::CSCore::Codecs::WAV::WaveWriter*
    constexpr operator ::CSCore::Codecs::WAV::WaveWriter*() const noexcept {
      return wavWriter;
    }
    // Get instance field reference: private CSCore.Codecs.WAV.WaveWriter wavWriter
    [[deprecated("Use field access instead!")]] ::CSCore::Codecs::WAV::WaveWriter*& dyn_wavWriter();
    // public System.Void .ctor(CSCore.Codecs.WAV.WaveWriter waveWriter)
    // Offset: 0x1048810
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SaveOutgoingStreamToFile::OutgoingStreamSaverShort* New_ctor(::CSCore::Codecs::WAV::WaveWriter* waveWriter) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SaveOutgoingStreamToFile::OutgoingStreamSaverShort*, creationType>(waveWriter)));
    }
    // public System.Int16[] Process(System.Int16[] buf)
    // Offset: 0x10489E4
    ::ArrayW<int16_t> Process(::ArrayW<int16_t> buf);
    // public System.Void Dispose()
    // Offset: 0x1048A64
    void Dispose();
  }; // Photon.Voice.Unity.UtilityScripts.SaveOutgoingStreamToFile/Photon.Voice.Unity.UtilityScripts.OutgoingStreamSaverShort
  #pragma pack(pop)
  static check_size<sizeof(SaveOutgoingStreamToFile::OutgoingStreamSaverShort), 16 + sizeof(::CSCore::Codecs::WAV::WaveWriter*)> __Photon_Voice_Unity_UtilityScripts_SaveOutgoingStreamToFile_OutgoingStreamSaverShortSizeCheck;
  static_assert(sizeof(SaveOutgoingStreamToFile::OutgoingStreamSaverShort) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort::Process
// Il2CppName: Process
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int16_t> (Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort::*)(::ArrayW<int16_t>)>(&Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort::Process)> {
  static const MethodInfo* get() {
    static auto* buf = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort*), "Process", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buf});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort::*)()>(&Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::UtilityScripts::SaveOutgoingStreamToFile::OutgoingStreamSaverShort*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
