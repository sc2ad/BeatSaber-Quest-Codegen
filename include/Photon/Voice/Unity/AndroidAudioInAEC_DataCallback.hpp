// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.Unity.AndroidAudioInAEC
#include "Photon/Voice/Unity/AndroidAudioInAEC.hpp"
// Including type: UnityEngine.AndroidJavaProxy
#include "UnityEngine/AndroidJavaProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::Unity::AndroidAudioInAEC::DataCallback);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::Unity::AndroidAudioInAEC::DataCallback*, "Photon.Voice.Unity", "AndroidAudioInAEC/DataCallback");
// Type namespace: Photon.Voice.Unity
namespace Photon::Voice::Unity {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.Unity.AndroidAudioInAEC/Photon.Voice.Unity.DataCallback
  // [TokenAttribute] Offset: FFFFFFFF
  class AndroidAudioInAEC::DataCallback : public ::UnityEngine::AndroidJavaProxy {
    public:
    public:
    // private System.Action`1<System.Int16[]> callback
    // Size: 0x8
    // Offset: 0x20
    ::System::Action_1<::ArrayW<int16_t>>* callback;
    // Field size check
    static_assert(sizeof(::System::Action_1<::ArrayW<int16_t>>*) == 0x8);
    // private System.IntPtr javaBuf
    // Size: 0x8
    // Offset: 0x28
    ::System::IntPtr javaBuf;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // private System.Int32 cntFrame
    // Size: 0x4
    // Offset: 0x30
    int cntFrame;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 cntShort
    // Size: 0x4
    // Offset: 0x34
    int cntShort;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private System.Action`1<System.Int16[]> callback
    [[deprecated("Use field access instead!")]] ::System::Action_1<::ArrayW<int16_t>>*& dyn_callback();
    // Get instance field reference: private System.IntPtr javaBuf
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_javaBuf();
    // Get instance field reference: private System.Int32 cntFrame
    [[deprecated("Use field access instead!")]] int& dyn_cntFrame();
    // Get instance field reference: private System.Int32 cntShort
    [[deprecated("Use field access instead!")]] int& dyn_cntShort();
    // public System.Void .ctor()
    // Offset: 0x116D0BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AndroidAudioInAEC::DataCallback* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AndroidAudioInAEC::DataCallback*, creationType>()));
    }
    // public System.Void SetCallback(System.Action`1<System.Int16[]> callback, System.IntPtr javaBuf)
    // Offset: 0x116D3B8
    void SetCallback(::System::Action_1<::ArrayW<int16_t>>* callback, ::System::IntPtr javaBuf);
    // public System.Void OnData()
    // Offset: 0x116D5E0
    void OnData();
    // public System.Void OnStop()
    // Offset: 0x116D67C
    void OnStop();
  }; // Photon.Voice.Unity.AndroidAudioInAEC/Photon.Voice.Unity.DataCallback
  #pragma pack(pop)
  static check_size<sizeof(AndroidAudioInAEC::DataCallback), 52 + sizeof(int)> __Photon_Voice_Unity_AndroidAudioInAEC_DataCallbackSizeCheck;
  static_assert(sizeof(AndroidAudioInAEC::DataCallback) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::SetCallback
// Il2CppName: SetCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::*)(::System::Action_1<::ArrayW<int16_t>>*, ::System::IntPtr)>(&Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::SetCallback)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int16"), 1)})->byval_arg;
    static auto* javaBuf = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::AndroidAudioInAEC::DataCallback*), "SetCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, javaBuf});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::OnData
// Il2CppName: OnData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::*)()>(&Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::OnData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::AndroidAudioInAEC::DataCallback*), "OnData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::OnStop
// Il2CppName: OnStop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::*)()>(&Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::OnStop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::AndroidAudioInAEC::DataCallback*), "OnStop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
