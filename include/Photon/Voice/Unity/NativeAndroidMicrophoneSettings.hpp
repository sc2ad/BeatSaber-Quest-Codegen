// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: Photon.Voice.Unity
namespace Photon::Voice::Unity {
  // Forward declaring type: NativeAndroidMicrophoneSettings
  struct NativeAndroidMicrophoneSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::Unity::NativeAndroidMicrophoneSettings, "Photon.Voice.Unity", "NativeAndroidMicrophoneSettings");
// Type namespace: Photon.Voice.Unity
namespace Photon::Voice::Unity {
  // Size: 0x3
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Photon.Voice.Unity.NativeAndroidMicrophoneSettings
  // [TokenAttribute] Offset: FFFFFFFF
  struct NativeAndroidMicrophoneSettings/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Boolean AcousticEchoCancellation
    // Size: 0x1
    // Offset: 0x0
    bool AcousticEchoCancellation;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean AutomaticGainControl
    // Size: 0x1
    // Offset: 0x1
    bool AutomaticGainControl;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean NoiseSuppression
    // Size: 0x1
    // Offset: 0x2
    bool NoiseSuppression;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: NativeAndroidMicrophoneSettings
    constexpr NativeAndroidMicrophoneSettings(bool AcousticEchoCancellation_ = {}, bool AutomaticGainControl_ = {}, bool NoiseSuppression_ = {}) noexcept : AcousticEchoCancellation{AcousticEchoCancellation_}, AutomaticGainControl{AutomaticGainControl_}, NoiseSuppression{NoiseSuppression_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Boolean AcousticEchoCancellation
    [[deprecated("Use field access instead!")]] bool& dyn_AcousticEchoCancellation();
    // Get instance field reference: public System.Boolean AutomaticGainControl
    [[deprecated("Use field access instead!")]] bool& dyn_AutomaticGainControl();
    // Get instance field reference: public System.Boolean NoiseSuppression
    [[deprecated("Use field access instead!")]] bool& dyn_NoiseSuppression();
  }; // Photon.Voice.Unity.NativeAndroidMicrophoneSettings
  #pragma pack(pop)
  static check_size<sizeof(NativeAndroidMicrophoneSettings), 2 + sizeof(bool)> __Photon_Voice_Unity_NativeAndroidMicrophoneSettingsSizeCheck;
  static_assert(sizeof(NativeAndroidMicrophoneSettings) == 0x3);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
