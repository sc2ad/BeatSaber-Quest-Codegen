// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Photon::Voice::Unity
namespace Photon::Voice::Unity {
}
// Forward declaring namespace: Photon::Voice
namespace Photon::Voice {
  // Forward declaring type: IDeviceEnumerator
  class IDeviceEnumerator;
}
// Completed forward declares
// Type namespace: Photon.Voice.Unity
namespace Photon::Voice::Unity {
  // Forward declaring type: AudioInEnumeratorEx
  class AudioInEnumeratorEx;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::Unity::AudioInEnumeratorEx);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::Unity::AudioInEnumeratorEx*, "Photon.Voice.Unity", "AudioInEnumeratorEx");
// Type namespace: Photon.Voice.Unity
namespace Photon::Voice::Unity {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.Unity.AudioInEnumeratorEx
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class AudioInEnumeratorEx : public ::Il2CppObject {
    public:
    // Nested type: ::Photon::Voice::Unity::AudioInEnumeratorEx::$$c__DisplayClass0_0
    class $$c__DisplayClass0_0;
    // static public System.Boolean IDIsValid(Photon.Voice.IDeviceEnumerator en, System.Int32 id)
    // Offset: 0x1036770
    static bool IDIsValid(::Photon::Voice::IDeviceEnumerator* en, int id);
    // static public System.String NameAtIndex(Photon.Voice.IDeviceEnumerator en, System.Int32 index)
    // Offset: 0x1036834
    static ::StringW NameAtIndex(::Photon::Voice::IDeviceEnumerator* en, int index);
    // static public System.Int32 IDAtIndex(Photon.Voice.IDeviceEnumerator en, System.Int32 index)
    // Offset: 0x10368A8
    static int IDAtIndex(::Photon::Voice::IDeviceEnumerator* en, int index);
  }; // Photon.Voice.Unity.AudioInEnumeratorEx
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::Unity::AudioInEnumeratorEx::IDIsValid
// Il2CppName: IDIsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Voice::IDeviceEnumerator*, int)>(&Photon::Voice::Unity::AudioInEnumeratorEx::IDIsValid)> {
  static const MethodInfo* get() {
    static auto* en = &::il2cpp_utils::GetClassFromName("Photon.Voice", "IDeviceEnumerator")->byval_arg;
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::AudioInEnumeratorEx*), "IDIsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{en, id});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::AudioInEnumeratorEx::NameAtIndex
// Il2CppName: NameAtIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::Photon::Voice::IDeviceEnumerator*, int)>(&Photon::Voice::Unity::AudioInEnumeratorEx::NameAtIndex)> {
  static const MethodInfo* get() {
    static auto* en = &::il2cpp_utils::GetClassFromName("Photon.Voice", "IDeviceEnumerator")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::AudioInEnumeratorEx*), "NameAtIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{en, index});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::AudioInEnumeratorEx::IDAtIndex
// Il2CppName: IDAtIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Photon::Voice::IDeviceEnumerator*, int)>(&Photon::Voice::Unity::AudioInEnumeratorEx::IDAtIndex)> {
  static const MethodInfo* get() {
    static auto* en = &::il2cpp_utils::GetClassFromName("Photon.Voice", "IDeviceEnumerator")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::AudioInEnumeratorEx*), "IDAtIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{en, index});
  }
};
