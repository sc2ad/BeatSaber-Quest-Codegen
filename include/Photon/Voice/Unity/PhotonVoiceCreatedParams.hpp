// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Photon::Voice
namespace Photon::Voice {
  // Forward declaring type: LocalVoice
  class LocalVoice;
  // Forward declaring type: IAudioDesc
  class IAudioDesc;
}
// Completed forward declares
// Type namespace: Photon.Voice.Unity
namespace Photon::Voice::Unity {
  // Forward declaring type: PhotonVoiceCreatedParams
  class PhotonVoiceCreatedParams;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::Unity::PhotonVoiceCreatedParams);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::Unity::PhotonVoiceCreatedParams*, "Photon.Voice.Unity", "PhotonVoiceCreatedParams");
// Type namespace: Photon.Voice.Unity
namespace Photon::Voice::Unity {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.Unity.PhotonVoiceCreatedParams
  // [TokenAttribute] Offset: FFFFFFFF
  class PhotonVoiceCreatedParams : public ::Il2CppObject {
    public:
    public:
    // private Photon.Voice.LocalVoice <Voice>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::Photon::Voice::LocalVoice* Voice;
    // Field size check
    static_assert(sizeof(::Photon::Voice::LocalVoice*) == 0x8);
    // private Photon.Voice.IAudioDesc <AudioDesc>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::Photon::Voice::IAudioDesc* AudioDesc;
    // Field size check
    static_assert(sizeof(::Photon::Voice::IAudioDesc*) == 0x8);
    public:
    // Get instance field reference: private Photon.Voice.LocalVoice <Voice>k__BackingField
    [[deprecated("Use field access instead!")]] ::Photon::Voice::LocalVoice*& dyn_$Voice$k__BackingField();
    // Get instance field reference: private Photon.Voice.IAudioDesc <AudioDesc>k__BackingField
    [[deprecated("Use field access instead!")]] ::Photon::Voice::IAudioDesc*& dyn_$AudioDesc$k__BackingField();
    // public Photon.Voice.LocalVoice get_Voice()
    // Offset: 0x1172AFC
    ::Photon::Voice::LocalVoice* get_Voice();
    // public System.Void set_Voice(Photon.Voice.LocalVoice value)
    // Offset: 0x1172B04
    void set_Voice(::Photon::Voice::LocalVoice* value);
    // public Photon.Voice.IAudioDesc get_AudioDesc()
    // Offset: 0x1172B0C
    ::Photon::Voice::IAudioDesc* get_AudioDesc();
    // public System.Void set_AudioDesc(Photon.Voice.IAudioDesc value)
    // Offset: 0x1172B14
    void set_AudioDesc(::Photon::Voice::IAudioDesc* value);
    // public System.Void .ctor()
    // Offset: 0x1172B1C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PhotonVoiceCreatedParams* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PhotonVoiceCreatedParams::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PhotonVoiceCreatedParams*, creationType>()));
    }
  }; // Photon.Voice.Unity.PhotonVoiceCreatedParams
  #pragma pack(pop)
  static check_size<sizeof(PhotonVoiceCreatedParams), 24 + sizeof(::Photon::Voice::IAudioDesc*)> __Photon_Voice_Unity_PhotonVoiceCreatedParamsSizeCheck;
  static_assert(sizeof(PhotonVoiceCreatedParams) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::Unity::PhotonVoiceCreatedParams::get_Voice
// Il2CppName: get_Voice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Voice::LocalVoice* (Photon::Voice::Unity::PhotonVoiceCreatedParams::*)()>(&Photon::Voice::Unity::PhotonVoiceCreatedParams::get_Voice)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::PhotonVoiceCreatedParams*), "get_Voice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::PhotonVoiceCreatedParams::set_Voice
// Il2CppName: set_Voice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::PhotonVoiceCreatedParams::*)(::Photon::Voice::LocalVoice*)>(&Photon::Voice::Unity::PhotonVoiceCreatedParams::set_Voice)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Photon.Voice", "LocalVoice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::PhotonVoiceCreatedParams*), "set_Voice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::PhotonVoiceCreatedParams::get_AudioDesc
// Il2CppName: get_AudioDesc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Voice::IAudioDesc* (Photon::Voice::Unity::PhotonVoiceCreatedParams::*)()>(&Photon::Voice::Unity::PhotonVoiceCreatedParams::get_AudioDesc)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::PhotonVoiceCreatedParams*), "get_AudioDesc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::PhotonVoiceCreatedParams::set_AudioDesc
// Il2CppName: set_AudioDesc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::PhotonVoiceCreatedParams::*)(::Photon::Voice::IAudioDesc*)>(&Photon::Voice::Unity::PhotonVoiceCreatedParams::set_AudioDesc)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Photon.Voice", "IAudioDesc")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::PhotonVoiceCreatedParams*), "set_AudioDesc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::PhotonVoiceCreatedParams::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
