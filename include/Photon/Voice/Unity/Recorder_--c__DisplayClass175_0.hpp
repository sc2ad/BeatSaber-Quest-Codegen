// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.Unity.Recorder
#include "Photon/Voice/Unity/Recorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::Unity::Recorder::$$c__DisplayClass175_0);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::Unity::Recorder::$$c__DisplayClass175_0*, "Photon.Voice.Unity", "Recorder/<>c__DisplayClass175_0");
// Type namespace: Photon.Voice.Unity
namespace Photon::Voice::Unity {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.Unity.Recorder/Photon.Voice.Unity.<>c__DisplayClass175_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class Recorder::$$c__DisplayClass175_0 : public ::Il2CppObject {
    public:
    public:
    // public Photon.Voice.Unity.Recorder <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::Photon::Voice::Unity::Recorder* $$4__this;
    // Field size check
    static_assert(sizeof(::Photon::Voice::Unity::Recorder*) == 0x8);
    // public System.Action`1<System.Single> detectionEndedCallback
    // Size: 0x8
    // Offset: 0x18
    ::System::Action_1<float>* detectionEndedCallback;
    // Field size check
    static_assert(sizeof(::System::Action_1<float>*) == 0x8);
    public:
    // Get instance field reference: public Photon.Voice.Unity.Recorder <>4__this
    [[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Recorder*& dyn_$$4__this();
    // Get instance field reference: public System.Action`1<System.Single> detectionEndedCallback
    [[deprecated("Use field access instead!")]] ::System::Action_1<float>*& dyn_detectionEndedCallback();
    // public System.Void .ctor()
    // Offset: 0x103C844
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Recorder::$$c__DisplayClass175_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::$$c__DisplayClass175_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Recorder::$$c__DisplayClass175_0*, creationType>()));
    }
    // System.Void <VoiceDetectorCalibrate>b__0(System.Single newThreshold)
    // Offset: 0x1040E8C
    void $VoiceDetectorCalibrate$b__0(float newThreshold);
  }; // Photon.Voice.Unity.Recorder/Photon.Voice.Unity.<>c__DisplayClass175_0
  #pragma pack(pop)
  static check_size<sizeof(Recorder::$$c__DisplayClass175_0), 24 + sizeof(::System::Action_1<float>*)> __Photon_Voice_Unity_Recorder_$$c__DisplayClass175_0SizeCheck;
  static_assert(sizeof(Recorder::$$c__DisplayClass175_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::Unity::Recorder::$$c__DisplayClass175_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Voice::Unity::Recorder::$$c__DisplayClass175_0::$VoiceDetectorCalibrate$b__0
// Il2CppName: <VoiceDetectorCalibrate>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::Recorder::$$c__DisplayClass175_0::*)(float)>(&Photon::Voice::Unity::Recorder::$$c__DisplayClass175_0::$VoiceDetectorCalibrate$b__0)> {
  static const MethodInfo* get() {
    static auto* newThreshold = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::Recorder::$$c__DisplayClass175_0*), "<VoiceDetectorCalibrate>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newThreshold});
  }
};
