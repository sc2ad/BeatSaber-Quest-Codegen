// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Voice.DeviceEnumeratorBase
#include "Photon/Voice/DeviceEnumeratorBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Photon::Voice
namespace Photon::Voice {
  // Forward declaring type: ILogger
  class ILogger;
}
// Completed forward declares
// Type namespace: Photon.Voice.Unity
namespace Photon::Voice::Unity {
  // Forward declaring type: AudioInEnumerator
  class AudioInEnumerator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Voice::Unity::AudioInEnumerator);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Voice::Unity::AudioInEnumerator*, "Photon.Voice.Unity", "AudioInEnumerator");
// Type namespace: Photon.Voice.Unity
namespace Photon::Voice::Unity {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Voice.Unity.AudioInEnumerator
  // [TokenAttribute] Offset: FFFFFFFF
  class AudioInEnumerator : public ::Photon::Voice::DeviceEnumeratorBase {
    public:
    // public override System.String get_Error()
    // Offset: 0x116D9B8
    // Implemented from: Photon.Voice.DeviceEnumeratorBase
    // Base method: System.String DeviceEnumeratorBase::get_Error()
    ::StringW get_Error();
    // public System.Void .ctor(Photon.Voice.ILogger logger)
    // Offset: 0x116D828
    // Implemented from: Photon.Voice.DeviceEnumeratorBase
    // Base method: System.Void DeviceEnumeratorBase::.ctor(Photon.Voice.ILogger logger)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AudioInEnumerator* New_ctor(::Photon::Voice::ILogger* logger) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioInEnumerator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AudioInEnumerator*, creationType>(logger)));
    }
    // public override System.Void Refresh()
    // Offset: 0x116D858
    // Implemented from: Photon.Voice.DeviceEnumeratorBase
    // Base method: System.Void DeviceEnumeratorBase::Refresh()
    void Refresh();
    // public override System.Void Dispose()
    // Offset: 0x116D9C0
    // Implemented from: Photon.Voice.DeviceEnumeratorBase
    // Base method: System.Void DeviceEnumeratorBase::Dispose()
    void Dispose();
  }; // Photon.Voice.Unity.AudioInEnumerator
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Voice::Unity::AudioInEnumerator::get_Error
// Il2CppName: get_Error
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Photon::Voice::Unity::AudioInEnumerator::*)()>(&Photon::Voice::Unity::AudioInEnumerator::get_Error)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::AudioInEnumerator*), "get_Error", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::AudioInEnumerator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Voice::Unity::AudioInEnumerator::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::AudioInEnumerator::*)()>(&Photon::Voice::Unity::AudioInEnumerator::Refresh)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::AudioInEnumerator*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Voice::Unity::AudioInEnumerator::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Voice::Unity::AudioInEnumerator::*)()>(&Photon::Voice::Unity::AudioInEnumerator::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Voice::Unity::AudioInEnumerator*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
