// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IDictionary
  class IDictionary;
}
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Completed forward declares
// Type namespace: Photon.Realtime
namespace Photon::Realtime {
  // Forward declaring type: Extensions
  class Extensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Realtime::Extensions);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Realtime::Extensions*, "Photon.Realtime", "Extensions");
// Type namespace: Photon.Realtime
namespace Photon::Realtime {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Realtime.Extensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class Extensions : public ::Il2CppObject {
    public:
    // Get static field: static private readonly System.Collections.Generic.List`1<System.Object> keysWithNullValue
    static ::System::Collections::Generic::List_1<::Il2CppObject*>* _get_keysWithNullValue();
    // Set static field: static private readonly System.Collections.Generic.List`1<System.Object> keysWithNullValue
    static void _set_keysWithNullValue(::System::Collections::Generic::List_1<::Il2CppObject*>* value);
    // static private System.Void .cctor()
    // Offset: 0x132B544
    static void _cctor();
    // static public System.Void Merge(System.Collections.IDictionary target, System.Collections.IDictionary addHash)
    // Offset: 0x1329DBC
    static void Merge(::System::Collections::IDictionary* target, ::System::Collections::IDictionary* addHash);
    // static public System.Void MergeStringKeys(System.Collections.IDictionary target, System.Collections.IDictionary addHash)
    // Offset: 0x132A198
    static void MergeStringKeys(::System::Collections::IDictionary* target, ::System::Collections::IDictionary* addHash);
    // static public System.String ToStringFull(System.Collections.IDictionary origin)
    // Offset: 0x132A590
    static ::StringW ToStringFull(::System::Collections::IDictionary* origin);
    // static public System.String ToStringFull(System.Collections.Generic.List`1<T> data)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::StringW ToStringFull(::System::Collections::Generic::List_1<T>* data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::Extensions::ToStringFull");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Realtime", "Extensions", "ToStringFull", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, data);
    }
    // static public System.String ToStringFull(System.Object[] data)
    // Offset: 0x132A5FC
    static ::StringW ToStringFull(::ArrayW<::Il2CppObject*> data);
    // static public ExitGames.Client.Photon.Hashtable StripToStringKeys(System.Collections.IDictionary original)
    // Offset: 0x132A750
    static ::ExitGames::Client::Photon::Hashtable* StripToStringKeys(::System::Collections::IDictionary* original);
    // static public ExitGames.Client.Photon.Hashtable StripToStringKeys(ExitGames.Client.Photon.Hashtable original)
    // Offset: 0x132AAF8
    static ::ExitGames::Client::Photon::Hashtable* StripToStringKeys(::ExitGames::Client::Photon::Hashtable* original);
    // static public System.Void StripKeysWithNullValues(System.Collections.IDictionary original)
    // Offset: 0x132AC54
    static void StripKeysWithNullValues(::System::Collections::IDictionary* original);
    // static public System.Void StripKeysWithNullValues(ExitGames.Client.Photon.Hashtable original)
    // Offset: 0x132B1A0
    static void StripKeysWithNullValues(::ExitGames::Client::Photon::Hashtable* original);
    // static public System.Boolean Contains(System.Int32[] target, System.Int32 nr)
    // Offset: 0x132B4E8
    static bool Contains(::ArrayW<int> target, int nr);
  }; // Photon.Realtime.Extensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Realtime::Extensions::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Realtime::Extensions::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::Extensions*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::Extensions::Merge
// Il2CppName: Merge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::IDictionary*, ::System::Collections::IDictionary*)>(&Photon::Realtime::Extensions::Merge)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("System.Collections", "IDictionary")->byval_arg;
    static auto* addHash = &::il2cpp_utils::GetClassFromName("System.Collections", "IDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::Extensions*), "Merge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, addHash});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::Extensions::MergeStringKeys
// Il2CppName: MergeStringKeys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::IDictionary*, ::System::Collections::IDictionary*)>(&Photon::Realtime::Extensions::MergeStringKeys)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("System.Collections", "IDictionary")->byval_arg;
    static auto* addHash = &::il2cpp_utils::GetClassFromName("System.Collections", "IDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::Extensions*), "MergeStringKeys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, addHash});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::Extensions::ToStringFull
// Il2CppName: ToStringFull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::System::Collections::IDictionary*)>(&Photon::Realtime::Extensions::ToStringFull)> {
  static const MethodInfo* get() {
    static auto* origin = &::il2cpp_utils::GetClassFromName("System.Collections", "IDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::Extensions*), "ToStringFull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{origin});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::Extensions::ToStringFull
// Il2CppName: ToStringFull
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Photon::Realtime::Extensions::ToStringFull
// Il2CppName: ToStringFull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::ArrayW<::Il2CppObject*>)>(&Photon::Realtime::Extensions::ToStringFull)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::Extensions*), "ToStringFull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::Extensions::StripToStringKeys
// Il2CppName: StripToStringKeys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::Hashtable* (*)(::System::Collections::IDictionary*)>(&Photon::Realtime::Extensions::StripToStringKeys)> {
  static const MethodInfo* get() {
    static auto* original = &::il2cpp_utils::GetClassFromName("System.Collections", "IDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::Extensions*), "StripToStringKeys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{original});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::Extensions::StripToStringKeys
// Il2CppName: StripToStringKeys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::Hashtable* (*)(::ExitGames::Client::Photon::Hashtable*)>(&Photon::Realtime::Extensions::StripToStringKeys)> {
  static const MethodInfo* get() {
    static auto* original = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::Extensions*), "StripToStringKeys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{original});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::Extensions::StripKeysWithNullValues
// Il2CppName: StripKeysWithNullValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::IDictionary*)>(&Photon::Realtime::Extensions::StripKeysWithNullValues)> {
  static const MethodInfo* get() {
    static auto* original = &::il2cpp_utils::GetClassFromName("System.Collections", "IDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::Extensions*), "StripKeysWithNullValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{original});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::Extensions::StripKeysWithNullValues
// Il2CppName: StripKeysWithNullValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ExitGames::Client::Photon::Hashtable*)>(&Photon::Realtime::Extensions::StripKeysWithNullValues)> {
  static const MethodInfo* get() {
    static auto* original = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::Extensions*), "StripKeysWithNullValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{original});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::Extensions::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ArrayW<int>, int)>(&Photon::Realtime::Extensions::Contains)> {
  static const MethodInfo* get() {
    static auto* target = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* nr = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::Extensions*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target, nr});
  }
};
