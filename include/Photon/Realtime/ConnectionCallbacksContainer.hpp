// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.IConnectionCallbacks
#include "Photon/Realtime/IConnectionCallbacks.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Photon::Realtime
namespace Photon::Realtime {
  // Forward declaring type: LoadBalancingClient
  class LoadBalancingClient;
  // Forward declaring type: RegionHandler
  class RegionHandler;
  // Forward declaring type: DisconnectCause
  struct DisconnectCause;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: Photon.Realtime
namespace Photon::Realtime {
  // Forward declaring type: ConnectionCallbacksContainer
  class ConnectionCallbacksContainer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Realtime::ConnectionCallbacksContainer);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Realtime::ConnectionCallbacksContainer*, "Photon.Realtime", "ConnectionCallbacksContainer");
// Type namespace: Photon.Realtime
namespace Photon::Realtime {
  // WARNING Size may be invalid!
  // Autogenerated type: Photon.Realtime.ConnectionCallbacksContainer
  // [TokenAttribute] Offset: FFFFFFFF
  class ConnectionCallbacksContainer : public ::System::Collections::Generic::List_1<::Photon::Realtime::IConnectionCallbacks*>/*, public ::Photon::Realtime::IConnectionCallbacks*/ {
    public:
    public:
    // private readonly Photon.Realtime.LoadBalancingClient client
    // Size: 0x8
    // Offset: 0x28
    ::Photon::Realtime::LoadBalancingClient* client;
    // Field size check
    static_assert(sizeof(::Photon::Realtime::LoadBalancingClient*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Photon::Realtime::IConnectionCallbacks
    operator ::Photon::Realtime::IConnectionCallbacks() noexcept {
      return *reinterpret_cast<::Photon::Realtime::IConnectionCallbacks*>(this);
    }
    // Creating conversion operator: operator ::Photon::Realtime::LoadBalancingClient*
    constexpr operator ::Photon::Realtime::LoadBalancingClient*() const noexcept {
      return client;
    }
    // Get instance field reference: private readonly Photon.Realtime.LoadBalancingClient client
    [[deprecated("Use field access instead!")]] ::Photon::Realtime::LoadBalancingClient*& dyn_client();
    // public System.Void .ctor(Photon.Realtime.LoadBalancingClient client)
    // Offset: 0x1327944
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConnectionCallbacksContainer* New_ctor(::Photon::Realtime::LoadBalancingClient* client) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::ConnectionCallbacksContainer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConnectionCallbacksContainer*, creationType>(client)));
    }
    // public System.Void OnConnected()
    // Offset: 0x13279C8
    void OnConnected();
    // public System.Void OnConnectedToMaster()
    // Offset: 0x1327D94
    void OnConnectedToMaster();
    // public System.Void OnRegionListReceived(Photon.Realtime.RegionHandler regionHandler)
    // Offset: 0x1327F00
    void OnRegionListReceived(::Photon::Realtime::RegionHandler* regionHandler);
    // public System.Void OnDisconnected(Photon.Realtime.DisconnectCause cause)
    // Offset: 0x1328074
    void OnDisconnected(::Photon::Realtime::DisconnectCause cause);
    // public System.Void OnCustomAuthenticationResponse(System.Collections.Generic.Dictionary`2<System.String,System.Object> data)
    // Offset: 0x13281E8
    void OnCustomAuthenticationResponse(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data);
    // public System.Void OnCustomAuthenticationFailed(System.String debugMessage)
    // Offset: 0x132835C
    void OnCustomAuthenticationFailed(::StringW debugMessage);
  }; // Photon.Realtime.ConnectionCallbacksContainer
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Realtime::ConnectionCallbacksContainer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Realtime::ConnectionCallbacksContainer::OnConnected
// Il2CppName: OnConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Realtime::ConnectionCallbacksContainer::*)()>(&Photon::Realtime::ConnectionCallbacksContainer::OnConnected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::ConnectionCallbacksContainer*), "OnConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::ConnectionCallbacksContainer::OnConnectedToMaster
// Il2CppName: OnConnectedToMaster
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Realtime::ConnectionCallbacksContainer::*)()>(&Photon::Realtime::ConnectionCallbacksContainer::OnConnectedToMaster)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::ConnectionCallbacksContainer*), "OnConnectedToMaster", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::ConnectionCallbacksContainer::OnRegionListReceived
// Il2CppName: OnRegionListReceived
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Realtime::ConnectionCallbacksContainer::*)(::Photon::Realtime::RegionHandler*)>(&Photon::Realtime::ConnectionCallbacksContainer::OnRegionListReceived)> {
  static const MethodInfo* get() {
    static auto* regionHandler = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "RegionHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::ConnectionCallbacksContainer*), "OnRegionListReceived", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{regionHandler});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::ConnectionCallbacksContainer::OnDisconnected
// Il2CppName: OnDisconnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Realtime::ConnectionCallbacksContainer::*)(::Photon::Realtime::DisconnectCause)>(&Photon::Realtime::ConnectionCallbacksContainer::OnDisconnected)> {
  static const MethodInfo* get() {
    static auto* cause = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "DisconnectCause")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::ConnectionCallbacksContainer*), "OnDisconnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cause});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::ConnectionCallbacksContainer::OnCustomAuthenticationResponse
// Il2CppName: OnCustomAuthenticationResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Realtime::ConnectionCallbacksContainer::*)(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*)>(&Photon::Realtime::ConnectionCallbacksContainer::OnCustomAuthenticationResponse)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::ConnectionCallbacksContainer*), "OnCustomAuthenticationResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::ConnectionCallbacksContainer::OnCustomAuthenticationFailed
// Il2CppName: OnCustomAuthenticationFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Realtime::ConnectionCallbacksContainer::*)(::StringW)>(&Photon::Realtime::ConnectionCallbacksContainer::OnCustomAuthenticationFailed)> {
  static const MethodInfo* get() {
    static auto* debugMessage = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::ConnectionCallbacksContainer*), "OnCustomAuthenticationFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{debugMessage});
  }
};
