// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Photon.Realtime
namespace Photon::Realtime {
  // Forward declaring type: FindFriendsOptions
  class FindFriendsOptions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Realtime::FindFriendsOptions);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Realtime::FindFriendsOptions*, "Photon.Realtime", "FindFriendsOptions");
// Type namespace: Photon.Realtime
namespace Photon::Realtime {
  // Size: 0x13
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Realtime.FindFriendsOptions
  // [TokenAttribute] Offset: FFFFFFFF
  class FindFriendsOptions : public ::Il2CppObject {
    public:
    public:
    // public System.Boolean CreatedOnGs
    // Size: 0x1
    // Offset: 0x10
    bool CreatedOnGs;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean Visible
    // Size: 0x1
    // Offset: 0x11
    bool Visible;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean Open
    // Size: 0x1
    // Offset: 0x12
    bool Open;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public System.Boolean CreatedOnGs
    [[deprecated("Use field access instead!")]] bool& dyn_CreatedOnGs();
    // Get instance field reference: public System.Boolean Visible
    [[deprecated("Use field access instead!")]] bool& dyn_Visible();
    // Get instance field reference: public System.Boolean Open
    [[deprecated("Use field access instead!")]] bool& dyn_Open();
    // public System.Void .ctor()
    // Offset: 0x132B5E0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FindFriendsOptions* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::FindFriendsOptions::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FindFriendsOptions*, creationType>()));
    }
    // System.Int32 ToIntFlags()
    // Offset: 0x132B5B8
    int ToIntFlags();
  }; // Photon.Realtime.FindFriendsOptions
  #pragma pack(pop)
  static check_size<sizeof(FindFriendsOptions), 18 + sizeof(bool)> __Photon_Realtime_FindFriendsOptionsSizeCheck;
  static_assert(sizeof(FindFriendsOptions) == 0x13);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Realtime::FindFriendsOptions::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Realtime::FindFriendsOptions::ToIntFlags
// Il2CppName: ToIntFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Photon::Realtime::FindFriendsOptions::*)()>(&Photon::Realtime::FindFriendsOptions::ToIntFlags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::FindFriendsOptions*), "ToIntFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
