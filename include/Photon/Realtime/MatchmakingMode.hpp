// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Photon.Realtime
namespace Photon::Realtime {
  // Forward declaring type: MatchmakingMode
  struct MatchmakingMode;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Photon::Realtime::MatchmakingMode, "Photon.Realtime", "MatchmakingMode");
// Type namespace: Photon.Realtime
namespace Photon::Realtime {
  // Size: 0x1
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Realtime.MatchmakingMode
  // [TokenAttribute] Offset: FFFFFFFF
  struct MatchmakingMode/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Byte value__
    // Size: 0x1
    // Offset: 0x0
    uint8_t value;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Creating value type constructor for type: MatchmakingMode
    constexpr MatchmakingMode(uint8_t value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint8_t
    constexpr operator uint8_t() const noexcept {
      return value;
    }
    // static field const value: static public Photon.Realtime.MatchmakingMode FillRoom
    static constexpr const uint8_t FillRoom = 0u;
    // Get static field: static public Photon.Realtime.MatchmakingMode FillRoom
    static ::Photon::Realtime::MatchmakingMode _get_FillRoom();
    // Set static field: static public Photon.Realtime.MatchmakingMode FillRoom
    static void _set_FillRoom(::Photon::Realtime::MatchmakingMode value);
    // static field const value: static public Photon.Realtime.MatchmakingMode SerialMatching
    static constexpr const uint8_t SerialMatching = 1u;
    // Get static field: static public Photon.Realtime.MatchmakingMode SerialMatching
    static ::Photon::Realtime::MatchmakingMode _get_SerialMatching();
    // Set static field: static public Photon.Realtime.MatchmakingMode SerialMatching
    static void _set_SerialMatching(::Photon::Realtime::MatchmakingMode value);
    // static field const value: static public Photon.Realtime.MatchmakingMode RandomMatching
    static constexpr const uint8_t RandomMatching = 2u;
    // Get static field: static public Photon.Realtime.MatchmakingMode RandomMatching
    static ::Photon::Realtime::MatchmakingMode _get_RandomMatching();
    // Set static field: static public Photon.Realtime.MatchmakingMode RandomMatching
    static void _set_RandomMatching(::Photon::Realtime::MatchmakingMode value);
    // Get instance field reference: public System.Byte value__
    [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
  }; // Photon.Realtime.MatchmakingMode
  #pragma pack(pop)
  static check_size<sizeof(MatchmakingMode), 0 + sizeof(uint8_t)> __Photon_Realtime_MatchmakingModeSizeCheck;
  static_assert(sizeof(MatchmakingMode) == 0x1);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
