// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Realtime.LoadBalancingPeer
#include "Photon/Realtime/LoadBalancingPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: ParameterDictionary
  class ParameterDictionary;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Realtime::LoadBalancingPeer::$$c);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Realtime::LoadBalancingPeer::$$c*, "Photon.Realtime", "LoadBalancingPeer/<>c");
// Type namespace: Photon.Realtime
namespace Photon::Realtime {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Realtime.LoadBalancingPeer/Photon.Realtime.<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class LoadBalancingPeer::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly Photon.Realtime.LoadBalancingPeer/Photon.Realtime.<>c <>9
    static ::Photon::Realtime::LoadBalancingPeer::$$c* _get_$$9();
    // Set static field: static public readonly Photon.Realtime.LoadBalancingPeer/Photon.Realtime.<>c <>9
    static void _set_$$9(::Photon::Realtime::LoadBalancingPeer::$$c* value);
    // Get static field: static public System.Func`1<ExitGames.Client.Photon.ParameterDictionary> <>9__4_0
    static ::System::Func_1<::ExitGames::Client::Photon::ParameterDictionary*>* _get_$$9__4_0();
    // Set static field: static public System.Func`1<ExitGames.Client.Photon.ParameterDictionary> <>9__4_0
    static void _set_$$9__4_0(::System::Func_1<::ExitGames::Client::Photon::ParameterDictionary*>* value);
    // Get static field: static public System.Action`1<ExitGames.Client.Photon.ParameterDictionary> <>9__4_1
    static ::System::Action_1<::ExitGames::Client::Photon::ParameterDictionary*>* _get_$$9__4_1();
    // Set static field: static public System.Action`1<ExitGames.Client.Photon.ParameterDictionary> <>9__4_1
    static void _set_$$9__4_1(::System::Action_1<::ExitGames::Client::Photon::ParameterDictionary*>* value);
    // static private System.Void .cctor()
    // Offset: 0x133823C
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x13382A0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LoadBalancingPeer::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::LoadBalancingPeer::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LoadBalancingPeer::$$c*, creationType>()));
    }
    // ExitGames.Client.Photon.ParameterDictionary <.ctor>b__4_0()
    // Offset: 0x13382A8
    ::ExitGames::Client::Photon::ParameterDictionary* $_ctor$b__4_0();
    // System.Void <.ctor>b__4_1(ExitGames.Client.Photon.ParameterDictionary x)
    // Offset: 0x1338304
    void $_ctor$b__4_1(::ExitGames::Client::Photon::ParameterDictionary* x);
  }; // Photon.Realtime.LoadBalancingPeer/Photon.Realtime.<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Realtime::LoadBalancingPeer::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Realtime::LoadBalancingPeer::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::LoadBalancingPeer::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::LoadBalancingPeer::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Realtime::LoadBalancingPeer::$$c::$_ctor$b__4_0
// Il2CppName: <.ctor>b__4_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExitGames::Client::Photon::ParameterDictionary* (Photon::Realtime::LoadBalancingPeer::$$c::*)()>(&Photon::Realtime::LoadBalancingPeer::$$c::$_ctor$b__4_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::LoadBalancingPeer::$$c*), "<.ctor>b__4_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::LoadBalancingPeer::$$c::$_ctor$b__4_1
// Il2CppName: <.ctor>b__4_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Realtime::LoadBalancingPeer::$$c::*)(::ExitGames::Client::Photon::ParameterDictionary*)>(&Photon::Realtime::LoadBalancingPeer::$$c::$_ctor$b__4_1)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "ParameterDictionary")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::LoadBalancingPeer::$$c*), "<.ctor>b__4_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
