// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Completed forward declares
// Type namespace: Photon.Realtime
namespace Photon::Realtime {
  // Forward declaring type: RoomOptions
  class RoomOptions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Realtime::RoomOptions);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Realtime::RoomOptions*, "Photon.Realtime", "RoomOptions");
// Type namespace: Photon.Realtime
namespace Photon::Realtime {
  // Size: 0x3D
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Realtime.RoomOptions
  // [TokenAttribute] Offset: FFFFFFFF
  class RoomOptions : public ::Il2CppObject {
    public:
    public:
    // private System.Boolean isVisible
    // Size: 0x1
    // Offset: 0x10
    bool isVisible;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean isOpen
    // Size: 0x1
    // Offset: 0x11
    bool isOpen;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Byte MaxPlayers
    // Size: 0x1
    // Offset: 0x12
    uint8_t MaxPlayers;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: MaxPlayers and: PlayerTtl
    char __padding2[0x1] = {};
    // public System.Int32 PlayerTtl
    // Size: 0x4
    // Offset: 0x14
    int PlayerTtl;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 EmptyRoomTtl
    // Size: 0x4
    // Offset: 0x18
    int EmptyRoomTtl;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean cleanupCacheOnLeave
    // Size: 0x1
    // Offset: 0x1C
    bool cleanupCacheOnLeave;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: cleanupCacheOnLeave and: CustomRoomProperties
    char __padding5[0x3] = {};
    // public ExitGames.Client.Photon.Hashtable CustomRoomProperties
    // Size: 0x8
    // Offset: 0x20
    ::ExitGames::Client::Photon::Hashtable* CustomRoomProperties;
    // Field size check
    static_assert(sizeof(::ExitGames::Client::Photon::Hashtable*) == 0x8);
    // public System.String[] CustomRoomPropertiesForLobby
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::StringW> CustomRoomPropertiesForLobby;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // public System.String[] Plugins
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<::StringW> Plugins;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // private System.Boolean <SuppressRoomEvents>k__BackingField
    // Size: 0x1
    // Offset: 0x38
    bool SuppressRoomEvents;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <SuppressPlayerInfo>k__BackingField
    // Size: 0x1
    // Offset: 0x39
    bool SuppressPlayerInfo;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <PublishUserId>k__BackingField
    // Size: 0x1
    // Offset: 0x3A
    bool PublishUserId;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean <DeleteNullProperties>k__BackingField
    // Size: 0x1
    // Offset: 0x3B
    bool DeleteNullProperties;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean broadcastPropsChangeToAll
    // Size: 0x1
    // Offset: 0x3C
    bool broadcastPropsChangeToAll;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private System.Boolean isVisible
    [[deprecated("Use field access instead!")]] bool& dyn_isVisible();
    // Get instance field reference: private System.Boolean isOpen
    [[deprecated("Use field access instead!")]] bool& dyn_isOpen();
    // Get instance field reference: public System.Byte MaxPlayers
    [[deprecated("Use field access instead!")]] uint8_t& dyn_MaxPlayers();
    // Get instance field reference: public System.Int32 PlayerTtl
    [[deprecated("Use field access instead!")]] int& dyn_PlayerTtl();
    // Get instance field reference: public System.Int32 EmptyRoomTtl
    [[deprecated("Use field access instead!")]] int& dyn_EmptyRoomTtl();
    // Get instance field reference: private System.Boolean cleanupCacheOnLeave
    [[deprecated("Use field access instead!")]] bool& dyn_cleanupCacheOnLeave();
    // Get instance field reference: public ExitGames.Client.Photon.Hashtable CustomRoomProperties
    [[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::Hashtable*& dyn_CustomRoomProperties();
    // Get instance field reference: public System.String[] CustomRoomPropertiesForLobby
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_CustomRoomPropertiesForLobby();
    // Get instance field reference: public System.String[] Plugins
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_Plugins();
    // Get instance field reference: private System.Boolean <SuppressRoomEvents>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$SuppressRoomEvents$k__BackingField();
    // Get instance field reference: private System.Boolean <SuppressPlayerInfo>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$SuppressPlayerInfo$k__BackingField();
    // Get instance field reference: private System.Boolean <PublishUserId>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$PublishUserId$k__BackingField();
    // Get instance field reference: private System.Boolean <DeleteNullProperties>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$DeleteNullProperties$k__BackingField();
    // Get instance field reference: private System.Boolean broadcastPropsChangeToAll
    [[deprecated("Use field access instead!")]] bool& dyn_broadcastPropsChangeToAll();
    // public System.Boolean get_IsVisible()
    // Offset: 0x1BCDEC0
    bool get_IsVisible();
    // public System.Void set_IsVisible(System.Boolean value)
    // Offset: 0x1BCDEC8
    void set_IsVisible(bool value);
    // public System.Boolean get_IsOpen()
    // Offset: 0x1BCDED4
    bool get_IsOpen();
    // public System.Void set_IsOpen(System.Boolean value)
    // Offset: 0x1BCDEDC
    void set_IsOpen(bool value);
    // public System.Boolean get_CleanupCacheOnLeave()
    // Offset: 0x1BCDEE8
    bool get_CleanupCacheOnLeave();
    // public System.Void set_CleanupCacheOnLeave(System.Boolean value)
    // Offset: 0x1BCDEF0
    void set_CleanupCacheOnLeave(bool value);
    // public System.Boolean get_SuppressRoomEvents()
    // Offset: 0x1BCDEFC
    bool get_SuppressRoomEvents();
    // public System.Void set_SuppressRoomEvents(System.Boolean value)
    // Offset: 0x1BCDF04
    void set_SuppressRoomEvents(bool value);
    // public System.Boolean get_SuppressPlayerInfo()
    // Offset: 0x1BCDF10
    bool get_SuppressPlayerInfo();
    // public System.Void set_SuppressPlayerInfo(System.Boolean value)
    // Offset: 0x1BCDF18
    void set_SuppressPlayerInfo(bool value);
    // public System.Boolean get_PublishUserId()
    // Offset: 0x1BCDF24
    bool get_PublishUserId();
    // public System.Void set_PublishUserId(System.Boolean value)
    // Offset: 0x1BCDF2C
    void set_PublishUserId(bool value);
    // public System.Boolean get_DeleteNullProperties()
    // Offset: 0x1BCDF38
    bool get_DeleteNullProperties();
    // public System.Void set_DeleteNullProperties(System.Boolean value)
    // Offset: 0x1BCDF40
    void set_DeleteNullProperties(bool value);
    // public System.Boolean get_BroadcastPropsChangeToAll()
    // Offset: 0x1BCDF4C
    bool get_BroadcastPropsChangeToAll();
    // public System.Void set_BroadcastPropsChangeToAll(System.Boolean value)
    // Offset: 0x1BCDF54
    void set_BroadcastPropsChangeToAll(bool value);
    // public System.Void .ctor()
    // Offset: 0x1BCDF60
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RoomOptions* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Realtime::RoomOptions::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RoomOptions*, creationType>()));
    }
  }; // Photon.Realtime.RoomOptions
  #pragma pack(pop)
  static check_size<sizeof(RoomOptions), 60 + sizeof(bool)> __Photon_Realtime_RoomOptionsSizeCheck;
  static_assert(sizeof(RoomOptions) == 0x3D);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::get_IsVisible
// Il2CppName: get_IsVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Photon::Realtime::RoomOptions::*)()>(&Photon::Realtime::RoomOptions::get_IsVisible)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::RoomOptions*), "get_IsVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::set_IsVisible
// Il2CppName: set_IsVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Realtime::RoomOptions::*)(bool)>(&Photon::Realtime::RoomOptions::set_IsVisible)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::RoomOptions*), "set_IsVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::get_IsOpen
// Il2CppName: get_IsOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Photon::Realtime::RoomOptions::*)()>(&Photon::Realtime::RoomOptions::get_IsOpen)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::RoomOptions*), "get_IsOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::set_IsOpen
// Il2CppName: set_IsOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Realtime::RoomOptions::*)(bool)>(&Photon::Realtime::RoomOptions::set_IsOpen)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::RoomOptions*), "set_IsOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::get_CleanupCacheOnLeave
// Il2CppName: get_CleanupCacheOnLeave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Photon::Realtime::RoomOptions::*)()>(&Photon::Realtime::RoomOptions::get_CleanupCacheOnLeave)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::RoomOptions*), "get_CleanupCacheOnLeave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::set_CleanupCacheOnLeave
// Il2CppName: set_CleanupCacheOnLeave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Realtime::RoomOptions::*)(bool)>(&Photon::Realtime::RoomOptions::set_CleanupCacheOnLeave)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::RoomOptions*), "set_CleanupCacheOnLeave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::get_SuppressRoomEvents
// Il2CppName: get_SuppressRoomEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Photon::Realtime::RoomOptions::*)()>(&Photon::Realtime::RoomOptions::get_SuppressRoomEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::RoomOptions*), "get_SuppressRoomEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::set_SuppressRoomEvents
// Il2CppName: set_SuppressRoomEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Realtime::RoomOptions::*)(bool)>(&Photon::Realtime::RoomOptions::set_SuppressRoomEvents)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::RoomOptions*), "set_SuppressRoomEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::get_SuppressPlayerInfo
// Il2CppName: get_SuppressPlayerInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Photon::Realtime::RoomOptions::*)()>(&Photon::Realtime::RoomOptions::get_SuppressPlayerInfo)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::RoomOptions*), "get_SuppressPlayerInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::set_SuppressPlayerInfo
// Il2CppName: set_SuppressPlayerInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Realtime::RoomOptions::*)(bool)>(&Photon::Realtime::RoomOptions::set_SuppressPlayerInfo)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::RoomOptions*), "set_SuppressPlayerInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::get_PublishUserId
// Il2CppName: get_PublishUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Photon::Realtime::RoomOptions::*)()>(&Photon::Realtime::RoomOptions::get_PublishUserId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::RoomOptions*), "get_PublishUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::set_PublishUserId
// Il2CppName: set_PublishUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Realtime::RoomOptions::*)(bool)>(&Photon::Realtime::RoomOptions::set_PublishUserId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::RoomOptions*), "set_PublishUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::get_DeleteNullProperties
// Il2CppName: get_DeleteNullProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Photon::Realtime::RoomOptions::*)()>(&Photon::Realtime::RoomOptions::get_DeleteNullProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::RoomOptions*), "get_DeleteNullProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::set_DeleteNullProperties
// Il2CppName: set_DeleteNullProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Realtime::RoomOptions::*)(bool)>(&Photon::Realtime::RoomOptions::set_DeleteNullProperties)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::RoomOptions*), "set_DeleteNullProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::get_BroadcastPropsChangeToAll
// Il2CppName: get_BroadcastPropsChangeToAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Photon::Realtime::RoomOptions::*)()>(&Photon::Realtime::RoomOptions::get_BroadcastPropsChangeToAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::RoomOptions*), "get_BroadcastPropsChangeToAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::set_BroadcastPropsChangeToAll
// Il2CppName: set_BroadcastPropsChangeToAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Realtime::RoomOptions::*)(bool)>(&Photon::Realtime::RoomOptions::set_BroadcastPropsChangeToAll)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::RoomOptions*), "set_BroadcastPropsChangeToAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::RoomOptions::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
