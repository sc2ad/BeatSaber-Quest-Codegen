// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: StreamBuffer
  class StreamBuffer;
}
// Completed forward declares
// Type namespace: Photon.Realtime
namespace Photon::Realtime {
  // Forward declaring type: CustomTypesUnity
  class CustomTypesUnity;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Realtime::CustomTypesUnity);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Realtime::CustomTypesUnity*, "Photon.Realtime", "CustomTypesUnity");
// Type namespace: Photon.Realtime
namespace Photon::Realtime {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Realtime.CustomTypesUnity
  // [TokenAttribute] Offset: FFFFFFFF
  class CustomTypesUnity : public ::Il2CppObject {
    public:
    // static field const value: static private System.Int32 SizeV2
    static constexpr const int SizeV2 = 8;
    // Get static field: static private System.Int32 SizeV2
    static int _get_SizeV2();
    // Set static field: static private System.Int32 SizeV2
    static void _set_SizeV2(int value);
    // static field const value: static private System.Int32 SizeV3
    static constexpr const int SizeV3 = 12;
    // Get static field: static private System.Int32 SizeV3
    static int _get_SizeV3();
    // Set static field: static private System.Int32 SizeV3
    static void _set_SizeV3(int value);
    // static field const value: static private System.Int32 SizeQuat
    static constexpr const int SizeQuat = 16;
    // Get static field: static private System.Int32 SizeQuat
    static int _get_SizeQuat();
    // Set static field: static private System.Int32 SizeQuat
    static void _set_SizeQuat(int value);
    // Get static field: static public readonly System.Byte[] memVector3
    static ::ArrayW<uint8_t> _get_memVector3();
    // Set static field: static public readonly System.Byte[] memVector3
    static void _set_memVector3(::ArrayW<uint8_t> value);
    // Get static field: static public readonly System.Byte[] memVector2
    static ::ArrayW<uint8_t> _get_memVector2();
    // Set static field: static public readonly System.Byte[] memVector2
    static void _set_memVector2(::ArrayW<uint8_t> value);
    // Get static field: static public readonly System.Byte[] memQuarternion
    static ::ArrayW<uint8_t> _get_memQuarternion();
    // Set static field: static public readonly System.Byte[] memQuarternion
    static void _set_memQuarternion(::ArrayW<uint8_t> value);
    // static private System.Void .cctor()
    // Offset: 0x1329A28
    static void _cctor();
    // static System.Void Register()
    // Offset: 0x1328C20
    static void Register();
    // static private System.Int16 SerializeVector3(ExitGames.Client.Photon.StreamBuffer outStream, System.Object customobject)
    // Offset: 0x1328E30
    static int16_t SerializeVector3(::ExitGames::Client::Photon::StreamBuffer* outStream, ::Il2CppObject* customobject);
    // static private System.Object DeserializeVector3(ExitGames.Client.Photon.StreamBuffer inStream, System.Int16 length)
    // Offset: 0x132902C
    static ::Il2CppObject* DeserializeVector3(::ExitGames::Client::Photon::StreamBuffer* inStream, int16_t length);
    // static private System.Int16 SerializeVector2(ExitGames.Client.Photon.StreamBuffer outStream, System.Object customobject)
    // Offset: 0x132922C
    static int16_t SerializeVector2(::ExitGames::Client::Photon::StreamBuffer* outStream, ::Il2CppObject* customobject);
    // static private System.Object DeserializeVector2(ExitGames.Client.Photon.StreamBuffer inStream, System.Int16 length)
    // Offset: 0x13293F8
    static ::Il2CppObject* DeserializeVector2(::ExitGames::Client::Photon::StreamBuffer* inStream, int16_t length);
    // static private System.Int16 SerializeQuaternion(ExitGames.Client.Photon.StreamBuffer outStream, System.Object customobject)
    // Offset: 0x13295DC
    static int16_t SerializeQuaternion(::ExitGames::Client::Photon::StreamBuffer* outStream, ::Il2CppObject* customobject);
    // static private System.Object DeserializeQuaternion(ExitGames.Client.Photon.StreamBuffer inStream, System.Int16 length)
    // Offset: 0x13297E4
    static ::Il2CppObject* DeserializeQuaternion(::ExitGames::Client::Photon::StreamBuffer* inStream, int16_t length);
  }; // Photon.Realtime.CustomTypesUnity
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Realtime::CustomTypesUnity::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Realtime::CustomTypesUnity::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::CustomTypesUnity*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::CustomTypesUnity::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Realtime::CustomTypesUnity::Register)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::CustomTypesUnity*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::CustomTypesUnity::SerializeVector3
// Il2CppName: SerializeVector3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int16_t (*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*)>(&Photon::Realtime::CustomTypesUnity::SerializeVector3)> {
  static const MethodInfo* get() {
    static auto* outStream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* customobject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::CustomTypesUnity*), "SerializeVector3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outStream, customobject});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::CustomTypesUnity::DeserializeVector3
// Il2CppName: DeserializeVector3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::ExitGames::Client::Photon::StreamBuffer*, int16_t)>(&Photon::Realtime::CustomTypesUnity::DeserializeVector3)> {
  static const MethodInfo* get() {
    static auto* inStream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::CustomTypesUnity*), "DeserializeVector3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inStream, length});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::CustomTypesUnity::SerializeVector2
// Il2CppName: SerializeVector2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int16_t (*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*)>(&Photon::Realtime::CustomTypesUnity::SerializeVector2)> {
  static const MethodInfo* get() {
    static auto* outStream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* customobject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::CustomTypesUnity*), "SerializeVector2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outStream, customobject});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::CustomTypesUnity::DeserializeVector2
// Il2CppName: DeserializeVector2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::ExitGames::Client::Photon::StreamBuffer*, int16_t)>(&Photon::Realtime::CustomTypesUnity::DeserializeVector2)> {
  static const MethodInfo* get() {
    static auto* inStream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::CustomTypesUnity*), "DeserializeVector2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inStream, length});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::CustomTypesUnity::SerializeQuaternion
// Il2CppName: SerializeQuaternion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int16_t (*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*)>(&Photon::Realtime::CustomTypesUnity::SerializeQuaternion)> {
  static const MethodInfo* get() {
    static auto* outStream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* customobject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::CustomTypesUnity*), "SerializeQuaternion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outStream, customobject});
  }
};
// Writing MetadataGetter for method: Photon::Realtime::CustomTypesUnity::DeserializeQuaternion
// Il2CppName: DeserializeQuaternion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::ExitGames::Client::Photon::StreamBuffer*, int16_t)>(&Photon::Realtime::CustomTypesUnity::DeserializeQuaternion)> {
  static const MethodInfo* get() {
    static auto* inStream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Realtime::CustomTypesUnity*), "DeserializeQuaternion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inStream, length});
  }
};
