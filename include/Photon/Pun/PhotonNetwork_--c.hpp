// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Pun.PhotonNetwork
#include "Photon/Pun/PhotonNetwork.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: Photon::Realtime
namespace Photon::Realtime {
  // Forward declaring type: Player
  class Player;
  // Forward declaring type: IConnectionCallbacks
  class IConnectionCallbacks;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Pun::PhotonNetwork::$$c);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::PhotonNetwork::$$c*, "Photon.Pun", "PhotonNetwork/<>c");
// Type namespace: Photon.Pun
namespace Photon::Pun {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Pun.PhotonNetwork/Photon.Pun.<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  class PhotonNetwork::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly Photon.Pun.PhotonNetwork/Photon.Pun.<>c <>9
    static ::Photon::Pun::PhotonNetwork::$$c* _get_$$9();
    // Set static field: static public readonly Photon.Pun.PhotonNetwork/Photon.Pun.<>c <>9
    static void _set_$$9(::Photon::Pun::PhotonNetwork::$$c* value);
    // Get static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__47_0
    static ::System::Func_2<::Photon::Realtime::Player*, int>* _get_$$9__47_0();
    // Set static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__47_0
    static void _set_$$9__47_0(::System::Func_2<::Photon::Realtime::Player*, int>* value);
    // Get static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__49_0
    static ::System::Func_2<::Photon::Realtime::Player*, int>* _get_$$9__49_0();
    // Set static field: static public System.Func`2<Photon.Realtime.Player,System.Int32> <>9__49_0
    static void _set_$$9__49_0(::System::Func_2<::Photon::Realtime::Player*, int>* value);
    // Get static field: static public System.Func`2<Photon.Realtime.Player,System.Boolean> <>9__49_1
    static ::System::Func_2<::Photon::Realtime::Player*, bool>* _get_$$9__49_1();
    // Set static field: static public System.Func`2<Photon.Realtime.Player,System.Boolean> <>9__49_1
    static void _set_$$9__49_1(::System::Func_2<::Photon::Realtime::Player*, bool>* value);
    // Get static field: static public System.Func`2<Photon.Realtime.IConnectionCallbacks,System.String> <>9__217_0
    static ::System::Func_2<::Photon::Realtime::IConnectionCallbacks*, ::StringW>* _get_$$9__217_0();
    // Set static field: static public System.Func`2<Photon.Realtime.IConnectionCallbacks,System.String> <>9__217_0
    static void _set_$$9__217_0(::System::Func_2<::Photon::Realtime::IConnectionCallbacks*, ::StringW>* value);
    // static private System.Void .cctor()
    // Offset: 0x1B74BB8
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x1B74C1C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PhotonNetwork::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonNetwork::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PhotonNetwork::$$c*, creationType>()));
    }
    // System.Int32 <get_PlayerList>b__47_0(Photon.Realtime.Player x)
    // Offset: 0x1B74C24
    int $get_PlayerList$b__47_0(::Photon::Realtime::Player* x);
    // System.Int32 <get_PlayerListOthers>b__49_0(Photon.Realtime.Player x)
    // Offset: 0x1B74C3C
    int $get_PlayerListOthers$b__49_0(::Photon::Realtime::Player* x);
    // System.Boolean <get_PlayerListOthers>b__49_1(Photon.Realtime.Player x)
    // Offset: 0x1B74C54
    bool $get_PlayerListOthers$b__49_1(::Photon::Realtime::Player* x);
    // System.String <CallbacksToString>b__217_0(Photon.Realtime.IConnectionCallbacks m)
    // Offset: 0x1B74C74
    ::StringW $CallbacksToString$b__217_0(::Photon::Realtime::IConnectionCallbacks* m);
  }; // Photon.Pun.PhotonNetwork/Photon.Pun.<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::$$c::$get_PlayerList$b__47_0
// Il2CppName: <get_PlayerList>b__47_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Photon::Pun::PhotonNetwork::$$c::*)(::Photon::Realtime::Player*)>(&Photon::Pun::PhotonNetwork::$$c::$get_PlayerList$b__47_0)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork::$$c*), "<get_PlayerList>b__47_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::$$c::$get_PlayerListOthers$b__49_0
// Il2CppName: <get_PlayerListOthers>b__49_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Photon::Pun::PhotonNetwork::$$c::*)(::Photon::Realtime::Player*)>(&Photon::Pun::PhotonNetwork::$$c::$get_PlayerListOthers$b__49_0)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork::$$c*), "<get_PlayerListOthers>b__49_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::$$c::$get_PlayerListOthers$b__49_1
// Il2CppName: <get_PlayerListOthers>b__49_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Photon::Pun::PhotonNetwork::$$c::*)(::Photon::Realtime::Player*)>(&Photon::Pun::PhotonNetwork::$$c::$get_PlayerListOthers$b__49_1)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork::$$c*), "<get_PlayerListOthers>b__49_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::$$c::$CallbacksToString$b__217_0
// Il2CppName: <CallbacksToString>b__217_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Photon::Pun::PhotonNetwork::$$c::*)(::Photon::Realtime::IConnectionCallbacks*)>(&Photon::Pun::PhotonNetwork::$$c::$CallbacksToString$b__217_0)> {
  static const MethodInfo* get() {
    static auto* m = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "IConnectionCallbacks")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork::$$c*), "<CallbacksToString>b__217_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{m});
  }
};
