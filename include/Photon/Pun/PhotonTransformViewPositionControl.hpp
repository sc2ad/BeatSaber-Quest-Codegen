// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Photon::Pun
namespace Photon::Pun {
  // Forward declaring type: PhotonTransformViewPositionModel
  class PhotonTransformViewPositionModel;
  // Forward declaring type: PhotonStream
  class PhotonStream;
  // Forward declaring type: PhotonMessageInfo
  struct PhotonMessageInfo;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Queue`1<T>
  template<typename T>
  class Queue_1;
}
// Completed forward declares
// Type namespace: Photon.Pun
namespace Photon::Pun {
  // Forward declaring type: PhotonTransformViewPositionControl
  class PhotonTransformViewPositionControl;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Pun::PhotonTransformViewPositionControl);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::PhotonTransformViewPositionControl*, "Photon.Pun", "PhotonTransformViewPositionControl");
// Type namespace: Photon.Pun
namespace Photon::Pun {
  // Size: 0x51
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Pun.PhotonTransformViewPositionControl
  // [TokenAttribute] Offset: FFFFFFFF
  class PhotonTransformViewPositionControl : public ::Il2CppObject {
    public:
    public:
    // private Photon.Pun.PhotonTransformViewPositionModel m_Model
    // Size: 0x8
    // Offset: 0x10
    ::Photon::Pun::PhotonTransformViewPositionModel* m_Model;
    // Field size check
    static_assert(sizeof(::Photon::Pun::PhotonTransformViewPositionModel*) == 0x8);
    // private System.Single m_CurrentSpeed
    // Size: 0x4
    // Offset: 0x18
    float m_CurrentSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: m_CurrentSpeed and: m_LastSerializeTime
    char __padding1[0x4] = {};
    // private System.Double m_LastSerializeTime
    // Size: 0x8
    // Offset: 0x20
    double m_LastSerializeTime;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // private UnityEngine.Vector3 m_SynchronizedSpeed
    // Size: 0xC
    // Offset: 0x28
    ::UnityEngine::Vector3 m_SynchronizedSpeed;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single m_SynchronizedTurnSpeed
    // Size: 0x4
    // Offset: 0x34
    float m_SynchronizedTurnSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector3 m_NetworkPosition
    // Size: 0xC
    // Offset: 0x38
    ::UnityEngine::Vector3 m_NetworkPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: m_NetworkPosition and: m_OldNetworkPositions
    char __padding5[0x4] = {};
    // private System.Collections.Generic.Queue`1<UnityEngine.Vector3> m_OldNetworkPositions
    // Size: 0x8
    // Offset: 0x48
    ::System::Collections::Generic::Queue_1<::UnityEngine::Vector3>* m_OldNetworkPositions;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Queue_1<::UnityEngine::Vector3>*) == 0x8);
    // private System.Boolean m_UpdatedPositionAfterOnSerialize
    // Size: 0x1
    // Offset: 0x50
    bool m_UpdatedPositionAfterOnSerialize;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: private Photon.Pun.PhotonTransformViewPositionModel m_Model
    [[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonTransformViewPositionModel*& dyn_m_Model();
    // Get instance field reference: private System.Single m_CurrentSpeed
    [[deprecated("Use field access instead!")]] float& dyn_m_CurrentSpeed();
    // Get instance field reference: private System.Double m_LastSerializeTime
    [[deprecated("Use field access instead!")]] double& dyn_m_LastSerializeTime();
    // Get instance field reference: private UnityEngine.Vector3 m_SynchronizedSpeed
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_SynchronizedSpeed();
    // Get instance field reference: private System.Single m_SynchronizedTurnSpeed
    [[deprecated("Use field access instead!")]] float& dyn_m_SynchronizedTurnSpeed();
    // Get instance field reference: private UnityEngine.Vector3 m_NetworkPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_m_NetworkPosition();
    // Get instance field reference: private System.Collections.Generic.Queue`1<UnityEngine.Vector3> m_OldNetworkPositions
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::UnityEngine::Vector3>*& dyn_m_OldNetworkPositions();
    // Get instance field reference: private System.Boolean m_UpdatedPositionAfterOnSerialize
    [[deprecated("Use field access instead!")]] bool& dyn_m_UpdatedPositionAfterOnSerialize();
    // public System.Void .ctor(Photon.Pun.PhotonTransformViewPositionModel model)
    // Offset: 0x1B7830C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PhotonTransformViewPositionControl* New_ctor(::Photon::Pun::PhotonTransformViewPositionModel* model) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonTransformViewPositionControl::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PhotonTransformViewPositionControl*, creationType>(model)));
    }
    // private UnityEngine.Vector3 GetOldestStoredNetworkPosition()
    // Offset: 0x1B793A8
    ::UnityEngine::Vector3 GetOldestStoredNetworkPosition();
    // public System.Void SetSynchronizedValues(UnityEngine.Vector3 speed, System.Single turnSpeed)
    // Offset: 0x1B78DA8
    void SetSynchronizedValues(::UnityEngine::Vector3 speed, float turnSpeed);
    // public UnityEngine.Vector3 UpdatePosition(UnityEngine.Vector3 currentPosition)
    // Offset: 0x1B78720
    ::UnityEngine::Vector3 UpdatePosition(::UnityEngine::Vector3 currentPosition);
    // public UnityEngine.Vector3 GetNetworkPosition()
    // Offset: 0x1B79720
    ::UnityEngine::Vector3 GetNetworkPosition();
    // public UnityEngine.Vector3 GetExtrapolatedPositionOffset()
    // Offset: 0x1B7941C
    ::UnityEngine::Vector3 GetExtrapolatedPositionOffset();
    // public System.Void OnPhotonSerializeView(UnityEngine.Vector3 currentPosition, Photon.Pun.PhotonStream stream, Photon.Pun.PhotonMessageInfo info)
    // Offset: 0x1B78F68
    void OnPhotonSerializeView(::UnityEngine::Vector3 currentPosition, ::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info);
    // private System.Void SerializeData(UnityEngine.Vector3 currentPosition, Photon.Pun.PhotonStream stream, Photon.Pun.PhotonMessageInfo info)
    // Offset: 0x1B7972C
    void SerializeData(::UnityEngine::Vector3 currentPosition, ::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info);
    // private System.Void DeserializeData(Photon.Pun.PhotonStream stream, Photon.Pun.PhotonMessageInfo info)
    // Offset: 0x1B79844
    void DeserializeData(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info);
  }; // Photon.Pun.PhotonTransformViewPositionControl
  #pragma pack(pop)
  static check_size<sizeof(PhotonTransformViewPositionControl), 80 + sizeof(bool)> __Photon_Pun_PhotonTransformViewPositionControlSizeCheck;
  static_assert(sizeof(PhotonTransformViewPositionControl) == 0x51);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Pun::PhotonTransformViewPositionControl::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Pun::PhotonTransformViewPositionControl::GetOldestStoredNetworkPosition
// Il2CppName: GetOldestStoredNetworkPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Photon::Pun::PhotonTransformViewPositionControl::*)()>(&Photon::Pun::PhotonTransformViewPositionControl::GetOldestStoredNetworkPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonTransformViewPositionControl*), "GetOldestStoredNetworkPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonTransformViewPositionControl::SetSynchronizedValues
// Il2CppName: SetSynchronizedValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::PhotonTransformViewPositionControl::*)(::UnityEngine::Vector3, float)>(&Photon::Pun::PhotonTransformViewPositionControl::SetSynchronizedValues)> {
  static const MethodInfo* get() {
    static auto* speed = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* turnSpeed = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonTransformViewPositionControl*), "SetSynchronizedValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speed, turnSpeed});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonTransformViewPositionControl::UpdatePosition
// Il2CppName: UpdatePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Photon::Pun::PhotonTransformViewPositionControl::*)(::UnityEngine::Vector3)>(&Photon::Pun::PhotonTransformViewPositionControl::UpdatePosition)> {
  static const MethodInfo* get() {
    static auto* currentPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonTransformViewPositionControl*), "UpdatePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{currentPosition});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonTransformViewPositionControl::GetNetworkPosition
// Il2CppName: GetNetworkPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Photon::Pun::PhotonTransformViewPositionControl::*)()>(&Photon::Pun::PhotonTransformViewPositionControl::GetNetworkPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonTransformViewPositionControl*), "GetNetworkPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonTransformViewPositionControl::GetExtrapolatedPositionOffset
// Il2CppName: GetExtrapolatedPositionOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Photon::Pun::PhotonTransformViewPositionControl::*)()>(&Photon::Pun::PhotonTransformViewPositionControl::GetExtrapolatedPositionOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonTransformViewPositionControl*), "GetExtrapolatedPositionOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonTransformViewPositionControl::OnPhotonSerializeView
// Il2CppName: OnPhotonSerializeView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::PhotonTransformViewPositionControl::*)(::UnityEngine::Vector3, ::Photon::Pun::PhotonStream*, ::Photon::Pun::PhotonMessageInfo)>(&Photon::Pun::PhotonTransformViewPositionControl::OnPhotonSerializeView)> {
  static const MethodInfo* get() {
    static auto* currentPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonStream")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonMessageInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonTransformViewPositionControl*), "OnPhotonSerializeView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{currentPosition, stream, info});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonTransformViewPositionControl::SerializeData
// Il2CppName: SerializeData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::PhotonTransformViewPositionControl::*)(::UnityEngine::Vector3, ::Photon::Pun::PhotonStream*, ::Photon::Pun::PhotonMessageInfo)>(&Photon::Pun::PhotonTransformViewPositionControl::SerializeData)> {
  static const MethodInfo* get() {
    static auto* currentPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* stream = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonStream")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonMessageInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonTransformViewPositionControl*), "SerializeData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{currentPosition, stream, info});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonTransformViewPositionControl::DeserializeData
// Il2CppName: DeserializeData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::PhotonTransformViewPositionControl::*)(::Photon::Pun::PhotonStream*, ::Photon::Pun::PhotonMessageInfo)>(&Photon::Pun::PhotonTransformViewPositionControl::DeserializeData)> {
  static const MethodInfo* get() {
    static auto* stream = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonStream")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonMessageInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonTransformViewPositionControl*), "DeserializeData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stream, info});
  }
};
