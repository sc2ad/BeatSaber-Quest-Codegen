// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Pun.PhotonAnimatorView
#include "Photon/Pun/PhotonAnimatorView.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/Photon.Pun.SynchronizeType
#include "Photon/Pun/PhotonAnimatorView_SynchronizeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Pun::PhotonAnimatorView::SynchronizedLayer);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::PhotonAnimatorView::SynchronizedLayer*, "Photon.Pun", "PhotonAnimatorView/SynchronizedLayer");
// Type namespace: Photon.Pun
namespace Photon::Pun {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Pun.PhotonAnimatorView/Photon.Pun.SynchronizedLayer
  // [TokenAttribute] Offset: FFFFFFFF
  class PhotonAnimatorView::SynchronizedLayer : public ::Il2CppObject {
    public:
    public:
    // public Photon.Pun.PhotonAnimatorView/Photon.Pun.SynchronizeType SynchronizeType
    // Size: 0x4
    // Offset: 0x10
    ::Photon::Pun::PhotonAnimatorView::SynchronizeType SynchronizeType;
    // Field size check
    static_assert(sizeof(::Photon::Pun::PhotonAnimatorView::SynchronizeType) == 0x4);
    // public System.Int32 LayerIndex
    // Size: 0x4
    // Offset: 0x14
    int LayerIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public Photon.Pun.PhotonAnimatorView/Photon.Pun.SynchronizeType SynchronizeType
    [[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonAnimatorView::SynchronizeType& dyn_SynchronizeType();
    // Get instance field reference: public System.Int32 LayerIndex
    [[deprecated("Use field access instead!")]] int& dyn_LayerIndex();
    // public System.Void .ctor()
    // Offset: 0x1083654
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PhotonAnimatorView::SynchronizedLayer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizedLayer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PhotonAnimatorView::SynchronizedLayer*, creationType>()));
    }
  }; // Photon.Pun.PhotonAnimatorView/Photon.Pun.SynchronizedLayer
  #pragma pack(pop)
  static check_size<sizeof(PhotonAnimatorView::SynchronizedLayer), 20 + sizeof(int)> __Photon_Pun_PhotonAnimatorView_SynchronizedLayerSizeCheck;
  static_assert(sizeof(PhotonAnimatorView::SynchronizedLayer) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Pun::PhotonAnimatorView::SynchronizedLayer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
