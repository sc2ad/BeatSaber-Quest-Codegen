// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Pun.MonoBehaviourPunCallbacks
#include "Photon/Pun/MonoBehaviourPunCallbacks.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: Photon::Realtime
namespace Photon::Realtime {
  // Forward declaring type: Player
  class Player;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Completed forward declares
// Type namespace: Photon.Pun.UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Forward declaring type: PunTeams
  class PunTeams;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Pun::UtilityScripts::PunTeams);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::UtilityScripts::PunTeams*, "Photon.Pun.UtilityScripts", "PunTeams");
// Type namespace: Photon.Pun.UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Pun.UtilityScripts.PunTeams
  // [TokenAttribute] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: 99216C
  class PunTeams : public ::Photon::Pun::MonoBehaviourPunCallbacks {
    public:
    // Nested type: ::Photon::Pun::UtilityScripts::PunTeams::Team
    struct Team;
    // Size: 0x1
    #pragma pack(push, 1)
    // Autogenerated type: Photon.Pun.UtilityScripts.PunTeams/Photon.Pun.UtilityScripts.Team
    // [TokenAttribute] Offset: FFFFFFFF
    // [ObsoleteAttribute] Offset: 9923D8
    struct Team/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Byte value__
      // Size: 0x1
      // Offset: 0x0
      uint8_t value;
      // Field size check
      static_assert(sizeof(uint8_t) == 0x1);
      public:
      // Creating value type constructor for type: Team
      constexpr Team(uint8_t value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator uint8_t
      constexpr operator uint8_t() const noexcept {
        return value;
      }
      // static field const value: static public Photon.Pun.UtilityScripts.PunTeams/Photon.Pun.UtilityScripts.Team none
      static constexpr const uint8_t none = 0u;
      // Get static field: static public Photon.Pun.UtilityScripts.PunTeams/Photon.Pun.UtilityScripts.Team none
      static ::Photon::Pun::UtilityScripts::PunTeams::Team _get_none();
      // Set static field: static public Photon.Pun.UtilityScripts.PunTeams/Photon.Pun.UtilityScripts.Team none
      static void _set_none(::Photon::Pun::UtilityScripts::PunTeams::Team value);
      // static field const value: static public Photon.Pun.UtilityScripts.PunTeams/Photon.Pun.UtilityScripts.Team red
      static constexpr const uint8_t red = 1u;
      // Get static field: static public Photon.Pun.UtilityScripts.PunTeams/Photon.Pun.UtilityScripts.Team red
      static ::Photon::Pun::UtilityScripts::PunTeams::Team _get_red();
      // Set static field: static public Photon.Pun.UtilityScripts.PunTeams/Photon.Pun.UtilityScripts.Team red
      static void _set_red(::Photon::Pun::UtilityScripts::PunTeams::Team value);
      // static field const value: static public Photon.Pun.UtilityScripts.PunTeams/Photon.Pun.UtilityScripts.Team blue
      static constexpr const uint8_t blue = 2u;
      // Get static field: static public Photon.Pun.UtilityScripts.PunTeams/Photon.Pun.UtilityScripts.Team blue
      static ::Photon::Pun::UtilityScripts::PunTeams::Team _get_blue();
      // Set static field: static public Photon.Pun.UtilityScripts.PunTeams/Photon.Pun.UtilityScripts.Team blue
      static void _set_blue(::Photon::Pun::UtilityScripts::PunTeams::Team value);
      // Get instance field reference: public System.Byte value__
      [[deprecated("Use field access instead!")]] uint8_t& dyn_value__();
    }; // Photon.Pun.UtilityScripts.PunTeams/Photon.Pun.UtilityScripts.Team
    #pragma pack(pop)
    static check_size<sizeof(PunTeams::Team), 0 + sizeof(uint8_t)> __Photon_Pun_UtilityScripts_PunTeams_TeamSizeCheck;
    static_assert(sizeof(PunTeams::Team) == 0x1);
    // [ObsoleteAttribute] Offset: 0x9924D0
    // Get static field: static public System.Collections.Generic.Dictionary`2<Photon.Pun.UtilityScripts.PunTeams/Photon.Pun.UtilityScripts.Team,System.Collections.Generic.List`1<Photon.Realtime.Player>> PlayersPerTeam
    static ::System::Collections::Generic::Dictionary_2<::Photon::Pun::UtilityScripts::PunTeams::Team, ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*>* _get_PlayersPerTeam();
    // Set static field: static public System.Collections.Generic.Dictionary`2<Photon.Pun.UtilityScripts.PunTeams/Photon.Pun.UtilityScripts.Team,System.Collections.Generic.List`1<Photon.Realtime.Player>> PlayersPerTeam
    static void _set_PlayersPerTeam(::System::Collections::Generic::Dictionary_2<::Photon::Pun::UtilityScripts::PunTeams::Team, ::System::Collections::Generic::List_1<::Photon::Realtime::Player*>*>* value);
    // [ObsoleteAttribute] Offset: 0x992508
    // static field const value: static public System.String TeamPlayerProp
    static constexpr const char* TeamPlayerProp = "team";
    // Get static field: static public System.String TeamPlayerProp
    static ::StringW _get_TeamPlayerProp();
    // Set static field: static public System.String TeamPlayerProp
    static void _set_TeamPlayerProp(::StringW value);
    // public System.Void .ctor()
    // Offset: 0x1656140
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PunTeams* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PunTeams::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PunTeams*, creationType>()));
    }
    // public System.Void Start()
    // Offset: 0x1655938
    void Start();
    // public System.Void UpdateTeams()
    // Offset: 0x1655CA0
    void UpdateTeams();
    // public override System.Void OnDisable()
    // Offset: 0x1655C84
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnDisable()
    void OnDisable();
    // public override System.Void OnJoinedRoom()
    // Offset: 0x1655C9C
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnJoinedRoom()
    void OnJoinedRoom();
    // public override System.Void OnLeftRoom()
    // Offset: 0x1656074
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnLeftRoom()
    void OnLeftRoom();
    // public override System.Void OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
    // Offset: 0x1656078
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
    void OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps);
    // public override System.Void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
    // Offset: 0x165607C
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
    void OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer);
    // public override System.Void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
    // Offset: 0x1656080
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
    void OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer);
  }; // Photon.Pun.UtilityScripts.PunTeams
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::UtilityScripts::PunTeams::Team, "Photon.Pun.UtilityScripts", "PunTeams/Team");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PunTeams::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PunTeams::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PunTeams::*)()>(&Photon::Pun::UtilityScripts::PunTeams::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PunTeams*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PunTeams::UpdateTeams
// Il2CppName: UpdateTeams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PunTeams::*)()>(&Photon::Pun::UtilityScripts::PunTeams::UpdateTeams)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PunTeams*), "UpdateTeams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PunTeams::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PunTeams::*)()>(&Photon::Pun::UtilityScripts::PunTeams::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PunTeams*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PunTeams::OnJoinedRoom
// Il2CppName: OnJoinedRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PunTeams::*)()>(&Photon::Pun::UtilityScripts::PunTeams::OnJoinedRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PunTeams*), "OnJoinedRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PunTeams::OnLeftRoom
// Il2CppName: OnLeftRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PunTeams::*)()>(&Photon::Pun::UtilityScripts::PunTeams::OnLeftRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PunTeams*), "OnLeftRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PunTeams::OnPlayerPropertiesUpdate
// Il2CppName: OnPlayerPropertiesUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PunTeams::*)(::Photon::Realtime::Player*, ::ExitGames::Client::Photon::Hashtable*)>(&Photon::Pun::UtilityScripts::PunTeams::OnPlayerPropertiesUpdate)> {
  static const MethodInfo* get() {
    static auto* targetPlayer = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    static auto* changedProps = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PunTeams*), "OnPlayerPropertiesUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetPlayer, changedProps});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PunTeams::OnPlayerLeftRoom
// Il2CppName: OnPlayerLeftRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PunTeams::*)(::Photon::Realtime::Player*)>(&Photon::Pun::UtilityScripts::PunTeams::OnPlayerLeftRoom)> {
  static const MethodInfo* get() {
    static auto* otherPlayer = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PunTeams*), "OnPlayerLeftRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{otherPlayer});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PunTeams::OnPlayerEnteredRoom
// Il2CppName: OnPlayerEnteredRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PunTeams::*)(::Photon::Realtime::Player*)>(&Photon::Pun::UtilityScripts::PunTeams::OnPlayerEnteredRoom)> {
  static const MethodInfo* get() {
    static auto* newPlayer = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PunTeams*), "OnPlayerEnteredRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newPlayer});
  }
};
