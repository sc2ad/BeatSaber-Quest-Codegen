// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Photon.Realtime.IMatchmakingCallbacks
#include "Photon/Realtime/IMatchmakingCallbacks.hpp"
// Including type: Photon.Realtime.IInRoomCallbacks
#include "Photon/Realtime/IInRoomCallbacks.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
}
// Forward declaring namespace: Photon::Pun::UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Forward declaring type: PhotonTeam
  class PhotonTeam;
}
// Forward declaring namespace: Photon::Realtime
namespace Photon::Realtime {
  // Forward declaring type: Player
  class Player;
  // Forward declaring type: FriendInfo
  class FriendInfo;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: Hashtable
  class Hashtable;
}
// Completed forward declares
// Type namespace: Photon.Pun.UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Forward declaring type: PhotonTeamsManager
  class PhotonTeamsManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Pun::UtilityScripts::PhotonTeamsManager);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::UtilityScripts::PhotonTeamsManager*, "Photon.Pun.UtilityScripts", "PhotonTeamsManager");
// Type namespace: Photon.Pun.UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Pun.UtilityScripts.PhotonTeamsManager
  // [TokenAttribute] Offset: FFFFFFFF
  // [DisallowMultipleComponent] Offset: FFFFFFFF
  class PhotonTeamsManager : public ::UnityEngine::MonoBehaviour/*, public ::Photon::Realtime::IMatchmakingCallbacks, public ::Photon::Realtime::IInRoomCallbacks*/ {
    public:
    public:
    // private System.Collections.Generic.List`1<Photon.Pun.UtilityScripts.PhotonTeam> teamsList
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::Photon::Pun::UtilityScripts::PhotonTeam*>* teamsList;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Photon::Pun::UtilityScripts::PhotonTeam*>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.Byte,Photon.Pun.UtilityScripts.PhotonTeam> teamsByCode
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Pun::UtilityScripts::PhotonTeam*>* teamsByCode;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Pun::UtilityScripts::PhotonTeam*>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.String,Photon.Pun.UtilityScripts.PhotonTeam> teamsByName
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::Dictionary_2<::StringW, ::Photon::Pun::UtilityScripts::PhotonTeam*>* teamsByName;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::Photon::Pun::UtilityScripts::PhotonTeam*>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.Byte,System.Collections.Generic.HashSet`1<Photon.Realtime.Player>> playersPerTeam
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::Dictionary_2<uint8_t, ::System::Collections::Generic::HashSet_1<::Photon::Realtime::Player*>*>* playersPerTeam;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint8_t, ::System::Collections::Generic::HashSet_1<::Photon::Realtime::Player*>*>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Photon::Realtime::IMatchmakingCallbacks
    operator ::Photon::Realtime::IMatchmakingCallbacks() noexcept {
      return *reinterpret_cast<::Photon::Realtime::IMatchmakingCallbacks*>(this);
    }
    // Creating interface conversion operator: operator ::Photon::Realtime::IInRoomCallbacks
    operator ::Photon::Realtime::IInRoomCallbacks() noexcept {
      return *reinterpret_cast<::Photon::Realtime::IInRoomCallbacks*>(this);
    }
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // static field const value: static public System.String TeamPlayerProp
    static constexpr const char* TeamPlayerProp = "_pt";
    // Get static field: static public System.String TeamPlayerProp
    static ::StringW _get_TeamPlayerProp();
    // Set static field: static public System.String TeamPlayerProp
    static void _set_TeamPlayerProp(::StringW value);
    // Get static field: static private System.Action`2<Photon.Realtime.Player,Photon.Pun.UtilityScripts.PhotonTeam> PlayerJoinedTeam
    static ::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* _get_PlayerJoinedTeam();
    // Set static field: static private System.Action`2<Photon.Realtime.Player,Photon.Pun.UtilityScripts.PhotonTeam> PlayerJoinedTeam
    static void _set_PlayerJoinedTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value);
    // Get static field: static private System.Action`2<Photon.Realtime.Player,Photon.Pun.UtilityScripts.PhotonTeam> PlayerLeftTeam
    static ::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* _get_PlayerLeftTeam();
    // Set static field: static private System.Action`2<Photon.Realtime.Player,Photon.Pun.UtilityScripts.PhotonTeam> PlayerLeftTeam
    static void _set_PlayerLeftTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value);
    // Get static field: static private Photon.Pun.UtilityScripts.PhotonTeamsManager instance
    static ::Photon::Pun::UtilityScripts::PhotonTeamsManager* _get_instance();
    // Set static field: static private Photon.Pun.UtilityScripts.PhotonTeamsManager instance
    static void _set_instance(::Photon::Pun::UtilityScripts::PhotonTeamsManager* value);
    // Get instance field reference: private System.Collections.Generic.List`1<Photon.Pun.UtilityScripts.PhotonTeam> teamsList
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Pun::UtilityScripts::PhotonTeam*>*& dyn_teamsList();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.Byte,Photon.Pun.UtilityScripts.PhotonTeam> teamsByCode
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint8_t, ::Photon::Pun::UtilityScripts::PhotonTeam*>*& dyn_teamsByCode();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,Photon.Pun.UtilityScripts.PhotonTeam> teamsByName
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Photon::Pun::UtilityScripts::PhotonTeam*>*& dyn_teamsByName();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.Byte,System.Collections.Generic.HashSet`1<Photon.Realtime.Player>> playersPerTeam
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint8_t, ::System::Collections::Generic::HashSet_1<::Photon::Realtime::Player*>*>*& dyn_playersPerTeam();
    // static public Photon.Pun.UtilityScripts.PhotonTeamsManager get_Instance()
    // Offset: 0x1651EF0
    static ::Photon::Pun::UtilityScripts::PhotonTeamsManager* get_Instance();
    // static public System.Void add_PlayerJoinedTeam(System.Action`2<Photon.Realtime.Player,Photon.Pun.UtilityScripts.PhotonTeam> value)
    // Offset: 0x1652BE4
    static void add_PlayerJoinedTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value);
    // static public System.Void remove_PlayerJoinedTeam(System.Action`2<Photon.Realtime.Player,Photon.Pun.UtilityScripts.PhotonTeam> value)
    // Offset: 0x1652C98
    static void remove_PlayerJoinedTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value);
    // static public System.Void add_PlayerLeftTeam(System.Action`2<Photon.Realtime.Player,Photon.Pun.UtilityScripts.PhotonTeam> value)
    // Offset: 0x1652D4C
    static void add_PlayerLeftTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value);
    // static public System.Void remove_PlayerLeftTeam(System.Action`2<Photon.Realtime.Player,Photon.Pun.UtilityScripts.PhotonTeam> value)
    // Offset: 0x1652E04
    static void remove_PlayerLeftTeam(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>* value);
    // public System.Void .ctor()
    // Offset: 0x16542F0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PhotonTeamsManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PhotonTeamsManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PhotonTeamsManager*, creationType>()));
    }
    // private System.Void Awake()
    // Offset: 0x1653138
    void Awake();
    // private System.Void OnEnable()
    // Offset: 0x1653220
    void OnEnable();
    // private System.Void OnDisable()
    // Offset: 0x1653288
    void OnDisable();
    // private System.Void Init()
    // Offset: 0x1652EBC
    void Init();
    // private System.Void Photon.Realtime.IMatchmakingCallbacks.OnJoinedRoom()
    // Offset: 0x1653434
    void Photon_Realtime_IMatchmakingCallbacks_OnJoinedRoom();
    // private System.Void Photon.Realtime.IMatchmakingCallbacks.OnLeftRoom()
    // Offset: 0x1653560
    void Photon_Realtime_IMatchmakingCallbacks_OnLeftRoom();
    // private System.Void Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
    // Offset: 0x1653564
    void Photon_Realtime_IInRoomCallbacks_OnPlayerPropertiesUpdate(::Photon::Realtime::Player* targetPlayer, ::ExitGames::Client::Photon::Hashtable* changedProps);
    // private System.Void Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
    // Offset: 0x1653B4C
    void Photon_Realtime_IInRoomCallbacks_OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer);
    // private System.Void Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
    // Offset: 0x1653CB4
    void Photon_Realtime_IInRoomCallbacks_OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer);
    // private System.Void UpdateTeams()
    // Offset: 0x1653438
    void UpdateTeams();
    // private System.Void ClearTeams()
    // Offset: 0x16532F8
    void ClearTeams();
    // public System.Boolean TryGetTeamByCode(System.Byte code, out Photon.Pun.UtilityScripts.PhotonTeam team)
    // Offset: 0x165204C
    bool TryGetTeamByCode(uint8_t code, ByRef<::Photon::Pun::UtilityScripts::PhotonTeam*> team);
    // public System.Boolean TryGetTeamByName(System.String teamName, out Photon.Pun.UtilityScripts.PhotonTeam team)
    // Offset: 0x1652350
    bool TryGetTeamByName(::StringW teamName, ByRef<::Photon::Pun::UtilityScripts::PhotonTeam*> team);
    // public Photon.Pun.UtilityScripts.PhotonTeam[] GetAvailableTeams()
    // Offset: 0x1653F40
    ::ArrayW<::Photon::Pun::UtilityScripts::PhotonTeam*> GetAvailableTeams();
    // public System.Boolean TryGetTeamMembers(System.Byte code, out Photon.Realtime.Player[] members)
    // Offset: 0x1653F98
    bool TryGetTeamMembers(uint8_t code, ByRef<::ArrayW<::Photon::Realtime::Player*>> members);
    // public System.Boolean TryGetTeamMembers(System.String teamName, out Photon.Realtime.Player[] members)
    // Offset: 0x1654148
    bool TryGetTeamMembers(::StringW teamName, ByRef<::ArrayW<::Photon::Realtime::Player*>> members);
    // public System.Boolean TryGetTeamMembers(Photon.Pun.UtilityScripts.PhotonTeam team, out Photon.Realtime.Player[] members)
    // Offset: 0x16541AC
    bool TryGetTeamMembers(::Photon::Pun::UtilityScripts::PhotonTeam* team, ByRef<::ArrayW<::Photon::Realtime::Player*>> members);
    // public System.Boolean TryGetTeamMatesOfPlayer(Photon.Realtime.Player player, out Photon.Realtime.Player[] teamMates)
    // Offset: 0x1652914
    bool TryGetTeamMatesOfPlayer(::Photon::Realtime::Player* player, ByRef<::ArrayW<::Photon::Realtime::Player*>> teamMates);
    // public System.Int32 GetTeamMembersCount(System.Byte code)
    // Offset: 0x16541C4
    int GetTeamMembersCount(uint8_t code);
    // public System.Int32 GetTeamMembersCount(System.String name)
    // Offset: 0x1654294
    int GetTeamMembersCount(::StringW name);
    // public System.Int32 GetTeamMembersCount(Photon.Pun.UtilityScripts.PhotonTeam team)
    // Offset: 0x1654204
    int GetTeamMembersCount(::Photon::Pun::UtilityScripts::PhotonTeam* team);
    // private System.Void Photon.Realtime.IMatchmakingCallbacks.OnFriendListUpdate(System.Collections.Generic.List`1<Photon.Realtime.FriendInfo> friendList)
    // Offset: 0x16542D4
    void Photon_Realtime_IMatchmakingCallbacks_OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList);
    // private System.Void Photon.Realtime.IMatchmakingCallbacks.OnCreatedRoom()
    // Offset: 0x16542D8
    void Photon_Realtime_IMatchmakingCallbacks_OnCreatedRoom();
    // private System.Void Photon.Realtime.IMatchmakingCallbacks.OnCreateRoomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x16542DC
    void Photon_Realtime_IMatchmakingCallbacks_OnCreateRoomFailed(int16_t returnCode, ::StringW message);
    // private System.Void Photon.Realtime.IMatchmakingCallbacks.OnJoinRoomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x16542E0
    void Photon_Realtime_IMatchmakingCallbacks_OnJoinRoomFailed(int16_t returnCode, ::StringW message);
    // private System.Void Photon.Realtime.IMatchmakingCallbacks.OnJoinRandomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x16542E4
    void Photon_Realtime_IMatchmakingCallbacks_OnJoinRandomFailed(int16_t returnCode, ::StringW message);
    // private System.Void Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
    // Offset: 0x16542E8
    void Photon_Realtime_IInRoomCallbacks_OnRoomPropertiesUpdate(::ExitGames::Client::Photon::Hashtable* propertiesThatChanged);
    // private System.Void Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched(Photon.Realtime.Player newMasterClient)
    // Offset: 0x16542EC
    void Photon_Realtime_IInRoomCallbacks_OnMasterClientSwitched(::Photon::Realtime::Player* newMasterClient);
  }; // Photon.Pun.UtilityScripts.PhotonTeamsManager
  #pragma pack(pop)
  static check_size<sizeof(PhotonTeamsManager), 48 + sizeof(::System::Collections::Generic::Dictionary_2<uint8_t, ::System::Collections::Generic::HashSet_1<::Photon::Realtime::Player*>*>*)> __Photon_Pun_UtilityScripts_PhotonTeamsManagerSizeCheck;
  static_assert(sizeof(PhotonTeamsManager) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::get_Instance
// Il2CppName: get_Instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Pun::UtilityScripts::PhotonTeamsManager* (*)()>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::get_Instance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "get_Instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::add_PlayerJoinedTeam
// Il2CppName: add_PlayerJoinedTeam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>*)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::add_PlayerJoinedTeam)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player"), ::il2cpp_utils::GetClassFromName("Photon.Pun.UtilityScripts", "PhotonTeam")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "add_PlayerJoinedTeam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::remove_PlayerJoinedTeam
// Il2CppName: remove_PlayerJoinedTeam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>*)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::remove_PlayerJoinedTeam)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player"), ::il2cpp_utils::GetClassFromName("Photon.Pun.UtilityScripts", "PhotonTeam")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "remove_PlayerJoinedTeam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::add_PlayerLeftTeam
// Il2CppName: add_PlayerLeftTeam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>*)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::add_PlayerLeftTeam)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player"), ::il2cpp_utils::GetClassFromName("Photon.Pun.UtilityScripts", "PhotonTeam")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "add_PlayerLeftTeam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::remove_PlayerLeftTeam
// Il2CppName: remove_PlayerLeftTeam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*>*)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::remove_PlayerLeftTeam)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player"), ::il2cpp_utils::GetClassFromName("Photon.Pun.UtilityScripts", "PhotonTeam")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "remove_PlayerLeftTeam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)()>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)()>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)()>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)()>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::Init)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnJoinedRoom
// Il2CppName: Photon.Realtime.IMatchmakingCallbacks.OnJoinedRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)()>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnJoinedRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "Photon.Realtime.IMatchmakingCallbacks.OnJoinedRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnLeftRoom
// Il2CppName: Photon.Realtime.IMatchmakingCallbacks.OnLeftRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)()>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnLeftRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "Photon.Realtime.IMatchmakingCallbacks.OnLeftRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnPlayerPropertiesUpdate
// Il2CppName: Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(::Photon::Realtime::Player*, ::ExitGames::Client::Photon::Hashtable*)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnPlayerPropertiesUpdate)> {
  static const MethodInfo* get() {
    static auto* targetPlayer = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    static auto* changedProps = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetPlayer, changedProps});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnPlayerLeftRoom
// Il2CppName: Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(::Photon::Realtime::Player*)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnPlayerLeftRoom)> {
  static const MethodInfo* get() {
    static auto* otherPlayer = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{otherPlayer});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnPlayerEnteredRoom
// Il2CppName: Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(::Photon::Realtime::Player*)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnPlayerEnteredRoom)> {
  static const MethodInfo* get() {
    static auto* newPlayer = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newPlayer});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::UpdateTeams
// Il2CppName: UpdateTeams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)()>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::UpdateTeams)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "UpdateTeams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::ClearTeams
// Il2CppName: ClearTeams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)()>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::ClearTeams)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "ClearTeams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamByCode
// Il2CppName: TryGetTeamByCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(uint8_t, ByRef<::Photon::Pun::UtilityScripts::PhotonTeam*>)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamByCode)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* team = &::il2cpp_utils::GetClassFromName("Photon.Pun.UtilityScripts", "PhotonTeam")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "TryGetTeamByCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code, team});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamByName
// Il2CppName: TryGetTeamByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(::StringW, ByRef<::Photon::Pun::UtilityScripts::PhotonTeam*>)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamByName)> {
  static const MethodInfo* get() {
    static auto* teamName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* team = &::il2cpp_utils::GetClassFromName("Photon.Pun.UtilityScripts", "PhotonTeam")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "TryGetTeamByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{teamName, team});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::GetAvailableTeams
// Il2CppName: GetAvailableTeams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Photon::Pun::UtilityScripts::PhotonTeam*> (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)()>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::GetAvailableTeams)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "GetAvailableTeams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers
// Il2CppName: TryGetTeamMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(uint8_t, ByRef<::ArrayW<::Photon::Realtime::Player*>>)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* members = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "TryGetTeamMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code, members});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers
// Il2CppName: TryGetTeamMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(::StringW, ByRef<::ArrayW<::Photon::Realtime::Player*>>)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers)> {
  static const MethodInfo* get() {
    static auto* teamName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* members = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "TryGetTeamMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{teamName, members});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers
// Il2CppName: TryGetTeamMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(::Photon::Pun::UtilityScripts::PhotonTeam*, ByRef<::ArrayW<::Photon::Realtime::Player*>>)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMembers)> {
  static const MethodInfo* get() {
    static auto* team = &::il2cpp_utils::GetClassFromName("Photon.Pun.UtilityScripts", "PhotonTeam")->byval_arg;
    static auto* members = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "TryGetTeamMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{team, members});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMatesOfPlayer
// Il2CppName: TryGetTeamMatesOfPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(::Photon::Realtime::Player*, ByRef<::ArrayW<::Photon::Realtime::Player*>>)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::TryGetTeamMatesOfPlayer)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    static auto* teamMates = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "TryGetTeamMatesOfPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player, teamMates});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount
// Il2CppName: GetTeamMembersCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(uint8_t)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "GetTeamMembersCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount
// Il2CppName: GetTeamMembersCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(::StringW)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "GetTeamMembersCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount
// Il2CppName: GetTeamMembersCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(::Photon::Pun::UtilityScripts::PhotonTeam*)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::GetTeamMembersCount)> {
  static const MethodInfo* get() {
    static auto* team = &::il2cpp_utils::GetClassFromName("Photon.Pun.UtilityScripts", "PhotonTeam")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "GetTeamMembersCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{team});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnFriendListUpdate
// Il2CppName: Photon.Realtime.IMatchmakingCallbacks.OnFriendListUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>*)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnFriendListUpdate)> {
  static const MethodInfo* get() {
    static auto* friendList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Photon.Realtime", "FriendInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "Photon.Realtime.IMatchmakingCallbacks.OnFriendListUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{friendList});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnCreatedRoom
// Il2CppName: Photon.Realtime.IMatchmakingCallbacks.OnCreatedRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)()>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnCreatedRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "Photon.Realtime.IMatchmakingCallbacks.OnCreatedRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnCreateRoomFailed
// Il2CppName: Photon.Realtime.IMatchmakingCallbacks.OnCreateRoomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(int16_t, ::StringW)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnCreateRoomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "Photon.Realtime.IMatchmakingCallbacks.OnCreateRoomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnJoinRoomFailed
// Il2CppName: Photon.Realtime.IMatchmakingCallbacks.OnJoinRoomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(int16_t, ::StringW)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnJoinRoomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "Photon.Realtime.IMatchmakingCallbacks.OnJoinRoomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnJoinRandomFailed
// Il2CppName: Photon.Realtime.IMatchmakingCallbacks.OnJoinRandomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(int16_t, ::StringW)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IMatchmakingCallbacks_OnJoinRandomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "Photon.Realtime.IMatchmakingCallbacks.OnJoinRandomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnRoomPropertiesUpdate
// Il2CppName: Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(::ExitGames::Client::Photon::Hashtable*)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnRoomPropertiesUpdate)> {
  static const MethodInfo* get() {
    static auto* propertiesThatChanged = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertiesThatChanged});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnMasterClientSwitched
// Il2CppName: Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PhotonTeamsManager::*)(::Photon::Realtime::Player*)>(&Photon::Pun::UtilityScripts::PhotonTeamsManager::Photon_Realtime_IInRoomCallbacks_OnMasterClientSwitched)> {
  static const MethodInfo* get() {
    static auto* newMasterClient = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamsManager*), "Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newMasterClient});
  }
};
