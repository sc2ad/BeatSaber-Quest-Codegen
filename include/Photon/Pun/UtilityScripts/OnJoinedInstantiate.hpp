// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Photon.Realtime.IMatchmakingCallbacks
#include "Photon/Realtime/IMatchmakingCallbacks.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Stack`1<T>
  template<typename T>
  class Stack_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: GameObject
  class GameObject;
  // Skipping declaration: Vector3 because it is already included!
  // Skipping declaration: Quaternion because it is already included!
}
// Forward declaring namespace: Photon::Realtime
namespace Photon::Realtime {
  // Forward declaring type: FriendInfo
  class FriendInfo;
}
// Completed forward declares
// Type namespace: Photon.Pun.UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Forward declaring type: OnJoinedInstantiate
  class OnJoinedInstantiate;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Pun::UtilityScripts::OnJoinedInstantiate);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::UtilityScripts::OnJoinedInstantiate*, "Photon.Pun.UtilityScripts", "OnJoinedInstantiate");
// Type namespace: Photon.Pun.UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Pun.UtilityScripts.OnJoinedInstantiate
  // [TokenAttribute] Offset: FFFFFFFF
  class OnJoinedInstantiate : public ::UnityEngine::MonoBehaviour/*, public ::Photon::Realtime::IMatchmakingCallbacks*/ {
    public:
    // Nested type: ::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence
    struct SpawnSequence;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: Photon.Pun.UtilityScripts.OnJoinedInstantiate/Photon.Pun.UtilityScripts.SpawnSequence
    // [TokenAttribute] Offset: FFFFFFFF
    struct SpawnSequence/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: SpawnSequence
      constexpr SpawnSequence(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/Photon.Pun.UtilityScripts.SpawnSequence Connection
      static constexpr const int Connection = 0;
      // Get static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/Photon.Pun.UtilityScripts.SpawnSequence Connection
      static ::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence _get_Connection();
      // Set static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/Photon.Pun.UtilityScripts.SpawnSequence Connection
      static void _set_Connection(::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence value);
      // static field const value: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/Photon.Pun.UtilityScripts.SpawnSequence Random
      static constexpr const int Random = 1;
      // Get static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/Photon.Pun.UtilityScripts.SpawnSequence Random
      static ::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence _get_Random();
      // Set static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/Photon.Pun.UtilityScripts.SpawnSequence Random
      static void _set_Random(::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence value);
      // static field const value: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/Photon.Pun.UtilityScripts.SpawnSequence RoundRobin
      static constexpr const int RoundRobin = 2;
      // Get static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/Photon.Pun.UtilityScripts.SpawnSequence RoundRobin
      static ::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence _get_RoundRobin();
      // Set static field: static public Photon.Pun.UtilityScripts.OnJoinedInstantiate/Photon.Pun.UtilityScripts.SpawnSequence RoundRobin
      static void _set_RoundRobin(::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // Photon.Pun.UtilityScripts.OnJoinedInstantiate/Photon.Pun.UtilityScripts.SpawnSequence
    #pragma pack(pop)
    static check_size<sizeof(OnJoinedInstantiate::SpawnSequence), 0 + sizeof(int)> __Photon_Pun_UtilityScripts_OnJoinedInstantiate_SpawnSequenceSizeCheck;
    static_assert(sizeof(OnJoinedInstantiate::SpawnSequence) == 0x4);
    public:
    // private UnityEngine.Transform SpawnPosition
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Transform* SpawnPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public Photon.Pun.UtilityScripts.OnJoinedInstantiate/Photon.Pun.UtilityScripts.SpawnSequence Sequence
    // Size: 0x4
    // Offset: 0x20
    ::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence Sequence;
    // Field size check
    static_assert(sizeof(::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence) == 0x4);
    // Padding between fields: Sequence and: SpawnPoints
    char __padding1[0x4] = {};
    // public System.Collections.Generic.List`1<UnityEngine.Transform> SpawnPoints
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::List_1<::UnityEngine::Transform*>* SpawnPoints;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Transform*>*) == 0x8);
    // [TooltipAttribute] Offset: 0x9925B8
    // public System.Boolean UseRandomOffset
    // Size: 0x1
    // Offset: 0x30
    bool UseRandomOffset;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: UseRandomOffset and: RandomOffset
    char __padding3[0x3] = {};
    // [TooltipAttribute] Offset: 0x992604
    // [FormerlySerializedAsAttribute] Offset: 0x992604
    // public System.Single RandomOffset
    // Size: 0x4
    // Offset: 0x34
    float RandomOffset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [TooltipAttribute] Offset: 0x992674
    // public System.Boolean ClampY
    // Size: 0x1
    // Offset: 0x38
    bool ClampY;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: ClampY and: PrefabsToInstantiate
    char __padding5[0x7] = {};
    // public System.Collections.Generic.List`1<UnityEngine.GameObject> PrefabsToInstantiate
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* PrefabsToInstantiate;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*) == 0x8);
    // [FormerlySerializedAsAttribute] Offset: 0x9926D0
    // public System.Boolean AutoSpawnObjects
    // Size: 0x1
    // Offset: 0x48
    bool AutoSpawnObjects;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: AutoSpawnObjects and: SpawnedObjects
    char __padding7[0x7] = {};
    // public System.Collections.Generic.Stack`1<UnityEngine.GameObject> SpawnedObjects
    // Size: 0x8
    // Offset: 0x50
    ::System::Collections::Generic::Stack_1<::UnityEngine::GameObject*>* SpawnedObjects;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Stack_1<::UnityEngine::GameObject*>*) == 0x8);
    // protected System.Int32 spawnedAsActorId
    // Size: 0x4
    // Offset: 0x58
    int spawnedAsActorId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // protected System.Int32 lastUsedSpawnPointIndex
    // Size: 0x4
    // Offset: 0x5C
    int lastUsedSpawnPointIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating interface conversion operator: operator ::Photon::Realtime::IMatchmakingCallbacks
    operator ::Photon::Realtime::IMatchmakingCallbacks() noexcept {
      return *reinterpret_cast<::Photon::Realtime::IMatchmakingCallbacks*>(this);
    }
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.Transform SpawnPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_SpawnPosition();
    // Get instance field reference: public Photon.Pun.UtilityScripts.OnJoinedInstantiate/Photon.Pun.UtilityScripts.SpawnSequence Sequence
    [[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence& dyn_Sequence();
    // Get instance field reference: public System.Collections.Generic.List`1<UnityEngine.Transform> SpawnPoints
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& dyn_SpawnPoints();
    // Get instance field reference: public System.Boolean UseRandomOffset
    [[deprecated("Use field access instead!")]] bool& dyn_UseRandomOffset();
    // Get instance field reference: public System.Single RandomOffset
    [[deprecated("Use field access instead!")]] float& dyn_RandomOffset();
    // Get instance field reference: public System.Boolean ClampY
    [[deprecated("Use field access instead!")]] bool& dyn_ClampY();
    // Get instance field reference: public System.Collections.Generic.List`1<UnityEngine.GameObject> PrefabsToInstantiate
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& dyn_PrefabsToInstantiate();
    // Get instance field reference: public System.Boolean AutoSpawnObjects
    [[deprecated("Use field access instead!")]] bool& dyn_AutoSpawnObjects();
    // Get instance field reference: public System.Collections.Generic.Stack`1<UnityEngine.GameObject> SpawnedObjects
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::UnityEngine::GameObject*>*& dyn_SpawnedObjects();
    // Get instance field reference: protected System.Int32 spawnedAsActorId
    [[deprecated("Use field access instead!")]] int& dyn_spawnedAsActorId();
    // Get instance field reference: protected System.Int32 lastUsedSpawnPointIndex
    [[deprecated("Use field access instead!")]] int& dyn_lastUsedSpawnPointIndex();
    // public System.Void .ctor()
    // Offset: 0x164F5F4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OnJoinedInstantiate* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnJoinedInstantiate::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OnJoinedInstantiate*, creationType>()));
    }
    // public System.Void OnEnable()
    // Offset: 0x164ED18
    void OnEnable();
    // public System.Void OnDisable()
    // Offset: 0x164ED80
    void OnDisable();
    // public System.Void OnJoinedRoom()
    // Offset: 0x164EDE8
    void OnJoinedRoom();
    // public System.Void SpawnObjects()
    // Offset: 0x164EE84
    void SpawnObjects();
    // public System.Void DespawnObjects(System.Boolean localOnly)
    // Offset: 0x164F0B8
    void DespawnObjects(bool localOnly);
    // public System.Void OnFriendListUpdate(System.Collections.Generic.List`1<Photon.Realtime.FriendInfo> friendList)
    // Offset: 0x164F1CC
    void OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList);
    // public System.Void OnCreatedRoom()
    // Offset: 0x164F1D0
    void OnCreatedRoom();
    // public System.Void OnCreateRoomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x164F1D4
    void OnCreateRoomFailed(int16_t returnCode, ::StringW message);
    // public System.Void OnJoinRoomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x164F1D8
    void OnJoinRoomFailed(int16_t returnCode, ::StringW message);
    // public System.Void OnJoinRandomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x164F1DC
    void OnJoinRandomFailed(int16_t returnCode, ::StringW message);
    // public System.Void OnLeftRoom()
    // Offset: 0x164F1E0
    void OnLeftRoom();
    // public System.Void GetSpawnPoint(out UnityEngine.Vector3 spawnPos, out UnityEngine.Quaternion spawnRot)
    // Offset: 0x164F1E4
    void GetSpawnPoint(ByRef<::UnityEngine::Vector3> spawnPos, ByRef<::UnityEngine::Quaternion> spawnRot);
    // protected UnityEngine.Transform GetSpawnPoint()
    // Offset: 0x164F3C8
    ::UnityEngine::Transform* GetSpawnPoint();
    // protected UnityEngine.Vector3 GetRandomOffset()
    // Offset: 0x164F52C
    ::UnityEngine::Vector3 GetRandomOffset();
  }; // Photon.Pun.UtilityScripts.OnJoinedInstantiate
  #pragma pack(pop)
  static check_size<sizeof(OnJoinedInstantiate), 92 + sizeof(int)> __Photon_Pun_UtilityScripts_OnJoinedInstantiateSizeCheck;
  static_assert(sizeof(OnJoinedInstantiate) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnSequence, "Photon.Pun.UtilityScripts", "OnJoinedInstantiate/SpawnSequence");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnJoinedInstantiate::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::OnJoinedInstantiate::*)()>(&Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::OnJoinedInstantiate*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::OnJoinedInstantiate::*)()>(&Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::OnJoinedInstantiate*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinedRoom
// Il2CppName: OnJoinedRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::OnJoinedInstantiate::*)()>(&Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinedRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::OnJoinedInstantiate*), "OnJoinedRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnObjects
// Il2CppName: SpawnObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::OnJoinedInstantiate::*)()>(&Photon::Pun::UtilityScripts::OnJoinedInstantiate::SpawnObjects)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::OnJoinedInstantiate*), "SpawnObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnJoinedInstantiate::DespawnObjects
// Il2CppName: DespawnObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::OnJoinedInstantiate::*)(bool)>(&Photon::Pun::UtilityScripts::OnJoinedInstantiate::DespawnObjects)> {
  static const MethodInfo* get() {
    static auto* localOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::OnJoinedInstantiate*), "DespawnObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{localOnly});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnFriendListUpdate
// Il2CppName: OnFriendListUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::OnJoinedInstantiate::*)(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>*)>(&Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnFriendListUpdate)> {
  static const MethodInfo* get() {
    static auto* friendList = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Photon.Realtime", "FriendInfo")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::OnJoinedInstantiate*), "OnFriendListUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{friendList});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnCreatedRoom
// Il2CppName: OnCreatedRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::OnJoinedInstantiate::*)()>(&Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnCreatedRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::OnJoinedInstantiate*), "OnCreatedRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnCreateRoomFailed
// Il2CppName: OnCreateRoomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::OnJoinedInstantiate::*)(int16_t, ::StringW)>(&Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnCreateRoomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::OnJoinedInstantiate*), "OnCreateRoomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinRoomFailed
// Il2CppName: OnJoinRoomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::OnJoinedInstantiate::*)(int16_t, ::StringW)>(&Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinRoomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::OnJoinedInstantiate*), "OnJoinRoomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinRandomFailed
// Il2CppName: OnJoinRandomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::OnJoinedInstantiate::*)(int16_t, ::StringW)>(&Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnJoinRandomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::OnJoinedInstantiate*), "OnJoinRandomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnLeftRoom
// Il2CppName: OnLeftRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::OnJoinedInstantiate::*)()>(&Photon::Pun::UtilityScripts::OnJoinedInstantiate::OnLeftRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::OnJoinedInstantiate*), "OnLeftRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetSpawnPoint
// Il2CppName: GetSpawnPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::OnJoinedInstantiate::*)(ByRef<::UnityEngine::Vector3>, ByRef<::UnityEngine::Quaternion>)>(&Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetSpawnPoint)> {
  static const MethodInfo* get() {
    static auto* spawnPos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    static auto* spawnRot = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::OnJoinedInstantiate*), "GetSpawnPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{spawnPos, spawnRot});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetSpawnPoint
// Il2CppName: GetSpawnPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Photon::Pun::UtilityScripts::OnJoinedInstantiate::*)()>(&Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetSpawnPoint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::OnJoinedInstantiate*), "GetSpawnPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetRandomOffset
// Il2CppName: GetRandomOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Photon::Pun::UtilityScripts::OnJoinedInstantiate::*)()>(&Photon::Pun::UtilityScripts::OnJoinedInstantiate::GetRandomOffset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::OnJoinedInstantiate*), "GetRandomOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
