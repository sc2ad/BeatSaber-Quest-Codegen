// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.EventSystems.IPointerClickHandler
#include "UnityEngine/EventSystems/IPointerClickHandler.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData/UnityEngine.EventSystems.InputButton
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.KeyCode
#include "UnityEngine/KeyCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Skipping declaration: PointerEventData because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: Photon.Pun.UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Forward declaring type: OnClickInstantiate
  class OnClickInstantiate;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Pun::UtilityScripts::OnClickInstantiate);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::UtilityScripts::OnClickInstantiate*, "Photon.Pun.UtilityScripts", "OnClickInstantiate");
// Type namespace: Photon.Pun.UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Pun.UtilityScripts.OnClickInstantiate
  // [TokenAttribute] Offset: FFFFFFFF
  class OnClickInstantiate : public ::UnityEngine::MonoBehaviour/*, public ::UnityEngine::EventSystems::IPointerClickHandler*/ {
    public:
    // Nested type: ::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption
    struct InstantiateOption;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: Photon.Pun.UtilityScripts.OnClickInstantiate/Photon.Pun.UtilityScripts.InstantiateOption
    // [TokenAttribute] Offset: FFFFFFFF
    struct InstantiateOption/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: InstantiateOption
      constexpr InstantiateOption(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public Photon.Pun.UtilityScripts.OnClickInstantiate/Photon.Pun.UtilityScripts.InstantiateOption Mine
      static constexpr const int Mine = 0;
      // Get static field: static public Photon.Pun.UtilityScripts.OnClickInstantiate/Photon.Pun.UtilityScripts.InstantiateOption Mine
      static ::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption _get_Mine();
      // Set static field: static public Photon.Pun.UtilityScripts.OnClickInstantiate/Photon.Pun.UtilityScripts.InstantiateOption Mine
      static void _set_Mine(::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption value);
      // static field const value: static public Photon.Pun.UtilityScripts.OnClickInstantiate/Photon.Pun.UtilityScripts.InstantiateOption Scene
      static constexpr const int Scene = 1;
      // Get static field: static public Photon.Pun.UtilityScripts.OnClickInstantiate/Photon.Pun.UtilityScripts.InstantiateOption Scene
      static ::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption _get_Scene();
      // Set static field: static public Photon.Pun.UtilityScripts.OnClickInstantiate/Photon.Pun.UtilityScripts.InstantiateOption Scene
      static void _set_Scene(::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // Photon.Pun.UtilityScripts.OnClickInstantiate/Photon.Pun.UtilityScripts.InstantiateOption
    #pragma pack(pop)
    static check_size<sizeof(OnClickInstantiate::InstantiateOption), 0 + sizeof(int)> __Photon_Pun_UtilityScripts_OnClickInstantiate_InstantiateOptionSizeCheck;
    static_assert(sizeof(OnClickInstantiate::InstantiateOption) == 0x4);
    public:
    // public UnityEngine.EventSystems.PointerEventData/UnityEngine.EventSystems.InputButton Button
    // Size: 0x4
    // Offset: 0x18
    ::UnityEngine::EventSystems::PointerEventData::InputButton Button;
    // Field size check
    static_assert(sizeof(::UnityEngine::EventSystems::PointerEventData::InputButton) == 0x4);
    // public UnityEngine.KeyCode ModifierKey
    // Size: 0x4
    // Offset: 0x1C
    ::UnityEngine::KeyCode ModifierKey;
    // Field size check
    static_assert(sizeof(::UnityEngine::KeyCode) == 0x4);
    // public UnityEngine.GameObject Prefab
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* Prefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private Photon.Pun.UtilityScripts.OnClickInstantiate/Photon.Pun.UtilityScripts.InstantiateOption InstantiateType
    // Size: 0x4
    // Offset: 0x28
    ::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption InstantiateType;
    // Field size check
    static_assert(sizeof(::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption) == 0x4);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IPointerClickHandler
    operator ::UnityEngine::EventSystems::IPointerClickHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IPointerClickHandler*>(this);
    }
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.EventSystems.PointerEventData/UnityEngine.EventSystems.InputButton Button
    [[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerEventData::InputButton& dyn_Button();
    // Get instance field reference: public UnityEngine.KeyCode ModifierKey
    [[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& dyn_ModifierKey();
    // Get instance field reference: public UnityEngine.GameObject Prefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_Prefab();
    // Get instance field reference: private Photon.Pun.UtilityScripts.OnClickInstantiate/Photon.Pun.UtilityScripts.InstantiateOption InstantiateType
    [[deprecated("Use field access instead!")]] ::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption& dyn_InstantiateType();
    // public System.Void .ctor()
    // Offset: 0x164E7A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OnClickInstantiate* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::OnClickInstantiate::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OnClickInstantiate*, creationType>()));
    }
    // private System.Void UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(UnityEngine.EventSystems.PointerEventData eventData)
    // Offset: 0x164E4C0
    void UnityEngine_EventSystems_IPointerClickHandler_OnPointerClick(::UnityEngine::EventSystems::PointerEventData* eventData);
  }; // Photon.Pun.UtilityScripts.OnClickInstantiate
  #pragma pack(pop)
  static check_size<sizeof(OnClickInstantiate), 40 + sizeof(::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption)> __Photon_Pun_UtilityScripts_OnClickInstantiateSizeCheck;
  static_assert(sizeof(OnClickInstantiate) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::UtilityScripts::OnClickInstantiate::InstantiateOption, "Photon.Pun.UtilityScripts", "OnClickInstantiate/InstantiateOption");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnClickInstantiate::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::OnClickInstantiate::UnityEngine_EventSystems_IPointerClickHandler_OnPointerClick
// Il2CppName: UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::OnClickInstantiate::*)(::UnityEngine::EventSystems::PointerEventData*)>(&Photon::Pun::UtilityScripts::OnClickInstantiate::UnityEngine_EventSystems_IPointerClickHandler_OnPointerClick)> {
  static const MethodInfo* get() {
    static auto* eventData = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::OnClickInstantiate*), "UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventData});
  }
};
