// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.Generic.IComparer`1
#include "System/Collections/Generic/IComparer_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Photon.Pun.UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Forward declaring type: ByteComparer
  class ByteComparer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Pun::UtilityScripts::ByteComparer);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::UtilityScripts::ByteComparer*, "Photon.Pun.UtilityScripts", "ByteComparer");
// Type namespace: Photon.Pun.UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Pun.UtilityScripts.ByteComparer
  // [TokenAttribute] Offset: FFFFFFFF
  class ByteComparer : public ::Il2CppObject/*, public ::System::Collections::Generic::IComparer_1<uint8_t>*/ {
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IComparer_1<uint8_t>
    operator ::System::Collections::Generic::IComparer_1<uint8_t>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IComparer_1<uint8_t>*>(this);
    }
    // public System.Void .ctor()
    // Offset: 0x164A768
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ByteComparer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ByteComparer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ByteComparer*, creationType>()));
    }
    // public System.Int32 Compare(System.Byte x, System.Byte y)
    // Offset: 0x164A748
    int Compare(uint8_t x, uint8_t y);
  }; // Photon.Pun.UtilityScripts.ByteComparer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::ByteComparer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::ByteComparer::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Photon::Pun::UtilityScripts::ByteComparer::*)(uint8_t, uint8_t)>(&Photon::Pun::UtilityScripts::ByteComparer::Compare)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::ByteComparer*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y});
  }
};
