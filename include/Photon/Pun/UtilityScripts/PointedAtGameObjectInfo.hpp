// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: Photon::Pun
namespace Photon::Pun {
  // Forward declaring type: PhotonView
  class PhotonView;
}
// Completed forward declares
// Type namespace: Photon.Pun.UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Forward declaring type: PointedAtGameObjectInfo
  class PointedAtGameObjectInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo*, "Photon.Pun.UtilityScripts", "PointedAtGameObjectInfo");
// Type namespace: Photon.Pun.UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Pun.UtilityScripts.PointedAtGameObjectInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class PointedAtGameObjectInfo : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.UI.Text text
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::UI::Text* text;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // private UnityEngine.Transform focus
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Transform* focus;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get static field: static public Photon.Pun.UtilityScripts.PointedAtGameObjectInfo Instance
    static ::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo* _get_Instance();
    // Set static field: static public Photon.Pun.UtilityScripts.PointedAtGameObjectInfo Instance
    static void _set_Instance(::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo* value);
    // Get instance field reference: public UnityEngine.UI.Text text
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_text();
    // Get instance field reference: private UnityEngine.Transform focus
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_focus();
    // public System.Void .ctor()
    // Offset: 0x1655928
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PointedAtGameObjectInfo* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PointedAtGameObjectInfo*, creationType>()));
    }
    // private System.Void Start()
    // Offset: 0x165574C
    void Start();
    // public System.Void SetFocus(Photon.Pun.PhotonView pv)
    // Offset: 0x164F990
    void SetFocus(::Photon::Pun::PhotonView* pv);
    // public System.Void RemoveFocus(Photon.Pun.PhotonView pv)
    // Offset: 0x164F79C
    void RemoveFocus(::Photon::Pun::PhotonView* pv);
    // private System.Void LateUpdate()
    // Offset: 0x1655854
    void LateUpdate();
  }; // Photon.Pun.UtilityScripts.PointedAtGameObjectInfo
  #pragma pack(pop)
  static check_size<sizeof(PointedAtGameObjectInfo), 32 + sizeof(::UnityEngine::Transform*)> __Photon_Pun_UtilityScripts_PointedAtGameObjectInfoSizeCheck;
  static_assert(sizeof(PointedAtGameObjectInfo) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::*)()>(&Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PointedAtGameObjectInfo*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::SetFocus
// Il2CppName: SetFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::*)(::Photon::Pun::PhotonView*)>(&Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::SetFocus)> {
  static const MethodInfo* get() {
    static auto* pv = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PointedAtGameObjectInfo*), "SetFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pv});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::RemoveFocus
// Il2CppName: RemoveFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::*)(::Photon::Pun::PhotonView*)>(&Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::RemoveFocus)> {
  static const MethodInfo* get() {
    static auto* pv = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PointedAtGameObjectInfo*), "RemoveFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pv});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::*)()>(&Photon::Pun::UtilityScripts::PointedAtGameObjectInfo::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PointedAtGameObjectInfo*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
