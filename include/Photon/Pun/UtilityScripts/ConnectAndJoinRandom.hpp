// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Pun.MonoBehaviourPunCallbacks
#include "Photon/Pun/MonoBehaviourPunCallbacks.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Photon::Realtime
namespace Photon::Realtime {
  // Forward declaring type: DisconnectCause
  struct DisconnectCause;
}
// Completed forward declares
// Type namespace: Photon.Pun.UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Forward declaring type: ConnectAndJoinRandom
  class ConnectAndJoinRandom;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Pun::UtilityScripts::ConnectAndJoinRandom);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::UtilityScripts::ConnectAndJoinRandom*, "Photon.Pun.UtilityScripts", "ConnectAndJoinRandom");
// Type namespace: Photon.Pun.UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Pun.UtilityScripts.ConnectAndJoinRandom
  // [TokenAttribute] Offset: FFFFFFFF
  class ConnectAndJoinRandom : public ::Photon::Pun::MonoBehaviourPunCallbacks {
    public:
    public:
    // public System.Boolean AutoConnect
    // Size: 0x1
    // Offset: 0x20
    bool AutoConnect;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Byte Version
    // Size: 0x1
    // Offset: 0x21
    uint8_t Version;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // [TooltipAttribute] Offset: 0x992540
    // public System.Byte MaxPlayers
    // Size: 0x1
    // Offset: 0x22
    uint8_t MaxPlayers;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: MaxPlayers and: playerTTL
    char __padding2[0x1] = {};
    // public System.Int32 playerTTL
    // Size: 0x4
    // Offset: 0x24
    int playerTTL;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public System.Boolean AutoConnect
    [[deprecated("Use field access instead!")]] bool& dyn_AutoConnect();
    // Get instance field reference: public System.Byte Version
    [[deprecated("Use field access instead!")]] uint8_t& dyn_Version();
    // Get instance field reference: public System.Byte MaxPlayers
    [[deprecated("Use field access instead!")]] uint8_t& dyn_MaxPlayers();
    // Get instance field reference: public System.Int32 playerTTL
    [[deprecated("Use field access instead!")]] int& dyn_playerTTL();
    // public System.Void .ctor()
    // Offset: 0x164B12C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConnectAndJoinRandom* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::UtilityScripts::ConnectAndJoinRandom::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConnectAndJoinRandom*, creationType>()));
    }
    // public System.Void Start()
    // Offset: 0x164ABE0
    void Start();
    // public System.Void ConnectNow()
    // Offset: 0x164ABF0
    void ConnectNow();
    // public override System.Void OnConnectedToMaster()
    // Offset: 0x164ACFC
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnConnectedToMaster()
    void OnConnectedToMaster();
    // public override System.Void OnJoinedLobby()
    // Offset: 0x164ADC0
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnJoinedLobby()
    void OnJoinedLobby();
    // public override System.Void OnJoinRandomFailed(System.Int16 returnCode, System.String message)
    // Offset: 0x164AE84
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnJoinRandomFailed(System.Int16 returnCode, System.String message)
    void OnJoinRandomFailed(int16_t returnCode, ::StringW message);
    // public override System.Void OnDisconnected(Photon.Realtime.DisconnectCause cause)
    // Offset: 0x164AFB4
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnDisconnected(Photon.Realtime.DisconnectCause cause)
    void OnDisconnected(::Photon::Realtime::DisconnectCause cause);
    // public override System.Void OnJoinedRoom()
    // Offset: 0x164B070
    // Implemented from: Photon.Pun.MonoBehaviourPunCallbacks
    // Base method: System.Void MonoBehaviourPunCallbacks::OnJoinedRoom()
    void OnJoinedRoom();
  }; // Photon.Pun.UtilityScripts.ConnectAndJoinRandom
  #pragma pack(pop)
  static check_size<sizeof(ConnectAndJoinRandom), 36 + sizeof(int)> __Photon_Pun_UtilityScripts_ConnectAndJoinRandomSizeCheck;
  static_assert(sizeof(ConnectAndJoinRandom) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::ConnectAndJoinRandom::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::ConnectAndJoinRandom::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::ConnectAndJoinRandom::*)()>(&Photon::Pun::UtilityScripts::ConnectAndJoinRandom::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::ConnectAndJoinRandom*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::ConnectAndJoinRandom::ConnectNow
// Il2CppName: ConnectNow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::ConnectAndJoinRandom::*)()>(&Photon::Pun::UtilityScripts::ConnectAndJoinRandom::ConnectNow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::ConnectAndJoinRandom*), "ConnectNow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnConnectedToMaster
// Il2CppName: OnConnectedToMaster
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::ConnectAndJoinRandom::*)()>(&Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnConnectedToMaster)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::ConnectAndJoinRandom*), "OnConnectedToMaster", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinedLobby
// Il2CppName: OnJoinedLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::ConnectAndJoinRandom::*)()>(&Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinedLobby)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::ConnectAndJoinRandom*), "OnJoinedLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinRandomFailed
// Il2CppName: OnJoinRandomFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::ConnectAndJoinRandom::*)(int16_t, ::StringW)>(&Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinRandomFailed)> {
  static const MethodInfo* get() {
    static auto* returnCode = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::ConnectAndJoinRandom*), "OnJoinRandomFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnCode, message});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnDisconnected
// Il2CppName: OnDisconnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::ConnectAndJoinRandom::*)(::Photon::Realtime::DisconnectCause)>(&Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnDisconnected)> {
  static const MethodInfo* get() {
    static auto* cause = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "DisconnectCause")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::ConnectAndJoinRandom*), "OnDisconnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cause});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinedRoom
// Il2CppName: OnJoinedRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Photon::Pun::UtilityScripts::ConnectAndJoinRandom::*)()>(&Photon::Pun::UtilityScripts::ConnectAndJoinRandom::OnJoinedRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::ConnectAndJoinRandom*), "OnJoinedRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
