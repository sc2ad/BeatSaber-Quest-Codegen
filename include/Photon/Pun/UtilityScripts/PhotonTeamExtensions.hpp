// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Photon::Pun::UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Forward declaring type: PhotonTeam
  class PhotonTeam;
}
// Forward declaring namespace: Photon::Realtime
namespace Photon::Realtime {
  // Forward declaring type: Player
  class Player;
}
// Completed forward declares
// Type namespace: Photon.Pun.UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Forward declaring type: PhotonTeamExtensions
  class PhotonTeamExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Pun::UtilityScripts::PhotonTeamExtensions);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::UtilityScripts::PhotonTeamExtensions*, "Photon.Pun.UtilityScripts", "PhotonTeamExtensions");
// Type namespace: Photon.Pun.UtilityScripts
namespace Photon::Pun::UtilityScripts {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Pun.UtilityScripts.PhotonTeamExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class PhotonTeamExtensions : public ::Il2CppObject {
    public:
    // static public Photon.Pun.UtilityScripts.PhotonTeam GetPhotonTeam(Photon.Realtime.Player player)
    // Offset: 0x1651E10
    static ::Photon::Pun::UtilityScripts::PhotonTeam* GetPhotonTeam(::Photon::Realtime::Player* player);
    // static public System.Boolean JoinTeam(Photon.Realtime.Player player, Photon.Pun.UtilityScripts.PhotonTeam team)
    // Offset: 0x16520BC
    static bool JoinTeam(::Photon::Realtime::Player* player, ::Photon::Pun::UtilityScripts::PhotonTeam* team);
    // static public System.Boolean JoinTeam(Photon.Realtime.Player player, System.Byte teamCode)
    // Offset: 0x1652290
    static bool JoinTeam(::Photon::Realtime::Player* player, uint8_t teamCode);
    // static public System.Boolean JoinTeam(Photon.Realtime.Player player, System.String teamName)
    // Offset: 0x16522F0
    static bool JoinTeam(::Photon::Realtime::Player* player, ::StringW teamName);
    // static public System.Boolean SwitchTeam(Photon.Realtime.Player player, Photon.Pun.UtilityScripts.PhotonTeam team)
    // Offset: 0x16523C0
    static bool SwitchTeam(::Photon::Realtime::Player* player, ::Photon::Pun::UtilityScripts::PhotonTeam* team);
    // static public System.Boolean SwitchTeam(Photon.Realtime.Player player, System.Byte teamCode)
    // Offset: 0x1652670
    static bool SwitchTeam(::Photon::Realtime::Player* player, uint8_t teamCode);
    // static public System.Boolean SwitchTeam(Photon.Realtime.Player player, System.String teamName)
    // Offset: 0x16526D0
    static bool SwitchTeam(::Photon::Realtime::Player* player, ::StringW teamName);
    // static public System.Boolean LeaveCurrentTeam(Photon.Realtime.Player player)
    // Offset: 0x1652730
    static bool LeaveCurrentTeam(::Photon::Realtime::Player* player);
    // static public System.Boolean TryGetTeamMates(Photon.Realtime.Player player, out Photon.Realtime.Player[] teamMates)
    // Offset: 0x16528E0
    static bool TryGetTeamMates(::Photon::Realtime::Player* player, ByRef<::ArrayW<::Photon::Realtime::Player*>> teamMates);
  }; // Photon.Pun.UtilityScripts.PhotonTeamExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamExtensions::GetPhotonTeam
// Il2CppName: GetPhotonTeam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Pun::UtilityScripts::PhotonTeam* (*)(::Photon::Realtime::Player*)>(&Photon::Pun::UtilityScripts::PhotonTeamExtensions::GetPhotonTeam)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamExtensions*), "GetPhotonTeam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam
// Il2CppName: JoinTeam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*)>(&Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    static auto* team = &::il2cpp_utils::GetClassFromName("Photon.Pun.UtilityScripts", "PhotonTeam")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamExtensions*), "JoinTeam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player, team});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam
// Il2CppName: JoinTeam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Realtime::Player*, uint8_t)>(&Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    static auto* teamCode = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamExtensions*), "JoinTeam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player, teamCode});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam
// Il2CppName: JoinTeam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Realtime::Player*, ::StringW)>(&Photon::Pun::UtilityScripts::PhotonTeamExtensions::JoinTeam)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    static auto* teamName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamExtensions*), "JoinTeam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player, teamName});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam
// Il2CppName: SwitchTeam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Realtime::Player*, ::Photon::Pun::UtilityScripts::PhotonTeam*)>(&Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    static auto* team = &::il2cpp_utils::GetClassFromName("Photon.Pun.UtilityScripts", "PhotonTeam")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamExtensions*), "SwitchTeam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player, team});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam
// Il2CppName: SwitchTeam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Realtime::Player*, uint8_t)>(&Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    static auto* teamCode = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamExtensions*), "SwitchTeam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player, teamCode});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam
// Il2CppName: SwitchTeam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Realtime::Player*, ::StringW)>(&Photon::Pun::UtilityScripts::PhotonTeamExtensions::SwitchTeam)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    static auto* teamName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamExtensions*), "SwitchTeam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player, teamName});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamExtensions::LeaveCurrentTeam
// Il2CppName: LeaveCurrentTeam
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Realtime::Player*)>(&Photon::Pun::UtilityScripts::PhotonTeamExtensions::LeaveCurrentTeam)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamExtensions*), "LeaveCurrentTeam", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player});
  }
};
// Writing MetadataGetter for method: Photon::Pun::UtilityScripts::PhotonTeamExtensions::TryGetTeamMates
// Il2CppName: TryGetTeamMates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Realtime::Player*, ByRef<::ArrayW<::Photon::Realtime::Player*>>)>(&Photon::Pun::UtilityScripts::PhotonTeamExtensions::TryGetTeamMates)> {
  static const MethodInfo* get() {
    static auto* player = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    static auto* teamMates = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player"), 1)->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::UtilityScripts::PhotonTeamExtensions*), "TryGetTeamMates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{player, teamMates});
  }
};
