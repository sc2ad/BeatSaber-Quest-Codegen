// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: StreamBuffer
  class StreamBuffer;
}
// Completed forward declares
// Type namespace: Photon.Pun
namespace Photon::Pun {
  // Forward declaring type: CustomTypes
  class CustomTypes;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Pun::CustomTypes);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::CustomTypes*, "Photon.Pun", "CustomTypes");
// Type namespace: Photon.Pun
namespace Photon::Pun {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Pun.CustomTypes
  // [TokenAttribute] Offset: FFFFFFFF
  class CustomTypes : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Byte[] memPlayer
    static ::ArrayW<uint8_t> _get_memPlayer();
    // Set static field: static public readonly System.Byte[] memPlayer
    static void _set_memPlayer(::ArrayW<uint8_t> value);
    // static private System.Void .cctor()
    // Offset: 0x1081B84
    static void _cctor();
    // static System.Void Register()
    // Offset: 0x10815C0
    static void Register();
    // static private System.Int16 SerializePhotonPlayer(ExitGames.Client.Photon.StreamBuffer outStream, System.Object customobject)
    // Offset: 0x10816D0
    static int16_t SerializePhotonPlayer(::ExitGames::Client::Photon::StreamBuffer* outStream, ::Il2CppObject* customobject);
    // static private System.Object DeserializePhotonPlayer(ExitGames.Client.Photon.StreamBuffer inStream, System.Int16 length)
    // Offset: 0x1081898
    static ::Il2CppObject* DeserializePhotonPlayer(::ExitGames::Client::Photon::StreamBuffer* inStream, int16_t length);
  }; // Photon.Pun.CustomTypes
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Pun::CustomTypes::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::CustomTypes::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::CustomTypes*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::CustomTypes::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::CustomTypes::Register)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::CustomTypes*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::CustomTypes::SerializePhotonPlayer
// Il2CppName: SerializePhotonPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int16_t (*)(::ExitGames::Client::Photon::StreamBuffer*, ::Il2CppObject*)>(&Photon::Pun::CustomTypes::SerializePhotonPlayer)> {
  static const MethodInfo* get() {
    static auto* outStream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* customobject = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::CustomTypes*), "SerializePhotonPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outStream, customobject});
  }
};
// Writing MetadataGetter for method: Photon::Pun::CustomTypes::DeserializePhotonPlayer
// Il2CppName: DeserializePhotonPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::ExitGames::Client::Photon::StreamBuffer*, int16_t)>(&Photon::Pun::CustomTypes::DeserializePhotonPlayer)> {
  static const MethodInfo* get() {
    static auto* inStream = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "StreamBuffer")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::CustomTypes*), "DeserializePhotonPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inStream, length});
  }
};
